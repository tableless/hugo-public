<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Daniel Pereira Camargo on Tableless</title>
    <link>https://tableless.github.io/hugo-public/author/daniel-pereira-camargo/index.xml</link>
    <description>Recent content in Daniel Pereira Camargo on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/author/daniel-pereira-camargo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Est√° perdido? Geolocaliza√ß√£o!</title>
      <link>https://tableless.github.io/hugo-public/esta-perdido-geolocalizacao/</link>
      <pubDate>Mon, 22 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/esta-perdido-geolocalizacao/</guid>
      <description>

&lt;p&gt;No passado a localiza√ß√£o dos usu√°rios era baseada em IP. A precis√£o n√£o era l√° grande coisa, pois a posi√ß√£o do usu√°rio era baseada em um &amp;#8220;chute&amp;#8221; de acordo com o seu IP.¬†Gra√ßas ao HTML5 e sua API de Geolocaliza√ß√£o ou Geolocation (j√° falamos sobre isso aqui no artigo &lt;a href=&#34;http://tableless.com.br/creme-de-papaia-e-geolocalizacao/&#34;&gt;Creme de papaia e Geolocaliza√ß√£o&lt;/a&gt;) podemos saber a posi√ß√£o do usu√°rio de forma muito mais precisa e com isso √© poss√≠vel escrever aplica√ß√µes mais √∫teis.&lt;/p&gt;

&lt;h2 id=&#34;suporte-a-geolocaliza√ß√£o&#34;&gt;Suporte a geolocaliza√ß√£o&lt;/h2&gt;

&lt;p&gt;Antes de colocar a m√£o na massa √© importante saber os browsers que d√£o suporte a essa API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Internet Explorer 9 ou superior&lt;/li&gt;
&lt;li&gt;Firefox 3.5 ou superior&lt;/li&gt;
&lt;li&gt;Safari 5.0 ou superior&lt;/li&gt;
&lt;li&gt;Chrome 7.0 ou superior&lt;/li&gt;
&lt;li&gt;Opera 10.6 ou superior&lt;/li&gt;
&lt;li&gt;Safari (iOS) 3.2 ou superior&lt;/li&gt;
&lt;li&gt;Andriod (browser padr√£o do SO) 2.1 ou superior&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;criando-uma-aplica√ß√£o&#34;&gt;Criando uma aplica√ß√£o&lt;/h2&gt;

&lt;p&gt;Um exemplo de aplica√ß√£o dessa API pode ser um site ou uma web app de uma empresa de guincho para carro ou auto socorro.&lt;/p&gt;

&lt;p&gt;Vamos imaginar que o dono dessa empresa quer saber a localiza√ß√£o dos seu clientes. Com essa informa√ß√£o em m√£o ele pode informar inicialmente o cliente se ele atende ou n√£o a regi√£o que o cliente se localiza.&lt;/p&gt;

&lt;h3 id=&#34;etapas-ou-fluxo-da-aplica√ß√£o&#34;&gt;Etapas ou fluxo da aplica√ß√£o&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;O cliente acessa o site da empresa de guincho atrav√©s de seu smartphone (que permita a geolocaliza√ß√£o).&lt;/li&gt;
&lt;li&gt;O site obt√©m a posi√ß√£o do usu√°rio.&lt;/li&gt;
&lt;li&gt;O site verifica se o cliente est√° em uma regi√£o atendida e caso positivo informa ao cliente o pre√ßo do servi√ßo.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;primeiro-passo-8211-pegando-a-posi√ß√£o-do-usu√°rios&#34;&gt;Primeiro passo &amp;#8211; Pegando a posi√ß√£o do usu√°rios&lt;/h2&gt;

&lt;p&gt;Nosso primeiro trecho de c√≥digo √© bem simples: pegamos a posi√ß√£o de latitude e longitude e mostramos essa informa√ß√£o no console.&lt;/p&gt;

&lt;p&gt;Voc√™ pode test√°-lo aqui &lt;a href=&#34;http://jsfiddle.net/pererinha/Mg9T5/&#34;&gt;http://jsfiddle.net/pererinha/Mg9T5/&lt;/a&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function getPosition(){
  // Verifica se o browser do usuario tem suporte a Geolocation
  if ( navigator.geolocation ){
    navigator.geolocation.getCurrentPosition( function( posicao ){
      console.log( posicao.coords.latitude, posicao.coords.longitude );
    } );
  }
}

$( document ).ready( function(){
  getPosition();
} );&lt;/pre&gt;

&lt;p&gt;Primeiro verificamos se o browser do usu√°rio tem suporte a Geolocation. Caso positivo chamamos o m√©todo &lt;strong&gt;navigator.geolocation.getCurrentPosition&lt;/strong&gt; e passamos uma fun√ß√£o an√¥nima como par√¢metro. Se der tudo certo, a API chama essa fun√ß√£o an√¥nima e passa para ela um objeto com as coordenadas do usu√°rio. Mas e algo der errado?&lt;/p&gt;

&lt;h2 id=&#34;segundo-passo-8211-tratando-erros&#34;&gt;Segundo passo &amp;#8211; Tratando erros&lt;/h2&gt;

&lt;p&gt;Agora o nosso c√≥digo ficar√° um pouco mais completo, vamos criar uma fun√ß√£o que ser√° chamada caso a Geolocaliza√ß√£o apresente um erro.&lt;/p&gt;

&lt;p&gt;Para testar: &lt;a href=&#34;http://jsfiddle.net/pererinha/Y49kd/&#34;&gt;http://jsfiddle.net/pererinha/Y49kd/&lt;/a&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function getPosition(){
  // Verifica se o browser do usuario tem suporte a geolocation
  if ( navigator.geolocation ){
    navigator.geolocation.getCurrentPosition( 

    // sucesso! 
    function( posicao ){
      console.log( posicao.coords.latitude, posicao.coords.longitude );
    },

    // erro üôÅ
    function ( erro ){
      var erroDescricao = &#39;Ops, &#39;;
      switch( erro.code ) {
        case erro.PERMISSION_DENIED:
          erroDescricao += &#39;usu√°rio n√£o autorizou a Geolocation.&#39;;
        break;
        case erro.POSITION_UNAVAILABLE:
          erroDescricao += &#39;localiza√ß√£o indispon√≠vel.&#39;;
        break;
        case erro.TIMEOUT:
          erroDescricao += &#39;tempo expirado.&#39;;
        break;
        case erro.UNKNOWN_ERROR:
         erroDescricao += &#39;n√£o sei o que foi, mas deu erro!&#39;;
        break;
      }
      console.log( erroDescricao )
    }
   );
  }
}

$( document ).ready( function(){
  getPosition();
} );&lt;/pre&gt;

&lt;h3 id=&#34;terceiro-passo-8211-juntando-tudo&#34;&gt;Terceiro passo &amp;#8211; Juntando tudo&lt;/h3&gt;

&lt;p&gt;Bom, j√° deu para entender como funciona o tal do Geolocation. Agora vamos organizar melhor esse c√≥digo e come√ßar a utilizar os dados da posi√ß√£o do usu√°rio.&lt;/p&gt;

&lt;p&gt;Olha como ficou o script final. Para testar &lt;a href=&#34;http://jsfiddle.net/pererinha/dKSY5/&#34;&gt;http://jsfiddle.net/pererinha/dKSY5/&lt;/a&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// Objeto oficina com os dados da oficina
var Oficina = {
  posicao : {
    latitude : -25.435946,
    longitude: -49.273365   
  },
  valorPorKM : 5,
  distanciaMaxima : 15,

  // Funcao que ira verificar se o cliente esta por perto e ira calcular o valor do servico
  calculaOPreco : function( posicao ){
  var distancia = Distancia.distanciaEntreDoisPontos( posicao, this.posicao );
  // Verifica se o cliente nao estah muito longe
  if( distancia &amp;lt;= this.distanciaMaxima ){
    // Duas casas decimais e troca o . por ,
    var valor = ( this.valorPorKM * distancia ).toFixed( 2 ).toString().replace( &#39;.&#39;, &#39;,&#39; );
    if ( confirm( &#39;O custo do guincho ser√° R$ &#39; + valor + &#39;. Posso mandar?&#39; ) ){
      alert( &#39;O guincho chegar√° em alguns minutos!&#39; );
    }
  } else {
    // Somente duas cadas decimais ja eh o suficiente
    distancia = distancia.toFixed( 2 );
    alert( &#39;Ops, voc√™ est√° muito longe, a dist√¢ncia m√°xima que atendemos √© &#39; +  this.distanciaMaxima + &#39; KM e voc√™ est√° h√° &#39; + distancia + &#39; KM!&#39; );
  }
  }
};

// Objeto localizacao, aqui estao as funcoes para trabalhar com a api geolocation
var Localizacao = {

  // Inicia
  inicia : function(){

  // Funcao que serah chamada quando o browser retornar a posicao do usuario
  var sucesso = function( posicao ){
    Oficina.calculaOPreco( posicao.coords );
  };

  // Funcao que serah chamada caso de algum erro nesse processo de obter a posicao
  var erro = function( erro ){
    var erroDescricao = &#39;Ops, &#39;;
    switch( erro.code ) {
      case erro.PERMISSION_DENIED:
        erroDescricao += &#39;usu√°rio n√£o autorizou a Geolocation.&#39;;
      break;
      case erro.POSITION_UNAVAILABLE:
        erroDescricao += &#39;localiza√ß√£o indispon√≠vel.&#39;;
      break;
      case erro.TIMEOUT:
        erroDescricao += &#39;tempo expirado.&#39;;
      break;
      case erro.UNKNOWN_ERROR:
        erroDescricao += &#39;n√£o sei o que foi, mas deu erro!&#39;;
      break;
    }
    alert( erroDescricao )
  };

  // Verifica se o browser do usuario tem suporte a geolocation
  if ( navigator.geolocation ){
    navigator.geolocation.getCurrentPosition( sucesso, erro );
  } else {
    erro();
  }
  }
};

// Objeto para calcular a distancia entre dois pontos
var Distancia = {
  distanciaEntreDoisPontos : function( pontoInicial, pontoFinal ){
    var R = 6371; // Radio da Terra
    var dLat = this.graus2Radianos( pontoFinal.latitude - pontoInicial.latitude ); 
    var dLon = this.graus2Radianos( pontoFinal.longitude - pontoInicial.longitude ); 
    var a = Math.sin( dLat/2 ) * Math.sin( dLat/2 ) + Math.cos( this.graus2Radianos( pontoInicial.latitude ) ) * Math.cos( this.graus2Radianos( pontoFinal.latitude ) ) * Math.sin( dLon/2 ) * Math.sin( dLon/2 ); 
    var c = 2 * Math.atan2( Math.sqrt( a ), Math.sqrt( 1-a ) ); 
    var d = R * c; 
    return d;
  },
  graus2Radianos : function( graus ){
    return graus * ( Math.PI/180 )
  }
};

$( document ).ready( function(){
  Localizacao.inicia();
} );&lt;/pre&gt;

&lt;p&gt;Nessa √∫ltima vers√£o o c√≥digo j√° est√° mais organizado. E tamb√©m j√° temos alguns objetos novos. O c√≥digo est√° todo documentado e est√° bem simples de entender.&lt;/p&gt;

&lt;p&gt;Temos tr√™s objetos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Oficina&lt;/li&gt;
&lt;li&gt;Localizacao&lt;/li&gt;
&lt;li&gt;Distancia&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;objeto-oficina&#34;&gt;Objeto Oficina&lt;/h3&gt;

&lt;p&gt;Esse objeto cont√©m as informa√ß√µes sobre a oficina e um m√©todo que verifica a dist√¢ncia do cliente e o pre√ßo do servi√ßo.&lt;/p&gt;

&lt;h3 id=&#34;objeto-localizacao&#34;&gt;Objeto Localizacao&lt;/h3&gt;

&lt;p&gt;Esse objeto cont√©m as os m√©todos para trabalharmos com a api de Geolocation, do primeiro e segundo passo.&lt;/p&gt;

&lt;h3 id=&#34;objeto-distancia&#34;&gt;Objeto Distancia&lt;/h3&gt;

&lt;p&gt;Esse objeto tem um m√©todo importante que √© o &lt;strong&gt;distanciaEntreDoisPontos&lt;/strong&gt; esse m√©todo calcula a dist√¢ncia entre dois pontos e retorna o valor em kil√¥metros.&lt;/p&gt;

&lt;p&gt;Adaptado dessa formula &lt;a href=&#34;http://stackoverflow.com/questions/27928/how-do-i-calculate-distance-between-two-latitude-longitude-points&#34;&gt;http://stackoverflow.com/questions/27928/how-do-i-calculate-distance-between-two-latitude-longitude-points&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h1&gt;

&lt;p&gt;Isso seria o b√°sico para come√ßar a brincar com essa api t√£o legal que √© o Geolocation.&lt;/p&gt;

&lt;p&gt;Dois plugins, para o Chrome, que podem te ajudar bastante.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Geo Location Chrome Extension: Esse plugin te mostra a sua posi√ß√£o. &lt;a href=&#34;https://chrome.google.com/webstore/detail/ebpepkmcecplhjpdfiojfjbjofekjhcp&#34;&gt;https://chrome.google.com/webstore/detail/ebpepkmcecplhjpdfiojfjbjofekjhcp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Manual Geolocation: Com esse plugin voc√™ pode definir a sua localiza√ß√£o manualmente. &lt;a href=&#34;https://chrome.google.com/webstore/detail/manual-geolocation/mfodligkojepnddfhkbkodbamcagfhlo&#34;&gt;https://chrome.google.com/webstore/detail/manual-geolocation/mfodligkojepnddfhkbkodbamcagfhlo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Em um pr√≥ximo artigo veremos sobre conseguir a latitude e longitude do usu√°rio a partir de seu endere√ßo e mais alguns par√¢metros que podemos utilizar com o m√©todo &lt;strong&gt;navigator.geolocation.getCurrentPosition&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>