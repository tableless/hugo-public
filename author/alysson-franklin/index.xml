<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alysson Franklin on Tableless</title>
    <link>http://tableless.com.br/author/alysson-franklin/index.xml</link>
    <description>Recent content in Alysson Franklin on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/alysson-franklin/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Formulários e o Metawebdesign – Parte 1</title>
      <link>http://tableless.com.br/formularios-e-o-metawebdesign-parte-1/</link>
      <pubDate>Mon, 24 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/formularios-e-o-metawebdesign-parte-1/</guid>
      <description>

&lt;p&gt;O front-end é uma profissão de uma amplitude imensa. Temos profissionais montando mockups/PSDs, especialistas em acessibilidade, usabilidade, arquitetura da informação, integração com aplicações, designers de interface, application developers. Tem até SEO.&lt;/p&gt;

&lt;p&gt;O background do profissional neste momento não importa muito, apenas a afirmação que ele está trabalhando na camada de &lt;strong&gt;front-end&lt;/strong&gt;. Só isso basta para confirmar os papéis acima.&lt;/p&gt;

&lt;p&gt;Em muitas empresas o front-end é trabalhado de maneira criteriosa, com &lt;strong&gt;separação de tarefas&lt;/strong&gt; em maior ou menor intensidade, de modo que o &lt;strong&gt;processo&lt;/strong&gt; esteja sempre azeitado e atento aos &lt;strong&gt;prazos&lt;/strong&gt; dos outros times que dependem da interface. Em algumas outras, o responsável pelo código é o unico responsável por fazer tudo isso acima. E isso acontece com &lt;strong&gt;frequência&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;É o famigerado exército-de-um-homem-só, que em um projeto normalmente é responsável por:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pesquisa: &lt;/strong&gt;Fornece dados e insights para o desenvolvimento de todo o projeto – sobre o usuário, suas características, hábitos e necessidades. Apesar de orientada a um projeto específico, essa pesquisa também deve ser constante, oferecendo atualização e embasamento para a criação de novas experiências.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Arquitetura da informação:&lt;/strong&gt; Organização de informação, entendendo o modelo mental do usuário, para que ele se reflita também no produto final.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Design da interação: &lt;/strong&gt;Desenhar a interação de forma que ela seja consistente, fácil e auto-explicativa. Entende ros requisitos de usabilidade criados na fase de &lt;strong&gt;pesquisa&lt;/strong&gt; e dominar os padrões de interação que a aplicação deve ter, além de saber lidar com a multiplicidade de devices e plataformas onde a interação ocorre.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Design Visual: &lt;/strong&gt;Balanceando beleza e comunicação, domina tanto a direção de arte do produto que está sendo desenvolvido quanto o acabamento final dos pequenos detalhes da interface.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Redação: &lt;/strong&gt;Expressar as ideias, simples ou complexas que o cliente passou para o desenvolvedor em palavras simples e que sejam facilmente entendidas pelos usuários do produto. Este conteúdo vem do cliente, mas não é difícil acontecer  do desenvolvedor ser responsável por criar algum conteúdo, seja transformando a linguagem do cliente dentro de um contexto web, deixando-a mais dinâmica e convidativa a leitura, seja pequenos conteúdos que devem ditar padrões visuais para interações do usuário.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prototipagem:  &lt;/strong&gt;Criação da UI. Isso serve tanto para o estágio inicial do projeto (com protótipos de papel, de baixa fidelidade) quanto para o estágio que precede o desenvolvimento, onde o produto já está mais amadurecido e mais próximo do final. Esta etapa pode ser a da criação das páginas em si, uma vez que os modelos de conceito e interação estão prontos e o design está criado ( sites tipicamente estáticos ou de menor porte ) ou pode ser a fase da criação dos protótipos que devem ir para a integração depois (back-end).**
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;**
  * &lt;strong&gt;Gerenciamento:&lt;/strong&gt; Garantir o funcionamento de todas as áreas de entrega da melhor e mais produtiva maneira possivel. E ainda ser o ponto focal com cliente e usuário, quando necessário.&lt;/p&gt;

&lt;p&gt;Em um departamento multidisciplinar de UX, no melhor dos mundos, temos atribuições diferentes para diferentes profissionais. Muitas vezes, isso não acontece. Outros casos, não raros, a empresa não está interessada na matéria, ou apenas não tem profissionais que atuam nesta área que se preocupam com o código (e design) que entregam. Vai saber. Em empresas com atribuções de projeto mais estruturadas um departamento de UX conversa claramente com outros áreas, como Arquitetura, DBA, Requisitos, Integração, Testes e Gerência.&lt;/p&gt;

&lt;p&gt;No &lt;a href=&#34;http://frontinbh.com.br/blog/&#34;&gt;FrontInBH&lt;/a&gt;, conversando com os desenvolvedores no final do evento, e também em conversas com &lt;em&gt;devs&lt;/em&gt; de todos os cantos, é fácil perceber que empresas com equipes de desenvolvimento reduzidas (SMB, agências, pequenos portais) mantém um ou dois especialistas que acabam fazendo todo o serviço. E estes profissionais acabam por andar entre duas profissões distintas: &lt;strong&gt;Designer de Interação e Interfaces&lt;/strong&gt; ou o &lt;strong&gt;Desenvolvedor web&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Vale lembrar que estas duas profissões tem backgrounds muito diferentes. Enquanto os designers lidam com &lt;strong&gt;abstração&lt;/strong&gt;, _devs_ costumam lidar com a&lt;strong&gt;objetividade&lt;/strong&gt; do código. Disciplinas que vão de &lt;strong&gt;Teoria de Cores&lt;/strong&gt; à &lt;strong&gt;Orientação a objetos&lt;/strong&gt; fazem parte do background destes profissionais, porém é com muito trabalho que são desenvolvidos as especialidades, devido a matérias tão antagônicas.&lt;/p&gt;

&lt;div id=&#34;attachment_4473&#34; style=&#34;width: 610px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/multidisciplinar.png&#34;&gt;&lt;img class=&#34;size-full wp-image-4473&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/multidisciplinar.png&#34; alt=&#34;&#34; width=&#34;600&#34; height=&#34;308&#34; srcset=&#34;uploads/2011/10/multidisciplinar.png 600w, uploads/2011/10/multidisciplinar-300x154.png 300w&#34; sizes=&#34;(max-width: 600px) 100vw, 600px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Algumas das disciplinas que um profissional de web hoje deve saber para atender demandas de projeto
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Essa diferença de backgrounds acaba por oferecer barreiras que fazem com que o desenvolvimento e a integração das disciplinas seja muito difícil. E com isso temos profissionais que desenham interfaces e interações lindas, mas que não podem funcionar sob conceitos de acessibilidade, ou ainda websites perfeitamente acessíves e fluídos, mas que não tem um design tão impactante.&lt;/p&gt;

&lt;p&gt;Diante deste cenário tenho trabalhado para desenvolver um conceito que chamo de &lt;strong&gt;&lt;a href=&#34;http://metawebdesign.org&#34;&gt;Metawebdesign&lt;/a&gt;&lt;/strong&gt;. A proposta é justamente encurtar estes espaços, sem incomodar profissões importantíssimas e já consolidadas, mas que por razões diversas em algumas vezes acabam por ser a mesma coisa no organograma de uma empresa.&lt;/p&gt;

&lt;p&gt;Meu primeiro e segundo artigos sobre o assunto vão falar sobre &lt;strong&gt;formulários&lt;/strong&gt;. Muito já foi falado, e não quero repetir o que já sabemos. Porém é importante mostrar como conceitos de &lt;strong&gt;design da interação&lt;/strong&gt;, &lt;strong&gt;arquitetura da informação&lt;/strong&gt; e &lt;strong&gt;código&lt;/strong&gt; são usados para criar aplicações que oferecem uma experiência inesquecível para o usuário. Estes dois posts iniciais sobre o assunto se transformam em um toolkit muito útil aonde você poderá com a parte 1 e 2 escolher usando conceitos de design os melhores elementos de controle e depois entender como codificá-los de acordo com os padrões do W3C, mantendo usabilidade e acessibilidade.&lt;/p&gt;

&lt;h2 id=&#34;a-name-h-ce7pzpue3djo-a-aplicando-o-metawebdesign-a-formulários-o-design-da-interface&#34;&gt;&lt;a name=&#34;h.ce7pzpue3djo&#34;&gt;&lt;/a&gt;Aplicando o Metawebdesign a formulários: o design da interface&lt;/h2&gt;

&lt;p&gt;Cedo ou tarde, a aplicação que você esta criando vai precisar perguntar (ou pedir) ao usuário algum tipo de informação. E sob o ponto de vista do usuário, nesse momento a credibilidade de seu design de interação e código estarão em jogo, pois complexidade e simplicidade aqui separam o céu e o inferno.&lt;/p&gt;

&lt;p&gt;Todos sabem como usar alguns &lt;span class=&#34;c0&#34;&gt;elementos de controle&lt;/span&gt; como input texts, checkboxes, radio e dropdowns &amp;#8211; e isso não somos nós desenvolvedores de aplicações web. Isso é consenso, domínio público: um &lt;span class=&#34;c11&#34;&gt;status quo &lt;/span&gt;que todo usuário de computador aprendeu a identificar e saber operar. Mesmo novos usuários entendem estes elementos com uma rapidez impressionante. O problema é como agrupar todos eles em torno de um bem comum &amp;#8211; o bem sucedido submit. Afinal de contas, fazer um formulário é simples, basta colocar um &lt;span class=&#34;c11&#34;&gt;bando &lt;/span&gt;de informações ordenadas de maneira racional, colocá-las na página com alguma ordenação &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Top%E2%80%93down_and_bottom%E2%80%93up_design&#34;&gt;top-bottom&lt;/a&gt;&lt;/span&gt; e é isso, correto?&lt;/p&gt;

&lt;p&gt;Para começarmos a conversa, isso é o que os &lt;span class=&#34;c0&#34;&gt;usuários &lt;/span&gt;esperam.&lt;/p&gt;

&lt;p&gt;De acordo com o &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/interact/forms.html#h-17.1&#34;&gt;w3c&lt;/a&gt;&lt;/span&gt;, um formulário HTML (form) é uma seção do documento HTML que pode conter &lt;span class=&#34;c0&#34;&gt;informação estática&lt;/span&gt;, &lt;span class=&#34;c0&#34;&gt;elementos de controle&lt;/span&gt; (os mesmos mecionados acima e alguns outros que vamos falar aqui) e &lt;span class=&#34;c0&#34;&gt;labels&lt;/span&gt; que referenciam estes controles semanticamente. Tudo isso para permitir que o usuário possa responder (ou preencher) uma série de perguntas que a sua aplicação precisa para prosseguir com o fluxo. E o usuário interage com tudo isso &lt;span class=&#34;c0&#34;&gt;alterando&lt;/span&gt; &lt;span class=&#34;c0&#34;&gt;elementos de controle&lt;/span&gt;.&lt;/p&gt;

&lt;h3 id=&#34;a-name-h-vz2ra8bmzqo4-a-bons-e-maus-exemplos&#34;&gt;&lt;a name=&#34;h.vz2ra8bmzqo4&#34;&gt;&lt;/a&gt;Bons e maus exemplos:&lt;/h3&gt;

&lt;p&gt;Bons exemplos de formulário são fáceis: você mesmo deve conhecer vários; são aqueles que você usa diariamente sem gastar muito tempo ou que não entediam durante seu preenchimento. Maus exemplos são fáceis e estão por todos os cantos da internet, não é difícil encontrar um (na verdade não precisamos nem procurar). Só que não é ético questionar o trabalho de ninguém sem saber as variáveis que levaram aquela implementação. Sendo assim, olha que “bonito” esse &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://developer.apple.com/internet/webcontent/examples/bad_form.html&#34;&gt;formulário que está no site da Apple como exemplo de um mau form&lt;/a&gt;&lt;/span&gt;.&lt;/p&gt;

&lt;div id=&#34;attachment_4401&#34; style=&#34;width: 789px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image04.png&#34;&gt;&lt;img class=&#34;size-full wp-image-4401&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image04.png&#34; alt=&#34;&#34; width=&#34;779&#34; height=&#34;266&#34; srcset=&#34;uploads/2011/10/image04.png 779w, uploads/2011/10/image04-300x102.png 300w&#34; sizes=&#34;(max-width: 779px) 100vw, 779px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Acredite: foi difícil até colocar tudo isso em um espaço visível. E ainda nao ficou bom.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Antes de entrarmos de cabeça nos elementos e como formulários devem ser criados, precisamos entender alguns principios básicos de um design de form:&lt;/p&gt;

&lt;h2 id=&#34;a-name-h-1a8j29a5szsl-a-form-design-8211-o-básico&#34;&gt;&lt;a name=&#34;h.1a8j29a5szsl&#34;&gt;&lt;/a&gt;Form Design &amp;#8211; O básico:&lt;/h2&gt;

&lt;ol start=&#34;1&#34;&gt;
  &lt;li&gt;
    &lt;strong&gt;Tenha certeza que o usuário entende o que e o porque você está pedindo ou perguntando algo;&lt;/strong&gt;&lt;br /&gt; Escreva labels com palavras que seus usuários possam entender facilmente independente de serem usuários frequentes ou novos usuários, tenha cuidado com os jargões ou acrônimos utilizados. Se necessário, &lt;span class=&#34;c11&#34;&gt;desenhe &lt;/span&gt;para o usuário.
  &lt;/li&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;strong&gt;exemplo 1 : &lt;/strong&gt;antes de um grande formulário, tome algum espaço da tela para explicar como ele funciona e o porque você precisa de todas aquelas informações.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;strong&gt;exemplo 2: &lt;/strong&gt;Se você precisa colocar um controle na tela que não é imediatamente óbvio dentro de um fluxo da tela, use uma tooltip ou outro tipo de ajuda que mostre ao usuário o que ele deve fazer em seguida.
    &lt;/li&gt;
  &lt;/ul&gt;
  
  &lt;li&gt;
    &lt;strong&gt;Se puder, evite a redundância;&lt;br /&gt; &lt;/strong&gt;Antes de colocar os campos em uma tela, analise a informação e o contexto de cada um deles e se possível, agrupe informações para minimizar o numero de campos a serem preenchidos. Mesmo no melhor dos cenários, gastar tempo preenchendo caixas de texto não é algo divertido.
  &lt;/li&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;strong&gt;exemplo 1: &lt;/strong&gt;se o usuário já preencheu o endereço de entrega no formulário de checkout, você pode reutilizar esta informação para o endereço de cobrança. Basta adicionar um checkbox perguntando se o endereço de entrega e cobrança são os mesmos que em caso de positivo, você já atendeu aos requisitos.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;strong&gt;exemplo 2:&lt;/strong&gt; Se 80% dos seus usuários estão no Brasil, 15% estão na Argentina e 3% nos Estados Unidos, você pode usar um &lt;select&gt; ao invés de uma &lt;input type=”text”&gt; para atender os requisitos de país. As opções seriam Brasil, Argentina, USA e logo após teríamos lista com a ordenação alfabética.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;strong&gt;exemplo 3:&lt;/strong&gt; Para endereços no Brasil, no &lt;fieldset&gt; de localização, perguntando apenas o CEP podemos recuperar endereço, bairro, cidade e estado. Com isso faz sentido perguntar primeiramente o CEP, recuperar o valor via webservice e após o sucesso automaticamente preencher estes campos para o usuário.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;strong&gt;Existem também exceções:&lt;/strong&gt; A &lt;span class=&#34;c0&#34;&gt;segurança&lt;/span&gt; deve ser levada em conta ao ponderar sobre recursos de auto-completion. Não seria ético tampouco legal recuperar os dados do cartão de crédito do usuário para onerá-lo da tarefa de inputar seus dados bancários, uma das partes mais tediosas e passíveis de erro durante a transação de um checkout.
    &lt;/li&gt;
    &lt;li&gt;
      &lt;strong&gt;&lt;br /&gt; &lt;/strong&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  
  &lt;li&gt;
    &lt;strong&gt;Informações de conhecimento público normalmente são mais acuradas que informações de conhecimento pessoal;&lt;/strong&gt; Quando perguntamos algo ao usuário, temos que ter em mente que eles podem mentir (&lt;span class=&#34;c8 c11&#34;&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=nNOExDrsdbg&#34;&gt;everybody lies&lt;/a&gt;&lt;/span&gt;) ou mesmo errar. Podemos minimizar isso reduzindo problemas. O sistema de &lt;span class=&#34;c11&#34;&gt;auto-completion&lt;/span&gt; com o CEP mencionado acima é um exemplo claro. Um erro simples de digitação pode causar um problemão na hora da entrega: a rua &lt;span class=&#34;c0&#34;&gt;Roda dos Ventos&lt;/span&gt; pode virar rua &lt;span class=&#34;c0&#34;&gt;Rosa dos Ventos&lt;/span&gt; em um clique. Probabilidade altíssima de problemas futuros que &lt;span class=&#34;c0&#34;&gt;você &lt;/span&gt;pode evitar usando este tipo de abordagem.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;Tenha cuidado ao transformar os requisitos de design em forms;&lt;/strong&gt;&lt;br /&gt; A maioria dos forms é criada para manipular transações feitas com o banco de dados ou alterar objetos de uma tela. Explore as dependências entre os elementos, procure por similaridades que possam ser agrupadas graficamente, como &lt;span class=&#34;c0&#34;&gt;campos de endereço&lt;/span&gt; ou i&lt;span class=&#34;c0&#34;&gt;nformações pessoais&lt;/span&gt;. O exemplo do endereço de entrega versus o endereço de cobrança mencionado na regra #2 pode ser repetido aqui. Porque não habilitar em um form de inserir produto um drag-n-drop para definir a ordenação das imagens de descrição deste produto ao invés de subir as imagens em uma ordem pré definida ou ainda primeiro subir as imagens para só depois ordenar?&lt;br /&gt; &lt;strong&gt;&lt;br /&gt; &lt;/strong&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;Teste, teste novamente e quando achar que está tudo ok, teste de novo;&lt;/strong&gt; Por alguma razão que nunca vamos descobrir, é incrivelmente fácil desenvolvedores e usuários terem idéias completamente diferentes quando o assunto é preencher um formulário. O &lt;span class=&#34;c0&#34;&gt;mesmo&lt;/span&gt; form! Isso pode acontecer pelos mais variados modos:
  &lt;/li&gt;
  &lt;ul&gt;
    &lt;li&gt;
      conhecimento prévio com interações passadas,
    &lt;/li&gt;
    &lt;li&gt;
      respostas possíveis,
    &lt;/li&gt;
    &lt;li&gt;
      fluxo de página que depende de um contexto que o usuário pode entender de maneira diferente dependo de variáveis externas.
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/ol&gt;

&lt;p&gt;Por isso é importante montar o formulário e se certificar que &lt;span class=&#34;c0&#34;&gt;todas &lt;/span&gt;as possibilidades de interação do usuário com os elementos da tela estão garantidas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;preenchimento de campos;&lt;/li&gt;
&lt;li&gt;clique/toque em botões e objetos de tela;&lt;/li&gt;
&lt;li&gt;entrada de dados validados para atender requisitos de design da aplicação;&lt;/li&gt;
&lt;li&gt;condições especiais de uso e interação do form.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Isso nos dá &lt;strong&gt;evidência empírica&lt;/strong&gt; do que funciona e o que nao funciona em sua aplicação, além de claramente indicar o caminho a seguir no caso de identificar um problema.&lt;/p&gt;

&lt;ol class=&#34;c12&#34; start=&#34;1&#34;&gt;
  &lt;li&gt;
    &lt;strong&gt;Escolha sabiamente os elementos de controle:&lt;/strong&gt; eles impactam a expectativa do usuário sobre o que ele está sendo perguntado e como deve responder a isso:
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Os usuários tendem a associar o tamanho e forma física dos campos a o que eles &lt;span class=&#34;c0&#34;&gt;imaginam &lt;/span&gt;que seja o que estamos perguntando. Só depois desta associação é que os usuários lêem o que o label de um campo está pedindo.&lt;/li&gt;
&lt;li&gt;Uma única radio button vai ser algo &lt;span class=&#34;c11&#34;&gt;ditatorial&lt;/span&gt; pois sugere a existência de pelo menos &lt;span class=&#34;c0&#34;&gt;duas &lt;/span&gt;opções na tela.&lt;/li&gt;
&lt;li&gt;Após você estar acostumado com o processo de compra de sua loja online e seu formulário, automaticamente você irá suavizar sua atenção por não ser uma tarefa nova e sim uma repetição (e daí entendemos o porque a estrada para para erramos um formulário que preenchemos “todo dia” é tão curta)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;a-name-h-bxu0ugomhbvf-a-escolhendo-elementos-de-controle&#34;&gt;&lt;a name=&#34;h.bxu0ugomhbvf&#34;&gt;&lt;/a&gt;Escolhendo elementos de controle&lt;/h3&gt;

&lt;p&gt;Quando estamos montando o design do nosso form temos que nos ater a algumas situações que impactam diretamente todo o formulário:&lt;/p&gt;

&lt;ol class=&#34;c13&#34; start=&#34;1&#34;&gt;
  &lt;li&gt;
    &lt;strong&gt;Espaço disponível na tela: &lt;/strong&gt;não precisamos falar nada sobre isso. Cada pixel conta e sabemos disso muito bem, então escolha sabiamente como usar os elementos para tirar total proveito da sua área de exibição.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;Sofisticação no formulário deve respeitar uso geral dos forms: &lt;/strong&gt;&lt;input type=”text”&gt; é algo que todos os usuários estão familiarizados a usar e vão fazê-lo bem, mas nem todo mundo estará confortável em usar um slider de range, com acionamento duplo.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;O form deve respeitar o conhecimento público nos domínios da sua app:&lt;/strong&gt; É aceitável você usar um &lt;input type=”text”&gt; para um campo que aceita valores entre 0 e 1000. Mas isso iria requerer uma validação para certificar que numeros maiores ou negativos fossem inputados. Se a maior base dos seus usuários está confortável com esta regra, não existe o motivo de usarmos o mesmo slider de range mencionado acima, por todos os problemas de implementação, tempo, acessibilidade e principalmente, dificuldade de uso.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;Elementos externos criam expectativas que podem ser erradas:&lt;/strong&gt; Temos o conhecimento que &lt;span class=&#34;c0&#34;&gt;negrito&lt;/span&gt;, &lt;span class=&#34;c11&#34;&gt;itálico&lt;/span&gt;&lt;span class=&#34;c11 c0&#34;&gt; &lt;/span&gt;e &lt;span class=&#34;c10&#34;&gt;sublinhado&lt;/span&gt;&lt;span class=&#34;c0&#34;&gt; &lt;/span&gt;são iconografias que foram criadas para dar um destaque a alguma palavra. Fica fora de contexto utilizarmos estas formas para exibir labels por exemplo.&lt;br /&gt; &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image05.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4402&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image05.png&#34; alt=&#34;&#34; width=&#34;196&#34; height=&#34;28&#34; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;span class=&#34;c6 c0&#34;&gt;Olha o fast-food “encostando uma arma na sua cabeça” ao perguntar o que é mais saudável.&lt;/span&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;span class=&#34;c0&#34;&gt;Tecnologia disponível: &lt;/span&gt;o HTML e suas APIs oferecem suporte a muitos elementos de controle, e para os que não são suportados nativamente, existe uma grande gama de toolkits e frameworks que vai te ajudar a implementar aparência e controle em situações específicas.
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;a-name-h-2g3v8mmslxxw-a-elementos-de-controle-de-formulários&#34;&gt;&lt;a name=&#34;h.2g3v8mmslxxw&#34;&gt;&lt;/a&gt;Elementos de controle de Formulários&lt;/h3&gt;

&lt;p&gt;Para fazer o design de uma tela de formulário, precisamos de elementos de controle. No jargão do HTML, seriam elementos HTML, que nada mais é que o conteúdo que está dentro de uma tag, podendo inclusive ter outros elementos filho caso seja do interesse. Dito isso, fica muito mais fácil entender como o design trabalha com elementos de controle. Após escolher seus elementos na tabela abaixo, tudo que você precisa é codificá-los seguindo os padrões que já conhecemos.&lt;/p&gt;

&lt;p&gt;Montar uma tela de formulário não é complicado. Estamos acostumados a fazer isso todos os dias. Porém existem mais coisas entre o céu e a terra do que pode imaginar a nossa vã filosofia. O tópico acima mostra algumas variáveis que as vezes podem passar desapercebido e podem ajudar &amp;#8211; e muito na hora de montar o design da sua tela. Você consegue se imaginar trabalhando orientado ao &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://tableless.com.br/introducao-ao-responsive-web-design/&#34;&gt;Responsive Webdesign&lt;/a&gt;&lt;/span&gt; sem utilizar os conceitos básicos mostrados acima? Pode parecer óbvio, mas é importante manter isso em mente ao utilizar a tabela abaixo:&lt;/p&gt;

&lt;p&gt;Elementos de controle em um formulário são divididos em:&lt;/p&gt;

&lt;table id=&#34;tblMain&#34; class=&#34;tblGenFixed&#34; style=&#34;font-size: 10px !important;font-family: verdana !important&#34; border=&#34;0&#34; cellspacing=&#34;2&#34; cellpadding=&#34;2&#34;&gt;
  &lt;tr&gt;
    &lt;td class=&#34;s0&#34;&gt;
      &lt;h3&gt;
        Causa
      &lt;/h3&gt;
    &lt;/td&gt;
    
    &lt;td class=&#34;s1&#34;&gt;
      &lt;h3&gt;
        Tipo de interação
      &lt;/h3&gt;
    &lt;/td&gt;
    
    &lt;td class=&#34;s2&#34;&gt;
      &lt;h3&gt;
        Elementos aceitáveis
      &lt;/h3&gt;
    &lt;/td&gt;
    
    &lt;td class=&#34;s1&#34;&gt;
      &lt;h3&gt;
        Prós
      &lt;/h3&gt;
    &lt;/td&gt;
    
    &lt;td class=&#34;s1&#34;&gt;
      &lt;h3&gt;
        Contras
      &lt;/h3&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolhas binárias
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Checkbox
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Simples e pouco espaço utilizado na tela
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Checkbox podem ser usadas para múltiplas escolhas, coisa que usuários já estão acostumados ao visualizá-las. Isso pode levar ao erro, uma vez que é necessário entender que este checkbox único compreende uma escolha sim/não
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolhas binárias
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Radio button
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Duas opções visíveis. Fácil entendimento do usuário
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Espaço de tela usado maior que checkboxes únicas
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolhas binárias
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Dropdown
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Duas opções visíveis. Pouco espaço utilizado na tela. Permite expansão para múltiplas opções facilmente utilizando pouco espaço da tela
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Apenas uma opção é visualizada por vez. Requer alguma destreza no uso de formulários. Pode oferecer desafios de acessibilidade a pessoas com deficiência ou que preferem navegação pelo teclado.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolhas binárias
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Toggle Buttons Iconográficos
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Mesmos prós do checkbox, desde que a opção seja mostrada como ícone visual
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Mesmos contras o checkbox, além do fato que não é uma opção padrão para seleção de texto como checkboxes.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolhas binárias
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Menu com Radio button
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Espaço mínimo utilizado na tela uma vez que o menu é encontrado em barras ocultas de menu ou lightboxes.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Requer muita destreza para encontrá-los e utilizá-los. Necessitam de indicações para que sejam fáceis de ser encontrados em uma tela.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s7&#34; bgcolor=&#34;#fef2f3&#34;&gt;
      Escolha 1 de N para poucas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Radio button
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Todas as opções estão sempre disponíveis na tela.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Utiliza um espaço considerável na tela.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s7&#34; bgcolor=&#34;#fef2f3&#34;&gt;
      Escolha 1 de N para poucas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Dropdown
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Pouco espaço utilizado na tela.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Enquanto o menu nao está expandido, mostra apenas uma das opções. Novamente requer alguma destreza para operá-lo e pode tambem oferecer desafios de acessibilidade.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s7&#34; bgcolor=&#34;#fef2f3&#34;&gt;
      Escolha 1 de N para poucas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Toggle Buttons Iconográficos
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Pouco espaço utilizado na tela. Todas as opções estão visíveis na tela.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Os ícones podem precisar de tooltips para descrição, uma vez que a imagem pode não ser de fácil entendimento para todos os usuários.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s7&#34; bgcolor=&#34;#fef2f3&#34;&gt;
      Escolha 1 de N para poucas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Menu com Radio button
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Espaço mínimo utilizado na tela uma vez que o menu é encontrado em barras ocultas de menu ou lightboxes.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Requer muita destreza para encontrá-los e utilizá-los. Necessitam de indicações para que sejam fáceis de ser encontrados em uma tela.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s7&#34; bgcolor=&#34;#fef2f3&#34;&gt;
      Escolha 1 de N para poucas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Listbox
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Muitas opções podem ser visíveis. O frame de seleção pode ser reduzido para até 3 items, permitindo scroll
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Espaço de tela usado maior que dropdowns ou spinners. Necessita aplicação de padrões de seleção, permitindo seleção única apenas.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s7&#34; bgcolor=&#34;#fef2f3&#34;&gt;
      Escolha 1 de N para poucas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Spinner
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Pouco espaço utilizado na tela.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Apenas uma opção é visualizada por vez. Requer muita destreza no uso de formulários e conhecimento deste elemento, pouco utilizado até o lançamento dos novos input types no HTML5. Pode oferecer desafios de acessibilidade a pessoas com deficiência, que preferem navegação pelo teclado ou ainda usuários com ponteiros (mouse) já que a área de clique é mínima.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolha 1 de N para muitas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Dropdown
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Pouco espaço utilizado na tela.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Apenas uma opção é visualizada por vez. Requer muita destreza no uso de formulários. Pode oferecer desafios de acessibilidade a pessoas com deficiência, que preferem navegação pelo teclado ou ainda usuários com ponteiros (mouse) já que a área de scroll é mínima.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolha 1 de N para muitas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Listbox
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Muitas opções podem ser visíveis. O frame de seleção pode ser reduzido para alguns items de modo a ganhar espaço (permitindo scroll)
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Espaço de tela usado maior que dropdowns. Necessita aplicação de padrões de seleção, permitindo seleção única apenas.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolha 1 de N para muitas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Treeview
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Muitas opções visíveis inicialmente, pode oferecer facilidades na cognição já que seus items estarão categorizados por níveis ou tipos (pastas)
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Grande espaço utilizado na tela. Requer muita destreza no uso de formulários.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolha N de N para muitas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Array de checkboxes
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Todas as opções estão sempre disponíveis na tela.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Grande espaço utilizado na tela.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolha N de N para muitas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Array de Toggle Buttons Iconográficos
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Pouco espaço utilizado na tela. Todas as opções estão visíveis na tela.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Os ícones podem precisar de tooltips para descrição, uma vez que a imagem pode não ser de fácil entendimento para todos os usuários.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolha N de N para muitas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Menus com Checkboxes
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Espaço mínimo utilizado na tela uma vez que o menu é encontrado em barras ocultas de menu ou lightboxes.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Requer muita destreza para encontrá-los e utilizá-los. Necessitam de indicações para que sejam fáceis de ser encontrados em uma tela.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolha N de N para muitas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Listbox
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Muitas opções podem ser visíveis. O frame de seleção pode ser reduzido para alguns items de modo a ganhar espaço (permitindo scroll)
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Todas as opções não estão disponíveis na tela, requerendo scroll. Usuário precisa de indicações de que a caixa permite múltiplas seleções. Requer muita destreza no uso de formulários. Pode oferecer desafios de acessibilidade.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolha N de N para muitas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Treeview
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Muitas opções visíveis inicialmente, pode oferecer facilidades na cognição já que seus items estarão categorizados por níveis ou tipos (pastas)
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Grande espaço utilizado na tela. Requer muita destreza no uso de formulários.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Escolha N de N para muitas opções
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Listbuilder
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Items selecionados são de fácil visualização. Pode permitir fácil expansão para escolha e ordenação de items. Lida facilmente com grandes listas.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Grande espaço utilizado na tela. Funciona bem para grandes listas com poucas seleções. Muitas seleções oferecem dificuldades na visualização.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s7&#34; bgcolor=&#34;#fef2f3&#34;&gt;
      Criando listas não ordenadas
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Caixa com botão de adição/novo
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Ação de adicionar registro é visível e óbvia para o usuário
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Grande espaço utilizado na tela. Visualmente bagunçado quando usuário insere muitos items.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s7&#34; bgcolor=&#34;#fef2f3&#34;&gt;
      Criando listas não ordenadas
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Caixa com edição in-place
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Menor uso de tela. A adição é feita in-place, dentro da caixa
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Ação de adição não é tão óbvia quanto a caixa com botão de adição
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s7&#34; bgcolor=&#34;#fef2f3&#34;&gt;
      Criando listas não ordenadas
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Caixa com edição drag-n-drop
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Visualmente elegante e de fácil entendimento, uma vez que arrastar é uma ação intuitiva
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Necessita de indicações que mostram que na caixa existe uma área de arrastar.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Criando listas ordenadas
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Caixa com botões acima/abaixo para ordenação
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Ações de rearranjo sempre visíveis na página.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Grande espaço utilizado na tela.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s3&#34; bgcolor=&#34;#ff0000&#34;&gt;
      Seleções e listas
    &lt;/td&gt;
    
    &lt;td class=&#34;s4&#34; bgcolor=&#34;#facacb&#34;&gt;
      Criando listas ordenadas
    &lt;/td&gt;
    
    &lt;td class=&#34;s5&#34;&gt;
      Caixa com drag-n-drop de items
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Visualmente elegante e de fácil entendimento, uma vez que arrastar é uma ação intuitiva
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Necessita de indicações que mostram que na caixa existe uma área de arrastar.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s8&#34; bgcolor=&#34;#3c78d8&#34;&gt;
      Texto
    &lt;/td&gt;
    
    &lt;td class=&#34;s9&#34; bgcolor=&#34;#a4c2f4&#34;&gt;
      Inputs para uma linha de texto
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Textbox
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      &amp;#8212;
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      &amp;#8212;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s8&#34; bgcolor=&#34;#3c78d8&#34;&gt;
      Texto
    &lt;/td&gt;
    
    &lt;td class=&#34;s10&#34; bgcolor=&#34;#dfecf8&#34;&gt;
      Múltiplas linhas de texto não formatado
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Textarea
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      &amp;#8212;
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      &amp;#8212;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s8&#34; bgcolor=&#34;#3c78d8&#34;&gt;
      Texto
    &lt;/td&gt;
    
    &lt;td class=&#34;s9&#34; bgcolor=&#34;#a4c2f4&#34;&gt;
      Múltiplas linhas de texto formatado
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Textarea que permite tags inline
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Usuários avançados podem evitar o uso da toolbar inputando as tags diretamente
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Não é realmente um editor WYSIWYG
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s8&#34; bgcolor=&#34;#3c78d8&#34;&gt;
      Texto
    &lt;/td&gt;
    
    &lt;td class=&#34;s9&#34; bgcolor=&#34;#a4c2f4&#34;&gt;
      Múltiplas linhas de texto formatado
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Editor Rich text
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Texto inputado já serve de preview.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Nao permite edição apenas pelo teclado. É necessário o uso da toolbar para adicionar as tags necessárias.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s12&#34; bgcolor=&#34;#fff2cc&#34;&gt;
      Números com qualquer tipo de formato
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Textbox com máscaras
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Visualmente elegante e permite qualquer tipo/formato de tipos de dado
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Requer validação no back-end.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s12&#34; bgcolor=&#34;#fff2cc&#34;&gt;
      Números com qualquer tipo de formato
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Textbox estruturado e com máscaras
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Formato dos dados é explícito, facilitando preenchimento e entendimento do usuário
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Pode requerer grande espaço na tela. Também não permite inputs diferentes dos previstos, mesmo que o usuário deseje isso.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s12&#34; bgcolor=&#34;#fff2cc&#34;&gt;
      Números com qualquer tipo de formato
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Spinner
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Permite input sem o uso de teclado caso deseje o usuário
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Apenas uma opção é visualizada por vez. Requer muita destreza no uso de formulários e conhecimento deste elemento, pouco utilizado até o lançamento dos novos input types no HTML5. Pode oferecer desafios de acessibilidade a pessoas com deficiência, que preferem navegação pelo teclado ou ainda usuários com ponteiros (mouse) já que a área de clique é mínima.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s13&#34; bgcolor=&#34;#ffd966&#34;&gt;
      Números dentro de um limite pre-definido
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Slider
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Metáfora óbvia, valor é mostrado de acordo com a posição do marcador. Usuário não pode inputar números fora deste range
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Pode requerer grande espaço na tela. Labels muito grandes podem se transformar em um problema também
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s13&#34; bgcolor=&#34;#ffd966&#34;&gt;
      Números dentro de um limite pre-definido
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Spinner
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Pouco espaço utilizado na tela, permite inputs direto pelo teclado e tambem via clique
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Não é familiar para todos os usuários. Pode oferecer desafios de acessibilidade a pessoas com deficiência, que preferem navegação pelo teclado ou ainda usuários com ponteiros (mouse) já que a área de clique é mínima. Requer validação no back-end.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s13&#34; bgcolor=&#34;#ffd966&#34;&gt;
      Números dentro de um limite pre-definido
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Textbox com validação pós-input
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Familiar ao usuário, pouco espaço utilizado na tela, acesso via teclado.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Requer validação no back-end. Range não é visível para o usuário, requer indicações dos limites para input.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s13&#34; bgcolor=&#34;#ffd966&#34;&gt;
      Números dentro de um limite pre-definido
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Slider com textbox
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Permite inputs visuais(slide) e numéricos(input manual)
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Complexo, requer validação dos inputs no textbox.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s12&#34; bgcolor=&#34;#fff2cc&#34;&gt;
      Criando um subrange dentro de um range maior
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Slider duplo
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Menor uso de tela quando comparado com 2 sliders.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Não é familiar para a maioria dos usuários. Problemas graves de acessibilidade porque não permite inputs via teclado.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s12&#34; bgcolor=&#34;#fff2cc&#34;&gt;
      Criando um subrange dentro de um range maior
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      2 Sliders
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Utilização mais fácil que um slider duplo.
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Grande espaço utilizado na tela. Problemas graves de acessibilidade porque não permite acesso via teclado.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s12&#34; bgcolor=&#34;#fff2cc&#34;&gt;
      Criando um subrange dentro de um range maior
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      2 Spinners
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Pouco espaço utilizado na tela, permite inputs direto pelo teclado e tambem via clique
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Não é familiar para todos os usuários. Requer validação no back-end. Não permite visualização do range maior.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s11&#34; bgcolor=&#34;#ff9900&#34;&gt;
      Números
    &lt;/td&gt;
    
    &lt;td class=&#34;s12&#34; bgcolor=&#34;#fff2cc&#34;&gt;
      Criando um subrange dentro de um range maior
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Textbox com validação pós-input
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Familiar para o usuário, ocupa menos espaço que sliders
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Requer validação e é necessário informar o range de alguma maneira para o usuário.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s14&#34; bgcolor=&#34;#6aa84f&#34;&gt;
      Data / Horário
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      &amp;#8212;
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Textbox com máscaras
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Visualmente simples, permite amplo range de formatos. Permite acesso via teclado
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Requer validação back-end. Pode causar confusão no formato data/hora por não haver indicações explicitas.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;s14&#34; bgcolor=&#34;#6aa84f&#34;&gt;
      Data / Horário
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      &amp;#8212;
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Textbox estruturado e com máscaras
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Formato dos dados é explícito, facilitando preenchimento e entendimento do usuário
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Pode requerer grande espaço na tela. Também não permite inputs diferentes dos previstos, mesmo que o usuário deseje isso.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr bgcolor=&#34;#eee&#34;&gt;
    &lt;td class=&#34;s14&#34; bgcolor=&#34;#6aa84f&#34;&gt;
      Data / Horário
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      &amp;#8212;
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Datepicker
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Metáfora óbvia, calendário é exibido e a seleção do valor faz o input
    &lt;/td&gt;
    
    &lt;td class=&#34;s6&#34;&gt;
      Grande espaço utilizado na tela. Pode oferecer problemas de acessibilidade caso não se permita acesso via teclado.
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;ol start=&#34;1&#34;&gt;
  &lt;li&gt;
    Seleções e listas:
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Seleções binárias: sim/não, ativo/inativo, etc;&lt;/li&gt;
&lt;li&gt;Escolha de &lt;span class=&#34;c0&#34;&gt;UM&lt;/span&gt; item para &lt;span class=&#34;c0&#34;&gt;N&lt;/span&gt; com poucas e muitas opções;&lt;/li&gt;
&lt;li&gt;Escolha de &lt;span class=&#34;c0&#34;&gt;N &lt;/span&gt;items para &lt;span class=&#34;c0&#34;&gt;N &lt;/span&gt;com poucas e muitas opções;&lt;/li&gt;
&lt;li&gt;Listas não-ordenadas;&lt;/li&gt;
&lt;li&gt;Listas ordenadas.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol start=&#34;2&#34;&gt;
  &lt;li&gt;
    Texto:
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;uma linha de texto;&lt;/li&gt;
&lt;li&gt;múltiplas linhas de texto não formatados e formatados&lt;/li&gt;
&lt;/ul&gt;

&lt;ol start=&#34;3&#34;&gt;
  &lt;li&gt;
    Números:
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;com qualquer formato;&lt;/li&gt;
&lt;li&gt;dentro de um range (limite);&lt;/li&gt;
&lt;li&gt;subrange (sublimite);&lt;/li&gt;
&lt;/ul&gt;

&lt;ol start=&#34;4&#34;&gt;
  &lt;li&gt;
    Data e hora.
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Use a tabela acima para escolher os melhores elementos de tela de acordo com sua necessidade. Você perceberá que as opções cobrem todas as necessidades atuais, alinhadas ao HTML5.&lt;/p&gt;

&lt;h3 id=&#34;a-name-h-n0zdn6aco879-a-padrões-para-elementos-de-controle&#34;&gt;&lt;a name=&#34;h.n0zdn6aco879&#34;&gt;&lt;/a&gt;Padrões para Elementos de Controle&lt;/h3&gt;

&lt;p&gt;Os elementos de controle acima necessitam de padrões de funcionamento. Estes padrões mostram:&lt;/p&gt;

&lt;ol class=&#34;c13&#34; start=&#34;1&#34;&gt;
  &lt;li&gt;
    Como combinar elementos;
  &lt;/li&gt;
  &lt;li&gt;
    definir relações estruturais entre elementos;
  &lt;/li&gt;
  &lt;li&gt;
    controlar mudanças de valores e como estes valores são alterados
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Alguns elementos de controle possuem requisitos de funcionamento que já estão aplicados ao elemento em si (spinners ou datepickers já possuem seu comportamento nativo no elemento graças ao HTML5). Outros necessitam de programação no back-end, seja para validação, seja para a criação de ranges, seja para outras necessidades específicas. Quanto mais versátil o elemento, maior a possibilidade de usá-los. Um bom exemplo seriam input type=”text” que com frequência possuem funcionalidades específicas, alem de aceitar &lt;span class=&#34;c11&#34;&gt;qualquer coisa textual.&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Máscaras:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Máscaras permitem texto em qualquer formato ou sintaxe, fazendo com que o input do usuário seja interpretado de maneira inteligente, a medida que é digitado no campo.&lt;/p&gt;

&lt;p&gt;Máscaras são usadas quando sua interface necessita de dados que usuários podem inputar usando qualquer tipo específico de conteúdo, porém não possuem a obrigação de conhecer estes formatos automaticamente:&lt;/p&gt;

&lt;ol class=&#34;c9&#34; start=&#34;1&#34;&gt;
  &lt;li&gt;
    remover espaços,
  &lt;/li&gt;
  &lt;li&gt;
    inserir apenas números (ou texto),
  &lt;/li&gt;
  &lt;li&gt;
    texto sempre em caixa alta (ou caixa baixa),
  &lt;/li&gt;
  &lt;li&gt;
    abreviações, etc.
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&#34;c4 c5&#34;&gt;
  Usuários querem que a ação (submeter o formulário) aconteça, não querem (nem devem) se preocupar com formatos corretos e interfaces complexas. Jacob Nielsen já dizia que “Usabilidade na web passa pelo fato de que como desenvolvedores de interface, não podemos deixar o usuário pensar demais para fazer uma ação. Ele simplesmente tem que fazê-la de maneira cognitiva”. Máscaras podem inclusive remover a necessidade de &lt;span class=&#34;c0&#34;&gt;dicas no input&lt;/span&gt; ou &lt;span class=&#34;c0&#34;&gt;dicas no prompt&lt;/span&gt;.
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Formato estruturado:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estruturar um campo de input significa quebrar um campo em vários outros, de modo a facilitar o entendimento do que é esperado que o usuário faça. Um bom exemplo seria quebrar um campo &lt;span class=&#34;c0&#34;&gt;único&lt;/span&gt; de CEP por exemplo em dois campos, um para os primeiros 5 números, e outro campo para os 3 restantes. Outros exemplos podem ser mencionados: &lt;span class=&#34;c0&#34;&gt;números de telefone&lt;/span&gt;, &lt;span class=&#34;c0&#34;&gt;numeros de cartão de crédito&lt;/span&gt; (cartões AMEX tem um numero de caracteres diferente de cartões VISA por exemplo).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image10.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4407&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image10.png&#34; alt=&#34;&#34; width=&#34;180&#34; height=&#34;42&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fill-in-the-blanks:&lt;/strong&gt; Combine um ou mais campos de modo a permitir que o usuário possa categorizar o que está inputando, facilitando a ação do usuário. Um bom exemplo seria um formulário de pesquisa em uma loja virtual:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image07.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4404&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image07.png&#34; alt=&#34;&#34; width=&#34;534&#34; height=&#34;169&#34; srcset=&#34;uploads/2011/10/image07.png 534w, uploads/2011/10/image07-300x94.png 300w&#34; sizes=&#34;(max-width: 534px) 100vw, 534px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Usar esta abordagem faz com que a interface seja auto-explicável. Ajuda ao usuário entender o que está acontecendo e o que foi pedido para ele.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dicas no input:&lt;/strong&gt; As dicas no input são importantes para fornecer um guideline ao usuário de como ele deve inputar valores dentro de um campo. O exemplo abaixo, retirado de um form do site dos correios para rastreamento de objetos ilustra bem isso.&lt;span class=&#34;c0&#34;&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image08.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4405&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image08.png&#34; alt=&#34;&#34; width=&#34;315&#34; height=&#34;98&#34; srcset=&#34;uploads/2011/10/image08.png 315w, uploads/2011/10/image08-300x93.png 300w&#34; sizes=&#34;(max-width: 315px) 100vw, 315px&#34; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Placeholder no input:&lt;/strong&gt; O placeholder é um texto adicionado &lt;span class=&#34;c0&#34;&gt;dentro&lt;/span&gt; do input e que automaticamente desaparece quando o usuário posiciona o cursor da tela dentro do campo. Um bom exemplo pode ser visto no form de busca das páginas do portal globo.com.&lt;span class=&#34;c0&#34;&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image01.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4398&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image01.png&#34; alt=&#34;&#34; width=&#34;464&#34; height=&#34;93&#34; srcset=&#34;uploads/2011/10/image01.png 464w, uploads/2011/10/image01-300x60.png 300w&#34; sizes=&#34;(max-width: 464px) 100vw, 464px&#34; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Auto complete:&lt;/strong&gt; O nome é auto-explicativo. A medida que o usuário vai digitando caracteres, os termos são auto-completados, fazendo com que o input seja mais rápido caso o resultado esteja disponível no índice usado. Veja o form de search no site do google.com.br&lt;span class=&#34;c0&#34;&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image01.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4398&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image01.png&#34; alt=&#34;&#34; width=&#34;464&#34; height=&#34;93&#34; srcset=&#34;uploads/2011/10/image01.png 464w, uploads/2011/10/image01-300x60.png 300w&#34; sizes=&#34;(max-width: 464px) 100vw, 464px&#34; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dropdown chooser:&lt;/strong&gt; Dropdowns podem ser usadas para acomodar seleções que podem utilizar um grande espaço na tela quando expandidas, porém não tem a necessidade direta de deixar todas as opções disponíveis (que usualmente são muitas). Um bom exemplo é a dropdown de seleção de cores no Google Docs.&lt;span class=&#34;c0&#34;&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image09.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4406&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image09.png&#34; alt=&#34;&#34; width=&#34;214&#34; height=&#34;291&#34; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Seleção ilustrada:&lt;/strong&gt; Em alguns casos descrever a opção não é suficiente. É necessário ilustrá-la com uma imagem para facilitar a seleção do usuário. Um bom exemplo é esta dropdown de seleção de papel de parede disponível no site do livro Designing with Progressive Enhancement.&lt;span class=&#34;c0&#34;&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image03.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4400&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image03.png&#34; alt=&#34;&#34; width=&#34;199&#34; height=&#34;210&#34; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;List Builder:&lt;/strong&gt; Quando você precisa criar uma lista de items oriundos de uma outra lista, o listbuilder é o padrão ideal a ser usado. Duas textareas e programação fazem com que valores possam ser adicionados ou removidos, além de também poderem ser ordenados facilmente. Veja este exemplo de listbuilder para a configuração de uma toolbar:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image02.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4399&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image02.png&#34; alt=&#34;&#34; width=&#34;541&#34; height=&#34;209&#34; srcset=&#34;uploads/2011/10/image02.png 541w, uploads/2011/10/image02-300x115.png 300w&#34; sizes=&#34;(max-width: 541px) 100vw, 541px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mensagens de erro:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quando o usuário faz algo correto ele recebe um feedback de sucesso, informando que o formulario foi submetido sem problemas. Mas também é necessário informar de maneira clara quando algo dá errado. Mensagens de erro podem ser customizadas de modo a evitar deixar o usuário “no escuro” quando algum erro acontece. Campos obrigatórios precisam de validação (agora mais simples com o atributo &lt;span class=&#34;c0&#34;&gt;required &lt;/span&gt;presente no HTML5), mas podem acontecer outros erros que necessitam de feedback claro para indicar quais os próximos passos a seguir.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image06.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4403&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/image06.png&#34; alt=&#34;&#34; width=&#34;262&#34; height=&#34;174&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Você pode usar o poster abaixo como referência para criar suas interfaces. Clique na imagem para vê-la em uma maior resolução.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/10/elementos-de-controleBIG.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-4411&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/10/elementos-de-controleSMALL.png&#34; alt=&#34;&#34; width=&#34;600&#34; height=&#34;447&#34; srcset=&#34;uploads/2011/10/elementos-de-controleSMALL.png 600w, uploads/2011/10/elementos-de-controleSMALL-300x223.png 300w&#34; sizes=&#34;(max-width: 600px) 100vw, 600px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Na próxima semana, com a Parte 2, a abstração dá o lugar ao código para saber como montar os items que você selecionou para montar seus formulários, transformando os dois posts em um toolkit para o dia-a-dia. Namastê!&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;span-class-c0-c17-referências-span&#34;&gt;&lt;span class=&#34;c0 c17&#34;&gt;Referências&lt;/span&gt;&lt;/h3&gt;

&lt;ol class=&#34;c13&#34; start=&#34;1&#34;&gt;
  &lt;li&gt;
    Metawebdesign &amp;#8211; Quando o Front-end se encontra com a experiência do usuário: &lt;a href=&#34;http://www.slideshare.net/AlyssonFranklin/metawebdesign-frontend&#34;&gt;http://www.slideshare.net/AlyssonFranklin/metawebdesign-frontend&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    O Metawebdesign &amp;#8211; &lt;a href=&#34;http://metawebdesign.org&#34;&gt;http://metawebdesign.org&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    Designing Interfaces &amp;#8211; Second Edition (Jenifer Tidwell- O&amp;#8217;Reilly books) &lt;a href=&#34;http://designinginterfaces.com/&#34;&gt;http://designinginterfaces.com/&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    Top-down e bottom-up design:  &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Top%E2%80%93down_and_bottom%E2%80%93up_design&#34;&gt;http://en.wikipedia.org/wiki/Top%E2%80%93down_and_bottom%E2%80%93up_design&lt;/a&gt;&lt;/span&gt;
  &lt;/li&gt;
  &lt;li&gt;
    Everybody lies, uma frase do House: &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=nNOExDrsdbg&#34;&gt;http://www.youtube.com/watch?v=nNOExDrsdbg&lt;/a&gt;&lt;/span&gt;
  &lt;/li&gt;
  &lt;li&gt;
    W3C sobre formulários: &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/interact/forms.html#h-17.1&#34;&gt;http://www.w3.org/TR/html4/interact/forms.html#h-17.1&lt;/a&gt;&lt;/span&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://www.mhavila.com.br/topicos/web/controles.html&#34;&gt;http://www.mhavila.com.br/topicos/web/controles.html&lt;/a&gt;&lt;/span&gt;
  &lt;/li&gt;
  &lt;li&gt;
    Spinner: &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://www.jgeppert.com/jquery-spinner/&#34;&gt;http://www.jgeppert.com/jquery-spinner/&lt;/a&gt;&lt;/span&gt;
  &lt;/li&gt;
  &lt;li&gt;
    A Form of madness: &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://diveintohtml5.org/forms.html&#34;&gt;http://diveintohtml5.org/forms.html&lt;/a&gt;&lt;/span&gt;
  &lt;/li&gt;
  &lt;li&gt;
    Responsive webdesign: &lt;span class=&#34;c8&#34;&gt;&lt;a href=&#34;http://www.alistapart.com/articles/responsive-web-design/&#34;&gt;http://www.alistapart.com/articles/responsive-web-design/&lt;/a&gt;&lt;/span&gt;
  &lt;/li&gt;
  &lt;li&gt;
    Composição de um time multidisciplinar de UX &amp;#8211; &lt;a href=&#34;http://itweb.com.br/blogs/a-composicao-de-um-time-multidisciplinar-de-ux/&#34;&gt;http://itweb.com.br/blogs/a-composicao-de-um-time-multidisciplinar-de-ux/&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    UX Team of One &amp;#8211; &lt;a href=&#34;http://www.slideshare.net/ugleah/how-to-be-a-ux-team-of-one&#34;&gt;http://www.slideshare.net/ugleah/how-to-be-a-ux-team-of-one&lt;/a&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Tenha o DOM</title>
      <link>http://tableless.com.br/tenha-o-dom/</link>
      <pubDate>Mon, 25 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/tenha-o-dom/</guid>
      <description>

&lt;p&gt;Muito ja foi falado sobre DOM e posso estar sendo repetitivo aqui, mas é importante falar deste assunto que em dias de manipulação pesada de seletores, percebo que pouca atenção é dada. Temos muita literatura boa sobre o assunto mas muitas vezes o foco acaba sendo o novo plugin que saiu e faz mais-do-mesmo-no-front-end-só-que-mais-fácil (E se você tiver sorte ele é free).&lt;/p&gt;

&lt;p&gt;Entender realmente como um navegador funciona é importante, e garante seu entendimento do &lt;strong&gt;real&lt;/strong&gt; dos problemas que está enfrentando no código que está implementando. Tem mais! Criar um código que manipula o layout (leia-se DOM) fica mais fácil, é uma relação &lt;em&gt;win-win&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Criado pelo W3C, &lt;strong&gt;O DOM é uma multi-plataforma que representa como as marcações em HTML, XHTML e XML são organizadas e lidas pelo navegador que você usa&lt;/strong&gt;. Uma vez indexadas, estas marcações se transformam em elementos de uma árvore que você pode manipular via API &amp;#8211; que é o que fazemos quando usamos programas ou scripts para alterar funcionalidades de uma página: conteudo, estrutura ou folha de estilo.&lt;/p&gt;

&lt;h2 id=&#34;um-pouco-de-história&#34;&gt;Um pouco de história&lt;/h2&gt;

&lt;p&gt;Não tem graça falar sobre o assunto sem mostrar como ele surgiu. Isso só reforça ainda mais a importância de conhecermos bem o assunto pois mostra sua relevância (e porque falar de _browser wars_ é bem legal, apesar de evidenciar os cabelos brancos).&lt;/p&gt;

&lt;p&gt;Netscape e Microsoft guerreavam com Netscape 2 e IE3.0 lá em 1996 e enquanto a Netscape lançava o &lt;strong&gt;Javascript&lt;/strong&gt; a Microsoft lançava o &lt;strong&gt;JScript&lt;/strong&gt;. A diferença entre um e outro não é nada mais além do nome &amp;#8211; acredite! Por razões comerciais devido as “&lt;span&gt;sangrentas” &lt;em&gt;browser wars&lt;/em&gt; as empresas decidiram adotar nomes diferentes para a mesma coisa &amp;#8211; que na verdade era (e continua sendo) o &lt;strong&gt;ECMAScript&lt;/strong&gt;, a linguagem que comecou a ser criada em 1994 quando o W3C colocou na mesma mesa as duas empresas e várias outras para desenvolver um padrão para linguagens de script para os navegadores. &lt;strong&gt;Javascript, JScript e ActionScript não são nada mais que &lt;/strong&gt;&lt;strong&gt;&lt;em&gt;dialetos&lt;/em&gt; de ECMAScript.&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;

&lt;h2&gt;
  O DOM em sua forma e como é reconhecido pelos navegadores
&lt;/h2&gt;

&lt;p&gt;
  &lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2011/07/dom_tree.gif&#34; alt=&#34;dom_tree&#34; width=&#34;700&#34; height=&#34;365&#34; class=&#34;alignnone size-full wp-image-43633&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;
  A figura acima mostra a estrutura de uma árvore DOM, a linearização  das marcações de modo que ela possa ser montada inicialmente por um navegador. Esta estrutura não será o que veremos no navegador &amp;#8211; o layout em si. O DOM é a base para uma outra árvore que é o que realmente um browser monta na tela, a &lt;strong&gt;Árvore de Renderização &lt;/strong&gt;&amp;#8211; &lt;em&gt;aka &lt;/em&gt;&lt;em&gt;Render Tree&lt;/em&gt;.
&lt;/p&gt;

&lt;p&gt;
  A base para todos os nós da árvore DOM é o base class chamado &lt;strong&gt;Node.h&lt;/strong&gt;. Ele possui várias categorias, e as relevantes para renderizarmos código no navegador são os nós de &lt;strong&gt;documentos, elementos &lt;/strong&gt;e&lt;strong&gt; texto&lt;/strong&gt;.
&lt;/p&gt;

&lt;ol start=&#34;1&#34;&gt;
  &lt;li&gt;
    &lt;strong&gt;Documentos &lt;/strong&gt;é o nó mais importante do DOM, com três classes diferentes: &lt;strong&gt;Document&lt;/strong&gt;, que é usado por todos os documentos XML e outros que não sejam SVG (que também é um XML, porém com marcação já padronizada), &lt;strong&gt;HTMLDocument &lt;/strong&gt;que como o nome diz, cuida de documentos HTML e SVGDocument, responsável pelos documentos SVG e tambem por outros documentos herdados da classe Document (Como o &lt;strong&gt;Document.h &lt;/strong&gt;e o &lt;strong&gt;HTMLDocument.h&lt;/strong&gt;).
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;Elementos&lt;/strong&gt; são todas as tags que estão em arquivos HTML ou XML se transformam em elementos da árvore DOM. Considerando a renderização do navegador, um elemento é um nó com uma tag que pode ser usada para fazer subclasses específicas que podem ser processadas de acordo com as necessidades da &lt;em&gt;&lt;span class=&#34;c4 c9&#34;&gt;Render Tree &lt;/em&gt;(&lt;strong&gt;Element.h&lt;/strong&gt;).&lt;/li&gt; 
    
    &lt;li&gt;
      &lt;strong&gt;Texto&lt;/strong&gt;: É o texto que vai entre os elementos. Todo o conteúdo das tags (&lt;p&gt;Isto é um text node&lt;/p&gt;). O nó de Texto guarda basicamente texto puro, que pode ser renderizado ou trabalhado via script.
    &lt;/li&gt;&lt;/ol&gt; 
    

&lt;pre&gt;&lt;code&gt;&amp;lt;h2&amp;gt;
  A Render Tree
&amp;lt;/h2&amp;gt;

&amp;lt;div id=&amp;quot;attachment_3942&amp;quot; style=&amp;quot;width: 413px&amp;quot; class=&amp;quot;wp-caption alignnone&amp;quot;&amp;gt;
  &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2011/07/render.png&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;size-full wp-image-3942  &amp;quot; src=&amp;quot;http://tableless.com.br/wp-content/uploads/2011/07/render.png&amp;quot; alt=&amp;quot;Como a render tree e montada&amp;quot; width=&amp;quot;403&amp;quot; height=&amp;quot;187&amp;quot; srcset=&amp;quot;uploads/2011/07/render.png 630w, uploads/2011/07/render-300x139.png 300w&amp;quot; sizes=&amp;quot;(max-width: 403px) 100vw, 403px&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;

  &amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
    Como a render tree é montada
  &amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;p&amp;gt;
  A &amp;lt;em&amp;gt;Render Tree&amp;lt;/em&amp;gt; é a parte mais importante do processo de renderização. Bem parecida com a árvore DOM, cada objeto corresponde a nós de &amp;lt;strong&amp;gt;Documentos, Elementos ou&amp;lt;/strong&amp;gt;&amp;lt;strong&amp;gt; Texto&amp;lt;/strong&amp;gt;. A diferença é que q &amp;lt;em&amp;gt;Render Tree&amp;lt;/em&amp;gt; possui tambem objetos que não possuem nós na árvore DOM, como &amp;lt;strong&amp;gt;scripts e folhas de estilos&amp;lt;/strong&amp;gt;.
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  O processo de criação da&amp;lt;strong&amp;gt; Render Tree&amp;lt;/strong&amp;gt; passa pelos seguintes passos:
&amp;lt;/p&amp;gt;

&amp;lt;ol start=&amp;quot;1&amp;quot;&amp;gt;
  &amp;lt;li&amp;gt;
    &amp;lt;strong&amp;gt;Attachment&amp;lt;/strong&amp;gt;: Após finalizar o parse do DOM e a criação de seus nós, os navegadores chamam um método chamado &amp;lt;strong&amp;gt;attach &amp;lt;/strong&amp;gt;para começar a renderização. O attach adiciona primeiramente as folhas de estilo a árvore DOM e começa a estilização da página. Um bom exemplo é o uso das propriedades CSS display x visibility: Caso um elemento da árvore DOM tenha uma propriedade display:none, este elemento (e seus nós filhos) não será criado na&amp;lt;em&amp;gt; Render Tree&amp;lt;/em&amp;gt;. Ao contrário do uso de visibility:hidden, que vai renderizar o elemento na &amp;lt;span&amp;gt;árvore, porém  ele irá remover (ou adicionar quando visibility:visible) via&amp;lt;strong&amp;gt; Repaint &amp;lt;/strong&amp;gt;as cores (ou propriedades) que formam este elemento. Vale lembrar também que este processo de attach é &amp;lt;em&amp;gt;top down&amp;lt;/em&amp;gt;, criando sempre inicialmente os nós parent e depois seus descendentes (nós filhos). (&amp;lt;a href=&amp;quot;http://tableless.com.br/entendendo-os-reflows-2&amp;quot; title=&amp;quot;Entendendo os Reflows&amp;quot;&amp;gt;Para saber mais sobre Repaint e Reflows, veja este outro artigo&amp;lt;/a&amp;gt;)&amp;lt;/li&amp;gt; 

    &amp;lt;li&amp;gt;
      &amp;lt;strong&amp;gt;RenderStyle.h&amp;lt;/strong&amp;gt;: Durante o processo de attach um método é criado, o &amp;lt;strong&amp;gt;RenderStyle.h&amp;lt;/strong&amp;gt; que vai guardar objetos de referência com cada uma das propriedades CSS do documento. O nó criado no DOM é verificado no documento de CSS e caso existam propriedades que incidam naquele elemento, ela é aplicada. Esta propriedade fica salva dentro da &amp;lt;em&amp;gt;Render Tree &amp;lt;/em&amp;gt;até que ela seja destruída ou que este valor seja alterado por algum script.
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
      &amp;lt;strong&amp;gt;CSS Box Model: &amp;lt;/strong&amp;gt;Após o método &amp;lt;strong&amp;gt;RenderStyle&amp;lt;/strong&amp;gt; ser criado, ele é acessado via &amp;lt;strong&amp;gt;RenderObject&amp;lt;/strong&amp;gt;. O Box model é usado para posicionar um elemento dentro da página, oferecendo suporte para o conteúdo, padding, bordas e margens que envolvem este elemento
    &amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt; 

    &amp;lt;p&amp;gt;
      &amp;lt;img class=&amp;quot;alignnone&amp;quot; src=&amp;quot;http://www.w3.org/TR/CSS21/images/boxdim.png&amp;quot; alt=&amp;quot;Uma representação visual do CSS box model&amp;quot; width=&amp;quot;455&amp;quot; height=&amp;quot;340&amp;quot; /&amp;gt;
    &amp;lt;/p&amp;gt;

    &amp;lt;h2&amp;gt;
      Destruindo (ou atualizando) a Render Tree
    &amp;lt;/h2&amp;gt;

    &amp;lt;p&amp;gt;
      A &amp;lt;em&amp;gt;Render Tree&amp;lt;/em&amp;gt; é destruída quando nós da árvore DOM são removidos, causando a necessidade de um novo parse no DOM, ou quando uma tab do navegador com a árvore DOM usada é fechada. Após o refresh da árvore DOM, todo o processo acima é refeito, com attach chamando o RenderStyle, que montado chama o método &amp;lt;strong&amp;gt;style()&amp;lt;/strong&amp;gt; do RenderObject que acessa o CSS BOX model.
    &amp;lt;/p&amp;gt;

    &amp;lt;h2&amp;gt;
      Como os navegadores interpretam todos estes elementos criados por DOM e Render Tree antes de aplicar o estilo?
    &amp;lt;/h2&amp;gt;

    &amp;lt;p&amp;gt;
      Todo navegador tem uma lista de elementos HTML suportados. Quando o seu markup possui tags presentes na lista, a árvore DOM é montada e o processo de attachment começa logo na sequência e os estilos são aplicados, dando continuidade a criação da &amp;lt;span&amp;gt;&amp;lt;em&amp;gt;Render tree&amp;lt;/em&amp;gt;.&amp;lt;/p&amp;gt; 

      &amp;lt;p&amp;gt;
        O grande problema é que cada navegador tem a sua própria lista, que trata situações similares de maneiras diferentes. Obviamente já sabemos que o navegador que mais apresenta problemas para as situações acima é o Internet Explorer, mas acredite, &amp;lt;strong&amp;gt;todos &amp;lt;/strong&amp;gt;os navegadores apresentam problemas quando um elemento não está em sua lista de elementos permitidos, e precisa de um trabalho para fazer tudo acontecer na &amp;lt;span&amp;gt;Render Tree como deve ser feito.&amp;lt;/p&amp;gt; 

        &amp;lt;p&amp;gt;
          Elementos fora desta lista são tratados como Elementos desconhecidos. E eles são uma grande fonte de problemas:
        &amp;lt;/p&amp;gt;

        &amp;lt;ol start=&amp;quot;1&amp;quot;&amp;gt;
          &amp;lt;li&amp;gt;
            &amp;lt;strong&amp;gt;Como estilizar este elemento?&amp;lt;/strong&amp;gt;Por exemplo, a tag &amp;lt;p&amp;gt; tem por padrão espacamento no topo e bottom, &amp;lt;blockquote&amp;gt; possui uma indentação automática adicionando uma margem à esquerda ou &amp;lt;h1&amp;gt; tem uma fonte maior que o &amp;lt;p&amp;gt; por ser um cabeçalho. Tudo isso esta padronizado, mas como cuidar de algo que não existe?
          &amp;lt;/li&amp;gt;
          &amp;lt;li&amp;gt;
            &amp;lt;strong&amp;gt;Como este elemento deve aparecer na árvore DOM?&amp;lt;/strong&amp;gt;Os navegadores também possuem uma lista que mostra quais elementos podem ser filhos de outros elementos. Por exemplo, se você adiciona por engano no seu markup &amp;lt;p&amp;gt;&amp;lt;p&amp;gt; o segundo paragrafo implicitamente fechará o primeiro &amp;lt;p&amp;gt;, fazendo que os dois elementos sejam irmãos (no mesmo nível na árvore DOM) e nao como nós filhos como de maneira linear pode parecer. Porém se vc adiciona um &amp;lt;p&amp;gt;&amp;lt;span&amp;gt;, este paragrafo inicial não será fechado, porque o navegador permite que &amp;lt;span&amp;gt; seja filho de elementos de paragrafo, fazendo assim o &amp;lt;span&amp;gt; ser nó filho de &amp;lt;p&amp;gt;
          &amp;lt;/li&amp;gt;
        &amp;lt;/ol&amp;gt;

        &amp;lt;p&amp;gt;
          Para elementos desconhecidos, a ideia é não estilizar. Caso queira algum estilo em elementos desconhecidos, você deve colocá-lo no nó acima (se necessário um &amp;lt;em&amp;gt;wrapper&amp;lt;/em&amp;gt;), para fazer com que ele herde o estilo.
        &amp;lt;/p&amp;gt;

        &amp;lt;p&amp;gt;
          Perceba a sutileza de como isso funciona. Os dois diagramas mostram uma árvore DOM, montada por um navegador suporte HTML5 nativo e o Internet Explorer 8 (navegadores que não suportam HTML5 tem funcionamento semelhante):
        &amp;lt;/p&amp;gt;

        &amp;lt;div id=&amp;quot;attachment_3988&amp;quot; style=&amp;quot;width: 570px&amp;quot; class=&amp;quot;wp-caption alignnone&amp;quot;&amp;gt;
          &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2011/07/renderizaao_HTML5-5.png&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;size-full wp-image-3988 &amp;quot; src=&amp;quot;http://tableless.com.br/wp-content/uploads/2011/07/renderizaao_HTML5-5.png&amp;quot; alt=&amp;quot;Arvore DOM com suporte HTML5&amp;quot; width=&amp;quot;560&amp;quot; height=&amp;quot;472&amp;quot; srcset=&amp;quot;uploads/2011/07/renderizaao_HTML5-5.png 800w, uploads/2011/07/renderizaao_HTML5-5-300x252.png 300w&amp;quot; sizes=&amp;quot;(max-width: 560px) 100vw, 560px&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;

          &amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
            Arvore DOM com suporte HTML5
          &amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div id=&amp;quot;attachment_3987&amp;quot; style=&amp;quot;width: 576px&amp;quot; class=&amp;quot;wp-caption alignnone&amp;quot;&amp;gt;
          &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2011/07/renderizacaoIE-5.png&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;size-full wp-image-3987  &amp;quot; src=&amp;quot;http://tableless.com.br/wp-content/uploads/2011/07/renderizacaoIE-5.png&amp;quot; alt=&amp;quot;Arvore DOM IE e outros navegadores sem suporte HTML5&amp;quot; width=&amp;quot;566&amp;quot; height=&amp;quot;458&amp;quot; srcset=&amp;quot;uploads/2011/07/renderizacaoIE-5.png 1178w, uploads/2011/07/renderizacaoIE-5-300x243.png 300w, uploads/2011/07/renderizacaoIE-5-1024x830.png 1024w&amp;quot; sizes=&amp;quot;(max-width: 566px) 100vw, 566px&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;

          &amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
            Arvore DOM IE e outros navegadores sem suporte HTML5
          &amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;p&amp;gt;
          É por essas e outras que a gente usa o modernizr, o HTML5shiv ou um simples document.create(“SECTION”) / document.create(“ARTICLE”). E é isso que acontece quando navegadores interpretam elementos desconhecidos. Eles desconsideram o nó real aonde o elemento está, e o reconhece como filho de &amp;lt;BODY&amp;gt;. E por favor, sem trocadilhos com o &amp;lt;span&amp;gt;filho dos outros.&amp;lt;/p&amp;gt; 

          &amp;lt;p&amp;gt;
            Ver como uma árvore DOM é montada  e como a &amp;lt;em&amp;gt;Render tree &amp;lt;/em&amp;gt;é feita nos dá idéia do quão importante é ter um documento semântico. &amp;lt;strong&amp;gt;Realmente semântico&amp;lt;/strong&amp;gt;. Uma vez entendidos os conceitos, a manipulação e a programação dos elementos fica mais fácil.
          &amp;lt;/p&amp;gt;

          &amp;lt;p&amp;gt;
            E você começa a entender como os navegadores funcionam.
          &amp;lt;/p&amp;gt;

          &amp;lt;h2&amp;gt;
            Referências
          &amp;lt;/h2&amp;gt;

          &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;
              &amp;lt;a href=&amp;quot;http://tableless.com.br/entendendo-os-reflows-2&amp;quot;&amp;gt;Entendendo os Reflows&amp;lt;/a&amp;gt; por Alysson Franklin
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
              &amp;lt;a href=&amp;quot;http://www.modernizr.com/&amp;quot;&amp;gt;Modernizr&amp;lt;/a&amp;gt; para suporte HTML5
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
              &amp;lt;a href=&amp;quot;http://code.google.com/p/html5shiv/&amp;quot;&amp;gt;HTML5shiv&amp;lt;/a&amp;gt; para suporte HTML5
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
              &amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/Browser_wars&amp;quot;&amp;gt;Browser Wars&amp;lt;/a&amp;gt; pela Wikipedia
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
              &amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/ECMAScript&amp;quot;&amp;gt;ECMAScript&amp;lt;/a&amp;gt; pela Wikipedia
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
              &amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/JavaScript&amp;quot;&amp;gt;Javascript&amp;lt;/a&amp;gt; pela Wikipedia
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
              &amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/JScript&amp;quot;&amp;gt;JScript&amp;lt;/a&amp;gt; pela Wikipedia
            &amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;
              &amp;lt;a href=&amp;quot;http://www.w3.org/TR/CSS21/box.html#box-dimensions&amp;quot;&amp;gt;CSS Box model&amp;lt;/a&amp;gt; pelo W3C
            &amp;lt;/li&amp;gt;
            &amp;lt;ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Entendendo os Reflows</title>
      <link>http://tableless.com.br/entendendo-os-reflows-2/</link>
      <pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/entendendo-os-reflows-2/</guid>
      <description>

&lt;p&gt;Reflow é um assunto extenso e necessário. Ele sempre vai existir nos navegadores, então temos que entendê-lo para saber como utilizá-lo de maneira racional. O mais legal é entender todo o contexto sobre o que são e como funcionam, para a partir daí repensar o código que renderizamos no navegador para obtermos maior performance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reflow é o resultado de um evento que desencadeia mudanças no jeito que a pagina deve ser renderizada, tomando tempo para cálculo e reposicionamento de elementos.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para explicar como isso acontece, o importante é entender como um navegador renderiza uma página web.&lt;/p&gt;

&lt;h2 id=&#34;dom&#34;&gt;DOM&lt;/h2&gt;

&lt;p&gt;Document Object Model (DOM) é uma interface independente de linguagem e plataforma para representar e interagir com objetos em HTML, XHTML e XML. Mas o DOM é mais que isso; toda linguagem estruturada tem uma arvore DOM.&lt;/p&gt;

&lt;div id=&#34;attachment_3941&#34; style=&#34;width: 490px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/07/DOMTree.gif&#34;&gt;&lt;img class=&#34;size-full wp-image-3941 &#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/07/DOMTree.gif&#34; alt=&#34;Exemplo de arvore DOM para documento HTML&#34; width=&#34;480&#34; height=&#34;212&#34; srcset=&#34;uploads/2011/07/DOMTree.gif 800w, uploads/2011/07/DOMTree-300x132.gif 300w&#34; sizes=&#34;(max-width: 480px) 100vw, 480px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Exemplo de arvore DOM para documento HTML
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Mas sobre o DOM podemos dizer que programas ou scripts podem dinamicamente acessar elementos na árvore DOM e alterar seu conteúdo, estrutura e estilo. Adicional ao estado inicial da pagina, estas alterações são agregadas a árvore DOM. O resultado é a renderização &amp;#8211; o que nós vemos em um navegador. Mas a nossa &lt;em&gt;Render Tree&lt;/em&gt; tem mais que isso:&lt;/p&gt;

&lt;h2 id=&#34;render-tree-e-como-realmente-entender-display-x-visibility&#34;&gt;Render Tree e como realmente entender display X visibility&lt;/h2&gt;

&lt;div id=&#34;attachment_3942&#34; style=&#34;width: 514px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/07/render.png&#34;&gt;&lt;img class=&#34;size-full wp-image-3942 &#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/07/render.png&#34; alt=&#34;Como a render tree e montada&#34; width=&#34;504&#34; height=&#34;234&#34; srcset=&#34;uploads/2011/07/render.png 630w, uploads/2011/07/render-300x139.png 300w&#34; sizes=&#34;(max-width: 504px) 100vw, 504px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Como a render tree é montada
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;O DOM é resultado do parse do markup HTML que você montou dentro de um navegador. Só que dentro de um HTML você não tem apenas a estrutura do documento, estilos em CSS e funcionalidades em javascript também estarão no seu markup. E a Render tree é a soma de DOM mais estilos, que depois podem ser manipulados (seus scripts).&lt;/p&gt;

&lt;p&gt;Pode parecer estranho, mas para mim a melhor maneira de entender as diferencas entre DOM e Render Tree é encarar esta última como um &lt;span class=&#34;c17&#34;&gt;individuo narcisista&lt;/span&gt;. Isso mesmo: A Render Tree gosta de aparecer, é o que vemos no browser. O DOM acontece por trás das cortinas. &lt;em&gt;À Render tree, o palco&lt;/em&gt;. (&lt;a href=&#34;http://tableless.com.br/tenha-o-dom&#34; title=&#34;Tenha o DOM&#34;&gt;Para saber mais sobre o DOM, veja este outro artigo&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Uma página que tem controles de show/hide mostra isso muito bem. Enquanto todo o conteúdo da página está presente na árvore DOM, apenas alguns itens estarão disponíveis na Render Tree &amp;#8211; os visíveis na página (display:block). Alterar os elementos display:none vão disparar mudanças na render tree, e não na árvore DOM.&lt;/p&gt;

&lt;p&gt;Já tentou entender as diferenças entre display:none e visibility:hidden? A maioria das explicações que vemos é que um “deixa de mostrar o elemento totalmente, incluindo seu espaço em tela” e o outro “deixa de mostrar o elemento visual, mas sua área de exibição continua sendo utilizada”. Esta explicação não está incorreta, mas seria melhor dizer que a propriedade display altera a estrutura da render tree, adicionando algo que antes não estava ali, enquanto visibility não faz alterações, apenas o câmbio de mostrar ou não um elemento que já esta na render tree.&lt;/p&gt;

&lt;h2 id=&#34;repaint&#34;&gt;Repaint&lt;/h2&gt;

&lt;p&gt;Entendido as diferenças entre display e visibility, além do contexto de área do elemento, conseguimos explicar o Repaint. Uma ação que faça alteração de propriedades de background &lt;strong&gt;sem alterar dimensões ou outras propriedades do elemento&lt;/strong&gt; não causam o reflow, apenas o repaint, que seria a atualização da propriedade de cor ou da imagem &amp;#8211; literalmente pintar novamente o elemento. Repaints gastam menos CPU que reflows.&lt;/p&gt;

&lt;h2 id=&#34;como-um-navegador-monta-seu-documento-html&#34;&gt;Como um navegador monta seu documento HTML&lt;/h2&gt;

&lt;p&gt;Esses vídeos são sensacionais. Eles explicam o que são os reflows e dai como minimizá-los durante a fase de desenvolvimento do documento (sempre usando &lt;span class=&#34;c9&#34;&gt;&lt;a class=&#34;c7&#34; href=&#34;http://tableless.com.br/bem-vindo-a-xangrila-parte-1&#34;&gt;Progressive Enhancement&lt;/a&gt;&lt;/span&gt; quando possível) é mais fácil..&lt;/p&gt;

&lt;p&gt;[youtube &lt;a href=&#34;http://www.youtube.com/watch?v=ZTnIxIA5KGw&#34;&gt;http://www.youtube.com/watch?v=ZTnIxIA5KGw&lt;/a&gt;]&lt;/p&gt;

&lt;p class=&#34;c6 anotacao&#34;&gt;
  Esta é uma representação de como a página da Mozilla é montada. Quer mais? Veja também como a &lt;span class=&#34;c9&#34;&gt;&lt;a class=&#34;c7&#34; href=&#34;http://video.google.com/videoplay?docid=-5863446593724321515&#34;&gt;Wikipedia&lt;/a&gt;&lt;/span&gt; e a página do &lt;span class=&#34;c9&#34;&gt;&lt;a class=&#34;c7&#34; href=&#34;http://video.google.com/videoplay?docid=-1471976166301235697&#34;&gt;Google&lt;/a&gt;&lt;/span&gt; no Japão são renderizadas.
&lt;/p&gt;

&lt;p&gt;Analisando o primeiro vídeo, perceba que ao finalizar a montagem do rodapé, “algo mais” acontece (a partir de 12seg). São os Reflows. A maioria dos elementos são recalculados e reposicionados. Se ponderarmos que o rodapé acaba de ser montado aos 14 segundos e a renderização termina aos 26 segundos da pagina, estamos falando quase de 50% do tempo de renderização sendo gasto com Reflows, o que é muito, dependendo do que a sua página deve fazer.&lt;/p&gt;

&lt;h3 id=&#34;o-que-causam-exatamente-os-reflows&#34;&gt;O que causam exatamente os reflows?&lt;/h3&gt;

&lt;h5 id=&#34;reflow-é-um-assunto-extenso-e-necessário-ele-sempre-vai-existir-nos-navegadores-então-temos-que-entendê-lo-para-saber-como-utilizá-lo-de-maneira-racional-o-mais-legal-é-entender-todo-o-contexto-sobre-o-que-são-e-como-funcionam-para-a-partir-daí-repensar-o-código-que-renderizamos-no-navegador-para-obtermos-maior-performance&#34;&gt;`Reflow é um assunto extenso e necessário. Ele sempre vai existir nos navegadores, então temos que entendê-lo para saber como utilizá-lo de maneira racional. O mais legal é entender todo o contexto sobre o que são e como funcionam, para a partir daí repensar o código que renderizamos no navegador para obtermos maior performance.&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;Reflow é o resultado de um evento que desencadeia mudanças no jeito que a pagina deve ser renderizada, tomando tempo para cálculo e reposicionamento de elementos.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para explicar como isso acontece, o importante é entender como um navegador renderiza uma página web.&lt;/p&gt;

&lt;h2 id=&#34;dom-1&#34;&gt;DOM&lt;/h2&gt;

&lt;p&gt;Document Object Model (DOM) é uma interface independente de linguagem e plataforma para representar e interagir com objetos em HTML, XHTML e XML. Mas o DOM é mais que isso; toda linguagem estruturada tem uma arvore DOM.&lt;/p&gt;

&lt;div id=&#34;attachment_3941&#34; style=&#34;width: 490px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/07/DOMTree.gif&#34;&gt;&lt;img class=&#34;size-full wp-image-3941 &#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/07/DOMTree.gif&#34; alt=&#34;Exemplo de arvore DOM para documento HTML&#34; width=&#34;480&#34; height=&#34;212&#34; srcset=&#34;uploads/2011/07/DOMTree.gif 800w, uploads/2011/07/DOMTree-300x132.gif 300w&#34; sizes=&#34;(max-width: 480px) 100vw, 480px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Exemplo de arvore DOM para documento HTML
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Mas sobre o DOM podemos dizer que programas ou scripts podem dinamicamente acessar elementos na árvore DOM e alterar seu conteúdo, estrutura e estilo. Adicional ao estado inicial da pagina, estas alterações são agregadas a árvore DOM. O resultado é a renderização &amp;#8211; o que nós vemos em um navegador. Mas a nossa &lt;em&gt;Render Tree&lt;/em&gt; tem mais que isso:&lt;/p&gt;

&lt;h2 id=&#34;render-tree-e-como-realmente-entender-display-x-visibility-1&#34;&gt;Render Tree e como realmente entender display X visibility&lt;/h2&gt;

&lt;div id=&#34;attachment_3942&#34; style=&#34;width: 514px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/07/render.png&#34;&gt;&lt;img class=&#34;size-full wp-image-3942 &#34; src=&#34;http://tableless.com.br/wp-content/uploads/2011/07/render.png&#34; alt=&#34;Como a render tree e montada&#34; width=&#34;504&#34; height=&#34;234&#34; srcset=&#34;uploads/2011/07/render.png 630w, uploads/2011/07/render-300x139.png 300w&#34; sizes=&#34;(max-width: 504px) 100vw, 504px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Como a render tree é montada
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;O DOM é resultado do parse do markup HTML que você montou dentro de um navegador. Só que dentro de um HTML você não tem apenas a estrutura do documento, estilos em CSS e funcionalidades em javascript também estarão no seu markup. E a Render tree é a soma de DOM mais estilos, que depois podem ser manipulados (seus scripts).&lt;/p&gt;

&lt;p&gt;Pode parecer estranho, mas para mim a melhor maneira de entender as diferencas entre DOM e Render Tree é encarar esta última como um &lt;span class=&#34;c17&#34;&gt;individuo narcisista&lt;/span&gt;. Isso mesmo: A Render Tree gosta de aparecer, é o que vemos no browser. O DOM acontece por trás das cortinas. &lt;em&gt;À Render tree, o palco&lt;/em&gt;. (&lt;a href=&#34;http://tableless.com.br/tenha-o-dom&#34; title=&#34;Tenha o DOM&#34;&gt;Para saber mais sobre o DOM, veja este outro artigo&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Uma página que tem controles de show/hide mostra isso muito bem. Enquanto todo o conteúdo da página está presente na árvore DOM, apenas alguns itens estarão disponíveis na Render Tree &amp;#8211; os visíveis na página (display:block). Alterar os elementos display:none vão disparar mudanças na render tree, e não na árvore DOM.&lt;/p&gt;

&lt;p&gt;Já tentou entender as diferenças entre display:none e visibility:hidden? A maioria das explicações que vemos é que um “deixa de mostrar o elemento totalmente, incluindo seu espaço em tela” e o outro “deixa de mostrar o elemento visual, mas sua área de exibição continua sendo utilizada”. Esta explicação não está incorreta, mas seria melhor dizer que a propriedade display altera a estrutura da render tree, adicionando algo que antes não estava ali, enquanto visibility não faz alterações, apenas o câmbio de mostrar ou não um elemento que já esta na render tree.&lt;/p&gt;

&lt;h2 id=&#34;repaint-1&#34;&gt;Repaint&lt;/h2&gt;

&lt;p&gt;Entendido as diferenças entre display e visibility, além do contexto de área do elemento, conseguimos explicar o Repaint. Uma ação que faça alteração de propriedades de background &lt;strong&gt;sem alterar dimensões ou outras propriedades do elemento&lt;/strong&gt; não causam o reflow, apenas o repaint, que seria a atualização da propriedade de cor ou da imagem &amp;#8211; literalmente pintar novamente o elemento. Repaints gastam menos CPU que reflows.&lt;/p&gt;

&lt;h2 id=&#34;como-um-navegador-monta-seu-documento-html-1&#34;&gt;Como um navegador monta seu documento HTML&lt;/h2&gt;

&lt;p&gt;Esses vídeos são sensacionais. Eles explicam o que são os reflows e dai como minimizá-los durante a fase de desenvolvimento do documento (sempre usando &lt;span class=&#34;c9&#34;&gt;&lt;a class=&#34;c7&#34; href=&#34;http://tableless.com.br/bem-vindo-a-xangrila-parte-1&#34;&gt;Progressive Enhancement&lt;/a&gt;&lt;/span&gt; quando possível) é mais fácil..&lt;/p&gt;

&lt;p&gt;[youtube &lt;a href=&#34;http://www.youtube.com/watch?v=ZTnIxIA5KGw&#34;&gt;http://www.youtube.com/watch?v=ZTnIxIA5KGw&lt;/a&gt;]&lt;/p&gt;

&lt;p class=&#34;c6 anotacao&#34;&gt;
  Esta é uma representação de como a página da Mozilla é montada. Quer mais? Veja também como a &lt;span class=&#34;c9&#34;&gt;&lt;a class=&#34;c7&#34; href=&#34;http://video.google.com/videoplay?docid=-5863446593724321515&#34;&gt;Wikipedia&lt;/a&gt;&lt;/span&gt; e a página do &lt;span class=&#34;c9&#34;&gt;&lt;a class=&#34;c7&#34; href=&#34;http://video.google.com/videoplay?docid=-1471976166301235697&#34;&gt;Google&lt;/a&gt;&lt;/span&gt; no Japão são renderizadas.
&lt;/p&gt;

&lt;p&gt;Analisando o primeiro vídeo, perceba que ao finalizar a montagem do rodapé, “algo mais” acontece (a partir de 12seg). São os Reflows. A maioria dos elementos são recalculados e reposicionados. Se ponderarmos que o rodapé acaba de ser montado aos 14 segundos e a renderização termina aos 26 segundos da pagina, estamos falando quase de 50% do tempo de renderização sendo gasto com Reflows, o que é muito, dependendo do que a sua página deve fazer.&lt;/p&gt;

&lt;h3 id=&#34;o-que-causam-exatamente-os-reflows-1&#34;&gt;O que causam exatamente os reflows?&lt;/h3&gt;

&lt;p&gt;#####`&lt;/p&gt;

&lt;p&gt;Reflows são excessivamente pesados e para reduzir efeitos uma das táticas que navegadores usam é processar nossos scripts em lote. Uma fila é criada para todos os comandos que causam reflow sejam processados de uma única vez. Porém o foco é entender o que causa um reflow e tentar minimizar o seu uso para ganhar performance na aplicação.&lt;/p&gt;

&lt;p&gt;Este assunto é novo, e com certeza, A lista que mostro abaixo deve crescer. É importante mantermos a atenção a este assunto porque pequenos cuidados podem significar muito. Em um site web visualizado em desktops a diferença é óbvia sobre o tempo de renderização. Mas isso implica em outras coisas, que podem fazer a diferença não apenas em montar uma página mais rápido, mas também para menor gasto de processamento, o que garante também mais tempo de bateria em mobiles e tablets por exemplo.&lt;/p&gt;

&lt;ol start=&#34;1&#34;&gt;
  &lt;li&gt;
    Adicionar, remover ou atualizar o DOM;
  &lt;/li&gt;
  &lt;li&gt;
    Esconder nós do DOM usando display:none;
  &lt;/li&gt;
  &lt;li&gt;
    Mover e animar o DOM na página;
  &lt;/li&gt;
  &lt;li&gt;
    Adicionar folhas de estilo on-the-fly que mudem o comportamento dos elementos;
  &lt;/li&gt;
  &lt;li&gt;
    Redimensionar janelas;
  &lt;/li&gt;
  &lt;li&gt;
    Alterar tamanho de fontes;
  &lt;/li&gt;
  &lt;li class=&#34;c6 c15&#34;&gt;
    Scroll de página;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Em um dos posts sobre o assunto, Tony G mapeou pesquisas prévias e montou a seguinte tabela, que também está sendo constantemente atualizada.&lt;/p&gt;

&lt;table class=&#34;c16&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;h4&gt;
        &lt;strong&gt;Element&lt;/strong&gt;
      &lt;/h4&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;h4&gt;
        &lt;strong&gt;Frame, Image&lt;/strong&gt;
      &lt;/h4&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;h4&gt;
        &lt;strong&gt;Range&lt;/strong&gt;
      &lt;/h4&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;h4&gt;
        &lt;strong&gt;SVGLocatable&lt;/strong&gt;
      &lt;/h4&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;h4&gt;
        &lt;strong&gt;SVGTextContent&lt;/strong&gt;
      &lt;/h4&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;h4&gt;
        &lt;strong&gt;SVGUse&lt;/strong&gt;
      &lt;/h4&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;h4&gt;
        &lt;strong&gt;window&lt;/strong&gt;
      &lt;/h4&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;span class=&#34;c0&#34;&gt;clientHeight,&lt;br /&gt; &lt;/span&gt;&lt;span class=&#34;c0&#34;&gt;clientLeft,&lt;br /&gt; &lt;/span&gt;&lt;span class=&#34;c0&#34;&gt;clientTop,&lt;br /&gt; &lt;/span&gt;&lt;span class=&#34;c0&#34;&gt;clientWidth,&lt;br /&gt; focus(), getBoundingClientRect(), getClientRects(), innerText,&lt;br /&gt; offsetHeight,&lt;br /&gt; offsetLeft,&lt;br /&gt; offsetParent,&lt;br /&gt; offsetTop,&lt;br /&gt; offsetWidth,&lt;br /&gt; outerText,&lt;br /&gt; scrollByLines(), scrollByPages(), scrollHeight, scrollIntoView(), scrollIntoViewIfNeeded(), scrollLeft,&lt;br /&gt; scrollTop,&lt;br /&gt; &lt;/span&gt;scrollWidth
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;span class=&#34;c0&#34;&gt;height, width&lt;/span&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;span class=&#34;c0&#34;&gt;getBoundingClientRect(), getClientRects()&lt;/span&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;span class=&#34;c0&#34;&gt;computeCTM(), getBBox()&lt;/span&gt;&lt;/p&gt; 
      
      &lt;p class=&#34;c5&#34;&gt;
        &lt;/td&gt; 
        
        &lt;td&gt;
          &lt;span class=&#34;c0&#34;&gt;getCharNumAtPosition(), getComputedTextLength(), getEndPositionOfChar(), getExtentOfChar(), getNumberOfChars(), getRotationOfChar(), getStartPositionOfChar(), getSubStringLength(), selectSubString()&lt;/span&gt;
        &lt;/td&gt;
        
        &lt;td&gt;
          &lt;span class=&#34;c0&#34;&gt;instanceRoot&lt;/span&gt;
        &lt;/td&gt;
        
        &lt;td&gt;
          &lt;span class=&#34;c0&#34;&gt;getComputedStyle(),&lt;br /&gt; scrollBy(),&lt;br /&gt; scrollTo(),&lt;br /&gt; scrollX,&lt;br /&gt; scrollY, webkitConvertPointFromNodeToPage(), webkitConvertPointFromPageToNode()&lt;/span&gt;
        &lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; 
        

&lt;pre&gt;&lt;code&gt;    &amp;lt;h2&amp;gt;
      Como melhorar o meu código para minimizar os reflows?
    &amp;lt;/h2&amp;gt;

    &amp;lt;p&amp;gt;
      É simples. Basta minimizar o uso de requisições de estilo, que façam o navegador executar reflows ou repaints.
    &amp;lt;/p&amp;gt;

    &amp;lt;ol start=&amp;quot;1&amp;quot;&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;span class=&amp;quot;c11&amp;quot;&amp;gt;Planejar a sua aplicação e entender como plugins e scripts criados vão se comportar em relação a reflow e repaints. Arquitetar o uso de plugins de acordo com a personalização que deve ser feita. Minimize o uso de alteração de estilos on-the-fly.&amp;lt;/span&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;span class=&amp;quot;c11&amp;quot;&amp;gt;Quando precisar alterar a propriedade de um estilo, troque o nome da classe, planeje a existência deste estado e adicione-o ao CSS previamente. Se o valor desta nova classe for dinâmica, use cssText. Evite alterar a propriedade diretamente para qualquer mudança.&amp;lt;/span&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;span class=&amp;quot;c0&amp;quot;&amp;gt;Pense como suas mudanças afetam a render tree e o quanto precisará ser revalidado depois desta mudanca. Se você usa position:absolute em um elemento, ele deixa de pertencer ao nó que está, e passa a ser filho do BODY. Alterá-lo então, não será tão custoso em termos de performance. Mesmo que alterações neste nó sobreponha outras areas, o reflow acontecerá apenas neste nó, e não em toda a render tree. &amp;lt;/span&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;span class=&amp;quot;c11&amp;quot;&amp;gt;Limpe seu CSS. Classes não utilizadas devem ser removidas.&amp;lt;/span&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;span class=&amp;quot;c11&amp;quot;&amp;gt;Reduza o número de mudanças no DOM. Ele vai causar mudanças estruturais em todas as outras etapas. E mais tempo de reflow. &amp;lt;/span&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;span class=&amp;quot;c11&amp;quot;&amp;gt;Animações na página, transições? Pondere sobre posicioná-la de maneira absoluta e trabalhar com ela a partir do BODY.&amp;lt;/span&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;span class=&amp;quot;c11&amp;quot;&amp;gt;Vá com calma nos seletores CSS &amp;amp;#8211; os descendentes em particular &amp;amp;#8211; pois usam maior poder de CPU para executar a tarefa (CPU = Bateria).&amp;lt;/span&amp;gt;
      &amp;lt;/li&amp;gt;
    &amp;lt;/ol&amp;gt;

    &amp;lt;h2&amp;gt;
      Referências
    &amp;lt;/h2&amp;gt;

    &amp;lt;ul&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/Document_Object_Model&amp;quot;&amp;gt;DOM&amp;lt;/a&amp;gt; pela wikipedia
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://video.google.com/videoplay?docid=-1471976166301235697#docid=1020647662203348823&amp;quot;&amp;gt;Gecko Reflow&amp;lt;/a&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://paulirish.com/2011/dom-html5-css3-performance/&amp;quot;&amp;gt;DOM, HTML5, CSS3 e Performance&amp;lt;/a&amp;gt; &amp;amp;#8211; &amp;lt;a href=&amp;quot;http://dl.dropbox.com/u/39519/talks/gperf/index.html&amp;quot;&amp;gt;Slides&amp;lt;/a&amp;gt; por Paul Irish
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://www.mozilla.org/newlayout/doc/reflow.html&amp;quot;&amp;gt;Reflow&amp;lt;/a&amp;gt; pelo Mozilla Labs
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://ajaxian.com/archives/browser-reflows-how-do-they-affect-performance&amp;quot;&amp;gt;Reflow e Repaint&amp;lt;/a&amp;gt; na Ajaxian
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://code.google.com/speed/articles/reflow.html&amp;quot;&amp;gt;Reflow&amp;lt;/a&amp;gt; pelo Google Code
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://www.w3.org/DOM/&amp;quot;&amp;gt;W3C Overview do DOM&amp;lt;/a&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://www.dayofjs.com/videos/22158462/web-browsers_alex-russel&amp;quot;&amp;gt;1 dia de javascript com Alex Russel: Como Navegadores Veem as suas Apps&amp;lt;/a&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://gent.ilcore.com/2011/03/how-not-to-trigger-layout-in-webkit.html&amp;quot;&amp;gt;Como (não) criar um layout no webkit por Tony G&amp;lt;/a&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://www.webkit.org/blog/1091/more-web-inspector-updates/#timeline_panel&amp;quot;&amp;gt;Usando a timeline panel em navegadores webkit&amp;lt;/a&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://www.bookofspeed.com/&amp;quot;&amp;gt;The book of Speed&amp;lt;/a&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/&amp;quot;&amp;gt;Reflow/Repaint&amp;lt;/a&amp;gt; por Stoyan Stefanov
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://calendar.perfplanet.com/2009/the-new-game-show-will-it-reflow/&amp;quot;&amp;gt;Inconsistências dos navegadores em Reflows&amp;lt;/a&amp;gt; por Stoyan Stefanov
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://www.browserscope.org/?category=reflow&amp;quot;&amp;gt;BrowserScope tests para reflows&amp;lt;/a&amp;gt;
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://www.youtube.com/watch?v=a2_6bGNZ7bA&amp;quot;&amp;gt;Browsers para Web Developers&amp;lt;/a&amp;gt; David Baron da Mozilla labs
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;http://www.webkit.org/blog/114/webcore-rendering-i-the-basics/&amp;quot;&amp;gt;Renderização no webkit, o básico&amp;lt;/a&amp;gt;
      &amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Keygen: Certificando suas paginas com HTML</title>
      <link>http://tableless.com.br/keygen-certificando-suas-paginas-com-html/</link>
      <pubDate>Wed, 13 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/keygen-certificando-suas-paginas-com-html/</guid>
      <description>

&lt;p&gt;Com a convergência tudo está indo para a web. Tudo. Por enquanto a grande maioria das apps e paginas estão abertas, mas a medida que o tempo passa, a web também evolui. Em um ambiente completamente social, aonde a relevância do conteúdo não está mais nas mãos de quem anuncia, mas sim na dos leitores, conteúdo cada vez mais segmentado vai surgir. E inevitavelmente, cada vez mais precisaremos de &lt;strong&gt;certificados&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;o-que-são-e-como-funcionam-os-certificados&#34;&gt;O que são e como funcionam os certificados?&lt;/h2&gt;

&lt;p&gt;Em criptografia, um certificado de chave pública (também conhecido como um certificado digital ou certificado de identidade – aka SSL) é um documento eletrônico que usa uma assinatura digital para vincular uma chave pública com informações sobre a identidade do remetente – que pode ter informações como o nome de uma pessoa ou um organização, seu endereço e assim por diante. O certificado pode ser usado para verificar se uma chave pública pertence a um indivíduo. Vamos cada vez mais agregando valor ao conteúdo na web através de rating, comentários, presença online, etc. Mas ainda sim a web oferece brechas no sistema, permitindo que pessoas possam emitir valores e opiniões sem a devida validação. Essas brechas vao diminuindo a medida que os certificados vão sendo usados, e em uma web puramente social, é difícil se imaginar sem um destes certificados, e acho que no futuro próximo, isso será realidade mandatória para todos.&lt;/p&gt;

&lt;p&gt;O uso mais comum dos certificados é de web sites baseados em HTTPS. Browsers validam certificados SSL de servidores web, para que o usuário pode se sentir seguro de que sua interação com o site não tem espiões e que o site é quem afirma ser. Na prática, um usuário obtém uma chave criptografada gerada pelo website, que validada com um fornecedor certificado (uma loja de certificado$) confirma a procedência do certificado. Durante a navegação, este certificado público é enviado a qualquer browser que se conecte ao site, mostrando para o usuário que o endereço é validado – e seguro.&lt;/p&gt;

&lt;div id=&#34;attachment_3480&#34; style=&#34;width: 662px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/04/certifi.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2011/04/certifi.png&#34; alt=&#34;Esta imagem é uma representacao grafica do ultimo paragrafo, mostrando a interacao que o usuario tem com servidor atraves de SSL&#34; width=&#34;652&#34; height=&#34;207&#34; class=&#34;size-full wp-image-3480&#34; srcset=&#34;uploads/2011/04/certifi.png 652w, uploads/2011/04/certifi-300x95.png 300w&#34; sizes=&#34;(max-width: 652px) 100vw, 652px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Intercação de usuário com website seguro atraves de certificados SSL
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Quem faz esta validação é chamado de &lt;strong&gt;entidade certificadora&lt;/strong&gt;, e poderíamos mencionar a &lt;strong&gt;Certisign&lt;/strong&gt;, &lt;strong&gt;Verisign&lt;/strong&gt; e &lt;strong&gt;Serasa&lt;/strong&gt; além de &lt;strong&gt;Federações e Sindicatos&lt;/strong&gt;, como a &lt;strong&gt;FENACON&lt;/strong&gt; e a &lt;strong&gt;PRODEMGE&lt;/strong&gt;. No Brasil por exemplo, manter uma chave publica pessoal para atestar sua identidade (&lt;a href=&#34;http://www.certisign.com.br/produtos-e-servicos/certificados-digitais/e-cpf&#34;&gt;e-CPF&lt;/a&gt;) custa em média R$130,00.&lt;/p&gt;

&lt;h2 id=&#34;single-sign-on-x-certificados&#34;&gt;Single sign-on X Certificados&lt;/h2&gt;

&lt;p&gt;É notório que o custo dos certificados são suas maiores barreiras. É visível o custo de manutenção de estruturas para manter servidores &lt;strong&gt;apenas&lt;/strong&gt; para validar certificados – e não são poucos. Mas mesmo assim, algo tão importante deveria ser mantido em regime de economia de escala &amp;#8211; e ser oferecido de maneira mais acessível a população.&lt;/p&gt;

&lt;p&gt;Enquanto isso, vamos oferecendo soluções para os clientes que envolvem na maioria das vezes, &lt;a href=&#34;http://www.opengroup.org/security/sso/&#34;&gt;single-sign-on (SSO)&lt;/a&gt;. O conceito vem sendo pregado pelo &lt;a href=&#34;http://www.opengroup.org/security/sso/&#34;&gt;Open Group&lt;/a&gt; a muito tempo, e dele surgiu o &lt;a href=&#34;http://openid.net/get-an-openid/what-is-openid/&#34;&gt;OpenID&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O funcionamento de um &lt;strong&gt;OpenID&lt;/strong&gt; é simples, ele simplesmente valida a existência de um usuário baseado em serviços ja consolidados de login, que oferecem uma API bem documentada e incentivam o seu uso. &lt;a href=&#34;http://openid.net/get-an-openid/&#34;&gt;Google, Facebook e outras empresas oferecem estes servicos&lt;/a&gt;. “Cascatear” a validação, oferecendo a segurança de uma entidade como as mencionadas é algo que fortalece muito a segurança da sua aplicação e a confiança do usuário. Se você não existe em uma rede social (eis que chegamos na &lt;a href=&#34;http://pt.wikipedia.org/wiki/Reifica%C3%A7%C3%A3o_(marxismo)&#34;&gt;reificação&lt;/a&gt; do usuário através de sua existencia digital), não tem como logar, validar, navegar&amp;#8230; enfim, nada.&lt;/p&gt;

&lt;p&gt;Mas ainda sim este método apresenta falhas. Alguém que tenha posse de seu user e senha pode facilmente se passar por você. Isso o single sign-on não pode evitar, mas certificados resolvem este problema. Mas também não são perfeitos. É importante conhecer os dois métodos pois dependendo do nível de segurança que você precisa oferecer a aplicação, qualquer uma das opções serão válidas. Quer apenas ter certeza que o usuário existe antes de postar um comentário em seu site? Ok, dá pra usar um single sign-on sem problemas. Precisa mostrar que seu site é &lt;strong&gt;realmente seguro&lt;/strong&gt; para garantir transações financeiras e honrar o cadeadinho na tray do navegador? Certificados são o que você deverá usar.&lt;/p&gt;

&lt;h2 id=&#34;como-requerer-um-certificado-pelo-método-usual&#34;&gt;Como requerer um certificado pelo método usual?&lt;/h2&gt;

&lt;p&gt;Um certificado custa dinheiro. E não é barato. Talvez por isso eles ainda nao sejam amplamente utilizados. Bancos por exemplo costumam pagar para seus clientes seus certificados como ferramentas de fidelização. Certificados são temporais e muitas pessoas quando necessitam, compram por um ano ou tres o serviço. Existem leis em tramite no congresso em relação ao RIC, o registro de identidade civil, com vinculações ao e-cpf, o que virtualmente obriga todos a possuírem certificados digitais atrelados ao CPF no longo prazo.&lt;/p&gt;

&lt;h2 id=&#34;como-montar-um-certificado-apenas-com-8230-html&#34;&gt;Como montar um certificado apenas com&amp;#8230; HTML?&lt;/h2&gt;

&lt;p&gt;Mas até ai nada novo. Na real, nada do que esta neste post é novo, apenas &lt;strong&gt;obscuro&lt;/strong&gt;. Desde a época do saudoso Netspace Navigator existe uma tag pouco utilizada, e da mesma maneira pouco conhecida &amp;#8211; &lt;keygen&gt; &lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2011/04/IC341506.gif&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://tableless.com.br/wp-content/uploads/2011/04/IC341506.gif&amp;quot; alt=&amp;quot;&amp;quot; width=&amp;quot;561&amp;quot; height=&amp;quot;200&amp;quot; class=&amp;quot;alignleft size-full wp-image-3481&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Quando a internet ainda engatinhava, a Netscape criou um meio dela mesma poder emitir – e validar – certificados, usando HTTP e HTML. Essa tag é suportada pela maioria dos browsers (exceção a Apple – Safari e iOS), porém nunca foi oficialmente colocada no pacote das especificações HTML. Vinha sendo usada de maneira tímida, mas voltou aos spots com o HTML5. Ou seja, embora muitas documentações mencionem ela como elemento HTML5 (inclusive a do Mozilla Developer Network), é quase mais velha que a especificação HTML4.&lt;/p&gt;

&lt;h2 id=&#34;como-funciona&#34;&gt;Como funciona?&lt;/h2&gt;

&lt;p&gt;A sintaxe é simples e suporta atributos globais como o autofocus.&lt;/p&gt;

&lt;pre lang=&#34;html&#34; line=&#34;1&#34;&gt;&amp;lt;keygen name=&#34;soureal&#34; challenge=&#34;String de verificacao&#34; keytype=&#34;tipo de chave&#34; keyparams=&#34;pqg-params&#34;&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Challenge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Uma seqüência de desafio que é apresentado juntamente com a chave pública. O padrão é uma string vazia se não for especificada.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disabled&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Atributo booleano que indica que o controle de formulário não está disponível para interação.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Form&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Todo &lt;code&gt;keygen&lt;/code&gt; para funcionar depende de um form que processa a informação. Com isso, podemos dizer que por enquanto, adeus Ajax para fazer uso de keygen sem submeter formulários. Foi da tentativa de conseguir isso que resolvi criar este post. O elemento de form precisa existir associado ao &amp;lt;keygen&amp;amp;gt.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;keyType&lt;/dt&gt;
&lt;dd&gt;O tipo de chave gerada. O valor padrão é o RSA.&lt;/dd&gt;
&lt;dt&gt;Nome&lt;/dt&gt;
&lt;dd&gt;O nome do campo&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt; e &lt;strong&gt;Challenge&lt;/strong&gt; são attributos obrigatórios. &lt;strong&gt;Keytype&lt;/strong&gt; especifica o tipo de chave (RSA-DSA e EC). Caso use chaves DSA ou EC você precisa especificar &lt;strong&gt;keyparams&lt;/strong&gt;. Para declará-los da seguinte maneira: &lt;strong&gt;keyparams=&amp;#8221;pqg-params&amp;#8221;&lt;/strong&gt; ou &lt;strong&gt;pqg=&amp;#8221;pqg-params&amp;#8221;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O modo como o keygen é apresentado varia de navegador a navegador, desde os tempos de Netscape (a Microsoft acreditem – criou um suporte sensacional – porém atrelado a registro de DLL’s, te obrigando a ter um IIS, e por consequencia uma licença de Windows). A interface do usuário para pode ser um menu, botões de rádio, ou até abordagens que ainda não conhecemos. As opções de encriptação apresentam níveis, médio e alto. Se o navegador do usuário estiver configurado para suportar&lt;/p&gt;

&lt;p&gt;hardware criptográfico (por exemplo, &amp;#8220;smart cards&amp;#8221;), o usuário também poderá escolher aonde salvar seu certificado, em um cartão inteligente ou em um software(browser) e armazenado no disco.&lt;/p&gt;

&lt;h2 id=&#34;e-o-código&#34;&gt;E o código?&lt;/h2&gt;

&lt;pre lang=&#34;html&#34; line=&#34;1&#34;&gt;&lt;/pre&gt;

&lt;p&gt;Para ver o em ação, clique aqui: &lt;a href=&#34;http://koolbanana.com.br/usehtml/keygen.html&#34;&gt;http://koolbanana.com.br/usehtml/keygen.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E pra quem achava que keygen era coisa de pirata&amp;#8230;&lt;/p&gt;

&lt;p&gt;Gostaria de agradecer o &lt;strong&gt;Gabriel Pereira Borges&lt;/strong&gt; por ter ajudado (e inspirado) este post. A dor de cabeça valeu a pena!&lt;/p&gt;

&lt;h3 id=&#34;referências&#34;&gt;Referências&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Certificados SSL: &lt;a href=&#34;http://en.wikipedia.org/wiki/Ssl_certificate&#34;&gt;http://en.wikipedia.org/wiki/Ssl_certificate&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.networksolutions.com/SSL-certificates/how-ssl-works.jsp&#34;&gt;http://www.networksolutions.com/SSL-certificates/how-ssl-works.jsp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;e-cpf: &lt;a href=&#34;http://www.certisign.com.br/produtos-e-servicos/certificados-digitais/e-cpf&#34;&gt;http://www.certisign.com.br/produtos-e-servicos/certificados-digitais/e-cpf&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.receita.fazenda.gov.br/atendvirtual/solicemrenrevcd.htm&#34;&gt;http://www.receita.fazenda.gov.br/atendvirtual/solicemrenrevcd.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open Group: &lt;a href=&#34;http://www.opengroup.org/&#34;&gt;http://www.opengroup.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSO: &lt;a href=&#34;http://www.opengroup.org/security/sso/&#34;&gt;http://www.opengroup.org/security/sso/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://code.google.com/googleapps/marketplace/sso.html&#34;&gt;http://code.google.com/googleapps/marketplace/sso.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SAML: &lt;a href=&#34;http://code.google.com/googleapps/domain/sso/saml_reference_implementation.html&#34;&gt;http://code.google.com/googleapps/domain/sso/saml_reference_implementation.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenID: &lt;a href=&#34;http://openid.net/get-an-openid/&#34;&gt;http://openid.net/get-an-openid/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://openid.net/get-an-openid/what-is-openid/&#34;&gt;http://openid.net/get-an-openid/what-is-openid/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reificação: &lt;a href=&#34;http://pt.wikipedia.org/wiki/Reifica%C3%A7%C3%A3o_(marxismo&#34;&gt;http://pt.wikipedia.org/wiki/Reifica%C3%A7%C3%A3o_(marxismo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;RIC: &lt;a href=&#34;http://portal.mj.gov.br/ric&#34;&gt;http://portal.mj.gov.br/ric&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Keygen: &lt;a href=&#34;https://developer.mozilla.org/En/HTML/Element/keygen&#34;&gt;https://developer.mozilla.org/En/HTML/Element/keygen&lt;/a&gt;&lt;br /&gt;
Obscure tags: &lt;a href=&#34;http://obscuretags.com/showcode.php?id=19&#34;&gt;http://obscuretags.com/showcode.php?id=19&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://dev.w3.org/html5/markup/keygen.html&#34;&gt;http://dev.w3.org/html5/markup/keygen.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/cc249768(v=prot.13).aspx&#34;&gt;http://msdn.microsoft.com/en-us/library/cc249768(v=prot.13).aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;documentacao de 1998(!!!): &lt;a href=&#34;http://devedge-temp.mozilla.org/library/manuals/1998/htmlguide/tags10.html#1615503&#34;&gt;http://devedge-temp.mozilla.org/library/manuals/1998/htmlguide/tags10.html#1615503&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gerando chaves com Keygen em IIS: &lt;a href=&#34;http://forums.hostsearch.com/archive/index.php?t-2094.html&#34;&gt;http://forums.hostsearch.com/archive/index.php?t-2094.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IIS suporte a keygen: &lt;a href=&#34;http://certs.ipsca.com/Support/CSRMicrosoft-Internet-Information-Server-4.0.asp&#34;&gt;http://certs.ipsca.com/Support/CSRMicrosoft-Internet-Information-Server-4.0.asp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Um raio-x do seu website</title>
      <link>http://tableless.com.br/um-raio-x-do-seu-website/</link>
      <pubDate>Thu, 03 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/um-raio-x-do-seu-website/</guid>
      <description>

&lt;p&gt;A criacão de aplicações web evolui ao longo dos anos. A interação front-end/aplicação também segue esta evolução e é previsivel que a complexidade e a integração de funcionalidades com a interface web deva evoluir tambem. Só que para devs front-end, essa complexidade não está em novas linguagens ou tecnologias, e sim em como embarcar todas elas em um HTML semântico, limpo e de acordo com os requisitos. Tudo isso no menor tempo possível. Tempos ágeis, esses. As necessidades do cliente sempre não são compatíveis com nossos relógios e cada segundo vale nesse cenário.&lt;/p&gt;

&lt;p&gt;Não é dificil abracarmos ferramentas que podem otimizar o nosso tempo. Fazer um mockup ou mesmo os primeiros protótipos sem usar Zen Coding podem ser tarefas demoradas. O Diego &lt;a href=&#34;http://tableless.com.br/produtividade-editores-e-snippets&#34;&gt;já mencionou isso&lt;/a&gt; aqui no Tableless há quase um ano e não é dificil vermos o pessoal maravilhado quando clicamos no tab e de repente a &amp;#8220;mágica&amp;#8221; acontece, montando um HTML inteiro. Não usar boilerplates ou grids pode ser fator determinante na demora no período de homologação. Mas até aí estamos falando apenas das ferramentas, e elas não são nada sem o conhecimento do desenvolvedor, somado a suas metodologias de trabalho. Nesta fase inicial de projeto, enviar uma arte para aprovação do cliente e algumas horas depois de aprovado já apresentar um modelo funcional básico, HTML/CSS com certeza pode garantir que o relacionamento cliente/desenvolvedor possa ser mais &amp;#8220;tranquilo&amp;#8221;, com uma pressão bem diferente se entre aprovação e o primeiro mockup tivermos um intervalo de um dia, por exemplo.&lt;/p&gt;

&lt;p&gt;Só que isso não é tudo, é apenas a ponta do iceberg. Montar um mockup é o início do trabalho para garantir que esse design e as funcionalidades pedidas pelo cliente funcionem da mesma maneira, na maior gama de navegadores e dispositivos possível, e mesmo com suas limitações, oferecer a mesma experiência para os usuários. E isso é doloroso e nos toma muitas noites de sono que a gente teima em descontar xingando um ou outro navegador.&lt;/p&gt;

&lt;p&gt;O Progressive Enhancement pode nos ajudar como mostramos em outros artigos. E hoje vamos mergulhar em um tópico específico da metodologia: iremos aprender como usar a perspectiva Raio-X para desconstruir uma página, separando o conteúdo do markup, usando abordagens top-bottom e bottom-up respectivamente. Dito isso vamos em frente que atras vem gente &amp;#8211; e prazos cada vez mais apertados!&lt;/p&gt;

&lt;p&gt;A Perspectiva Raio-X é baseada no princípio de que mesmo o mais complexo design – mesmo que seja algo dinâmico, como aplicações com AJAX com comportamentos estilo desktop – conteúdo e funcionalidade possam ser expressados com um simples HTML semântico, oferecendo uma experiencia acessivel e com Usabilidade para toda audiência.&lt;/p&gt;

&lt;p&gt;Essa perspectiva nada mais é do que um metodo para planejarmos o design (sim, podemos usá-la para o design também) e desenvolvimento de modo a garantir, antes mesmo de começar, premissas que vão ser MUITO mais fáceis de seguir ao longo do desenvolvimento do projeto, afinal garantir acessibilidade e usabilidade desde o inicio é muito mais facil do que lá na frente, com tudo pronto, abracar o Graceful Degradation e um bom tempo brigando com javascripts que teimam em funcionar em um navegador e outro não. Você ainda terá que fazer isso, é fato. Mas é muito melhor trabalhar em um pequeno pedaço de código lá na frente do que descobrir que alterar um método desencadeará um efeito dominó que vai fazer você perder muito tempo entendendo o comportamento do script atraves da funcionalidades de uma aplicação.&lt;/p&gt;

&lt;p&gt;Como o foco aqui é o desenvolvimento e não o design, partimos da premissa que já temos um design com funcionalidades e uma experiência que o visitante vai ter caso use o &lt;em&gt;navegador do momento&lt;/em&gt;. Com esse design em mãos, antes de começar a codificar, planejamos um processo de desenvolvimento dividido em 3 partes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Definir a hierarquia do conteúdo e sua prioridade, mapeando componentes para encontrarmos elementos básicos no HTML equivalentes a esta componentização.&lt;/li&gt;
&lt;li&gt;Criar um markup de fundação, oferecendo todo o conteúdo essencial e funcionalidade com o mínimo de CSS(garantindo que o usado sejam &amp;#8220;atributos seguros&amp;#8221;) e ZERO de javascript.&lt;/li&gt;
&lt;li&gt;Escrever o markup avançado, com CSS e javascript para cuidar da camada visual e funcional de acordo com as funcionalidades que cada navegador suporta.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vale lembrar que essa experiencia é interativa, e mudanças no markup de fundação podem acontecer a medida que limitações no código são encontradas de acordo com os navegadores ou dispositivos testados. Mas estas mudanças serão pequenas e de fácil implementação, uma vez que todo o desenvolvimento foi planejado para minimizar este tipo de impacto.&lt;/p&gt;

&lt;h3 id=&#34;definindo-hierarquia-de-conteúdo-e-mapeando-componentes-para-o-html&#34;&gt;&lt;strong&gt;Definindo Hierarquia de Conteúdo e mapeando componentes para o HTML&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Algumas perguntas podem ser feitas para ordenar o fluxo de trabalho nesta fase do processo, elas vão ajudar a estabelecer regras e normas de inteface, centralizando estilo e regras de comportamento funcional no processo de desenvolvimento. Analisando o design, vamos aprofundar a analise pelos componentes visuais no trabalho. A partir da sala, comecamos nosso top-down:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quais são as partes mais importantes da página?&lt;/li&gt;
&lt;li&gt;O quanto de conhecimento sobre o assunto a audiência precisa para entender a informação da página? Há informação suficiente para este entendimento?&lt;/li&gt;
&lt;li&gt;Existe uma ordem literal ou implícita para ordenar este conteúdo?&lt;/li&gt;
&lt;li&gt;Olhando o site como um todo, existem partes em comum, com funcionalidades ou padrões de comportamento que podem ser reutilizados com templates?&lt;/li&gt;
&lt;li&gt;Existe alguma tarefa que precisa ser feita na página? Se sim, quais são os passos que a audiência deve seguir e quais ferramentas ou plugins ela deve usar até completar estes requisitos? Existem passos adicionais/opcionais/mandatórios?&lt;/li&gt;
&lt;li&gt;Existe conteúdo ou fluxo de pagina/formulários que dependam de opções previamente inputadas pela audiência?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Até aí estamos olhando apenas a sala. O código também precisa de uma abordagem parecida. É hora de olharmos a cozinha da aplicação e fazermos nosso bottom-up:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Existe algo que é inserido dinamicamente via AJAX? Se sim, temos que oferecer uma opção acessível, com conteúdo similar inserido na página ou em um HTML em separado;&lt;/li&gt;
&lt;li&gt;Existem partes na interface que dependem de um workflow de escolhas aonde uma escolha determina opções em outra, ou ainda dependa de conexões já feitas em um servidor para validar o fluxo? Se sim, temos que ter certeza que estas experiências estao devidamente segregadas na versão básica da pagina, ajudando usuários a serem mais eficientes na tarefa da cognição, minimizando erros e complicações.&lt;/li&gt;
&lt;li&gt;Existem partes na interface que são complicadores devido a alto grau de consumo de banda ou dificuldade de uso para uma experiência básica que são construidas apenas com markup HTML? Se sim, podemos oferecer componentes simplificados no markup de fundação ou ainda encorajar usuários básicos a viver a experiência através de uma alternativa offline.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Com estas duas análises da sua aplicação, fica fácil fazer o mapeamento dos componentes na página e quais elementos básicos do HTML melhor suportam a causa-fim. Ao mesmo tempo, analisamos como implementar o CSS e o Javascript a este markup. Se é necessário algum trabalho adicional para garantir a acessibilidade, é o momento de analisar a abordagem a ser usada. Com isso temos definido a hierarquia de conteúdo e seus agrupamentos, funcionalidade de todos os elementos de página associados a elementos básicos HTML, garantindo markups e estilos mínimos para uma expêriencia básica que todos os usuários &amp;#8211; independentes de navegador ou dispositivo possam ter. A partir daí trabalhamos estilos e scripts a serem incorporados a experiência básica, tratados como um expansão que o usuário pode viver dependendo do seu navegador.&lt;/p&gt;

&lt;h3 id=&#34;html4-x-html5-ganhando-tempo&#34;&gt;&lt;strong&gt;HTML4 x HTML5 – Ganhando tempo&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;O W3C ainda esta incorporando funcionalidades ao HTML, mas isso não significa que você não pode usar o HTML5 dependendo dos requisitos do projeto. De fato o HTML5 melhora e muito a produtividade, incorporando melhorias na linguagem que salvam tempo na criacao de componentes (como placeholders no input, datepickers avançados, players de áudio e vídeo, para mencionar alguns), porém com o foco em Progressive Enhancements, é necessario manter o foco na usabilidade &amp;#8211; um player de vídeo por exemplo precisa de um plano de fallback para navegadores que não suportam o HTML5, como o IE6 (na ausência do suporte, um player flash pode ser carregado).&lt;/p&gt;

&lt;p&gt;Pesquisas com desenvolvedores indicando o que tem sido codificado e colocado em produção mostram que as implementações estão a todo vapor. Por ordem de popularidade e facilidade na implementação:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Semântica&lt;/li&gt;
&lt;li&gt;Melhorias de formulário&lt;/li&gt;
&lt;li&gt;Áudio / Vídeo&lt;/li&gt;
&lt;li&gt;Canvas&lt;/li&gt;
&lt;li&gt;Outros&lt;/li&gt;
&lt;li&gt;Drag and Drop&lt;/li&gt;
&lt;li&gt;Microdata&lt;/li&gt;
&lt;li&gt;Geolocation&lt;/li&gt;
&lt;li&gt;Offline Storage&lt;/li&gt;
&lt;li&gt;Cross Document Messaging&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;O uso depende de estudo. Quanto mais direcionado for o escopo do projeto, mais você poderá tirar vantagem do HTML5. Separando o HTML5 em 3 partes distintas, teriamos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nível 1:&lt;/strong&gt; elementos que ganharam nova semântica, a maior parte deles sem nenhuma mudançaa drástica &amp;#8211; exceção ao elemento deâncora &lt;a&gt;, que agora permite nao apenas links inline (no contexto linear, uma frase por exemplo), mas tambem links em bloco. Fazendo com que em determinadas situações &lt;a&gt; possa ter o mesmo comportamento de um &lt;div&gt; por exemplo. Estas melhorias são amplamente suportadas pelos browsers e não tem porque não utilizarmos as mesmas. Podemos mencionar a sintaxe simplificada, redução nas chamadas de DOCTYPE, charset, &lt;script&gt; e &lt;style&gt; e os atributos type, alem da não necessidade de fechar tags para elementos self-closing (/&amp;gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nível 2:&lt;/strong&gt; Alguns extras que já não são garantidos em todos os navegadores. Algumas intervenções serão necessárias para implementar este nível, mas nada muito complicado que possa oferecer riscos de impacto ao design. Por default, estas funcionalidades são atingidas pelo Graceful Degradation (ex.: uma caixa &lt;input type=&amp;#8221;range&amp;#8221;&gt; em navegadores sem suporte se transformam em caixas comum de texto. Nada que não possa ser resolvido com um pouco de javascript.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nível 3:&lt;/strong&gt; Tudo o que não foi mencionado antes. Infelizmente são solucoes que ainda precisam de intervenções para termos escalabilidade. Alguns deles possuem já soluções consagradas (como os já mencionados Boilerplates e Grids) e garantem escalabilidade em navegadores que não oferecem suporte. Tags para diagramação de conteúdo como &lt;section&gt;, &lt;article&gt;, &lt;nav&gt;, &lt;aside&gt;, &lt;header&gt;, &lt;footer&gt; ; tags para elementos inline &lt;mark&gt;, &lt;time&gt; ; tags para elementos dinamicos como &lt;audio&gt;, &lt;video&gt;, &lt;details&gt;, &lt;canvas&gt; são suportadas via document.createElement ou boilerplate. As APIs tambem chegam para oferecer possibilidades infindáveis mas novamente, cuidado e análise neste nivel são coisas fundamentais.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Combinar o HTML5 com metodologias como o Progressive Enhancement é um grande diferencial, e, dominando as ferramentas, fica facil entregar mais com menos &amp;#8211; e com maior qualidade. Pronto para tirar uma &lt;em&gt;chapa&lt;/em&gt; de suas páginas e começar a analisar o que pode ser otimizado?&lt;/p&gt;

&lt;h3 id=&#34;referências&#34;&gt;Referências&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/produtividade-editores-e-snippets&#34;&gt;Tableless &amp;#8211; Editores e Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://code.google.com/p/zen-coding/&#34;&gt;zen coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://br.html5boilerplate.com/&#34;&gt;html5 boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sixrevisions.com/web_design/the-960-grid-system-made-easy/&#34;&gt;960 grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://filamentgroup.com/dwpe/&#34;&gt;Designing w/ Progressive Enhancement&lt;/a&gt; (esse ja é um clássico)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://css-tricks.com/poll-results-html5-features-in-use-on-production-sites/&#34;&gt;HTML5 Features in use on Production Sites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://diveintohtml5.org/forms.html&#34;&gt;A Form of Madness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mathiasbynens.be/notes/html5-levels&#34;&gt;3 levels of HTML usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Aplicando um Plano de Usabilidade – Parte 1</title>
      <link>http://tableless.com.br/aplicando-um-plano-de-usabilidade-parte-1/</link>
      <pubDate>Tue, 04 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/aplicando-um-plano-de-usabilidade-parte-1/</guid>
      <description>

&lt;p&gt;Pensar a Usabilidade não é algo fácil. Aprendê-la também não o é. Usabilidade não é algo que um desenvolvedor aprenderá por osmose ou coisa parecida, mesmo que a experiência no desenvolvimento conte muito para este assunto.&lt;/p&gt;

&lt;p&gt;Apesar de ser um assunto antigo, a Usabilidade (assim como a Acessibilidade) engatinha no Brasil e, se nao fossem os &lt;em&gt;Bandeirantes da Usabilidade&lt;/em&gt; que temos aqui, ainda estaríamos aprendendo a fazer faíscas. Por causa deles, parece que 2011 será o ano que vamos começar realmente a criar a roda. Agradecimento mais do que justo a quem desde 2007 tenta mostrar que sim, é uma cadeira que vale a pena conhecer.&lt;/p&gt;

&lt;p&gt;Criar um Plano de Usabilidade é uma atividade que não deve ser feita com olhos de desenvolvedor. Poderíamos falar que um Arquiteto de Software teria mais facilidade de trabalho que um desenvolvedor web em si, puramente por questão de perfil. A infraestrutura de um produto é algo que usualmente fica sob a responsabilidade destes profissionais. Mas quando o assunto é internet, eu defendo que o Especialista em Usabilidade seja o Desenvolvedor, e não o Arquiteto. A não ser que o Arquiteto tenha sido no passado um desenvolvedor fervoroso de aplicações para internet. Nada contra, eu mesmo planejo tirar o meu &lt;a href=&#34;http://www.opengroup.org/itac/&#34; title=&#34;acessar o site do Open Group sobre a Certificação IT Architect&#34; target=&#34;_blank&#34;&gt;ITAC*&lt;/a&gt; este ano, mas explico a minha posição:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;O Desenvolvedor Web, com treinamento específico sobre o assunto pode oferecer mais a profissão por ter vivência na depuração de erros relativos a navegadores, agregando este valor no Plano de Usabilidade, salvando horas e barateando o custo do projeto ao longo do seu ciclo de vida. Arquitetos ou designers podem fazer Planos brilhantes, porém a possibilidade deste plano ser mais caro que um elaborado por um Desenvolvedor Web Sênior é muito maior.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Muito da profissão de Desenvolvedor é aprendido na base da tentativa e erro, pegando artigos e referências, testando, aplicando, aprendendo. Um arquiteto que estudou para isso, sem passar pelo desenvolvimento pesado, perde uma perna fundamental de aprendizado quando o assunto é Usabilidade. A perna do desenvolvimento nos permite pensar, planejar e aplicar uma solução para um determinado fim. E depois de desenolvido, podemos &lt;strong&gt;testar, entender como funcionou sua solução em cenários pre-determinados, mensurar os resultados&lt;/strong&gt;. Isso nos fornece material para pensamento crítico, entendendo como algumas situações de erro podem ocorrer para que no futuro elas não se repitam. Se um desginer monta um layout que o desenvolvedor percebe a necessidade de uso em demasia de float e position por exemplo, ele poderá se preocupar com problemas de renderizacao com browsers antigos como o IE6 logo de cara. Se o desenvolvedor perceber que o position:absolute será usado por exemplo, ele já saberá que para que tudo fique bonitinho no IE6, ele terá que usar o atributo clear em todas as classes aonde o position estará presente por exemplo. Isso evitará problemões la na frente, quando nos testes se perceber que o IE6 se tornaria o seu pior pesadelo por exemplo. Esse diferencial da experiência, o Arquiteto não terá. Um Designer também não, mas um Developer sim.&lt;/p&gt;

&lt;p&gt;Mas a experiência não é nada sem conhecimento, e se um dev quer realmente enveredar pelos mares da Usabilidade, ele precisa entender as fases de um Plano de Usabildade, e, principalmente, como aplicar um Teste de Usabilidade.&lt;/p&gt;

&lt;h2 id=&#34;criando-um-plano-de-usabilidade&#34;&gt;Criando um Plano de Usabilidade&lt;/h2&gt;

&lt;p&gt;Um Plano de Usabilidade é definido por 4 fases distintas: &lt;strong&gt;Planejamento, Análise, Design&lt;/strong&gt; e &lt;strong&gt;Testes e Upgrades&lt;/strong&gt;. Um plano como esse abraça muito mais que a Usabilidade em si, mas fala tambem sobre o projeto e o time como um todo.&lt;/p&gt;

&lt;p&gt;O planejamento do projeto é fundamental porque ajuda a focar seus objetivos. Ele também ajuda a planejar as atividades de usabilidade que são parte do processo de desenvolvimento de um site. Você deve pensar sobre o que você quer alcançar e criar uma visão direcionada que irá beneficiar tanto os usuários quanto sua empresa. Um site usualmente está disponível para todos. Mas &amp;#8220;todos&amp;#8221; não é necessariamente a melhor definição da audiência do seu site. Um portal de conteúdo por exemplo estará aberto para quem quiser acessar suas notícias, mas se o portal não se preocupar em montar uma versão acessível de seu site para todos os navegadores, provavelmente usuários de regiões mais pobres (e por consequência donos de hardware mais desatualizado) vão experimentar problemas &amp;#8211; quando conseguirem &amp;#8211; ao acessar uma informação. Sinto falta de uma granularidade maior para defender aqui o meu ponto de vista (tenho apenas os números de versão de navegador no Brasil, e se você por favor tiver outros números, me envie a fonte, por favor) mas acredito fortemente que usuários de internet que estão no Amapá vao experimentar problemas de largura de banda, navegadores e resiliência por exemplo. Sem planejamento estes usuários ficariam no escuro e a penetração do seu produto em um mercado em potencial seria jogado no lixo. Para que isso nao aconteça, você precisa &lt;strong&gt;planejar&lt;/strong&gt; antes de colocar a mão na massa – digo, no código.&lt;/p&gt;

&lt;h3 id=&#34;planejamento&#34;&gt;Planejamento:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Desenvolvimento do Plano de Usabilidade&lt;/strong&gt;&lt;br /&gt;
Determinar o &lt;strong&gt;escopo&lt;/strong&gt; do projeto, identificar &lt;strong&gt;audiência&lt;/strong&gt; do site e definir &lt;strong&gt;objetivos&lt;/strong&gt; do site.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Montar equipe do projeto&lt;/strong&gt;&lt;br /&gt;
A utopia começa cedo, logo no planejamento. Em tese, uma equipe de produção web deve ter Gerente de Projetos, Especialistas em Usabilidade, Editores de Conteúdo, Arquitetos de Informação, Designers Gráficos, Developers, e Especialistas no Conteúdo do site. Obviamente que estas 7 pessoas normalmente são apenas uma, no máximo 3 pessoas, mas é assim que as coisas funcionam e mesmo sendo um exército-de-um-homem-só, você precisará produzir por 7 se quiser vencer esta batalha.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Gerente de projetos:&lt;/strong&gt; um profissional gabaritado para liderar e gerenciar um projeto complexo;&lt;/p&gt;

&lt;p&gt;Especialista em Usabilidade: Deve trabalhar no processo de design centrado no usuário (o famoso UCD). Vai ser o responsável por availar o site atual (se existente), a concorrência, conduzir as análises de tarefas, desenvolver os atores, escrever os cenários de teste, definir as métricas e objetivos, analisar os protótipos para encontrar problemas de Usabilidade, conduzir a análise de cartas com usuários do website e recomendar melhorias;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Editores de Conteúdo:&lt;/strong&gt; Os escritores responsáveis por produzir o conteúdo que será colocado no website;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Arquitetos de Informação:&lt;/strong&gt; Organizam a informação produzida de um modo lógico para a audiência. Trabalham próximos dos Arquitetos de Usabilidade para definir a nevegação do website;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Designers Gráficos:&lt;/strong&gt; Responsáveis pelo design do website, trabalham na criação do mesmo e também do Design Paralelo.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Developers:&lt;/strong&gt; Responsáveis pelas características técnicas do website, são também os que programam, colocando a mão na massa fazendo acontecer o trabalho dos designers gráficos, arquitetos de informação e especialistas de usabilidade.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Especialistas em Conteúdo:&lt;/strong&gt; Revisores ou consultores sobre o conteúdo do seu website. Trabalham próximos dos editores para garantir que o conteúdo produzido esteja alinhado com os objetivos da empresa e também com as tendências de mercado.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Normalmente, este exército numeroso se resumem a 4 pessoas apenas, um gerente de projetos (que pode ser o próprio contratante), um editor de conteúdo, um desenvolvedor e um designer. Sabemos que este número é ainda menor dependendo do contexto. Não é difícil uma única pessoa (ou duas) ser(em) a(s) responsável(is) por todas as fases do projeto.&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Contratar Especialista de Usabilidade&lt;/strong&gt;&lt;br /&gt;
Com olhos de um developer, é fácil dizer que tirando o conteúdo e o design tudo pode ser feito por ele, afinal um gerente só se faz necessário quando temos uma equipe de trabalho com algumas pessoas. &lt;strong&gt;Mas desenvolver não é pensar em Usabilidade, e vice-versa.&lt;/strong&gt; Um Especialista em Usabilidade deve estar preparado para:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;efetuar pesquisas de/com usuários,&lt;/li&gt;
&lt;li&gt;Fazer análise de tarefas e usuários,&lt;/li&gt;
&lt;li&gt;Dar assistência ao nível executivo estabelecendo métricas de avaliação dos resultados de Usabilidade alinhados com a estratégia da empresa,&lt;/li&gt;
&lt;li&gt;Escrever web services&lt;/li&gt;
&lt;li&gt;Dominar a arquitetura da informação.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mas não é só isso, não falamos dos &lt;strong&gt;Testes de Usabilidade&lt;/strong&gt; ainda. Um profissional destes deve estar preparado para:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Criar e aplicar os Testes de Usabilidade,&lt;/li&gt;
&lt;li&gt;definir e recomendar os momentos do projeto aonde Testes de Usabilidade precisam ser feitos,&lt;/li&gt;
&lt;li&gt;definir a quantidade de usuários e métodos de recrutamento para os testes,&lt;/li&gt;
&lt;li&gt;definir os equipamentos e suas configurações para os Testes de Usabilidade (incluindo testes remotos),&lt;/li&gt;
&lt;li&gt;definir as metricas coletadas, como elas serão usadas e como as informações serão reportadas, oferecendo com uma linguagem simples explicações sobre métricas ou problemas de Usabilidade encontrados (recomendações de mudança com documentação válida, tutoriais – preferencialmente em vídeo &amp;#8211; para recriar bugs e como consertá-los,&lt;/li&gt;
&lt;li&gt;Oferecer assistência para o time de desnvolvimento para implementar as recomendações.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Percebe-se que o trabalho deste profissional é mais consultoria que mão na massa, mas fica visível que um developer precisa ir mais a fundo caso queira oferecer serviços nesta área também.&lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Declaração de trabalho SOW&lt;/strong&gt;&lt;br /&gt;
A Declaração de trabalho é uma ferramenta poderosa para o dono do negócio, e se bem montada, pode ser usada para obter estimativas de custo de fornecedores (agências web) realistas, ajudando na escolha da melhor entrega e do melhor custo. A Declaração de trabalho deve oferecer informações sobre o processo de Design Centrado no Usuario (UDC), avaliação do site atual, avaliação do usuário, arquitetura da informação e organização do conteúdo, testes interativos de usabilidade, definição do perfil de usuários para testes, definição de como a análise e testes serão feitos, definição de como a documentação deve ser produzida.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reunião de Kick-off do projeto&lt;/strong&gt;&lt;br /&gt;
Hora de conhecer seus colegas de trabalho, como, quando e onde o trabalho será feito.&lt;/ol&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como vimos, nesta fase definimos o que vamos fazer, em qual período de tempo, com quais pessoas e a qual custo. Esta é uma tarefa dos gerentes de projeto, e normalmente profissionais de desenvolvimento e design estão fora desta fase, assim como os profissionais de Usabilidade. Mas é uma boa recomendação é inverter os passos 2 e 3 e ter o Profissional de Usabilidade já neste momento de montagem da equipe, pois ele pode indicar de acordo com as necessidades do projeto o melhor leque de skillsets para profissionais de design e desenvolvimento, por exemplo. Para PMEs, esta fase pode ser customizada, e mesmo desenvolvedores freelancer podem utilizá-la.&lt;/p&gt;

&lt;p&gt;Considere um representante de auto-peças automotivas por exexmplo; o seu cliente descobriu ontem que para ter mais penetração no mercado ele precisaria de um site na internet, que vai ter um cadastro básico de clientes para relacionamento e compra de peças, além de uma área institucional para apresentar a empresa. Isso é tudo que o dono dessa representação sabe. Nesta fase de Planejamento caberia a desenvolvedor ajudar o “nivel executivo” da auto-peças que o contratou a montar o SOW, mostrando que o site a se desenvolver, deverá ser funcional tanto para a Mecânica do Zezinho ali da esquina, que provavelmente tem um K6-2 com acesso de 100kbps quanto para &lt;em&gt;as maiores lojas de mecânica do shopping&lt;/em&gt;, aonde o cliente vai com a família passar a tarde enquanto mecânicos deixam o seu carro como novo. Se a representação desta auto-peças tiver estes dois tipos de cliente, a página de pedidos deverá ser extremamente leve e funcional em vários tipos de browser, garantindo que o pedido, que é o que faz a representação comercial funcionar, seja feito, independente de usuário, plataforma ou velocidade de acesso.&lt;/p&gt;

&lt;h3 id=&#34;análise&#34;&gt;Análise:&lt;/h3&gt;

&lt;p&gt;Analisar é fundamental antes de codificar, e, nesta fase, o quanto mais você coletar informações sobre seu site e seus usuários, melhor.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Analisando o Site atual&lt;/strong&gt;&lt;br /&gt;
Analisar o site atual quando o existente nos mostra aonde estamos e aonde queremos chegar. Pesquise o log do servidor e o log de termos pesquisa, reveja emails ou ligações feitas pelos clientes sobre os problemas que eles usualmente tem no website atual, faça um Teste de Usabilidade no site atual, conduza uma pesquisa online se possível e analise no site atual as diretivas básicas de desenvolvimento web para:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Processo de design;&lt;/li&gt;
&lt;li&gt;Otimização da experiência do usuário;&lt;/li&gt;
&lt;li&gt;Acessibilidade;&lt;/li&gt;
&lt;li&gt;Página inicial;&lt;/li&gt;
&lt;li&gt;Layout de páginas;&lt;/li&gt;
&lt;li&gt;Navegação;&lt;/li&gt;
&lt;li&gt;Scroll e paginação;&lt;/li&gt;
&lt;li&gt;Cabeçalhos, títulos e labels;&lt;/li&gt;
&lt;li&gt;Links;&lt;/li&gt;
&lt;li&gt;Aparência do texto;&lt;/li&gt;
&lt;li&gt;Listas;&lt;/li&gt;
&lt;li&gt;Widgets e dispositivos de controle da tela;&lt;/li&gt;
&lt;li&gt;Gráficos, imagens, ícones e multimídia;&lt;/li&gt;
&lt;li&gt;Conteúdo;&lt;/li&gt;
&lt;li&gt;Organização do Conteúdo;&lt;/li&gt;
&lt;li&gt;Pesquisa interna;&lt;/li&gt;
&lt;li&gt;Usabilidade
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quando estes objetivos de Usabilidade estão definidos, podemos nesta fase documentar as métricas atuais para a famosa comparação antes-depois, que é uma das ferramentas que vai availar o seu trabalho. Caso o site não exista, recomenda-se contato com o time da empresa para responder &lt;a href=&#34;https://docs.google.com/document/d/1se4r1CX7dtRv1gVS-xX1jE5gkSyB5lRVCVwQml19pAg/edit?hl=en&#34; target=&#34;_blank&#34; title=&#34;Acessar formulário com questoes de negócio para reuniões iniciais com o cliente&#34;&gt;questões de negócio&lt;/a&gt; que podem clarear ou direcionar o desenvolvimento do site. &lt;/li&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Aprendendo sobre a Audiência&lt;/strong&gt;&lt;br /&gt;
Para mim, a principal parte do planejamento e análise é conhecer a sua audiência. Quem é o seu usuário? O que ele espera ao acessar o seu site? Como ele pensa, agrupa e organiza a informação encontrada em seu site? Como ele trabalha com a informação que você provê a ele? O quanto sua audiência quer ler em seu website? Qual o formato desta leitura? Como ele acessa esta informação? Todas estas são perguntas que você precisa saber antes de começar a codificar o seu website.
Existem várias técnicas de se obter estas informações, e algumas delas são inclusive etapas do Plano de Usabilidade:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Teste de Usabilidade&lt;/strong&gt;: sim, um teste de usabilidade mostra muito sobre a sua audiência e &lt;strong&gt;como o acesso ao seu site é feito&lt;/strong&gt;. Pode ser feito remotamente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Entrevistas contextuais:&lt;/strong&gt; Um diálogo informal e presencial com um ou dois usuários por vez pode mostrar observações e principalmente, &lt;strong&gt;padrões de comportamento&lt;/strong&gt; dos usuários ao navegar/usar seu website;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pesquisas online:&lt;/strong&gt; Coleta &lt;strong&gt;expectativas, experiências e opiniões&lt;/strong&gt; sobre o seu site com um número pré-definido de pessoas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Entrevistas individuais:&lt;/strong&gt; Presencialmente ou via telefone, IM ou qualquer outro modo, &lt;strong&gt;fornece uma maior quantidade de informações devido ao formato&lt;/strong&gt; com perguntas e respostas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Análise de Cartas:&lt;/strong&gt; Aplicada individualmente com cartas ou outros métodos de análise, consiste no feedback de &lt;strong&gt;como os usuários agrupam a informação disponível&lt;/strong&gt; no seu website, mostrando os níveis lógicos e desvios entre como o cliente quer disponibilizar a informação e como a audiência a recebe de verdade.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Entrevistas de grupo:&lt;/strong&gt; técnica de pesquisa de tradicional muito utilizada em marketing, produz diferentes tipos de informação das entrevistas contextuais: &lt;strong&gt;Em uma entrevista de grupo, os participantes falam sobre suas atividades e você ouve-os falar sobre seu trabalho&lt;/strong&gt;. Em um Teste de Usabilidade típico ou entrevista contextual, os usuários falam e fazem suas atividades e você assiste e ouve-os durante o todo o processo.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Conduzindo Análises de Tarefas&lt;/strong&gt;&lt;br /&gt;
De forma sucinta, mostra quais os objetivos dos usuários ao acessar o seu site, o que eles fazem e como. Deve mostrar os passos efetuados para efetuar uma determinada ação e como agir diante das opções possíveis. Uma Análise de Tarefas deve oferecer para usuários únicos e grupos de usuário:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mostrar as atividades &lt;strong&gt;(o que)&lt;/strong&gt; os usuários fazem em seu website &lt;strong&gt;e como&lt;/strong&gt; fazem;&lt;/li&gt;
&lt;li&gt;Mostrar &lt;strong&gt;fatores pessoais, sociais e culturais&lt;/strong&gt; que os usuários tem ao efetuar estas atividades;&lt;/li&gt;
&lt;li&gt;Como o &lt;strong&gt;ambiente físico e suas limitações&lt;/strong&gt; podem impactar nas atividades efetuadas pelo usuário?&lt;/li&gt;
&lt;li&gt;Como o &lt;strong&gt;conhecimento prévio&lt;/strong&gt; do usuário sobre o assunto &lt;strong&gt;influencia o modo como ele pensa&lt;/strong&gt; durante o período de utilização do seu website.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Definindo Atores&lt;/strong&gt;&lt;br /&gt;
Para se mensurar as análises de tarefas, precisamos definir os tipos de usuários que acessam o seu site e o que eles fazem. Mantendo o exemplo da Representante Comercial de Auto-peças, poderíamos elencar perfis de &lt;strong&gt;Mecânicos&lt;/strong&gt;, que pesquisariam informações técnicas sobre as peças e fariam pedidos, &lt;strong&gt;Atendimento ao cliente&lt;/strong&gt; que pesquisam informações sobre os pedidos efetuados, &lt;strong&gt;público em geral&lt;/strong&gt; que vai navegar pela parte institucional do site e &lt;strong&gt;Administradores&lt;/strong&gt; que vão inputar informações sobre as peças e sobre o negócio em si. Cada um destes perfis vai executar uma determinada gama de tarefas, acessar um número autorizado de páginas e tudo isso deve ser documentado na análise feita no tópico 3. Cabe agora definirmos os atores, estes perfis hipoteticamente pensados, para depois podermos aplicá-los as Análises de Tarefas nos Cenários para Teste.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Escrevendo Cenários para teste&lt;/strong&gt;&lt;br /&gt;
Já explicado no tópico acima, mostra em &lt;strong&gt;detalhes as tarefas que devem ser feitas pelos atores para se atingir uma determinada atividade&lt;/strong&gt; no website.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Estabelecendo Objetivos e Métricas&lt;/strong&gt;&lt;br /&gt;
Definir valores racionais para os cenários de teste com base em &lt;strong&gt;tempo, acurácia, eficácia e satisfação do usuário&lt;/strong&gt;. No nosso exemplo de representante de auto-peças, poderíamos dizer que uma métrica de sucesso seria:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fazer o usuário entender o fluxo de informação das páginas em 30 segundos para que ele possa rapidamente identificar a área de pedidos, parte principal do site;&lt;/li&gt;
&lt;li&gt;Fazer a página de pedidos renderizar em qualquer navegador e qualquer conexão em até 35 segundos;&lt;/li&gt;
&lt;li&gt;Fazer o usuário conseguir chegar a página de pedidos e fazer o seu pedido em até 2 minutos, pedindo a peça correta do fornecedor correto;&lt;/li&gt;
&lt;li&gt;Errar no máximo um passo do cenário de teste e conseguir retornar ao fluxo correto de ações em no máximo 30 segundos,&lt;/li&gt;
&lt;li&gt;Usuário rankear a experiência de fazer o pedido entre 4 e 5, em uma escala de 1 a 5.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Verificadas os objetivos acima, devemos ponderar sobre o tempo de navegação, entendimento e renderização além do número de escolhas erradas na navegação, pesquisas improdutivas, erros usando a aplicação e erros de entendimento de página. Somado a satisfação do usuário em todo o processo, podemos quantificar o nosso sucesso (ou falha) definidos nos objetivos primários. Alguns outros exemplos seriam de objetivos seriam:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Website:&lt;/strong&gt; 95% mínimo de usuários deve ser capaz de procurar uma peça e fazer um pedido no site;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Website:&lt;/strong&gt; 100% dos mecânicos deve ser capaz de ler as informações das áreas de peças automotivas e entende-las completamente antes de fazer o pedido;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Website:&lt;/strong&gt; O serviço de suporte ao usuário deve ser capaz de responder a perguntas por telefone dos clientes em até 3 minutos;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cenário:&lt;/strong&gt; 90% dos mecânicos deve conseguir achar a página sobre o Eixo Cardã em ate 45 segundos;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cenário:&lt;/strong&gt; 100% dos mecânicos deve conseguir identificar os updates em uma página, diferenciando novo conteúdo do conteúdo antigo em ate 5 segundos;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cenário:&lt;/strong&gt; 80% dos usuários deve ser capaz de encontrar e clicar em um link em ate 15 segundos;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Página:&lt;/strong&gt; A pagina deve renderizar em ate 45 segundos em conexões discadas;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Página:&lt;/strong&gt; A pagina deve renderizar em ate 15 segundos em conexões de banda larga;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Widgets:&lt;/strong&gt; 100% dos usuários deve ser capaz de usar o filtro de range para selecionar peças em uma determinada faixa de preço;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Widgets:&lt;/strong&gt; 100% dos usuários deve ser capaz de usar o filtro alfabético para encontrar informações sobre uma peça específica.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No próximo artigo vou falar sobre a fase de &lt;strong&gt;Design&lt;/strong&gt; e dos &lt;strong&gt;Testes e Upgrades&lt;/strong&gt;. &lt;strong&gt;Namastê&lt;/strong&gt;!&lt;/p&gt;

&lt;h3 id=&#34;referências&#34;&gt;Referências&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.opengroup.org/itac/&#34;&gt;ITAC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://it.toolbox.com/blogs/css-asylum/the-ie6-absolute-positioning-bug-15285&#34;&gt;IE6 absolute positioning bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gs.statcounter.com/#browser_version-BR-monthly-201001-201012-bar&#34;&gt;Browser Wars no Brasil – Navegadores por versão de 01/10 a &lt;sup&gt;12&lt;/sup&gt;&amp;frasl;&lt;sub&gt;10&lt;/sub&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.usability.gov/sows/SampleTaskOrdReq05.doc&#34;&gt;Usability Statement of Work (DOC &amp;#8211; 93KB)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.usability.gov/sows/SOWparticipantrecruit.doc&#34;&gt;Usability and Focus Group Participant Recruitment (DOC &amp;#8211; 36KB)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.usability.gov/sows/SOWgisusability.doc&#34;&gt;Web Usability Consulting (DOC &amp;#8211; 42KB)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.usability.gov/sows/SOWdataprodusab.doc&#34;&gt;Web Usability Testing (DOC &amp;#8211; 48KB)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Bem vindo a Xangri-lá – Parte 2</title>
      <link>http://tableless.com.br/bem-vindo-a-xangrila-parte-2/</link>
      <pubDate>Mon, 06 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/bem-vindo-a-xangrila-parte-2/</guid>
      <description>

&lt;p&gt;Uma vez familiares com a premissa do Progressive Enhancement, vamos entender como aplicar a abordagem para criar suas páginas do zero, garantindo que elas funcionem na maior aplitude de navegadores e dispositivos. Antes de começar, é importante lembrar que para tudo funcionar bem, você precisa conhecer as funcionalidades e limitações da especificacao HTML, seus elementos, tags, e atributos aprovados, isso esta disponivel no site do w3c. É importante tambem se manter no &lt;em&gt;bleeding edge&lt;/em&gt;, para que novas linguagens (como o HTML5) não fiquem de fora de suas análises e ponderações. Um plus é você conhecer (ou pelo menos ter em mãos para referência) as especificacoes de CSS 2.1 e 3 disponiveis no w3c. Vale lembrar que CSS3 e HTML5 são assuntos novos e ainda não se tornaram especificação (ainda está no status de &lt;em&gt;working draft&lt;/em&gt;), o que não nos impede de usar todo o poder já disponível para se criar aplicações online.&lt;/p&gt;

&lt;h2 id=&#34;analisando-a-aplicação-um-raio-x&#34;&gt;Analisando a aplicação: Um raio-x&lt;/h2&gt;

&lt;p&gt;As expectativas e considerações do cliente geram o design e a funcionalidade de sua aplicação. Mas como esse design deve funcionar nos mais diversos cenários é responsabilidade nossa. A primeira etapa é fazer um scan detalhado do que vai ser construido naquela etapa do processo. Se você recebeu wireframes que mostram como sua página deve ser visualizada em um monitores 4:3, 16:9 e mobile em telas paisagem e retrato você deve pegar estes 3 designs e sua estrutura &lt;strong&gt;básica&lt;/strong&gt; de HTML para entender quais serão as partes em comum para a partir daí escrever o HTML.&lt;/p&gt;

&lt;div id=&#34;attachment_2381&#34; style=&#34;width: 710px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2010/12/layouts.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2010/12/layouts.png&#34; alt=&#34;Wireframes mostrando diferentes designs para 16:9, 4:3, mobile horizontal e vertical&#34; width=&#34;700&#34; height=&#34;167&#34; class=&#34;size-full wp-image-2381&#34; srcset=&#34;uploads/2010/12/layouts.png 700w, uploads/2010/12/layouts-300x71.png 300w&#34; sizes=&#34;(max-width: 700px) 100vw, 700px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Diferentes Wireframes para o mesmo design
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;O que está presente em todas as páginas? Como deve ser a semântica e a linearidade do HTML ponderando os wireframes desktop X mobile? Se a navegação (em amarelo escuro nos designs) fizer uso de um acordion, como o HTML mais básico deverá ser escrito, de modo que o design acima seja garantido para todos os dispositivos que vão acessar a página, independente de sua configuração? (isso seria válido para qualquer plugin na página)&lt;/p&gt;

&lt;p&gt;Com um raio-x nos designs acima, veremos que o cabeçalho(em laranja), pesquisa(azul topo), navegacao (amarelo escuro com boxes), conteúdo (centro) e rodapé (azul fundo) são as partes presentes em todos os designs. Dá até pra assumir que o exemplo acima é o de um portal – se o usuário acessa de uma tela desktop wide, anúncios (amarelo claro) são mostrados. Se o cara acessa de um desktop, uma animação no cabecalho é mostrada.&lt;/p&gt;

&lt;p&gt;As condições deste exemplo são simples – na vida real é &lt;strong&gt;sempre&lt;/strong&gt; mais complexo – mas é assim que você deve montar a sua análise. Eu poderia por exemplo colocar os anúncios do wireframe 16:9 em um elemento &lt;strong&gt;aside&lt;/strong&gt; sabendo de suas funcionalidades. A navegação poderia ser embarcada no elemento &lt;strong&gt;nav&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Você pode se perguntar: Mas o elemento *&lt;strong&gt;&lt;em&gt;nav&lt;/em&gt;&lt;/strong&gt;* e &lt;strong&gt;aside&lt;/strong&gt;, nativos do HTML5 são novos e precisaremos de um &lt;strong&gt;document.createElement()&lt;/strong&gt; para que ele renderize em navegadores sem suporte a linguagem. Não estamos misturando Graceful Degradation aqui, uma vez que estamos usando uma solução e depois corringindo “deficiências” da solução com um patch?&lt;/p&gt;

&lt;p&gt;Sim, estamos usando princípios de Graceful Degradation para corrigir essa limitação do HTML5, mas como estamos no planejamento da aplicação, e ela ainda não está nem perto de ser codificada, a orientação geral continua sendo o Progressive Enhancement.&lt;/p&gt;

&lt;p&gt;Os wireframes são intuitivos, e as regras muito claras. Para as páginas de conteúdo a única funcionalidade avançada existente está na navegação(um accordion) e no topo (um slideshow). Passando um plugin de um accordion em um raio-x, vemos que o HTML dele é semântico:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ul&amp;gt;&amp;lt;!--primeiro nivel--&amp;gt;
&amp;lt;li&amp;gt;
   &amp;lt;ul&amp;gt;&amp;lt;!--segundo nivel--&amp;gt;
    &amp;lt;li&amp;gt;
       &amp;lt;ul&amp;gt;&amp;lt;!--terceiro nivel--&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;
       &amp;lt;/ul&amp;gt;
     &amp;lt;/li&amp;gt;
     &amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Sabemos que a manipulação que o jQuery faz não será disponível para dispositivos com javascript desabilitado. Como resolver então os níveis que devem ser ocultos em situações como essa? CSS &lt;strong&gt;display:none/block;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A estrutura usual de slideshows é muito parecida com o accordion, e a solução provavelmente seria a mesma. E esta estrutura garante a mesma experiencia de navegação ao usuario, com javascript ou não.&lt;/p&gt;

&lt;h2 id=&#34;aplicando-o-progressive-enhancement&#34;&gt;Aplicando o Progressive Enhancement&lt;/h2&gt;

&lt;p&gt;Como você pode ver, os maiores segredos dessa abordagem é separar bem HTML, CSS e javascript de acordo com funcionalidades que podem ser renderizadas nos dispositivos que acessam sua página.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tenha um documento HTML semântico e bem estruturado;&lt;/li&gt;
&lt;li&gt;Mantenha sempre o layout separado do conteúdo (e mantenha as linhas que dividem essas áreas sempre muito bem visíveis)&lt;/li&gt;
&lt;li&gt;Mantenha suas iterações avancadas em uma camada específica, tanto estilo como script, sempre atento as limitações de Usabilidade e Acessibilidade.&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&#34;attachment_2380&#34; style=&#34;width: 986px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2010/12/fluxo_dev.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2010/12/fluxo_dev.png&#34; alt=&#34;Fluxograma de desenvolvimento orientado ao Progressive Enhancement&#34; width=&#34;700&#34; height=&#34;146&#34; class=&#34;size-full wp-image-2380&#34; srcset=&#34;uploads/2010/12/fluxo_dev.png 976w, uploads/2010/12/fluxo_dev-300x62.png 300w, uploads/2010/12/fluxo_dev-940x198.png 940w&#34; sizes=&#34;(max-width: 700px) 100vw, 700px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Evolução do código HTML e CSS em uma aplicação que usa PE para diferentes versões: Básica, Mobile, Desktop e Enhanced
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;As abordagens de Progressive Enhancement pedem um documento HTML muito bem estruturado e escalável, e a evolução de seu desenvolvimento é mostrado na primeira linha da visualização acima. Com um &lt;em&gt;markup&lt;/em&gt; mais básico, podemos garantir a visualização em dispositivos primitivos, fazendo com que o propósito da aplicação seja garantido. Esse markup evolui para englobar as outras versões, e com o desenvolvimento CSS não é diferente. Linearizar o desenvolvimento desta maneira traz vários benefícios: pode garantir a entrega de releases a medida que o desenvolvimento caminha, mostrando a evolução do projeto para o cliente, mantem o time de testes (se existente) com uma carga de trabalho para detecção de erros, fazendo com que o período de homoogação seja menos doloroso na entrega do projeto, a lista cresce. Normalmente para a criação de um site ou aplicação, eu uso este diagrama de fluxo para garantir que o meu desenvolvimento vai ser o mais alinhado aos métodos de Progressive Enhancement possível. Cada uma das caixas em cinza tem várias sub-divisões que vou adicionando de acordo com a necessidade do projeto. Com ele consigo garantir um grande número de dispositivos com um pouco menos de trabalho la na frente adequando páginas aos mais diferentes tipos de dispositivo.&lt;/p&gt;

&lt;p&gt;Eu coloco o desenvolvimento da versão mobile em primeiro, e este é um ponto de discordância com alguns amigos nos papos de bar – e de IM também. Considero mobile uma versão incipiente das informações que o usuário costuma encontrar em uma versão desktop. Posso confessar que esta é uma metodologia que foi desenvolvida adequada a uma certa realidade. Ela pode variar se seu workflow de desenvolvimento é direfente. Repito o que disse no post anterior – &lt;strong&gt;desenvolva, adote ou customize uma metodologia&lt;/strong&gt;. A minha metodologia partiu do livro do Filament Group _&lt;a href=&#34;http://filamentgroup.com/dwpe/&#34; target=&#34;_blank&#34; title=&#34;Acessar o site do Filament Group&#34;&gt;Designing with Progressive Enhancement&lt;/a&gt;_, de artigos na web (alguns deles eu usei para montar a minha série de posts) e de análises da minha carga e tipo de trabalho.&lt;/p&gt;

&lt;p&gt;Um exemplo? Se o seu design está sendo feito para interfaces mobile apenas, sabemos que as preocupações para engine de renderização e desktop somem, mas ainda sim teríamos uma versão &lt;strong&gt;básica&lt;/strong&gt;, para aqueles navegadores dos celulares mais antigos, uma versão &lt;strong&gt;mobile&lt;/strong&gt;, uma versão &lt;strong&gt;enhanced&lt;/strong&gt;, e uma versão para &lt;strong&gt;print&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Separar a versão mobile de enhanced é apenas uma preocupação com a &lt;strong&gt;escalabilidade do código&lt;/strong&gt;. Ainda não enfrentamos tantos problemas de interface em navegadores mobile, mas possivelmente iremos enfrentar. Não temos muitas aplicações que dependam de serviços de impressão, como o que temos no &lt;a href=&#34;http://labnol.org/?p=17827&#34; target=&#34;_blank&#34; title=&#34;Acessar o Digital Inspiration&#34;&gt;Dropbox&lt;/a&gt;. Mas ainda vamos ter. Uma aplicação mobile que gerencie os pedidos de qualquer negócio e precise gerar a impressão de uma nota de compra ainda não aparece com frequência no mercado para se desenvolver. Mas vai.&lt;/p&gt;

&lt;p&gt;Percebem as águas que vamos navegar em breve? Os problemas que iremos ter que lidar, a complexidade que o desenvolvimento web vai requerer? Esse fluxograma é o que eu uso &lt;strong&gt;hoje&lt;/strong&gt; no meu trabalho. Mas agora no final do ano ele vai ganhar um upgrade porque o iPad não está na jogada ainda quer entrar no bolo, afinal um design feito com uma palheta de cores mais viva pode ganhar com tom mais intenso, tirando maior proveito da tecnologia Retina do visor dos iPads (e dos iPhones também).&lt;/p&gt;

&lt;p&gt;No próximo post irei continuar o assunto que abordei no meu primeiro artigo, discutir um Plano de Usabilidade e suas fases; vamos aplicá-las em uma empresa fictícia e após termos um “Plano de Governo”, voltaremos a Xangri-lá, para a última parte desta série de posts, fazendo um grande lab mostrando a implantação de um projeto web usando os conceitos de Progressive Enhancement. &lt;em&gt;Namastê&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;referência&#34;&gt;Referência&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://filamentgroup.com/lab/announcing_our_book_designing_with_progressive_enhancement/&#34; target=&#34;_blank&#34; title=&#34;Acessar o site do Filament Group e o livro&#34;&gt;Designing with Progressive Enhancement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thomasmaier.me/2010/06/css-for-iphone-4-retina-display/&#34; target=&#34;_blank&#34; title=&#34;Acessar o blog do Thomas Maier&#34;&gt;Criando CSS para iPhone4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thomasmaier.me/2010/03/howto-css-for-the-ipad/&#34; target=&#34;_blank&#34; title=&#34;Acessar o blog do Thomas Maier 2&#34;&gt;Criando CSS para iPads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.labnol.org/internet/print-from-mobile-phones/17827/&#34; target=&#34;_blank&#34; title=&#34;Acessar o Digital Inspiration&#34;&gt;Imprindo de telefones usando dropbox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Bem vindo a Xangri-lá – Parte 1</title>
      <link>http://tableless.com.br/bem-vindo-a-xangrila-parte-1/</link>
      <pubDate>Thu, 25 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/bem-vindo-a-xangrila-parte-1/</guid>
      <description>

&lt;p&gt;Um dia desses eu estava no meio de muita gente boa em um treinamento em São Paulo – um dos melhores que já fiz – e no meio de uma discussão sobre abordagens de desenvolvimento de aplicações internet crossbrowser e a maravilha que era o HTML5, o Elcio &amp;#8211; ele mesmo &amp;#8211; da &lt;a href=&#34;http://visie.com.br/&#34;&gt;Visie&lt;/a&gt; disse que Progressive Enhancement e &lt;a href=&#34;http://tableless.com.br/graceful-degradation-e-tudo-sobre-acessibilidade&#34;&gt;Graceful Degradation&lt;/a&gt; eram a &lt;em&gt;&amp;#8220;mesma coisa&amp;#8221;&lt;/em&gt;. Eu discordava dele porém não continuei o assunto porque essa questão poderia ser abordada de maneira mais abrangente, e porque o momento era de HTML5, não de como temos que escrever código. Deixei em italico a afirmação porque eu tenho certeza do que ele estava querendo dizer. Quando olhamos rapidamente a afirmação ela parece ter um significado, mas analisando mais a fundo, encontramos o Eldorado.&lt;/p&gt;

&lt;p&gt;Mas porque trazer essa discussão para o Tableless, de maneira muito mais abrangente? Porque o Elcio já usa PE em seus projetos (conseguir entregar o que a Visie entrega no tempo que entrega só mostra isso). Mas justamente por já desenvolver &lt;strong&gt;pensando&lt;/strong&gt; orientado ao Progressive Enhancement, pra ele tanto faz uma abordagem ou uma metodologia pois as paginas dele ja tem um proposito que PE e Graceful Degradation perseguem: a garantia do maior número possivel de usuários tendo o &lt;strong&gt;mesmo&lt;/strong&gt; tipo de experiência ou funcionalidade, independente do browser, tamanho de tela, dispositivo ou conexão. O novo site da &lt;a title=&#34;Acessar o site da Brastemp&#34; href=&#34;http://www.brastemp.com.br/&#34; target=&#34;_blank&#34;&gt;Brastemp&lt;/a&gt;, que os caras da Visie entregaram a poucos dias mostra bem isso. Tente acessar esse website do seu browser preferido. A experiência nao é comprometida em nenhum momento. Agora tente acessar do seu mobile. Agora tente acessar do seu PSP. Agora tente acessar do seu PS3. Voce vai perceber que a experiencia é a mesma.&lt;/p&gt;

&lt;p&gt;Sem muita delonga, vou direto as diferenças: &lt;strong&gt;Graceful Degradation&lt;/strong&gt; parte da premissa que você vai desenvolver seu site com a melhor tecnologia disponível, plugins e tudo mais. E mesmo que seu cliente possua browsers que não renderizem efeitos/features utilizados, sua navegação vai acontecer “sem problemas”, porque uma vez que a funcionalidade esta OK em um browser, vamos efetuando mudancas no código até garantir que a funcionalidade rode em todos os browsers usados. Partimos da premissa que a experiência que o usuario terá em browsers mais modernos será suavemente degradada para funcionalidades mais simples em browsers mais antigos.&lt;/p&gt;

&lt;p&gt;Dito isso, bem vindos ao Eldorado: &lt;strong&gt;Progressive Enhancement&lt;/strong&gt; usa tecnologias web em “camadas” que permitem que todos os usuários, independente de browser e velocidade de conexão, tenham acesso as &lt;strong&gt;funcionalidades básicas e conteúdo&lt;/strong&gt; de uma página. E quanto mais avançado for o browser do usuário e sua conexão, mais rica será sua experiência. Partindo de um baseline que &lt;strong&gt;garantidamente funcione em todos os browsers&lt;/strong&gt;, vamos pouco a pouco adicionando funcionalidades que, após testadas, funcionarão &lt;strong&gt;apenas&lt;/strong&gt; em browsers que a suportam.&lt;/p&gt;

&lt;p&gt;Em outras palavras, Graceful Degradation parte do difícil, do bleeding edge. Uma vez que seu jQuery maneirão já esta funcionando bonitinho no Chrome, é hora de voce passar o final de semana namorando seu código e sua garrafa de café, para garantir que o bendito plugin também funcione no amado IE6. Progressive Enhancement vai na direção oposta. Partindo do simples, garantimos que uma funcionalidade roda no IE6 para só depois “perfumá-la” para o Chrome.&lt;/p&gt;

&lt;p&gt;Um exemplo?&lt;/p&gt;

&lt;pre lang=&#34;HTML&#34; line=&#34;1&#34;&gt;&lt;p&gt;
  &lt;a href=&#34;window.print()&#34;&gt;Imprimir&lt;/a&gt;
      
&lt;/p&gt;
&lt;/pre&gt;

&lt;p&gt;Esse link funciona quando o JavaScript está disponível e habilitado e o browser suporta o comando de impressão. No entanto, se o JavaScript não estiver disponível (por exemplo, em alguns dispositivos móveis), o link não funcionará, criando um problema grande. Você, como o desenvolvedor do site, prometeu a seus visitantes uma funcionalidade que não funciona. Quando clicam no link e ele não funciona eles se sentem confusos, enganados e vão culpá-lo (com razão) por entregar uma experiência ruim ao usuário final.&lt;/p&gt;

&lt;p&gt;Para resolver isso os Devs costumam usar Graceful Degradation: dizem ao usuário que o link pode não estar funcionando e qual a razão para isso, e talvez até sugiram uma solução alternativa para conseguir o que o usuário deseja fazer. Um truque comum é usar o elemento noscript.&lt;/p&gt;

&lt;pre lang=&#34;HTML&#34; line=&#34;1&#34;&gt;&lt;p&gt;
  &lt;a href=&#34;window.print()&#34;&gt;Imprimir**&lt;/a&gt;
      
&lt;/p&gt;
    
      

&lt;p class=&#34;scriptwarning&#34;&gt;
  Para imprimir vc precisa do javascript habilitado. 
          Por favor, habilite-o em seu browser.
        
&lt;/p&gt;
    
&lt;/pre&gt;

&lt;p&gt;Com isso explicamos que algo deu errado e como consertar o problema. Porém partimos da premissa que nosso usuário:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sabe o que é javascript;&lt;/li&gt;
&lt;li&gt;Sabe como habilitar(e desabilitar) javascript;&lt;/li&gt;
&lt;li&gt;Tem permissões administrativas para mudar essa configuração;&lt;/li&gt;
&lt;li&gt;Se sente confortável em habilitar o javascript apenas para imprimir um documento;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ainda usando Graceful degradation, poderíamos ser mais gentis com o usuario:&lt;/p&gt;

&lt;pre lang=&#34;HTML&#34; line=&#34;1&#34;&gt;&lt;p&gt;
  &lt;a href=&#34;window.print()&#34;&gt;Imprimir**&lt;/a&gt;
      
&lt;/p&gt;
    
      

&lt;p class=&#34;scriptwarning&#34;&gt;
  Impress&amp;atilde;o do documento: 
          Selecione o bot&amp;atilde;o imprimir/print no seu browser, ou no menu arquivo/file, selecione a op&amp;ccedil;&amp;atilde;o imprimir/print. Voc&amp;ecirc; tamb&amp;eacute;m pode tentar o atalho ctrl+p em seu teclado.
        
&lt;/p&gt;
    
&lt;/pre&gt;

&lt;p&gt;Isso resolve vários problemas do dev, mas parte da premissa que a funcionalidade de impressao é a &lt;strong&gt;mesma&lt;/strong&gt; em todos os browsers. E essa afirmacao não é correta.&lt;/p&gt;

&lt;p&gt;Se fossemos fazer a funcionalidade acima usando PE, a primeira coisa seria descobrir como imprimir a página sem usar javascripts. Como sabemos que isso non ecziste, chegamos a primeira conclusão: &lt;strong&gt;um link não é a melhor escolha de elemento HTML a se usar nesse caso&lt;/strong&gt;. Mas se mesmo assim você quer usar essa funcionalidade de impressão, você deve usar botões ao invés de scripts. Por definição &lt;a title=&#34;Acessar o w3c&#34; href=&#34;http://www.w3.org/TR/html401/interact/forms.html&#34; target=&#34;_blank&#34;&gt;botões existem para suportar scripts&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Botões não têm um comportamento padrão. Cada botão pode ter um script client-side associando os atributos do elemento ao evento. Quando ocorre um evento (por exemplo, o usuário pressiona o botão), o script associado é acionado.”&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;* *(w3c, 17.2.1 Control types)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;A segunda conclusão é não assumir que o javascript estará habilitado, ou que o browser possa imprimir. Ao invés disso, informamos que o usuário precisa imprimir sua página:&lt;/p&gt;

&lt;pre lang=&#34;HTML&#34; line=&#34;1&#34;&gt;&lt;p&gt;
  Obrigado! Por favor imprima essa p&amp;acute;gina para seus registros.
&lt;/p&gt;
&lt;/pre&gt;

&lt;p&gt;Esse parágrafo com certeza funciona em &lt;strong&gt;qualquer&lt;/strong&gt; browser. O resto é fácil.&lt;/p&gt;

&lt;pre lang=&#34;HTML&#34; line=&#34;1&#34;&gt;(function(){
      if(document.getElementById){
        var pt = document.getElementById(&#39;printthis&#39;);
        if(pt &amp;&amp; typeof window.print === &#39;function&#39;){
          var but = document.createElement(&#39;input&#39;);
          but.setAttribute(&#39;type&#39;,&#39;button&#39;);
          but.setAttribute(&#39;value&#39;,&#39;Imprimir&#39;);
          but.onclick = function(){
            window.print();
          };
          pt.appendChild(but);
        }
      }
    })();
    
&lt;/pre&gt;

&lt;p&gt;Dê uma olhada no script, veja a abordagem usada. Não assumimos nada, tratamos caso a caso cada situação, e oferecemos a &lt;strong&gt;mesma&lt;/strong&gt; funcionalidade a todas elas.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Colocando toda funcionalidade em uma função e a executando em seguida, não deixamos variáveis soltas na página.&lt;/li&gt;
&lt;li&gt;Testamos o suporte a DOM e tentamos chegar no elemento que queremos para adicionar o botão a ele.&lt;/li&gt;
&lt;li&gt;Após testar a existência do elemento, testamos se o browser suporta o objeto window e o método print&lt;/li&gt;
&lt;li&gt;Se as duas condições passam, criamos um novo botão e aplicamos o window.print() no evento do clique.&lt;/li&gt;
&lt;li&gt;Adicionamos o botão ao paragrafo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como disse lá em cima, isto irá funcionar para todos os usuários, independentemente do ambiente. Não prometemos ao usuário um elemento de interface que não funciona &amp;#8211; em vez disso, apenas mostramos o feature quando ele funciona.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Em tempo:&lt;/strong&gt; Tecnicamente não há nenhuma necessidade de um botao &amp;#8220;imprimir&amp;#8221;, mas para entender, mantive o exemplo simples.&lt;/p&gt;

&lt;h2 id=&#34;navegando-nas-águas-dos-browsers&#34;&gt;Navegando nas águas dos browsers&lt;/h2&gt;

&lt;p&gt;Grande parte dos desenvolvedores mantém em sua máquina de desenvolvimento um IE8, talvez um IETester, Firefox 2, Firefox 3.6 e Firefox 4. Normalmente os contratos rezam sobre esses browsers, e quando isso representa a maior fatia da internet (73% do mercado), faz sentido. &lt;strong&gt;Mas faz sentido apenas até o ponto aonde essa afirmação não atinge consumidores em potencial.&lt;/strong&gt; E não podemos desconsiderar o poder de 500 milhões de potenciais compradores. Com os browsers mencionados acima voce garante o &lt;em&gt;grosso da internet&lt;/em&gt; e isso aí é o &lt;strong&gt;minimo&lt;/strong&gt; que desenvolvedores como nós pode oferecer.&lt;/p&gt;

&lt;p&gt;Analizamos os numeros abaixo, a situação fica mais visivel. Em outubro, os numeros* foram:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Firefox: A raposinha tem 44,1% do mercado, ou quase &lt;strong&gt;870 milhões&lt;/strong&gt; de browsers instalados&lt;/li&gt;
&lt;li&gt;IE: Em franca decadência desde a sangrenta batalha com a Netscape, hoje tem &lt;strong&gt;580 milhões&lt;/strong&gt; de browsers instalados &amp;#8211; 29,7%&lt;/li&gt;
&lt;li&gt;Chrome: Como tudo do Google, o crescimento espantoso graças a estrategia de marketing que eles usam já garantem quase &lt;strong&gt;380 milhões&lt;/strong&gt; de usuarios, com 19,2%&lt;/li&gt;
&lt;li&gt;Safari / Opera: Juntos, os dois simpáticos browsers tem quase &lt;strong&gt;120 milhões&lt;/strong&gt; de usuários &amp;#8211; 3,9% e 2,2% respectivamente&lt;/li&gt;
&lt;li&gt;O resto: temos pouco mais de &lt;strong&gt;17 milhões&lt;/strong&gt; de pessoas que navegam com outros browsers, a lista é “infinita”&lt;/li&gt;
&lt;/ol&gt;

&lt;p style=&#34;font-size: 9px&#34;&gt;
  &lt;img alt=&#34;391de7d2-f315-11df-b15d-000255111976&#34; src=&#34;http://www-958.ibm.com/me/files/thumbnails/391de7d2-f315-11df-b15d-000255111976.png?size=600x494&#34; style=&#34;border: 0px solid #6898C8;margin: 0;padding-top: 10px;padding-bottom: 3px&#34; /&gt;&lt;br /&gt; Essa comparação gerou uma visualizacao no manyeyes. Você pode vê-la &lt;a title=&#34;Acessar o many Eyes para ver a guerra de browsers versao 1&#34; href=&#34;http://www-958.ibm.com/software/data/cognos/manyeyes/visualizations/browser-wars-2&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; e &lt;a title=&#34;Acessar o many Eyes para ver a guerra de browsers versao 2&#34; href=&#34;http://www-958.ibm.com/software/data/cognos/manyeyes/visualizations/browser-wars-v2&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;Considerando que estamos cobrindo 73% do mercado, deixamos fora da festa a considerável quantia de mais de &lt;strong&gt;500 milhões de usuários&lt;/strong&gt; que fazem uso de outro browser. Voce realmente quer perder ou deixar de lado essa audiência? Você não poderia desenvolver seus websites de uma maneira que uma fatia maior de usuários possa usar sem problemas a sua aplicação? Quer deixar essa equação mais difícil ainda? Estamos falando de números para browsers que hoje estão em sua maioria em &lt;strong&gt;desktops&lt;/strong&gt;. O problema deve aumentar expoencialmente a medida que novos dispositivos comecarem a acessar seus websites.&lt;/p&gt;

&lt;p&gt;O cenário caminha para o completo caos se pensarmos que nossos clientes normalmente pedem seus websites em um timeframe muito pequeno. Cobrir todas as áreas do desenvolvimento web em um mês normalmente e ainda garantir que a aplicação vai rodar em 5 diferentes browsers (IE6/7/8/9, FFox &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt;.&lt;sup&gt;6&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt;, Safari4, Opera11, Seamonkey, Chrome) é muita tarefa para o exército-de-um-developer-só. E é ai que entra o PE. Usar uma abordagem diferente para trabalhar é a chave do negocio. Chegou um novo projeto?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Separe conteúdo da forma. Isso facilitará o passo 3&lt;/li&gt;
&lt;li&gt;Defina um baseline de funcionalidades &lt;strong&gt;básicas&lt;/strong&gt; da aplicação. Pesquise na documentação se estas funcionalidades rodam OK no browser &lt;strong&gt;mais antigo&lt;/strong&gt; que o seu contrato pede no desenvolvimento. Se não funciona nele, esta não é uma funcionalidade básica. Redefina e pesquise até chegar a um denominador comum. Se o projeto for HTML5, recomendo partir do &lt;a title=&#34;Acessar o HTML5 Boilerplate&#34; href=&#34;http://html5boilerplate.com&#34; target=&#34;_blank&#34;&gt;HTML5 Boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Escreva um HTML &lt;strong&gt;semântico&lt;/strong&gt; aonde depois você vai encapsular o conteúdo. Nada de javascripts, nada de CSS. Apenas o HTML nesse momento. Valide o template, veja se tudo esta ok antes do próximo passo.&lt;/li&gt;
&lt;li&gt;Aplique o CSS para o HTML desenhado, teste nos browsers que você precisa cobrir no desenvolvimento. Garanta a mesma experiência ao usuário em todos eles.&lt;/li&gt;
&lt;li&gt;Aplique o javascript. Faça modificações, teste novamente em todos os browsers. Ao implementar, tenha em mãos uma &lt;a href=&#34;http://www.quirksmode.org/dom/events/index.html&#34; target=&#34;_blank&#34; title=&#34;Acessar o quirksmode.org&#34;&gt;lista de objetos e métodos aceitos pelo browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Seja feliz e tenha certeza que ao entregar o seu produto, seu celular não vai tocar no final de semana porque o plugin de código de barras não funciona no cliente que tenta deseperadamente imprimir um boleto de compra usando IE7.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Isso significa que Graceful Degradation é o fim do mundo, técnica &lt;em&gt;capenga&lt;/em&gt; de desenvolvimento quando comparado ao Progressive Enhancement? Não, de maneira alguma. Graceful Degradation também tem seus benefícios &amp;#8211; principalmente em projetos que já estão em produção &amp;#8211; mas se você vai escrever um projeto &lt;strong&gt;do zero&lt;/strong&gt;, use Progressive Enhancement. Não complique. Progressive Enhancement é mais sofisticado e mais estável que GD, mas se você não tem uma metodologia de trabalho ja definida, PE pode tomar mais tempo. &lt;strong&gt;Se você ainda não tem uma metodologia de trabalho, desenvolva-a.&lt;/strong&gt; Se você vai trabalhar em um projeto que já está rodando, se vai mudar uma funcionalidade que já está no ar, você pode usar Graceful Degradation, atuando como um “patch” para um produto ja existente, uma vez que o tempo de desenvolvimento sera menor que desenhar uma solução do zero usando Progressive Enhancement. É, pensando bem, dá pra usar os dois pra achar o Eldorado, é só ter cuidado ao criar novos sites, e guardar seu canivete-suiço de soluções ninja para fazer tudo funcionar em todos os browsers para os momentos aonde esse skill sera exaustivamente colocado a prova. Mãos a obra!&lt;/p&gt;

&lt;p&gt;Uma vez apresentado, é hora de mergulhar fundo no Progressive Enhancement, mas isso é assunto para o próximo post. Um abraço!&lt;/p&gt;

&lt;p&gt;&lt;small&gt;*Os percentuais eu retirei do w3schools, os milhoes de um calculo que so foi possivel gracas ao excelente livro Designing with Progressive Enhancement, do pessoal do Filament group, aos numeros do Internet World stats, e algumas xicaras de cafe. Todavia, recomendo fortemente a leitura do livro.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;** Bons olhos James! Obrigado pelo toque, o wordpress remove o javascript: da minha chamada automaticamente, deve ter algo a ver com a tag pre. Assim que resolvido, o código estará corrigido.&lt;/small&gt;&lt;/p&gt;

&lt;h2 id=&#34;referências&#34;&gt;Referências:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3schools.com/browsers/browsers_stats.asp&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;Browser stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/List_of_web_browsers&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;Lista de browsers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://upload.wikimedia.org/wikipedia/commons/7/74/Timeline_of_web_browsers.svg&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;timeline dos browsers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://upload.wikimedia.org/wikipedia/commons/5/55/Layout_engine_usage_share-2009-01-07.svg&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;browser engine share usados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://filamentgroup.com/&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;Filament group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://filamentgroup.com/lab/announcing_our_book_designing_with_progressive_enhancement/&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;Designing with PE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.internetworldstats.com/stats.htm&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;Internet World Stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://craigmdennis.com/web-design/graceful-degradation-vs-progressive-enhancement/&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;Graceful Degradation vs Progressive Enhancement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Progressive_enhancement&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;Progressive Enhancement no Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.digital-web.com/articles/fluid_thinking/&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;Fluid Thinking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dev.opera.com/articles/view/graceful-degradation-progressive-enhance/&#34; target=&#34;_blank&#34;&gt;Graceful Degradation vs Progressive Enhancement by Opera Curriculum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3.org/TR/html401/interact/forms.html#push-button&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;Buttons: howto by w3c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Browser_wars&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;A Guerra dos Browsers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gs.statcounter.com/&#34; target=&#34;_blank&#34; title=&#34;Acessar o site de referencia&#34;&gt;Statcounter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Vote no Especialista em Usabilidade para Presidente</title>
      <link>http://tableless.com.br/vote-no-especialista-em-usabilidade-para-presidente/</link>
      <pubDate>Thu, 21 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/vote-no-especialista-em-usabilidade-para-presidente/</guid>
      <description>&lt;nav&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#a-discussão-deste-post-vale-para-aplicações-de-grande-porte-o-que-não-significa-que-a-mesma-abordagem-possa-ser-aplicada-com-sucesso-em-ambientes-menores-como-blogs-por-exemplo&#34;&gt;﻿(A discussão deste post vale para aplicações de grande porte, o que não significa que a mesma abordagem possa ser aplicada com sucesso em ambientes menores como blogs, por exemplo)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;h6 id=&#34;a-discussão-deste-post-vale-para-aplicações-de-grande-porte-o-que-não-significa-que-a-mesma-abordagem-possa-ser-aplicada-com-sucesso-em-ambientes-menores-como-blogs-por-exemplo&#34;&gt;﻿(A discussão deste post vale para aplicações de grande porte, o que não significa que a mesma abordagem possa ser aplicada com sucesso em ambientes menores como blogs, por exemplo)&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;Usabilidade&lt;/strong&gt; é um termo usado para definir a facilidade com que as pessoas podem empregar uma ferramenta ou objeto a fim de realizar uma tarefa específica e importante. Podemos dizer que a Usabilidade é empregada também para oferecer uma experiência de aprendizado fácil e intuitiva, fazendo com que o usuário tenha maior produtividade, navegando / utilizando sua aplicação rapidamente, memorizando operações e comentendo menos erros.&lt;/p&gt;

&lt;p&gt;Usabilidade é um assunto muitas vezes subestimado em toda a cadeia de produção de um aplicativo. Veja bem, estou me referindo a &lt;strong&gt;aplicativos&lt;/strong&gt; porque este assunto vai além do escopo de desenvolvimento web. A Usabilidade é um assunto pertinente a &lt;strong&gt;todo&lt;/strong&gt; o ciclo de vida do projeto, e sua aplicabilidade envolve o nível executivo, o tático e o operacional.&lt;/p&gt;

&lt;p&gt;E apesar de envolver vários níveis em uma organização, um dos roles mais importantes na &lt;em&gt;hierarquia de poder&lt;/em&gt; do projeto (ainda mais agora com o HTML5) é o do desenvolvedor web responsável pela prototipação dos templates que recebem as funcionalidades de uma aplicação. Componentes e objetos desenvolvidos em outras camadas devem obedecer formatos de saída definidos para a camada web, o que transforma a responsabilidade (o poder&amp;#8230;) do Especialista de Usabilidade em diferencial na otimização de processos de desenvolvimento de outras frentes, fornecendo as informações necessárias sobre o comportamento do browser com os componentes criados (e como ele deveria se comportar) &amp;#8211; como a informação entra e sai das telas, como ela é embalada para consumo, o que pode ser feito no front-end X o que vai para o middleware, economizando horas de desenvolvimento&amp;#8230; obviamente a lista de vantagens é maior e fica visível a medida que o projeto caminha. Uma camada web bem escrita é um mar aberto, tranquilo. Navegar com &lt;em&gt;navios e jangadas&lt;/em&gt; em um cenário desses é mais rápido, mais tranquilo e o melhor de tudo, mais barato.&lt;/p&gt;

&lt;p&gt;As aplicações web de grande porte hoje em dia são monstruosas quando analisadas do ponto de vista da arquitetura. Não é raro você encontrar projetos que façam uso de várias tecnologias para atingir determinado objetivo. Um exemplo pertinente é o &lt;a title=&#34;Veja o Google Instant em ação&#34; href=&#34;http://www.google.com/instant/&#34; target=&#34;_blank&#34;&gt;Google Instant&lt;/a&gt;: Lançado em setembro, o Instant é uma colcha-de-retalhos de 16 diferentes tecnologias feito para otimizar suas pesquisas. O ganho com esse upgrade no engine de busca fica entre 2-5 segundos por busca. Aonde entra a Usabilidade aqui? Facilitando o usuário a fazer uma pesquisa de maneira mais rápida. &amp;#8211; “Mas a rapidez do search do Google já é incrível. Pra que melhorar um tempo de busca que já é absurdamente rápido? Vale o custo-benefício?”&lt;/p&gt;

&lt;p&gt;Sim. Vale e muito. Perguntar isso é pensar apenas em um ambiente restrito. É manter a cabeça no ambiente desktop. A web é maior que isso. Temos uma infinidade de dispositivos que hoje a acessam para compartilhar e usar informação. Quando aplicamos a solução nas pesquisas dos browsers dos smartphones, o Instant se transforma em uma das melhores soluções deste ano em termos de Usabilidade.&lt;/p&gt;

&lt;div id=&#34;attachment_2138&#34; style=&#34;width: 207px&#34; class=&#34;wp-caption alignright&#34;&gt;
  &lt;a href=&#34;../wp-content/uploads/2010/10/usability-as-a-top1.png&#34;&gt;&lt;img class=&#34;size-medium wp-image-2138&#34; src=&#34;../wp-content/uploads/2010/10/usability-as-a-top1-296x300.png&#34; alt=&#34;Do planejamento a execucao de testes, a Usabilidade deve ser uma discussão constante&#34; width=&#34;197&#34; height=&#34;199&#34; srcset=&#34;uploads/2010/10/usability-as-a-top1-296x300.png 296w, uploads/2010/10/usability-as-a-top1.png 454w&#34; sizes=&#34;(max-width: 197px) 100vw, 197px&#34; /&gt;&lt;/a&gt;&lt;br /&gt; 
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Usabilidade deve ser tratada em todas as competências do projeto
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;E se isso é feito em um browser, a responsabilidade de encapsular todas essas 16 tecnologias em uma sopa de letrinhas que o navegador vai ler bonitinho, sem erros, e com coesão visual é do desenvolvedor web, mas com certeza podemos considerar que em um futuro próximo o seu estoque de leite estará acabando e além da sua geladeira informar o fato, ela vai te dar uma lista dos locais mais baratos para garantir que você não fique sem o produto.&lt;/p&gt;

&lt;p&gt;Quem vai garantir que a ferramenta de busca da geladeira vai conseguir ler o catálogo de produtos que sua empresa tem que criar com o mais novo contrato assinado (Aquele do portal de laticínios)? Fica visível o impacto da atuação do Especialista nas vendas da empresa.&lt;/p&gt;

&lt;p&gt;Um bom Plano de Usabilidade tem que passar por todas as competências envolvidas em um projeto: &lt;strong&gt;Planejamento, Análise, Design e Testes / Upgrades.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Como falamos, uma aplicação web é exibida na maioria das vezes em um browser. E os Especialistas em navegadores somos nós. Se os navegadores fossem balanças, teríamos em um prato a &lt;strong&gt;aplicação,&lt;/strong&gt; e no ****outro teríamos a &lt;strong&gt;necessidade do usuário.&lt;/strong&gt; Os dois são muito pesados e seus valores aumentam e diminuem ao longo do projeto. Para atingir o &lt;strong&gt;equilíbrio&lt;/strong&gt; em uma balança desse tipo precisamos de &lt;strong&gt;lastros&lt;/strong&gt; para balanceá-la, e nosso lastro é a &lt;strong&gt;Usabilidade.&lt;/strong&gt;&lt;/p&gt;

&lt;div style=&#34;width: 386px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;img src=&#34;http://upload.wikimedia.org/wikipedia/commons/9/96/Basmati_Johns_%28peas_and_basmati_rice%29.jpg&#34; alt=&#34;Um mexidão preparado em um prato altamente decorado.&#34; width=&#34;376&#34; height=&#34;249&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Em uma boa embalagem, até um mexidão fica mais apetitoso
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Defendo fortemente o uso de desenvolvedores web com fluência no front-end (nossa amada trinca HTML/CSS/JS) como os Especialistas de Usabilidade. A culinária francesa é um grande exemplo: famosa pelo sabor mas também pela &amp;#8220;embalagem&amp;#8221; na qual oferece seus alimentos, ela mostra que o design é algo fundamental na experiência de quem consome o produto. Organizar o prato em &amp;#8220;fases&amp;#8221; para que os sabores possam combinar harmoniosamente tambem é uma abordagem usada nessa fase de design &amp;#8211; indicando ao cliente a sequência de ações para que o sabor de ingredientes mais fortes não faça desaparecer a mais suave especiaria. Em outras palavras, o chef está ensinando o cliente a comer o seu prato. Nós também precisamos fazer isso quando trabalhamos o design de nossas aplicações &amp;#8211; mesmo com os features e plugins do jQuery mais bem desenhados da internet, nós ainda temos que nos preocupar em como a informação trafega por este design para garantir que a experiencia do usuário, independente da plataforma ou navegador seja a mais rica possível (e a mais próxima da pedida pelo seu cliente).&lt;/p&gt;

&lt;p&gt;Por sermos em nossa maioria multidisciplinares, normalmente o perfil do desenvolvedor de front-end não o restringe apenas as tecnologias mencionadas acima (e um Especialista não pode se escorar apenas nestes skills para atuar, o roadmap para esta carreira é maior, porém de aprendizado fácil e lógico para nós) mas a um combinado de tecnologias para garantir que se necessário, ele possa gerar uma solução de front-end do zero, embalando diferentes camadas de aplicação em um produto que o usuário não pense para operar, mas seja levado pela intuição, agregando valor a experiência vivida no produto que você criou. Isso garante que ele poderá, em conjunto com o Arquiteto e líderes de outras frentes (Java, Banco de dados, Negócio) discutir abordagens mais eficazes para os componentes que a aplicação terá, uma vez que elas terão que ser embarcadas, inevitavelmente, em HTML para renderização em browsers. O papel do Especialista é evitar que problemas no desenvolvimento explodam na ponta do usuário, &lt;em&gt;domando&lt;/em&gt; tudo que foi desenvolvido por todos os times para a aplicação em um documento com significado, heurística, taxonomia e funcionalidade reconhecíveis por browsers, web services, motores de busca, dispositivos e o que mais pintar por ai. E dos 5 maiores problemas em Usabilidade, 4 sao de responsabilidade direta do HTML:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;Conteudo&lt;/dt&gt;
&lt;dd&gt;Quando você abre a página em um navegador, o que você vê? Se você criou um site aplicando regras de Usabilidade, você deve ver 80-90% o que seu cliente está procurando. No entanto, com a maioria dos sites, geralmente o que seu cliente está procurando constitui apenas entre 50-60% (ou menos), a parte principal da página. O resto está nas intrusivas propagandas, navegação confusa e gráficos e cores estranhos.&lt;/dd&gt;
&lt;dt&gt;Layout&lt;/dt&gt;
&lt;dd&gt;Intimamente relacionado ao conteúdo é a forma como esse conteúdo é exibido na página. Embora os estudos têm mostrado que usuários estão dispostos a dar scroll para ler páginas web, se eles não encontram conteúdo relevante rapidamente eles são saem do seu website. Mantenha sua páginas limpas e simples. Teste remoção de elementos, faça análises e pondere se sua aplicação precisa realmente deles.&lt;/dd&gt;
&lt;dt&gt;Cores&lt;/dt&gt;
&lt;dd&gt;As cores afetam a usabilidade do seu website. Elas podem ser uma importante ferramenta cognitiva – como também podem confundir. Cor em elementos de páginas podem afetar leitores de tela por exemplo. Informações codificadas em imagens ou cores podem não ser reconhecidas por leitores de tela e Progressive Enhancement pode ser usado para resolver o problema. Um estudo de cores é também necessário para que pessoas com daltonismo não sejam impactadas em sua experiência.&lt;/dd&gt;
&lt;dt&gt;Velocidade de renderização&lt;/dt&gt;
&lt;dd&gt;O acesso à Internet pode estar ficando mais e mais rápido, mas isso não significa que o HTML deve ficar maior. Estudos de Usabilidade para Web continuam a mostrar que a velocidade de renderização da página/componentes é muito importante. Em um portal de conteúdo a demora pode fazer o usuário perder o interesse, não importa o quanto eles estavam interessados no tema. Você não pode controlar todos os aspectos da renderização (download) &amp;#8211; por isso é importante fazer o que puder para que o HTML &amp;#8211; o documento que carrega o significado da página &amp;#8211; seja renderizado (e compreendido) rapidamente pelo browser.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Um HTML bem escrito, limpo e escalonado garante uma melhora sensível no desenvolvimento de um projeto. Ter um desenvolvedor HTML como Especialista de Usabilidade garante que o cóodigo gerado pelo time de integração vai ser o mais enxuto possível, afinal de contas um desenvolvedor HTML precisa saber que para resolver situações como a de velocidade de renderização de página por exemplo, precisamos*:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fazer o menor número possível de requisições HTTP em uma página;&lt;/li&gt;
&lt;li&gt;Garantir o uso de CDNs para otimizar o tempo de resposta de uma requisição HTTP;&lt;/li&gt;
&lt;li&gt;Garantir um uso eficiente da memória cache do navegador, adicionando cabecalhos Expires para otimizar as requisições HTTP, fazendo AJAX ou outra tecnologia se aproveitar de tudo que pode ser deixado no cliente;&lt;/li&gt;
&lt;li&gt;Utilizar gzip para compactar HTML, scripts e estilos;&lt;/li&gt;
&lt;li&gt;Chamar o estilo no topo das páginas, evitando declarações inline e se possivel chamando pela tag &lt;link&gt;, ou seja, sempre em arquivos externos;&lt;/li&gt;
&lt;li&gt;Rodar os scripts no final da página (ou garantir que uma função apenas rode após o document.ready) e sempre que possível em arquivos externos&lt;/li&gt;
&lt;li&gt;Usar o Keep-alive e poucos dominios para reduzir as pesquisas de DNS (isso pode mudar agora no HTML com o localStorage em alguns casos específicos);&lt;/li&gt;
&lt;li&gt;Sempre compactar o javascript e remover chamadas duplicadas, garantindo uma biblioteca leve e centralizada para suas funções;&lt;/li&gt;
&lt;li&gt;Evitar redirecionamentos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algumas coisas podem soar como óbvias mas é comum o já &lt;em&gt;marginalizado&lt;/em&gt; HTML (assunto para outro post) ser entregue a responsabilidade de desenvolvedores de outras frentes (como java por exemplo) para garantir um prazo de entrega mais rápido e menor custo, uma vez que desenvolvimento e integração acontecem no mesmo momento. HTML é sim uma linguagem realmente simples. Porém ela também é muito criteriosa e domina-lá é a garantia entre os milhões de page-views e um mirror do seu-site-que-fechou-ano-passado no web archive. Estamos falando de milhares/milhões de visitas e transações simultâneas, alta performance, alta colaboração, interoperabilidade de dispositivos, garantia cross-browser, garantia de baixo impacto e custo para mudanças estruturais futuras da aplicação (design), redução de gastos na implementação do projeto devido a rapidez da integração dos componentes ao front-end, de um responsável em entender as requisições do cliente e discutí-las com linguagem simples, para garantir que as expectativas criadas possam ser atingidas na camada web da aplicação e devidamente repassadas para as outras frentes do projeto. A lista é maior. Não é pouca coisa e o mais indicado para preencher esta demanda somos nós. Se a satisfação do usuário é medida diretamente pela sua experiência no front-end, somos nós os presidentes. Detalhando um passo-a-passo de Usabilidade, isso fica mais claro ainda:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2010/10/visual_map.png&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-2139&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2010/10/visual_map.png&#34; alt=&#34;Um mapa mostrando todas as etapas de um Plano de Usabilidade&#34; width=&#34;681&#34; height=&#34;454&#34; srcset=&#34;uploads/2010/10/visual_map.png 890w, uploads/2010/10/visual_map-300x200.png 300w&#34; sizes=&#34;(max-width: 681px) 100vw, 681px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voltaremos a esse Plano de Usabilidade no próximo post, discutindo a criticidade de cada uma das etapas, e aplicabilidade de acordo com tamanho e prazo de entrega do projeto, porém posso adiantar que das 26 etapas, em pelo menos 17 um profissional sênior de HTML/CSS/JS deve ter grande desenvoltura, com atuação moderada/leve ou massiva:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;Colaboração leve e moderada&lt;/dt&gt;
&lt;dd&gt;Criação do SOW (Statement of Work), Condução de Análise de Tarefas, Desenvolvimento de Atores, Cenários de Teste, Definição de métricas, objetivos, Análise de cartas, Casos de uso, Preparação do Plano de Testes, Análise e geração de relatórios.&lt;/dd&gt;
&lt;dt&gt;Colaboração massiva&lt;/dt&gt;
&lt;dd&gt;Especificação do site, Inventório de conteúdo, Arquitetura da Informação, Reconhecimento de padrões visuais para textos, Design paralelo, Release da aplicação, Testes de Usabilidade, Testes de Heurística.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Com certeza o Plano de Usabilidade acima é utópico. É como o socialismo &amp;#8211; se pudéssemos aplicar 100% da sua teoria, o mundo seria lindo. Porém o custo para a manutenção de uma estrutura aonde o diagrama acima possa ser 100% executado não é proibitivo, porém considerável. E quanto maior o projeto, mais necessária a sua aplicação, e maior o ROI de Usabilidade.&lt;/p&gt;

&lt;p&gt;Mas lidar com a Usabilidade requer as etapas descritas, isso é fato. O negócio é &lt;strong&gt;flexibilizar&lt;/strong&gt;, entendendo as necessidades do cliente e aplicando seus conhecimentos nas etapas que forem aplicadas no seu projeto. E sempre pensar em Usabilidade e Escalabilidade e Acessibilidade enquanto escreve seus templates. Acabou de criar um portal de venda de lingerie? Sera que suas listviews estao preparadas para o inevitável sucesso da aplicação (afinal você é um grande desenvolvedor) e futura integração via webservices com seus mais novos contratos, um portal de produtos de beleza e um portal de cabeleireiros?&lt;/p&gt;

&lt;p&gt;Como eu disse no inicio do post, este fluxo de trabalho é muito mais real para portais e aplicações web de médio/grande porte. Se seu site tem um stickiness alto, independente do porte, você também pode ponderar sobre a adoção dos métodos acima, afinal se você otimiza a experiência do usuário e ele feliz, recomenda seu produto, é o seu nome que está na vitrine. E este tipo de profissional está em falta no mercado, sendo disputado a &lt;em&gt;tapa&lt;/em&gt; por empresas.&lt;/p&gt;

&lt;p&gt;No próximo post detalho o passo-a-passo do Plano de Usabilidade, e tambem alguns métodos de Usabilidade para serem aplicados no desenvolvimento web, alem de Design Centrado no Usuário (UCD).&lt;/p&gt;

&lt;p&gt;*Se estes bullets soam como Javanês nos seus ouvidos, recomendo fortemente a leitura de um livro sensacional do &lt;strong&gt;Steve Souders&lt;/strong&gt; chamado &lt;strong&gt;High Performance Web Sites.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;******&lt;a title=&#34;Aprendendo o estado-da-arte em Usabilidade&#34; href=&#34;http://www.nngroup.com/events/tutorials/usability.html&#34; target=&#34;_blank&#34;&gt;Tá com grana no bolso para o investimento de uma carreira?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Referências:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://webdesign.about.com/od/usability/tp/aatpwebusable.htm&#34; target=&#34;_blank&#34;&gt;Most Important Web Usability Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.usability.gov/methods/process.html&#34;&gt;Usability.gov &amp;#8211; Visual Map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kissmetrics.com/color-psychology/?wide=1&#34;&gt;How do colors affect purchases?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://oreilly.com/catalog/9780596529307&#34; target=&#34;_blank&#34;&gt;High Performance Web Sites &amp;#8211; Essential Knowledge for Front-End Engineers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>