<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jaime Neves on Tableless</title>
    <link>http://tableless.com.br/author/jaime-neves/index.xml</link>
    <description>Recent content in Jaime Neves on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/jaime-neves/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Integração Contínua com Travis CI — Parte 01</title>
      <link>http://tableless.com.br/integracao-continua-com-travis-ci-parte-01/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/integracao-continua-com-travis-ci-parte-01/</guid>
      <description>

&lt;p&gt;O objetivo geral do artigo é mostrar como fazer uma Integração Contínua (técnica de desenvolvimento agile) com &lt;a href=&#34;https://travis-ci.com/&#34;&gt;Travi CI&lt;/a&gt;, criando um repositório no &lt;a href=&#34;https://github.com/&#34;&gt;O objetivo geral do artigo é mostrar como fazer uma Integração Contínua (técnica de desenvolvimento agile) com &lt;a href=&#34;https://travis-ci.com/&#34;&gt;Travi CI&lt;/a&gt;, criando um repositório no&lt;/a&gt; e publicando nosso projeto em um Host utilizando o &lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Nesse primeiro post iremos montar toda nossa estrutura de diretórios e configuração de arquivos. Por fim iremos criar nosso repositório no GitHub e enviar o nosso projeto local.&lt;/p&gt;

&lt;p&gt;No segundo post iremos registrar nossa aplicação no Dribbble, configurar o Travis e Heroku e finalizar nossa aplicação client-side.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sobre o Travis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Travis CI é uma plataforma/serviço de &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Integração Contínua&lt;/a&gt;, que é free para todos os projetos open source hospedados no GitHub. Com apenas um arquivo chamado &lt;em class=&#34;markup--em markup--p-em&#34;&gt;.travis.yml&lt;/em&gt; contendo algumas informações sobre o projeto, podemos produzir builds automatizados com todas as mudanças, para o branch master ou outro, e até mesmo através de &lt;em class=&#34;markup--em markup--p-em&#34;&gt;pull request&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pré Requisitos&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Conta no GitHub&lt;/li&gt;
&lt;li&gt;Conta no Heroku&lt;/li&gt;
&lt;li&gt;Para o Travis você poderá usar a mesma conta do GitHub&lt;/li&gt;
&lt;li&gt;Git, NodeJS e Bower instalado&lt;/li&gt;
&lt;li&gt;Um editor de texto: Sublime Text, Atom ou qualquer outro de sua preferência.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Descrição do Projeto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Iremos implementar uma aplicação client-side que consulta uma API do site **[O objetivo geral do artigo é mostrar como fazer uma Integração Contínua (técnica de desenvolvimento agile) com &lt;a href=&#34;https://travis-ci.com/&#34;&gt;Travi CI&lt;/a&gt;, criando um repositório no &lt;a href=&#34;https://github.com/&#34;&gt;O objetivo geral do artigo é mostrar como fazer uma Integração Contínua (técnica de desenvolvimento agile) com &lt;a href=&#34;https://travis-ci.com/&#34;&gt;Travi CI&lt;/a&gt;, criando um repositório no&lt;/a&gt; e publicando nosso projeto em um Host utilizando o &lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Nesse primeiro post iremos montar toda nossa estrutura de diretórios e configuração de arquivos. Por fim iremos criar nosso repositório no GitHub e enviar o nosso projeto local.&lt;/p&gt;

&lt;p&gt;No segundo post iremos registrar nossa aplicação no Dribbble, configurar o Travis e Heroku e finalizar nossa aplicação client-side.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sobre o Travis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Travis CI é uma plataforma/serviço de &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Integração Contínua&lt;/a&gt;, que é free para todos os projetos open source hospedados no GitHub. Com apenas um arquivo chamado &lt;em class=&#34;markup--em markup--p-em&#34;&gt;.travis.yml&lt;/em&gt; contendo algumas informações sobre o projeto, podemos produzir builds automatizados com todas as mudanças, para o branch master ou outro, e até mesmo através de &lt;em class=&#34;markup--em markup--p-em&#34;&gt;pull request&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pré Requisitos&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Conta no GitHub&lt;/li&gt;
&lt;li&gt;Conta no Heroku&lt;/li&gt;
&lt;li&gt;Para o Travis você poderá usar a mesma conta do GitHub&lt;/li&gt;
&lt;li&gt;Git, NodeJS e Bower instalado&lt;/li&gt;
&lt;li&gt;Um editor de texto: Sublime Text, Atom ou qualquer outro de sua preferência.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Descrição do Projeto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Iremos implementar uma aplicação client-side que consulta uma API do site &lt;strong&gt;]&lt;a href=&#34;https://dribbble.com&#34;&gt;4&lt;/a&gt;&lt;/strong&gt; e mostre os Shots mais populares. Usaremos as seguintes tecnologias no front-end: &lt;strong&gt;&lt;a href=&#34;https://angularjs.org/&#34;&gt;Angularjs&lt;/a&gt;&lt;/strong&gt; e &lt;strong&gt;&lt;a href=&#34;http://materializecss.com&#34;&gt;Materialize.css&lt;/a&gt;&lt;/strong&gt; como framework de componentes. Para gerenciar os pacotes e dependências utilizaremos o Bower. No server-side usaremos a plataforma NodeJS como nosso servidor web, e o &lt;strong&gt;&lt;a href=&#34;http://gruntjs.com/&#34;&gt;Gruntjs&lt;/a&gt;&lt;/strong&gt; para automatizar algumas tarefas. Para o versionamento utilizaremos o &lt;strong&gt;Git&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Criando Nossa Estrutura de Diretórios&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*b5H0NRwfSN13Ex659Hw_Ag.png&#34; alt=&#34;Estrutura de Diretórios&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Os arquivos e diretórios podem ser criados da maneira que você se sentir mas a vontade. &lt;strong&gt;OBS.:&lt;/strong&gt; Não crie o diretório “.git”, pois ele será criado através da nossa linha de comando, o restante pode ser criado manualmente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Detalhamento da Estrutura&lt;/strong&gt;&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li id=&#34;4172&#34; class=&#34;graf graf--li graf-after--h4&#34;&gt;
    &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;client&lt;/strong&gt;: diretório onde ficará todos os nossos arquivos de front-end.
  &lt;/li&gt;
  &lt;li id=&#34;fc63&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;.bowerrc&lt;/strong&gt;: arquivo de configuração do &lt;em class=&#34;markup--em markup--li-em&#34;&gt;Bower&lt;/em&gt;, é nele que iremos definir onde serão instalados nossos pacotes. Se você não criá-lo as dependências serão instaladas no diretório chamado &lt;em class=&#34;markup--em markup--li-em&#34;&gt;bower_components&lt;/em&gt; padrão do bower.
  &lt;/li&gt;
  &lt;li id=&#34;d36f&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;.gitignore&lt;/strong&gt;: arquivos que podem ser ignorados pelo versionamento do Git.
  &lt;/li&gt;
  &lt;li id=&#34;94ba&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;.travis.yml&lt;/strong&gt;: arquivo de configuração da nossa integração com o Travis.
  &lt;/li&gt;
  &lt;li id=&#34;c613&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;Gruntfile.js&lt;/strong&gt;: arquivo onde ficará todas as configurações de tarefas automatizadas, como por exemplo: concatenação e minificação dos arquivos.
  &lt;/li&gt;
  &lt;li id=&#34;2e90&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;server.js&lt;/strong&gt;: arquivo onde faremos a configuração de nosso servidor web.
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;deixe o diretório &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;client&lt;/strong&gt; com a seguinte estrutura:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*5ohek1gfXzLGL5OTdmrcPQ.png&#34; alt=&#34;Diretório Client&#34; /&gt;&lt;/p&gt;

&lt;p&gt;código do arquivo &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;.bowerrc&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{&amp;lt;br /&amp;gt;
&amp;quot;directory&amp;quot; : &amp;quot;client/vendor&amp;quot;&amp;lt;br /&amp;gt;
}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;código do arquivo &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;.gitignore&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node_modules/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;código do arquivo .travis.yml&lt;/p&gt;

&lt;p&gt;&lt;code&gt;language: node_js&amp;lt;br /&amp;gt;
node_js:&amp;lt;br /&amp;gt;
- &amp;quot;6.1&amp;quot;&amp;lt;br /&amp;gt;
- &amp;quot;5.12.0&amp;quot;&amp;lt;br /&amp;gt;
- &amp;quot;5.11.1&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;código do arquivo &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;server.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;var express = require(&#39;express&#39;);&amp;lt;br /&amp;gt;
var serveStatic = require(&#39;serve-static&#39;);&amp;lt;br /&amp;gt;
var app = express();&amp;lt;br /&amp;gt;
var client = process.env.NODE_APP_DIRECTORY === &#39;production&#39;&amp;lt;br /&amp;gt;
? &#39;/client/dist&#39; : &#39;/client&#39;;&amp;lt;br /&amp;gt;
var port = process.env.PORT || 8081;&amp;lt;br /&amp;gt;
app.use(serveStatic(__dirname + client));&amp;lt;br /&amp;gt;
app.listen(port,function(){&amp;lt;br /&amp;gt;
console.log(&#39;localhost:&#39;+port);&amp;lt;br /&amp;gt;
});&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Link para o código do arquivo &lt;strong&gt;&lt;a href=&#34;https://gist.github.com/dejaneves/b983dd0cfd54d63d6bd9f4310a812289&#34;&gt;server.js&lt;/a&gt; &lt;/strong&gt;no GitHub&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;código do arquivo &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;&lt;a href=&#34;https://gist.github.com/dejaneves/996644e20b2f651939c2da892dbea555#file-gruntfile-ci-agile-th-js&#34;&gt;Gruntfile.js&lt;/a&gt;. &lt;/strong&gt;O código e toda sua configuração, será explicado na segunda parte do post.&lt;/p&gt;

&lt;h4 id=&#34;d351.graf.graf--h4.graf-after--figure&#34;&gt;Bower: Instalação dos Pacotes e suas dependências&lt;/h4&gt;

&lt;p&gt;Vá para raiz do projeto e digite o seguinte comando para instalação das dependências.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ bower install angular angular-resource angular-ui-router angular-sanitize&amp;lt;br /&amp;gt;
angular-loading-bar bootstrap materialize&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;após a execução desse comando o seu diretório &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;client/vendor&lt;/strong&gt; ficará da seguinte forma:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*0z-hRCazRdhCpIMfe3gQ1g.png&#34; alt=&#34;Pasta Client&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;40e5.graf.graf--h4.graf-after--figure&#34;&gt;Nodejs: Instalação e Configuração dos Pacotes&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ npm init -y&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;após a execução desse comando será criado um arquivo na raiz do seu projeto chamado &lt;em class=&#34;markup--em markup--p-em&#34;&gt;package.json&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;bf1d.graf.graf--h4.graf-after--p&#34;&gt;Instalação das Dependências&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ npm install express serve-static --save&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;3693.graf.graf--h4.graf-after--pre&#34;&gt;Iniciando o Versionamento com o GIT&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ git init&amp;lt;br /&amp;gt;
$ git add .&amp;lt;br /&amp;gt;
$ git commit -m &amp;quot;primeiro commit&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;6204.graf.graf--h4.graf-after--pre&#34;&gt;Executando a aplicação&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;node server.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;o seu sistema terá que exibir a seguinte mensagem&lt;/p&gt;

&lt;p&gt;&lt;code&gt;client: /client&amp;lt;br /&amp;gt;
environment: undefined&amp;lt;br /&amp;gt;
localhost:8081&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;para parar a execução do servidor pressione &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;ctrl&lt;/strong&gt; + &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;c&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;66d0.graf.graf--h3.graf-after--p&#34;&gt;Criando Repositório no GitHub&lt;/h3&gt;

&lt;p id=&#34;3970&#34; class=&#34;graf graf--p graf-after--h3&#34;&gt;
  Abra o site do &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GitHub&lt;/a&gt;, crie um repositório público chamado &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;ci-agile-th.&lt;/strong&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*h3yRLVKf2peVF_UucGQYJg.png&#34; alt=&#34;Criando um repositório&#34; /&gt;&lt;/p&gt;

&lt;p&gt;após a criação aparecerá a seguinte tela&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*VQf-VyPNBK8dSQl3Lqmq_A.png&#34; alt=&#34;Repositório&#34; /&gt;digite os comandos que estão dentro do 2º bloco na raiz do seu projeto&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ git remote add origin https://github.com/dejaneves/ci-agile-th.git&amp;lt;br /&amp;gt;
$ git push -u origin master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;te espero no próximo post.&lt;/p&gt;

&lt;h3 id=&#34;8a4b.graf.graf--h3.graf-after--p&#34;&gt;Links Úteis&lt;/h3&gt;

&lt;p id=&#34;0259&#34; class=&#34;graf graf--p graf-after--h3&#34;&gt;
  Instalação do NodeJS
&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li id=&#34;67c7&#34; class=&#34;graf graf--li graf-after--p&#34;&gt;
    &lt;a class=&#34;markup--anchor markup--li-anchor&#34; href=&#34;https://udgwebdev.com/node-js-para-leigos-instalacao-e-configuracao&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Underground WebDev&lt;/a&gt;
  &lt;/li&gt;
  &lt;li id=&#34;0c62&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    &lt;a class=&#34;markup--anchor markup--li-anchor&#34; href=&#34;http://tableless.com.br/o-que-nodejs-primeiros-passos-com-node-js&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Tableless&lt;/a&gt;
  &lt;/li&gt;
  &lt;li id=&#34;e04c&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    &lt;a class=&#34;markup--anchor markup--li-anchor&#34; href=&#34;https://www.digitalocean.com/community/tutorials/como-instalar-o-node-js-em-um-servidor-ubuntu-14-04-pt&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Digitalocean&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&#34;273d&#34; class=&#34;graf graf--p graf-after--li&#34;&gt;
  Instalação do Bower
&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li id=&#34;caf2&#34; class=&#34;graf graf--li graf-after--p&#34;&gt;
    &lt;a class=&#34;markup--anchor markup--li-anchor&#34; href=&#34;http://tableless.com.br/bower-na-pratica&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Tableless&lt;/a&gt;
  &lt;/li&gt;
  &lt;li id=&#34;4a32&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    &lt;a class=&#34;markup--anchor markup--li-anchor&#34; href=&#34;http://www.carvalhoweb.com/articles/bower-guia-definitivo&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Carvalho Web&lt;/a&gt;
  &lt;/li&gt;
  &lt;li id=&#34;1621&#34; class=&#34;graf graf--li graf-after--li graf--last&#34;&gt;
    &lt;a class=&#34;markup--anchor markup--li-anchor&#34; href=&#34;http://blog.thiagobelem.net/gerenciando-assets-com-o-bower&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Thiago Belem&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>