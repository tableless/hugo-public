<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gabriel Carvalho on Tableless</title>
    <link>http://tableless.com.br/author/gabriel-carvalho/index.xml</link>
    <description>Recent content in Gabriel Carvalho on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/gabriel-carvalho/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Upload de Arquivos com a Upin</title>
      <link>http://tableless.com.br/upload-de-arquivos-com-upin/</link>
      <pubDate>Sat, 12 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/upload-de-arquivos-com-upin/</guid>
      <description>&lt;p&gt;A Upin é uma biblioteca para manipulação de arquivos em PHP Orientado a Objetos, que visa facilitar a vida de programadores iniciantes ou até profissionais. Afinal, tempo é dinheiro não é mesmo?&lt;/p&gt;

&lt;p&gt;Para começar você deve baixar a versão mais atualizada da biblioteca &lt;a href=&#34;http://upin.scriptadores.com/download/&#34;&gt;nesta página&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Após ter realizado o download da biblioteca copie a pasta &lt;code&gt;class&lt;/code&gt; para dentro do diretório do seu projeto.&lt;/p&gt;

&lt;p&gt;Agora, com os arquivos da biblioteca em seu projeto, você deverá criar um formulário de upload semelhante ao abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;form action=&#34;upload.php&#34; method=&#34;post&#34; enctype=&#34;multipart/form-data&#34;&amp;gt;
 &amp;lt;strong&amp;gt;Envie uma foto:&amp;lt;/strong&amp;gt; &amp;lt;input type=&#34;file&#34; name=&#34;photos[]&#34; /&amp;gt;
 &amp;lt;br /&amp;gt;
 &amp;lt;input type=&#34;submit&#34; /&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Algumas coisas na hora da criação do formulário são obrigatórias, são elas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;O atributo &lt;code&gt;enctype&lt;/code&gt; cujo valor é &lt;code&gt;multipart/form-data&lt;/code&gt; (&lt;a href=&#34;http://www.w3schools.com/tags/att_form_enctype.asp&#34; target=&#34;_blank&#34;&gt;Leia sobre&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;No atributo name do &lt;code&gt;input file&lt;/code&gt; é necessário dois couchettes ( &lt;code&gt;[]&lt;/code&gt; ) após o nome.&lt;/li&gt;
&lt;li&gt;E uma pequena observação: Para permitir múltiplos uploads você deve adicionar o atributo &lt;code&gt;multiple.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tendo as informações acima em mente, e criadas, vamos para o arquivo que você definiu no atributo &lt;code&gt;action&lt;/code&gt; da sua tag &lt;code&gt;form&lt;/code&gt; (no meu caso o arquivo &lt;strong&gt;upload.php&lt;/strong&gt;).&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
 require_once(&#34;class/Upload.class.php&#34;);
 #Instanciamos a classe Upload:
 $Upin = new Upload;
 
 $Upin-&amp;gt;get(
  &#34;imagens/&#34;, //Pasta de uploads (previamente criada)
  $_FILES[&#34;photos&#34;][&#34;name&#34;], //Pega o nome dos arquivos, altere apenas &#34;photos&#34;
  10, //Tamanho máximo
  &#34;jpeg,png,jpg,gif&#34;, //Extensões permitidas
  &#34;photos&#34;, //Atributo name do input file
  1 //Mudar o nome? 1 = sim, 0 = não
 );
 $Upin-&amp;gt;run();
 
 #Vamos usar o callback para mostrar as imagens enviadas.
 if($Upin-&amp;gt;res == true){
  foreach($Upin-&amp;gt;json as $arr){
    echo &#34;&amp;lt;img width=200 height=180 src=&#39;perfil/&#34;.$arr.&#34;&#39; /&amp;gt;&#34;;
  }
 }
&lt;/pre&gt;

&lt;p&gt;Imagine você, neste exato momento, criando um sistema de múltiplos uploads do zero. Bem chato, não? Então use e abuse da Upin!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>