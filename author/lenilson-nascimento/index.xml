<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lenilson Nascimento on Tableless</title>
    <link>https://tableless.github.io/hugo-public/author/lenilson-nascimento/index.xml</link>
    <description>Recent content in Lenilson Nascimento on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/author/lenilson-nascimento/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A luta pelo Leo ainda não acabou</title>
      <link>https://tableless.github.io/hugo-public/luta-pelo-leo-ainda-nao-acabou/</link>
      <pubDate>Mon, 20 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/luta-pelo-leo-ainda-nao-acabou/</guid>
      <description>&lt;p&gt;O intuito deste post é reforçar a campanha pelo nosso amigo &lt;a href=&#34;http://leokz.com/campanha/&#34;&gt;Leokz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Como todos sabemos, ele está nos EUA fazendo o tratamento para um câncer raro, pois no Brasil não há chances de cura.&lt;/p&gt;

&lt;p&gt;Você deve se lembrar que no início do ano fizemos &lt;a href=&#34;http://frontendunited.io/leokzw/&#34;&gt;a campanha Front-end United for Leokz&lt;/a&gt;. Se não se lembra pode ver o post &lt;a href=&#34;http://tableless.com.br/front-end-united-leo-kzw/&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bem, ele ainda precisa de bastante grana pra terminar o tratamento. Além disso o valor do tratamento aumentou. Várias pessoas, não apenas desenvolvedores estão ajudando até hoje, inclusive vários jogadores de futebol como David Luiz e Neymar! ;-D&lt;/p&gt;

&lt;p&gt;Vamos continuar ajudando e divulgando a campanha para que nosso amigo vença essa batalha.&lt;/p&gt;

&lt;p&gt;Entre no site dele, faça sua doação, e divulgue pros seus parentes, amigos e peça à eles que divulguem também.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://leokz.com/campanha/&#34;&gt;http://leokz.com/campanha/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ECMAScript 6, uma breve introdução à POO</title>
      <link>https://tableless.github.io/hugo-public/ecmascript-6-uma-breve-introducao-a-poo/</link>
      <pubDate>Mon, 15 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/ecmascript-6-uma-breve-introducao-a-poo/</guid>
      <description>

&lt;p&gt;Bom galera, já falei aqui no tableless, sobre o uso de classes na ECMAScript 6, porém, foram exemplos bem superficiais. Então decidi criar um exemplo mais prático de como utilizá-la. Você pode encontrar o artigo que estou falando &lt;a href=&#34;http://tableless.com.br/tableless-weekly-5/&#34; title=&#34;Tableless Weekly 5&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;entendendo-o-projeto&#34;&gt;Entendendo o projeto&lt;/h2&gt;

&lt;p&gt;A ideia inicial foi criar uma mini (e põe mini nisso) loja virtual, utilizando dados em JSON.&lt;/p&gt;

&lt;p&gt;O que teremos, nada mais é que uma variável contendo dados em JSON e estes dados serão transformados em objetos&amp;#8230; Advinha? Objetos de uma classe da ES6.&lt;/p&gt;

&lt;h3 id=&#34;tá-mas-pra-quê&#34;&gt;Tá, mas pra quê?&lt;/h3&gt;

&lt;p&gt;Bem, hoje em dia temos muitas ferramentas no mercado que utilizam dados em JSON o tempo todo para o front-end. O AngularJS, o backbone.js, e vários outros, são frameworks que utilizam de dados JSON parar gerar views.&lt;/p&gt;

&lt;h2 id=&#34;estrutura-dos-arquivos&#34;&gt; Estrutura dos arquivos&lt;/h2&gt;

&lt;p&gt;Os arquivos do projeto seguem a seguinte estrutura:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;    -/css&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;        bootstrap.min.css&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;    -/img&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;        01.jpg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;        02.jpg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;        03.jpg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;    -/js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;        script.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Como você já deve ter percebido, na pasta css temos o bootstrap, na pasta img, temos algumas imagens, temos também o arquivo index.html na raiz do projeto, e por fim, na pasta js temos o arquivo script.js, que é onde acontece a mágica.&lt;/p&gt;

&lt;p&gt;No final do artigo deixarei um link com o repositório deste projeto no github.&lt;/p&gt;

&lt;h2 id=&#34;finalmente-mãos-à-obra&#34;&gt;Finalmente, mãos à obra 🙂&lt;/h2&gt;

&lt;p&gt;Vamos começar pelo arquivo index.html, que tem uma estrutura bem simples, veja:&lt;/p&gt;

&lt;pre&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
&amp;lt;title&amp;gt;Teste com ECMAScript 6 classes&amp;lt;/title&amp;gt;
&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;css/bootstrap.min.css&#34;&amp;gt;
&amp;lt;style type=&#34;text/css&#34;&amp;gt;
    .old-price{
        text-decoration: line-through;
    }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div class=&#34;container&#34;&amp;gt;
        &amp;lt;div class=&#34;row&#34; id=&#34;lista&#34;&amp;gt;
 
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;script type=&#34;text/javascript&#34; src=&#34;js/script.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Bem simples não?&lt;/p&gt;

&lt;p&gt;Vamos usar uma estrutura bem básica, pois a nossa mini loja só vai mostrar alguns produtos e pronto. Como eu já disse, o objetivo é usar a ES6.&lt;/p&gt;

&lt;p&gt;No final teremos o seguinte resultado:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-46212&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/zoa.jpg&#34; alt=&#34;zoa&#34; width=&#34;1177&#34; height=&#34;576&#34; srcset=&#34;uploads/2014/12/zoa.jpg 1177w, uploads/2014/12/zoa-265x129.jpg 265w, uploads/2014/12/zoa-400x195.jpg 400w&#34; sizes=&#34;(max-width: 1177px) 100vw, 1177px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Bem, vamos estudar um pouco o HTML acima.&lt;/p&gt;

&lt;p&gt;Nas linhas 6 a 10, apenas criamos um css para &amp;#8220;riscar&amp;#8221; o preço antigo no caso de promoção usando a classe &lt;strong&gt;.old-price&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Na linha 13 criamos o container e na linha 14 uma div com o atributo id setado como &amp;#8220;lista&amp;#8221;, é nesta div onde carregaremos os produtos.&lt;/p&gt;

&lt;h3 id=&#34;preparado-vamos-ao-javascript&#34;&gt;Preparado? Vamos ao JavaScript.&lt;/h3&gt;

&lt;p&gt;O JavaScript será estudado mais a fundo, então não vou simplesmente colar o código e explicar as linhas como fiz com o HTML, vou fazer um passo à passo e no final mostro o resultado do arquivo.&lt;/p&gt;

&lt;h4 id=&#34;qual-o-primeiro-passo&#34;&gt;Qual o primeiro passo?&lt;/h4&gt;

&lt;p&gt;Habilitar a ES6 no seu navegador, é claro!&lt;/p&gt;

&lt;p&gt;Como a ES6 ainda não está funcionando totalmente nos navegadores e ainda não foi adotada como padrão, ela está por padrão desabilitada.&lt;/p&gt;

&lt;p&gt;Neste exemplo utilizei o Google Chrome Canary, indico que você o utilize também, mas nada contra o firefox.&lt;/p&gt;

&lt;p&gt;Para habilitar a ES6 no Chrome Canary, basta você abrir uma nova aba e acessar a url: &lt;strong&gt;chrome://flags&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Após acessar esta url, você vai procurar algo parecido com a imagem abaixo, basta apenas habilitar e pronto:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-46218&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/zoa21.jpg&#34; alt=&#34;zoa2&#34; width=&#34;830&#34; height=&#34;316&#34; srcset=&#34;uploads/2014/12/zoa21.jpg 830w, uploads/2014/12/zoa21-265x100.jpg 265w, uploads/2014/12/zoa21-400x152.jpg 400w&#34; sizes=&#34;(max-width: 830px) 100vw, 830px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Feito isso, podemos começar :).&lt;/p&gt;

&lt;p&gt;O primeiro passo, é habilitar o strict mode do JavaScript, pois objetos não podem ser utilizados sem o modo strict. Você pode ver mais sobre o strict mode [Bom galera, já falei aqui no tableless, sobre o uso de classes na ECMAScript 6, porém, foram exemplos bem superficiais. Então decidi criar um exemplo mais prático de como utilizá-la. Você pode encontrar o artigo que estou falando &lt;a href=&#34;http://tableless.com.br/tableless-weekly-5/&#34; title=&#34;Tableless Weekly 5&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;entendendo-o-projeto-1&#34;&gt;Entendendo o projeto&lt;/h2&gt;

&lt;p&gt;A ideia inicial foi criar uma mini (e põe mini nisso) loja virtual, utilizando dados em JSON.&lt;/p&gt;

&lt;p&gt;O que teremos, nada mais é que uma variável contendo dados em JSON e estes dados serão transformados em objetos&amp;#8230; Advinha? Objetos de uma classe da ES6.&lt;/p&gt;

&lt;h3 id=&#34;tá-mas-pra-quê-1&#34;&gt;Tá, mas pra quê?&lt;/h3&gt;

&lt;p&gt;Bem, hoje em dia temos muitas ferramentas no mercado que utilizam dados em JSON o tempo todo para o front-end. O AngularJS, o backbone.js, e vários outros, são frameworks que utilizam de dados JSON parar gerar views.&lt;/p&gt;

&lt;h2 id=&#34;estrutura-dos-arquivos-1&#34;&gt; Estrutura dos arquivos&lt;/h2&gt;

&lt;p&gt;Os arquivos do projeto seguem a seguinte estrutura:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;    -/css&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;        bootstrap.min.css&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;    -/img&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;        01.jpg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;        02.jpg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;        03.jpg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;    -/js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;        script.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Como você já deve ter percebido, na pasta css temos o bootstrap, na pasta img, temos algumas imagens, temos também o arquivo index.html na raiz do projeto, e por fim, na pasta js temos o arquivo script.js, que é onde acontece a mágica.&lt;/p&gt;

&lt;p&gt;No final do artigo deixarei um link com o repositório deste projeto no github.&lt;/p&gt;

&lt;h2 id=&#34;finalmente-mãos-à-obra-1&#34;&gt;Finalmente, mãos à obra 🙂&lt;/h2&gt;

&lt;p&gt;Vamos começar pelo arquivo index.html, que tem uma estrutura bem simples, veja:&lt;/p&gt;

&lt;pre&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
&amp;lt;title&amp;gt;Teste com ECMAScript 6 classes&amp;lt;/title&amp;gt;
&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;css/bootstrap.min.css&#34;&amp;gt;
&amp;lt;style type=&#34;text/css&#34;&amp;gt;
    .old-price{
        text-decoration: line-through;
    }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div class=&#34;container&#34;&amp;gt;
        &amp;lt;div class=&#34;row&#34; id=&#34;lista&#34;&amp;gt;
 
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;script type=&#34;text/javascript&#34; src=&#34;js/script.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Bem simples não?&lt;/p&gt;

&lt;p&gt;Vamos usar uma estrutura bem básica, pois a nossa mini loja só vai mostrar alguns produtos e pronto. Como eu já disse, o objetivo é usar a ES6.&lt;/p&gt;

&lt;p&gt;No final teremos o seguinte resultado:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-46212&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/zoa.jpg&#34; alt=&#34;zoa&#34; width=&#34;1177&#34; height=&#34;576&#34; srcset=&#34;uploads/2014/12/zoa.jpg 1177w, uploads/2014/12/zoa-265x129.jpg 265w, uploads/2014/12/zoa-400x195.jpg 400w&#34; sizes=&#34;(max-width: 1177px) 100vw, 1177px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Bem, vamos estudar um pouco o HTML acima.&lt;/p&gt;

&lt;p&gt;Nas linhas 6 a 10, apenas criamos um css para &amp;#8220;riscar&amp;#8221; o preço antigo no caso de promoção usando a classe &lt;strong&gt;.old-price&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Na linha 13 criamos o container e na linha 14 uma div com o atributo id setado como &amp;#8220;lista&amp;#8221;, é nesta div onde carregaremos os produtos.&lt;/p&gt;

&lt;h3 id=&#34;preparado-vamos-ao-javascript-1&#34;&gt;Preparado? Vamos ao JavaScript.&lt;/h3&gt;

&lt;p&gt;O JavaScript será estudado mais a fundo, então não vou simplesmente colar o código e explicar as linhas como fiz com o HTML, vou fazer um passo à passo e no final mostro o resultado do arquivo.&lt;/p&gt;

&lt;h4 id=&#34;qual-o-primeiro-passo-1&#34;&gt;Qual o primeiro passo?&lt;/h4&gt;

&lt;p&gt;Habilitar a ES6 no seu navegador, é claro!&lt;/p&gt;

&lt;p&gt;Como a ES6 ainda não está funcionando totalmente nos navegadores e ainda não foi adotada como padrão, ela está por padrão desabilitada.&lt;/p&gt;

&lt;p&gt;Neste exemplo utilizei o Google Chrome Canary, indico que você o utilize também, mas nada contra o firefox.&lt;/p&gt;

&lt;p&gt;Para habilitar a ES6 no Chrome Canary, basta você abrir uma nova aba e acessar a url: &lt;strong&gt;chrome://flags&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Após acessar esta url, você vai procurar algo parecido com a imagem abaixo, basta apenas habilitar e pronto:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-46218&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/zoa21.jpg&#34; alt=&#34;zoa2&#34; width=&#34;830&#34; height=&#34;316&#34; srcset=&#34;uploads/2014/12/zoa21.jpg 830w, uploads/2014/12/zoa21-265x100.jpg 265w, uploads/2014/12/zoa21-400x152.jpg 400w&#34; sizes=&#34;(max-width: 830px) 100vw, 830px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Feito isso, podemos começar :).&lt;/p&gt;

&lt;p&gt;O primeiro passo, é habilitar o strict mode do JavaScript, pois objetos não podem ser utilizados sem o modo strict. Você pode ver mais sobre o strict mode]&lt;a href=&#34;http://tableless.com.br/javascript-strict-mode/&#34; title=&#34;JavaScript Strict Mode&#34;&gt;2&lt;/a&gt; do Fabiano de Lima Abreu.&lt;/p&gt;

&lt;p&gt;Para fazer isto é simples, vamos inserir na primeira linha do arquivo o seguinte:&lt;/p&gt;

&lt;pre&gt;&#34;use strict&#34;;&lt;/pre&gt;

&lt;p&gt;Simples, não?&lt;/p&gt;

&lt;p&gt;Agora vamos criar a nossa classe Produto e seu método construtor, veja abaixo:&lt;/p&gt;

&lt;pre&gt;class Produto{
    constructor(codigo,nome,imagem,promocao,preco,desconto){
        this.codigo = codigo;
        this.nome = nome;
        this.imagem = imagem;
        this.promocao = promocao;
        this.preco = preco;
        this.desconto = desconto;
    }
}&lt;/pre&gt;

&lt;p&gt;Não precisa ser um gênio para entender esta parte, e se você chegou a ler o artigo que deixei no início deste, já estará familiarizado com o assunto.&lt;/p&gt;

&lt;p&gt;Criamos uma classe com seu método construtor, que possui os atributos, código, nome, imagem, promocao, preco e desconto.&lt;/p&gt;

&lt;p&gt;Bacana, e agora?&lt;/p&gt;

&lt;p&gt;Vamos criar um método para listagem de produtos, que receberá uma variável em JSON e organizará os produto no HTML.&lt;/p&gt;

&lt;p&gt;Criaremos o método lista, que receberá como parâmetro uma variável contendo o JSON:&lt;/p&gt;

&lt;pre&gt;lista(products){
}
&lt;/pre&gt;

&lt;p&gt;Em seguida criaremos uma variável lista pegando a div onde a lista será inserida pelo id:&lt;/p&gt;

&lt;pre&gt;lista(products){
    var lista = document.getElementById(&#34;lista&#34;);
}&lt;/pre&gt;

&lt;p&gt;Agora, vamos criar um laço de repetição que percorrerá nossa lista em JSON e criará seus elementos:&lt;/p&gt;

&lt;pre&gt;lista(products){
    var lista = document.getElementById(&#34;lista&#34;);
    for(var i=0; i &amp;lt; products.length; i++){
        //conteúdo do loop
    }
}&lt;/pre&gt;

&lt;p&gt;Dentro deste laço, criaremos e preencheremos os elementos HTML de cada produto, utilizaremos os thumbnails do bootstrap, como você pôde ver na foto com o resultado final.&lt;/p&gt;

&lt;p&gt;A estrutura básica será a seguinte:&lt;/p&gt;

&lt;pre&gt;&amp;lt;div class=&#34;col-xs-12 col-sm-6 col-md-4 col-lg-4&#34;&amp;gt;
    &amp;lt;div class=&#34;thumbnail&#34;&amp;gt;
        &amp;lt;h1 class=&#34;text-center&#34;&amp;gt;Sapatênis Puma Preto&amp;lt;/h1&amp;gt;
        &amp;lt;img src=&#34;img/01.jpg&#34;&amp;gt;
        &amp;lt;small class=&#34;old-price&#34;&amp;gt;R$ 250&amp;lt;/small&amp;gt;
        &amp;lt;p class=&#34;price&#34;&amp;gt;R$ 200&amp;lt;/p&amp;gt;
        &amp;lt;a class=&#34;btn btn-primary&#34;&amp;gt;Comprar&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;Para cada produto lido através do JSON, teremos esta estrutura para exibi-lo.&lt;/p&gt;

&lt;p&gt;Primeiramente vamos instanciar a classe produto a cada repetição deste laço, utilizando o método construtor para atribuir às suas propriedades:&lt;/p&gt;

&lt;pre&gt;let produto = new Produto(products[i].codigo,products[i].nome,products[i].imagem,products[i].promocao,products[i].preco,products[i].desconto);&lt;/pre&gt;

&lt;p&gt;Quando criamos um objeto à partir de uma classe, é necessário a utilização da palavra reservada &lt;strong&gt;let&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Em seguida, vamos criar os elementos HTML dos produtos, começando pelas variáveis:&lt;/p&gt;

&lt;pre&gt;var column, thumbnail, title, image, old_price, price, btn;&lt;/pre&gt;

&lt;p&gt;Em seguida, atribuímos o HTML nessas variáveis:&lt;/p&gt;

&lt;pre&gt;column = document.createElement(&#34;div&#34;);
thumbnail = document.createElement(&#34;div&#34;);
title = document.createElement(&#34;h1&#34;);
image = document.createElement(&#34;img&#34;);
old_price = document.createElement(&#34;small&#34;);
price = document.createElement(&#34;p&#34;);
btn = document.createElement(&#34;a&#34;);&lt;/pre&gt;

&lt;p&gt;Em seguida, vamos adicionar as classes aos elementos para receberem a formatação do bootstrap:&lt;/p&gt;

&lt;pre&gt;column.classList.add(&#34;col-xs-12&#34;);
column.classList.add(&#34;col-sm-6&#34;);
column.classList.add(&#34;col-md-4&#34;);
column.classList.add(&#34;col-lg-4&#34;);

thumbnail.classList.add(&#34;thumbnail&#34;);

title.classList.add(&#34;text-center&#34;);

old_price.classList.add(&#34;old-price&#34;);

price.classList.add(&#34;price&#34;);

btn.classList.add(&#34;btn&#34;);
btn.classList.add(&#34;btn-primary&#34;);
btn.innerHTML = &#34;Comprar&#34;;&lt;/pre&gt;

&lt;p&gt;Para adiantar, já colocamos o innerHTML do botão com o texto &amp;#8220;Comprar&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Agora o que temos que fazer é inserir nos elementos os seus valores:&lt;/p&gt;

&lt;pre&gt;title.innerHTML = produto.nome;

image.setAttribute(&#34;src&#34;,produto.imagem);&lt;/pre&gt;

&lt;p&gt;Eu coloquei por enquanto, apenas o nome do produto, e sua imagem. Pois precisamos pensar na promoção.&lt;/p&gt;

&lt;p&gt;O atributo promocao, é um valor booleano, que nos mostrará se o produto vai ou não ter desconto.&lt;/p&gt;

&lt;p&gt;Caso promocao seja verdadeiro, colocaremos o preço normal do produto com a classe &lt;strong&gt;.old-price&lt;/strong&gt; que criamos lá em cima para que ele fique &amp;#8220;riscado&amp;#8221;, e o preço real será um cálculo do valor do produto subtraído do desconto. Caso ocorra o contrário, o elemento &lt;strong&gt;old_price&lt;/strong&gt; receberá um &lt;strong&gt;display:none&lt;/strong&gt; e o preço não sofrerá alteração:&lt;/p&gt;

&lt;pre&gt;if(produto.promocao == true){
    old_price.innerHTML = &#34;R$ &#34;+ produto.preco;
    price.innerHTML = &#34;R$ &#34;+ (produto.preco - produto.desconto);
}else{
    old_price.setAttribute(&#34;display&#34;,&#34;none&#34;);
    price.innerHTML = &#34;R$ &#34;+ produto.preco;
 }&lt;/pre&gt;

&lt;p&gt;E por fim, para finalizarmos o nosso laço de repetição, iremos dar um &lt;strong&gt;appendChild()&lt;/strong&gt; onde for necessário, criando a hierarquia do HTML:&lt;/p&gt;

&lt;pre&gt;thumbnail.appendChild(title);
thumbnail.appendChild(image);
thumbnail.appendChild(old_price);
thumbnail.appendChild(price);
thumbnail.appendChild(btn);

column.appendChild(thumbnail);

lista.appendChild(column);&lt;/pre&gt;

&lt;p&gt;Não vou postar o código final do nosso método, pois o artigo já está bem grande. Basta dar uma olhadinha no repositório no final do artigo e você verá a estrutura completa.&lt;/p&gt;

&lt;h3 id=&#34;beleza-mas-e-agora&#34;&gt;Beleza, mas e agora?&lt;/h3&gt;

&lt;p&gt;Bom, criei uma variável após o final de nossa classe Produto, com os dados em formato JSON para testarmos os produtos. Em um sistema real, estes dados viriam de fontes externas.&lt;/p&gt;

&lt;p&gt;Abaixo o código:&lt;/p&gt;

&lt;pre&gt;var products = [
 {
 codigo: 1,
 nome: &#34;Sapatênis Puma Preto&#34;,
 imagem: &#34;img/01.jpg&#34;,
 promocao: true,
 preco: 250.00,
 desconto: 50.00
 },
 {
 codigo: 2,
 nome: &#34;Sapatênis Preto Linha Vermelha&#34;,
 imagem: &#34;img/02.jpg&#34;,
 promocao: false,
 preco: 250.00,
 desconto: null
 },
 {
 codigo: 3,
 nome: &#34;Sapatênis Bege c/ Branco&#34;,
 imagem: &#34;img/03.jpg&#34;,
 promocao: false,
 preco: 250.00,
 desconto: null
 },
]&lt;/pre&gt;

&lt;p&gt;Por fim, basta apenas instanciar a classe Produto e chamarmos o método lista, passando como parâmetro nossa variável contendo os dados em JSON:&lt;/p&gt;

&lt;pre&gt;let produto = new Produto();
produto.lista(products);&lt;/pre&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Bom galera, o artigo ficou um pouco longo, pois tentei ser o mais específico possível.&lt;/p&gt;

&lt;p&gt;Este foi só um exemplo do que podemos fazer com as novas features da ECMAScript 6 e as mudanças (pra melhor) que ela nos proporciona.&lt;/p&gt;

&lt;p&gt;Aguardamos ansiosamente que ela comece à ser suportada pelos browsers por completo, pois além de tanta coisa que se pode fazer com ela, o Angular 2.0 está sendo escrito nela também.&lt;/p&gt;

&lt;p&gt;Pra quem quiser dar um olhada no repositório com o código deste artigo basta seguir este &lt;a href=&#34;https://github.com/lnlwd/ECMAScript6-loja&#34; title=&#34;Repositório&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Por hoje é só 🙂 até mais galera!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tableless Weekly #5</title>
      <link>https://tableless.github.io/hugo-public/tableless-weekly-5/</link>
      <pubDate>Thu, 09 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/tableless-weekly-5/</guid>
      <description>

&lt;p&gt;Mais um artigo da série Tableless Weekly. Quero me desculpar por ter ficado algumas semanas sem escrever, mas creio que isto não se repetirá e estarei aqui com vocês todas as semanas. 🙂&lt;/p&gt;

&lt;p&gt;Antes de ir aos links e tudo mais, quero discutir um assunto com vocês. No último artigo, falei sobre a nova especificação ECMAScript 6, que foi adotada parcialmente em alguns navegadores.&lt;/p&gt;

&lt;p&gt;Uma das partes que ainda não foi adotada, é a nova especificação de orientação a objetos que a ES6 traz consigo. Vou dar alguns exemplos aqui e falar um pouco sobre este novo modelo de OO para que possamos discutir sobre o assunto. Não deixem de comentar 🙂&lt;/p&gt;

&lt;p&gt;Uma das coisas mais interessantes, foi a questão das classes, que deixarão de ser &amp;#8220;funções&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Para quem se recorda, no modelo antigo, faríamos algo mais ou menos assim:&lt;/p&gt;

&lt;pre&gt;function Car(){
    //e aqui iriam os métodos e atributos desta classe.
}
&lt;/pre&gt;

&lt;p&gt;No novo modelo de OO será escrito da seguinte forma:&lt;/p&gt;

&lt;pre&gt;class Car{
    //e aqui iriam os métodos e atributos desta classe.
}
&lt;/pre&gt;

&lt;p&gt;Outro aspecto interessante que foi a adoção de métodos construtores para a classe, o que torna nosso código padronizado e mais bem estruturado. Os construtores da ES6, são bem similares aos métodos construtores do PHP. No PHP usamos construtores através da palavra reservada &lt;strong&gt;__constructor()&lt;/strong&gt;, e na ES6 usaremos a palavra reservada apenas como &lt;strong&gt;constructor()&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Vamos recordar mais uma vez o modelo antigo e o novo modelo. Utilizaremos a mesma classe acima.&lt;/p&gt;

&lt;pre&gt;function Car(marca, modelo){
    this.marca = marca; //atribuímos o valor da variável passada ao instanciar a classe à uma de suas propriedades
    this.modelo = modelo; //atribuímos o valor da variável passada ao instanciar a classe à uma de suas propriedades
}
//Instanciamos a classe
var car = new Car(&#39;Ford&#39;,&#39;Mustang GT&#39;);
console.log(&#39;Seu carro é um &#39;+car.marca+&#39; modelo: &#39;+car.modelo);
&lt;/pre&gt;

&lt;p&gt;No novo modelo:&lt;/p&gt;

&lt;pre&gt;class Car{
    constructor(marca, modelo){//Criamos o método construtor para atribuir variáveis para as propriedades
        this.marca = marca;
        this.modelo = modelo;
    }
}
let car = new Car(&#39;Chevrolet&#39;,&#39;Camaro SS&#39;);
console.log(&#39;Seu carro é um &#39;+car.marca+&#39; modelo: &#39;+car.modelo);&lt;/pre&gt;

&lt;p&gt;Mais um ponto que merece destaque é a construção de métodos de uma classe. Se tornou mais simples e objetiva. Continuando a mesma classe acima:&lt;/p&gt;

&lt;pre&gt;function Car(marca, modelo){
    this.marca = marca;
    this.modelo = modelo;

    //Criamos um método para escrever a marca e o modelo do carro
    this.mostraInfo = function(){
        console.log(&#39;Seu carro é um &#39;+this.marca+&#39; modelo: &#39;+this.modelo);
    }
}
var car = new Car(&#39;Ford&#39;,&#39;Mustang GT&#39;);
car.mostraInfo();&lt;/pre&gt;

&lt;p&gt;No novo Padrão seria:&lt;/p&gt;

&lt;pre&gt;class Car{
    constructor(marca, modelo){
        this.marca = marca;
        this.modelo = modelo;
    }
    // Podemos notar como é mais simples cria o método
    mostraInfo(){
        console.log(&#39;Seu carro é um &#39;+this.marca+&#39; modelo: &#39;+this.modelo);
    }
}
let car = new Car(&#39;Chevrolet&#39;,&#39;Camaro SS&#39;);
car.mostraInfo();&lt;/pre&gt;

&lt;p&gt;Com apenas essas pequenas mudanças já podemos ter uma OO bem mais simples de entender que o modelo OO tradicional do JavaScript. Mas, e se eu disser que ainda tem mais?&lt;/p&gt;

&lt;p&gt;No novo modelo de OO da ES6, podemos estender classes, assim como fazemos nas demais linguagens orientadas à objetos.&lt;/p&gt;

&lt;p&gt;Imagine que tivéssemos propriedades no Camaro SS, que não são comuns ao Mustang GT. Poderíamos criar uma classe para cada um que tivesse suas propriedades e métodos próprios:&lt;/p&gt;

&lt;pre&gt;class Car{
    constructor(marca, modelo){
        this.marca = marca;
        this.modelo = modelo;
    }
}
class MustangGT extends Car{
    constructor(marca, modelo, historia){
        super.constructor(marca,modelo); //Utilizamos a palavra reservada super para chamar um método da classe pai
        this.historia = historia;
    }
}
class Camaro extends Car{
    constructor(marca, modelo, musica){
        super.constructor(marca,modelo);
        this.musica = musica;
    }
}&lt;/pre&gt;

&lt;p&gt;Veja que estendemos as classes para herdarmos as propriedades &lt;strong&gt;marca&lt;/strong&gt; e &lt;strong&gt;modelo&lt;/strong&gt; da classe pai para as classes filhas, e então criamos as propriedades distintas em cada uma das classes, como a propriedade música, que pertence somente ao Camaro, e a propriedade história, que pertence somente ao Mustang.&lt;/p&gt;

&lt;p&gt;Bom, espero que tenham gostado da nova especificação de OO da ES6. Como todas as mudanças, tem seus prós e contras e quero que deixem suas opiniões à respeito nos comentários.&lt;/p&gt;

&lt;h2 id=&#34;sites-legais&#34;&gt;Sites Legais&lt;/h2&gt;

&lt;p&gt;Vamos aos sites legais desta edição.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.thebuildingofmemories.com/&#34;&gt;The Building of  Memories&lt;/a&gt; &amp;#8211; Site feito pela Coca-Cola, para mostrar sua presença em alguns momentos marcantes na história. Achei bem legal o design flat e as animações do site.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://demicreative.com/&#34;&gt;DemiCreative&lt;/a&gt; &amp;#8211; Site de uma agência de design e criação, muito interessante também.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.burnkit.com/&#34;&gt;Burnkit&lt;/a&gt; &amp;#8211; Outra agência de design bem bacana.&lt;/p&gt;

&lt;h2 id=&#34;links-úteis&#34;&gt;Links Úteis&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.raphaelfabeni.com.br/flags-css3/&#34;&gt;CSS3 Flags&lt;/a&gt; &amp;#8211; Uma página feita pelo nosso amigo Raphael Fabeni, onde ele criou bandeiras de diversos países utilizando apenas CSS3. O mais bacana é que se você analisar o código, poderá aprender bastante as aplicações do CSS Animation.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Não quis ser muito extenso com os links neste artigo devido ao texto inicial ser bem grande, para não ficar cansativo.&lt;/p&gt;

&lt;p&gt;Espero que tenham gostado e estarei de volta na próxima semana com mais um Tableless Weekly. Até a próxima.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tableless Weekly #4</title>
      <link>https://tableless.github.io/hugo-public/tableless-weekly-4/</link>
      <pubDate>Wed, 10 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/tableless-weekly-4/</guid>
      <description>

&lt;p&gt;No artigo de hoje da série Tableless Weekly teremos algumas novidades bem legais. Então vamos à elas:&lt;/p&gt;

&lt;h2 id=&#34;novidades&#34;&gt;Novidades&lt;/h2&gt;

&lt;p&gt;Bom, já foi falado aqui no tableless sobre o elemento picture do HTML, você pode encontrar &lt;a href=&#34;http://tableless.com.br/o-futuro-chegou-o-elemento-picture/&#34;&gt;aqui neste artigo.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A novidade é que este elemento já está disponível a partir da versão 38 do Chrome. Com este elemento poderemos fazer sites responsivos mais leves, determinando em qual tamanho de tela, qual imagem será exibida.&lt;/p&gt;

&lt;p&gt;Outra novidade interessante é que nesta mesma versão do Chrome e na versão recém lançada do firefox, foi incluida a nova especificação do JavaScript. A ECMAScript 6. Toda a documentação pode ser encontrada &lt;a href=&#34;http://people.mozilla.org/~jorendorff/es6-draft.html&#34;&gt;aqui neste &amp;#8220;rascunho&amp;#8221;.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;links-úteis&#34;&gt;Links úteis&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/skatejs/skatejs&#34;&gt;Skate JS&lt;/a&gt; &amp;#8211; Um framework javascript que promete a criação simples e rápida de Web Components. O framework leva o lema de ser focado na velocidade e no tamanho reduzido.&lt;/p&gt;

&lt;p&gt;Já foi falado sobre os Web Components aqui no Tableless, dê uma olhadinha &lt;a href=&#34;http://tableless.com.br/web-components-introducao/&#34;&gt;aqui.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;sites-legais&#34;&gt;Sites legais&lt;/h2&gt;

&lt;p&gt;Esta semana encontramos alguns sites bem legais para mostrar pra vocês, então sem mais demora:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.google.com/photos/about/&#34;&gt;Google Photos&lt;/a&gt; &amp;#8211; A danada da Google sempre inventando novos apps. Este é bem interessante, vale à pena dar uma olhada.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.realheroines.com/&#34;&gt;Real Heroines&lt;/a&gt; &amp;#8211; Um site bacana que fizeram para homenagear as mulheres que mais marcaram a história. As &amp;#8220;Heroínas Reais&amp;#8221;. Sinceramente achei muito legal a iniciativa de homnageá-las e curti bastante o design do site.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wikiwand.com/&#34;&gt;Wikiwand&lt;/a&gt; &amp;#8211; Lembra do Wikipedia? Espera, acho que você deve acessar até hoje né? Estes caras aí fizeram um app que &amp;#8220;reinventou o Wikipédia&amp;#8221;. Fizeram um design bem interessante, sem perder o foco principal do Wikipédia, que é o conteúdo.&lt;/p&gt;

&lt;h2 id=&#34;apps-e-ferramentas&#34;&gt;Apps e Ferramentas&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://mixture.io/&#34;&gt;Mixture&lt;/a&gt; &amp;#8211; Conjunto de ferramentas para desenvolvimento front-end mais ágil. Ele trata de vários processos, como automatização e pré-processamento.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.cssanalyser.com/&#34;&gt;CSS Analyzer&lt;/a&gt; &amp;#8211; Não é necessário falar o que ele faz né? Mas pra quem não entendeu, esta ferramente analisa seu CSS e te da alguns dados, facilitando a otimização de performance no seu CSS&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mynameismatthieu.com/WOW/index.html&#34;&gt;WOW Animations Reveal&lt;/a&gt; &amp;#8211; &lt;em&gt;Sugerido por Thiago&lt;/em&gt; &amp;#8211; Plugin para exibir CSS Animations no Scroll da Página.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://fontastic.me/&#34;&gt;Fontastic&lt;/a&gt; &amp;#8211; App realmente fantástico para criação de ícones em fonte. Ele te dá vários recursos para personalizar os ícones como você bem entender. Por exemplo, escolher qual caractere que representará aquele ícone. Você ainda pode fazer o upload de seus próprios ícones.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Finalizamos assim mais um Tableless Weekly.&lt;/p&gt;

&lt;p&gt;Quero agradecer mais uma vez ao feedback positivo que temos recebido, e agradecer ao Thiago pelo link sugerido.&lt;/p&gt;

&lt;p&gt;E você? Tem algum link para nos indicar? Não se acanhe, envie-nos &lt;a href=&#34;https://lenilson.typeform.com/to/ILh66e&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Perdeu algum artigo da série? Olha eles aqui:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/tableless-weekly-3/&#34;&gt;Tableless Weekly #3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/tableless-weekly-2/&#34;&gt;Tableless Weekly #2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/tableless-weekly-1/&#34;&gt;Tableless Weekly #1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Um forte abraço e até a próxima semana.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tableless Weekly #3</title>
      <link>https://tableless.github.io/hugo-public/tableless-weekly-3/</link>
      <pubDate>Tue, 02 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/tableless-weekly-3/</guid>
      <description>

&lt;p&gt;Mais um artigo da série Tableless Weekly. Seleção semanal de links, ferramentas e novidades front end.&lt;/p&gt;

&lt;h2 id=&#34;tableless-conf-2014&#34;&gt;Tableless Conf 2014&lt;/h2&gt;

&lt;p&gt;O Tableless faz um evento anual trazendo os melhores palestrantes brasileiros sobre desenvolvimento para falarem sobre assuntos atuais que estão sendo pauta lá fora. Esse ano o evento vai rolar no dia 23 de Outubro e é só para 150 pessoas. Na verdade, nesse exato momento, só tem 99 vagas.&lt;/p&gt;

&lt;p&gt;Verifique &lt;a href=&#34;http://tableless.com.br/tablelessconf/&#34;&gt;mais detalhes no site do evento&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;braziljs-conf&#34;&gt;BrazilJS Conf&lt;/h2&gt;

&lt;p&gt;No último artigo, falei um pouco sobre a BrazilJS que estava rolando. Infelizmente não pude estar lá, mas o &lt;a href=&#34;https://twitter.com/diegoeis&#34;&gt;@diegoeis&lt;/a&gt; e o &lt;a href=&#34;https://twitter.com/jcemer&#34;&gt;@jcemer&lt;/a&gt; estavam e é claro, não nos deixaram desinformados do que ocorreu neste evento.&lt;/p&gt;

&lt;p&gt;Aqui no Tableless já rolou um artigo falando um pouco de como foi o evento e com links para algumas anotações. Você encontra &lt;a href=&#34;http://tableless.com.br/braziljs-2014/&#34; title=&#34;BrazilJS 2014&#34;&gt;neste artigo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Se você der uma passadinha no &lt;a href=&#34;http://jcemer.com/&#34; title=&#34;Jean Carlo Emer&#34;&gt;site&lt;/a&gt; do &lt;a href=&#34;https://twitter.com/jcemer&#34;&gt;@jcemer&lt;/a&gt;, vai ver que ele fez um live posting de tudo que estava rolando por lá. &lt;a href=&#34;http://jcemer.com/brazil-js-2014-primeiro-dia.html&#34; title=&#34;Primeiro dia&#34;&gt;Neste artigo aqui&lt;/a&gt; e &lt;a href=&#34;http://jcemer.com/brazil-js-2014-segundo-dia.html&#34; title=&#34;Segundo dia&#34;&gt;neste aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;table-sort&#34;&gt;Table Sort&lt;/h2&gt;

&lt;p&gt;O HTML5 tem sempre nos proporcionado novas features para nos ajudar na escrita de código, sendo semanticamente ou visualmente.&lt;/p&gt;

&lt;p&gt;O Table Sort, como o nome ja diz, organizará dados em tabela de forma mais dinâmica e usando somente o HTML para tal. No Script Baby&amp;#8230;&lt;/p&gt;

&lt;p&gt;Apesar de ainda não estar disponível nos navegadores, vale a pena dar uma olhada na documentação no site da WHATWG, onde eles explicam com todos os detalhes o conceito por trás deste tipo de tabela. Você pode encontrar neste &lt;a href=&#34;http://www.whatwg.org/specs/web-apps/current-work/multipage/tables.html#table-sorting-model&#34; title=&#34;Table Sort&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Um exemplo básico de código seria:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;table sortable&amp;gt;
 &amp;lt;thead&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt; Game &amp;lt;th&amp;gt; Corporations &amp;lt;th&amp;gt; Map Size
 &amp;lt;tbody&amp;gt;
  &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; 1830 &amp;lt;td&amp;gt; &amp;lt;data value=&#34;8&#34;&amp;gt;Eight&amp;lt;/data&amp;gt; &amp;lt;td&amp;gt; &amp;lt;data value=&#34;93&#34;&amp;gt;19+74 hexes (93 total)&amp;lt;/data&amp;gt;
  &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; 1856 &amp;lt;td&amp;gt; &amp;lt;data value=&#34;11&#34;&amp;gt;Eleven&amp;lt;/data&amp;gt; &amp;lt;td&amp;gt; &amp;lt;data value=&#34;99&#34;&amp;gt;12+87 hexes (99 total)&amp;lt;/data&amp;gt;
  &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; 1870 &amp;lt;td&amp;gt; &amp;lt;data value=&#34;10&#34;&amp;gt;Ten&amp;lt;/data&amp;gt; &amp;lt;td&amp;gt; &amp;lt;data value=&#34;149&#34;&amp;gt;4+145 hexes (149 total)&amp;lt;/data&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/pre&gt;

&lt;p&gt;O elemento data inserido na tabela, será o elemento chave para organização da mesma.&lt;/p&gt;

&lt;h2 id=&#34;sites-legais&#34;&gt;Sites Legais&lt;/h2&gt;

&lt;p&gt;Sempre queremos mostrar alguns links de sites bacanas que vemos por aí. Vamos a eles:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.gonzaloperez.ws/&#34; title=&#34;Gonzalo Perez&#34;&gt;Gonzalo Perez&lt;/a&gt; &amp;#8211; Novo portfólio do UI Designer Gonzalo Perez. É interessante como ele dispõe os projetos direto no slider da primeira página do site.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amplifon.co.uk/sounds-of-street-view/index.html&#34; title=&#34;Sounds of Street View&#34;&gt;Sounds of Street View &lt;/a&gt; &amp;#8211; Quem nunca usou o Street View do Google? (Se você ainda não usou desista da profissão, vai por mim.) Já imaginou um Street View no seu smartphone que pudesse te mostrar não somente imagens, mas também sons? Esta é a ideia destes caras aí. Um Street View onde podemos compartilhar sons e músicas para que outras pessoas possam ouvir em seus smartphones. Já da pra imaginar o tanto de história que se pode contar com isso.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blogs.adobe.com/webplatform/2014/08/21/coming-soon-css-feature-queries&#34; title=&#34;CSS Feature Queries&#34;&gt;CSS Feature Queries&lt;/a&gt; &amp;#8211; Feature queries no CSS. Como as media queries do CSS servem para identificar o tipo de mídia que a aplicação está rodando, as Feature Queries servem para identificar se o browser utilizado suporta ou não determinada feature.&lt;/p&gt;

&lt;h2 id=&#34;apps-e-ferramentas&#34;&gt;Apps e Ferramentas&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://alloyui.com/&#34; title=&#34;Alloyui&#34;&gt;Alloyui&lt;/a&gt; &amp;#8211; Um framework de User Interface com muitos recursos desenvolvido pela equipe da Liferay, com participação do Zeno Rocha.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/&#34; title=&#34;Bitbucket&#34;&gt;Bitbucket&lt;/a&gt; &amp;#8211; Para quem ainda não conhece, o Bitbucket é um repositório como o GitHub, porém você não paga por repositórios privados, mas limitam a quantidade de usuários nos projetos. Mesmo assim, é uma ótima alternativa ao GitHub.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Bom galera, este foi o nosso terceiro artigo da série. Quero agradecer a todos pelo feedback positivo que temos recebido.&lt;/p&gt;

&lt;p&gt;Quero pedir a ajuda de vocês nos enviando &lt;a href=&#34;https://lenilson.typeform.com/to/ILh66e&#34; title=&#34;Links&#34;&gt;links aqui&lt;/a&gt;. Pretendemos dar continuidade a série e contamos com a ajuda de cada um de vocês.&lt;/p&gt;

&lt;p&gt;Semana que vem estaremos de volta.&lt;/p&gt;

&lt;p&gt;Veja os outros Weekly aqui:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/tableless-weekly-1/&#34; title=&#34;Tableless Weekly 1&#34;&gt;Tableless Weekly 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/tableless-weekly-2/&#34; title=&#34;Tableless Weekly 2&#34;&gt;Tableless Weekly 2&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tableless Weekly #2</title>
      <link>https://tableless.github.io/hugo-public/tableless-weekly-2/</link>
      <pubDate>Fri, 22 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/tableless-weekly-2/</guid>
      <description>

&lt;p&gt;O segundo artigo da série Tableless Weekly vem esta semana com um pouco mais de links e como prometido, disponibilizaremos um link para que vocês possam nos enviar links de ferramentas, sites legais e artigos relacionados ao mercado front end.&lt;/p&gt;

&lt;p&gt;Sem mais demora vamos lá.&lt;/p&gt;

&lt;h2 id=&#34;braziljs-conf&#34;&gt;BrazilJS Conf&lt;/h2&gt;

&lt;p&gt;Esta semana está rolando o &lt;a href=&#34;http://braziljs.com.br&#34;&gt;BrazilJS Conf&lt;/a&gt; (dia 21 e 22) em Porto Alegre &amp;#8211; RS.&lt;/p&gt;

&lt;p&gt;A conferência conta com vários palestrantes nacionais e internacionais de várias empresas e projetos como: Google, Mozilla, jQueryUI, GoDaddy, Liferay e Microsoft.&lt;/p&gt;

&lt;p&gt;Dentre os nomes estão: Jean Carlo Emer, Rob Dodson, Renato Mangini, Jörn Zaefferer, e vários outros.&lt;/p&gt;

&lt;p&gt;Para saber mais &lt;a href=&#34;http://braziljs.com.br/2014/&#34; title=&#34;BrazilJS Conf&#34;&gt;acesse o site oficial.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;links-úteis&#34;&gt;Links úteis&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.keithclark.co.uk/pure-css-parallax-websites/&#34; title=&#34;Pure Css parallax scrolling&#34;&gt;Pure CSS Parallax Scrolling&lt;/a&gt; &amp;#8211; Artigo em inglês.&lt;/p&gt;

&lt;p&gt;Este artigo ensina como fazer um parallax scrolling utilizando apenas CSS, nada de JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.raphaelfabeni.com.br/nascimento-meetup-css/&#34; title=&#34;Meetup CSS SP&#34;&gt;Meetup CSS SP&lt;/a&gt; &amp;#8211; Artigo em português&lt;/p&gt;

&lt;p&gt;Neste artigo o Raphael Fabeni conta como foi o início do Meetup CSS de SP e a organização do primeiro evento.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://loopinfinito.com.br/2013/05/28/css-position-sticky/&#34; title=&#34;CSS Position Sticky&#34;&gt;CSS Position Sticky&lt;/a&gt; &amp;#8211; Artigo em português&lt;/p&gt;

&lt;p&gt;O Position Sticky do CSS3 já está funcionando em alguns browsers. Pra quem ainda não sabia desse efeito, ele faz com que o elemento utiliza ora position fixed, ora position relative, podendo assim fixar elementos no topo da página em alguns pontos específicos do scroll.&lt;/p&gt;

&lt;h2 id=&#34;ferramentas&#34;&gt;Ferramentas&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://fontello.com/&#34; title=&#34;Fontello&#34;&gt;Fontello&lt;/a&gt; &amp;#8211; Sugerido por Alan Cezar Araújo&lt;/p&gt;

&lt;p&gt;O Fontello é um gerador de ícones utilizando fontes, inclusive algumas do Font Awesome.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://phonegap.com/&#34; title=&#34;PhoneGap&#34;&gt;PhoneGap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O PhoneGap é um aplicativo que auxilia na criação de apps mobile utilizando HTML, CSS3, e JavaScript. Ele é capaz de compilar os apps para diversas plataformas como: Android, iOS, Windows Phone, entre outros.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mattkersley.com/responsive/&#34; title=&#34;Responsive Design Testing&#34;&gt;Responsive Design Testing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;App para testar Design Responsivo em diversas resoluções.&lt;/p&gt;

&lt;h2 id=&#34;sites-legais&#34;&gt;Sites Legais&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.v76.com/&#34; title=&#34;V76&#34;&gt;V76&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Site de venda de produtos de beleza masculinos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gardenestudio.com.br/&#34; title=&#34;Garden Estudio&#34;&gt;Garden Estudio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Site da Garden Estudio um estúdio reconhecido internacionalmente focado na criação de experiências digitais.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lookbook.reebok.com/fw/womens-training/look1&#34; title=&#34;Rebook Lookbook&#34;&gt;Rebook LookBook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LookBook bem bacana da Reebok&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Bem, este foi o nosso segundo artigo do Tableless Weekly, e quero finalizar agradecendo à todos pelo feedback positivo à iniciativa que tomamos de estar criando estes posts semanais.&lt;/p&gt;

&lt;p&gt;Espero que estejam gostando e peço a ajuda de todos enviando links &lt;a href=&#34;https://lenilson.typeform.com/to/ILh66e&#34; title=&#34;Envie seu link&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Os links podem ser artigos, tutoriais, alguns sites legais que vocês acharem interessantes e ferramentas que auxiliam no desenvolvimento front end. Até a próxima semana.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tableless Weekly #1</title>
      <link>https://tableless.github.io/hugo-public/tableless-weekly-1/</link>
      <pubDate>Tue, 12 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/tableless-weekly-1/</guid>
      <description>

&lt;p&gt;Estamos começando com o primeiro artigo da série Tableless Weekly. Série semanal que trará um pouco das novidades do mercado front-end, links úteis e alguns sites legais que encontrarmos por ai.&lt;/p&gt;

&lt;h3 id=&#34;html5&#34;&gt;HTML5&lt;/h3&gt;

&lt;p&gt;O Elemento Dialog já está disponivel para o chrome a partir da versão 37.&lt;/p&gt;

&lt;p&gt;Como o HTML5 sempre tem trazido consigo uma grande mudança nas tags, principalmente por questões semânticas, a tag Dialog já foi implementada a partir da versão 37 do Chrome e na versão 6 do Safari. Em breve estará disponível nos outros browsers.&lt;/p&gt;

&lt;p&gt;A funcionalidade da tag é bem básica: Representar semânticamente as caixas de diálogo que geralmente implementamos em sistemas e sites.&lt;/p&gt;

&lt;p&gt;Mas por que criar uma nova tag se podíamos fazer isso com uma div? A questão é semântica e não visual. Assim fica explícito para os robôs de busca e outros scripts, interpretarem o conteúdo de seu site e saber exatamente para que serve cada elemento, principalmente se tratando das caixas de diálogo que fazemos normalmente com divs, para destacá-las, para que eles entendam que aquilo não é somente uma div cheia de textos, mas sim uma caixa de alerta, de diálogo, que interfere na navegação do usuário.&lt;/p&gt;

&lt;p&gt;Que tal mostrar na prática? Então vamos lá&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-43803&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/08/dialog.png&#34; alt=&#34;dialog&#34; width=&#34;1844&#34; height=&#34;900&#34; srcset=&#34;uploads/2014/08/dialog.png 1844w, uploads/2014/08/dialog-265x129.png 265w, uploads/2014/08/dialog-400x195.png 400w&#34; sizes=&#34;(max-width: 1844px) 100vw, 1844px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Provavelmente você já deve ter visto muitas dessas por aí ou até feito alguma.&lt;/p&gt;

&lt;p&gt;Como eu disse acima, nada que não se possa fazer com uma div, mas observe agora o código e veja a estrutura semântica.&lt;/p&gt;

&lt;pre&gt;&amp;lt;dialog&amp;gt;
   &amp;lt;p&amp;gt;Esta é uma caixa de diálogo&amp;lt;/p&amp;gt;
   &amp;lt;button id=&#34;#close&#34;&amp;gt;Fechar&amp;lt;/button&amp;gt;
&amp;lt;/dialog&amp;gt;
&amp;lt;button id=&#34;#show&#34;&amp;gt;Mostrar Caixa de diálogo&amp;lt;/button&amp;gt;
&amp;lt;script&amp;gt;
 var dialog = document.querySelector(&#39;dialog&#39;);
 document.querySelector(&#39;#show&#39;).onclick = function() {
 dialog.show();
 };
 document.querySelector(&#39;#close&#39;).onclick = function() {
 dialog.close();
 };
&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Perceba que o código se tornou bem mais semântico e mais amigável concorda? Deixe sua opinião nos comentários&amp;#8230;&lt;/p&gt;

&lt;h2 id=&#34;links-úteis&#34;&gt;Links úteis&lt;/h2&gt;

&lt;p&gt;Estes são links interessantes pra você visitar nessa semana.&lt;/p&gt;

&lt;p&gt;Se você tem alguma sugestão, estaremos disponibilizando no próximo artigo um link para envio.&lt;/p&gt;

&lt;h3 id=&#34;ferramentas&#34;&gt;Ferramentas&lt;/h3&gt;

&lt;p&gt;Algumas das ferramentas úteis para front-end.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jsfiddle.net/&#34; target=&#34;_blank&#34;&gt;JSFiddle&lt;/a&gt; &amp;#8211; Talvez não seja uma novidade para ninguem, mas com o JSFiddle fica simples testar seu código HTML, CSS e JS, ou códigos prontos que você ahca por aí e não sabe se funciona 😉&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://fortawesome.github.io/Font-Awesome/&#34; target=&#34;_blank&#34;&gt;FontAwesome&lt;/a&gt; &amp;#8211; Também não deve ser novidade, mas com o FontAwesome, temos vários ícones disponíveis em formato de fonte.&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;BrowserDiet&#34; href=&#34;http://browserdiet.com/pt/&#34; target=&#34;_blank&#34;&gt;BrowserDiet&lt;/a&gt; &amp;#8211; Um site com definitivamente tudo(ou quase tudo) que você precisa saber sobre como perder peso no carregamento de sites.&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;BrowserFit&#34; href=&#34;http://browserfit.github.io/&#34; target=&#34;_blank&#34;&gt;BrowserFit&lt;/a&gt; &amp;#8211; Site que reúne vários conceitos para criar sites responsivos. Aborda conceitos como: mobile first, content first, media queries, entre outros.&lt;/p&gt;

&lt;h2 id=&#34;alguns-sites-legais&#34;&gt;Alguns sites legais&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://omnisense.net/&#34;&gt;Ominisense&lt;/a&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;&lt;br /&gt; &lt;/span&gt;Site da Ominisense. Simplesmente estou namorando esse site. Os efeitos são muito legais e se você assistir o vídeo no final, verá o quanto é incrível o trabalho que fizeram. O video completamente feito em HTML5, fala sobre os sentidos humanos e sobre escolhas, achei bem interessante e resolvi colocar aqui.&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Cantina Volpolicella Negrar&#34; href=&#34;http://www.cantinanegrar.it/&#34; target=&#34;_blank&#34;&gt;Cantina Valpolicella Negrar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Site de uma cantina de vinhos italiana. O Design é bem moderno, e o vídeo que fizeram ficou muito legal.&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Volkswagen SportCars&#34; href=&#34;http://volkswagen-sportscars.fr/&#34; target=&#34;_blank&#34;&gt;Volkswagen SportCars&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Site da Volkswagen para divulgar seus carros esportivos. A interface e navegação pelo site são muito intuitivos e agradáveis.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Bom galera, este foi nosso primeiro Tableless Weekly, esperamos que tenham gostado. Deixem seus comentários abaixo e compartilhem com seus amigos front-enders.&lt;/p&gt;

&lt;p&gt;Então até a próxima terça com mais conteúdo fresco pra vocês se deliciarem.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Usabilidade e a Utilidade dos Elementos</title>
      <link>https://tableless.github.io/hugo-public/usabilidade-e-utilidade-dos-elementos/</link>
      <pubDate>Wed, 02 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/usabilidade-e-utilidade-dos-elementos/</guid>
      <description>

&lt;p&gt;A Usabilidade está completamente ligada à utilidade e ao propósito de cada elemento ou objetos que criamos. Na verdade a própria palavra já nos traz logo em mente o método como algo é usado, e nos remete diretamente à facilidade deste uso.&lt;/p&gt;

&lt;p&gt;Há poucos dias, andava eu pesquisando sobre o assunto e vi este vídeo de Donald Norman: Obs: O vídeo tem legendas 🙂&lt;/p&gt;

&lt;p&gt;[youtube &lt;a href=&#34;http://www.youtube.com/watch?v=NK1Zb_5VxuM&#34;&gt;http://www.youtube.com/watch?v=NK1Zb_5VxuM&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Posso dizer que não me seria necessário acrescentar mais nada neste momento, pois, assistindo ao vídeo, o leitor já está totalmente inteirado do que estou querendo mostrar, mas para não ficar vago o texto, vamos há alguns conceitos.&lt;/p&gt;

&lt;h2 id=&#34;affordances&#34;&gt;Affordances&lt;/h2&gt;

&lt;p&gt;O conceito de affordance(s) é:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Affordance&lt;/strong&gt; é a qualidade de um objeto, ou de um ambiente, que permite que o indivíduo realize uma ação.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Já foi falado um pouco sobre isso &lt;a href=&#34;http://tableless.com.br/transicoes-inteligentes-na-experiencia-usuario/&#34; title=&#34;neste post do Raphael Fabeni&#34;&gt;neste post do Raphael Fabeni&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Em suma, podemos dizer que Affordance, é uma propriedade, ou uma característica de um determinado objeto ou elemento, que permita com que seu usuário possa realizar uma ação.&lt;/p&gt;

&lt;p&gt;Tomemos como exemplo o vídeo acima.&lt;/p&gt;

&lt;p&gt;Nele, Donald Norman nos mostra como ele pode utilizar um objeto de vários formas diferente, como, por exemplo o livro.&lt;/p&gt;

&lt;p&gt;Você pode utilizar o livro para ler, ou simplesmente, cobrir-se da chuva com ele. Você pode também arrancar uma página dele e usar para escrever algo. (O livro é seu, utilize-o como quiser!)&lt;/p&gt;

&lt;p&gt;Da mesma forma, em nossos sistemas, devemos tomar em consideração, que um elemento pode proporcionar diversas possibilidades de ações para o usuário, ou também pode ter apenas uma ação.&lt;/p&gt;

&lt;h2 id=&#34;indo-um-pouco-além&#34;&gt;Indo um pouco além&lt;/h2&gt;

&lt;p&gt;Com os conceitos de affordances em mãos, vamos ao nosso real objetivo: Usabilidade.&lt;/p&gt;

&lt;p&gt;É interessando pensarmos que, o usuário, mesmo não sendo tão experiente, sabe que um botão é para ser clicado e realizar determinada ação. Seja ela enviar um formulário, ou completar um cadastro em um site.&lt;/p&gt;

&lt;p&gt;Então devemos em nosso Design, pensar de maneira que, um botão se pareça com um botão, e que as partes que são clicáveis em nosso sistema ou site, se diferencie da demais, como no exemplo à seguir:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-43022&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/06/wikipedia.jpg&#34; alt=&#34;Wikipedia&#34; width=&#34;1150&#34; height=&#34;453&#34; srcset=&#34;uploads/2014/06/wikipedia.jpg 1150w, uploads/2014/06/wikipedia-400x157.jpg 400w&#34; sizes=&#34;(max-width: 1150px) 100vw, 1150px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-43024&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/06/publicopt.jpg&#34; alt=&#34;publicopt&#34; width=&#34;781&#34; height=&#34;504&#34; srcset=&#34;uploads/2014/06/publicopt.jpg 781w, uploads/2014/06/publicopt-400x258.jpg 400w&#34; sizes=&#34;(max-width: 781px) 100vw, 781px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Note que, no site do Wikipedia, todos os links estão em Azul, então é simples para o usuário perceber que em qualquer elemento azul no meio do texto em que ele clicar, será submetido à uma outra página falando algo sobre aquele assunto.&lt;/p&gt;

&lt;p&gt;Em contrapartida, no site &lt;a title=&#34;publico.pt&#34; href=&#34;http://www.publico.pt/&#34; target=&#34;_blank&#34;&gt;publico.pt&lt;/a&gt; temos vários links, porém estes não são tão perceptíveis. Eles estão: No título da notícia, no nome do autor e em vários outros elementos.&lt;/p&gt;

&lt;p&gt;Chamamos o primeiro conceito de Affordance percebida, onde temos um elemento que você logo percebe sua utilidade e sabe que poderá realizar determinada ação. E o segundo de Affordance escondida, onde podemos realizar determinada ação, mas não percebemos logo de cara.&lt;/p&gt;

&lt;p&gt;A melhor prática, é que você tenha quase sempre, Affordances Percebidas, para que o usuário identifique imediatamente a real utilidade para aquele elemento. Como é o caso do bootstrap, onde um botão realmente parece um botão, e logo da vontade clicar nele.&lt;/p&gt;

&lt;h2 id=&#34;o-usuário-nem-sempre-usará-da-forma-que-esperamos&#34;&gt;O usuário nem sempre usará da forma que esperamos&lt;/h2&gt;

&lt;p&gt;Como Donald Norman diz no vídeo, um mesmo objeto ou elemento pode ter Affordances que o Designer nunca imaginou.&lt;/p&gt;

&lt;p&gt;Muitas vezes, desenvolvemos um elemento, ou até mesmo um sistema completo, com um propósito definido em nossa mente, ou pelo cliente que nos pediu esse determinado fim para o projeto. Porém, o usuário utiliza o sistema de formas que nunca imaginamos.&lt;/p&gt;

&lt;p&gt;Como é o caso citado no &lt;a href=&#34;http://tableless.com.br/cinco-tipos-de-aplicativos-que-voce-deveria-usar-corretamente/&#34; title=&#34;Cinco tipos de aplicativos que você deveria usar corretamente&#34;&gt;post do Manoel Netto&lt;/a&gt;. Onde ele fala sobre o DropBox.&lt;/p&gt;

&lt;p&gt;A real utilidade do DropBox é fornecer um espaço onde você fará backups de seus arquivos em nuvem para ter a segurança de que, se você perder este arquivo localmente, basta acessar sua conta no DropBox e baixar novamente o arquivo.&lt;/p&gt;

&lt;p&gt;Simples e objetivo, mas o usuário às vezes nos surpreende.&lt;/p&gt;

&lt;p&gt;Como o Manoel Netto explica, muitos usuários utilizam o DropBox como uma ferramenta para hospedar imagens e gerar links para utilizá-las em sites e sistemas. Ou até mesmo para hospedar um site!&lt;/p&gt;

&lt;p&gt;São Affordances que a equipe por trás do DropBox talvez nunca tenha pensado, e que, pode abrir um novo horizonte de mercado à ser atacado, como por exemplo, uma ferramente voltada totalmente para hospedagem de imagens e sites!&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Creio que não tenho mais nada à falar sobre o assunto, visto que a este ponto o leitor já deve ter entendido bem o que eu queria mostrar.&lt;/p&gt;

&lt;p&gt;Pense nesta questão das Affordances, e passe a aplicar este conceito em seus elementos, para que estes, possam atrair à atenção do usuário para si.&lt;/p&gt;

&lt;p&gt;E para finalizar, um slide falando um pouco mais sobre o tema:&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Slide Affordances&#34; href=&#34;http://pt.slideshare.net/ivogomes/affordance-5740794&#34; target=&#34;_blank&#34;&gt; Slide Affordances&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>O Crescimento da Web e as Tendências de Mercado</title>
      <link>https://tableless.github.io/hugo-public/o-crescimento-da-web-e-as-tendencias-de-mercado/</link>
      <pubDate>Sun, 15 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/o-crescimento-da-web-e-as-tendencias-de-mercado/</guid>
      <description>

&lt;p&gt;Nos últimos anos, temos acompanhado um crescimento espantoso da Web no Brasil. Hoje em dia, falar-se sobre sistemas funcionando através da internet, é mais comum do que imaginamos, às vezes chega à ser espantoso. Por exemplo, quando estamos na faculdade e vamos discutir ideias de projetos para conclusão do curso, ou simplesmente para projetos que possam nos dar dinheiro (digamos assim), sempre ouviremos alguém dizendo: &amp;#8220;E se fizéssemos isso funcionando pela Web&amp;#8221;.&lt;/p&gt;

&lt;h2 id=&#34;o-grande-segredo-por-trás&#34;&gt;O grande segredo por trás&lt;/h2&gt;

&lt;p&gt;Posso dizer (corrija-me se estiver errado), com quase toda certeza, que o maior motivo para a web ter crescido tanto no Brasil, foi a melhora das conexões de internet de nossos usuários.&lt;/p&gt;

&lt;p&gt;Me lembro bem de meus primeiros cursos de Web Designer, aos 12 ou 13 anos de idade, onde os sites eram feitos com as horríveis tabelas. Exportávamos imagens fatiadas do Fireworks, Photoshop, ou até mesmo Corel Draw, e montávamos os layouts com tabelinhas. Naquela época, praticamente todos os sites eram feitos desta maneira, e me lembro que as conexões eram tão ruins, que isso demorava muitos, mas muitos minutos à carregar.&lt;/p&gt;

&lt;p&gt;Hoje, vejo o quanto os padrões web tem crescido, o quanto os visuais dos sites brasileiros tem se tornado cada vez melhores, e não temos mais aquele dificuldade no carregamento das páginas, pois temos uma conexão acessível.&lt;/p&gt;

&lt;p&gt;Um pouco disto ( ou senão a maior parte), também é devido ao amadurecimento dos usuários, que com o tempo, foram evoluindo e aprendendo a utilizar a web de forma correta. Esta foi a visão que a Microsoft teve ao lançar o Windows 8. Muitos criticaram a interface e a forma como a tela iniciar mudou drasticamente, mas a microsoft enxergou o potencial que seus usuários tinha adquirido com o passar dos anos. Eles viram o quanto o usuário foi capaz de amadurecer e aprender a utilizar seu sistema e a web, criando assim uma interface mais simples e agradável visualmente.&lt;/p&gt;

&lt;h2 id=&#34;acompanhe-as-tendências&#34;&gt;Acompanhe as tendências&lt;/h2&gt;

&lt;p&gt;Você que é profissional da área, ou que ainda está iniciando sua carreira na Web, procure sempre seguir as tendências, tanto de design, como de escrita de código.&lt;/p&gt;

&lt;p&gt;Nos últimos anos o mercado tem crescido assombrosamente, e às vezes é até difícil estar sempre por dentro das novas tendências e tecnologias que vem surgindo para nos auxiliar. Digo por experiência própria, e é por isso que eu sempre tiro um tempo pra estar buscando novas técnicas de design e novas tecnologias, e também estar dando uma lidinha aqui no Tableless e em outros sites do ramo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A dica para quem está começando é: Comece do início, não queira aprender HTML5 e CSS3, sem antes saber o que é o HTML, o que é CSS. Não queira você ser o craque em jQuery, sem saber programar JavaScript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nós estamos em um momento muito avançado no que se diz respeito ao desenvolvimento para Web, e é necessário saber de onde começou isso tudo, para depois procurarmos aprender os novos padrões.&lt;/p&gt;

&lt;p&gt;Acompanhar as tendências e os padrões é uma das partes mais difíceis, porém se você não fizer isso, diga adeus à sua carreira.&lt;/p&gt;

&lt;h2 id=&#34;saia-do-lugar&#34;&gt;Saia do Lugar&lt;/h2&gt;

&lt;p&gt;Não fique parado, olhando para o tempo, pensando: &amp;#8220;Depois eu aprendo HTML5 e CSS3&amp;#8221;, &amp;#8220;Depois eu estudo o as novas tendências de Design&amp;#8221;.&lt;/p&gt;

&lt;p&gt;O mundo web tem evoluído muito, e se você não sair do lugar, estará fadado ao fracasso e será excluído do mercado. As aplicações web vem crescendo a cada dia, o número de projetos e sistemas web cada vez avança mais, então não fique esperando tudo acontecer para se atualizar, pois será tarde demais.&lt;/p&gt;

&lt;h2 id=&#34;aprenda-que-sozinho-você-não-chegará-lá&#34;&gt;Aprenda que sozinho você não chegará lá&lt;/h2&gt;

&lt;p&gt;Quero que você entenda que sempre nessa carreira, você precisará de ajuda e apoio de outras pessoas, e é nessas horas que você precisará contar com seu Networking. Você precisará de amigos que entendam do assunto, precisará procurar em algum site ou blog, precisará consultar o W3C, e assim por diante.&lt;/p&gt;

&lt;p&gt;Então não queira se tornar um bom profissional sozinho, invista em amizades, mantenha-se conectado à rede e esteja sempre buscando inovar.&lt;/p&gt;

&lt;p&gt;Tenha a mente aberta, já vi muitos bons profissionais e empresas perderem clientes por ter a visão fechada e não buscar o novo. E, sinceramente, é péssimo ver que hoje em dia existem tantos profissionais e empresas assim por aí.&lt;/p&gt;

&lt;p&gt;Busque aprender com seus amigos, colegas de faculdade, de trabalho, enfim, se for necessário consulte até seu pai e sua mãe (óbvio que eles não entenderão nada do assunto, mas acredite, os pais gostam de ouvir os filhos falarem de sua vida profissional).&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;As aplicações Web a cada dia se tornarão mais comuns no mercado, e posso afirmar que muito em breve, não veremos praticamente ninguém falando em criar sistemas para Desktop.&lt;/p&gt;

&lt;p&gt;O futuro já está aqui, então acostume-se com ele, interaja com ele, antes que você fique perdido no passado.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UX: uma Responsabilidade de Todos</title>
      <link>https://tableless.github.io/hugo-public/ux-uma-responsabilidade-de-todos/</link>
      <pubDate>Sat, 14 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/ux-uma-responsabilidade-de-todos/</guid>
      <description>

&lt;p&gt;Muitos profissionais buscam aprender e a praticar os conceitos pregados pela turma de UX. Mas afinal, estes conceitos são responsabilidade apenas dos profissionais de UX?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;UX não é só coisa dos arquivos de informação. UX é a base de tudo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Desde o início a web foi desenvolvida e focada nos usuários. Sites de empresas, produtos e serviços, nunca foram feitos para programadores ou desenvolvedores, mas sim, para usuários.&lt;/p&gt;

&lt;p&gt;Toda a equipe envolvida no processo de desenvolvimento de um projeto precisa saber o que é UX e como focar no usuário, afinal é ele que utilizará realmente o sistema que criamos.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;O maior erro de muitas empresas hoje é atribuir a responsabilidade de UX apenas aos designers e arquitetos de informação, enquanto um sistema é feito por toda uma equipe.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Não basta apenas o sistema ter interfaces incríveis e bonitas, se ele não funcionar.&lt;/p&gt;

&lt;p&gt;Quem trabalha com internet também são usuários. Por causa disso sabemos o quanto é chato ficar esperando uma página carregar ou quando você clica em um botão que não funciona.&lt;/p&gt;

&lt;p&gt;Devemos ter em mente que, toda a equipe envolvida no processo, deve conhecer os conceitos dentro da disciplina UX. O UX deve ser aplicado e pensado pela equipe desde as primeiras informações do projeto. Desde a base de funcionamento até a manutenção posterior. A experiência do usuário vai ser afetada se o sistema não for performático. Não vai ser excelente se o AJAX demorar. Não vai ser eficiência se o sistema devolver dados errado.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“O usuário ficou muito tempo no site, isso é bom ou ruim?”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Muitos usuários às vezes acabam ficando muito tempo em um site pelo simples fato de não conseguir encontrar o conteúdo ou as informações que buscava. Ele pode simplesmente não conseguir sair da página inicial por uma deficiência no menu de navegação do site.&lt;/p&gt;

&lt;p&gt;Ou ainda, pode ser que o usuário permaneceu muito tempo no site por conta daqueles scripts bloqueastes que fazem o site demorar para carregar. Já foi muito falado sobre isso e acho que todos os desenvolvedores deviam ter isso em mente: é bom que o JavaScript fique no final do documento.&lt;/p&gt;

&lt;p&gt;Da mesma forma deve-se pensar que se o usuário acessou muitas páginas no site, pode ser que não encontrou o que buscava revirando meio mundo de páginas.&lt;/p&gt;

&lt;p&gt;A experiência do usuário deve ser planejada em cada elemento, em cada detalhe do sistema. Devemos desenvolver pensando nos usuários, como seria a nossa reação ao nos depararmos com esse sistema.&lt;/p&gt;

&lt;p&gt;Cada membro da equipe deve saber sobre UX, pensar como seria a real experiência do usuário com o projeto e pensar em maneiras mais ágeis e simples para utilização do sistema.&lt;/p&gt;

&lt;p&gt;Não são somente os designers que devem pensar em UX, pois UX não é um conceito apenas visual, mais que isso, é um conceito muito mais funcional que visual.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;UX deve ser aplicado por toda a equipe e estudado pela tal. É responsabilidade de cada um de nós conhecer, estudar e  aprimorar nossas habilidades em UX.&lt;/p&gt;

&lt;p&gt;Sendo assim, devemos levar em conta que, UX não se faz sozinho, UX não é conceito de Design, e sim de Desenvolvimento, UX não é algo novo, tudo começou por causa do usuário, se não fosse por ele você não teria projetos à fazer.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>