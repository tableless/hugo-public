<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Júlio Carneiro on Tableless</title>
    <link>http://tableless.com.br/author/j%C3%BAlio-carneiro/index.xml</link>
    <description>Recent content in Júlio Carneiro on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/j%C3%BAlio-carneiro/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Como camuflar seu ip like a ninja</title>
      <link>http://tableless.com.br/como-camuflar-seu-ip-like-ninja/</link>
      <pubDate>Sun, 04 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/como-camuflar-seu-ip-like-ninja/</guid>
      <description>

&lt;p&gt;Temos algumas formas de camuflar ip, alguns programas que nos auxiliam a fazer isso de forma fácil. A um tempo atrás eu estava usando o sistema operacional &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;WHONIX&lt;/strong&gt; para poder fazer esse tunelamento pra mim, ele é realmente eficaz e eu não precisei me preocupar muito com detalhes, porém eu testei algumas outras opções e tiveram duas que eu realmente gostei, uma é o &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;PROXYCHAINS&lt;/strong&gt; e a outra o &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;JONDO&lt;/strong&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://anonymous-proxy-servers.net/en/jondo.html&#34;&gt;https://anonymous-proxy-servers.net/en/jondo.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://proxychains.sourceforge.net&#34;&gt;http://proxychains.sourceforge.net&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Ambas tem seus prós e contras obviamente, achei o &lt;strong&gt;proxychains&lt;/strong&gt; com mais liberdade para trabalhar em diversas áreas e o &lt;strong&gt;jondo mais eficaz no que se propõe a fazer, &lt;/strong&gt;porém um pouco mais limitado.&lt;/p&gt;

&lt;p&gt;Vou ensinar as duas formas ok? Deste modo você pode fazer testes com as duas e escolher qual é a melhor para &lt;strong&gt;o seu propósito&lt;/strong&gt;, vamos lá:&lt;/p&gt;

&lt;h3 id=&#34;proxychains&#34;&gt;ProxyChains&lt;/h3&gt;

&lt;p&gt;O &lt;strong&gt;proxychains&lt;/strong&gt; é um programa que faz o roteamento de suas requisições através de &lt;strong&gt;proxys&lt;/strong&gt; que você escolhe por uma lista &lt;strong&gt;que você mesmo faz&lt;/strong&gt;, porém vamos fazer um pouco diferente usando o &lt;strong&gt;tor router&lt;/strong&gt; para direcionar as requisições diretamente para porta do tor, fazendo com que tudo passe pelo router do tor antes de ir para web.&lt;/p&gt;

&lt;p&gt;Eu não uso o &lt;strong&gt;kali linux&lt;/strong&gt;, porém baixei todos os repositórios dele para o ubuntu com o “&lt;strong&gt;KATOOLIN&lt;/strong&gt;” ( &lt;a href=&#34;https://github.com/LionSec/katoolin&#34; rel=&#34;nofollow&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/LionSec/katoolin&#34;&gt;https://github.com/LionSec/katoolin&lt;/a&gt;&lt;/strong&gt;&lt;/a&gt; ), á partir daí instalei o &lt;strong&gt;proxychains&lt;/strong&gt; na minha maquina, caso você use o kali, os repositórios que vamos usar já vem na distro por default então é só instalar.&lt;/p&gt;

&lt;p&gt;Vamos instalar o &lt;strong&gt;tor&lt;/strong&gt; e o &lt;strong&gt;proxychains&lt;/strong&gt; para que eles trabalhem juntos:&lt;/p&gt;

&lt;pre&gt;sudo apt-get install tor
sudo apt-get install proxychains&lt;/pre&gt;

&lt;p&gt;Feito a instalação a configuração é muito fácil, vamos precisar abrir o arquivo de configurações do proxychains, que é o “/etc/proxychains.conf”. Vamos abrir ele com o nano:&lt;/p&gt;

&lt;pre&gt;sudo nano /etc/proxychains.conf&lt;/pre&gt;

&lt;p&gt;Com o arquivo aberto vamos comentar a linha “strict_chain” e descomentar a linha “dynamic_chain”, e no final do arquivo vamos adicionar a seguinte linha:&lt;/p&gt;

&lt;pre&gt;socks5 127.0.0.1 9050&lt;/pre&gt;

&lt;p&gt;Vamos salvar o arquivo e podemos iniciar o services do Tor para depois podermos começar com o proxychains:&lt;/p&gt;

&lt;pre&gt;sudo service tor start&lt;/pre&gt;

&lt;p&gt;Agora para fazermos com que o tunelamento funcione com o proxychains é só adicionar o comando “proxychains” antes do programa que você quer utilizar, exemplo:&lt;/p&gt;

&lt;pre&gt;sudo proxychains firefox&lt;/pre&gt;

&lt;p&gt;Entre em algum site de consulta de ip e veja seu ip camuflado com sucesso utilizando o tor e o proxychains ;D&lt;/p&gt;

&lt;h3 id=&#34;jondo&#34;&gt;JonDo&lt;/h3&gt;

&lt;p&gt;Você pode usar JonDonym para navegar anônimo, e-mail anônimo, chats e outros fins. &lt;strong&gt;JonDo&lt;/strong&gt; , anteriormente JAP, é uma ferramenta de proxy IP Changer. Ele atua como um proxy e irá encaminhar o tráfego de suas aplicações de internet criptografadas, e por isso vai esconder o seu endereço IP. É uma aplicação Java, open source e você pode baixá-lo gratuitamente.&lt;/p&gt;

&lt;p&gt;Com o &lt;strong&gt;JonDo&lt;/strong&gt; é o mesmo esquema, caso tenha o &lt;strong&gt;kali linux&lt;/strong&gt; você só vai precisar instalar pelo repositório, caso use outra distro recomendo o &lt;strong&gt;KATOOLIN&lt;/strong&gt; para baixar os repositórios do kali e assim instalar as aplicações dele.&lt;/p&gt;

&lt;p&gt;Para instalação do &lt;strong&gt;JonDo&lt;/strong&gt; e do &lt;strong&gt;JonDoFox&lt;/strong&gt; ( que é um &lt;strong&gt;firefox modificado &lt;/strong&gt;para não termos risco de sermos descobertos, ele desabilita o javascript e muitas coisas que podem dar informações sobre nossa navegação ) vamos precisar instalar o &lt;strong&gt;java jre e algumas &lt;/strong&gt;&lt;strong&gt;dependências&lt;/strong&gt;, e claro o jondo e jondofox que baixamos no site oficial indicado acima:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;sudo aptitude install default-jre java-wrappers firefox
sudo dpkg -i jondo_all.deb
sudo dpkg -i jondofox-en_all.deb&lt;/pre&gt;

&lt;p&gt;Com o &lt;strong&gt;JonDo&lt;/strong&gt; e o &lt;strong&gt;JonDoFox&lt;/strong&gt; instalados na minha maquina vou entrar no terminal e dar um “&lt;strong&gt;sudo jondo&lt;/strong&gt;” assim, vamos inicializar a aplicação do &lt;strong&gt;JonDo&lt;/strong&gt;, lá podemos ver algumas opções de configuração e tudo que o programa oferece, veja:&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*ThtPBRe1tD7aqjiFMEWvlQ.png&#34; alt=&#34;&#34; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Com o &lt;strong&gt;JonDo&lt;/strong&gt; rodando, podemos agora inicializar o &lt;strong&gt;JonDoFox&lt;/strong&gt;, que vai ser nosso &lt;strong&gt;navegador anonimo&lt;/strong&gt; trabalhando junto ao &lt;strong&gt;JonDo&lt;/strong&gt;, vamos inicializar e entrar em algum site de consulta de ip para nos localizarmos, veja:&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*4cjyOlP2MnoNHbnyuEhsbA.png&#34; alt=&#34;&#34; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Por aí já da para vermos que estamos utilizando o &lt;strong&gt;JonDo&lt;/strong&gt; corretamente, o site de status deles nos da essa resposta assim que entramos para fazer o teste.&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*1qhJ-OTxjcv2ritD_DKjSg.png&#34; alt=&#34;&#34; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;É bem legal o jeito que ele dá o &lt;strong&gt;status completo do seu anonimato&lt;/strong&gt;, este site é próprio do &lt;strong&gt;JonDo&lt;/strong&gt; para testar seu anonimato. Acho importante ser a &lt;strong&gt;primeira coisa que você deve fazer&lt;/strong&gt; ao iniciar o serviço.&lt;/p&gt;

&lt;p&gt;Espero que tenham curtido o post, qualquer dúvida só comentar ai em baixo! Abraços e até o próximo post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Começando com o Angular Material  – Parte 1</title>
      <link>http://tableless.com.br/comecando-com-o-angular-material-parte-1/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/comecando-com-o-angular-material-parte-1/</guid>
      <description>

&lt;p&gt;Decidi começar essa série de posts sobre &lt;strong&gt;Angular&lt;/strong&gt; pois ultimamente é o que mais estou estudando, e pirando também rs, estou &lt;strong&gt;viciado&lt;/strong&gt; no angular confesso, e não podia deixar de escrever sobre o &lt;strong&gt;angular material&lt;/strong&gt; pois ele realmente me surpreendeu com sua facilidade que junto a sua beleza o torna bem &lt;strong&gt;interessante&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Vou escrever uma série com alguns posts baseados no que eu aprendi do angular material nesses tempos estudando na internet, espero que possa ajudar uma galera que queria muito conhecer porém não sabia por onde começar ou tem dificuldade de achar algo em português.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Lembrando que esta série exige um certo conhecimento de AngularJS para ser compreendida ok?&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;parte-1-baixar-e-instalar&#34;&gt;Parte 1 — Baixar e instalar&lt;/h4&gt;

&lt;p&gt;Vamos começar criando uma &lt;strong&gt;nova pasta&lt;/strong&gt; e começando um &lt;strong&gt;projeto npm &lt;/strong&gt;dentro dela, veja:&lt;/p&gt;

&lt;pre&gt;cd Desktop
mkdir project
cd project
npm init&lt;/pre&gt;

&lt;p&gt;Vão aparecer algumas opções do projeto npm pra preencher, preencha conforme queira ou pule apertando “&lt;strong&gt;enter&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;Agora vamos instalar o &lt;strong&gt;angular,&lt;/strong&gt; o &lt;strong&gt;angular material&lt;/strong&gt; e as &lt;strong&gt;dependências do material&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;npm install angular angular-material angular-animate angular-aria --save&lt;/pre&gt;

&lt;p&gt;Legal, instalamos as dependências que precisamos para começar nosso projeto, agora &lt;strong&gt;precisamos linkar&lt;/strong&gt; com nosso arquivo html certo? Então vamos começar linkando &lt;strong&gt;5 arquivos de dependências&lt;/strong&gt;, um de css que deverá ser linkado no &lt;strong&gt;&lt;head&gt;&lt;/strong&gt;, e outros 4 scripts que linkamos &lt;strong&gt;antes da tag de fechamento do body&lt;/strong&gt;, vejamos:&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;html ng-app=&#34;app&#34;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;node_modules/angular-material/angular-material.css&#34;&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular/angular.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular-animate/angular-animate.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular-aria/angular-aria.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular-material/angular-material.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Feito isso precisamos &lt;strong&gt;chamar o módulo&lt;/strong&gt; e &lt;strong&gt;incluir a dependência do angular-material&lt;/strong&gt;, veja:&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--pre&#34;&gt;&amp;lt;script&amp;gt;
    angular.module(&#39;app&#39;, [&#39;ngMaterial&#39;])
        .run(function(){
        console.log(&#39;Funcionando!&#39;)
    });
&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Vejam que eu chamei nosso &lt;strong&gt;ng-app&lt;/strong&gt; na tag &lt;strong&gt;&lt;html&gt;&lt;/strong&gt;, isto é muito importante em nosso passo a passo pois vamos chamar o nosso módulo por ela, então como chamei na tag &lt;strong&gt;&lt;html&gt;&lt;/strong&gt; ele vai se estender por toda a página procurando por diretivas, controllers etc.&lt;/p&gt;

&lt;p&gt;Ainda neste exemplo, escrevi uma função que quando a página é carregada ela dispara uma mensagem no console, &lt;strong&gt;você pode testar em sua máquina &lt;/strong&gt;para assimilar o que eu fiz até aqui.&lt;/p&gt;

&lt;p&gt;Antes de dar continuidade ao artigo vou deixar o &lt;strong&gt;link da documentação oficial&lt;/strong&gt; do angular material que é bem explicativa e com certeza vai te ajudar bastante nessa jornada de aprendizado, além do que vamos usar bastante os exemplos de lá nos artigos:&lt;/p&gt;

&lt;p style=&#34;text-align: center;&#34;&gt;
  &lt;a href=&#34;https://material.angularjs.org/&#34;&gt;https://material.angularjs.org/&lt;/a&gt;
&lt;/p&gt;

&lt;h4 id=&#34;action-graf-h4-graf-after-mixtapeembed&#34;&gt;Action {.graf&amp;ndash;h4.graf-after&amp;ndash;mixtapeEmbed}&lt;/h4&gt;

&lt;p class=&#34;graf-after--h4&#34;&gt;
  Ambiente preparado tudo funcionando? Legal, bora pra &lt;strong&gt;action&lt;/strong&gt;, eu ia postar somente até aqui na parte 1 pro post não ficar gigante, porém acho que ficaria &lt;strong&gt;meio chato&lt;/strong&gt; porque sei que se você está lendo isso quer ir logo pra &lt;strong&gt;action! &lt;/strong&gt;Então decidi postar um combo parte 1 + parte 2, segura:
&lt;/p&gt;

&lt;h4 id=&#34;layout&#34;&gt;Layout&lt;/h4&gt;

&lt;p class=&#34;graf-after--h4&#34;&gt;
  No Angular Material podemos usar algumas diretivas pré prontas para criarmos interfaces. Usando estas diretivas html podemos definir valores (ex:&lt;strong&gt;layout=”row”&lt;/strong&gt;), que vão nos ajudar bastante a separar as coisas do jeito mais fácil para trabalharmos, pois os atributos vão definir o layout baseado nas &lt;strong&gt;classes css que já existem no angular material&lt;/strong&gt;. Conforme a documentação, segue abaixo uma tabela contendo algumas especificações:
&lt;/p&gt;&lt;figure&gt; 

&lt;

div class=&amp;#8221;aspectRatioPlaceholder is-locked&amp;#8221;&gt;
  
&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image aligncenter&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*Zh1tH1Cuk-V7ljIIKukbXQ.png&#34; /&gt;
  
&lt;/figure&gt; 

Então, como o angular material **tem uma api flexbox** podemos setar uma div**row**, e dentro dela **criar 2 divs** com um “**flex=”50”**”, assim cada div dentro da div **row** terá o espaço de **50% da tela** uma ao lado da outra, veja o exemplo:

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;div layout=&#34;row&#34;&amp;gt;
    &amp;lt;div flex=&#34;50&#34;&amp;gt;Primeira div&amp;lt;/div&amp;gt;
    &amp;lt;div flex=&#34;50&#34;&amp;gt;Segunda div&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&lt;/pre&gt;

Abaixo temos algumas **especificações de breakpoints** que também serão bem importante pra criarmos nossos apps e deixarmos tudo responsivo, vamos **associar breakpoints** **a definições de mediaquery**, veja:&lt;figure&gt; 

&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*gRZXmgUUu4Nu48zmSVKATA.png&#34; /&gt;
  
&lt;/figure&gt; 

Agora podemos **combinar o breakpoint junto a api layout** e pronto, temos responsividade em nosso app 😀 veja como funciona:&lt;figure&gt; 

&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*bF72D6KkAPhg1IS9jcjvBA.png&#34; /&gt;
  
&lt;/figure&gt; 

Com essas informações já podemos começar a fazer algumas coisas como fazer a div aparecer com uma estrutura default para quando estiver no **desktop**, e outra quando estiver no **celular** apenas manipulando a api **layout**, veja:

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;md-content class=&#34;md-padding&#34; layout-xs=&#34;column&#34; layout=&#34;row&#34;&amp;gt;&amp;lt;/md-content&amp;gt;&lt;/pre&gt;

Veja que eu pedi para por default o **md-content** vir como **row**, e quando a tela for menor que **599px** como vimos nos breakpoints setando o **xs**, ele mude para **column**.

#### Layout-align

&lt;p class=&#34;graf-after--h4&#34;&gt;
  Podemos também alinhar elementos em nossa página com a api &lt;strong&gt;layout-align&lt;/strong&gt;, veja um exemplo:
&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;div layout=&#34;row&#34; layout-align=&#34;center&#34;&amp;gt;
    Hello World!
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;Podemos também &lt;strong&gt;combinar com os breakpoints&lt;/strong&gt; caso for preciso para deixarmos responsivo, veja a tabela:&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*hltJORr9bcACAOwG3EkQlg.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h4 id=&#34;graf-h4-graf-after-figure&#34;&gt;{.graf&amp;ndash;h4.graf-after&amp;ndash;figure}&lt;/h4&gt;

&lt;h4 id=&#34;graf-h4-graf-after-figure-1&#34;&gt;{.graf&amp;ndash;h4.graf-after&amp;ndash;figure}&lt;/h4&gt;

&lt;h4 id=&#34;show-hide-graf-h4-graf-after-figure&#34;&gt;Show &amp;amp; Hide {.graf&amp;ndash;h4.graf-after&amp;ndash;figure}&lt;/h4&gt;

&lt;p&gt;&lt;p class=&#34;graf-after--h4&#34;&gt;
  Outra coisa muito interessante na parte de layouts do angular material é o &lt;strong&gt;show &amp;amp; hide&lt;/strong&gt;, uma api que pode ser usada para &lt;strong&gt;mostrar ou esconder&lt;/strong&gt; algum elemento conforme a resolução:
&lt;/p&gt;&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*eBPJTlusl1IEA7gGhRxV0w.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Reproduza o código abaixo para ver o comportamento da página quando &lt;strong&gt;diminuímos a janela do navegador&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;div layout=&#34;row&#34;&amp;gt;
    &amp;lt;div hide show-gt-sm flex&amp;gt;
        Mostrar somente em dispositivos gt-sm
    &amp;lt;/div&amp;gt;
    &amp;lt;div hide-gt-sm flex&amp;gt;
        Mostrar em resolução pequena e média&amp;lt;br&amp;gt;
        Esconder em dispositivos gt-sm        
    &amp;lt;/div&amp;gt;
    &amp;lt;div show hide-gt-md flex&amp;gt;
        Mostrar em resolução pequena e média&amp;lt;br&amp;gt;
        Esconder em dispositivos gt-md        
    &amp;lt;/div&amp;gt;
    &amp;lt;div hide show-md flex&amp;gt;
        Mostrar somente em resoluções médias&amp;lt;br&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div hide show-gt-lg flex&amp;gt;
        Mostrar em resoluções maiores que 1200px de largura&amp;lt;br&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;Viu só? Facilitou bastante o jeito como podemos construir nossas estruturas responsivas. Aprendemos hoje como colocar e iniciar o angular-material no seu projeto, e um pouco mais sobre a parte de layout e layout responsivo, creio que no próximo post vamos poder brincar com coisas mais legais, porém essa parte é &lt;strong&gt;essencial para qualquer pessoa que quer aprender o angular material&lt;/strong&gt;, sem ela fica muito difícil de trabalharmos.&lt;/p&gt;

&lt;p&gt;Peço desculpas &lt;strong&gt;pelo tamanho do post&lt;/strong&gt; porque creio que tenha ficado meio enorme rs e isso não foi &lt;strong&gt;absolutamente nada&lt;/strong&gt; do que o angular-material pode fazer, espero que tenha contribuído com seu conhecimento, e no próximo post vou explicando um pouco sobre os services do angular material,&lt;strong&gt;qualquer feedback será bem-vindo&lt;/strong&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Entendendo a indentação no Javascript</title>
      <link>http://tableless.com.br/entendendo-indentacao-no-javascript/</link>
      <pubDate>Wed, 06 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/entendendo-indentacao-no-javascript/</guid>
      <description>

&lt;p&gt;Código sem indentação não é legal de se ler, mas tem uma coisa um pouco pior que isso, ou tão ruim quanto, que é a falta de um padrão na indentação do projeto. Por exemplo, eu uso tab pois consigo ajustar meu editor para que ele exiba a quantidade que eu julgue necessária de espaços, mas pode ser que alguém da minha equipe use os próprios espaços, eai já imagina a beleza que vai ficar o código né? É &lt;strong&gt;MUITO&lt;/strong&gt; importante &lt;strong&gt;padronizar&lt;/strong&gt; o uso da indentação para não ter problemas futuros.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Para quem usa espaços, o padrão de validação do&lt;/em&gt; &lt;strong&gt;&lt;em&gt;JSLint&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;por exemplo é de 4 (apesar de ser customizável a sua escolha), e é este que vamos usar neste artigo.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;o-que-deve-ser-indentado&#34;&gt;O que deve ser indentado?&lt;/h4&gt;

&lt;p&gt;Mas o que será que eu indento? O que precisa ser indentado? Simples, qualquer coisa dentro de chaves. &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Funções, loops, ifs, switches e propriedades de objetos&lt;/strong&gt;, vou mostrar a baixo exemplos de indentação:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;function algumaFuncao(a, b) {
    var c = 1,
        d = 2,
        inner;
    if (a &amp;gt; b) {
        inner = function() {
        return {
            r: c - d
        };
    };
    } else {
        inner = function () {
            return {
                r: c + d
            };
        };
    }
    return inner;
}
&lt;/pre&gt;

&lt;p&gt;Caso você tenha apenas uma instrução em um &lt;strong&gt;if&lt;/strong&gt; ou &lt;strong&gt;for&lt;/strong&gt;, as chaves não são obrigatórias, porem, mesmo que sejam opcionais é importante &lt;strong&gt;sempre usa-las&lt;/strong&gt;. Isto faz com que seu código seja mais fácil de dar manutenção pois outras pessoas vão entende-lo melhor.&lt;/p&gt;

&lt;p&gt;Exemplo, imagina que você tenha um &lt;strong&gt;loop for&lt;/strong&gt; com uma instrução. Você pode optar por não por as chaves e mesmo assim não haveriam erros de sintaxe:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;for (var i = 0; i &amp;lt; 10; i += 1)
    alert(i);
&lt;/pre&gt;

&lt;p&gt;E se caso mais tarde você decidir adicionar outra linha no loop?&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;for (var i = 0; i &amp;lt; 10; i += 1)
    alert(i);
    alert(i + &amp;#039; is &amp;#039; +(i % 2 ? &amp;#039;odd&amp;#039; : &amp;#039;even&amp;#039;));
&lt;/pre&gt;

&lt;p&gt;O segundo &lt;strong&gt;alert()&lt;/strong&gt; está fora do &lt;strong&gt;loop&lt;/strong&gt; neste caso, apesar da indentação estar tentando te enganar. Por isso temos que &lt;strong&gt;sempre usar as chaves&lt;/strong&gt;, pois evitamos ter problemas futuros, precisamos pensar a longo prazo aqui.&lt;/p&gt;

&lt;h4 id=&#34;chave-de-abertura&#34;&gt;Chave de abertura&lt;/h4&gt;

&lt;p&gt;Tendemos a ter preferência sobre onde colocar a chave de abertura no código, uns preferem por na &lt;strong&gt;mesma linha&lt;/strong&gt;, outros na &lt;strong&gt;linha seguinte&lt;/strong&gt;, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;if (true){
    alert(&#39;É true!&#39;)
}
&lt;/pre&gt;

&lt;p&gt;Ou:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;if (true)
{
    alert(&#39;É true!&#39;)
}
&lt;/pre&gt;

&lt;p&gt;Neste exemplo é uma questão de preferência porém, em alguns casos o programa pode se comportar diferentemente, dependendo de onde a chave está. Isto ocorre por causa do _mecanismo de inserção de ponto e vírgula — _o JS não alarma caso você queira não terminar suas linhas com ponto e vírgula, pois neste caso &lt;strong&gt;ele adiciona para você&lt;/strong&gt;. Isso pode causar problemas quando uma função retorna um objeto literal e a chave de abertura está na linha seguinte:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;function func() {
    return
    {
        nome: &#39;Julio&#39;
    };
}
&lt;/pre&gt;

&lt;p&gt;Se você queria que sua função retornasse o objeto “&lt;strong&gt;nome&lt;/strong&gt;”, você vai ter uma surpresa, experimente rodar no seu console do node e ver o resultado para melhor compreender. Por causa dos pontos e vírgulas a função retorna “&lt;strong&gt;undefined”&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Concluindo:&lt;/p&gt;

&lt;p&gt;Sempre usar chaves, e sempre colocar a de abertura na mesma linha da instrução anterior:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;function func() {
    return {
        nome: &#39;Julio&#39;
    };
}
&lt;/pre&gt;

&lt;p&gt;Espero que tenham curtido, e que eu possa ter contribuído com o conhecimento de quem acessa o Tableless, este é meu objetivo em geral, ajudar! Abraços, te espero no próximo post!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>