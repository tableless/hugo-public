<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mário Valney on Tableless</title>
    <link>http://tableless.com.br/author/m%C3%A1rio-valney/index.xml</link>
    <description>Recent content in Mário Valney on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/m%C3%A1rio-valney/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A pasta “res” e os resources em um projeto Android</title>
      <link>http://tableless.com.br/a-pasta-res-e-os-resources-em-um-projeto-android/</link>
      <pubDate>Wed, 15 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/a-pasta-res-e-os-resources-em-um-projeto-android/</guid>
      <description>

&lt;p&gt;É preciso mais do que só código para criarmos um aplicativo realmente bom para Android. E por mais que amemos código, temos que entender como usar todos os recursos que o Android nos dá, por isso, vamos lá!&lt;/p&gt;

&lt;p&gt;O primeiro passo é entender que &lt;em&gt;resources&lt;/em&gt; o Android nos permite usar na criação de um App.&lt;/p&gt;

&lt;h1 id=&#34;tipos-de-resources&#34;&gt;Tipos de Resources&lt;/h1&gt;

&lt;p&gt;Como vamos ver daqui a pouco, todos os resources de um projeto ficam na pasta &lt;strong&gt;res/ &lt;/strong&gt;dele. E podem ser basicamente:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/animation-resource.html&#34; target=&#34;_blank&#34;&gt;Animações&lt;br /&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Podem ser dois tipos &amp;#8220;interpoladas&amp;#8221; (tween animation) e de &amp;#8220;frames&amp;#8221; (frames animation). A primeira consiste em criar uma animação modificando uma única imagem e a segunda segue a lógica do &lt;em&gt;.gif&lt;/em&gt; ao criar uma animação com uma sequência de imagens.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/color-list-resource.html&#34; target=&#34;_blank&#34;&gt;Cores&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Você define cores de acordo com o estado da View.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/drawable-resource.html&#34; target=&#34;_blank&#34;&gt;Drawable&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Recursos gráficos que podem ser bitmaps ou XML.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/layout-resource.html&#34; target=&#34;_blank&#34;&gt;Layout&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Você pode definir vários layouts para sua UI e alterná-los de acordo com o estado da aplicação.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/menu-resource.html&#34; target=&#34;_blank&#34;&gt;Menu&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Assim como os layouts para sua UI, você pode definir &amp;#8220;layouts de menu&amp;#8221; para usá-los na sua aplicação (método &lt;a href=&#34;http://developer.android.com/reference/android/app/Fragment.html#onCreateOptionsMenu(android.view.Menu,%20android.view.MenuInflater)&#34; target=&#34;_blank&#34;&gt;onCreateOptionsMenu()&lt;/a&gt; da sua Activity).
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/string-resource.html&#34; target=&#34;_blank&#34;&gt;Strings&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Um recurso super interessante. Pois te permite definir strings e utilizá-las por todo o seu projeto concentrando-as em apenas um lugar, caso queira modificá-las depois. Permite também a internacionalização do seu App, sendo utiliza-da na tradução da sua aplicação.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/style-resource.html&#34; target=&#34;_blank&#34;&gt;Estilo&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Define aparência e formato dos elementos da sua UI. (Uso bem parecido com o do CSS: concentrar estilização em um único arquivo.)
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/more-resources.html&#34; target=&#34;_blank&#34;&gt;Outros tipos de Recurso&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Assim como as &lt;em&gt;strings&lt;/em&gt;, podemos definir valores &lt;em&gt;booleanos&lt;/em&gt;, &lt;em&gt;inteiros&lt;/em&gt;, &lt;em&gt;dimensões&lt;/em&gt;, &lt;em&gt;cores&lt;/em&gt; e outras &lt;em&gt;arrays &lt;/em&gt;para usarmos por toda a aplicação.
&lt;/p&gt;

&lt;h1 id=&#34;a-pasta-8220-res-8221&#34;&gt;A pasta &amp;#8220;res&amp;#8221;&lt;/h1&gt;

&lt;p&gt;Você deve sempre usar os arquivos e pastas de resource para armazenar valores da sua aplicação, além das imagens, é claro. Dessa forma você consegue manter e atualizar seu código muito mais facilmente, além de poder definir alternativas para cada um deles, de acordo com situações específicas, como diferentes idiomas, tamanhos e orientações de tela. Isso é ótimo, visto a gama imensa de dispositivos que utilizam o sistema do robô verde.&lt;/p&gt;

&lt;p&gt;A pasta &lt;strong&gt;res/ &lt;/strong&gt;é a pasta do seu projeto que guarda todos os resources da sua aplicação:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/Tree-do-Android-Studio.png&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-48069&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/Tree-do-Android-Studio.png&#34; alt=&#34;Tree do Android Studio&#34; width=&#34;408&#34; height=&#34;648&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cada tipo de recurso que vimos antes deve ficar dentro de uma dessas pastas. Abaixo temos uma tabela retirada da &lt;a href=&#34;http://developer.android.com/guide/topics/resources/providing-resources.html&#34; target=&#34;_blank&#34;&gt;documentação&lt;/a&gt; do Android, com os nomes das pastas e os respectivos tipos de resource:&lt;/p&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th scope=&#34;col&#34;&gt;
      Diretório
    &lt;/th&gt;
    
    &lt;th scope=&#34;col&#34;&gt;
      Tipo de Resource
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;code&gt;animator/&lt;/code&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      arquivos XML que definem &lt;a href=&#34;http://developer.android.com/guide/topics/graphics/prop-animation.html&#34;&gt;animações de propriedades&lt;/a&gt;.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;code&gt;anim/&lt;/code&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      arquivos XML que definem &lt;a href=&#34;http://developer.android.com/guide/topics/graphics/view-animation.html#tween-animation&#34;&gt;tween animations&lt;/a&gt;. (Animações de propriedades podem ser salvas aqui também, mas o diretório&lt;em&gt; animator/&lt;/em&gt; é preferível, por questão de organização)
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;code&gt;color/&lt;/code&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      arquivos XML que definem um estado de lista de cores. Veja &lt;a href=&#34;http://developer.android.com/guide/topics/resources/color-list-resource.html&#34;&gt;Color State List Resource&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;code&gt;drawable/&lt;/code&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      arquivos Bitmap (.png, .jpg, .gif) ou arquivos XML que são compilados nos seguintes resources:&lt;/p&gt; 
      
      &lt;ul&gt;
        &lt;li&gt;
          arquivos Bitmap
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&#34;http://developer.android.com/tools/help/draw9patch.html&#34; target=&#34;_blank&#34;&gt;9-Patch&lt;/a&gt; (bitmaps redimensionáveis)
        &lt;/li&gt;
        &lt;li&gt;
          listas de estado
        &lt;/li&gt;
        &lt;li&gt;
          Shapes (formas)
        &lt;/li&gt;
        &lt;li&gt;
          Animações (frame animations)
        &lt;/li&gt;
        &lt;li&gt;
          Outros tipos
        &lt;/li&gt;
      &lt;/ul&gt;
      
      &lt;p&gt;
        Veja &lt;a href=&#34;http://developer.android.com/guide/topics/resources/drawable-resource.html&#34;&gt;Drawable Resources&lt;/a&gt; para mais informações.&lt;/td&gt; &lt;/tr&gt; 
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;mipmap/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            Arquivos &amp;#8220;drawable&amp;#8221; especificamente para ícones de aplicações de diferentes tipos de densidade.
          &lt;/td&gt;
        &lt;/tr&gt;
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;layout/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            arquivos XML que definem sua UI (user interface).
          &lt;/td&gt;
        &lt;/tr&gt;
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;menu/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            arquivos XML que definem os menus da sua aplicação, como Menu de Opções, de Contexto e Sub-menus. Mais informações em: &lt;a href=&#34;http://developer.android.com/guide/topics/resources/menu-resource.html&#34;&gt;Menu Resource&lt;/a&gt;.
          &lt;/td&gt;
        &lt;/tr&gt;
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;raw/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            Pasta para salvar arquivos na sua forma natural (raw).
          &lt;/td&gt;
        &lt;/tr&gt;
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;values/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            Arquivos XML que contêm valores, como strings, inteiros, e cores. Dentro dessa pasta você deve nomear cada arquivo XML com o nome do seu resource e dessa forma irá acessar com uma subclasse de &lt;code&gt;R&lt;/code&gt;. Por exemplo, o arquivo &lt;code&gt;string.xml&lt;/code&gt; será acessado por &lt;code&gt;R.string&lt;/code&gt;. Abaixo algumas convenções:&lt;/p&gt; 
            
            &lt;ul&gt;
              &lt;li&gt;
                &lt;code&gt;arrays.xml&lt;/code&gt; para Arrays.
              &lt;/li&gt;
              &lt;li&gt;
                &lt;code&gt;colors.xml&lt;/code&gt; para valores de cores.
              &lt;/li&gt;
              &lt;li&gt;
                &lt;code&gt;dimens.xml&lt;/code&gt; para dimensões.
              &lt;/li&gt;
              &lt;li&gt;
                &lt;code&gt;strings.xml&lt;/code&gt; para todas as strings.
              &lt;/li&gt;
              &lt;li&gt;
                &lt;code&gt;styles.xml&lt;/code&gt; para estilos.
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;xml/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            Arquivos XML que podem ser lidos em tempo de execução chamando &lt;code&gt;&amp;lt;a href=&#34;http://developer.android.com/reference/android/content/res/Resources.html#getXml(int)&#34;&gt;Resources.getXML()&amp;lt;/a&gt;&lt;/code&gt;. Vários arquivos XML de configuração podem ser salvos aqui, por exemplo.&lt;br /&gt; &lt;!-- or preferences configuration. --&gt;
          &lt;/td&gt;
        &lt;/tr&gt;&lt;/tbody&gt; &lt;/table&gt; 
        

&lt;pre&gt;&lt;code&gt;    &amp;lt;h1&amp;gt;
       Mas e essas outras pastas?
    &amp;lt;/h1&amp;gt;

    &amp;lt;p&amp;gt;
      Você deve ter notado que na imagem, temos outras pastas bem parecidas com as que guardam os resources por padrão. São elas: &amp;lt;em&amp;gt;drawable-hdpi&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;drawable-mdpi&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;drawable-xhdpi&amp;lt;/em&amp;gt; e &amp;lt;em&amp;gt;drawable-xxhdpi&amp;lt;/em&amp;gt; (que são variações da pasta &amp;lt;strong&amp;gt;drawable&amp;lt;/strong&amp;gt;), &amp;lt;em&amp;gt;layout-land&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;layout-sw600dp&amp;lt;/em&amp;gt; e &amp;lt;em&amp;gt;layout-sw600dp-land&amp;lt;/em&amp;gt; (que são variações da pasta &amp;lt;strong&amp;gt;layout&amp;lt;/strong&amp;gt;) e as variações da pasta &amp;lt;strong&amp;gt;values&amp;lt;/strong&amp;gt;, que são &amp;lt;em&amp;gt;values-en&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;values-es&amp;lt;/em&amp;gt; e &amp;lt;em&amp;gt;values-sw600dp&amp;lt;/em&amp;gt;.
    &amp;lt;/p&amp;gt;

    &amp;lt;div id=&amp;quot;attachment_48078&amp;quot; style=&amp;quot;width: 429px&amp;quot; class=&amp;quot;wp-caption aligncenter&amp;quot;&amp;gt;
      &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/resource_devices_diagram2.png&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;wp-image-48078 size-full&amp;quot; src=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/resource_devices_diagram2.png&amp;quot; alt=&amp;quot;resource_devices_diagram2&amp;quot; width=&amp;quot;419&amp;quot; height=&amp;quot;157&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;

      &amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
        Dois dispositivos diferentes, cada um utilizando um resource de layout diferente.
      &amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;amp;nbsp;
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Como vimos antes, um dos maiores benefícios de usarmos a estrutura de resources do Android é a facilidade de manutenção e a capacidade de alterar os resources de acordo com características e configurações dos dispositivos. É por isso que temos essas variações de nomes de pastas. Por exemplo: a pasta &amp;lt;strong&amp;gt;values&amp;lt;/strong&amp;gt; guarda o arquivo &amp;lt;em&amp;gt;strings.xml&amp;lt;/em&amp;gt;, responsável pelas strings da aplicação, como nome e versão do App, título para cada Activity, URLs e qualquer mensagem ou texto que você usar, mas temos também a pasta &amp;lt;strong&amp;gt;values-es&amp;lt;/strong&amp;gt;, que também guarda um arquivo &amp;lt;em&amp;gt;strings.xml&amp;lt;/em&amp;gt; (com  as mesmas strings do arquivo anterior), mas que receberá uma prioridade maior, se o idioma do dispositivo for o inglês. Ou seja, o processo de tradução da aplicação se faz apenas colocando valores traduzidos dentro dessa variação da pasta value.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Resumindo: você pode mudar o nome da pasta para utilizar determinados resources em determinadas condições.
    &amp;lt;/p&amp;gt;

    &amp;lt;h1&amp;gt;
      Como escolher o nome da pasta dos resources?
    &amp;lt;/h1&amp;gt;

    &amp;lt;p&amp;gt;
      Se você está usando o Android Studio, o que eu recomendo fortemente (e ensino a instalar &amp;lt;a href=&amp;quot;http://mariovalney.com/aula-2-como-instalar-o-android-studio/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;aqui&amp;lt;/a&amp;gt;), a forma mais fácil de criar uma pasta de resource é clicar com o botão direito do mouse na pasta &amp;lt;strong&amp;gt;res/&amp;lt;/strong&amp;gt;, na guia &amp;lt;em&amp;gt;1. Project &amp;lt;/em&amp;gt;(imagem anterior) e ir em &amp;lt;strong&amp;gt;New &amp;gt; Android resource directory&amp;lt;/strong&amp;gt;.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Quando você clicar, irá abrir a janela abaixo:
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;amp;nbsp;
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/New-Resource-Directory.png&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;aligncenter size-full wp-image-48074&amp;quot; src=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/New-Resource-Directory.png&amp;quot; alt=&amp;quot;New Resource Directory&amp;quot; width=&amp;quot;843&amp;quot; height=&amp;quot;481&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      No primeiro campo, você pode alterar o nome do diretório (você não precisa digitar nada, pois a IDE irá completar o nome de acordo com as opções que você selecionar). Logo abaixo, você pode escolher o&amp;lt;strong&amp;gt; tipo de resource&amp;lt;/strong&amp;gt;.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Após escolher o tipo de resource, você deve selecionar um dos &amp;amp;#8220;qualificadores&amp;amp;#8221; à esquerda e clicar nas duas setas para a direita, que estão entre os dois quadros. Irá aparecer as opções de cada qualificador. Por exemplo, ao escolher &amp;lt;strong&amp;gt;UI Mode&amp;lt;/strong&amp;gt;, teremos a possibilidade de escolher entre &amp;lt;em&amp;gt;Portrait&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;Landscape&amp;lt;/em&amp;gt; e &amp;lt;em&amp;gt;Square&amp;lt;/em&amp;gt;:&amp;lt;em&amp;gt;&amp;lt;br /&amp;gt; &amp;lt;/em&amp;gt;
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/New-Resource-Directory-Final.png&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;aligncenter size-full wp-image-48077&amp;quot; src=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/New-Resource-Directory-Final.png&amp;quot; alt=&amp;quot;New Resource Directory Final&amp;quot; width=&amp;quot;810&amp;quot; height=&amp;quot;375&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Podemos escolher mais de um qualificador (como na imagem acima) e ao clicar nos itens da coluna da direita (Chosen qualifiers) podemos alterar as opções de cada um. No final, basta clicar em OK.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Você pode encontrar uma lista completa dos qualificadores, caso queira escolher o nome da pasta manualmente ou não esteja usando o Android Studio, na &amp;lt;a href=&amp;quot;http://developer.android.com/guide/topics/resources/providing-resources.html#table2&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;documentação do Android&amp;lt;/a&amp;gt;. Lembrando que a ordem dos qualificadores deve ser a mesma da tabela, ou seja, nomear uma pasta como &amp;lt;strong&amp;gt;drawable-hdpi-port &amp;lt;/strong&amp;gt;está errado e &amp;lt;strong&amp;gt;drawable-port-hdpi &amp;lt;/strong&amp;gt;está certo, pois o qualificador de orientação da tela (-port) vem antes do qualificador de densidade de píxel (-hdpi).
    &amp;lt;/p&amp;gt;

    &amp;lt;h1&amp;gt;
      Como acessar esses resources?
    &amp;lt;/h1&amp;gt;

    &amp;lt;p&amp;gt;
      OK. Já sabemos como organizar nossos arquivos e pastas e como podemos criar um App com a melhor compatibilidade possível. Agora é hora de descobrir como acessar esses arquivos.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Na verdade é bem simples: utilizaremos o ID de cada resource. E todos os IDs dos resources são definidos na sua classe &amp;lt;strong&amp;gt;R&amp;lt;/strong&amp;gt;, que a &amp;lt;em&amp;gt;aapt tool&amp;lt;/em&amp;gt; automaticamente gera.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Quando sua aplicação é compilada a &amp;lt;em&amp;gt;aapt tool &amp;lt;/em&amp;gt;gera a classe &amp;lt;strong&amp;gt;R &amp;lt;/strong&amp;gt;para os resources dentro da pasta &amp;lt;strong&amp;gt;res &amp;lt;/strong&amp;gt;e sub-classes para os tipos de resource. Além disso, para cada resource desse tipo é gerado um inteiro estático. Mas apesar da lasse &amp;lt;strong&amp;gt;R&amp;lt;/strong&amp;gt; conter todos os IDs, você não deve precisar olhar nela para acessar um resource, basta saber que um ID é composto pelo tipo e pelo nome do resource (sem extensão). Sendo assim, você já sabe que o ID do seu arquivo&amp;lt;em&amp;gt; activity_about.xml &amp;lt;/em&amp;gt;dentro da pasta layout é: &amp;lt;code&amp;gt;layout.activity_about&amp;lt;/code&amp;gt;.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Por fim, existem duas formas de acessar um resource utilizando esse ID:
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;lt;strong&amp;gt;No código: &amp;lt;/strong&amp;gt;usando o inteiro estático provido pela classe &amp;lt;strong&amp;gt;R&amp;lt;/strong&amp;gt;, assim: &amp;lt;code&amp;gt;R.layout.activity_about&amp;lt;/code&amp;gt;. Por exemplo:
    &amp;lt;/p&amp;gt;

    &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_about);
    }
&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;p&amp;gt;
      &amp;lt;strong&amp;gt;Em um arquivo XML: &amp;lt;/strong&amp;gt;usando uma sintaxe especial (@tipo/nome) usando o ID provido pela classe &amp;lt;strong&amp;gt;R&amp;lt;/strong&amp;gt;, assim: &amp;lt;code&amp;gt;@string/list_item_textview_title_default&amp;lt;/code&amp;gt;. Por exemplo:
    &amp;lt;/p&amp;gt;

    &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;
&amp;amp;lt;TextView
    android:id=&amp;quot;@+id/list_item_textview_title&amp;quot;
    android:layout_width=&amp;quot;wrap_content&amp;quot;
    android:layout_height=&amp;quot;wrap_content&amp;quot;
    android:text=&amp;quot;@string/app_credits&amp;quot;
    style=&amp;quot;@style/h1&amp;quot;/&amp;amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;h1&amp;gt;
      Conclusão
    &amp;lt;/h1&amp;gt;

    &amp;lt;p&amp;gt;
      A organização das pastas de resources do Android é bem simples e intuitiva e nos permite tornar nossa aplicação compatível com todos os tipos de dispositivos do mercado. Sendo assim, não temos desculpas para desenvolver aplicações cada vez melhores! Abraços e até a próxima!
    &amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>