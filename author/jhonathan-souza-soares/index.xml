<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jhonathan Souza Soares on Tableless</title>
    <link>https://tableless.github.io/hugo-public/author/jhonathan-souza-soares/index.xml</link>
    <description>Recent content in Jhonathan Souza Soares on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/author/jhonathan-souza-soares/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Criando listras com CSS3</title>
      <link>https://tableless.github.io/hugo-public/criando-listras-com-css3/</link>
      <pubDate>Thu, 15 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-listras-com-css3/</guid>
      <description>

&lt;p&gt;Cada vez mais, com o passar do tempo as ferramentas CSS3 aos poucos vem ganhando seu devido destaque. Com a constante atualização dos navegadores, a morte declarada do Windows XP, e novos dispositivos a cada dia, podemos finalmente colocar em projetos reais as funcionalidades, pelo menos algumas do CSS3.&lt;/p&gt;

&lt;p&gt;Anteriormente sempre que queríamos algo assim, era necessário a utilização de imagens, texturas ou dependendo do caso nem era possível. Agora com a criação de listras em CSS você poderá fazer de maneira fácil, simples e melhorar o desempenho do carregamento do seu código no browser.&lt;/p&gt;

&lt;p&gt;O início de tudo vem com a utilização CSS Gradientes quando foi falado inicialmente há 4 anos atrás sobre &lt;a title=&#34;http://tableless.com.br/gradientes-em-css/&#34; href=&#34;http://tableless.com.br/gradientes-em-css/&#34; target=&#34;_blank&#34;&gt;Gradientes em CSS&lt;/a&gt; e foi apresentado um guia de &lt;a title=&#34;http://tableless.com.br/como-usar-gradient-no-css-de-forma-consciente/&#34; href=&#34;http://tableless.com.br/como-usar-gradient-no-css-de-forma-consciente/&#34; target=&#34;_blank&#34;&gt;Como usar linear-gradient de maneira consciente &lt;/a&gt;fornecendo uma base para o que precisamos saber agora.&lt;/p&gt;

&lt;p&gt;Primeiro precisamos saber quais são os tipos de gradientes que podemos utilizar :&lt;/p&gt;

&lt;div id=&#34;attachment_42329&#34; style=&#34;width: 845px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img class=&#34;wp-image-42329 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/propriedade.jpg&#34; alt=&#34;propriedades &#34; width=&#34;835&#34; height=&#34;260&#34; srcset=&#34;uploads/2014/04/propriedade.jpg 835w, uploads/2014/04/propriedade-400x124.jpg 400w&#34; sizes=&#34;(max-width: 835px) 100vw, 835px&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Tabela explicativa das propriedades gradiente com CSS3
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;O &lt;a href=&#34;http://tableless.com.br/como-usar-gradient-no-css-de-forma-consciente/&#34; title=&#34;Como usar linear-gradient em CSS de forma consciente?&#34;&gt;Bernard de Luna escreveu um arquivo completo aqui no Tableless&lt;/a&gt; mostrando como usar o linear-gradient de forma consciente, vale a pena dar uma olhada para se familiarizar com cada tipo de gradiente. Neste post vamos utilizar basicamente a propriedade repeating-linear-gratient. Bom, chega de conversa e vamos entender inicialmente como podemos montar nosso fundo CSS.&lt;/p&gt;

&lt;h3 id=&#34;listras-diagonais-simples&#34;&gt;Listras Diagonais simples&lt;/h3&gt;

&lt;p&gt;Veja o seguinte exemplo :&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-42362&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/1-90g.jpg&#34; alt=&#34;listra-css&#34; width=&#34;295&#34; height=&#34;252&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Veja o código:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.listra {
background: repeating-linear-gradient(
90deg,
#FCFF7C,
#FCFF7C 10px,
#FFE13A 10px,
#FFE13A 20px
);
&lt;/pre&gt;

&lt;p&gt;A propriedade contém as seguintes informações o nível de inclinação ( em graus ) de qual será as listras, as cores que você deseja colocar e a largura das mesmas. Veja a mesma imagem só que com o nível de inclinação em 45 graus :&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-42361&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/1-45g.jpg&#34; alt=&#34;fundo-listras-css&#34; width=&#34;264&#34; height=&#34;249&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos analisar a imagem com um pouco mais de atenção :&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-42360&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/1-45b.jpg&#34; alt=&#34;listra-css-analise&#34; width=&#34;416&#34; height=&#34;416&#34; srcset=&#34;uploads/2014/04/1-45b.jpg 416w, uploads/2014/04/1-45b-400x400.jpg 400w&#34; sizes=&#34;(max-width: 416px) 100vw, 416px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver as dimensões de 10px em vermelho, a segunda lista iniciando com 20px e o grau de inclinação de 45º.&lt;/p&gt;

&lt;h3 id=&#34;listras-diagonais-gradiente&#34;&gt;Listras diagonais Gradiente&lt;/h3&gt;

&lt;p&gt;Se você fizer o background com uma listra padrão , e depois fazer metade das listras totalmente transparente ao invés de utilizar cores,você poderá implementar o efeito de gradiente na sua propriedade e fazer isso único elemento:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-42364&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/2-45g.jpg&#34; alt=&#34;listra-css-gradiente&#34; width=&#34;178&#34; height=&#34;162&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Veja seu código:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.listra {
background:
repeating-linear-gradient(
45deg,
transparent,
transparent 10px,
#ccc 10px,
#ccc 20px),
linear-gradient(
to bottom,
#fff,
#000
);}
&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Neste exemplo estou fazendo um fundo listrado com transparente e cinza, e utilizando a propriedade linear-gradient do branco ao preto cobrindo todas as listras. Viu como fica interessante?&lt;/p&gt;

&lt;h3 id=&#34;listras-sobre-uma-imagem&#34;&gt;Listras sobre uma imagem&lt;/h3&gt;

&lt;p&gt;Sim, isto mesmo! Podemos utilizar texturas, imagens que acabam dando um maior efeito ao nosso background, veja como é fácil fazer :&lt;/p&gt;

&lt;p&gt;Vamos analisar a seguinte imagem :&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-42365&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/3-45g.jpg&#34; alt=&#34;listra-css-com-imagem&#34; width=&#34;298&#34; height=&#34;162&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Veja o código equivalente :&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.listra {
background: repeating-linear-gradient(
45deg,
rgba(0, 0, 0, 0.2),
rgba(0, 0, 0, 0.2) 10px,
rgba(0, 0, 0, 0.3) 10px,
rgba(0, 0, 0, 0.3) 20px
),
url(textura.jpg);
}
);
&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Diante desta propriedade podemos analisar que inicialmente possuímos 45º de inclinação e desta vez, ao invés de utilizarmos cores no formado hexadecimal, utilizamos cores em modo rgba pois assim podemos colocar transparência (0.2 e 0.3) nas listras para que a mesma dê visibilidade a textura que foi colocada mais ao fundo da propriedade.&lt;/p&gt;

&lt;h3 id=&#34;listras-radiais&#34;&gt;Listras radiais&lt;/h3&gt;

&lt;p&gt;Bom, o CSS3 é uma ferramenta poderosa, não temos como duvidar disto, imagine criar o seguinte efeito:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-42363&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/1-360g.jpg&#34; alt=&#34;listra-imagem-radial&#34; width=&#34;274&#34; height=&#34;161&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Bom, isto é possível, veja só que simples:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.listra {
background: repeating-radial-gradient(
  circle,
  blue,
  blue 10px,
  #87A9FF 10px,
  #87A9FF 20px
);}

&lt;/pre&gt;

&lt;p&gt;A única diferença que ao invés de colocarmos a rotatividade em graus, adicionamos um círculo e o próprio CSS3 fez o resto!&lt;/p&gt;

&lt;p&gt;Bom, acaba por aqui? Claro que não, ainda tem muito o que se pode fazer apenas com estas propriedades, a autora deste blog por exemplo, criou um tabuleiro de xadrez só com estas propriedades, veja só : &lt;a href=&#34;http://lea.verou.me/2010/12/checkered-stripes-other-background-patterns-with-css3-gradients/&#34;&gt;http://lea.verou.me/2010/12/checkered-stripes-other-background-patterns-with-css3-gradients/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ficamos por aqui, espero que tenham gostado!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fazendo uma faxina no seu CSS</title>
      <link>https://tableless.github.io/hugo-public/fazendo-uma-faxina-seu-css/</link>
      <pubDate>Thu, 15 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/fazendo-uma-faxina-seu-css/</guid>
      <description>

&lt;p&gt;Sempre podemos discutir sobre como escrevemos CSS e também quais são as melhores práticas. Geralmente artigos sobre CSS agradam qualquer desenvolvedor independente da linguagem utilizada, já que é uma leitura fácil e o código costuma ser bem simples.&lt;/p&gt;

&lt;h3 id=&#34;a-origem-de-tudo&#34;&gt;A Origem de tudo&lt;/h3&gt;

&lt;p&gt;Já foi falado aqui no Tableless várias vezes sobre performance e velocidade de páginas. Um deles você encontra aqui no artigo que fala sobre a &lt;a title=&#34;Performance CSS&#34; href=&#34;http://tableless.com.br/melhorando-performance-css/&#34; target=&#34;_blank&#34;&gt;performance do seu CSS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Um ponto que sempre ganha destaque, é a velocidade e a &lt;a title=&#34;http://tableless.com.br/acelere-o-carregamento-de-suas-paginas/&#34; href=&#34;http://tableless.com.br/acelere-o-carregamento-de-suas-paginas/&#34; target=&#34;_blank&#34;&gt;performance no carregamento dos sites&lt;/a&gt;. Um dos principais pontos chaves para conseguir tal feito é diminuir ao máximo o tamanhos dos arquivos que são carregados no browser.&lt;/p&gt;

&lt;p&gt;Acredito que a  performance de CSS não é a principal causa de gerar lentidão e demora de um carregamento em um site, mas sempre devemos buscar por melhorias, alternativas que nos auxiliam a otimizar o desenvolvimento e enriquecer a performance do usuário.&lt;/p&gt;

&lt;h3 id=&#34;onde-mora-o-problema&#34;&gt;Onde mora o problema&lt;/h3&gt;

&lt;p&gt;Mas quando o assunto não trata só de como você utiliza o seu CSS e sim quando o assunto é sobre desperdício de tempo e gerando arquivos de folhas de estilos com seletores que nunca serão utilizados ou estão diminuindo a performance do CSS devemos considerar a repensar no nosso estilo de programação.O pior de tudo é que as vezes estamos fazendo nossos milhões de visitantes via desktop ou móvel pagarem por nossa preguiça e erros.&lt;/p&gt;

&lt;p&gt;Uma ótima ferramenta chamada &lt;strong&gt;Helium&lt;/strong&gt; está disponível para ajudar os desenvolvedores a detectar seletores em suas folhas de estilo que não estão sendo utilizados ou ainda estão mal formados que acabam prejudicando o CSS.&lt;/p&gt;

&lt;h3 id=&#34;vamos-à-parte-prática&#34;&gt;Vamos à parte prática :&lt;/h3&gt;

&lt;p&gt;Primeiramente você pode fazer o download dele aqui : &lt;a title=&#34;https://github.com/geuis/helium-css&#34; href=&#34;https://github.com/geuis/helium-css&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/geuis/helium-css&#34;&gt;https://github.com/geuis/helium-css&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ao fazer download, você poderá notar que nele conterá 2 exemplos já implementados que são de fácil entendimento. Mas mesmo assim iremos colocar aqui de forma simplificada:&lt;/p&gt;

&lt;p&gt;Comece incluindo um documento HTML em branco a referencia do script Helium para carregá-lo em sua página :&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&amp;lt;script type=&#34;text/javascript&#34; src=&#34;../helium.js&#34; onload=&#34;helium.init()&#34; async&amp;gt;&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Pronto!&lt;/p&gt;

&lt;p&gt;Repare que adicionei duas folhas de estilo na página pois a própria página que irei utilizar o Helium, será a página que utilizarei para testes.&lt;/p&gt;

&lt;p&gt;Veja como ficou minha página:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!doctype&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;

&amp;lt;link href=&#34;style/estilo.css&#34; media=&#34;all&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&amp;gt;
&amp;lt;link href=&#34;style/estilo2.css&#34; media=&#34;all&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&amp;gt;

&amp;lt;script type=&#34;text/javascript&#34; src=&#34;../helium.js&#34; onload=&#34;helium.init()&#34; async&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;p&gt;Realizando apenas estes dois passos você já configurou seu ambiente de testes e poderá executar a página no navegador. Assim que a página é carregada, é exibido ao usuário um textarea que pode ser utilizado como entrada de URL na qual ele deseja testar :&lt;/p&gt;

&lt;div id=&#34;attachment_42093&#34; style=&#34;width: 730px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/helium-passo-1.jpg&#34;&gt;&lt;img class=&#34;size-full wp-image-42093&#34; alt=&#34;Helium&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/helium-passo-1.jpg&#34; width=&#34;720&#34; height=&#34;257&#34; srcset=&#34;uploads/2014/04/helium-passo-1.jpg 720w, uploads/2014/04/helium-passo-1-400x142.jpg 400w&#34; sizes=&#34;(max-width: 720px) 100vw, 720px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Tela inicial Helium
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Caso você queira testar a própria página que foi carregada, assim como neste exemplo, bastar clicar  em &lt;strong&gt;‘Start’&lt;/strong&gt; que ele irá carregar os resultados :&lt;/p&gt;

&lt;div id=&#34;attachment_42094&#34; style=&#34;width: 730px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/helium-passo-2.jpg&#34;&gt;&lt;img class=&#34;size-full wp-image-42094&#34; alt=&#34;Helium&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/helium-passo-2.jpg&#34; width=&#34;720&#34; height=&#34;263&#34; srcset=&#34;uploads/2014/04/helium-passo-2.jpg 720w, uploads/2014/04/helium-passo-2-400x146.jpg 400w&#34; sizes=&#34;(max-width: 720px) 100vw, 720px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Tela de resultados Helium
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Com isto você poderá analisar que :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Seletores na cor verde não estão sendo utilizados&lt;/li&gt;
&lt;li&gt;Seletores na cor preta estão sendo utilizados&lt;/li&gt;
&lt;li&gt;Seletores na cor azul, não puderam ser testados devido que eles só são ativados com alguma ação do usuário, por isto teste manualmente depois.&lt;/li&gt;
&lt;li&gt;Seletores na cor vermelha estão mal formados e prejudicando seu CSS, por isso faça correção ou delete-os.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;finalizando&#34;&gt;Finalizando&lt;/h3&gt;

&lt;p&gt;A ferramenta apesar de ser bastante simples você pode testar inúmeras páginas e ganhar mais desempenho de carregamento dos seus sites melhorando a experiência do usuário.&lt;/p&gt;

&lt;p&gt;Um ponto importante que podemos ressaltar da ferramenta, que ela além de otimizar o seu CSS ela também realiza um testes dos seletores contidos, fazendo assim um teste de semântica nas suas folhas de estilo, garantindo assim maior robustez do seu código.&lt;/p&gt;

&lt;p&gt;Sempre podemos melhorar em algum ponto nossa escrita de código e talvez nessas ações simples que fazemos acabamos não só descobrindo possíveis melhorias no nosso código, mas também evoluímos profissionalmente conhecendo melhor a linguagem de estilos e seu comportamento na experiência do usuário.&lt;/p&gt;

&lt;p&gt;Espero que tenham gostado!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>