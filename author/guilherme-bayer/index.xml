<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guilherme Bayer on Tableless</title>
    <link>http://tableless.com.br/author/guilherme-bayer/index.xml</link>
    <description>Recent content in Guilherme Bayer on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/guilherme-bayer/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Manipulando o uso de classes com classList API</title>
      <link>http://tableless.com.br/manipulando-o-uso-de-classes-com-classlist-api/</link>
      <pubDate>Mon, 18 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/manipulando-o-uso-de-classes-com-classlist-api/</guid>
      <description>

&lt;p&gt;Uma tarefa muito simples de se fazer com o JQuery, é a troca e manipulação de classes nos elementos HTML. Talvez você não saiba, mas é tão fácil quanto fazer essas manipulações usando JavaScript puro. Para tanto, vamos usar a API classList do JavaScript. Assim como as conhecidas funções &lt;code&gt;addClass()&lt;/code&gt;, &lt;code&gt;removeClass()&lt;/code&gt;, &lt;code&gt;hasClass()&lt;/code&gt; e o &lt;code&gt;toggleClass()&lt;/code&gt; do nosso conhecido Jquery, possuímos métodos nativos que executam a mesma função.&lt;/p&gt;

&lt;h2 id=&#34;métodos-do-classlist&#34;&gt;Métodos do classList&lt;/h2&gt;

&lt;p&gt;O &lt;code&gt;classList&lt;/code&gt; conta com os seguinte métodos:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;add(&#39;class&#39;);
remove(&#39;class&#39;);
contains(&#39;class&#39;);
item(index);
toggle(&#39;class&#39;);
length;
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;add()&lt;/code&gt;, adiciona uma ou mais classes ao elemento.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var el = document.querySelector(&#39;element&#39;);
    el.classList.add(&#39;classOne&#39;, &#39;classTwo&#39;);
    console.log(el.classList); // [&#34;classOne&#34;, &#34;classTwo&#34;, value: &#34;classOne classTwo&#34;]
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;remove()&lt;/code&gt;, remove uma ou mais classes do elemento.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;el.classList.remove(&#39;classOne&#39;);
    console.log(el.classList); // [ &#34;classTwo&#34;, value: &#34;classTwo&#34;]
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;contains()&lt;/code&gt;, verifica se possui certa classe no elemento.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;if(el.classList.contains(&#39;classFour&#39;) == true) 
  console.log(&#39;Não possui a classe!&#39;); // Não possui a classe!
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;item()&lt;/code&gt;, retorna a classe que se encontra naquele índice.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;el.classList.item(0);
    console.log(el.classList.item(0)); // classTwo
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;toggle()&lt;/code&gt;, se a classe existir naquele elemento, ele a remove, se não existir ele a adiciona.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;el.classList.toggle(&#39;classThree&#39;)
console.log(el.classList); // [&#34;classTwo&#34;, &#34;classThree&#34;, value: &#34;classTwo classThree&#34;]

el.classList.toggle(&#39;classThree&#39;)
console.log(el.classList); // [&#34;classTwo&#34;, value: &#34;classTwo&#34;]
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;length&lt;/code&gt;, retorna a quantidade de classes naquele elemento.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;el.classList.length;
console.log(el.classList.length); // 2
&lt;/pre&gt;

&lt;h2 id=&#34;quanto-ao-suporte&#34;&gt;Quanto ao suporte&lt;/h2&gt;

&lt;p&gt;A classList API possui um excelente suporte aos browsers modernos, e apenas o internet explorer com suporte a versão +10, para algo mais detalhado, &lt;a href=&#34;http://caniuse.com/#feat=classlist&#34;&gt;http://caniuse.com/#feat=classlist&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>