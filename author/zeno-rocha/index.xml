<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zeno Rocha on Tableless</title>
    <link>http://tableless.com.br/author/zeno-rocha/index.xml</link>
    <description>Recent content in Zeno Rocha on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/zeno-rocha/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Os Segredos do Chrome DevTools</title>
      <link>http://tableless.com.br/os-segredos-chrome-devtools/</link>
      <pubDate>Thu, 04 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/os-segredos-chrome-devtools/</guid>
      <description>&lt;p&gt;Nos últimos anos, as tecnologias client-side como HTML, CSS e JavaScript evoluíram de uma maneira absurda. Uma avalanche de APIs vieram com o HTML5, dezenas de novas propriedades foram adicionadas ao CSS3 e uma série de novidades chegaram no JavaScript a partir das novas especificações do ECMAScript.&lt;/p&gt;

&lt;p&gt;Consequentemente, muita coisa no workflow de desenvolvimento web também mudou. Debugar códigos JS usando &lt;code&gt;alert&lt;/code&gt;? Ir e voltar no navegador para ver como ficaram as mudanças de CSS? Redimensionar a página para simular responsive design? Esse tempo já passou.&lt;/p&gt;

&lt;p&gt;A chegada do famigerado &lt;a href=&#34;http://getfirebug.com/&#34;&gt;Firebug&lt;/a&gt; há alguns anos atrás, abriu portas para um novo conjunto de ferramentas como &lt;a href=&#34;https://developer.chrome.com/devtools&#34;&gt;Chrome DevTools&lt;/a&gt;, &lt;a href=&#34;http://www.opera.com/dragonfly/&#34;&gt;Opera Dragonfly&lt;/a&gt; e &lt;a href=&#34;https://developer.mozilla.org/en/docs/Tools&#34;&gt;Firefox DevTools&lt;/a&gt; que auxiliam e muito a vida dos desenvolvedores web.&lt;/p&gt;

&lt;p&gt;Nessa série oficial da &lt;em&gt;Google&lt;/em&gt;, &lt;strong&gt;gravada em português e produzida por brasileiros&lt;/strong&gt;, você vai ver em 10 vídeos como tirar proveito do Chrome DevTools para manipular elementos no DOM, identificar memory leaks, debugar código JavaScript, emular dispositivos móveis, otimizar o waterfall de requisições, e muito mais.&lt;/p&gt;

&lt;p&gt;Se você se interessa por produtividade e qualidade no desenvolvimento de aplicações web, não deixe de assistir todos os vídeos!&lt;/p&gt;

&lt;p&gt;[youtube &lt;a href=&#34;http://www.youtube.com/watch?v=videoseries?list=PLiGzvgwA5Gmgnq5vPjJxW52hDiX3ndL53&#34;&gt;http://www.youtube.com/watch?v=videoseries?list=PLiGzvgwA5Gmgnq5vPjJxW52hDiX3ndL53&lt;/a&gt;]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dicas do Zeno – Maio</title>
      <link>http://tableless.com.br/dicas-do-zeno-maio-2/</link>
      <pubDate>Tue, 08 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/dicas-do-zeno-maio-2/</guid>
      <description>

&lt;p&gt;Sempre tento me atualizar com o que está rolando no mundo do desenvolvimento front-end. Normalmente seleciono os melhores links para publicar na &lt;a href=&#34;http://braziljs.org&#34;&gt;BrazilJS Weekly&lt;/a&gt; ou para discutir no podcast &lt;a href=&#34;http://zofe.com.br&#34;&gt;Zone of Front-Enders&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mas sempre senti que faltava um lugar para divulgar coisas que vão além só de notícias, como por exemplo quais as ferramentas mais me ajudaram nesse mês. Essa série reune o que de melhor eu encontrei no mês.&lt;/p&gt;

&lt;h2 id=&#34;melhor-projeto-pure-3&#34;&gt;Melhor projeto: &lt;a href=&#34;http://purecss.io/&#34;&gt;Pure&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://purecss.io/&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-37530&#34; alt=&#34;pure&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/05/pure.jpg&#34; width=&#34;600&#34; height=&#34;211&#34; srcset=&#34;uploads/2013/05/pure.jpg 600w, uploads/2013/05/pure-329x115.jpg 329w, uploads/2013/05/pure-588x206.jpg 588w&#34; sizes=&#34;(max-width: 600px) 100vw, 600px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Essa foi a semana dos lançamentos de projetos open source das grandes empresas. A &lt;strong&gt;Adobe&lt;/strong&gt; lançou um framework de CSS chamado &lt;a href=&#34;http://topcoat.io/&#34;&gt;Topcoat&lt;/a&gt;. O &lt;strong&gt;Facebook&lt;/strong&gt; lançou o &lt;a href=&#34;http://facebook.github.io/react/&#34;&gt;React&lt;/a&gt;, sua biblioteca de JavaScript usada em serviços como Instagram. E, por fim, a &lt;strong&gt;Yahoo!&lt;/strong&gt; apresentou o &lt;a href=&#34;http://purecss.io/&#34;&gt;Pure&lt;/a&gt;, um conjunto de módulos de CSS.&lt;/p&gt;

&lt;p&gt;Isso não quer dizer que você deva abandonar seu amado &lt;a href=&#34;http://twitter.github.io/bootstrap&#34;&gt;Twitter Bootstrap&lt;/a&gt;, cada um deles tem objetivo um pouquinho diferente. Mas o que mais me chamou atenção foi o Pure que, apesar de não ser um projeto maduro ainda, tem potencial para revolucionar a UI dos produtos da Yahoo!.&lt;/p&gt;

&lt;h2 id=&#34;melhor-palestra-sempre-tento-me-atualizar-com-o-que-está-rolando-no-mundo-do-desenvolvimento-front-end-normalmente-seleciono-os-melhores-links-para-publicar-na-braziljs-weekly-1-ou-para-discutir-no-podcast-zone-of-front-enders-2&#34;&gt;Melhor palestra: [Sempre tento me atualizar com o que está rolando no mundo do desenvolvimento front-end. Normalmente seleciono os melhores links para publicar na &lt;a href=&#34;http://braziljs.org&#34;&gt;BrazilJS Weekly&lt;/a&gt; ou para discutir no podcast &lt;a href=&#34;http://zofe.com.br&#34;&gt;Zone of Front-Enders&lt;/a&gt;.&lt;/h2&gt;

&lt;p&gt;Mas sempre senti que faltava um lugar para divulgar coisas que vão além só de notícias, como por exemplo quais as ferramentas mais me ajudaram nesse mês. Essa série reune o que de melhor eu encontrei no mês.&lt;/p&gt;

&lt;h2 id=&#34;melhor-projeto-pure-3-1&#34;&gt;Melhor projeto: &lt;a href=&#34;http://purecss.io/&#34;&gt;Pure&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://purecss.io/&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-37530&#34; alt=&#34;pure&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/05/pure.jpg&#34; width=&#34;600&#34; height=&#34;211&#34; srcset=&#34;uploads/2013/05/pure.jpg 600w, uploads/2013/05/pure-329x115.jpg 329w, uploads/2013/05/pure-588x206.jpg 588w&#34; sizes=&#34;(max-width: 600px) 100vw, 600px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Essa foi a semana dos lançamentos de projetos open source das grandes empresas. A &lt;strong&gt;Adobe&lt;/strong&gt; lançou um framework de CSS chamado &lt;a href=&#34;http://topcoat.io/&#34;&gt;Topcoat&lt;/a&gt;. O &lt;strong&gt;Facebook&lt;/strong&gt; lançou o &lt;a href=&#34;http://facebook.github.io/react/&#34;&gt;React&lt;/a&gt;, sua biblioteca de JavaScript usada em serviços como Instagram. E, por fim, a &lt;strong&gt;Yahoo!&lt;/strong&gt; apresentou o &lt;a href=&#34;http://purecss.io/&#34;&gt;Pure&lt;/a&gt;, um conjunto de módulos de CSS.&lt;/p&gt;

&lt;p&gt;Isso não quer dizer que você deva abandonar seu amado &lt;a href=&#34;http://twitter.github.io/bootstrap&#34;&gt;Twitter Bootstrap&lt;/a&gt;, cada um deles tem objetivo um pouquinho diferente. Mas o que mais me chamou atenção foi o Pure que, apesar de não ser um projeto maduro ainda, tem potencial para revolucionar a UI dos produtos da Yahoo!.&lt;/p&gt;

&lt;h2 id=&#34;melhor-palestra-7&#34;&gt;Melhor palestra:]&lt;a href=&#34;http://afabbro.github.io/jsconf2013/&#34;&gt;7&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://afabbro.github.io/jsconf2013/&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-37529&#34; alt=&#34;Screen-Shot-2013-05-31-at-11.46.21-AM&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/05/Screen-Shot-2013-05-31-at-11.46.21-AM.jpg&#34; width=&#34;600&#34; height=&#34;259&#34; srcset=&#34;uploads/2013/05/Screen-Shot-2013-05-31-at-11.46.21-AM.jpg 600w, uploads/2013/05/Screen-Shot-2013-05-31-at-11.46.21-AM-329x142.jpg 329w, uploads/2013/05/Screen-Shot-2013-05-31-at-11.46.21-AM-588x253.jpg 588w&#34; sizes=&#34;(max-width: 600px) 100vw, 600px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Além do &lt;a href=&#34;https://developers.google.com/events/io/&#34;&gt;Google I/O&lt;/a&gt; que mostrou coisas absurdas, outra conferência importante para o mundo do JavaScript está acontecendo nesse momento, é a &lt;a href=&#34;http://2013.jsconf.us/&#34;&gt;JSConf US&lt;/a&gt; na Flórida.&lt;/p&gt;

&lt;p&gt;Inúmeros desenvolvedores palestraram por lá, mas eu gostaria de destacar a palestra da &lt;a href=&#34;http://twitter.com/angelinamagnum&#34;&gt;Angelina Fabbro&lt;/a&gt;, que inclusive virá ao Brasil para &lt;a href=&#34;http://2013.jsconfbr.org/&#34;&gt;JSConf BR&lt;/a&gt;. O tema da palestra foi como ir de iniciante à expert.&lt;/p&gt;

&lt;h2 id=&#34;melhor-artigo-a-title-caio-gondim-href-http-loopinfinito-com-br-2013-05-28-css-position-sticky-rel-author-caio-gondim-a&#34;&gt;Melhor artigo: &lt;a title=&#34;Caio Gondim&#34; href=&#34;http://loopinfinito.com.br/2013/05/28/css-position-sticky/&#34; rel=&#34;author&#34;&gt;Caio Gondim&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://loopinfinito.com.br/2013/05/28/css-position-sticky/&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-37528&#34; alt=&#34;Untitled-1&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/05/Untitled-1.jpg&#34; width=&#34;600&#34; height=&#34;282&#34; srcset=&#34;uploads/2013/05/Untitled-1.jpg 600w, uploads/2013/05/Untitled-1-329x154.jpg 329w, uploads/2013/05/Untitled-1-588x276.jpg 588w&#34; sizes=&#34;(max-width: 600px) 100vw, 600px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Um das novas propriedades do CSS que eu mais estou animado é a &lt;code&gt;position: sticky&lt;/code&gt;. Ela aplica um efeito de &lt;code&gt;position: fixed&lt;/code&gt; quando você atinge determina posição Y no scroll da página, coisa que antes você só conseguia simular com um pouquinho de JavaScript.&lt;/p&gt;

&lt;p&gt;O &lt;a href=&#34;http://loopinfinito.com.br/&#34;&gt;Loop Infinito&lt;/a&gt; foi lá e explicou em &lt;em&gt;pt-br&lt;/em&gt; como funciona.&lt;/p&gt;

&lt;h2 id=&#34;e-você&#34;&gt;E você?&lt;/h2&gt;

&lt;p&gt;Quais foram os melhores projetos, palestras, artigos desse mês?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como perder peso (no browser)</title>
      <link>http://tableless.com.br/como-perder-peso-no-browser/</link>
      <pubDate>Fri, 23 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/como-perder-peso-no-browser/</guid>
      <description>

&lt;p&gt;Nós desenvolvedores falamos tanto das novidades do HTML5, CSS3, EcmaScript 6 que acabamos esquecendo de falar de outras coisas também muito importantes, mas que não são tão novidade assim, como performance.&lt;/p&gt;

&lt;p&gt;Depois de muito esforço, finalmente lançamos um guia definitivo sobre o assunto chamado &lt;a href=&#34;http://browserdiet.com&#34;&gt;browserdiet.com&lt;/a&gt; e vim compartilhar um pouco da experiência de ter liderado esse projeto irado.&lt;/p&gt;

&lt;h2 id=&#34;motivação&#34;&gt;Motivação&lt;/h2&gt;

&lt;p&gt;O ano de 2012 foi um ano bem diferente pra mim, passei &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt; dele viajando e me deparei com muita conexão ruim em hotel e aeroporto. Isso me deixava muito irritado. E é claro que eu sempre xingava o hotel/aeroporto, até perceber que a culpa na verdade é nossa.&lt;/p&gt;

&lt;p&gt;Nós desenvolvedores somos egoístas. Passamos o dia todo no escritório com uma alta velocidade de conexão e esquecemos que existem outras pessoas no mundo enfrentando velocidades bem diferentes daquela.&lt;/p&gt;

&lt;h2 id=&#34;o-início&#34;&gt;O Início&lt;/h2&gt;

&lt;p&gt;Comecei a estudar mais sobre performance para escrever &lt;a href=&#34;http://zenorocha.com/monografia/&#34;&gt;minha monografia&lt;/a&gt; e me deparei com o seguinte cenário. Em inglês, excelentes referências como os livros &lt;a href=&#34;http://www.amazon.com/High-Performance-Web-Sites-Essential/dp/0596529309&#34;&gt;High Performance Websites&lt;/a&gt; e &lt;a href=&#34;http://www.amazon.com/Even-Faster-Web-Sites-Performance/dp/0596522304/ref=sr_1_1&#34;&gt;Even Faster Web Sites&lt;/a&gt;, ambos do &lt;a href=&#34;http://stevesouders.com/&#34;&gt;Steve Souders&lt;/a&gt;. Além, é claro, dos guias da &lt;a href=&#34;http://developer.yahoo.com/performance/rules.html&#34;&gt;Yahoo!&lt;/a&gt; e &lt;a href=&#34;https://developers.google.com/speed/docs/best-practices/rules_intro&#34;&gt;Google&lt;/a&gt;. Já em português, uma dezena de blogposts soltos por aí.&lt;/p&gt;

&lt;p&gt;Pensei: &amp;#8220;E se eu fizesse um guia foda de performance voltado pra comunidade?&amp;#8221; Mas não fazia sentido fazer aquilo sozinho, então de pouquinho em pouquinho fui conversando com uns amigos.&lt;/p&gt;

&lt;h2 id=&#34;concepção&#34;&gt;Concepção&lt;/h2&gt;

&lt;p&gt;Uma coisa estava muito clara pra mim, queria fazer um projeto divertido.&lt;/p&gt;

&lt;p&gt;Convenci primeiro a designer &lt;a href=&#34;http://www.brizabueno.com/&#34;&gt;Briza Bueno&lt;/a&gt; &lt;em&gt;(Americanas.com)&lt;/em&gt; a me ajudar. Ela elaborou uma identidade muito mais divertida do que aqueles guias chatos que existem hoje. Isso tudo com base nas ilustrações do &lt;a href=&#34;http://myextralife.com/56geeks/&#34;&gt;Scott Johnson&lt;/a&gt;, a quem eu pedi autorização para utilizar as imagens.&lt;/p&gt;

&lt;p&gt;Depois chegou a hora de elaborar a estrutura desse site, nessa parte o &lt;a href=&#34;http://irae.pro.br&#34;&gt;Iraê Lambert&lt;/a&gt; &lt;em&gt;(Yahoo!)&lt;/em&gt; me deu uma mão escrevendo um static generator em Python. Só que eu não dominava aquele código e as barreiras que eu encontrava por não saber manipular aquilo foram me afastando do projeto, ao mesmo tempo em que outras ideias iam surgindo.&lt;/p&gt;

&lt;p&gt;Resultado: o projeto ficou parado por 1 ano até que eu decidi retomar reescrevendo todo código usando um outro static generator em Node.JS chamado &lt;a href=&#34;http://docpad.org&#34;&gt;DocPad&lt;/a&gt;. Como todo projeto open source, se você quiser fazer algo que tenha a colaboração das pessoas precisa eliminar o maior número de barreiras possíveis. Por isso, inspirado no &lt;a href=&#34;http://html5please.com/&#34;&gt;HTML5 Please&lt;/a&gt;, decidi que todas as dicas seriam escritas no formato mais simples do planeta, em &lt;a href=&#34;http://pt.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conteúdo&#34;&gt;Conteúdo&lt;/h2&gt;

&lt;p&gt;Design e implementação estavam prontos, só faltava o que realmente importa, o conteúdo. Convidei então grandes amigos que enfrentam muitos desafios de performance no seu dia-a-dia, &lt;a href=&#34;https://github.com/davidsonfellipe&#34;&gt;Davidson Fellipe&lt;/a&gt; &lt;em&gt;(Globo.com)&lt;/em&gt;, &lt;a href=&#34;https://github.com/keppelen&#34;&gt;Giovanni Keppelen&lt;/a&gt; &lt;em&gt;(Peixe Urbano)&lt;/em&gt; e &lt;a href=&#34;https://github.com/jaydson&#34;&gt;Jaydson Gomes&lt;/a&gt; &lt;em&gt;(Terra)&lt;/em&gt;. As categorias iniciais divididas entre nós foram HTML, CSS, JavaScript e jQuery.&lt;/p&gt;

&lt;p&gt;Meu eterno dilema entre português e inglês também persistia nesse projeto. Cheguei a comprar o pequenino domínio &lt;a href=&#34;http://comoperderpesonobrowser.com.br&#34;&gt;comoperderpesonobrowser.com.br&lt;/a&gt;, mas ele claramente não funcionaria para um conteúdo em inglês também. Por isso, optei por algo mais curto e universal.&lt;/p&gt;

&lt;h2 id=&#34;revisão&#34;&gt;Revisão&lt;/h2&gt;

&lt;p&gt;Depois de muito aprimoramento resolvi convidar outros caras sinistros para revisarem, como o &lt;a href=&#34;https://github.com/marcelduran&#34;&gt;Marcel Duran&lt;/a&gt; &lt;em&gt;(Twitter)&lt;/em&gt;, &lt;a href=&#34;https://github.com/miketaylr&#34;&gt;Mike Taylor&lt;/a&gt; &lt;em&gt;(Opera)&lt;/em&gt;, &lt;a href=&#34;https://github.com/mangini&#34;&gt;Renato Mangini&lt;/a&gt; &lt;em&gt;(Google)&lt;/em&gt; e &lt;a href=&#34;https://github.com/sergiolopes&#34;&gt;Sérgio Lopes&lt;/a&gt; &lt;em&gt;(Caelum)&lt;/em&gt;. Todos ficaram animados e contribuiram insanamente. O legal foi que a discussão não ficou apenas na parte do conteúdo, questões relativas ao código do site foram extremamente debatidas como usar &lt;a href=&#34;https://github.com/zenorocha/browser-diet/issues/40&#34;&gt;CSS Sprites vs Lazy Load&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;lançamento&#34;&gt;Lançamento&lt;/h2&gt;

&lt;p&gt;Eu estava planejando lançar esse projeto no mínimo em Abril. Só que quando vi que os primeiros colaboradores (Briza, Davidson, Giovanni, e Jaydson) do projeto estariam presentes no &lt;a href=&#34;http://riojs.org&#34;&gt;Rio.JS&lt;/a&gt;, mudei o tema da minha palestra e comecei a correr contra o tempo.&lt;/p&gt;

&lt;p&gt;Felizmente deu tudo certo e lançamos o projeto!&lt;/p&gt;

&lt;p&gt;O resultado final você pode conferir em: &lt;a href=&#34;http://browserdiet.com&#34;&gt;browserdiet.com&lt;/a&gt;. E o código fonte, como sempre, está &lt;a href=&#34;https://github.com/zenorocha/browser-diet&#34;&gt;aberto no Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS: Os &lt;a href=&#34;https://speakerdeck.com/zenorocha/como-perder-peso-no-browser/&#34;&gt;slides também estão online&lt;/a&gt; para quem quiser conferir.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão?&lt;/h2&gt;

&lt;p&gt;Estou bem animado para ver como a comunidade vai receber e se beneficiar desse aglomerado de dicas iradas que preparamos.&lt;/p&gt;

&lt;p&gt;E aí, vamos fazer uma web mais rápida?&lt;/p&gt;

&lt;h2 id=&#34;reações&#34;&gt;Reações&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;iMasters &amp;#8211; &lt;a href=&#34;http://imasters.com.br/noticia/guia-que-conscientiza-desenvolvedores-sobre-a-importancia-da-performance-e-lancado/&#34;&gt;Guia que conscientiza desenvolvedores sobre a importância da performance é lançado&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;
  &lt;p&gt;
    love this new project: &lt;a title=&#34;http://browserdiet.com&#34; href=&#34;http://t.co/u8FWpD5mW0&#34;&gt;browserdiet.com&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    — Stoyan Stefanov (@stoyanstefanov) &lt;a href=&#34;https://twitter.com/stoyanstefanov/status/311258820800303104&#34;&gt;March 11, 2013&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Stoyan Stefanov, Engineer &amp;#8211; Facebook&lt;/em&gt;&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;
  &lt;p&gt;
    How to lose weight in the browser — the definitive front-end performance guide: &lt;a title=&#34;http://browserdiet.com/&#34; href=&#34;http://t.co/YqRgmFvipm&#34;&gt;browserdiet.com&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    — Mathias Bynens (@mathias) &lt;a href=&#34;https://twitter.com/mathias/status/311193207327293440&#34;&gt;March 11, 2013&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Mathias Bynens, Web Developer &amp;#8211; Freelance&lt;/em&gt;&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;
  &lt;p&gt;
    Some of Brazil&amp;#8217;s brightest front-end devs created and just launched &lt;a title=&#34;http://browserdiet.com/&#34; href=&#34;http://t.co/8FNPhsjzQx&#34;&gt;browserdiet.com&lt;/a&gt;. Check it out!
  &lt;/p&gt;
  
  &lt;p&gt;
    — Mike Taylor (@miketaylr) &lt;a href=&#34;https://twitter.com/miketaylr/status/311253455647952897&#34;&gt;March 11, 2013&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Mike Taylor, Web Opener &amp;#8211; Opera&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dicas do Zeno – Fevereiro</title>
      <link>http://tableless.com.br/dicas-do-zeno-fevereiro/</link>
      <pubDate>Thu, 28 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/dicas-do-zeno-fevereiro/</guid>
      <description>

&lt;p&gt;Sempre tento me atualizar com o que está rolando no mundo do desenvolvimento front-end. Normalmente seleciono os melhores links para publicar na &lt;a href=&#34;http://braziljs.org&#34;&gt;BrazilJS Weekly&lt;/a&gt; ou para discutir no podcast &lt;a href=&#34;http://zofe.com.br&#34;&gt;Zone of Front-Enders&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mas sempre senti que faltava um lugar para divulgar coisas que vão além só de notícias, como por exemplo quais as ferramentas mais me ajudaram nesse mês. Por isso, estou começando essa série que vai reunir o que de melhor eu encontrei no mês.&lt;/p&gt;

&lt;p&gt;Espero que vocês gostem 🙂&lt;/p&gt;

&lt;h2 id=&#34;melhor-projeto-docpad-3&#34;&gt;Melhor projeto: &lt;a href=&#34;http://docpad.org&#34;&gt;Docpad&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://docpad.org&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/02/doc.jpg&#34; alt=&#34;doc&#34; width=&#34;610&#34; height=&#34;156&#34; class=&#34;aligncenter size-full wp-image-11841&#34; srcset=&#34;uploads/2013/02/doc.jpg 610w, uploads/2013/02/doc-329x84.jpg 329w, uploads/2013/02/doc-588x150.jpg 588w&#34; sizes=&#34;(max-width: 610px) 100vw, 610px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Esse deveria ser eleito o projeto open source do ano, isso sim! O Docpad, pra quem não conhece, é um gerador estático feito em NodeJS. Ele é bem parecido com o &lt;a href=&#34;https://github.com/mojombo/jekyll&#34;&gt;Jekyll&lt;/a&gt;, projeto criado pelos caras do Github em Ruby, só que na minha opinião muito mais completo. Enquanto que o Jekyll é focado na simplicidade para criar blogs estáticos, o Docpad é uma solução muito mais completa para criar qualquer tipo de site.&lt;/p&gt;

&lt;p&gt;Eu tenho que criar vergonha na cara para escrever um artigo completo sobre essa ferramenta que tem me ajudado tanto, mas enquanto isso não acontece, se você quiser entender como funciona o workflow de um projeto feito em Docpad, pode dar uma olhada &lt;a href=&#34;http://www.youtube.com/watch?v=EI99oZI3nKY&#34;&gt;nesse vídeo&lt;/a&gt; que eu fiz para o &lt;a href=&#34;http://github.com/braziljs/conf-boilerplate&#34;&gt;ConfBoilerplate&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;melhor-palestra-joshua-davis-7&#34;&gt;Melhor palestra: &lt;a href=&#34;http://www.youtube.com/watch?v=LJS4fBjdPM4&#34;&gt;Joshua Davis&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=LJS4fBjdPM4&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/02/joshuaa.jpg&#34; alt=&#34;joshuaa&#34; width=&#34;610&#34; height=&#34;336&#34; class=&#34;aligncenter size-full wp-image-11845&#34; srcset=&#34;uploads/2013/02/joshuaa.jpg 610w, uploads/2013/02/joshuaa-305x168.jpg 305w, uploads/2013/02/joshuaa-562x310.jpg 562w&#34; sizes=&#34;(max-width: 610px) 100vw, 610px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Esse mês aconteceu uma das conferências mais importantes do ano, a &lt;a href=&#34;http://w3.org/conf/&#34;&gt;W3C Conf&lt;/a&gt; em São Francisco.&lt;/p&gt;

&lt;p&gt;Pessoas do mundo inteiro debateram tópicos relacionados aos padrões abertos dentre eles &lt;a href=&#34;https://twitter.com/joshuadavis&#34;&gt;Joshua Davis&lt;/a&gt;, um exemplo de profissional que conseguiu juntar arte com tecnologia usando ActionScript e JavaScript, sempre de forma irreverente.&lt;/p&gt;

&lt;p&gt;[youtube &lt;a href=&#34;http://www.youtube.com/watch?v=LJS4fBjdPM4&amp;amp;w=610&amp;amp;h=470&#34;&gt;http://www.youtube.com/watch?v=LJS4fBjdPM4&amp;amp;w=610&amp;amp;h=470&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Além da palestra dele, tiveram outras igualmente incríveis como a da &lt;a href=&#34;http://www.youtube.com/watch?v=3ikye7Qc7Ak&#34;&gt;Lea Verou&lt;/a&gt; e muitas outras. Recomendo muito assistir &lt;a href=&#34;http://www.youtube.com/user/W3Conf?feature=watch&#34;&gt;todas elas&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;melhor-artigo-sérgio-lopes-12&#34;&gt;Melhor artigo: &lt;a href=&#34;http://sergiolopes.org/diretorio-design-responsivo/&#34;&gt;Sérgio Lopes&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://sergiolopes.org/diretorio-design-responsivo/&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/02/sergio.jpg&#34; alt=&#34;sergio&#34; width=&#34;610&#34; height=&#34;118&#34; class=&#34;aligncenter size-full wp-image-11861&#34; srcset=&#34;uploads/2013/02/sergio.jpg 610w, uploads/2013/02/sergio-329x63.jpg 329w, uploads/2013/02/sergio-588x113.jpg 588w&#34; sizes=&#34;(max-width: 610px) 100vw, 610px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O Sérgio montou uma lista absurdamente completa de conteúdo sobre Responsive Web Design, tudo em português. Lá você encontra os melhores artigos, fóruns, palestras, livros, cursos, enfim se você quer aprender Responsive Web Design aquelas são as melhores referências.&lt;/p&gt;

&lt;h2 id=&#34;melhor-extensão-pocket-13&#34;&gt;Melhor extensão: &lt;a href=&#34;http://getpocket.com/&#34;&gt;Pocket&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://getpocket.com/&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/02/pocket.jpg&#34; alt=&#34;pocket&#34; width=&#34;610&#34; height=&#34;361&#34; class=&#34;aligncenter size-full wp-image-11847&#34; srcset=&#34;uploads/2013/02/pocket.jpg 610w, uploads/2013/02/pocket-283x168.jpg 283w, uploads/2013/02/pocket-523x310.jpg 523w&#34; sizes=&#34;(max-width: 610px) 100vw, 610px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Todos os dias me deparo com dezenas de artigos legais, mas nem sempre posso ler eles naquele exato momento. Ano passado encontrei uma maneira inteligente de guardar esses artigos para ler depois, chamada Read it Later. Esse projeto mudou de nome e hoje se chama Pocket.&lt;/p&gt;

&lt;p&gt;Basicamente você instala essa extensão no navegador e assim que encontrar um artigo legal clica em um botão que irá guardar aquele link pra você. Depois, quando estiver com tempo (no meu caso quando estou no avião), você consegue ler esse artigo do seu computador, smartphone ou tablet.&lt;/p&gt;

&lt;h2 id=&#34;e-você&#34;&gt;E você?&lt;/h2&gt;

&lt;p&gt;Quais foram os melhores projetos, palestras, artigos e extensões desse mês?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bye Zen Coding, Bem-vindo Emmet!</title>
      <link>http://tableless.com.br/bye-zen-coding-bem-vindo-emmet/</link>
      <pubDate>Mon, 19 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/bye-zen-coding-bem-vindo-emmet/</guid>
      <description>

&lt;p&gt;Durante anos os ninjas do front-end utilizaram o Zen Coding para produzir seus sites e aplicativos de uma maneira muito mais rápida que os pobres seres humanos normais. Agora um novo plugin vem para o substituir e dar ainda mais agilidade no desenvolvimento de HTML e CSS.&lt;/p&gt;

&lt;p&gt;Conheça-o a seguir, afinal um vídeo fala mais que mil palavras.&lt;/p&gt;

&lt;p&gt;[youtube &lt;a href=&#34;http://www.youtube.com/watch?v=_ljpbbqYyWo&amp;amp;w=720&amp;amp;h=422&#34;&gt;http://www.youtube.com/watch?v=_ljpbbqYyWo&amp;amp;w=720&amp;amp;h=422&lt;/a&gt;]&lt;/p&gt;

&lt;h2 id=&#34;lista-de-links&#34;&gt;Lista de links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;00:35 &amp;#8211; &lt;a href=&#34;http://docs.emmet.io/&#34;&gt;Emmet Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;00:40 &amp;#8211; &lt;a href=&#34;http://code.google.com/p/zen-coding/&#34;&gt;Zen Coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;01:30 &amp;#8211; &lt;a href=&#34;http://wbond.net/sublime_packages/package_control&#34;&gt;Sublime Package Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;07:50 &amp;#8211; &lt;a href=&#34;http://docs.emmet.io/cheat-sheet/&#34;&gt;Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tudo que você gostaria de saber sobre plugins jQuery e ninguém teve paciência de explicar</title>
      <link>http://tableless.com.br/tudo-que-voce-gostaria-de-saber-sobre-plugins-jquery-e-ninguem-teve-paciencia-de-explicar/</link>
      <pubDate>Fri, 02 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/tudo-que-voce-gostaria-de-saber-sobre-plugins-jquery-e-ninguem-teve-paciencia-de-explicar/</guid>
      <description>

&lt;p&gt;Então quer dizer que você anda brincando com jQuery. Volta e meia utiliza uns plugins que mais parecem mágica e se duvidar até se aventurou em criar o seu próprio, acertei?&lt;/p&gt;

&lt;p&gt;Acontece que, caso você já saiba desenvolver os seus, talvez possam existir melhores formas de escrevê-lo. Será que você está seguindo as melhores práticas? Será que realmente entende o que está acontecendo por trás de cada linha?&lt;/p&gt;

&lt;p&gt;Hoje vou tentar responder as dúvidas mais frequentes, explorando as melhores práticas para se construir um plugin. E no fim lhe mostrar um padrão interessante que você pode seguir agora que já entendeu os conceitos.&lt;/p&gt;

&lt;p&gt;A ideia aqui não é simplesmente mostrar como criar um plugin, mas sim como criar direito, explorando tudo o que o jQuery tem de melhor para nos oferecer.&lt;/p&gt;

&lt;h2 id=&#34;por-que-eu-deveria-construir-um-plugin&#34;&gt;Por que eu deveria construir um plugin?&lt;/h2&gt;

&lt;p&gt;Encapsulamento e reaproveitamento de código, essas são as palavras-chave. Se você está codificando algo que talvez sirva para futuros projetos, pode ser uma boa encapsular tudo isso em um plugin.&lt;/p&gt;

&lt;h2 id=&#34;entendi-quero-criar-um-como-faz&#34;&gt;Entendi, quero criar um! Como faz?&lt;/h2&gt;

&lt;p&gt;Existem diversas formas, mas vamos começar com essa:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$.fn.meuPlugin = function() {
    // aqui vem a lógica
};&lt;/pre&gt;

&lt;p&gt;Esse é o mínimo que você precisa para iniciar o desenvolvimento de um plugin, basta adicionar uma propriedade ao &lt;strong&gt;$.fn&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Por mais trivial que isso possa parecer, muita gente não entende o que está acontecendo por trás disso exatamente. Portanto, antes de evoluirmos esse padrão, vamos recorrer ao &lt;a href=&#34;http://code.jquery.com/jquery-1.7.1.js&#34;&gt;código fonte da biblioteca&lt;/a&gt;, na sua versão mais recente, para entender de verdade esse pequeno trecho de código.&lt;/p&gt;

&lt;h2 id=&#34;o-que-significa-o-cifrão&#34;&gt;O que significa o cifrão ($) ?&lt;/h2&gt;

&lt;p&gt;O famoso &lt;strong&gt;$&lt;/strong&gt; nada mais é do que um “apelido” para o objeto &lt;strong&gt;jQuery&lt;/strong&gt;. Próximo ao fim do &lt;a href=&#34;http://code.jquery.com/jquery-1.7.1.js&#34;&gt;código fonte da biblioteca&lt;/a&gt; encontramos a seguinte definição:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;window.jQuery = window.$ = jQuery;&lt;/pre&gt;

&lt;p&gt;Isso significa que o mesmo objeto em memória pode ser referenciado de diversas formas: &lt;strong&gt;window.jQuery&lt;/strong&gt;, &lt;strong&gt;window.$&lt;/strong&gt;, &lt;strong&gt;jQuery&lt;/strong&gt; ou simplesmente &lt;strong&gt;$&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;qual-a-diferença-entre-meuplugin-e-fn-meuplugin&#34;&gt;Qual a diferença entre $.meuPlugin e $.fn.meuPlugin?&lt;/h2&gt;

&lt;p&gt;Possivelmente você já se deparou com plugins que não utilizavam a propriedade &lt;strong&gt;.fn&lt;/strong&gt;. Mas afinal, por que eu deveria utilizar o &lt;strong&gt;.fn&lt;/strong&gt;? Por que não apenas &lt;strong&gt;$.meuPlugin&lt;/strong&gt; ao invés de &lt;strong&gt;$.fn.meuPlugin&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;Novamente, ao nos aventurarmos no &lt;a href=&#34;http://code.jquery.com/jquery-1.7.1.js&#34;&gt;código fonte&lt;/a&gt; percebemos, logo nas primeiras linhas, como o objeto &lt;strong&gt;jQuery&lt;/strong&gt; é definido.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var jQuery = function( selector, context ) {
    return new jQuery.fn.init( selector, context, rootjQuery );
}&lt;/pre&gt;

&lt;p&gt;Note que &lt;strong&gt;jQuery&lt;/strong&gt; é uma função e no Javascript uma função é também um objeto do tipo &lt;strong&gt;Function&lt;/strong&gt;. Por isso &lt;strong&gt;jQuery.meuPlugin&lt;/strong&gt; (ou &lt;strong&gt;$.meuPlugin&lt;/strong&gt;) irá atribuir &lt;strong&gt;meuPlugin&lt;/strong&gt; para o objeto jQuery do tipo &lt;strong&gt;Function&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Dito isso, voltamos ao &lt;a href=&#34;http://code.jquery.com/jquery-latest.js&#34;&gt;código fonte&lt;/a&gt; e veremos que &lt;strong&gt;jQuery.fn&lt;/strong&gt; é a mesma coisa que dizer &lt;strong&gt;jQuery.prototype&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;jQuery.fn = jQuery.prototype;&lt;/pre&gt;

&lt;p&gt;Portanto, a cada vez que você atribuir uma função (ou propriedade) para &lt;strong&gt;jQuery.fn&lt;/strong&gt;, como em &lt;strong&gt;$.fn.meuPlugin&lt;/strong&gt;, a função estará disponível para todas as instâncias desse objeto.&lt;/p&gt;

&lt;p&gt;Isso é importante, pois quando você invoca a função &lt;strong&gt;$()&lt;/strong&gt;, como em &lt;strong&gt;$(&amp;#8220;#algumID&amp;#8221;)&lt;/strong&gt;, uma nova instância é criada nessa linha:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;return new jQuery.fn.init( selector, context );&lt;/pre&gt;

&lt;p&gt;E essa instância terá todos os métodos que atribuirmos ao &lt;strong&gt;prototype&lt;/strong&gt;, mas não todos os métodos que foram atribuídos direto ao objeto &lt;strong&gt;Function&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Logo, vá de &lt;strong&gt;.fn&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;evite-conflitos&#34;&gt;Evite conflitos&lt;/h2&gt;

&lt;p&gt;Sabia que existem outras bibliotecas Javascript que também utilizam o símbolo cifrão para referenciar seus objetos? Pois é, isso pode lhe causar uma baita dor de cabeça se utilizar apenas aquele primeiro padrão proposto.&lt;/p&gt;

&lt;p&gt;Logo, uma boa prática seria encapsular a lógica do plugin em uma função anônima. Assim, garantimos que não irá haver conflito entre o &lt;strong&gt;$&lt;/strong&gt; do jQuery com o &lt;strong&gt;$&lt;/strong&gt; de outras bibliotecas.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;(function( $ ){
    $.fn.meuPlugin = function() {
        // aqui vem a lógica
    }; 
})( jQuery );&lt;/pre&gt;

&lt;p&gt;Dessa forma mapeamos o &lt;strong&gt;$&lt;/strong&gt; para que não seja afetado por nada fora desse escopo.&lt;/p&gt;

&lt;h2 id=&#34;não-quebre-a-corrente&#34;&gt;Não quebre a corrente&lt;/h2&gt;

&lt;p&gt;Então, você já entendeu como funcionam algumas coisas, vamos criar nosso primeiro plugin! Começaremos com o clássico exemplo de um Tooltip (aquelas caixinhas que aparecem no mouseover).&lt;/p&gt;

&lt;p&gt;Criamos então a chamada para o plugin a partir de determinado seletor:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(function() {
    $(&#34;.BlaBlaBla&#34;).tooltip();
});&lt;/pre&gt;

&lt;p&gt;E código do nosso plugin ficará definido assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;(function( $ ){
    $.fn.tooltip = function() {
        this.css({ background: &#39;yellow&#39; });
    }; 
})( jQuery );&lt;/pre&gt;

&lt;p&gt;Aparentemente tudo certo, já que o plugin funciona direitinho, certo?&lt;/p&gt;

&lt;p&gt;Na verdade não, pois dessa forma estamos ferindo um dos princípios importantes que diferem os plugins bons dos ruins, e esse princípio se chama encadeamento.&lt;/p&gt;

&lt;p&gt;No jQuery é muito comum vermos declarações do tipo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(&#39;div&#39;).show().addClass(&#39;BlaBlaBla&#39;).fadeIn();&lt;/pre&gt;

&lt;p&gt;Isso, porque é possível encadear diversas chamadas, a um mesmo seletor. E uma excelente prática por sinal, já que não criamos diversas instâncias como em:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(&#39;div&#39;).show();
$(&#39;div&#39;).addClass(&#39;BlaBlaBla&#39;);
$(&#39;div&#39;).fadeIn();&lt;/pre&gt;

&lt;p&gt;Para permitirmos comportamento similar com nosso plugin basta retornar o &lt;strong&gt;this&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;(function( $ ){
    $.fn.tooltip = function() {
        return this.each (function() {
            $(this).css({ background: &#39;yellow&#39; });
        });
    }; 
})( jQuery );&lt;/pre&gt;

&lt;p&gt;Assim, além de garantirmos o encadeamento, também manipulamos a coleção passada para o plugin através do método &lt;strong&gt;each&lt;/strong&gt;, muito similar a um loop com &lt;strong&gt;for&lt;/strong&gt; por exemplo.&lt;/p&gt;

&lt;h2 id=&#34;como-passar-parâmetros-e-lidar-com-eles-depois&#34;&gt;Como passar parâmetros e lidar com eles depois?&lt;/h2&gt;

&lt;p&gt;E que tal se evoluíssemos nosso plugin e resolvessemos passar como parâmetro a cor de fundo do nosso elemento.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(function() {
    $(&#34;.BlaBlaBla&#34;).tooltip({
      &#39;corDeFundo&#39; : &#39;blue&#39;
    });
}); &lt;/pre&gt;

&lt;p&gt;Agora preparamos nosso plugin para receber os parâmetros através da variável &lt;strong&gt;options&lt;/strong&gt; e aplicamos a propriedade &lt;strong&gt;corDeFundo&lt;/strong&gt; no &lt;strong&gt;background&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;(function( $ ){
    $.fn.tooltip = function(options) {
        return this.each (function() {
            $(this).css({ background: options.corDeFundo });
        });
    }; 
})( jQuery );&lt;/pre&gt;

&lt;p&gt;Maravilha, funcionou! Mas o que acontece se você resolve mais tarde não passar como parâmetro a cor de fundo? Nosso plugin quebra.&lt;/p&gt;

&lt;p&gt;Portanto, não podemos nos esquecer de que precisamos nos preparar para receber esse conjunto de opções e assegurar que, caso não seja passado nenhum valor como parâmetro, nós possamos lidar com valores padrão.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;(function( $ ){
    $.fn.tooltip = function(options) {

        var defaults = {
          &#39;corDeFundo&#39; : &#39;yellow&#39;
        };

        var settings = $.extend( {}, defaults, options );

        return this.each(function() {
            $(this).css({ background: settings.corDeFundo });
        });

    }; 
})( jQuery );&lt;/pre&gt;

&lt;p&gt;Para isso recorremos a função &lt;a href=&#34;http://api.jquery.com/jQuery.extend/&#34;&gt;$.extend&lt;/a&gt; que irá buscar os valores passados pela variável &lt;strong&gt;options&lt;/strong&gt; e mesclar com os valores definidos na variável &lt;strong&gt;defaults&lt;/strong&gt;, armazenando em outra variável chamada &lt;strong&gt;settings&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;a-procura-da-batida-perfeita&#34;&gt;A procura da batida perfeita&lt;/h2&gt;

&lt;p&gt;Esse é só o começo para você que deseja se aprofundar um pouquinho mais nessa arte de criar plugins, para entender mais visite o &lt;a href=&#34;http://docs.jquery.com/Plugins/Authoring&#34;&gt;guia oficial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mesmo que a ideia de se formar um padrão único para criar plugins seja utópico, sugiro fortemente que dê uma olhadinha no &lt;a href=&#34;http://jqueryboilerplate.com/&#34;&gt;jQuery Boilerplate&lt;/a&gt;, lá você vai encontrar um padrão bem sólido para iniciar seus projetos, sem contar que a versão traduzida para português foi lançada hoje!&lt;/p&gt;

&lt;p&gt;Mas se o buraco for mais em baixo e você for lidar com plugins &lt;a href=&#34;http://en.wikipedia.org/wiki/State_(computer_science&#34;&gt;stateful&lt;/a&gt; que controlam o estado dos objetos, confira o &lt;a href=&#34;http://wiki.jqueryui.com/w/page/12138135/Widget%20factory&#34;&gt;jQuery UI Widget Factory&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lembre-se que o jQuery não é apenas uma caixa preta que faz mágicas pra você. Aventure-se no código fonte e verá que não é nada muito diferente do que você já faz com JavaScript puro.&lt;/p&gt;

&lt;p&gt;E é isso, espero que depois desse artigo, você tenha evoluido de um simples “manipulador de plugins” para um criador de fato. Até a próxima!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tunando o Developer Tools do Google Chrome</title>
      <link>http://tableless.com.br/tunando-developer-tools-google-chrome/</link>
      <pubDate>Tue, 16 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/tunando-developer-tools-google-chrome/</guid>
      <description>

&lt;p&gt;Uma coisa muito comum entre os programadores é a vontade de customizar as coisas. Trocar o &lt;em&gt;syntax highlight&lt;/em&gt; do seu editor de código preferido é uma coisa muito comum e legal de se fazer, já que você passa o dia inteiro olhando para aquilo, é bom ver algo que goste.&lt;/p&gt;

&lt;p&gt;Só que outra coisa que também passamos muito tempo do nosso dia é o Developer Tools dos nossos navegadores, seja o Firebug no Firefox, Dragonfly no Opera ou o do próprio Chrome. Já pensou se pudéssemos bagunçar eles também?&lt;/p&gt;

&lt;p&gt;Hoje vou ensinar como fazer isso muito rapidamente no Developer Tools do Google Chrome!&lt;/p&gt;

&lt;p&gt;[youtube &lt;a href=&#34;http://www.youtube.com/watch?v=Mu6nnPN7W_s&amp;amp;w=560&amp;amp;h=420&#34;&gt;http://www.youtube.com/watch?v=Mu6nnPN7W_s&amp;amp;w=560&amp;amp;h=420&lt;/a&gt;]&lt;/p&gt;

&lt;h2 id=&#34;1-8211-escolha-o-tema-que-mais-lhe-agrada&#34;&gt;1 &amp;#8211; Escolha o tema que mais lhe agrada:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Monokai Dark: &lt;a href=&#34;https://github.com/simonowendesign/SO-Dark-Monokai-v3&#34;&gt;https://github.com/simonowendesign/SO-Dark-Monokai-v3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MNML Theme: &lt;a href=&#34;https://github.com/frontdevDE/mnml-devtools-theme&#34;&gt;https://github.com/frontdevDE/mnml-devtools-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tomorrow Theme: &lt;a href=&#34;https://gist.github.com/1163300&#34;&gt;https://gist.github.com/1163300&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IR_Black Theme: &lt;a href=&#34;https://gist.github.com/1150520&#34;&gt;https://gist.github.com/1150520&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Solarized Dark &lt;a href=&#34;https://gist.github.com/2174604&#34;&gt;https://gist.github.com/2174604&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ruby Blue: &lt;a href=&#34;https://github.com/chrisbateman/ChromeDevToolsTheme-RubyBlue/&#34;&gt;https://github.com/chrisbateman/ChromeDevToolsTheme-RubyBlue/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Expresso: &lt;a href=&#34;https://gist.github.com/1207219&#34;&gt;https://gist.github.com/1207219&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Inversion: &lt;a href=&#34;https://github.com/mohsen1/Chrome-Dev-tools-dark-theme&#34;&gt;https://github.com/mohsen1/Chrome-Dev-tools-dark-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dark Theme: &lt;a href=&#34;https://github.com/xajler/chrome-devtools-dark-theme&#34;&gt;https://github.com/xajler/chrome-devtools-dark-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dark Dev: &lt;a href=&#34;https://github.com/simonsmith/DarkDev&#34;&gt;https://github.com/simonsmith/DarkDev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WebLight Theme: &lt;a href=&#34;https://gist.github.com/1325072&#34;&gt;https://gist.github.com/1325072&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Você também pode criar seu próprio tema, para isso na cole essa URL na barra de endereço: &lt;em&gt;&lt;strong&gt;chrome-devtools://devtools/devTools.css&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Esse é o CSS padrão, modifique-o à vontade!&lt;/p&gt;

&lt;h2 id=&#34;2-8211-depois-vá-até-o-seguinte-diretório&#34;&gt;2 &amp;#8211; Depois vá até o seguinte diretório:&lt;/h2&gt;

&lt;p&gt;Windows: &amp;#8220;C:\Users****SeuUsuario****\AppData\Local\Google\Chrome\User Data\Default\User StyleSheets&amp;amp;#8221;&lt;/p&gt;

&lt;p&gt;Mac: &amp;#8220;~/Library/Application Support/Google/Chrome/Default/User StyleSheets/&amp;#8221;&lt;/p&gt;

&lt;p&gt;Linux: &amp;#8220;~/.config/chrome/Default/User StyleSheets/&amp;#8221;&lt;/p&gt;

&lt;h2 id=&#34;3-8211-e-modifique-o-custom-css&#34;&gt;3 &amp;#8211; E modifique o &lt;strong&gt;Custom.css!&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Copiando e colando o conteúdo do CSS escolhido nesse arquivo. Depois é só voltar para seu navegador e ser feliz!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Referência: &lt;a href=&#34;https://plus.google.com/115133653231679625609/posts&#34;&gt;Addy Osmani no Google+&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Princípios para escrever CSS de forma consistente</title>
      <link>http://tableless.com.br/principios-para-escrever-css-de-forma-consistente/</link>
      <pubDate>Tue, 14 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/principios-para-escrever-css-de-forma-consistente/</guid>
      <description>

&lt;p&gt;Um problema muito comum quando trabalhamos em equipe é a inconsistência no estilo de codificação. Uns preferem colocar as propriedades do CSS em uma única linha, outros não. Uns gostam de colocar espaço depois dos dois-pontos, outros não. No fim, acaba tudo uma zona. São muitos desenvolvedores, escrevendo de formas totalmente distintas, o que prejudica qualquer tipo de manutenção ou evolução do código.&lt;/p&gt;

&lt;p&gt;Por isso, tenho notado um movimento cada vez maior de empresas buscando padronizar seu estilo de código. Google, Github e muitas outras já disponibilizaram publicamente seus guias de estilo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://google-styleguide.googlecode.com/svn/trunk/htmlcssguide.xml&#34;&gt;Google HTML/CSS Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/styleguide/&#34;&gt;Github CSS/JS/Ruby Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pensando nisso, Nicolas Gallagher (&lt;a href=&#34;https://twitter.com/#!/necolas&#34;&gt;@necolas&lt;/a&gt;), funcionário do Twitter, criador do &lt;a href=&#34;http://necolas.github.com/normalize.css/&#34;&gt;Normalize.css&lt;/a&gt; e um dos líderes do &lt;a href=&#34;http://html5boilerplate.com/&#34;&gt;HTML5 Boilerplate&lt;/a&gt;, resolveu criar um guia chamado &lt;a href=&#34;https://github.com/zenorocha/idiomatic-css&#34;&gt;Idiomatic CSS &amp;#8211; Princípios para escrever CSS de forma consistente e idiomática&lt;/a&gt;. Baseado em um projeto semelhante, porém com foco em JavaScript, o &lt;a href=&#34;https://github.com/rwldrn/idiomatic.js&#34;&gt;idiomatic.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O que eu irei apresentar hoje é uma pequena adaptação da &lt;a href=&#34;https://github.com/zenorocha/idiomatic-css/tree/master/translations/pt-BR&#34;&gt;tradução oficial&lt;/a&gt;, feita por mim, desse documento vivo e aberto para contribuições através do &lt;a href=&#34;https://github.com/necolas/idiomatic-css&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O guia a seguir não pretende ser prescritivo e também não busca impor as preferências do autor no código de outras pessoas. Entretanto, estas orientações incentivam fortemente o uso de padrões já existentes, comuns e sensatos.&lt;/p&gt;

&lt;h2 id=&#34;1-princípios-gerais&#34;&gt;1. Princípios gerais&lt;/h2&gt;

&lt;p&gt;Todo código em qualquer aplicação deve parecer como se tivesse sido escrito por uma única pessoa, independentemente de quantas pessoas tenham contribuído. Faça cumprir rigorosamente o estilo acordado.&lt;/p&gt;

&lt;h2 id=&#34;2-espaços-em-branco&#34;&gt;2. Espaços em branco&lt;/h2&gt;

&lt;p&gt;Novamente, apenas um estilo deve existir em todo o projeto. Seja sempre consistente na utilização de espaços em branco. Use espaços em branco para melhorar a legibilidade.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Nunca&lt;/em&gt; misture espaços e tabs para indentação.&lt;/li&gt;
&lt;li&gt;Escolha entre indentação suave (espaços) ou tabulação. Atenha-se à sua escolha sem falhar. (Preferência: espaços)&lt;/li&gt;
&lt;li&gt;Se usar espaços, escolha o número de caracteres usados por nível de indentação. (Preferência: 4 espaços)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dica: configure seu editor para “mostrar invisíveis”. Isso irá permitir que você elimine espaços em branco da quebra de linha, elimine espaços em branco de linhas vazias sem indentação e evite commits poluídos.&lt;/p&gt;

&lt;h2 id=&#34;3-comentários&#34;&gt;3. Comentários&lt;/h2&gt;

&lt;p&gt;Código bem comentado é extremamente importante. Tire tempo para descrever componentes, como eles funcionam, suas limitações e o modo como são construídos. Não deixe outros no time adivinharem o propósito de códigos incomuns ou não óbvios.&lt;/p&gt;

&lt;p&gt;Estilo de comentário deve ser simples e consistente dentro de uma única base de código.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coloque comentários em uma nova linha acima do seu assunto.&lt;/li&gt;
&lt;li&gt;Evite comentários no fim da linha.&lt;/li&gt;
&lt;li&gt;Mantenha o comprimento da linha a um máximo sensível, por exemplo, 80 colunas.&lt;/li&gt;
&lt;li&gt;Faça o uso liberal de comentários para quebrar o código CSS em seções distintas.&lt;/li&gt;
&lt;li&gt;Use comentários com iniciais maiúsculas e indentação de texto consistente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dica: configure seu editor para lhe prover com atalhos a geração do padrão de comentários acordado.&lt;/p&gt;

&lt;h4 id=&#34;exemplo-com-css&#34;&gt;Exemplo com CSS:&lt;/h4&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;/* ==========================================================================&lt;/p&gt;

&lt;p&gt;Bloco de comentário de seção&lt;/p&gt;

&lt;p&gt;========================================================================== */&lt;/p&gt;

&lt;p&gt;/* Bloco de comentário de sub-seção&lt;/p&gt;

&lt;p&gt;========================================================================== */&lt;/p&gt;

&lt;p&gt;/*&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bloco de comentário de grupo&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ideal para explicações em múltiplas linhas e documentação.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*/&lt;/p&gt;

&lt;p&gt;/* Comentário básico */&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;exemplo-com-scss&#34;&gt;Exemplo com SCSS:&lt;/h4&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;// ==========================================================================&lt;/p&gt;

&lt;p&gt;// Bloco de comentário de seção&lt;/p&gt;

&lt;p&gt;// ==========================================================================&lt;/p&gt;

&lt;p&gt;// Bloco de comentário de sub-seção&lt;/p&gt;

&lt;p&gt;// ==========================================================================&lt;/p&gt;

&lt;p&gt;//&lt;/p&gt;

&lt;p&gt;// Bloco de comentário de grupo&lt;/p&gt;

&lt;p&gt;// Ideal para explicações em múltiplas linhas e documentação.&lt;/p&gt;

&lt;p&gt;//&lt;/p&gt;

&lt;p&gt;// Comentário básico&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h2 id=&#34;4-formatação&#34;&gt;4. Formatação&lt;/h2&gt;

&lt;p&gt;O formato de código escolhido deve garantir que o código seja: fácil de ler; fácil de comentar claramente; minimize a chance de introduzir erros acidentalmente; e resulte em úteis visualizações de diferença.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Um seletor discreto por linha em um conjunto de regras com multi-seletores.&lt;/li&gt;
&lt;li&gt;Um único espaço antes da abertura das chaves em um conjunto de regras.&lt;/li&gt;
&lt;li&gt;Uma única declaração por linha em um bloco de declarativo.&lt;/li&gt;
&lt;li&gt;Um nível de indentação para cada declaração.&lt;/li&gt;
&lt;li&gt;Um único espaço depois dos dois pontos de uma declaração.&lt;/li&gt;
&lt;li&gt;Sempre inclua um ponto-e-vírgula no fim da última declaração em um bloco declarativo.&lt;/li&gt;
&lt;li&gt;Coloque o fechamento das chaves na mesma coluna que o primeiro caracter do conjunto de regras.&lt;/li&gt;
&lt;li&gt;Separe cada conjunto de regras por uma linha em branco.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;.seletor-1,&lt;/p&gt;

&lt;p&gt;.seletor-2,&lt;/p&gt;

&lt;p&gt;.seletor-3 {&lt;/p&gt;

&lt;p&gt;-webkit-box-sizing: border-box;&lt;/p&gt;

&lt;p&gt;-moz-box-sizing: border-box;&lt;/p&gt;

&lt;p&gt;box-sizing: border-box;&lt;/p&gt;

&lt;p&gt;display: block;&lt;/p&gt;

&lt;p&gt;color: #333;&lt;/p&gt;

&lt;p&gt;background: #fff;&lt;/p&gt;

&lt;p&gt;}[/cc]&lt;/p&gt;

&lt;h4 id=&#34;ordem-de-declaração&#34;&gt;Ordem de declaração&lt;/h4&gt;

&lt;p&gt;Declarações devem ser ordenadas segundo um único princípio. Minha preferência é por propriedades relacionadas para serem agrupadas e por propriedades estruturalmente importantes (por exemplo, posicionamento e box-model) para serem declaradas antes de propriedades tipográficas, fundo ou cor.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;.seletor {&lt;/p&gt;

&lt;p&gt;position: relative;&lt;/p&gt;

&lt;p&gt;display: block;&lt;/p&gt;

&lt;p&gt;width: 50%;&lt;/p&gt;

&lt;p&gt;height: 100px;&lt;/p&gt;

&lt;p&gt;padding: 10px;&lt;/p&gt;

&lt;p&gt;border: 0;&lt;/p&gt;

&lt;p&gt;margin: 10px;&lt;/p&gt;

&lt;p&gt;color: #fff&lt;/p&gt;

&lt;p&gt;background: #000;&lt;/p&gt;

&lt;p&gt;}[/cc]&lt;/p&gt;

&lt;p&gt;Ordenação alfabética também é popular, mas a desvantagem é que ela separa as propriedades relacionadas. Por exemplo, deslocamentos de posição não são mais agrupados e propriedades do box-model podem acabar propagando ao longo de um bloco de declaração.&lt;/p&gt;

&lt;h4 id=&#34;exceções-e-ligeiros-desvios&#34;&gt;Exceções e ligeiros desvios&lt;/h4&gt;

&lt;p&gt;Grandes blocos de declarações individuais podem atuar de forma diferente, através da formatação de linha única. Nesse caso, um espaço deve ser considerado depois da abertura das chaves e antes do fechamento das chaves.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;.seletor-1 { width: 10%; }&lt;/p&gt;

&lt;p&gt;.seletor-2 { width: 20%; }&lt;/p&gt;

&lt;p&gt;.seletor-3 { width: 30%; }&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Longos valores de propriedades separados por vírgula &amp;#8211; como coleções de degradês ou sombras &amp;#8211; podem ser organizados em várias linhas em um esforço para melhorar a legibilidade e produz visualizações de diferença mais úteis. Existem vários formatos que poderiam ser usados; um exemplo é mostrado abaixo.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;.seletor {&lt;/p&gt;

&lt;p&gt;box-shadow:&lt;/p&gt;

&lt;p&gt;1px 1px 1px #000,&lt;/p&gt;

&lt;p&gt;2px 2px 1px 1px #ccc inset;&lt;/p&gt;

&lt;p&gt;background-image:&lt;/p&gt;

&lt;p&gt;linear-gradient(#fff, #ccc),&lt;/p&gt;

&lt;p&gt;linear-gradient(#f3c, #4ec);&lt;/p&gt;

&lt;p&gt;}[/cc]&lt;/p&gt;

&lt;h4 id=&#34;miscelânea&#34;&gt;Miscelânea&lt;/h4&gt;

&lt;p&gt;Use valores hexadecimais em letras minúsculas, por exemplo: [cc lang=&amp;#8221;css&amp;#8221;]#aaa[/cc]&lt;/p&gt;

&lt;p&gt;Use aspas simples ou duplas de forma consistente. Preferência por aspas duplas, por exemplo: [cc lang=&amp;#8221;css&amp;#8221;]content: &amp;#8220;&amp;#8221;[/cc]&lt;/p&gt;

&lt;p&gt;Sempre coloque aspas em valores de atributos nos seletores, por exemplo: [cc lang=&amp;#8221;css&amp;#8221;]input[type=&amp;#8221;checkout&amp;#8221;][/cc]&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Onde permitido&lt;/em&gt;, evite especificar unidades para valores-zero, por exemplo: [cc lang=&amp;#8221;css&amp;#8221;]margin: 0[/cc]&lt;/p&gt;

&lt;h3 id=&#34;pré-processadores-considerações-de-formatação-adicionais&#34;&gt;Pré-processadores: considerações de formatação adicionais&lt;/h3&gt;

&lt;p&gt;Diferentes pré-processadores de CSS possuem diferentes características, funcionalidades e sintaxe. Suas convenções devem ser extendidas para acomodar as particularidades de qualquer pré-processador em uso. As seguintes diretrizes são em referência ao Sass.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Limite o aninhamento a 1 nível de profundidade. Reavalie qualquer aninhamento que tenha mais de 2 níveis de profundidade. Isso impede que existam seletores CSS muito específicos.&lt;/li&gt;
&lt;li&gt;Evite um grande número de regras aninhadas. Quebre-os para quando a legibilidade começar a ser afetada. Preferência por evitar aninhamentos que se espalhem por mais de 20 linhas.&lt;/li&gt;
&lt;li&gt;Sempre coloque as declarações &lt;strong&gt;@extend&lt;/strong&gt; nas primeiras linhas de um bloco declarativo.&lt;/li&gt;
&lt;li&gt;Quando possível, agrupe declarações &lt;strong&gt;@include&lt;/strong&gt; no topo de blocos declarativos, depois de qualquer declaração &lt;strong&gt;@extend&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Considere funções customizadas para prefixos com &lt;strong&gt;x-&lt;/strong&gt; ou qualquer namespace. Isso ajuda a evitar qualquer potencial confusão na sua função com a função de CSS nativo ou de colidir com funções de bibliotecas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;.seletor-1 {&lt;/p&gt;

&lt;p&gt;@extend .other-rule;&lt;/p&gt;

&lt;p&gt;@include clearfix();&lt;/p&gt;

&lt;p&gt;@include box-sizing(border-box);&lt;/p&gt;

&lt;p&gt;width: x-grid-unit(1);&lt;/p&gt;

&lt;p&gt;// outras declarações&lt;/p&gt;

&lt;p&gt;}[/cc]&lt;/p&gt;

&lt;h2 id=&#34;5-nomeando&#34;&gt;5. Nomeando&lt;/h2&gt;

&lt;p&gt;Você não é um compilador/compressor de código humano, então não tente ser.&lt;/p&gt;

&lt;p&gt;Use nomes claros e previdentes para classes HTML. Escolha um padrão de nomes compreensível e consistente que faça sentido para arquivos HTML e arquivos CSS.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;/* Exemplo de código com nomes ruins */&lt;/p&gt;

&lt;p&gt;.s-scr {&lt;/p&gt;

&lt;p&gt;overflow: auto;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;.cb {&lt;/p&gt;

&lt;p&gt;background: #000;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;/* Exemplo de código com bons nomes */&lt;/p&gt;

&lt;p&gt;.is-scrollable {&lt;/p&gt;

&lt;p&gt;overflow: auto;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;.column-body {&lt;/p&gt;

&lt;p&gt;background: #000;&lt;/p&gt;

&lt;p&gt;}[/cc]&lt;/p&gt;

&lt;h2 id=&#34;6-exemplo-prático&#34;&gt;6. Exemplo prático&lt;/h2&gt;

&lt;p&gt;Um exemplo de várias convenções.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;/* ==========================================================================&lt;/p&gt;

&lt;p&gt;Grid layout&lt;/p&gt;

&lt;p&gt;========================================================================== */&lt;/p&gt;

&lt;p&gt;/*&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Exemplo de HTML:
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;grid&#34;&gt;
  * &lt;/p&gt; 
  
  &lt;div class=&#34;cell cell-5&#34;&gt;
  &lt;/div&gt;
  

&lt;p&gt;&lt;p&gt;
    *
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;cell cell-5&#34;&gt;
  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    *
  &lt;/p&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;*/&lt;/p&gt;

&lt;p&gt;.grid {&lt;/p&gt;

&lt;p&gt;overflow: visible;&lt;/p&gt;

&lt;p&gt;height: 100%;&lt;/p&gt;

&lt;p&gt;white-space: nowrap;&lt;/p&gt;

&lt;p&gt;font-size: 0;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;.cell {&lt;/p&gt;

&lt;p&gt;box-sizing: border-box;&lt;/p&gt;

&lt;p&gt;position: relative;&lt;/p&gt;

&lt;p&gt;overflow: hidden;&lt;/p&gt;

&lt;p&gt;width: 20%;&lt;/p&gt;

&lt;p&gt;height: 100%;&lt;/p&gt;

&lt;p&gt;padding: 0 10px;&lt;/p&gt;

&lt;p&gt;border: 2px solid #333;&lt;/p&gt;

&lt;p&gt;vertical-align: top;&lt;/p&gt;

&lt;p&gt;white-space: normal;&lt;/p&gt;

&lt;p&gt;font-size: 16px;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;/* Células &amp;#8211; Estados */&lt;/p&gt;

&lt;p&gt;.cell.is-animating {&lt;/p&gt;

&lt;p&gt;background-color: #fffdec;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;/* Células &amp;#8211; Dimensões&lt;/p&gt;

&lt;p&gt;========================================================================== */&lt;/p&gt;

&lt;p&gt;.cell-1 { width: 10%; }&lt;/p&gt;

&lt;p&gt;.cell-2 { width: 20%; }&lt;/p&gt;

&lt;p&gt;.cell-3 { width: 30%; }&lt;/p&gt;

&lt;p&gt;.cell-4 { width: 40%; }&lt;/p&gt;

&lt;p&gt;.cell-5 { width: 50%; }&lt;/p&gt;

&lt;p&gt;/* Células &amp;#8211; Modificadores&lt;/p&gt;

&lt;p&gt;========================================================================== */&lt;/p&gt;

&lt;p&gt;.cell–detail,&lt;/p&gt;

&lt;p&gt;.cell–important {&lt;/p&gt;

&lt;p&gt;border-width: 4px;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h2 id=&#34;7-organização&#34;&gt;7. Organização&lt;/h2&gt;

&lt;p&gt;Organização de código é uma importante parte de qualquer base de código CSS, e crucial para grandes bases de código.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Separar logicamente distintas partes do código.&lt;/li&gt;
&lt;li&gt;Usar arquivos separados (concatenados por um processo de build) para ajudar a dividir código para componentes distintos.&lt;/li&gt;
&lt;li&gt;Se estiver usando um pré-processador, abstrair partes comuns de código em variáveis para cor, tipografia, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;8-build-e-deploy&#34;&gt;8. Build e deploy&lt;/h2&gt;

&lt;p&gt;Os projetos devem sempre tentar incluir alguns meios genéricos pelos quais sua fonte possa ser avaliada, testada, comprimida e versionada em preparação para uso em produção. Para essa tarefa, o &lt;a href=&#34;https://github.com/cowboy/grunt&#34;&gt;grunt&lt;/a&gt; por Ben Alman é uma excelente ferramenta.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Independemente de você ter concordado ou não com o guia de estilo proposto, o importante é entender como uma padronização no estilo do código pode ajudar você e sua equipe. Pense nisso.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Eventos Front-end que você não pode perder em 2012</title>
      <link>http://tableless.com.br/eventos-front-end-que-voce-nao-pode-perder-em-2012/</link>
      <pubDate>Mon, 30 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/eventos-front-end-que-voce-nao-pode-perder-em-2012/</guid>
      <description>

&lt;p&gt;Fizemos uma página específica para os eventos que acontecem nesse Brasil afora. &lt;a href=&#34;http://tableless.com.br/eventos/&#34;&gt;Visite e divulgue&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Esse tem sido um ano bem agitado para comunidade de desenvolvimento front-end por todo o nosso país. A popularidade que o JavaScript alcançou graças a iniciativas como HTML5 e NodeJS foi simplesmente assustadora, despertando o interesse de empresas e desenvolvedores para o assunto.&lt;/p&gt;

&lt;p&gt;Desde o início do ano já tivemos diversos eventos focados apenas em front-end e que fizeram um maior sucesso por aí. Logo em janeiro rolou o &lt;a href=&#34;http://www.bhjs.com.br/&#34;&gt;BeagaJS&lt;/a&gt; em Minas Gerais, depois veio o &lt;a href=&#34;http://rsjs.org/&#34;&gt;RSJS&lt;/a&gt;  que rolou em março na cidade de Porto Alegre. Ainda no mês de março teve o &lt;a href=&#34;http://sampajs.com/&#34;&gt;SampaJS&lt;/a&gt; na capital paulista e em abril tivemos o &lt;a href=&#34;http://www.pernambucojs.com/&#34;&gt;PernambucoJS&lt;/a&gt; em Recife, isso sem contar nos encontros mensais do &lt;a href=&#34;http://riojs.org&#34;&gt;Rio.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Rolou de tudo, muito aprendizado, troca de experiências e networking, mas se você perdeu algum e/ou quer ficar ligado nos próximos que vão acontecer por aí, fica ligado nessa agenda com as melhores dicas que preparamos pra você.&lt;/p&gt;

&lt;h2 id=&#34;front-in-rio-8211-02-06&#34;&gt;Front in Rio &amp;#8211; 02/06&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.frontinrio.com.br/&#34;&gt;&lt;img src=&#34;http://media.zenorocha.com/tableless/frontinrio.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pra começar tem o &lt;a href=&#34;http://www.frontinrio.com.br/&#34;&gt;Front in Rio&lt;/a&gt;, que chega na sua segunda edição com nomes de destaque no mercado.&lt;/p&gt;

&lt;p&gt;Bernardo Heynemann (&lt;a href=&#34;https://twitter.com/#!/heynemann&#34;&gt;@heynemann&lt;/a&gt;) vai desmistificar alguns mitos sobre Responsive Design e ainda contar sua experiência na implementação dessa técnica na home da &lt;a href=&#34;http://globo.com&#34;&gt;Globo.com&lt;/a&gt;. Destaque também para o Leo Balter (&lt;a href=&#34;https://twitter.com/#!/leobalter&#34;&gt;@leobalter&lt;/a&gt;), representante da Mozilla, que vai falar sobre o novo cinto de utilidades do desenvolvedor JavaScript. Entre outros caras muito bons.&lt;/p&gt;

&lt;p&gt;As inscrições já se esgotaram e o público estimado é de aproximadamente 150 pessoas. Já o endereço é o mesmo da edição passada, a Universidade Federal do Estado do Rio de Janeiro &amp;#8211; &lt;a href=&#34;http://www.unirio.br/&#34;&gt;UNIRIO&lt;/a&gt;, sempre com aquele visual feio, bem aos pés do Pão de Açúcar.&lt;/p&gt;

&lt;p&gt;Mais informações: &lt;a href=&#34;http://www.frontinrio.com.br/&#34;&gt;frontinrio.com.br&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;front-in-curitiba-8211-23-e-24-06&#34;&gt;Front in Curitiba &amp;#8211; 23 e &lt;sup&gt;24&lt;/sup&gt;&amp;frasl;&lt;sub&gt;06&lt;/sub&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.frontincuritiba.com.br/&#34;&gt;&lt;img src=&#34;http://media.zenorocha.com/tableless/frontincuritiba.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pela primeira vez na capital paranaense chega um evento focado apenas em front-end, é o &lt;a href=&#34;http://www.frontincuritiba.com.br/&#34;&gt;Front in Curitiba&lt;/a&gt; comandado pelos mesmo organizadores do &lt;a href=&#34;http://frontinlondrina.com.br/&#34;&gt;Front in Londrina&lt;/a&gt; que rolou ano passado.&lt;/p&gt;

&lt;p&gt;O evento traz para palestrar nomes como Reinaldo Ferraz (&lt;a href=&#34;https://twitter.com/#!/reinaldoferraz&#34;&gt;@reinaldoferraz&lt;/a&gt;) da &lt;a href=&#34;http://www.w3c.br/Home/WebHome&#34;&gt;W3C&lt;/a&gt; e Talita Pagani (&lt;a href=&#34;https://twitter.com/#!/talitapagani&#34;&gt;@talitapagani&lt;/a&gt;) editora aqui do Tableless. E ainda vai rolar mini cursos com o professor Horácio Soares (&lt;a href=&#34;https://twitter.com/#!/horaciosoares&#34;&gt;@horaciosoares&lt;/a&gt;), Alysson Franklin (&lt;a href=&#34;https://twitter.com/#!/alyssonfranklin&#34;&gt;@alyssonfranklin&lt;/a&gt;) da &lt;a href=&#34;http://www.ibm.com/br/pt/&#34;&gt;IBM&lt;/a&gt;, entre outros.&lt;/p&gt;

&lt;p&gt;O evento acontece na UTFPR e as inscrições ainda não foram abertas, mas o preço deve girar em torno de R$ 60,00.&lt;/p&gt;

&lt;p&gt;Mais informações: &lt;a href=&#34;http://www.frontincuritiba.com.br/&#34;&gt;frontincuritiba.com.br&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;front-in-bh-8211-14-07&#34;&gt;Front in BH &amp;#8211; &lt;sup&gt;14&lt;/sup&gt;&amp;frasl;&lt;sub&gt;07&lt;/sub&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://frontinbh.com.br/&#34;&gt;&lt;img src=&#34;http://media.zenorocha.com/tableless/frontinbh.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Em julho tem o &lt;a href=&#34;http://frontinbh.com.br/&#34;&gt;Front in BH&lt;/a&gt;, que chega na sua segunda edição com um passado de sucesso. A estimativa para esse ano é de cerca de 300 participantes e a grade vem novamente recheada com grandes profissionais.&lt;/p&gt;

&lt;p&gt;Vai ter a presença ilustre de Alex Tabor, co-fundador e CTO do &lt;a href=&#34;http://www.peixeurbano.com.br&#34;&gt;Peixe Urbano&lt;/a&gt;, Alexandre Gaigalas (&lt;a href=&#34;https://twitter.com/#!/alganet&#34;&gt;@alganet&lt;/a&gt;) do Yahoo, Bernard de Luna (&lt;a href=&#34;http://twitter.com/bernarddeluna&#34;&gt;@bernarddeluna&lt;/a&gt;) da Melt e muitos outros.&lt;/p&gt;

&lt;p&gt;Corre lá que as inscrições já estão abertas e giram em torno de R$ 45,00.&lt;/p&gt;

&lt;p&gt;Mais informações: &lt;a href=&#34;http://frontinbh.com.br/&#34;&gt;frontinbh.com.br&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;braziljs-8211-30-e-31-08&#34;&gt;BrazilJS &amp;#8211; 30 e &lt;sup&gt;31&lt;/sup&gt;&amp;frasl;&lt;sub&gt;08&lt;/sub&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://braziljs.com.br/&#34;&gt;&lt;img src=&#34;http://media.zenorocha.com/tableless/braziljs.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Já em agosto, se prepare para a maior conferência de JavaScript do universo!&lt;/p&gt;

&lt;p&gt;É o &lt;a href=&#34;http://braziljs.com.br/&#34;&gt;BrazilJS&lt;/a&gt; que chega em Porto Alegre, depois de uma primeira edição sensacional que rolou em Fortaleza. Para esse ano os organizadores Felipe Moura (&lt;a href=&#34;https://twitter.com/#!/felipenmoura&#34;&gt;@felipenmoura&lt;/a&gt;) e Jaydson (&lt;a href=&#34;http://twitter.com/jaydson&#34;&gt;@jaydson&lt;/a&gt;) estão preparando uma estrutura gigantesca para comportar cerca de 1.000 participantes.&lt;/p&gt;

&lt;p&gt;As inscrições ainda não foram abertas e a grade de palestrantes também não foi divulgada. Mesmo assim, espere uma lista repleta de palestrantes internacionais e vá separando seu final de agosto para esse evento, porque eu tenho certeza de que vai ser incrível.&lt;/p&gt;

&lt;p&gt;Mais informações: &lt;a href=&#34;http://braziljs.com.br/&#34;&gt;braziljs.com.br&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;e-ainda-8230&#34;&gt;E ainda&amp;#8230;&lt;/h2&gt;

&lt;p&gt;Não acabou amigo, tem muito mais por vir.&lt;/p&gt;

&lt;p&gt;A equipe do Tableless está preparando um evento bem legal em São Paulo. O nome ainda não está definido, mas o evento deve rolar em agosto e a estimativa de público é de cerca de 150 participantes, já a inscrição custará em torno de R$ 250,00. Mais detalhes em breve.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qconsp.com/&#34;&gt;&lt;img src=&#34;http://media.zenorocha.com/tableless/qcon.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Também em agosto e também em Sampa, vai rolar a &lt;a href=&#34;http://qconsp.com/&#34;&gt;QCon&lt;/a&gt;, conferência relevante no cenário de desenvolvimento de software por todo o mundo. A trilha de web promete, com nomes como Eduardo Shiota (&lt;a href=&#34;https://twitter.com/#!/shiota&#34;&gt;@shiota&lt;/a&gt;) e Loiane Groner (&lt;a href=&#34;https://twitter.com/#!/loiane&#34;&gt;@loiane&lt;/a&gt;). A inscrição custa cerca de R$ 600,00.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.thedevelopersconference.com.br/&#34;&gt;&lt;img src=&#34;http://media.zenorocha.com/tableless/tdc.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Em julho o &lt;a href=&#34;http://www.thedevelopersconference.com.br/&#34;&gt;TDC (The developer&amp;#8217;s conference)&lt;/a&gt; inicia seus trabalhos em São Paulo, passando depois em Floripa em setembro e Goiânia em outubro. A trilha de front-end ainda não foi definida, mas sabendo que essa missão está nas mãos do Daniel Filho (&lt;a href=&#34;https://twitter.com/#!/danielfilho&#34;&gt;@danielfilho&lt;/a&gt;), pode ter certeza que vem coisa boa por aí.&lt;/p&gt;

&lt;p&gt;Mais informações: &lt;a href=&#34;http://www.thedevelopersconference.com.br/#geral&#34;&gt;thedevelopersconference.com.br&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://frontinlondrina.com.br/&#34;&gt;&lt;img src=&#34;http://media.zenorocha.com/tableless/frontinlondrina.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Já em dezembro tem o &lt;a href=&#34;http://frontinlondrina.com.br/&#34;&gt;Front in Londrina&lt;/a&gt;, ainda sem definição exata de dia, local ou palestrantes, mas que também promete.&lt;/p&gt;

&lt;p&gt;Mais informações: &lt;a href=&#34;http://frontinlondrina.com.br&#34;&gt;frontinlondrina.com.br&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.facebook.com/feecbr&#34;&gt;&lt;img src=&#34;http://media.zenorocha.com/tableless/feec.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Também em dezembro começa o FEEC (Front-end Engineering Creative Convention) em Recife, já em 2013 visita cidades como Fortaleza e Salvador. Ainda não há informações concretas sobre o evento.&lt;/p&gt;

&lt;p&gt;Mais informações: &lt;a href=&#34;https://www.facebook.com/feecbr&#34;&gt;facebook.com/feecbr&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;e-é-isso&#34;&gt;E é isso!&lt;/h2&gt;

&lt;p&gt;Qual desses eventos você vai participar? Esqueci de mencionar algum? Interaja nos comentários!&lt;/p&gt;

&lt;p&gt;Nos esbarramos por lá 😉&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Conheça de verdade o Boot2Gecko (ou FirefoxOS)</title>
      <link>http://tableless.com.br/conheca-de-verdade-o-boot2gecko-ou-firefoxos/</link>
      <pubDate>Sun, 29 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/conheca-de-verdade-o-boot2gecko-ou-firefoxos/</guid>
      <description>

&lt;p&gt;Uma das coisas que eu tenho notado nos últimos tempos é o volume de desenvolvedores web com interesse no mundo mobile. Não é por menos, esse é um dos mercados de desenvolvimento que mais crescem no mundo.&lt;/p&gt;

&lt;p&gt;Com essa onda, muitos curiosos começam a investir um pouco do seu tempo para criar apps de iPhone ou Android. Só que, logo de cara, esbarram com uma tremenda barreira, as diferentes linguagens de programação. Para criar apps nativas no iOS (sistema operacional do iPhone) você precisa aprender Objective-C. Para criar apps nativas no Android você precisa aprender Java.&lt;/p&gt;

&lt;p&gt;Aí você pensa: &amp;#8220;Linguagem de programação é tudo igual, o que importa é a lógica&amp;#8221;. E realmente, migrar de uma linguagem para outra não é algo que deva assustar um programador. Porém muito tempo é perdido nesse processo, ainda mais quando você precisa lidar com cenários como tamanho grande de equipe ou curto prazo de projeto.&lt;/p&gt;

&lt;p&gt;Essa frustração pode ser contornada através do uso de ferramentas como PhoneGap ou Titanium. O que elas fazem é prover um conjunto de APIs, possibilitando que você crie seus apps usando as linguagens que já está acostumado na web e que, quando finalizados, são empacotados para as linguagens nativas destes dispositivos.&lt;/p&gt;

&lt;p&gt;Beleza, já não é a pior coisa do mundo, mas e se pudéssemos criar apps para um sistema operacional mobile totalmente open source e feito em HTML, CSS e JavaScript? Esse, senhoras e senhores, é o Boot2Gecko (ou Firefox OS), o sistema operacional que está sendo desenvolvido pela Mozilla.&lt;/p&gt;

&lt;p&gt;Hoje escrevo direto do &lt;a href=&#34;http://softwarelivre.org/fisl13&#34;&gt;FISL (Fórum Internacional do Software Livre)&lt;/a&gt; em Porto Alegre. Nesses últimos dias estive em contato direto com os caras da Mozilla que estão desenvolvendo essa plataforma e por isso resolvi compartilhar com vocês o que tem rolado por aqui.&lt;/p&gt;

&lt;p&gt;Antes de ontem (dia 26/07/12), Christian Heilmann (&lt;a href=&#34;https://twitter.com/codepo8&#34;&gt;@codepo8&lt;/a&gt;) e John Hammink (&lt;a href=&#34;http://twitter.com/rijksband&#34;&gt;@rijksband&lt;/a&gt;) deram uma palestra introdutória sobre esse assunto. Para quem não conhece, o Chris é o principal e mais popular evangelista da Mozilla no mundo. E se você nunca tinha ouvido falar sobre esse sistema operacional, recomendo muito assisti-lá.&lt;/p&gt;

&lt;p&gt;[youtube &lt;a href=&#34;http://www.youtube.com/watch?v=ukjXZvfvSUs&amp;amp;w=560&amp;amp;h=420&#34;&gt;http://www.youtube.com/watch?v=ukjXZvfvSUs&amp;amp;w=560&amp;amp;h=420&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Já ontem (dia 27/07/12) passei o dia inteiro no Hackathon na MozillaHQ. O objetivo era criar uma app e submeter para a &lt;a href=&#34;https://marketplace.mozilla.org/&#34;&gt;Mozilla Marketplace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;margin-left: 78px&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/abb.jpg&#34; alt=&#34;&#34; width=&#34;560&#34; height=&#34;420&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Infelizmente não consegui terminar e submeter a tempo, até porque aproveitei o dia para trocar muitas ideias com esses caras e gravar um vídeo com o Chris mostrando um celular rodando o Boot2Gecko \o/.&lt;/p&gt;

&lt;p&gt;[youtube &lt;a href=&#34;http://www.youtube.com/watch?v=Lu77uPgrgx0&amp;amp;w=560&amp;amp;h=420&#34;&gt;http://www.youtube.com/watch?v=Lu77uPgrgx0&amp;amp;w=560&amp;amp;h=420&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;E no momento em que escrevo (dia 28/07/12) passei boa parte do dia contribuindo para o Boot2Gecko na &lt;a href=&#34;https://developer-new.mozilla.org/pt-BR/docs/Apps&#34;&gt;tradução da documentação&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;afinal-como-funciona&#34;&gt;Afinal, como funciona?&lt;/h2&gt;

&lt;p&gt;A plataforma do Boot2Gecko consiste em três camadas principais. A camada de mais baixo nível é chamada de Gonk, na qual inclui o kernel do Linux e toda camada de abstração com o hardware. A camada do meio é o motor de renderização Gecko, muito semelhante ao usado no Firefox. E a camada de mais alto nível é o Gaia, responsável pela interface do usuário, sendo escrita completamente em HTML, CSS e JavaScript.&lt;/p&gt;

&lt;h2 id=&#34;e-eu-já-posso-usar&#34;&gt;E eu já posso usar?&lt;/h2&gt;

&lt;p&gt;Pode! Hoje já é possível instalar o Boot2Gecko em alguns smartphones, mas isso não é nada aconselhável por enquanto. O projeto encontra-se em contínuo desenvolvimento e falta bastante coisa para fazer. A boa notícia é que já você pode desenvolver apps para a Mozilla Marketplace.&lt;/p&gt;

&lt;h2 id=&#34;mas-como-eu-posso-desenvolver-apps-se-eu-não-tenho-um-celular-rodando-ele&#34;&gt;Mas como eu posso desenvolver apps se eu não tenho um celular rodando ele?&lt;/h2&gt;

&lt;p&gt;Pra isso existem os emuladores, tem um projeto chamado &lt;a href=&#34;https://github.com/canuckistani/gaia-rocking&#34;&gt;Gaia Rocking&lt;/a&gt; onde lhe instrui como rodar o emulador. Por agora não vou perder muito tempo mostrando como rodar, já que esse não é o foco do artigo, mas para provar que o negócio funciona mesmo, aproveitei para gravar um vídeo emulando o Boot2Gecko na minha máquina. Saca só o bicho!&lt;/p&gt;

&lt;p&gt;[youtube &lt;a href=&#34;http://www.youtube.com/watch?v=tigdi6EwSgs&amp;amp;w=560&amp;amp;h=420&#34;&gt;http://www.youtube.com/watch?v=tigdi6EwSgs&amp;amp;w=560&amp;amp;h=420&lt;/a&gt;]&lt;/p&gt;

&lt;h2 id=&#34;quando-eu-vou-poder-usar&#34;&gt;Quando eu vou poder usar?&lt;/h2&gt;

&lt;p&gt;A previsão é que em 2013 sejam lançados comercialmente os primeiros celulares rodando o Boot2Gecko. E adivinha em qual país essa brincadeira vai começar? Brasil! Isso mesmo, após um acordo entre a Mozilla e a Telefônica, foi definido que a venda dos primeiros aparelhos no mundo será no Brasil. Um dos motivos disso acontecer é por conta da ideia da Mozilla em abordar o mercado de smartphones com preços populares.&lt;/p&gt;

&lt;h2 id=&#34;concluindo&#34;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;A ideia não é convencer ninguém que esse novo sistema operacional é melhor do que o iOS ou Android. O projeto está em desenvolvimento e falta muito chão para percorrer ainda.&lt;/p&gt;

&lt;p&gt;O que vale ressaltar aqui é a incrível oportunidade de mercado para nós brasileiros. Podemos lançar os primeiros apps da Mozilla Marketplace e sair na frente comparado ao resto do mundo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS Sprites</title>
      <link>http://tableless.com.br/css-sprites/</link>
      <pubDate>Mon, 16 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/css-sprites/</guid>
      <description>

&lt;p&gt;Um tópico recorrente na discussão sobre performance no lado do cliente é o famoso CSS Sprite. O problema é que muita gente conhece a técnica, muita gente reconhece sua importância, mas aplicar que é bom, nada.&lt;/p&gt;

&lt;p&gt;Por isso, vou mostrar hoje algumas ferramentas que podem te ajudar nessa missão.&lt;/p&gt;

&lt;h2 id=&#34;o-que-é&#34;&gt;O que é?&lt;/h2&gt;

&lt;p&gt;Pra quem não conhece, essa é uma técnica que se baseia em combinar diversas imagens em uma só, em busca de diminuir o número de requisições HTTP para o servidor. E essa é apenas uma de suas aplicações, no mundo dos games, por exemplo, ela é muito usada para fazer animações.&lt;/p&gt;

&lt;p&gt;Imagine um menu como esse:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-6451&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/esc.jpg&#34; alt=&#34;&#34; width=&#34;720&#34; height=&#34;51&#34; srcset=&#34;uploads/2012/07/esc.jpg 720w, uploads/2012/07/esc-300x21.jpg 300w&#34; sizes=&#34;(max-width: 720px) 100vw, 720px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Fazer uma requisição para cada uma das imagens é muito ruim em termos de performance, por isso podemos recorrer aos CSS Sprites da seguinte maneira. Montamos nossa lista não-ordenada de elementos, mas ao invés de utilizarmos a tag &lt;em&gt;img&lt;/em&gt;, aplicamos uma classe para cada um dos itens.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ul&amp;gt;
    &amp;lt;li class=&#34;escudos atletico-mg&#34;&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&#34;escudos botafogo&#34;&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&#34;escudos coritiba&#34;&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Para então no CSS, utilizarmos como &lt;em&gt;background&lt;/em&gt; apenas uma imagem que contém todos os escudos. E para cada um dos elementos, colocamos a posição X e Y dentro dessa imagem que contém todos eles.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.escudos {
    background: url(&#39;images/sprite.png&#39;) no-repeat;
}

.atletico-mg {
    background-position: 0 -416px;
}

.botafogo {
    background-position: 0 -557px;
}

.coritiba {
    background-position: 0 -185px;
}
&lt;/pre&gt;

&lt;p&gt;Assim conseguimos diminuir o tamanho em KB dos dados trafegados e também o número de requisições HTTP para o servidor.&lt;/p&gt;

&lt;h2 id=&#34;como-fazer&#34;&gt;Como fazer?&lt;/h2&gt;

&lt;p&gt;Para aplicar essa técnica você pode recorrer ao Photoshop colocando todas as imagens em um só arquivo e então buscando a posição X e Y com a régua. Uma excelente alternativa para pessoas masoquistas.&lt;/p&gt;

&lt;p&gt;Já para pessoas normais, existem boas ferramentas como o &lt;a href=&#34;http://spritecow.com&#34;&gt;SpriteCow&lt;/a&gt; e o &lt;a href=&#34;http://wearekiss.com/spritepad&#34;&gt;SpritePad&lt;/a&gt; que te auxiliam nesse trabalho.&lt;/p&gt;

&lt;p&gt;Agora, se você quer algo que realmente agilize seu trabalho, seja na criação ou na manutenção de CSS Sprites, então apresento-lhe o &lt;a href=&#34;http://compass-style.org/help/tutorials/spriting/&#34;&gt;Sprite Generator&lt;/a&gt; do &lt;a href=&#34;http://compass-style.org/&#34;&gt;Compass&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Confere aí o vídeo que gravei especialmente pra vocês 🙂&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>