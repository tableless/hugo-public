<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paulo Rodrigues on Tableless</title>
    <link>https://tableless.github.io/hugo-public/author/paulo-rodrigues/index.xml</link>
    <description>Recent content in Paulo Rodrigues on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/author/paulo-rodrigues/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cuidado com invasões no WordPress</title>
      <link>https://tableless.github.io/hugo-public/cuidado-com-invasoes-no-wordpress/</link>
      <pubDate>Fri, 20 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/cuidado-com-invasoes-no-wordpress/</guid>
      <description>

&lt;p&gt;Um dos principais gerenciadores de conteúdo, o WordPress, possui ainda possui algumas falhas. É necessário ficar atento e tomar cuidado para qualquer situação.&lt;/p&gt;

&lt;p&gt;Há duas semanas, passei sérios problemas com o WordPress, com o blog &lt;a href=&#34;http://papodebuteco.net&#34;&gt;Papo de Buteco&lt;/a&gt;. Nunca tinha passado por uma situação parecida com essa, e por isso que tomar cuidado antes de agir.&lt;/p&gt;

&lt;h2 id=&#34;como-verifiquei&#34;&gt;Como verifiquei&lt;/h2&gt;

&lt;p&gt;Por otimizar o site, sempre estou verificando como as páginas do blog estão se comportando no Google. Busquei por &lt;strong&gt;site:papodebuteco.net&lt;/strong&gt; para verificar todas as minhas páginas indexas no Google, e obtive o seguinte resultado:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/04/serp-papo-de-buteco.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-5948&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2012/04/serp-papo-de-buteco-300x280.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;280&#34; srcset=&#34;uploads/2012/04/serp-papo-de-buteco-300x280.png 300w, uploads/2012/04/serp-papo-de-buteco.png 800w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ao primeiro olhar, já observei as tags de título das páginas estavam totalmente diferentes, no mínimo estranho, não é? Comecei a estudar a situação, e conclui que neste caso, aconteceu uma espécie de &lt;strong&gt;&lt;a href=&#34;http://www.mestreseo.com.br/black-hat/cloaking-aplicacao-scripts-blackhat-e-questoes-eticas&#34; title=&#34;Cloaking&#34;&gt;Cloaking&lt;/a&gt;&lt;/strong&gt;, que reproduzia a página normal para o usuário e outra página para o Google.&lt;/p&gt;

&lt;p&gt;De primeira, achei que eram os plug-ins instalados no site que estavam fazendo isso, mas até que o Google me enviou a seguinte mensagem para o &lt;strong&gt;&lt;a href=&#34;https://www.google.com/webmasters/tools&#34;&gt;Web Master Tools&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;do site:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/04/mensagem-google.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-5951&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2012/04/mensagem-google-300x211.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;211&#34; srcset=&#34;uploads/2012/04/mensagem-google-300x211.png 300w, uploads/2012/04/mensagem-google.png 1000w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ao acessar o link indicado na mensagem, e realmente foi mostrada uma página com um conteúdo não relacionado ao blog.&lt;/p&gt;

&lt;h2 id=&#34;solucionando-o-problema&#34;&gt;Solucionando o problema&lt;/h2&gt;

&lt;p&gt;O que precisa ser feito é: &lt;strong&gt;Reinstalar o WordPress para atualizar seus arquivos.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No próprio painel do gerenciador&lt;/strong&gt;, é possível fazer essa reinstalação, então nada de apagar todos os arquivos do FTP, enviar novamente e reintegrar com o banco de dados.&lt;/p&gt;

&lt;p&gt;Em seu painel de adiminstração, procure no menu de navegação por &lt;strong&gt;Atualizações&lt;/strong&gt; e siga como na imagem abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/04/menu-navegacao.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-5944&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2012/04/menu-navegacao-128x300.png&#34; alt=&#34;&#34; width=&#34;128&#34; height=&#34;300&#34; srcset=&#34;uploads/2012/04/menu-navegacao-128x300.png 128w, uploads/2012/04/menu-navegacao.png 286w&#34; sizes=&#34;(max-width: 128px) 100vw, 128px&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/04/reinstalando-wordpress.png&#34;&gt;&lt;img class=&#34;alignright size-medium wp-image-5953&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2012/04/reinstalando-wordpress-300x164.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;164&#34; srcset=&#34;uploads/2012/04/reinstalando-wordpress-300x164.png 300w, uploads/2012/04/reinstalando-wordpress.png 800w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depois disso, acessei a página que o Google indicou na mensagem e não tive mais problemas, a página foi carregou com seu conteúdo real.&lt;/p&gt;

&lt;p&gt;Para confirmar, você pode tirar a &lt;em&gt;“prova real”&lt;/em&gt; &lt;strong&gt;buscando como o Googlebot&lt;/strong&gt;, que é uma ferramenta encontrada no Google Webmaster Tools.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/04/gwmt-1.png&#34;&gt;&lt;img class=&#34;size-medium wp-image-5945 alignleft&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2012/04/gwmt-1-300x156.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;156&#34; srcset=&#34;uploads/2012/04/gwmt-1-300x156.png 300w, uploads/2012/04/gwmt-1-1024x535.png 1024w, uploads/2012/04/gwmt-1.png 1423w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Ao clicar em &lt;strong&gt;“Processando”&lt;/strong&gt; e estiver lendo a página do jeito que deveria ler, com o seu código fonte real, pode ter certeza que o problema foi resolvido.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Não se sabe ao certo ainda como essa invasão se manifestou no blog, mas é bom ficar atento a qualquer tipo de propagação estranha relacionada a seu site. O tipo de invasão apresentado no artigo não é único, podem existir outros casos espalhados. A vulnerabilidade pode também está relacionada com o servidor onde o seu site está hospedado.&lt;/p&gt;

&lt;p&gt;As páginas que não entraram no cache do Google depois que o problema foi solucionado, ainda se encontram com o mesmo conteúdo da invasão, se vocês procurarem, ainda acharam algumas páginas assim.&lt;/p&gt;

&lt;p&gt;Apesar de tudo isso, &lt;strong&gt;não houve oscilação com o número de visitas do site&lt;/strong&gt;, ele se mantéu estável. E o &lt;strong&gt;número de &lt;em&gt;backlinks&lt;/em&gt; apontados para as páginas do blog cresceu&lt;/strong&gt;, mas com um textos âncora sem relação ao conteúdo real do blog.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;Cloaking&lt;/strong&gt; é considerada uma técnica de blackhat pelo Google, caso o problema não fosse solucionado a tempo, o blog poderia ser sofrer algum tipo de punição, veja mais em: &lt;a href=&#34;http://support.google.com/webmasters/bin/answer.py?hl=pt-BR&amp;amp;answer=66355&#34;&gt;http://support.google.com/webmasters/bin/answer.py?hl=pt-BR&amp;amp;answer=66355&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Se o seu site ainda não é integrado ao Google &lt;strong&gt;&lt;a href=&#34;https://www.google.com/webmasters/tools/&#34;&gt;Web Master Tools&lt;/a&gt;&lt;/strong&gt;, acesse agora e integre! É simples, fácil, e oferece informações importantes para o seu site. Para completar e evitar que algo semelhante aconteça, confira &lt;strong&gt;&lt;a href=&#34;http://webperfeita.com/10-dicas-para-aumentar-a-seguranca-do-wordpress/&#34;&gt;dicas para aumentar a segurança no WordPress&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Quero aproveitar o espaço para agradecer &lt;a href=&#34;http://twitter.com/#!/papodebuteco&#34;&gt;Leandro Lopes&lt;/a&gt; (dono do blog Papo de Buteco), que autorizou a postagem de exemplos relacionados ao blog dele. É importante relatar o que aconteceu, ainda mais com casos verídicos, pois pode acontecer com qualquer um.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Front-end concluído, como começar no WordPress? Parte I</title>
      <link>https://tableless.github.io/hugo-public/front-end-concluido-como-comecar-wordpress-parte-i/</link>
      <pubDate>Thu, 05 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/front-end-concluido-como-comecar-wordpress-parte-i/</guid>
      <description>

&lt;p&gt;Andando pelo &lt;a href=&#34;http://tableless.com.br/forum/&#34; title=&#34;Fórum&#34; target=&#34;_blank&#34;&gt;fórum do Tableless&lt;/a&gt;, me deparei com &lt;a href=&#34;http://tableless.com.br/forum/discussion/55/customizacao-tema-wordpress&#34;&gt;esta postagem&lt;/a&gt;, e pelo que eu vi, essa é uma grande dúvida para todos que estão iniciando no desenvolvimento com WordPress.&lt;/p&gt;

&lt;p&gt;O usuário &lt;a href=&#34;http://tableless.com.br/forum/profile/375/angelolucas&#34;&gt;Angelo Lucas&lt;/a&gt; do nosso fórum postou a seguinte resposta:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Desenvolva o Front-End do tema (HTML, CSS e Javascript)&lt;/li&gt;
&lt;li&gt;Instale o PHP, Mysql na sua máquina. Baixe o WordPress e instale-o, ele vem com alguns temas incluso&lt;/li&gt;
&lt;li&gt;Duplique um tema do wordpress e começe a implementar seu HTML na programação já existente, não é difícil, não é chato.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Gostei bastante da resposta, mas o assunto é tão empolgante que merecia um conteúdo mais detalhado. E para melhorar o aprendizado e nos guiar, &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/12/layout-para-desenvolvimento-wordpress.jpg&#34; target=&#34;_blank&#34;&gt;desenhei um layout bem simples&lt;/a&gt;. &lt;strong&gt;Não reparem, sou péssimo design.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;iniciando-o-desenvolvimento&#34;&gt;Iniciando o desenvolvimento&lt;/h3&gt;

&lt;p&gt;Com o front-end concluído, duplique o tema padrão do WordPress e altere o nome da pasta duplicada para o nome do seu tema. Acho melhor duplicar, pois se perde um tempo criando os arquivos do zero. Se o seu WordPress for a partir da versão 3.2, terás dois temas padrões: o Twenty Ten e o Twenty Eleven. A diferença é que o Twenty Eleven vem programado nas tags do HTML5.&lt;/p&gt;

&lt;p&gt;Depois disso, é importante entender a &lt;a href=&#34;http://tableless.com.br/hierarquia-de-arquivos-do-wordpress/&#34; target=&#34;_blank&#34;&gt;hierarquia de arquivos do WordPress&lt;/a&gt; e saber que &lt;strong&gt;sem os arquivos index.php e style.css o tema não funciona&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O arquivo style.css, além do estilo do tema, pode-se preencher informações do tema. Adicione no inicio do style.css esses comentários:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/*
Theme Name: Nome do meu Tema
Theme URI: http://meusite.com.br
Description: Descrição do meu tema
Author: Paulo Rodrigues
Author URI: http://meusite.com.br
Version: 1.0
Tags: branco, vermelho, preto, header, menu, colunas, rodape
*/
&lt;/pre&gt;

&lt;p&gt;Personalize a partir das suas informações, mas não é necessário preencher todas elas, colocar o nome do tema e o nome do autor está ótimo.&lt;/p&gt;

&lt;p&gt;Dois arquivos do tema possuem importância e servem para aumentar a nossa produtividade, que são: header.php e footer.php e essas páginas são incluidas nas páginas através das funções get_header() e get_footer(), respectivamente.&lt;/p&gt;

&lt;p&gt;Vou mostrar um exemplo de meus arquivos header.php e footer.php para vocês terem noção.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/12/header-para-desenvolvimento-wordpress.jpg&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2011/12/header-para-desenvolvimento-wordpress.jpg&#34; alt=&#34;Header para desenvolvimento WordPress&#34; width=&#34;600&#34; height=&#34;63&#34; class=&#34;alignnone size-medium wp-image-4843&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;header.php&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html xmlns=&#34;http://www.w3.org/1999/xhtml&#34; dir=&#34;ltr&#34; lang=&#34;pt-BR&#34;&amp;gt;
&amp;lt;head profile=&#34;http://gmpg.org/xfn/11&#34;&amp;gt;
&amp;lt;meta charset=&#34;&amp;lt;?php bloginfo( &#39;charset&#39; ); ?&amp;gt;&#34; /&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;?php bloginfo(&#39;name&#39;); ?&amp;gt;&amp;lt;?php wp_title(&#39;|&#39;); ?&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;&amp;lt;?php bloginfo( &#39;stylesheet_url&#39; ); ?&amp;gt;&#34; /&amp;gt; 
&amp;lt;link rel=&#34;pingback&#34; href=&#34;&amp;lt;?php bloginfo( &#39;pingback_url&#39; ); ?&amp;gt;&#34; /&amp;gt; 
&amp;lt;link rel=&#34;alternate&#34; type=&#34;application/rss+xml&#34; title=&#34;&amp;lt;?php bloginfo(&#39;title&#39;);?&amp;gt; RSS Feed&#34; href=&#34;&amp;lt;?php bloginfo(&#39;rss2_url&#39;); ?&amp;gt;&#34; /&amp;gt;
&amp;lt;!-- Se voc&amp;ecirc; for usar coment&amp;aacute;rio no seu tema, deixe isso! --&amp;gt;
&amp;lt;?php if ( is_singular() &amp;&amp; get_option( &#39;thread_comments&#39; ) ) wp_enqueue_script( &#39;comment-reply&#39; );?&amp;gt;
&amp;lt;!-- Se voc&amp;ecirc; for usar coment&amp;aacute;rio no seu tema, deixe isso! --&amp;gt;
&amp;lt;?php
//Sempre deixa essa fun&amp;ccedil;&amp;atilde;o wp_head(); pois alguns plugins utilizam dela para retornar informa&amp;ccedil;&amp;atilde;o 
wp_head(); 
?&amp;gt; 
&amp;lt;/head&amp;gt;
&amp;lt;body &amp;lt;?php body_class(); ?&amp;gt;&amp;gt;
&amp;lt;div id=&#34;main&#34;&amp;gt;
&amp;lt;header&amp;gt;
&amp;lt;section id=&#34;logo&#34;&amp;gt;
&amp;lt;h2&amp;gt;&amp;lt;a href=&#34;&amp;lt;?php bloginfo(&#39;url&#39;); ?&amp;gt;&#34; title=&#34;&amp;lt;?php bloginfo(&#39;title&#39;); ?&amp;gt;&#34;&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;?php bloginfo(&#39;title&#39;); ?&amp;gt; - &amp;lt;?php bloginfo(&#39;description&#39;); ?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;/section&amp;gt;
&amp;lt;?php 
//Fun&amp;ccedil;&amp;atilde;o para retornar o menu
wp_nav_menu(array(
&#39;menu&#39; =&amp;gt; &#39;menu_principal&#39;,
&#39;theme_location&#39; =&amp;gt; &#39;menu_principal&#39;,
&#39;echo&#39; =&amp;gt; true,
&#39;container&#39; =&amp;gt; &#39;nav&#39;,
&#39;container_id&#39; =&amp;gt; &#39;menu&#39; 
));
?&amp;gt;
&amp;lt;/header&amp;gt; 
&amp;lt;div id=&#34;container&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Estudem essas funções: &lt;a href=&#34;http://codex.wordpress.org/pt-br:Template_Tags/bloginfo&#34;&gt;bloginfo()&lt;/a&gt;, &lt;a href=&#34;http://codex.wordpress.org/Function_Reference/wp_title&#34;&gt;wp_title()&lt;/a&gt;, &lt;a href=&#34;http://codex.wordpress.org/Function_Reference/wp_head&#34;&gt;wp_head()&lt;/a&gt; e &lt;a href=&#34;http://codex.wordpress.org/Function_Reference/wp_footer&#34;&gt;wp_footer()&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;wp_nav_menu,&lt;/strong&gt; WTF??? O que é isso, Paulo? Calma, é uma função para retornar menus, confira esse artigo de &lt;a href=&#34;http://tableless.com.br/criando-menus-no-wordpress/&#34;&gt;criação de menus no WordPress&lt;/a&gt;, que aí tenho certeza que vai entender tudo.&lt;/p&gt;

&lt;p&gt;Personalize essas páginas através do seu front-end, tente explorar o máximo dessas páginas para não perder tempo nas páginas internas.&lt;/p&gt;

&lt;p&gt;Finalizando esse inicio, o esqueleto do seu tema está pronto!&lt;/p&gt;

&lt;h3 id=&#34;trabalhando-com-a-página-inicial-e-páginas-internas&#34;&gt;Trabalhando com a página inicial e páginas internas&lt;/h3&gt;

&lt;p&gt;Beleza, concluímos nosso “esqueleto”, e a partir daí vamos criar as páginas do tema. A página índex.php é a página inicial do tema, ela só não é a página inicial, quando adicionamos ao nosso tema a pagina home.php. Mas de inicio, vamos trabalhar com a página índex.php.&lt;/p&gt;

&lt;p&gt;Já ouviram falar no &lt;strong&gt;Loop do WordPress&lt;/strong&gt;? Confiram esse &lt;a href=&#34;http://tableless.com.br/o-loop-do-wordpress/&#34;&gt;artigo&lt;/a&gt; pois vão entender para o que ela serve.&lt;/p&gt;

&lt;p&gt;Vamos ao exemplo da página inicial:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2011/12/conteudo.jpg&#34; alt=&#34;Conteudo para tema no WordPress&#34; width=&#34;600&#34; height=&#34;578&#34; class=&#34;alignnone size-full wp-image-5034&#34; srcset=&#34;uploads/2011/12/conteudo.jpg 1000w, uploads/2011/12/conteudo-300x289.jpg 300w&#34; sizes=&#34;(max-width: 600px) 100vw, 600px&#34; /&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php get_header(); ?&amp;gt;
&amp;lt;div id=&#34;blog&#34;&amp;gt;
&amp;lt;?php while (have_posts()) : the_post(); ?&amp;gt; 
&amp;lt;section class=&#34;post&#34;&amp;gt; 
&amp;lt;h1 class=&#34;title-post&#34;&amp;gt;&amp;lt;a href=&#34;&amp;lt;?php the_permalink(); ?&amp;gt;&#34; title=&#34;&amp;lt;?php the_title(); ?&amp;gt;&#34;&amp;gt;&amp;lt;?php the_title(); ?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Postado: &amp;lt;?php the_time(&#39;F j, Y&#39;); ?&amp;gt; at &amp;lt;?php the_time(&#39;g:i a&#39;); ?&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;?php the_post_thumbnail(); ?&amp;gt;
&amp;lt;?php the_content(); ?&amp;gt; 
&amp;lt;/section&amp;gt;
&amp;lt;?php endwhile; ?&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;?php get_sidebar(); ?&amp;gt;
&amp;lt;?php get_footer(); ?&amp;gt;&lt;/pre&gt;

&lt;p&gt;Estude a função &lt;a href=&#34;http://codex.wordpress.org/Function_Reference/the_time&#34;&gt;the_time()&lt;/a&gt; e a forma de &lt;a href=&#34;http://codex.wordpress.org/pt-br:Formatando_Data_e_Hora&#34;&gt;customizar data e hora dessa função&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A função &lt;strong&gt;the_post_thumbnail&lt;/strong&gt; serve para retornar os &lt;a href=&#34;http://codex.wordpress.org/Post_Thumbnails&#34;&gt;Posts Thumbnails&lt;/a&gt;, Caso não tenha interesse, pode remover a função, mas se tiver interesse, aprenda através &lt;a href=&#34;http://tableless.com.br/adicionando-post-thumbnail/&#34;&gt;desse artigo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A função get_sidebar() serve para retornar o que está no arquivo sidebar.php, e esclareça suas dúvidas &lt;a href=&#34;http://tableless.com.br/criando-sidebar-dinamica-no-wordpress/&#34;&gt;nesse artigo&lt;/a&gt; para criação de sidebars&lt;/p&gt;

&lt;p&gt;Arquivo &lt;strong&gt;sidebar.php&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div id=&#34;sidebar&#34;&amp;gt;
&amp;lt;ul class=&#34;sidebar&#34;&amp;gt;
&amp;lt;?php if(!function_exists(&#39;dynamic_sidebar&#39;) || !dynamic_sidebar(&#34;Blog Sidebar&#34;)); ?&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;Não se limite a esse artigo, aprofunde seu conhecimento através da &lt;a href=&#34;http://codex.wordpress.org/Template_Tags&#34;&gt;documentação disponibilizada pelo WordPress&lt;/a&gt;. &lt;strong&gt;“Futuque”&lt;/strong&gt; novas funções, pois é assim que se aprende, é quebrando a cara e arriscando. Basta somente ter interesse!&lt;/p&gt;

&lt;p&gt;Esperem pelas próximas partes deste artigo, pois vou aprofundar mais esse assunto e pensar no WordPress como um poderoso CMS.&lt;/p&gt;

&lt;p&gt;Quero deixar o espaço sempre aberto para quem tiver dúvidas, dar sugestões, criticas construtivas, ect. Podem comentar, enviar email e encher o fórum do Tableless, pois de lá nasceu a idéia para esse artigo e tenho certeza que nascerá os próximos também.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Melhorando carregamento do WordPress</title>
      <link>https://tableless.github.io/hugo-public/melhorando-carregamento-wordpress/</link>
      <pubDate>Thu, 09 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/melhorando-carregamento-wordpress/</guid>
      <description>

&lt;!--a href=&#34;http://tableless.com.br/wp-content/uploads/2011/05/site-speed.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2011/05/site-speed.png&#34; alt=&#34;Velocidade do site&#34; width=&#34;400&#34; height=&#34;300&#34; class=&#34;alignnone size-full wp-image-3788&#34; srcset=&#34;uploads/2011/05/site-speed.png 400w, uploads/2011/05/site-speed-300x225.png 300w&#34; sizes=&#34;(max-width: 400px) 100vw, 400px&#34; /&gt;&lt;/a&gt;
&lt;em&gt;(Imagem retirada de http://www.netpaths.net/blog/how-to-increase-site-speed-for-google-page-load-algorithm/, em 02/06/11 às 21:06)&lt;/em--&gt;

&lt;p&gt;A web cresceu, e com isso várias tecnologias e ferramentas foram criadas ou melhoradas para suprir necessidades requisitadas pelos usuários. Ao longo do tempo clientes e usuários vão pedindo sites mais bonitos e atraentes, e também exigindo rapidez. Para quem usa WordPress, existe aperfeiçoamento e acertos para deixar ele mais rápido. Já para quem não usa, lamento, mas é bom prestar atenção algumas dicas, pois podem servir.&lt;/p&gt;

&lt;h3 id=&#34;comprima-html-css-e-js&#34;&gt;Comprima HTML, CSS e JS&lt;/h3&gt;

&lt;p&gt;Comprimir arquivos é essencial para reduzir o seu tamanho e melhorar o carregamento, pois menor é o seu tamanho, melhor e mais rápido ele vai abrir.&lt;/p&gt;

&lt;p&gt;Para isso, usa-se o WP-Minify, este plug-in auxilia na compressão destes arquivos. &lt;a href=&#34;http://wordpress.org/extend/plugins/wp-minify/&#34; title=&#34;Baixe WP-Minify&#34;&gt;Baixe WP-Minify&lt;/a&gt;, instale e ative as opções de compressão de que desejar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Atenção:&lt;/strong&gt; Ativando a compressão de HTML, se o seu código não estiver todo identado, não se espante. Quer uma dica? Se fores assim como eu, ative apenas a compressão do CSS e JS.&lt;/p&gt;

&lt;h3 id=&#34;otimize-suas-imagens&#34;&gt;Otimize suas imagens&lt;/h3&gt;

&lt;p&gt;Por uma necessidade de sites bonitos, na maioria das vezes há um uso excessivo de imagens que na maioria das vezes estão mal otimizadas com alta qualidade.&lt;/p&gt;

&lt;p&gt;Tente reduzir o tamanho das imagens do seu site sem que se atinja tanto a sua qualidade. Seja um background ou uma imagem qualquer.&lt;/p&gt;

&lt;p&gt;Para reduzir o tamanho de imagens enviadas via WordPress, utilize o &lt;a href=&#34;http://wordpress.org/extend/plugins/wp-smushit/&#34; title=&#34;plug-in WP Smush.it&#34;&gt;plug-in WP Smush.it&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;use-um-plug-in-de-cache&#34;&gt;Use um Plug-in de Cache&lt;/h3&gt;

&lt;p&gt;Sempre é bom ter um plug-in de cache ativado no WordPress, como já citei no artigo “&lt;a href=&#34;http://tableless.com.br/otimizando-site-wordpress-seo&#34; title=&#34;Otimizando seu site em WordPress para SEO&#34;&gt;Otimizando seu site em WordPress para SEO&lt;/a&gt;”, o plug-in de cache, também ajuda no carregamento das páginas.&lt;/p&gt;

&lt;p&gt;Re-indico &lt;a href=&#34;http://wordpress.org/extend/plugins/wp-super-cache/&#34; title=&#34;WP Super Cache&#34;&gt;WP Super Cache&lt;/a&gt;, &lt;a href=&#34;http://wordpress.org/extend/plugins/wp-super-cache/&#34; title=&#34;W3 Total Cache&#34;&gt;W3 Total Cache&lt;/a&gt;, &lt;a href=&#34;http://wordpress.org/extend/plugins/batcache/&#34; title=&#34;Batcache&#34;&gt;Batcache&lt;/a&gt; ou &lt;a href=&#34;http://wordpress.org/extend/plugins/hyper-cache/&#34; title=&#34;Hyper Cache&#34;&gt;Hyper Cache.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;dicas-úteis&#34;&gt;Dicas úteis&lt;/h3&gt;

&lt;ol style=&#34;margin-top: 10px&#34;&gt;
  &lt;li&gt;
    &lt;strong&gt;Estrutura dos códigos:&lt;/strong&gt; A estrutura do código também interfere, seja ele HTML, CSS ou JS. Para HTML, faça um código semântico, sem muitas gambiarras. Confira esse &lt;a href=&#34;http://tableless.com.br/6-estrategias-para-melhorar-a-organizacao-do-seu-css-2&#34; title=&#34;artigo para melhorar organização do código CSS&#34;&gt;artigo para melhorar organização do código CSS&lt;/a&gt;, que vai ajudar muito.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;Boa hospedagem:&lt;/strong&gt; Ter um servidor com melhor qualidade ajuda muito no carregamento. Escolhendo uma boa hospedagem, tente também conter quedas no servidor.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;Desative plug-ins desnecessários:&lt;/strong&gt; É relevante desativar plug-ins desnecessários ou sem muita utilidade, pois seus arquivos quando requisitados vão ser acionados, aumentando o carregamento final.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;Evite muitas requisições:&lt;/strong&gt; Evite requisições desnecessárias, seja ela de CSS, JS ou até mesmo de outras páginas.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;strong&gt;Mantenha seu WordPress atualizado:&lt;/strong&gt; As atualizações do WordPress não vem em vão, pois tem sua importância. Atualizando, você vai melhorar o desempenho, além de evitar vulnerabilidades, aumentando a segurança.
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;vamos-refletir&#34;&gt;Vamos Refletir&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Repare&amp;#8230;&lt;/strong&gt; Ter um site bonito, nem sempre é ter um site pesado. Se prestarmos atenção, melhora-se muita coisa no site. Fique atento, pois por alguns milésimos você perder um usuário e/ou ficar com uma posição indesejada nos mecanismos de busca.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Com o CSS3&lt;/strong&gt;, muita coisa vai melhorar. Muita coisa será substituída com os novos elementos. Uma pena que não virou padrão ainda, nos deixa mais triste saber que vai demorar até virar padrão. &lt;em&gt;(Mesmo assim)&lt;/em&gt;, seja ousado e use alguns elementos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relação com SEO:&lt;/strong&gt; Demonstrei certa preocupação com o SEO se tratando deste assunto, pois o carregamento da página vai interferir no seu posionamento em mecanismos de busca, em especial o Google.&lt;/p&gt;

&lt;p&gt;Você pode analisar, através da &lt;a href=&#34;http://code.google.com/speed/page-speed/&#34; title=&#34;ferramenta do Google Page Speed&#34;&gt;ferramenta do Google &amp;#8211; Page Speed&lt;/a&gt;, a velocidade no carregamento do site. Se você usa Google Analytics, segue uma &lt;a href=&#34;http://www.domicioneto.com/web-analytics/google-analytics/trackpageloadtime-monitorar-carregamento-google-analytics/&#34; title=&#34;dica para analisar o carregamento do site&#34;&gt;dica para analisar o carregamento do site&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Posts Formats do WordPress</title>
      <link>https://tableless.github.io/hugo-public/posts-formats-do-wordpress/</link>
      <pubDate>Wed, 18 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/posts-formats-do-wordpress/</guid>
      <description>

&lt;p&gt;O WordPress depois de sua atualização para versão 3.1, trouxe uma função de Formato nos Posts, que consiste em personalizar a visualização do post. É uma funcionalidade para temas, que oferece uma lista de formatos que estão disponíveis. São suportados os seguintes formatos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;aside&lt;/li&gt;
&lt;li&gt;gallery&lt;/li&gt;
&lt;li&gt;link&lt;/li&gt;
&lt;li&gt;image&lt;/li&gt;
&lt;li&gt;quote&lt;/li&gt;
&lt;li&gt;status&lt;/li&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;li&gt;audio&lt;/li&gt;
&lt;li&gt;chat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Esses formatos são padrões, até hoje não se tem maneiras para criar um novo tipo de formato.&lt;/p&gt;

&lt;h3 id=&#34;ativando-o-suporte-aos-posts-formats&#34;&gt;Ativando o suporte aos Posts Formats&lt;/h3&gt;

&lt;p&gt;Para ativar o suporte, adicione este seguinte código no arquivo &lt;strong&gt;functions.php&lt;/strong&gt; do seu tema:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&amp;lt;?php add_theme_support(&amp;lsquo;post-formats&amp;rsquo;, array(&amp;lsquo;aside&amp;rsquo;, &amp;lsquo;gallery&amp;rsquo;,&amp;lsquo;link&amp;rsquo;,&amp;lsquo;image&amp;rsquo;)); ?&amp;gt;[/cc]&lt;/p&gt;

&lt;p&gt;Não é obrigatório usar todos os formatos, e sim os quais você achar necessário. Caso queria adicionar mais formatos, adicione dentro do array os formatos disponíveis na lista acima.&lt;/p&gt;

&lt;p&gt;Com este código, só é adicionado o suporte para o conteúdo de Posts, caso queria adicionar em outros tipos de conteúdo, adicione o seguinte código:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&amp;lt;?php add_post_type_support( &amp;lsquo;page&amp;rsquo;, &amp;lsquo;post-formats&amp;rsquo; ); ?&amp;gt;[/cc]&lt;/p&gt;

&lt;p&gt;Essa função habilita o suporte para outros tipos de conteúdo, no primeiro parâmetro defini-se o nome do conteúdo e no segundo, o tipo de suporte.&lt;/p&gt;

&lt;p&gt;Após ativar o suporte, terás dentro da edição do seus posts, um espaço feito esse para edição dos Posts Formats.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2011/04/edicao.jpg&#34; alt=&#34;&#34; width=&#34;281&#34; height=&#34;130&#34; class=&#34;alignnone size-full wp-image-3669&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;personalizando-o-retorno-dos-formatos&#34;&gt;Personalizando o retorno dos formatos&lt;/h3&gt;

&lt;p&gt;Para especificar o suporte, utilizamos formatos padrões. Mas como ele vai ser visualizado, como ele vai ser interpretado, é você quem vai definir.&lt;/p&gt;

&lt;p&gt;Um exemplo simples de manipulação dos formatos (como isso é um post, este código deve ser adicionado no loop) :&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php if ( has_post_format( &amp;lsquo;link&amp;rsquo; )) : ?&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;&lt;?php echo get_the_content(); ?&gt;&amp;#8221; title=&amp;#8221;&lt;/p&gt;

&lt;p&gt;&amp;lt;?php the_title(); ?&amp;gt;&amp;#8220;&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;?php the_title(); ?&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;?php elseif(has_post_format( &amp;lsquo;image&amp;rsquo; )) : ?&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;&lt;?php echo get_the_content(); ?&gt;&amp;#8221; title=&amp;#8221;&lt;/p&gt;

&lt;p&gt;&amp;lt;?php the_title(); ?&amp;gt;&amp;#8221; alt=&amp;#8221;&lt;/p&gt;

&lt;p&gt;&amp;lt;?php the_title(); ?&amp;gt;&amp;#8221; /&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;?php endif; ?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;A função &lt;strong&gt;has_post_format&lt;/strong&gt;, é um tipo de &lt;a href=&#34;http://tableless.com.br/tags-condicionais-do-wordpress&#34; title=&#34;Guia de Referência de Tags Condicionais | Tableless&#34;&gt;tag condicional&lt;/a&gt; que verifica qual o tipo formato visualizado.&lt;/p&gt;

&lt;p&gt;No exemplo acima, utilizei os dados enviados pelo content como um link para algum site ou link para leitura de imagem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dica:&lt;/strong&gt; Se for usar este exemplo, antes de postar, utilize a aba de editor HTML para evitar qualquer tipo de formatação, e use &lt;strong&gt;get_the_content&lt;/strong&gt; para retornar o que foi enviado pelo editor, para também evitar qualquer tipo de formatação e retornar somente a informação enviada.&lt;/p&gt;

&lt;p&gt;Você pode personalizar este retorno das maneiras que quiser. Se for usar esta função, seja mais criativo possível, explorando o máximo que essa função tem para oferecer.&lt;/p&gt;

&lt;p&gt;Caso tenha maiores dúvidas, consulte o &lt;a href=&#34;http://codex.wordpress.org/Post_Formats&#34; title=&#34;Codex de Posts Formats&#34;&gt;codex de Posts Formats&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tags Condicionais do WordPress</title>
      <link>https://tableless.github.io/hugo-public/tags-condicionais-do-wordpress/</link>
      <pubDate>Tue, 12 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/tags-condicionais-do-wordpress/</guid>
      <description>

&lt;p&gt;As Tags Condicionais são funções próprias do WordPress capazes de manipular todo o conteúdo de sua página. Com elas, você ganha aquele tempo que iria perder criando aquelas condições para retornar seus valores de maneira personalizada. Geralmente retornam o valor em Booleano, ou seja, TRUE (verdadeiro) ou FALSE (falso).&lt;/p&gt;

&lt;h3 id=&#34;como-usar&#34;&gt;Como usar?&lt;/h3&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php
    if(tag_condicional()){
        //se verdadeiro, retorne isso
    }else{
        //se falso, retorne isso
    }
?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;Tags que podem receber parâmetros dentro de sua função, ex:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php
    if(tag_condicional(‘valor’)){
        //se verdadeiro, retorne isso
    }else{
        //se falso, retorne isso
    }
?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;A tabela abaixo que encontrei no livro WordPress 3, é basicamente um mini-guia das tags que precisam de parâmetros e das que não precisam.&lt;/p&gt;

&lt;table summary=&#34;Guia básico de Tags Condicionais&#34; style=&#34;width: 90%;text-align: center&#34;&gt;
  &lt;tr&gt;
    &lt;th&gt;
      Condicional
    &lt;/th&gt;
    
    &lt;th&gt;
      ID
    &lt;/th&gt;
    
    &lt;th&gt;
      Slug
    &lt;/th&gt;
    
    &lt;th&gt;
      Título
    &lt;/th&gt;
    
    &lt;th&gt;
      Array
    &lt;/th&gt;
    
    &lt;th&gt;
      Outro
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      is_single
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      is_sticky
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      is_page
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      is_page_template
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      Nome do arquivo
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      is_category
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      in_category
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      is_tag
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      has_tag
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      is_tax
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      is_author
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
      Nome do usuário
    &lt;/td&gt;
    
    &lt;td&gt;
      Nickname
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td style=&#34;font-weight: bold&#34;&gt;
      has_excerpt
    &lt;/td&gt;
    
    &lt;td&gt;
      X
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;th colspan=&#34;6&#34;&gt;
      As tags seguintes não aceitam argumentos; elas são verdadeiras se o modelo de arquivo correspondente está sendo usado para exibir a página atual.
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      is_home
    &lt;/td&gt;
    
    &lt;td&gt;
      is_search
    &lt;/td&gt;
    
    &lt;td&gt;
      is_day
    &lt;/td&gt;
    
    &lt;td&gt;
      is_feed
    &lt;/td&gt;
    
    &lt;td&gt;
      is_404
    &lt;/td&gt;
    
    &lt;td&gt;
      is_comments_popup
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      is_front_page
    &lt;/td&gt;
    
    &lt;td&gt;
      is_time
    &lt;/td&gt;
    
    &lt;td&gt;
      is_month
    &lt;/td&gt;
    
    &lt;td&gt;
      is_attachment
    &lt;/td&gt;
    
    &lt;td&gt;
      is_trackback
    &lt;/td&gt;
    
    &lt;td&gt;
      is_active_sidebar
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      is_archive
    &lt;/td&gt;
    
    &lt;td&gt;
      is_date
    &lt;/td&gt;
    
    &lt;td&gt;
      is_year
    &lt;/td&gt;
    
    &lt;td&gt;
      is_singular
    &lt;/td&gt;
    
    &lt;td&gt;
      is_preview
    &lt;/td&gt;
    
    &lt;td&gt;
      is_admin
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;th colspan=&#34;6&#34;&gt;
      As tags seguintes não aceitam argumentos. Elas retornam informações sobre a página que está sendo visualizada.
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      comments_open
    &lt;/td&gt;
    
    &lt;td&gt;
      pings_open
    &lt;/td&gt;
    
    &lt;td&gt;
      is_paged
    &lt;/td&gt;
    
    &lt;td&gt;
      in_the_loop
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Para melhorar o conteúdo e o aprendizado, criei um &lt;a href=&#34;http://tableless.github.com/exemplos/guia-tags-condicionais-wp/index.html&#34; title=&#34;Guia de Referência das Tags Condicionais do WordPress&#34; rel=&#34;external&#34;&gt;Guia de Referência das Tags Condicionais do WordPress&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Custom Post Types no WordPress</title>
      <link>https://tableless.github.io/hugo-public/custom-post-types-wordpress/</link>
      <pubDate>Tue, 29 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/custom-post-types-wordpress/</guid>
      <description>

&lt;p&gt;Custom Post Types é a função que manipula os tipos de conteúdo no WordPress, ou seja, pode-se criar conteúdos personalizados a partir da sua demanda. Isso é uma das provas mais concretas que temos hoje um CMS muito forte que não serve apenas para criar blog e/ou sites de pequeno porte.&lt;/p&gt;

&lt;h3 id=&#34;criando-custom-post-types&#34;&gt;Criando Custom Post Types&lt;/h3&gt;

&lt;p&gt;Como o assunto é muito amplo, criarei com vocês um exemplo de Notícias.&lt;/p&gt;

&lt;p&gt;Em functions.php, adicione:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
    add_action(&#39;init&#39;, &#39;type_post_noticias&#39;);
 
    function type_post_noticias() { 
        $labels = array(
            &#39;name&#39; =&amp;gt; _x(&#39;Not&amp;iacute;cias&#39;, &#39;post type general name&#39;),
            &#39;singular_name&#39; =&amp;gt; _x(&#39;Not&amp;iacute;cia&#39;, &#39;post type singular name&#39;),
            &#39;add_new&#39; =&amp;gt; _x(&#39;Adicionar Novo&#39;, &#39;Novo item&#39;),
            &#39;add_new_item&#39; =&amp;gt; __(&#39;Novo Item&#39;),
            &#39;edit_item&#39; =&amp;gt; __(&#39;Editar Item&#39;),
            &#39;new_item&#39; =&amp;gt; __(&#39;Novo Item&#39;),
            &#39;view_item&#39; =&amp;gt; __(&#39;Ver Item&#39;),
            &#39;search_items&#39; =&amp;gt; __(&#39;Procurar Itens&#39;),
            &#39;not_found&#39; =&amp;gt;  __(&#39;Nenhum registro encontrado&#39;),
            &#39;not_found_in_trash&#39; =&amp;gt; __(&#39;Nenhum registro encontrado na lixeira&#39;),
            &#39;parent_item_colon&#39; =&amp;gt; &#39;&#39;,
            &#39;menu_name&#39; =&amp;gt; &#39;Not&amp;iacute;cias&#39;
        );

        $args = array(
            &#39;labels&#39; =&amp;gt; $labels,
            &#39;public&#39; =&amp;gt; true,
            &#39;public_queryable&#39; =&amp;gt; true,
            &#39;show_ui&#39; =&amp;gt; true,           
            &#39;query_var&#39; =&amp;gt; true,
            &#39;rewrite&#39; =&amp;gt; true,
            &#39;capability_type&#39; =&amp;gt; &#39;post&#39;,
            &#39;has_archive&#39; =&amp;gt; true,
            &#39;hierarchical&#39; =&amp;gt; false,
            &#39;menu_position&#39; =&amp;gt; null,
&#39;register_meta_box_cb&#39; =&amp;gt; &#39;noticias_meta_box&#39;,       
            &#39;supports&#39; =&amp;gt; array(&#39;title&#39;,&#39;editor&#39;,&#39;thumbnail&#39;,&#39;comments&#39;, &#39;excerpt&#39;, &#39;custom-fields&#39;, &#39;revisions&#39;, &#39;trackbacks&#39;)
          );
 
register_post_type( &#39;noticias&#39; , $args );
flush_rewrite_rules();
}
?&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Primeiro adicionamos a função &lt;strong&gt;add_action&lt;/strong&gt;, que vai abrigar dois parâmetros, o gancho (aonde vai rodar a função) e a função callback (a função que vai ser chamada com as informações). É função &lt;strong&gt;type_post_noticias&lt;/strong&gt; que vai armazenar as informações do post. A variável &lt;strong&gt;$labels&lt;/strong&gt;, está indicando os valores para cada título.&lt;/p&gt;

&lt;p&gt;A variável &lt;strong&gt;$args&lt;/strong&gt; é onde vamos colocar as informações do post. Explico com mais detalhes abaixo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;labels:&lt;/strong&gt; Indica a variável que contém as informações do label&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;public:&lt;/strong&gt; determina se o conteúdo pode ser visto no painel de administração, por padrão é falso.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;publicly_queryable:&lt;/strong&gt; determina se a consulta pode ser realizada usando o argumento post_type, por padrão ele herda o valor do public.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;show_ui:&lt;/strong&gt; determina se telas de adicionar e editar o post devem ser adicionadas esse tipo de post, por padrão ele herda o valor do public.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;query_var:&lt;/strong&gt; evita consultas ou valores de sequência, por padrão é falso.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rewrite:&lt;/strong&gt; reescrita do link, por padrão é verdadeiro.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;capability_type:&lt;/strong&gt; define o tipo de conteúdo que o tipo de post personalizado vai seguir, por padrão é post.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;has_archive:&lt;/strong&gt; permite os arquivos do tipo do post, por padrão é falso.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hierarchial:&lt;/strong&gt; determina que o tipo do post é hierárquico (igual o das páginas), por padrão o valor é falso&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;menu_position:&lt;/strong&gt; determina a ordem do menu, por padrão é null (ele ficará em baixo do menu dos comentários), mas pode receber esses seguintes valores

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;5&lt;/strong&gt; – Em baixo do menu Post;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;10&lt;/strong&gt; – Em baixo do menu mídia;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;20&lt;/strong&gt; – Em baixo do menu páginas;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;60&lt;/strong&gt; – Em baixo do primeiro separador;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;100&lt;/strong&gt; – Em baixo do segundo separador.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;register_meta_box_cb:&lt;/strong&gt; Retorna a função que chamará as caixas de meta para o formulário (irei explicar à frente).&lt;/p&gt;

&lt;p&gt;supports: determina os recursos aceitos para esse tipo de post, por padrão é vazio, por isso tem que definir, ele recebe esses valores:&lt;/p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;author:&lt;/strong&gt; o autor por uma área personalizada&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;title:&lt;/strong&gt; inclui o título ao tipo do post&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;editor:&lt;/strong&gt; inclui a área de conteúdo do post (VISUAL ou HTML) e uploader de mídia&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;excerpts:&lt;/strong&gt; inclui o campo de resumo&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;thumbnail:&lt;/strong&gt; determina se o tipo de post pode inlcuir miniatura de post (&lt;a href=&#34;http://tableless.com.br/adicionando-post-thumbnail&#34;&gt;http://tableless.com.br/adicionando-post-thumbnail&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;comments:&lt;/strong&gt; inclui os comentários&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;trackbacks:&lt;/strong&gt; inclui os trackbacks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;custom-fields:&lt;/strong&gt; inclui a baixa de Custom Fields e se os campos serão automaticamente salvos&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;revisions:&lt;/strong&gt; inclui revisões (armazenadas ou exibidas)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;page-attributes:&lt;/strong&gt; inclui a caixa Page Attributes (são encontradas na inserção de páginas), contendo as opções de parent, template e menu order.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para o registro do post, é necessário a função &lt;strong&gt;register_post_type&lt;/strong&gt;, que abrigará dois parâmetros. No primeiro é definido o nome do post (de preferência coloque em letras minúsculas e sem espaço, uma slug) e o outro agregará as demais informações do post, neste caso, a variável $args.&lt;/p&gt;

&lt;h3 id=&#34;criando-taxonomias&#34;&gt;Criando Taxonomias&lt;/h3&gt;

&lt;p&gt;A taxonomia é uma forma de criar um tipo de categoria para o tipo de conteúdo.&lt;/p&gt;

&lt;p&gt;Adicione em functions.php:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
register_taxonomy(
&#34;categorias&#34;, 
      &#34;noticias&#34;, 
      array(            
        &#34;label&#34; =&amp;gt; &#34;Categorias&#34;, 
            &#34;singular_label&#34; =&amp;gt; &#34;Categoria&#34;, 
            &#34;rewrite&#34; =&amp;gt; true,
            &#34;hierarchical&#34; =&amp;gt; true
)
);
?&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Com a função &lt;strong&gt;register_taxonomy&lt;/strong&gt;, registramos uma nova taxonomia. O primeiro valor aonde será definido o nome da taxonomia (de preferência de letras minúsculas e sem espaço), o segundo valor é definido o nome do tipo de conteúdo registrado, onde essa taxonomia se agregará. No array, é definido informações já explicadas acima.&lt;/p&gt;

&lt;h3 id=&#34;criando-campos-personalizados&#34;&gt;Criando campos personalizados&lt;/h3&gt;

&lt;p&gt;Vamos trabalhar com a variável &lt;strong&gt;register_meta_box&lt;/strong&gt; na criação de campos personalizados. Para essa variável, foi definido o valor &lt;strong&gt;noticias_meta_box&lt;/strong&gt;, que será a nossa função callback, a função que vai ser chamada para a criação da meta.&lt;/p&gt;

&lt;p&gt;Em functions.php adicione:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
function noticias_meta_box(){        
        add_meta_box(&#39;meta_box_test&#39;, __(&#39;Meta Box&#39;), &#39;meta_box_meta_test&#39;, &#39;noticias&#39;, &#39;side&#39;, &#39;high&#39;);
}
?&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Retornamos a função definida para a criação de meta box, dentro dela definimos na função add_meta_box, os argumentos respectivamente, são:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;$id:&lt;/strong&gt; o nome para o meta box, destinado para uso interno&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$title:&lt;/strong&gt; o título da caixa&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$callback:&lt;/strong&gt; a função que irá ser chamada para imprimir o conteúdo da caixa&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$page:&lt;/strong&gt; o tipo de post que vão existir esse meta, para aparecer em mais de um, coloque dentro de um array, ex: array(‘noticias’, ‘post’)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$context:&lt;/strong&gt; em qual parte da página de edição ela vai está (normal, advanced ou side [lateral])&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$priority:&lt;/strong&gt; em qual altura a caixa deve aparecer dentro da seção (high [alta], normal, low[baixa), a depender do valor, caixas com prioridade maior ficará encima&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Depois que definimos a meta, vamos agora retornar a função que vai imprimir o conteúdo da caixa:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
function meta_box_meta_test(){
      global $post;
      $metaBoxValor = get_post_meta($post-&amp;gt;ID, &#39;valor_meta&#39;, true); 
?&amp;gt;        
    &amp;lt;label for=&#34;inputValorMeta&#34;&amp;gt;Valor: &amp;lt;/label&amp;gt;
    &amp;lt;input type=&#34;text&#34; name=&#34;valor_meta&#34; id=&#34;inputValorMeta&#34; value=&#34;&amp;lt;?php echo $metaBoxValor; ?&amp;gt;&#34; /&amp;gt;
&amp;lt;?php
    }
?&amp;gt;
&lt;/pre&gt;

&lt;p&gt;A função foi criada, dentro dela imprimi-se o que o Box vai conter. Para garantir que o campo retornado é necessário usar a função &lt;strong&gt;get_post_meta&lt;/strong&gt;. Ela requer três argumentos: o ID do post, o nome do campo (se possível sem acentos e nem espaços) e um valor true/false determinando se a função deve retornar um valor individual ou não.&lt;/p&gt;

&lt;p&gt;Por fim criaremos a função que vai salvar as alterações dos campos personalizados:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
    add_action(&#39;save_post&#39;, &#39;save_noticias_post&#39;);
    
    function save_noticias_post(){
        global $post;        
            update_post_meta($post-&amp;gt;ID, &#39;valor_meta&#39;, $_POST[&#39;valor_meta&#39;]);
    }
?&amp;gt; 
&lt;/pre&gt;

&lt;p&gt;Inicialmente adicionamos a ação no gancho &lt;strong&gt;save_post&lt;/strong&gt; com o retorno da função &lt;strong&gt;save_noticias_post&lt;/strong&gt;. A função &lt;strong&gt;update_post_meta&lt;/strong&gt; vai receber três argumentos, os dois primeiros serão iguais aos explicados na função &lt;strong&gt;get_post_meta&lt;/strong&gt;, a única diferença que o ultimo argumento vai receber o valor alterado, caso seja alterado manualmente colocamos uma simples string com o outro valor. Neste caso a alteração será feita após o envio do formulário.&lt;/p&gt;

&lt;h3 id=&#34;criando-um-loop-personalizado&#34;&gt;Criando um LOOP personalizado&lt;/h3&gt;

&lt;p&gt;Vamos criar o LOOP personalizado de acordo com o tipo de post, caso ainda não tenha visto o que seja um LOOP, &lt;a href=&#34;http://tableless.com.br/o-loop-do-wordpress&#34; title=&#34;O Loop do WordPress - Tableless&#34;&gt;veja&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aonde queria que aparecesse a repetição, adicione:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php 
$newsArgs = array( &#39;post_type&#39; =&amp;gt; &#39;noticias&#39;, &#39;posts_per_page&#39; =&amp;gt; 4);                   
                        
      $newsLoop = new WP_Query( $newsArgs );                  
                        
      while ( $newsLoop-&amp;gt;have_posts() ) : $newsLoop-&amp;gt;the_post();              ?&amp;gt;
&amp;lt;div class=&#34;news&#34;&amp;gt;                                
        &amp;lt;h1&amp;gt;&amp;lt;a href=&#34;&amp;lt;?php the_permalink(); ?&amp;gt;&#34; title=&#34;&amp;lt;?php the_title(); ?&amp;gt;&#34;&amp;gt;&amp;lt;?php the_title(); ?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
            &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;?php the_time(&#39;F jS, Y&#39;) ?&amp;gt;&amp;lt;/strong&amp;gt; by &amp;lt;?php the_author_posts_link() ?&amp;gt;&amp;lt;/p&amp;gt;
            &amp;lt;p&amp;gt;&amp;lt;?php the_content(); ?&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;?php echo get_the_term_list( $post-&amp;gt;ID, &#39;categorias&#39;, &#39;Categorias: &#39;, &#39; &#39;); ?&amp;gt;&amp;lt;/p&amp;gt;
            &amp;lt;p&amp;gt;Retornando o campo personalizado: &amp;lt;?php echo get_post_meta($post-&amp;gt;ID, &#39;valor_meta&#39;, true); ?&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;?php endwhile; ?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;O único termo desconhecido no Loop é a função &lt;strong&gt;get_the_term_list&lt;/strong&gt;, que vai retornar a taxonomia para o post. O primeiro argumento é o valor do ID do post, o segundo valor é o nome definido da taxonomia, o terceiro valor é o que vai retonar antes de retornar as taxonomias e o último o separador.&lt;/p&gt;

&lt;p&gt;Não há dificuldade, o segredo está na variável &lt;strong&gt;$newsArgs&lt;/strong&gt;, que é aonde você vai definir as opções da repetição, ele pode receber mais argumentos, que você pode ver em: &lt;a href=&#34;http://codex.wordpress.org/Function_Reference/WP_Query&#34;&gt;http://codex.wordpress.org/Function_Reference/WP_Query&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para visualizar um post, editamos as informações no arquivo &lt;strong&gt;single.php&lt;/strong&gt; do nosso tema, quando temos um Custom Post Type, por padrão ele lê com essa página, caso queria ter uma pagina só para o tipo de post, você pode uma nova página chamada &lt;strong&gt;single-{slug}.php&lt;/strong&gt;, ou seja, essa slug seria trocada pelo nome do Custom Post Type, no nosso caso, &lt;strong&gt;single-noticias.php&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;feeds-para-tipos-de-post-personalizado&#34;&gt;Feeds para tipos de post personalizado&lt;/h3&gt;

&lt;p&gt;Se seu site existe muitos leitores via feed e você quer mostrar o conteúdo personalizado, como fazer? Lendo um livro, WordPress 3 Básico (livro que indico para iniciantes ou desenvolvedores natos), achei essa solução, muito simples.&lt;/p&gt;

&lt;p&gt;Em functions.php, adicione:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
add_filter(&#39;pre_get_posts&#39;, &#39;postsfeed&#39;);
    
    function postsfeed($query){
        if( is_feed() ){
            $query-&amp;gt;set(&#39;post_type&#39;, array(&#39;post&#39;, &#39;noticias&#39;));
        }
        return $query;
    }
?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;No código vamos adicionar o filtro para a consulta de conteúdo para o Feed, você pode adicionar inúmeros conteúdos personalizados.&lt;/p&gt;

&lt;h3 id=&#34;reduzindo-o-código&#34;&gt;Reduzindo o código&lt;/h3&gt;

&lt;p&gt;Existe mesmo a necessidade para registrar o Custom Post Type a quantidade de argumentos que foi mostrado? Não.&lt;/p&gt;

&lt;p&gt;Neste artigo fez questão de mostrar a maioria das variáveis, mas você pode reduzir o código ainda mais em futuras alterações. Em vez de registrar o seu conteúdo com aquele código enorme, pode-se substituir por:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
add_action(&#39;init&#39;, &#39;type_post_noticias&#39;);
 
    function type_post_noticias() { 
        $labels = array(
            &#39;name&#39; =&amp;gt; _x(&#39;Not&amp;iacute;cias&#39;, &#39;post type general name&#39;),
            &#39;singular_name&#39; =&amp;gt; _x(Not&amp;iacute;cia&#39;, &#39;post type singular name&#39;)
        );

        $args = array(
            &#39;labels&#39; =&amp;gt; $labels,
            &#39;public&#39; =&amp;gt; true,            
            &#39;register_meta_box_cb&#39; =&amp;gt; &#39;noticias_meta_box&#39;,
            &#39;supports&#39; =&amp;gt; array(&#39;title&#39;,&#39;editor&#39;,&#39;thumbnail&#39;,&#39;comments&#39;, &#39;excerpt&#39;, &#39;custom-fields&#39;, &#39;revisions&#39;, &#39;trackbacks&#39;)
          );
 
    register_post_type( &#39;noticias&#39; , $args );
    flush_rewrite_rules();  
?&amp;gt; 
&lt;/pre&gt;

&lt;p&gt;Ambas as formas estão corretas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Otimizando seu site em WordPress para SEO</title>
      <link>https://tableless.github.io/hugo-public/otimizando-site-wordpress-seo/</link>
      <pubDate>Thu, 17 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/otimizando-site-wordpress-seo/</guid>
      <description>

&lt;p&gt;Uma característica que defina o WordPress é a &lt;strong&gt;customização&lt;/strong&gt;. Em poucas linhas conseguimos soluções significantes. Seja trabalhando com suas funções ou com seus plugins, temos resultados objetivos para preparar um Blog e até mesmo um site de grande porte, como temos hoje, vários exemplos disso.&lt;/p&gt;

&lt;p&gt;Elogiam muito o WordPress por ele ter uma facilidade para &lt;a href=&#34;http://www.oitobitdigital.com.br/servico/otimizacao-de-sites-seo/&#34;&gt;otimização de sites&lt;/a&gt; (SEO). Antes de começarem a ler as dicas que vou citar, faça a seguinte reflexão: O que é um site hoje, sem ser bem indexado pelos mecanismos de busca?&lt;/p&gt;

&lt;h3 id=&#34;melhore-a-tag-title-do-seu-site&#34;&gt;Melhore a tag title do seu site&lt;/h3&gt;

&lt;p&gt;Você acha mesmo que a tag de título do seu site não tem importância? Espero que não, pois é com ela que os mecanismos de busca reconhecem uma das primeiras informações do seu site.&lt;/p&gt;

&lt;p&gt;Coloque o seu título da seguinte forma:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;title&gt;
  &amp;lt;?php wp_title(“|”, true, ‘right’); ?&amp;gt;&amp;lt;?php bloginfo(‘name’); ?&amp;gt;
&lt;/title&gt;[/cce]&lt;/p&gt;

&lt;p&gt;A função &lt;strong&gt;wp_title&lt;/strong&gt; imprime vários resultados a depender da sua página.&lt;/p&gt;

&lt;h3 id=&#34;links-permanentes-permalinks&#34;&gt;Links permanentes (Permalinks)&lt;/h3&gt;

&lt;p&gt;Quem usa WordPress e não usa essa função básica, não sabe o que está perdendo. A URL também tem uma função importante para indexação de sites, pois também é reconhecido antes da página ser carregada. O seu site sairia na frente de diversas URL’s que usam aqueles parâmetros grandes e sem semântica.&lt;/p&gt;

&lt;p&gt;Dentro de seu painel de administração, procure por Settings (Configurações) e depois Links Permanentes (Permalinks). Selecione a opção Custom Structure (Estrutura Personalizada) e altere sua estrutura para:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;html&amp;#8221;]/%category%/%postname%/[/cce]&lt;/p&gt;

&lt;h3 id=&#34;otimizando-as-metas-do-seu-site&#34;&gt;Otimizando as metas do seu site&lt;/h3&gt;

&lt;p&gt;Para otimizar as metas, utilize o plug-in &lt;a href=&#34;http://wordpress.org/extend/plugins/all-in-one-seo-pack/&#34; title=&#34;Plug-in All in One SEO Pack&#34;&gt;All in One SEO Pack&lt;/a&gt;, com esse plug-in conseguimos facilmente manipular as metas e também títulos do site. Com ele, alteram-se as metas de descrição e keywords (palavras-chave) da página inicial e também dos posts, além dos títulos de cada página.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wordpress.org/extend/plugins/all-in-one-seo-pack/&#34; title=&#34;Plug-in All in One SEO Pack&#34;&gt;Baixe o plug-in&lt;/a&gt;, instale-o e ative.&lt;/p&gt;

&lt;h3 id=&#34;mecanismos-de-busca-odeiam-spam&#34;&gt;Mecanismos de busca odeiam SPAM&lt;/h3&gt;

&lt;p&gt;Os mecanismos de busca odeiam SPAM, ou seja, odeiam conteúdo ruim e/ou desnecessário. Existe um plug-in que modera spam no seu site, chama-se Akismet. Geralmente ele já é incluído quando você instala o WordPress, mas caso não encontre depois que instalar, &lt;a href=&#34;http://wordpress.org/extend/plugins/akismet/&#34; title=&#34;Akismet plug-in&#34;&gt;baixe-o&lt;/a&gt; e ative-o.&lt;/p&gt;

&lt;p&gt;Para usar do plug-in é necessário resgatar um código gerado pelo &lt;a href=&#34;http://akismet.com/&#34; title=&#34;Site Akismet&#34;&gt;site&lt;/a&gt; deles.&lt;/p&gt;

&lt;h3 id=&#34;use-semântica-no-seu-código&#34;&gt;Use semântica no seu código&lt;/h3&gt;

&lt;p&gt;Do que adianta ter todos esses aperfeiçoamentos no seu site e seu site não estiver com um código semântico? Por isso trabalhe com um código de qualidade para que não haja dificuldade para seu código ser lido pelos mecanismos de busca.&lt;/p&gt;

&lt;p&gt;Use alt e title para as imagens, não esqueçam, pois as imagens só podem ser lidas desta maneira. Trabalhe bem com as tags de título &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;h5&gt;, &lt;h6&gt;, e estabeleça uma hierarquia entre elas.&lt;/p&gt;

&lt;h3 id=&#34;utilize-sempre-um-plug-in-de-cache&#34;&gt;Utilize sempre um plug-in de cache&lt;/h3&gt;

&lt;p&gt;A partir da demanda do seu site e ele for crescendo em questão de conteúdo, é sempre bom ter um plug-in de cache para diminuir o carregamento da sua página, sendo assim os mecanismos de busca não terão dificuldades para carregar seu site.&lt;/p&gt;

&lt;p&gt;Indico &lt;a href=&#34;http://wordpress.org/extend/plugins/wp-super-cache/&#34; title=&#34;WP Super Cache&#34;&gt;WP Super Cache&lt;/a&gt;, &lt;a href=&#34;http://wordpress.org/extend/plugins/wp-super-cache/&#34; title=&#34;W3 Total Cache&#34;&gt;W3 Total Cache&lt;/a&gt;, &lt;a href=&#34;http://wordpress.org/extend/plugins/batcache/&#34; title=&#34;Batcache&#34;&gt;Batcache&lt;/a&gt; ou &lt;a href=&#34;http://wordpress.org/extend/plugins/hyper-cache/&#34; title=&#34;Hyper Cache&#34;&gt;Hyper Cache.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tenho certeza que com um deles, seu site estará em boas mãos em relação ao cache.&lt;/p&gt;

&lt;h3 id=&#34;sitemaps-mapa-do-site&#34;&gt;Sitemaps (mapa do site)&lt;/h3&gt;

&lt;p&gt;Para os mecanismos de busca, um sitemap ajuda nas buscas de páginas, pois ele relaciona as URL existentes no seu site. Leia esse &lt;a href=&#34;http://tableless.com.br/seo-sitemaps&#34; title=&#34;Artigo SEO Sitemaps Tableless&#34;&gt;artigo&lt;/a&gt; e veja o porquê do uso de sitemaps.&lt;/p&gt;

&lt;p&gt;O WordPress tem um plug-in que gera um sitemap já otimizado para mecanismos de busca.&lt;/p&gt;

&lt;p&gt;Use o &lt;a href=&#34;http://wordpress.org/extend/plugins/google-sitemap-generator/&#34; title=&#34;Plug-in Google SiteMap Generator&#34;&gt;Google SiteMap Generator&lt;/a&gt; e não tenha possíveis problemas para este assunto.&lt;/p&gt;

&lt;h3 id=&#34;crie-um-bom-meta-robôs&#34;&gt;Crie um bom Meta Robôs&lt;/h3&gt;

&lt;p&gt;É importante você ter um robots.txt na raiz do seu site, que é um arquivo funciona como filtro para os Crawlers e os robôs dos mecanismos de busca, permitindo ou não acesso a páginas do seu site.&lt;/p&gt;

&lt;p&gt;Crie um arquivo em txt, chamado robots.txt com o seguinte código:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;html&amp;#8221;]&lt;/p&gt;

&lt;p&gt;User-agent: *&lt;/p&gt;

&lt;p&gt;Disallow: /cgi-bin&lt;/p&gt;

&lt;p&gt;Disallow: /wp-admin&lt;/p&gt;

&lt;p&gt;Disallow: /wp-includes&lt;/p&gt;

&lt;p&gt;Disallow: /wp-content/plugins&lt;/p&gt;

&lt;p&gt;Disallow: /wp-content/cache&lt;/p&gt;

&lt;p&gt;Disallow: /wp-content/themes&lt;/p&gt;

&lt;p&gt;Disallow: /trackback&lt;/p&gt;

&lt;p&gt;Disallow: /feed&lt;/p&gt;

&lt;p&gt;Disallow: /comments&lt;/p&gt;

&lt;p&gt;Disallow: /category/*/*&lt;/p&gt;

&lt;p&gt;Disallow: */trackback&lt;/p&gt;

&lt;p&gt;Disallow: */feed&lt;/p&gt;

&lt;p&gt;Disallow: */comments&lt;/p&gt;

&lt;p&gt;Disallow: /*?*&lt;/p&gt;

&lt;p&gt;Disallow: /*?&lt;/p&gt;

&lt;p&gt;Allow: /wp-content/uploads&lt;/p&gt;

&lt;p&gt;# Google Image&lt;/p&gt;

&lt;p&gt;User-agent: Googlebot-Image&lt;/p&gt;

&lt;p&gt;Disallow:&lt;/p&gt;

&lt;p&gt;Allow: /*&lt;/p&gt;

&lt;p&gt;# Google AdSense&lt;/p&gt;

&lt;p&gt;User-agent: Mediapartners-Google*&lt;/p&gt;

&lt;p&gt;Disallow:&lt;/p&gt;

&lt;p&gt;Allow: /*&lt;/p&gt;

&lt;p&gt;# digg mirror&lt;/p&gt;

&lt;p&gt;User-agent: duggmirror&lt;/p&gt;

&lt;p&gt;Disallow: /&lt;/p&gt;

&lt;p&gt;Sitemap: &lt;a href=&#34;http://www.seusite.com.br/sitemap.xml&#34;&gt;http://www.seusite.com.br/sitemap.xml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;Envie para o servidor e ponha na raiz do seu site.&lt;/p&gt;

&lt;p&gt;E no header.php do seu tema, adicione o código:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php&lt;/p&gt;

&lt;p&gt;if(is_single() || is_page() || is_category() || is_home()) {&lt;/p&gt;

&lt;p&gt;echo &amp;#8216;&lt;meta name=&amp;#8221;robots&amp;#8221; content=&amp;#8221;all,noodp&amp;#8221; /&gt;&amp;#8217;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;else if(is_archive()) {&lt;/p&gt;

&lt;p&gt;echo &amp;#8216;&lt;meta name=&amp;#8221;robots&amp;#8221; content=&amp;#8221;noarchive,noodp&amp;#8221; /&gt;&amp;#8217;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;else if(is_search() || is_404()) {&lt;/p&gt;

&lt;p&gt;echo &amp;#8216;&lt;meta name=&amp;#8221;robots&amp;#8221; content=&amp;#8221;noindex,noarchive&amp;#8221; /&gt;&amp;#8217;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;h3 id=&#34;faça-um-bom-conteúdo&#34;&gt;Faça um bom conteúdo&lt;/h3&gt;

&lt;p&gt;Não adianta ter um site todo otimizado para os mecanismos e eles não terem o que buscar de conteúdo no seu site. Fazer um bom conteúdo é essencial para qualquer indexação de artigo, página, textos ect.&lt;/p&gt;

&lt;p&gt;Também não se esqueça de trabalhar com as redes sociais, pois maior quantidade de links gerados para o seu site, maior relevância ele terá.&lt;/p&gt;

&lt;p&gt;Seja sempre objetivo e claro na suas publicações, tenho certeza que terá um bom resultado. Vale ressaltar que o Google está punindo quem copia conteúdo, muito cuidado.&lt;/p&gt;

&lt;p&gt;Caso tenha futuras dúvidas, o WordPress oferece no seu codex um &lt;a href=&#34;http://codex.wordpress.org/Search_Engine_Optimization_for_WordPress&#34; title=&#34;Guia para otimização de SEO WordPress&#34;&gt;guia para otimização de SEO&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando Menus no WordPress</title>
      <link>https://tableless.github.io/hugo-public/criando-menus-no-wordpress/</link>
      <pubDate>Wed, 02 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-menus-no-wordpress/</guid>
      <description>

&lt;p&gt;Depois da versão 3.0, a criação de menus no WordPress tornou-se muito importante, pois se utiliza um gerenciador para reproduzir as informações do menu. No menu, pode-se criar links, integrar páginas e páginas de arquivo.&lt;/p&gt;

&lt;h3 id=&#34;habilitando-e-registrando-o-menu&#34;&gt;Habilitando e registrando o menu&lt;/h3&gt;

&lt;p&gt;Em functions.php do seu tema, adicione:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;if ( function_exists( &amp;#8216;register_nav_menu&amp;#8217; ) ) {&lt;/p&gt;

&lt;p&gt;register_nav_menu( &amp;#8216;meu_menu&amp;#8217;, &amp;#8216;Este é meu primeiro menu&amp;#8217; );&lt;/p&gt;

&lt;p&gt;register_nav_menu( &amp;#8216;segundo_menu&amp;#8217;, &amp;#8216;Este é meu segundo menu&amp;#8217; );&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;De início, verificamos a função register_nav_menu. Dentro da função, abrigamos dois parâmetros, que são: nome do menu (de preferência sem espaços e letras minusculas) e a descrição do menu. Ambos são obrigatórios nesta função.&lt;/p&gt;

&lt;p&gt;Essa função já habilita o suporte para os menus.&lt;/p&gt;

&lt;h3 id=&#34;retornando-o-menu&#34;&gt;Retornando o menu&lt;/h3&gt;

&lt;p&gt;Adicione o seguinte código onde queira que o retornasse o menu:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;wp_nav_menu( array(&lt;/p&gt;

&lt;p&gt;&amp;#8216;menu&amp;#8217; =&amp;gt; &amp;#8216;meu_menu&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;theme_location&amp;#8217; =&amp;gt; &amp;#8216;meu_menu&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;container&amp;#8217; =&amp;gt; &amp;#8216;div&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;container_class&amp;#8217; =&amp;gt; &amp;#8216;classe_do_container&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;container_id&amp;#8217; =&amp;gt; &amp;#8216;id_do_container&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;menu_class&amp;#8217; =&amp;gt; &amp;#8216;classe_do_menu&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;echo&amp;#8217; =&amp;gt; true,&lt;/p&gt;

&lt;p&gt;&amp;#8216;menu_id&amp;#8217; =&amp;gt; &amp;#8216;id_do_menu&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;before&amp;#8217; =&amp;gt; &amp;#8221;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;after&amp;#8217; =&amp;gt; &amp;#8221;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;link_before&amp;#8217; =&amp;gt; &amp;#8221;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;link_after&amp;#8217; =&amp;gt; &amp;#8221;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;depth&amp;#8217; =&amp;gt; 0,&lt;/p&gt;

&lt;p&gt;&amp;#8216;walker&amp;#8217; =&amp;gt; &amp;#8221;,&lt;/p&gt;

&lt;p&gt;) );&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;Como perceberam, a função &lt;strong&gt;wp_nav_menu&lt;/strong&gt; recebe alguns parâmetros, para não haver dúvidas, explico melhor abaixo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;menu:&lt;/strong&gt; O nome do menu em que deseja retornar (valor determinado na função register_menu)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;theme_location:&lt;/strong&gt; Onde vai está localizado o menu (valor determinado na função register_menu)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;container:&lt;/strong&gt; Se alguma tag irá envolver a lista do menu&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;container_class:&lt;/strong&gt; Classes do container&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;container_id:&lt;/strong&gt; O ID do container&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;menu_class:&lt;/strong&gt; Classes da lista do menu&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;menu_id:&lt;/strong&gt; O ID da lista do menu&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;echo:&lt;/strong&gt; Usado para retorno do menu, em uma vez que seu valor seja falso, o menu não será retornado ou visível.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;before:&lt;/strong&gt; Se algum elemento entrará antes do menu&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;after:&lt;/strong&gt; Se algum elemento entrará depois do menu&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;link_before:&lt;/strong&gt; Se algum elemento entrará antes do link&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;link_after:&lt;/strong&gt; Se alguém elementro entrará depois do menu&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;depth:&lt;/strong&gt; Quantos níveis de hierarquia devem ser incluídos&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;walker:&lt;/strong&gt; Objeto para personalização do menu&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;habilitando-descrição&#34;&gt;Habilitando descrição&lt;/h3&gt;

&lt;p&gt;Para terminar a explicação, os Menus do WordPress contém uma opção para descrição nos menus. É uma forma melhor de explorar o conteúdo e também explicar um pouco mais o parâmetro walker, que ficou um pouco difícil de se entender.&lt;/p&gt;

&lt;p&gt;Primeiro, ative a opção de descrição desta forma: Abra a seção de menus no painel de administração e vá a Screen Options (Opções de tela) e ative a opção Description (Descrição)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/02/ativando-descricao.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2011/02/ativando-descricao-300x80.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;80&#34; class=&#34;alignnone size-medium wp-image-3099&#34; srcset=&#34;uploads/2011/02/ativando-descricao-300x80.png 300w, uploads/2011/02/ativando-descricao.png 324w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vamos personalizar o menu para receber as informações de descrição, adicione em functions.php:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;/* Código por: &lt;a href=&#34;http://www.kriesi.at/archives/improve-your-wordpress-navigation-menu-output&#34;&gt;http://www.kriesi.at/archives/improve-your-wordpress-navigation-menu-output&lt;/a&gt; */&lt;/p&gt;

&lt;p&gt;class descricao_walker extends Walker_Nav_Menu&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;function start_el(&amp;amp;$output, $item, $depth, $args)&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;global $wp_query;&lt;/p&gt;

&lt;p&gt;$indent = ( $depth ) ? str_repeat( &amp;#8220;\t&amp;#8221;, $depth ) : &amp;#8221;;&lt;/p&gt;

&lt;p&gt;$class_names = $value = &amp;#8221;;&lt;/p&gt;

&lt;p&gt;$classes = empty( $item-&amp;gt;classes ) ? array() : (array) $item-&amp;gt;classes;&lt;/p&gt;

&lt;p&gt;$class_names = join( &amp;#8216; &amp;#8216;, apply_filters( &amp;#8216;nav_menu_css_class&amp;#8217;, array_filter( $classes ), $item ) );&lt;/p&gt;

&lt;p&gt;$class_names = &amp;#8216; class=&amp;#8221;&amp;#8216;. esc_attr( $class_names ) . &amp;#8216;&amp;#8221;&amp;#8216;;&lt;/p&gt;

&lt;p&gt;$output .= $indent . &amp;#8216;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ID . &amp;#8216;&amp;#8221;&amp;#8216; . $value . $class_names .&amp;#8217;&amp;gt;&amp;#8217;;
$attributes = ! empty( $item-&amp;gt;attr_title ) ? &amp;#8216; title=&amp;#8221;&amp;#8216; . esc_attr( $item-&amp;gt;attr_title ) .&amp;rsquo;&amp;#8221;&amp;#8216; : &amp;#8221;;&lt;/p&gt;

&lt;p&gt;$attributes .= ! empty( $item-&amp;gt;target ) ? &amp;#8216; target=&amp;#8221;&amp;#8216; . esc_attr( $item-&amp;gt;target ) .&amp;rsquo;&amp;#8221;&amp;#8216; : &amp;#8221;;&lt;/p&gt;

&lt;p&gt;$attributes .= ! empty( $item-&amp;gt;xfn ) ? &amp;#8216; rel=&amp;#8221;&amp;#8216; . esc_attr( $item-&amp;gt;xfn ) .&amp;rsquo;&amp;#8221;&amp;#8216; : &amp;#8221;;&lt;/p&gt;

&lt;p&gt;$attributes .= ! empty( $item-&amp;gt;url ) ? &amp;#8216; href=&amp;#8221;&amp;#8216; . esc_attr( $item-&amp;gt;url ) .&amp;rsquo;&amp;#8221;&amp;#8216; : &amp;#8221;;&lt;/p&gt;

&lt;p&gt;$prepend = &amp;#8216;**&amp;#8216;;&lt;/p&gt;

&lt;p&gt;$append = &amp;#8216;**&amp;#8216;;&lt;/p&gt;

&lt;p&gt;$description = ! empty( $item-&amp;gt;description ) ? &amp;#8216;&lt;/p&gt;

&lt;p&gt;&amp;#8216;.esc_attr( $item-&amp;gt;description ).&amp;#8217;&lt;/p&gt;

&lt;p&gt;&amp;#8216; : &amp;#8221;; // aqui é aonde a informação está a descrição&lt;/p&gt;

&lt;p&gt;if($depth != 0)&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;$description = $append = $prepend = &amp;#8220;&amp;#8221;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;$item_output = $args-&amp;gt;before;&lt;/p&gt;

&lt;p&gt;$item_output .= &amp;#8216;&lt;a&gt;&amp;#8216;;&lt;br /&gt; $item_output .= $args-&amp;gt;link_before .$prepend.apply_filters( &amp;#8216;the_title&amp;#8217;, $item-&amp;gt;title, $item-&amp;gt;ID ).$append;&lt;br /&gt; $item_output .= $description.$args-&amp;gt;link_after; //aqui aonde a descrição estará sendo retornada&lt;br /&gt; $item_output .= &amp;#8216;&lt;/a&gt;&amp;#8216;;&lt;/p&gt;

&lt;p&gt;$item_output .= $args-&amp;gt;after;&lt;/p&gt;

&lt;p&gt;$output .= apply_filters( &amp;#8216;walker_nav_menu_start_el&amp;#8217;, $item_output, $item, $depth, $args );&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;No código, foi criado uma classe retorna todo o item do menu, ou seja, a &lt;li&gt;. Está comentado no código onde você vai encontrar os códigos da descrição. É necessário entender um pouco de PHP para alterar esse código e personalizar ainda mais o seu menu.&lt;/p&gt;

&lt;p&gt;Para retornar essa classe, vamos usar o walker do menu, altere o valor, assim:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&amp;#8217;walker&amp;#8217; =&amp;gt; new descricao_walker() [/cce]&lt;/p&gt;

&lt;p&gt;Você pode determinar o valor da descrição no mesmo lugar aonde você altere as informações do menu.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/02/adicionando-descricao.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2011/02/adicionando-descricao-300x242.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;242&#34; class=&#34;alignnone size-medium wp-image-3098&#34; srcset=&#34;uploads/2011/02/adicionando-descricao-300x242.png 300w, uploads/2011/02/adicionando-descricao.png 418w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fonte da descrição: &lt;a href=&#34;http://www.kriesi.at/archives/improve-your-wordpress-navigation-menu-output&#34; title=&#34;Fonte da descrição&#34;&gt;http://www.kriesi.at/archives/improve-your-wordpress-navigation-menu-output&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Criando Sidebar Dinâmica no WordPress</title>
      <link>https://tableless.github.io/hugo-public/criando-sidebar-dinamica-no-wordpress/</link>
      <pubDate>Tue, 18 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-sidebar-dinamica-no-wordpress/</guid>
      <description>

&lt;p&gt;O WordPress disponibiliza uma função para criar sidebars de forma dinâmica, onde no painel de administração podemos gerenciar todos os Widgets disponíveis ou Widgets instalados.&lt;/p&gt;

&lt;p&gt;Essa função, mais uma vez, sai na frente e contribui para o WordPress ser esse CMS tão poderoso para os desenvolvedores e os usuários que o utilizam.&lt;/p&gt;

&lt;p&gt;De início iremos registrar a sidebar. Para isso coloque esse código em functions.php:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;/* Registando a primeira sidebar*/&lt;/p&gt;

&lt;p&gt;register_sidebar( array(&lt;/p&gt;

&lt;p&gt;&amp;#8216;name&amp;#8217; =&amp;gt; &amp;#8216;Minha Primeira Sidebar&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;id&amp;#8217; =&amp;gt; &amp;#8216;minha-primeira-sidebar&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;description&amp;#8217; =&amp;gt; &amp;#8216;Esta é a primeira sidebar do meu site&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;before_widget&amp;#8217; =&amp;gt; &amp;#8216;&lt;/p&gt;

&lt;p&gt;&lt;li class=&#34;widget-sidebar&#34;&gt;
  &amp;#8216;, /* Antes da Widget */&lt;br /&gt; &amp;#8216;after_widget&amp;#8217; =&amp;gt; &amp;#8216;
&lt;/li&gt;
&amp;#8216;, /* Depois da Widget */&lt;/p&gt;

&lt;p&gt;&amp;#8216;before_title&amp;#8217; =&amp;gt; &amp;#8216;&lt;/p&gt;

&lt;h3 id=&#34;8216-antes-do-título&#34;&gt;&amp;#8216;, /* Antes do título */&lt;/h3&gt;

&lt;p&gt;&amp;#8216;after_title&amp;#8217; =&amp;gt; &amp;#8216;&lt;/p&gt;

&lt;p&gt;&amp;#8216;, /* Depois do título */&lt;/p&gt;

&lt;p&gt;) );&lt;/p&gt;

&lt;p&gt;/* Registando a segunda sidebar*/&lt;/p&gt;

&lt;p&gt;register_sidebar( array(&lt;/p&gt;

&lt;p&gt;&amp;#8216;name&amp;#8217; =&amp;gt; &amp;#8216;Minha Segunda Sidebar&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;id&amp;#8217; =&amp;gt; &amp;#8216;minha-segunda-sidebar&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;description&amp;#8217; =&amp;gt; &amp;#8216;Esta é a segunda sidebar do meu site&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;before_widget&amp;#8217; =&amp;gt; &amp;#8216;&lt;/p&gt;

&lt;p&gt;&lt;li class=&#34;widget-sidebar&#34;&gt;
  &amp;#8216;, /* Antes da Widget */&lt;br /&gt; &amp;#8216;after_widget&amp;#8217; =&amp;gt; &amp;#8216;
&lt;/li&gt;
&amp;#8216;, /* Depois da Widget */&lt;/p&gt;

&lt;p&gt;&amp;#8216;before_title&amp;#8217; =&amp;gt; &amp;#8216;&lt;/p&gt;

&lt;h4 id=&#34;8216-antes-do-título-1&#34;&gt;&amp;#8216;, /* Antes do título */&lt;/h4&gt;

&lt;p&gt;&amp;#8216;after_title&amp;#8217; =&amp;gt; &amp;#8216;&lt;/p&gt;

&lt;p&gt;&amp;#8216;, /* Depois do título */&lt;/p&gt;

&lt;p&gt;) );&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Neste código, registramos nossa sidebar, ou seja, aplicamos os parâmetros que estarão agregados a ela. Os três primeiros parâmetros estão subentendidos, mas você pode definir o valor que quiser. O restante dos parâmetros agregará o que vai está antes e depois do Widget e do Título. Você pode personalizar como quiser, com uma LI ou DIV ou até outra tag que queria retornar.&lt;/p&gt;

&lt;h3 id=&#34;retornando-a-sidebar&#34;&gt;Retornando a sidebar&lt;/h3&gt;

&lt;p&gt;Adicione o seguinte código aonde queria que retornasse a sua sidebar:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php dynamic_sidebar(&amp;lsquo;Minha Primeira Sidebar&amp;rsquo;); ?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;A função vai agregar o nome da sidebar ou o ID da sidebar de forma muito simples. Para deixar mais completo, vamos adicionar uma condição, só para verificar se a sidebar está ativa. A função is_active_sidebar vai agregar também o nome da sidebar ou o ID dela.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php
    /* Retornando minha primeira sidebar */
       if ( is_active_sidebar(&amp;lsquo;minha-primeira-sidebar&amp;rsquo;) ) {
          dynamic_sidebar(&amp;lsquo;minha-primeira-sidebar&amp;rsquo;);
       }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/* Retornando minha segunda sidebar */
    if ( is_active_sidebar(&#39;minha-segunda-sidebar&#39;) ) {
       dynamic_sidebar(&#39;minha-segunda-sidebar&#39;);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Caso tenham dúvidas, verifiquem em &lt;a href=&#34;http://codex.wordpress.org/Widgets_API&#34; title=&#34;Widgets WordPress&#34;&gt;http://codex.wordpress.org/Widgets_API&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>https://tableless.github.io/hugo-public/shortcodes/</link>
      <pubDate>Tue, 18 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/shortcodes/</guid>
      <description>

&lt;p&gt;Os shortcodes são abreviaturas no intuito de retornar o código desejado em uma única linha.&lt;/p&gt;

&lt;h3 id=&#34;exemplos-de-shortcodes&#34;&gt;Exemplos de Shortcodes&lt;/h3&gt;

&lt;p&gt;Um exemplo de shortcode:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[botao]Meu primeiro botão[/botao]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Um exemplo de shortcode com parâmetros:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[botao cor=”vermelho” url=”http://tableless.com.br”]Site do Tableless[/botao]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Essa é a melhor solução para quem desenvolve sites para terceiros e deseja criar elementos com rapidez.&lt;/p&gt;

&lt;h3 id=&#34;criando-um-shortcode&#34;&gt;Criando um Shortcode&lt;/h3&gt;

&lt;p&gt;Para criar um shortcode, adicione o seguinte código em &lt;strong&gt;functions.php&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php&lt;/p&gt;

&lt;p&gt;add_shortcode(&amp;#8216;botao&amp;#8217;, &amp;#8216;botao_shortcode&amp;#8217;);&lt;/p&gt;

&lt;p&gt;function botao_shortcode( $atts, $content = null ) {&lt;/p&gt;

&lt;p&gt;extract(shortcode_atts(array(&lt;/p&gt;

&lt;p&gt;&amp;#8216;cor&amp;#8217; =&amp;gt; &amp;#8216;verde&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;url&amp;#8217; =&amp;gt; &amp;#8221;,&lt;/p&gt;

&lt;p&gt;), $atts ) );&lt;/p&gt;

&lt;p&gt;return &amp;#8216;&lt;a href=&#34;&#39;.esc_attr($url).&#39;&#34; title=&#34;&#39;.$content.&#39;&#34;&gt;&amp;#8216;.$content.&amp;#8217;&lt;/a&gt;{.botao&amp;rsquo;.esc_attr($cor).&amp;lsquo;}&amp;#8216;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;No código, a função &lt;strong&gt;add_shortcode&lt;/strong&gt; registrar o shortcode e abriga dois parâmetros, o nome do shortcode (tag) e a função que vai manipular o shortcode respectivamente.&lt;/p&gt;

&lt;p&gt;Após isso, criei a função que vai abrigar os parâmetros e retornar todo o shortcode. Analise bem esta parte, pois são elas que vão abrigar os parâmetros:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;extract(shortcode_atts(array(&lt;/p&gt;

&lt;p&gt;&amp;#8216;cor&amp;#8217; =&amp;gt; &amp;#8216;verde&amp;#8217;,&lt;/p&gt;

&lt;p&gt;&amp;#8216;url&amp;#8217; =&amp;gt; &amp;#8221;,&lt;/p&gt;

&lt;p&gt;), $atts ) );&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;Nesta parte, a função shortcode_atts significa os atributos do shortcode, logo abaixo em um array, criaremos quais vão ser os parâmetros disponíveis. Por exemplo, criei um parâmetro de cor e outro de url, o valor que está atribuído ao parâmetro pode ser vazio ou um valor padrão, caso o parâmetro esteja vazio quando aplicarmos o shortcode.&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;return &amp;#8216;&lt;a href=&#34;&#39;.esc_attr($url).&#39;&#34; title=&#34;&#39;.$content.&#39;&#34;&gt;&amp;#8216;.$content.&amp;#8217;&lt;/a&gt;{.botao&amp;rsquo;.esc_attr($cor).&amp;lsquo;}&amp;#8216;;&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;Este código retorna o shortcode, cada parâmetro é uma variável dentro da função, para retorná-las use, $nomedoparametro, a função esc_attr é própria do WordPress e serve para codificar um texto.&lt;/p&gt;

&lt;p&gt;Por último a variável $content, que serve para retornar o que está dentro da tag do shortcode, por exemplo:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;html&amp;#8221;][botao]Isso é o content[/botao][/cce]&lt;/p&gt;

&lt;h3 id=&#34;retornando-um-shortcode&#34;&gt;Retornando um Shortcode&lt;/h3&gt;

&lt;p&gt;Por fim, vamos retornar o shortcode:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;html&amp;#8221;][botao cor=”azul” url=”&lt;a href=&#34;http://tableless.com.br”]Site&#34;&gt;http://tableless.com.br”]Site&lt;/a&gt; Tableless[/botao][/cce]&lt;/p&gt;

&lt;p&gt;Para adicionar esse código você precisa está no editor Visual, caso contrário ele não irá funcionar.&lt;/p&gt;

&lt;p&gt;Caso você queria usar o shortcode em algum outro lugar diferente do post, é necessário usar uma função chamada do_shortcode, por exemplo:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php echo do_shortcode(‘[botao cor=”azul” url=”&lt;a href=&#34;http://tableless.com.br”]Site&#34;&gt;http://tableless.com.br”]Site&lt;/a&gt; Tableless [/botao]’); ?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;De brinde, vou disponibilizar o código em CSS, somente para que vocês tenham uma noção, caso precisem&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;.botaoverde{&lt;/p&gt;

&lt;p&gt;background-color: green;&lt;/p&gt;

&lt;p&gt;text-decoration: none;&lt;/p&gt;

&lt;p&gt;color: #FFF;&lt;/p&gt;

&lt;p&gt;padding: 5px;&lt;/p&gt;

&lt;p&gt;margin: 0px 10px;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;.botaoazul{&lt;/p&gt;

&lt;p&gt;background-color: blue;&lt;/p&gt;

&lt;p&gt;text-decoration: none;&lt;/p&gt;

&lt;p&gt;color: #FFF;&lt;/p&gt;

&lt;p&gt;padding: 5px;&lt;/p&gt;

&lt;p&gt;margin: 0px 10px;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adicionando Post Thumbnail</title>
      <link>https://tableless.github.io/hugo-public/adicionando-post-thumbnail/</link>
      <pubDate>Mon, 17 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/adicionando-post-thumbnail/</guid>
      <description>

&lt;h3 id=&#34;ativando-o-suporte-ao-post-thumbnails-em-seu-tema&#34;&gt;Ativando o suporte ao Post Thumbnails em seu tema&lt;/h3&gt;

&lt;p&gt;Antes de qualquer coisa, volto a lembrar que essa característica é do tema. Pode ser que alguns autores não ativem esse suporte. Para iniciar, adicione este seguinte código no arquivo functions.php:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Para ativar o suporte só é necessário este código. Bacana, né? O WordPress faz com que em poucas linhas de código possamos obter soluções significantes.&lt;/p&gt;

&lt;p&gt;A condição verifica se a função &amp;#8216;add_theme_support&amp;#8217; existe, caso ela exista, adicionamos um suporte ao nosso tema, que é o Post Thumbnails.&lt;/p&gt;

&lt;p&gt;Você pode adicionar esse suporte para outros tipos de posts ou até especificar aonde quer adicionar esse suporte:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;No código fizemos o mesmo processo do início, porém especificamos tipos de posts diferentes. Ao contrário do post de cima, que só adicionaria em um tipo de post.&lt;/p&gt;

&lt;h3 id=&#34;customizando-as-thumbnails&#34;&gt;Customizando as Thumbnails&lt;/h3&gt;

&lt;p&gt;Esse suporte trouxe várias funções para que possamos personalizar ainda mais o nosso Post Thumbnail. Você pode estipular um valor padrão para todas as imagens, como também pode criar um novo &amp;#8220;estilo&amp;#8221; para as imagens, vejamos:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Neste código personalizamos as nossas Thumbnails, com a função &lt;code&gt;set_post_thumbnail_size()&lt;/code&gt; definimos um valor padrão para todas elas, os valores estipulados na função representa a largura e altura respectivamente e o valor TRUE, é destinado para o corte da imagem (crop), caso seja ativado sua imagem será cortada sem distorcê-la e você não precisará usar scripts para isso.&lt;/p&gt;

&lt;p&gt;Com a função &lt;code&gt;add_image_size&lt;/code&gt;, definimos um valor personalizado, os valores representam o nome do campo personalizado, largura, altura e o TRUE significa o crop. Lembrando, com essa função você apenas está definindo as caracteristicas de uma imagem personalizada.&lt;/p&gt;

&lt;h3 id=&#34;adicionando-o-thumbnail&#34;&gt;Adicionando o Thumbnail&lt;/h3&gt;

&lt;p&gt;Por fim vamos adicionar o Thumbnail em nosso post, adicione o seguinte código na página onde está seu Post, Loop ou aonde queria botar a imagem:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php&lt;/p&gt;

&lt;p&gt;//verifica se existe alguma thumbnail para o post&lt;/p&gt;

&lt;p&gt;if(has_post_thumbnail()){&lt;/p&gt;

&lt;p&gt;the_post_thumbnail(); //retorna o thumbnail para página&lt;/p&gt;

&lt;p&gt;}else{&lt;/p&gt;

&lt;p&gt;//caso não tenha nenhuma thumbnail, retorna uma imagem padrão&lt;/p&gt;

&lt;p&gt;echo &amp;lsquo;&lt;img alt=&#34;Sem Thumbnail&#34; /&gt;&amp;#8216;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Caso você queria adicionar o valor que definimos em algum add_image_size, faça isso:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php&lt;/p&gt;

&lt;p&gt;//verifica se existe alguma thumbnail para o post&lt;/p&gt;

&lt;p&gt;if(has_post_thumbnail()){&lt;/p&gt;

&lt;p&gt;the_post_thumbnail(&amp;lsquo;thumb-post&amp;rsquo;); //retorna o thumbnail para página especificando o nome do campo personalizado&lt;/p&gt;

&lt;p&gt;}else{&lt;/p&gt;

&lt;p&gt;//caso não tenha nenhum thumbnail, retorna uma imagem padrão&lt;/p&gt;

&lt;p&gt;echo &amp;lsquo;&lt;img alt=&#34;Sem Thumbnail&#34; /&gt;&amp;#8216;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;//caso não queria que retorne nenhuma imagem padrão, retire o ELSE da condição&lt;/p&gt;

&lt;p&gt;?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Nos códigos acima adicionamos o thumbnail na página, a condição verifica se existe algum thumbnail, se existir, ele retorna a imagem. Quando você não define nenhum valor personalizado com o &lt;code&gt;add_image_size&lt;/code&gt; ou até dentro da função, ele retorna com o valor que está definido &lt;code&gt;set_post_thumbnail_size&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ainda no código acima, adicionei um ELSE, para caso não tenha nenhuma imagem no Post Thumbnail, ele retorne com uma imagem padrão, que vai ficar ao seu critério.&lt;/p&gt;

&lt;h3 id=&#34;código-final&#34;&gt;Código Final&lt;/h3&gt;

&lt;h4 id=&#34;functions-php&#34;&gt;functions.php&lt;/h4&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;pagina-onde-vai-aparecer-o-thumb-php&#34;&gt;pagina-onde-vai-aparecer-o-thumb.php&lt;/h4&gt;

&lt;p&gt;[cc lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php&lt;/p&gt;

&lt;p&gt;//verifica se existe algum thumbnail para o post&lt;/p&gt;

&lt;p&gt;if(has_post_thumbnail()){&lt;/p&gt;

&lt;p&gt;the_post_thumbnail(&amp;lsquo;thumb-post&amp;rsquo;); //retorna o thumbnail para página especificando o tipo da imagem&lt;/p&gt;

&lt;p&gt;}else{&lt;/p&gt;

&lt;p&gt;//caso não tenha nenhuma thumbnail, retorna uma imagem padrão&lt;/p&gt;

&lt;p&gt;echo &amp;lsquo;&lt;img alt=&#34;Sem Thumbnail&#34; /&gt;&amp;#8216;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;//caso não queria que retorne nenhuma imagem padrão, retire o ELSE da condição&lt;/p&gt;

&lt;p&gt;?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>