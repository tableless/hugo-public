<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leonardo Lima on Tableless</title>
    <link>http://tableless.com.br/author/leonardo-lima/index.xml</link>
    <description>Recent content in Leonardo Lima on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/leonardo-lima/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>O poder do atributo “ALT”</title>
      <link>http://tableless.com.br/o-poder-do-atributo-alt/</link>
      <pubDate>Fri, 27 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/o-poder-do-atributo-alt/</guid>
      <description>

&lt;p&gt;Ao desenvolver um website, temos que pensar em acessibilidade para que seja visto por qualquer usuário. Tendo em vista que sua equipe planejou um website acessível, vocês pensaram em colocar em todas as imagens o atributo&amp;#8221;ALT&amp;#8221;. Pois, websites hoje em dia tem centenas ou milhares de imagens. Já imaginou você olhando para um quadro com uma imagem sem descrição nenhuma, pois é assim que um deficiente visual pode se sentir ao acessar seu website com várias imagens e ao executar um software sintetizador de voz, não tem nenhuma informação do que está na página.&lt;/p&gt;

&lt;h2 id=&#34;requisitos-para-o-texto-servir-de-alternativa-para-imagem&#34;&gt;Requisitos para o texto servir de alternativa para imagem&lt;/h2&gt;

&lt;p&gt;O texto alternativo é uma maneira de fazer uma informação visual acessível.O texto alternativo permite que a informação seja renderizada de diversas maneiras e por vários user agents.Por exemplo, um deficiente visual vai escutar a informação contida no atributo&amp;#8221;ALT&amp;#8221; da imagem, utilizando um sintetizador de voz.&lt;/p&gt;

&lt;h2 id=&#34;exemplos-de-usuários-que-são-beneficiados-com-o-uso-do-texto-alternativo-nas-imagens&#34;&gt;Exemplos de usuários que são beneficiados com o uso do texto alternativo nas imagens&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Está com conexão muito baixa e está navegando com imagens desabilitadas;&lt;/li&gt;
&lt;li&gt;Eles estão usando um navegador somente texto;&lt;/li&gt;
&lt;li&gt;Eles têm problemas de carregar imagens ou a fonte de uma imagem está errado.&lt;/li&gt;
&lt;li&gt;Eles têm uma deficiência visual e usa um sintetizador de voz;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;vamos-orientar-o-usuário&#34;&gt;Vamos orientar o usuário&lt;/h2&gt;

&lt;p&gt;Quantas vezes você acessou um site que o atributo está vazia(empty). Será que esqueceram ou quem desenvolveu o site não sabe do poder do atributo alt? Agora, quando acessamos um site com milhares de imagens e todas elas com o atributo preenchida corretamente, essas imagens serão muito bem rederizadas pelos buscadores (Google,Bing e Duckduckgo).&lt;/p&gt;

&lt;p&gt;Outra ajuda muito importante que os desenvolvedores não prestam atenção é que se o seu usuário for um deficiente visual, como você vai ajudar que a imagem seja entendida pelo sintetizador de voz instalado na máquina senão tem nada preenchido.Cuide bem do seu usuário.&lt;/p&gt;

&lt;h2 id=&#34;exemplos-do-uso-correto-e-incorreto-do-atributo-alt&#34;&gt;Exemplos do uso correto e incorreto do atributo alt&lt;/h2&gt;

&lt;p&gt;Uma utilização correta do atributo alt, logo abaixo.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;button&amp;gt;&amp;lt;img src=&#34;b.png&#34; alt=&#34;Bold&#34;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;button&amp;gt;&amp;lt;img src=&#34;i.png&#34; alt=&#34;Italics&#34;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;button&amp;gt;&amp;lt;img src=&#34;strike.png&#34; alt=&#34;Strike through&#34;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;button&amp;gt;&amp;lt;img src=&#34;blist.png&#34; alt=&#34;Bulleted list&#34;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;button&amp;gt;&amp;lt;img src=&#34;nlist.png&#34; alt=&#34;Numbered list&#34;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Agora vamos mostrar uma maneira incorreta, mas uma das mais comuns de acontecer.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;button&amp;gt;&amp;lt;img src=&#34;b.png&#34; alt=&#34;img btn1&#34;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;button&amp;gt;&amp;lt;img src=&#34;i.png&#34; alt=&#34;img btn2&#34;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;button&amp;gt;&amp;lt;img src=&#34;strike.png&#34; alt=&#34;img btn3&#34;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;button&amp;gt;&amp;lt;img src=&#34;blist.png&#34; alt=&#34;img btn4&#34;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;button&amp;gt;&amp;lt;img src=&#34;nlist.png&#34; alt=&#34;img btn5&#34;&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Vamos observar que o atributo alt dessa maneira apenas quem vai entender será o time que desenvolveu o site, agora quando o google for renderizar essas imagens não vai ter nenhum sentido a imagem e o texto alternativo.&lt;/p&gt;

&lt;p&gt;Como devemos utilizar corretamente o texto alternativo, veja no &lt;a href=&#34;https://jsfiddle.net/leonardo403/z89nty4o/embedded/result/&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;quando-saber-que-o-atributo-alt-é-poderoso&#34;&gt;Quando saber que o atributo alt é poderoso&lt;/h2&gt;

&lt;p&gt;Quando você desenvolve um site e não precisa explicar nada para o usuário sobre as imagens, apenas o atributo alt já explica o que é cada imagem, então você está começando a entender mais sobre o &lt;strong&gt;poder do atributo alt&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Abraço galera até a próxima.&lt;/p&gt;

&lt;h2 id=&#34;referência&#34;&gt;Referência&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.w3.org/TR/html-alt-techniques/&#34;&gt;W3C Techniques for providing useful text alternatives&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Closure Tools</title>
      <link>http://tableless.com.br/closure-tools/</link>
      <pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/closure-tools/</guid>
      <description>

&lt;p&gt;O projeto Closure Tools é mantido por engenheiros do Google, esta ferramenta é utilizada em vários projetos e aplicações web em geral.&lt;/p&gt;

&lt;p&gt;As aplicações web evoluíram bastante de simples páginas HTML para aplicativos ricos e interativos que proporcionam uma ótima experiência para o usuário final (UX). As web apps de hoje representam um desafio para os desenvolvedores, como por exemplo, você criar e manter o código JavaScript eficiente que baixa rapidamente e trabalha em diferentes navegadores.&lt;/p&gt;

&lt;p&gt;O Closure Tools ajuda os desenvolvedores a construir aplicações web ricas com ferramentas de desenvolvimento web que são ambas poderosas e eficientes.&lt;/p&gt;

&lt;h2 id=&#34;um-otimizador-de-javascript&#34;&gt;Um otimizador de Javascript&lt;/h2&gt;

&lt;p&gt;O Closure compiler, como o próprio nome diz, compila o seu arquivo javascript e deixando-o um código de alta performance. O compiler remove o código absoleto, realiza rewrites e minimiza o restante do código fonte, para depois rodar rapidamente.&lt;/p&gt;

&lt;p&gt;Ele também verifica a sintax, variável e avisa sobre alguns problemas comuns de Javascript.&lt;/p&gt;

&lt;p&gt;Essas verificações e otimizações ajudam o desenvolvedor a criar web apps com menos erros e deixa o código fonte fácil para manutenção.&lt;/p&gt;

&lt;h2 id=&#34;como-se-pode-utilizar-o-closure-compiler&#34;&gt;Como se pode utilizar o Closure Compiler&lt;/h2&gt;

&lt;p&gt;Você pode utilizar o Closure Compiler como:&lt;/p&gt;

&lt;p&gt;-Uma aplicação Java open source que pode ser executada por linha de comando;&lt;/p&gt;

&lt;p&gt;-Uma simples web app;&lt;/p&gt;

&lt;p&gt;-Um RESTful API;&lt;/p&gt;

&lt;h2 id=&#34;uma-biblioteca-javascript-abrangente&#34;&gt;Uma biblioteca JavaScript abrangente&lt;/h2&gt;

&lt;p&gt;Closure Library é uma biblioteca JavaScript ampla, bem testada, modular e cross-browser. Você pode utilizar apenas o que você precisa de um grande conjunto de widgets de interface do usuário reutilizáveis e controles, e de utilitários de nível inferior para a manipulação de DOM, a comunicação do servidor, animação, estruturas de dados, testes unitários, edição de rich-text, e muito mais.&lt;/p&gt;

&lt;h2 id=&#34;um-sistema-de-template-fácil&#34;&gt;Um sistema de template fácil&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.google.com/url?q=https%3A%2F%2Fdevelopers.google.com%2Fclosure%2Ftemplates&#34;&gt;Closure Templates&lt;/a&gt; simplesmente uma tarefa dinamica gerando HTML. Ele tem uma simples sintax que é de fácil compreensão para programadores. Em contraste com tradicionais sistemas de template, que você utiliza um grande template por página, você pode pensar em Closure Templates como sendo pequenos componentes que você utiliza para formar a interface de usuário.O template é utlizado para ambos Javascript e Java, sendo assim você pode utilizar o mesmo template para ambos server e client side. Para o client side, Closure Template é pré-compilado para um Javascript eficiente.&lt;/p&gt;

&lt;h2 id=&#34;quais-os-benefícios-de-utilizar-closure-compiler&#34;&gt;Quais os benefícios de utilizar Closure Compiler&lt;/h2&gt;

&lt;p&gt;&amp;#8211; Eficiência: O Closure Compiler reduz o tamanho do seu arquivo javascript e faz com que ele fique mais eficiente, ajudando sua aplicação a carregar rapidamente e reduzindo se caso precisar de mais largura de banda (bandwidth).&lt;/p&gt;

&lt;p&gt;-Verificação de código: O Closure Compiler realiza uma verificação profunda para diagnosticar operações perigosas, ajudando na produção de um arquivo javascript sem bugs e de fácil manutenção.&lt;/p&gt;

&lt;h2 id=&#34;iniciando-com-closure-compiler-ui&#34;&gt;Iniciando com Closure Compiler UI&lt;/h2&gt;

&lt;p&gt;Uma maneira fácil de se familiarizar com a ferramenta é verifica o que acontece ao otimizar uma simples function no serviço web &lt;a href=&#34;https://www.google.com/url?q=http%3A%2F%2Fclosure-compiler.appspot.com%2Fhome&#34;&gt;Closure Compiler UI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vamos realizar um passo a passo com a ferramenta online.&lt;/p&gt;

&lt;p&gt;1.Primeiro você vai acessar a url &lt;a href=&#34;https://www.google.com/url?q=http%3A%2F%2Fclosure-compiler.appspot.com%2Fhome&#34;&gt;http://closure-compiler.appspot.com/home&lt;/a&gt; ;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ao acessar a página você vera uma simples function, para realizar um teste básico;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://closure-compiler.appspot.com/home&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/Closure-Compiler-Service-2015-01-24-01-41-58.png&#34; alt=&#34;Closure Compiler Service 2015-01-24 01-41-58&#34; width=&#34;1280&#34; height=&#34;663&#34; class=&#34;aligncenter size-full wp-image-46694&#34; srcset=&#34;uploads/2015/01/Closure-Compiler-Service-2015-01-24-01-41-58.png 1280w, uploads/2015/01/Closure-Compiler-Service-2015-01-24-01-41-58-265x137.png 265w, uploads/2015/01/Closure-Compiler-Service-2015-01-24-01-41-58-400x207.png 400w&#34; sizes=&#34;(max-width: 1280px) 100vw, 1280px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;na-prática-com-closure-compiler-service-api&#34;&gt;Na prática com Closure Compiler Service API&lt;/h2&gt;

&lt;p&gt;O Closure Compiler Service API é um ótimo lugar para iniciar com poucas linhas de código javascript ou uma url, mas se você gosta de automatizar o processo de otimização do seu arquivo javascript, veja abaixo o que pode ser feito com o Closure Compiler Service API.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Primeiro vamos criar um HTML básico, onde você vai utilizar a API com HTTP POST request. &lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;form action=&amp;ldquo;&lt;a href=&#34;http://closure-compiler.appspot.com/compile&amp;quot;&#34;&gt;http://closure-compiler.appspot.com/compile&amp;quot;&lt;/a&gt; method=&amp;ldquo;POST&amp;rdquo;&amp;gt;
&amp;lt;p&amp;gt;Type JavaScript code to optimize here:&amp;lt;/p&amp;gt;
&amp;lt;textarea name=&amp;ldquo;js_code&amp;rdquo; cols=&amp;ldquo;50&amp;rdquo; rows=&amp;ldquo;5&amp;rdquo;&amp;gt;
function hello(name) {
  // Greets the user
  alert(&amp;lsquo;Hello, &amp;rsquo; + name);
}
hello(&amp;lsquo;New user&amp;rsquo;);
&amp;lt;/textarea&amp;gt;
&amp;lt;input type=&amp;ldquo;hidden&amp;rdquo; name=&amp;ldquo;compilation_level&amp;rdquo; value=&amp;ldquo;WHITESPACE_ONLY&amp;rdquo;&amp;gt;
&amp;lt;input type=&amp;ldquo;hidden&amp;rdquo; name=&amp;ldquo;output_format&amp;rdquo; value=&amp;ldquo;text&amp;rdquo;&amp;gt;
&amp;lt;input type=&amp;ldquo;hidden&amp;rdquo; name=&amp;ldquo;output_info&amp;rdquo; value=&amp;ldquo;compiled_code&amp;rdquo;&amp;gt;
&amp;lt;br&amp;gt; &amp;lt;br&amp;gt;
&amp;lt;input type=&amp;ldquo;submit&amp;rdquo; value=&amp;ldquo;Optimize&amp;rdquo;&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Você pode ver também o exemplo no &lt;a href=&#34;http://jsfiddle.net/leonardo403/mgozvgu0/2/&#34;&gt;JSFIddle&lt;/a&gt;. &lt;/ol&gt;&lt;/p&gt;

&lt;h2 id=&#34;referência&#34;&gt;Referência&lt;/h2&gt;

&lt;p&gt;As informações sobre a ferramenta, foram pesquisadas no site &lt;a href=&#34;https://developers.google.com/closure/&#34;&gt;developers google&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Ao utilizar a Closure Tools, pude perceber que o tamanho do arquivo depois de compilado diminuiu bastante. Gostei muito das três opções de otimização (WHITESPACE_ONLY,SIMPLE_OPTIMIZATIONS e ADVANCED_OPTIMIZATIONS).&lt;/p&gt;

&lt;p&gt;Algumas coisas que percebi ao utilizar a ferramenta foi que no final de um alert() coloquei mais de um ponto e vígula e não identificou um erro no código. Agora, em comparação com outras bibliotecas javascripts de minificação, o que me surpreendeu foi o desempenho da Closure Compiler. Então pessoal, depois de utilizar a biblioteca favor deixar comentários.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Utilizando navigator.language</title>
      <link>http://tableless.com.br/utilizando-navigator-language/</link>
      <pubDate>Mon, 15 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/utilizando-navigator-language/</guid>
      <description>

&lt;p&gt;Quando desenvolvemos um aplicativo web, normalmente desenvolvemos incluindo o trabalho de internacionalização. Mas não basta apenas criar arquivos para cada país, pois o aplicativo pode ser acessado por diversos países que você não contemplou. Pensando nesses problemas o Yahoo Presentation Technologies (YPT) e com a ajuda de &lt;a href=&#34;https://github.com/andyearnshaw&#34;&gt;Andy Earnshaw&lt;/a&gt; e &lt;a href=&#34;http://norbertlindenberg.com&#34;&gt;Norbert Lindenberg&lt;/a&gt; criaram a biblioteca &lt;a href=&#34;http://formatjs.io/&#34;&gt;Formatjs&lt;/a&gt;. Vamos mostrar um pouco sobre essa biblioteca logo abaixo, com um exemplo bem simples:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var messages = {
   en: {
       GREETING: &#39;Hello {name}&#39;
   },
   fr: {
       GREETING: &#39;Bonjour {name}&#39;
   }
};
&lt;/pre&gt;

&lt;h2 id=&#34;qual-o-local-language-do-usuário&#34;&gt;Qual o local language do usuário&lt;/h2&gt;

&lt;p&gt;A melhor forma de você servir um idioma para o usuário, é descobrindo o idioma que ele usa no browser. Geralmente o idioma do browser é igual ao idioma do sistema operacional, logo, é o idioma nativo do usuário ou o idioma que o usuário se sente mais confortável para usar.&lt;/p&gt;

&lt;p&gt;Então, vamos descobrir qual é esse idioma usado pelo usuário. Para tanto, precisamos utilizar um desses comandos &lt;code&gt;(navigator.language || navigator.browserLanguage)&lt;/code&gt; para entregar o conteúdo no idioma correto. Para essa verificação, podemos utilizar vários métodos, um deles é fazendo com que o usuário clique em um botão e nesse momento rodamos o código que vai descobrir o idioma.&lt;/p&gt;

&lt;p&gt;Um exemplo de como identificar o idioma do browser do usuário pode ser feito assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;//variável que vai retornar uma string com language preferida do usuario
var lang = navigator.language ;
//verificamos o momento do click no botao
$(&#34;#lang&#34;).on(&#39;click&#39;,function () {
    //identificamos a language
    if(lang === &#39;en-US&#39;){
        //apresentamos uma mensagem ao usuario
        alert(&#34;Your language is:&#34;+lang);
    }
});
&lt;/pre&gt;

&lt;h2 id=&#34;parâmetros-do-navigator-language&#34;&gt;Parâmetros do navigator.language&lt;/h2&gt;

&lt;p&gt;A string “lang” representando as versões de linguagens, está definida em &lt;a href=&#34;http://tools.ietf.org/html/rfc4646&#34;&gt;RFC 4646&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Exemplos de códigos de linguagens validos inclui &amp;#8220;en-US&amp;#8221;, &amp;#8220;fr&amp;#8221;, &amp;#8220;es-ES&amp;#8221;, etc.&lt;/p&gt;

&lt;h2 id=&#34;maneiras-de-verificar-o-language&#34;&gt;Maneiras de verificar o language&lt;/h2&gt;

&lt;p&gt;Podemos utilizar duas maneiras de identificação: uma retorna apenas a language que o usuário está utilizando no browser e o outro verifica alguns códigos de languages que são suportados.&lt;/p&gt;

&lt;p&gt;Exemplos:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;navigator.language  //&#34;en-US&#34;
navigator.languages //[&#34;en-US&#34;, &#34;zh-CN&#34;, &#34;ja-JP&#34;]
&lt;/pre&gt;

&lt;h2 id=&#34;como-seria-na-prática&#34;&gt;Como seria na prática&lt;/h2&gt;

&lt;p&gt;Na prática quando o usuário for acessar o site, não será preciso selecionar o país de origem para entregarmos o conteúdo no seu idioma. Com todos os idiomas prontos, só vamos precisar criar um script que verifique qual idioma o browser está utilizando.&lt;/p&gt;

&lt;h2 id=&#34;analisando-o-código-fonte&#34;&gt;Analisando o código fonte&lt;/h2&gt;

&lt;p&gt;No código fonte abaixo, cada linha tem uma explicação:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;//esconder os formularios
$(&#34;.form&#34;).hide();
$(&#34;.form2&#34;).hide();

//ao clicar vamos descobrir o language
$(&#34;#lang&#34;).on(&#39;click&#39;,function () {

//variavel que vai retornar uma string com language preferida do usuario
var lang = navigator.language;    

//aqui realizamos uma identificação do language 
if(lang === &#39;en-US&#39;){
//entregamos para o usuário o form correto
        alert(&#34;Your language is:&#34;+lang);
        $(&#34;.form2&#34;).show(&#39;slow&#39;, function(){});        
    }

   //aqui realizamos uma identificação do language 
if(lang === &#39;pt-BR&#39;){
     //entregamos para o usuário o form correto
        alert(&#34;Your language is:&#34;+lang);
        $(&#34;.form&#34;).show(&#39;slow&#39;, function(){});        
    }    
});
&lt;/pre&gt;

&lt;p&gt;Link para o exemplo no &lt;a href=&#34;http://jsfiddle.net/leonardo403/f9f70vgh/10/&#34;&gt;JSFiddle&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;propriedades&#34;&gt;Propriedades&lt;/h2&gt;

&lt;p&gt;A interface &lt;code&gt;NavigatorLanguage&lt;/code&gt; não herda qualquer propriedade.&lt;/p&gt;

&lt;p&gt;O &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage.language&#34;&gt;NavigatorLanguage.language&lt;/a&gt; retorna uma &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/DOMString&#34;&gt;DOMString&lt;/a&gt; representando o idioma de preferência do usuário, geralmente o idioma da interface do usuário do navegador. O valor null é devolvido quando este é desconhecido.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage.languages&#34;&gt;NavigatorLanguage.languages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Retorna um array de &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/DOMString&#34;&gt;DOMString&lt;/a&gt; representando os idiomas conhecidos para o usuário, por ordem de preferência.&lt;/p&gt;

&lt;h2 id=&#34;referências&#34;&gt;Referências&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage.languages&#34;&gt;NavigatorLanguage.languages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage&#34;&gt;NavigatorLanguage&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;browsers-compatíveis-desktop&#34;&gt;Browsers compatíveis (Desktop)&lt;/h2&gt;

&lt;p&gt;A tabela e a lista de browsers compativeis foi retirada do site &lt;a href=&#34;http://developer.mozilla.org&#34;&gt;Developer Mozilla&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Chrome&lt;/strong&gt;=&amp;gt; Sim. Returns the browser UI language, not the value of the Accept-Language &lt;a href=&#34;https://developer.mozilla.org/en/HTTP/Headers&#34;&gt;HTTP header&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Firefox(Gecko)&lt;/strong&gt;=&amp;gt;1.0 (1.7 or earlier)&lt;/p&gt;

&lt;p&gt;Prior to Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1), this property&amp;#8217;s value was also part of the user agent string, as reported by &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/window.navigator.userAgent&#34;&gt;navigator.userAgent&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Starting in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), this property&amp;#8217;s value is based on the value of the Accept-Language &lt;a href=&#34;https://developer.mozilla.org/en/HTTP/Headers&#34;&gt;HTTP header&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Internet Explorer&lt;/strong&gt;=&amp;gt; Closest available (non-standard) properties are &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ie/ms534713.aspx&#34;&gt;userLanguage&lt;/a&gt; and &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ie/ms533542.aspx&#34;&gt;browserLanguage&lt;/a&gt;. IE11 provides navigator.language but it is unclear how many prior versions support it. Old versions are not available to me, at the moment.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Opera&lt;/strong&gt;=&amp;gt; Sim.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Safari&lt;/strong&gt;=&amp;gt;Sim.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;browsers-compatíveis-mobile&#34;&gt;Browsers compatíveis (Mobile)&lt;/h2&gt;

&lt;p&gt;Essa é a lista dos browsers mobile que suportam o &lt;strong&gt;navigator.language&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt;=&amp;gt;Sim.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Firefox Mobile(Gecko)&lt;/strong&gt;=&amp;gt;1.0 (1.0)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IE Mobile&lt;/strong&gt;=&amp;gt;Não suporta. Closest available (non-standard) properties are &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ie/ms534713.aspx&#34;&gt;userLanguage&lt;/a&gt; and &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ie/ms533542.aspx&#34;&gt;browserLanguage.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opera Mobile&lt;/strong&gt;=&amp;gt;Sim.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Safari Mobile&lt;/strong&gt;=&amp;gt;Sim.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Todo o conteúdo utilizado foi retirado do site developer.mozilla.org, pois lá tem bastante material sobre o assunto. Você pode utilizar o navigator.language por enquanto nos dois principais browsers Firefox e Chrome, mas isso não impede você de testar nos outros também. Eu espero que este material sirva como um auxílio para encorajar outros web developer a utilizarem mais o navigator.language.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>