<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leonardo Camp on Tableless</title>
    <link>http://tableless.com.br/author/leonardo-camp/index.xml</link>
    <description>Recent content in Leonardo Camp on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/leonardo-camp/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Carrossel descomplicado com HTML, CSS</title>
      <link>http://tableless.com.br/carrocel-descomplicado-com-html-css/</link>
      <pubDate>Sun, 04 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/carrocel-descomplicado-com-html-css/</guid>
      <description>

&lt;p&gt;N√£o √© dif√≠cil perceber que muitos desenvolvedores tanto iniciantes como os veteranos de guerra ainda sofrem quando o assunto √© carrossel,¬†mesmo utilizando frameworks como BootStrap. Mas seus problemas acabaram! (m√∫sica de chegada milagrosa), com o conhecimento de poucas t√©cnicas podemos resolver esse &amp;#8220;gigante&amp;#8221; problema facilmente.&lt;/p&gt;

&lt;h3 id=&#34;pseudo-classe-target-8211-css&#34;&gt;Pseudo classe :target &amp;#8211; CSS&lt;/h3&gt;

&lt;p&gt;Para resolver o grande problema de transi√ß√£o do carrossel, vamos utilizar a pseudo classe &lt;code&gt;:target&lt;/code&gt;, que atribui algumas caracter√≠sticas do CSS para o elemento HTML.&lt;/p&gt;

&lt;p&gt;Para quem ainda n√£o conhece a pseudo classe &amp;#8220;:target&amp;#8221; aqui vai um exemplo bem alto explicativo.&lt;/p&gt;

&lt;h6 id=&#34;html&#34;&gt;HTML&lt;/h6&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;a href=&#34;#texto-exemplo-1&#34;&amp;gt;Seleciona o texto exemplo 1&amp;lt;/a&amp;gt;
&amp;lt;a href=&#34;#texto-exemplo-2&#34;&amp;gt;Seleciona o texto exemplo 2&amp;lt;/a&amp;gt;

&amp;lt;p id=&#34;texto-exemplo-1&#34; class=&#34;text&#34; &amp;gt;Texto exemplo 1&amp;lt;/p&amp;gt;
&amp;lt;p id=&#34;texto-exemplo-2&#34; class=&#34;text&#34; &amp;gt;Texto exemplo 2&amp;lt;/p&amp;gt;
&lt;/pre&gt;

&lt;h6 id=&#34;css&#34;&gt;CSS&lt;/h6&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.text:target{
    border: 1px solid #000;
}
&lt;/pre&gt;

&lt;p&gt;Voc√™ pode conferir o resultado no CODEPEN &lt;a href=&#34;http://codepen.io/lleonardoll/pen/BzBdWB?editors=1100&#34; target=&#34;_blank&#34;&gt;aqui.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O Tableless tem &lt;a href=&#34;http://tableless.com.br/css3-abas-com-a-pseudo-classe-target/&#34;&gt;um artigo que ensina a fazer abas usando apenas CSS3 com o pseudo classe :target&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;estrutura-html&#34;&gt;Estrutura HTML&lt;/h3&gt;

&lt;p&gt;A estrutura que iremos utilizar tamb√©m √© bem simples. Primeiramente uma DIV como &amp;#8220;container&amp;#8221; que √© onde ir√° acontecer o carrossel, tamb√©m utilizaremos outras DIVs que chamaremos de &amp;#8220;wall-x&amp;#8221; onde x √© o valor da DIV no carrossel.&lt;/p&gt;

&lt;h2 id=&#34;m√£o-na-massa&#34;&gt;M√£o na massa&lt;/h2&gt;

&lt;p&gt;Vamos come√ßar pelo HTML definindo a estrutura do nosso carrossel.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;container&#34;&amp;gt;
    &amp;lt;div class=&#34;wall wall-1&#34; id=&#34;wall-1&#34;&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 1&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-2&#34; id=&#34;wall-2&#34;&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 2&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-3&#34; id=&#34;wall-3&#34;&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 3&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Terminado a estrutura, devemos deixar todas as DIVs wall com &amp;#8220;display: none;&amp;#8221; ( sim, todas! ) para n√£o serem listadas de uma vez.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.container{
    width: 150px;
    height: 150px;
}

.wall{
    display: none;
    width: 100%;
    height: 100%;
}

/* Corzinha de fundo para diferenciar */
.wall-1{ background-color: #f00; }
.wall-2{ background-color: #0f0; }
.wall-3{ background-color: #00f; }

.wall:target{
    display: block;
}
&lt;/pre&gt;

&lt;h6 id=&#34;explicando-8230&#34;&gt;Explicando&amp;#8230;&lt;/h6&gt;

&lt;p&gt;Basicamente, definimos o tamanho do &amp;#8220;container&amp;#8221;. Deixamos todas as DIVs &amp;#8220;wall&amp;#8221; com &amp;#8220;display: none;&amp;#8221; e definimos que todo &amp;#8220;target&amp;#8221; ter√° o &amp;#8220;display: block;&amp;#8221;. Se nada estiver aparecendo na sua tela, n√£o se assuste, tudo est√° funcionando, o que acontece √© que voc√™ n√£o tem nem um &amp;#8220;target&amp;#8221; definido, mas voc√™ pode fazer um teste adicionando &amp;#8220;#wall-1&amp;#8221; na sua url.&lt;/p&gt;

&lt;p&gt;Ok, j√° temos 90% do carrossel pronto. Para finalizarmos o carrossel precisamos adicionar as setas (ou bot√µes como preferir) para fazer a transi√ß√£o de uma tela para outra, e √© ai que vem a outra parte f√°cil. A unica coisa que precisamos fazer √© adicionar links que setam para o target anterior ou seguinte, neste caso, se voc√™ estiver no &amp;#8220;#wall-2&amp;#8221; o anterior seria &amp;#8220;#wall-1&amp;#8221; e o seguinte &amp;#8220;#wall-3&amp;#8221; (precisava explicar?).&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;container&#34;&amp;gt;
    &amp;lt;div class=&#34;wall wall-1&#34; id=&#34;wall-1&#34;&amp;gt;
        &amp;lt;a href=&#34;#wall-3&#34;&amp;gt;Voltar&amp;lt;/a&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 1&amp;lt;/h1&amp;gt;
        &amp;lt;a href=&#34;#wall-2&#34;&amp;gt;Avan√ßar&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-2&#34; id=&#34;wall-2&#34;&amp;gt;
        &amp;lt;a href=&#34;#wall-1&#34;&amp;gt;Voltar&amp;lt;/a&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 2&amp;lt;/h1&amp;gt;
        &amp;lt;a href=&#34;#wall-3&#34;&amp;gt;Avan√ßar&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-3&#34; id=&#34;wall-3&#34;&amp;gt;
        &amp;lt;a href=&#34;#wall-2&#34;&amp;gt;Voltar&amp;lt;/a&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 3&amp;lt;/h1&amp;gt;
        &amp;lt;a href=&#34;#wall-1&#34;&amp;gt;Avan√ßar&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Para facilitar a exibi√ß√£o do primeiro target (sem ter que criar um link personalizado) voc√™ pode simplesmente colocar uma linha de javascript para todo o carrossel ficar ativa üòâ&lt;/p&gt;

&lt;pre&gt;window.location = &#34;#wall-1&#34;;
&lt;/pre&gt;

&lt;p&gt;Voc√™ pode ver o c√≥digo em a√ß√£o no CODEPEN &lt;a href=&#34;http://codepen.io/lleonardoll/pen/pbvdRZ&#34; target=&#34;_blank&#34;&gt;aqui.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pronto! Uma maneira muito simples para resolver um grande problema.&lt;/p&gt;

&lt;h2 id=&#34;poss√≠vel-problema-que-voc√™-poder√°-encontrar&#34;&gt;Poss√≠vel problema que voc√™ poder√° encontrar&lt;/h2&gt;

&lt;p&gt;Caso voc√™ esteja utilizando algum link com target &amp;#8220;#&amp;#8221; para executar alguma a√ß√£o, o &amp;#8220;#wall-x&amp;#8221; que est√° sendo setado perder√° o foco, e logicamente ter√° a atribui√ß√£o &amp;#8220;display: none;&amp;#8221; retomada. Neste caso √© recomend√°vel que n√£o utilize targets na mesma pagina do carrossel e substitua os links &amp;#8220;#&amp;#8221; por fun√ß√µes onclick via JavaScript ou JQuery.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>