<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fabiano De Lima Abreu on Tableless</title>
    <link>http://tableless.com.br/author/fabiano-de-lima-abreu/index.xml</link>
    <description>Recent content in Fabiano De Lima Abreu on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/fabiano-de-lima-abreu/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Monitoramento de eventos com Google Analytics</title>
      <link>http://tableless.com.br/monitoramento-de-eventos-com-google-analytics/</link>
      <pubDate>Fri, 06 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/monitoramento-de-eventos-com-google-analytics/</guid>
      <description>

&lt;p&gt;Você gastou um &amp;#8220;tempão&amp;#8221; construindo algumas coisas novas legais em seu site, mas como é que você pode ter certeza que seus visitantes estão interagindo com elas? Este artigo abordará justamente isso.&lt;/p&gt;

&lt;p&gt;Primeiramente para quem ainda não conhece ou possa interessar, segue uma breve descrição sobre o Google Analytics: O &lt;a href=&#34;http://google.com/analytics&#34;&gt;Google Analytics&lt;/a&gt; é uma Application Programming Interface (API) ou, em português, Interface de Programação de Aplicativos. Essa ferramenta é gratuita e disponibilizada pelo Google para ser usada pelos desenvolvedores de sites e profissionais de Search Engine Optimization (SEO), que em português significa Otimização para Motores de Busca. Com o Analytics você consegue acompanhar detalhes sobre a visitação e estatísticas do seu site, além de tornar possível a verificação de variáveis interessantes, como a quantidade de visitas por dia ou então as Keywords que estão sendo relacionadas ao seu site. Todos os dados são extraídos diariamente das estatísticas do próprio Google. Atualmente, o Google Analytics é a ferramenta de Otimização de Sites mais utilizada no mundo.&lt;/p&gt;

&lt;p&gt;Partindo do ponto de que você já tenha ativado o Google Analytics no seu site (&lt;a href=&#34;https://developers.google.com/analytics/devguides/collection/analyticsjs/advanced?hl=pt-br&#34; target=&#34;_blank&#34;&gt;Se não souber ativar acesse a página oficial do google analytics para desenvolvedores&lt;/a&gt;) , vamos ao que interessa:&lt;/p&gt;

&lt;h2 id=&#34;configuração&#34;&gt;Configuração&lt;/h2&gt;

&lt;p&gt;Não há nenhuma configuração adicional requerida no Google Analytics para receber eventos, apenas tenha seu código &lt;strong&gt;GA&lt;/strong&gt; na página e adicione o código ga abaixo para os eventos HTML desejados e PRONTO! você já está &amp;#8220;rastreando&amp;#8221;!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nota&lt;/strong&gt;: &lt;em&gt;na versão gratuita do Google Analytics você está limitado a 10 milhões de eventos no mês. Esta é a maneira mais que suficiente para a maioria dos sites, mas pode esgota-los rápido se você adicionar um monte de onmouseover e eventos OnScroll.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;estrutura-de-código-do-acompanhamento-de-eventos&#34;&gt;Estrutura de código do acompanhamento de eventos&lt;/h2&gt;

&lt;pre&gt;ga(&#39;track&#39;,&#39;event&#39;, &#39;categoria&#39;, &#39;acao&#39;, &#39;rotulo opcional&#39;);&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&amp;#8216;&lt;strong&gt;track&lt;/strong&gt;&amp;#8216; &amp;#8211; Este é o método javascript que realizada a chamada desta função.&lt;/li&gt;
&lt;li&gt;&amp;#8216;&lt;strong&gt;event&lt;/strong&gt;&amp;#8216; &amp;#8211; Parâmetro para a função em &amp;#8216;&lt;em&gt;track&lt;/em&gt;&amp;#8216;.&lt;/li&gt;
&lt;li&gt;&amp;#8216;&lt;strong&gt;categoria&lt;/strong&gt;&amp;#8216; &amp;#8211; A categoria que você deseja mostrar. Use algo amplo como links externos, laços sociais, imagens, vídeos ou formulário.&lt;/li&gt;
&lt;li&gt;&amp;#8216;&lt;strong&gt;acao&lt;/strong&gt;&amp;#8216; &amp;#8211; Esta é a ação que ocorreu; algo que o usuário fez que você está rastreando. Para a propriedade &amp;#8220;acao&amp;#8221; use: clicado, copia&amp;#8230; qualquer coisa que você esteja rastreando do usuário.&lt;/li&gt;
&lt;li&gt;‘&lt;strong&gt;rotulo opcional&lt;/strong&gt;’ – Este é um campo opcional, mas quando você começa a rastrear uma grande quantidade de coisas, você quer ser capaz de segmenta-las. Para esta finalidade, pense neste campo como uma categoria especifica, por exemplo, facebook, imagem superior&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;trabalhando-com-eventos&#34;&gt;Trabalhando com eventos&lt;/h2&gt;

&lt;p&gt;Agora, digamos que você tem uma landing page e a meta dela é que as pessoas ao acessa-la, baixem um papel de parede, vamos mapear quantas vezes as pessoas clicam no link de download:&lt;/p&gt;

&lt;p&gt;Podemos tanto fazer da forma mais simples através da chamada do javascript &lt;em&gt;inline&lt;/em&gt; em nosso html:&lt;/p&gt;

&lt;pre&gt;&amp;lt;a href=&#34;http://tableless.com.br/walpaper.jpg&#34; onclick=&#34;ga(&#39;send&#39;, &#39;event&#39;, &#39;link&#39;,&#39;click&#39;, &#39;Download clicado&#39;);&#34; id=&#34;download&#34;&amp;gt;Download&amp;lt;/a&amp;gt;&lt;/pre&gt;

&lt;p&gt;Ou podemos realizar a chamada através de eventos via jquery:&lt;/p&gt;

&lt;pre&gt;jQuery(document).ready(function ($) {
   $(&#39;#download&#39;).on(&#39;click&#39;, function() {
     ga(&#39;send&#39;, &#39;event&#39;, &#39;link&#39;,&#39;click&#39;, &#39;Download clicado&#39;);
   });
});&lt;/pre&gt;

&lt;p&gt;Uma vez implementado, você pode checar as &amp;#8220;tracks&amp;#8221; dos seus eventos corretamente após 24hr, em: &lt;strong&gt;Comportamento&lt;/strong&gt; &amp;gt; &lt;strong&gt;Eventos&lt;/strong&gt; dentro do google analytics, assim como a imagem abaixo ilustra:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/03/custom-event1-658x415.jpg&#34;&gt;&lt;img class=&#34;alignleft wp-image-47502 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/03/custom-event1-658x415.jpg&#34; alt=&#34;relatório de eventos&#34; width=&#34;658&#34; height=&#34;415&#34; srcset=&#34;uploads/2015/03/custom-event1-658x415.jpg 658w, uploads/2015/03/custom-event1-658x415-220x139.jpg 220w, uploads/2015/03/custom-event1-658x415-400x252.jpg 400w&#34; sizes=&#34;(max-width: 658px) 100vw, 658px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;concluindo&#34;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;São incontáveis os ganhos, principalmente no âmbito da análise ao monitorarmos os eventos dentro da página e gerar por exemplo um relatório quantitativo com tais dados no final de um determinado período. Assim como foi digo no post, Temos  uma grande quantidade de eventos disponíveis no mês, o suficiente para mensurar com qualidade todos ou os principais eventos que possam ocorrer em nosso site.&lt;/p&gt;

&lt;h2 id=&#34;referências&#34;&gt;Referências&lt;/h2&gt;

&lt;p&gt;&lt;a title=&#34;How to track custom click/touch events in Google Universal Analytics&#34; href=&#34;http://www.creare.co.uk/track-custom-events-universal-ga&#34; target=&#34;_blank&#34;&gt;How to track custom click/touch events in Google Universal Analytics&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Event tracking in google analytics explained for non-coders&#34; href=&#34;http://www.seerinteractive.com/blog/event-tracking-explained/&#34; target=&#34;_blank&#34;&gt;Event tracking in google analytics explained for non-coders&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Configuração avançada - acompanhamento da Web &#34; href=&#34;https://developers.google.com/analytics/devguides/collection/analyticsjs/advanced?hl=pt-br&#34; target=&#34;_blank&#34;&gt;Configuração avançada &amp;#8211; acompanhamento da Web &lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JavaScript Strict Mode</title>
      <link>http://tableless.com.br/javascript-strict-mode/</link>
      <pubDate>Thu, 17 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/javascript-strict-mode/</guid>
      <description>

&lt;h2 id=&#34;o-que-é-e-porque-usá-lo&#34;&gt;O que é e porque usá-lo&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ECMAScript5&lt;/strong&gt; introduziu o &lt;strong&gt;&amp;#8220;use strict&amp;#8221;&lt;/strong&gt;, que basicamente faz o browser interpretar o código JavaScript no modo mais rigoroso. Quando usamos o JS em strict mode, o browser mostra os erros que antes eram silenciados, como utilizar uma variável que não foi declarada, utilizar palavras reservadas no código, ou utilizar recursos da linguagem que já foram declarados obsoletos e até mesmo, proibindo o uso de partes da linguagem que são tidas como problemáticas, nos forçando a escrever um código de melhor qualidade e ajudando a capturar bugs mais precocemente. Sem habilitarmos o modo restrito, o código abaixo é executado sem lançar qualquer excepção, ainda que seja uma má prática utilizar a variável “nome” sem declará-la:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function minhaFuncao() {
    nome = &#34;Caio Proiete&#34;;
    // ...
 } 
 minhaFuncao();
&lt;/pre&gt;

&lt;p&gt;Se habilitarmos o strict mode, será lançada uma excepção para notificar que temos um problema no código:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function minhaFuncao() {
    &#34;use strict&#34;;
 
    // 0x800a13b2 - JavaScript runtime error: Variable undefined in strict mode
    nome = &#34;Caio Proiete&#34;;
    // ...
}

minhaFuncao();
&lt;/pre&gt;

&lt;h2 id=&#34;habilitando&#34;&gt;Habilitando&lt;/h2&gt;

&lt;p&gt;Podemos habilitar o modo restrito em diferentes âmbitos: A primeira forma é a nível de arquivo. Para isso, basta por a string &lt;code&gt;&amp;quot;use strict&amp;quot;;&lt;/code&gt; no começo de um arquivo JS para que todo o código deste arquivo seja executado no modo restrito. Nenhum código pode vir antes da declaração &amp;#8220;use strict&amp;#8221;; (apenas whitespace e comentários são permitidos). Caso um trecho de código apareça antes, o modo restrito não é disparado.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// código &#34;strict&#34;
 &#34;use strict&#34;;
 var foo = &#34;bar&#34;;

 // código &#34;não strict&#34;
 var whatsUp = &#34;suuup&#34;;
 &#34;use strict&#34;;

&lt;/pre&gt;

&lt;p&gt;A outra forma de uso é a nível de função. Quando usado dentro de uma função, apenas o código dentro dela é executado no modo restrito. Todo o código externo continua a ser executado normalmente.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function foo() {
  &#34;use strict&#34;;
  // código da função em modo &#34;strict&#34;
}

function bar() {
  // código da função em modo &#34;não strict&#34;
}
&lt;/pre&gt;

&lt;p&gt;Hoje é muito comum concatenarmos arquivos para diminuir a quantidade de dados trafegados e o número de requisições. Para não disparar o modo restrito em código que não foi testado neste modo, é interessante deixarmos o código que roda e foi testado para rodar no modo restrito isolado. As funções de invocação imediata são perfeitas para isso.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// código no modo &#34;não strict&#34;
(function() {
  &#34;use strict&#34;;
  // código no modo &#34;strict&#34;
}());
// código no modo &#34;não strict&#34;
&lt;/pre&gt;

&lt;h2 id=&#34;o-que-muda&#34;&gt;O que muda?&lt;/h2&gt;

&lt;p&gt;O _strict mode _trouxe várias mudanças na forma de como o JavaScript é executado. Mas vou focar nas principais partes. Caso queira descer mais ainda na toca do coelho, o artigo do&lt;em&gt; &lt;/em&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;&lt;a style=&#34;color: #666666;text-decoration: underline&#34; href=&#34;http://dmitrysoshnikov.com/ecmascript/es5-chapter-2-strict-mode/&#34;&gt;Dmitry Soshnikov&lt;/a&gt; é uma ótima leitura sobre todos os detalhes das mudanças que o &lt;em&gt;strict mode&lt;/em&gt; trouxe.&lt;/p&gt;&lt;/p&gt;

&lt;h3 id=&#34;remoo_do_with&#34;&gt;
  Remoção do &lt;em&gt;with&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;
  A tão mal compreendida declaração &lt;em&gt;&lt;code&gt;with&lt;/code&gt;&lt;/em&gt;&lt;em&gt; &lt;/em&gt;foi removida da linguagem. No &lt;strong&gt;&lt;em&gt;strict mode&lt;/em&gt;&lt;/strong&gt; seu uso gera um erro de sintaxe.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#34;use strict&#34;;
// gera um erro de sintaxe no &#34;strict mode&#34;
with (location) {
  console.log(href);
}
&lt;/pre&gt;

&lt;h3 id=&#34;declarao_implcita_de_variveis_globais&#34;&gt;
  Declaração implícita de variáveis globais
&lt;/h3&gt;

&lt;p&gt;
  Um dos erros mais comuns em JavaScript. Sem o &lt;em&gt;strict mode&lt;/em&gt;, uma nova variável global é criada sempre que atribuímos um valor a uma variável não declarada. No modo restrito, isto gera um erro.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// gera um erro no &#34;strict mode&#34;
(function() {
  &#34;use strict&#34;;
  variavelNaoDeclarada = &#39;foo&#39;;
}());
&lt;/pre&gt;

&lt;h3 id=&#34;restrio_de_nomes&#34;&gt;
  Restrição de nomes
&lt;/h3&gt;

&lt;p&gt;
  O modo restrito impõe uma série de restrições aos nomes de variáveis, funções e parâmetros. &lt;code&gt;eval&lt;/code&gt; e &lt;em&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/em&gt;&lt;em&gt; &lt;/em&gt;não mais podem ser usados como identificadores, muito menos tentar atribuir um valor a eles. O que é muito bom, uma vez que o JavaScript possui nativamente uma função &lt;code&gt;eval&lt;/code&gt; e um objeto &lt;em&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/em&gt;.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// gera um erro de sintaxe no &#34;strict mode&#34;
function() {
  &#34;use strict&#34;;
  arguments = &#39;foo&#39;;
}
&lt;/pre&gt;

&lt;p&gt;
  Algumas palavras também são proibidas de serem usadas como identificadores pois são candidatas a serem usadas como nomes de futuras &lt;em&gt;features&lt;/em&gt; da linguagem. Entre elas estão:
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    implements
  &lt;/li&gt;
  &lt;li&gt;
    interface
  &lt;/li&gt;
  &lt;li&gt;
    let
  &lt;/li&gt;
  &lt;li&gt;
    package
  &lt;/li&gt;
  &lt;li&gt;
    private
  &lt;/li&gt;
  &lt;li&gt;
    protected
  &lt;/li&gt;
  &lt;li&gt;
    public
  &lt;/li&gt;
  &lt;li&gt;
    static
  &lt;/li&gt;
  &lt;li&gt;
    yield
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;uso_do_this&#34;&gt;
  Uso do this
&lt;/h3&gt;

&lt;p&gt;
  O uso do &lt;code&gt;this&lt;/code&gt; foi levemente modificado. Quando usado dentro de uma função, o &lt;code&gt;this &lt;/code&gt;aponta para o objeto que contem a função. Porém quando a função não pertence a um objeto específico, ele aponta para o objeto global &lt;code&gt;window&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
  No modo restrito, caso o &lt;code&gt;this&lt;/code&gt; seja usado em uma função que é definida no escopo global, ele retorna o valor &lt;code&gt;undefined&lt;/code&gt;. Caso uma função pertença a um objeto, ele continua a apontar para o objeto, como acontecia anteriormente.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// retorna &#34;undefined&#34;
function() {
  &#34;use strict&#34;;
  return this;
}
&lt;/pre&gt;

&lt;p&gt;
  Isso evita erros comuns com funções usadas como construtores. No código abaixo chamamos uma função construtora sem o uso do &lt;code&gt;new&lt;/code&gt;. No modo não restrito, o &lt;code&gt;this &lt;/code&gt;apontaria para &lt;code&gt;window&lt;/code&gt; e uma variável global &lt;code&gt;nome&lt;/code&gt; seria criada. Como no &lt;em&gt;strict mode&lt;/em&gt; o &lt;code&gt;this&lt;/code&gt; retorna &lt;code&gt;undefined&lt;/code&gt;, e não podemos adicionar propriedades a&lt;code&gt;undefined&lt;/code&gt;, um erro é gerado. Quando usado da forma apropriada, com o &lt;code&gt;new&lt;/code&gt;, nenhum erro é disparado.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#34;use strict&#34;;

function Blog(nome) {
  this.nome = nome;
}

// gera um erro no &#34;strict mode&#34;
var blog = Blog(&#39;Loop Infinito&#39;);
&lt;/pre&gt;

&lt;h3 id=&#34;parmetros_e_propriedades_duplicadas&#34;&gt;
  Parâmetros e propriedades duplicadas
&lt;/h3&gt;

&lt;p&gt;
  O JavaScript não reclama caso você declare duas propriedades de um objeto com o mesmo nome. A última declaração vai simplesmente sobrescrever a anterior. O modo restrito força o uso de nomes únicos de propriedades.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#34;use strict&#34;;

// gera um erro de sintaxe no modo strict
obj = {
  foo: 1,
  bar: 2,
  foo: 3
}
&lt;/pre&gt;

&lt;p&gt;
  Com o nome de parâmetros temos um cenário parecido. Normalmente o JavaScript aceita como sintaxe válida a declaração de parâmetros com o mesmo nome. No modo restrito isso gera um erro de sintaxe.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// gera um erro de sintaxe
function foo(param1, param1) {
  &#34;use strict&#34;;
  return param1 + 1;
}
&lt;/pre&gt;

&lt;h3&gt;
  Variáveis do contexto &lt;em&gt;eval()&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;
  O &lt;code&gt;eval&lt;/code&gt;, em código não &lt;em&gt;strict&lt;/em&gt;, pode adicionar variáveis ao contexto em que ele está inserido. E antes do &lt;abbr title=&#34;JavaScript Object Notation&#34;&gt;JSON&lt;/abbr&gt; ser nativamente implementado nos &lt;em&gt;browsers&lt;/em&gt;, o &lt;code&gt;eval&lt;/code&gt; era muito usado para construir objetos a partir de &lt;em&gt;strings&lt;/em&gt; e os inserir no contexto externo ao &lt;code&gt;eval&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
  Com o &lt;em&gt;strict mode&lt;/em&gt;, o &lt;code&gt;eval&lt;/code&gt; não pode mais adicionar variáveis fora de seu contexto. Variáveis adicionadas no &lt;code&gt;eval&lt;/code&gt; ficam contidas no contexto do &lt;code&gt;eval&lt;/code&gt;. No código abaixo, sem o &lt;em&gt;strict mode&lt;/em&gt;, seria inserido uma variável &lt;code&gt;foo&lt;/code&gt; e o valor do &lt;code&gt;alert&lt;/code&gt; seria “bar”. No &lt;em&gt;strict mode &lt;/em&gt;acontece um erro de sintaxe pois a variável não foi definida.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#34;use strict&#34;;
eval(&#39;var foo=&#34;bar&#34;;&#39;);
alert(foo); // gera um erro de sintaxe no &#34;strict mode&#34;
&lt;/pre&gt;

&lt;h3 id=&#34;nmeros_no_sistema_octal&#34;&gt;
  Números no sistema octal
&lt;/h3&gt;

&lt;p&gt;
  Números no sistema octal são números representados na base 8. Ou seja, 10 em octal equivale a 8 em decimal. Em JavaScript, e em várias outras linguagens, os números no sistema octal são representados com um 0 na frente do número. 023 em JavaScript equivale a 19 em decimal. Isso gerava muita confusão, já que muitos achavam que um zero a esquerda não iria fazer nenhuma diferença na representação do número.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#34;use strict&#34;;

// gera um erro de sintaxe no modo strict
var foo = 023;
&lt;/pre&gt;

&lt;p&gt;
  No modo restrito o uso de números no sistema octal não é permitido. Caso um 0 seja posto na frente de um número octal válido, será gerado um erro de sintaxe. Caso contrário ele será simplesmente tratado como decimal.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#34;use strict&#34;;

// octal válido. gera erro de sintaxe no &#34;strict mode&#34;
var foo = 023;

// ocatal não válido. é tratado como decimal
var bar = 08;
&lt;/pre&gt;

&lt;p&gt;
  Como o número 08 não é um número octal válido, já que números no sistema octal vão de 0 a 7, ele é tratado como um número decimal. No caso do número 023, por ser um octal válido, um erro de sintaxe é gerado. Caso você não saiba o que um octal é, ande pela sombra evitando o uso de 0’s na frente de números.
&lt;/p&gt;

&lt;h2&gt;
  Suporte
&lt;/h2&gt;

&lt;p&gt;
  O &lt;em&gt;strict mode&lt;/em&gt; pode ser usado sem medo em todos os navegadores. Caso um navegador que não o implemente passe pela declaração &lt;code&gt;&#34;use strict&#34;;&lt;/code&gt;, ele irá tratá-la como uma &lt;em&gt;string&lt;/em&gt; e não irá afetar o comportamento do código seguinte.
&lt;/p&gt;

&lt;p&gt;
  O cenário contrário também é compatível. Caso você desenvolva JavaScript em modo restrito em um navegador que o implementa, o código válido no modo restrito deste navegador é retrocompatível com qualquer outro que implemente o ECMAScript 3. Ou seja, irá rodar até no IE. 😀 haha
&lt;/p&gt;

&lt;p&gt;
  De qualquer forma, você pode ter acesso a lista de compatibilidade do &amp;#8220;use strict&amp;#8221; junto aos navegadores, no no seguinte link: &lt;a href=&#34;http://caniuse.com/use-strict&#34;&gt;CanIUse&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
  Concluindo
&lt;/h2&gt;

&lt;p&gt;
  O Modo restrito além de melhorar a legibilidade e estabilidade do seu código, ajuda a diminuir erros e ainda melhora a segurança associada à execução do código.Seu suporte é muito amplo e mesmo que não seja suportado não irá atrapalhar em nada na execução do código, ou seja, não há motivos para não utiliza-lo.
&lt;/p&gt;

&lt;p&gt;
  Espero que tenham gostado do artigo.
&lt;/p&gt;

&lt;p&gt;
  Dúvidas, criticas, sugestões&amp;#8230; nos comentários 😉
&lt;/p&gt;

&lt;h2&gt;
  Referências
&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;a href=&#34;http://www.nczonline.net/blog/2012/03/13/its-time-to-start-using-javascript-strict-mode/&#34;&gt;Nicholas C. Zakas. It’s time to start using JavaScript strict mode&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&#34;http://loopinfinito.com.br/2013/07/16/javascript-strict-mode/&#34;&gt;Caio Gondim. JavaScript Strict Mode. Lopinfinito&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&#34;http://tutsmais.com.br/blog/javascript-2/o-que-e-o-mode-strict-dojavascript/&#34;&gt;Rodrigo Nery. O que é o Mode Strict no JavaScript.&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Um pouco sobre OpenType</title>
      <link>http://tableless.com.br/opentype/</link>
      <pubDate>Sat, 28 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/opentype/</guid>
      <description>

&lt;p&gt;Com tantos elementos que se movem e mudam de uma tela para a outra, uma boa tipografia é uma das únicas coisas que funcionam bem em qualquer dispositivo (exceto os que usam o Opera Mini).&lt;/p&gt;

&lt;p&gt;As palavras possuem significado, mas as letras demonstram emoção. O OpenType é um formato de fontes multiplataforma desenvolvido pela Adobe e Microsoft. Oferece grande profundidade e variedade  ao expandir os conjuntos de fontes tradicionais ao acrescentar recursos como ligaduras, ornamentos, glifos alternativos e kerning real.&lt;/p&gt;

&lt;h2 id=&#34;contextualizando-os-recursos&#34;&gt;&lt;strong&gt;Contextualizando os recursos&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Kerning basicamente, se trata de ajustar os espaços entre os caracteres de maneira que a leitura seja mais funcional e agradável. Em outras palavras, é um processo de adicionar ou remover espaço entre pares de caracteres, ou seja, mexe-se no espaçamento existente apenas entre uma ou outra letra, algumas letras, mas não em tudo, como funciona a propriedade letter-spacing do css.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Traking&lt;/strong&gt; trata-se de um processo de adicionar ou remover espaço em todo um bloco de texto, ou seja, mexe-se no espaçamento existente em todo o conjunto de letras por igual, seja uma única palavra, frase, parágrafo inteiro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ligaduras&lt;/strong&gt; são combinações de caracteres que historicamente tendem a se unir ao serem posicionados lado a lado, como ff, ffl, fi ou fj.&lt;/p&gt;

&lt;div id=&#34;attachment_43150&#34; style=&#34;width: 337px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/06/ligaduras.jpg&#34;&gt;&lt;img class=&#34;wp-image-43150&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/06/ligaduras-265x132.jpg&#34; alt=&#34;ligaduras&#34; width=&#34;327&#34; height=&#34;163&#34; srcset=&#34;uploads/2014/06/ligaduras-265x132.jpg 265w, uploads/2014/06/ligaduras-400x200.jpg 400w, uploads/2014/06/ligaduras.jpg 558w&#34; sizes=&#34;(max-width: 327px) 100vw, 327px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    No texto magenta, não há ligaduras. Veja a diferença na terceira linha ao usar &amp;#8216;ffl&amp;#8217; e &amp;#8216;ffi&amp;#8217;
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Além dos recursos citados acima, ainda temos recursos que incluem os glifos alternativos e opções para numerais, incluindo frações e números tabulares e muitos outros.&lt;/p&gt;

&lt;p&gt;Só isso já justificaria o uso de OpenType, já que os navegadores tendem a fazer um péssimo trabalho ao distribuir o espaço entre as letras na tela.&lt;/p&gt;

&lt;h2 id=&#34;um-pouco-de-história&#34;&gt;Um pouco de história&lt;/h2&gt;

&lt;p&gt;Esses caracteres e recursos existem há séculos, mas apenas recentemente tornaram-se usáveis na web.&lt;/p&gt;

&lt;p&gt;Com o advento dos tipos móveis, as ligaduras foram usadas para melhorar o espaçamento entre letras e para otimizar a distribuição dos tipos.&lt;/p&gt;

&lt;p&gt;Assim como tudo na web, o uso desses recursos depende do suporte dos navegadores, mas felizmente o nível de suporte é alto o suficiente para usá-lo.&lt;/p&gt;

&lt;h2 id=&#34;qual-é-a-diferença-entre-fontes-truetype-postscript-e-opentype&#34;&gt;Qual é a diferença entre fontes TrueType, PostScript e OpenType?&lt;/h2&gt;

&lt;p&gt;Se você lida frequentemente com fontes já viu pelo menos dois desses termos, mas afinal oque são  fontes TrueType, OpenType e Postscript?&lt;/p&gt;

&lt;p&gt;As fontes &lt;strong&gt;TrueType&lt;/strong&gt; são mais comuns, sendo a maioria das fontes gratuitas ou mais baratas. Foram criadas nos anos 80 pela Apple e posteriormente implementadas no windows 3.1 pela microsoft. Podem ter seu fator de escala definido para qualquer tamanho, são legíveis em vários tamanhos e é possível envia-las para qualquer dispositivo de saída. São recomendadas quando é preciso uma fonte leve, mas que imprima bem e tenha uma boa qualidade em monitores; sua extensão é “.ttf”.&lt;/p&gt;

&lt;p&gt;O formato &lt;strong&gt;OpenType&lt;/strong&gt; foi desenvolvido pela microsoft em 1994 baseado no TrueType. Primeiramente foi chamado de TrueType Open, nome este que foi alterado para o atual após a entrada da Adobeno projeto, incorporando tecnologias próprias do PostScript Type 1. O OpenType tem as mesmas características de seu antecessor e mais algumas vantagens; ele pode incorporar uma extensão maior do conjunto de caracteres, dá suporte a várias linguagens num só arquivo e possibilita tratamentos tipográficos complexos de algumas linguagens, como ligaduras entre caracteres. É recomendado quando é necessário abranger um certo idioma e uma tipografia mais detalhada; sua extensão é “.otf”.&lt;/p&gt;

&lt;p&gt;As chamadas &lt;strong&gt;PostScript&lt;/strong&gt; foram as primeiras a surgir pelas mãos da Adobe. Com o intuito de serem usadas para imprimir documentos complexos em impressoras digitais, atualmente são suportadas por quase todas as impressoras laser, tendo uma ótima qualidade e sendo bem harmoniosas. São recomendadas para impressões de alta qualidade, como revistas e publicações. As fontes PostScript para windows são formadas por 4 arquivos com as seguintes extensões: “.afm”, “.pfb”, “.pfm” e “.inf”.&lt;/p&gt;

&lt;h2 id=&#34;suporte&#34;&gt;Suporte&lt;/h2&gt;

&lt;p&gt;Hoje o único navegador que não oferece suporte ao OpenType é o Opera Mini. Veja a lista de navegadores com suporte, abaixo: (disponível em: &lt;a href=&#34;http://caniuse.com/#search=woff&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://caniuse.com/#search=woff&#34;&gt;http://caniuse.com/#search=woff&lt;/a&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/06/support.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-43155 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/06/support.png&#34; alt=&#34;suporte&#34; width=&#34;930&#34; height=&#34;351&#34; srcset=&#34;uploads/2014/06/support.png 930w, uploads/2014/06/support-265x100.png 265w, uploads/2014/06/support-400x150.png 400w&#34; sizes=&#34;(max-width: 930px) 100vw, 930px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;por-que-usar&#34;&gt;Por que usar?&lt;/h2&gt;

&lt;p&gt;A leitura se dá por grupos de formas, e não letras individuais. Assim, quanto mais suave for o fluxo, mais fácil será apreender grupos de letras e interpretá-las como palavras ou frases, e mais rápido o usuário compreenderá a mensagem que virá com estilo.&lt;/p&gt;

&lt;h2 id=&#34;detalhes-de-uso&#34;&gt;Detalhes de uso&lt;/h2&gt;

&lt;p&gt;Ao incluir uma fonte com recursos OpenType em seu site, o uso via CSS é bem simples. A sintaxe oficial do CSS3 é assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;p{
  font-feature-settings:&#34;frac&#34; 1;
}&lt;/pre&gt;

&lt;p&gt;Este código habilita as frações, se estiverem disponíveis na fonte. Devido às variações de sintaze, o modo mais seguro de incluir o código acima é assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;p{
  -moz-font-feature-settings:&#34;frac&#34; 1; 
  -moz-font-feature-settings:&#34;frac=1&#34;; 
  -ms-font-feature-settings:&#34;frac&#34; 1; 
  -o-font-feature-settings:&#34;frac&#34; 1; 
  -webkit-font-feature-settings:&#34;frac&#34; 1; 
  font-feature-settings:&#34;frac&#34; 1;
}

&lt;/pre&gt;

&lt;p&gt;Você pode ver o código acima funcionando através do seguinte codepen: &lt;a href=&#34;http://codepen.io/Fabiano/pen/zFdka&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://codepen.io/Fabiano/pen/zFdka&#34;&gt;http://codepen.io/Fabiano/pen/zFdka&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aqui está uma lista completa dos recursos existentes e como usá-los.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;“c2sc”: caixa alta em small caps&lt;/li&gt;
&lt;li&gt;“calt”: tipos alternativos por contexto&lt;/li&gt;
&lt;li&gt;“clig”: ligaduras contextuais&lt;/li&gt;
&lt;li&gt;“dlig”: ligaduras discricionárias&lt;/li&gt;
&lt;li&gt;“hist”: tipos alternativos históricos&lt;/li&gt;
&lt;li&gt;“hlig”: ligaduras históricas&lt;/li&gt;
&lt;li&gt;“kern”: habilita o uso da tabela interna de kerning&lt;/li&gt;
&lt;li&gt;“liga”: ligaduras comuns&lt;/li&gt;
&lt;li&gt;“nalt”: formas anotadas alternativas&lt;/li&gt;
&lt;li&gt;“salt”: alternativas de estilo&lt;/li&gt;
&lt;li&gt;“smcp”: small caps&lt;/li&gt;
&lt;li&gt;“ss01”: conjunto de estilo alternativo 1&lt;/li&gt;
&lt;li&gt;“ss02”: conjunto de estilo alternativo 2&lt;/li&gt;
&lt;li&gt;“ss03”: conjunto de estilo alternativo 3&lt;/li&gt;
&lt;li&gt;“ss04”: conjunto de estilo alternativo 4&lt;/li&gt;
&lt;li&gt;“ss05”: conjunto de estilo alternativo 5&lt;/li&gt;
&lt;li&gt;“swsh”: ornamentos&lt;/li&gt;
&lt;li&gt;“zero”: zero cruzado&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Números&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;“lnum”: alinhados ou “onum”: “oldstyle”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Espaçamento de números:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“pnum”: proporcional ou “tnum”: tabular (monoespaçados, úteis para tabulações)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Frações:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“frac”: normais ou “afrc”: alternativas&lt;/p&gt;

&lt;h2 id=&#34;uma-abordagem-razoável&#34;&gt;Uma Abordagem razoável&lt;/h2&gt;

&lt;p&gt;Uma das vantagens dos recursos OpenType é que eles mostram o texto normal caso não haja o suporte ao recurso, por isso não há problemas em adicioná-los ao seu projeto, que terá um nível de acabamento mais refinado.&lt;/p&gt;

&lt;p&gt;Com a grande ênfase em legibilidade, aumento na densidade de pixels e qualidade de telas, cada vez mais usuários lêem conteúdos mais longos on-line. Isso significa que os benefícios de legibilidade obtidos com uma melhor tipografia podem ser traduzidos em maior legibilidade e usabilidade percebida pelos seus usuários.&lt;/p&gt;

&lt;h2 id=&#34;saiba-mais&#34;&gt;Saiba mais:&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Fonts.com&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O serviço Monotype permite pesquisar fontes por nível de recursos OpenType suportados: &lt;a href=&#34;http://www.fonts.com/support/faq/opentype-features-tab&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.fonts.com/support/faq/opentype-features-tab&#34;&gt;http://www.fonts.com/support/faq/opentype-features-tab&lt;/a&gt;&lt;/a&gt;. Também possui um sistema para gerar o código CSS para seu site.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Typography.com&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A H&amp;amp;FJ também suporta recursos OpenType em suas fontes, com os mais extensos e detalhados controles sobre os recursos a serem usados, oferecendo mais controle sobre o tamanho do download. Veja a ótima documentação de uso em: &lt;a href=&#34;http://www.typography.com/cloud/user-guide/font-features&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.typography.com/cloud/user-guide/font-features&#34;&gt;http://www.typography.com/cloud/user-guide/font-features&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A ferramenta de Rich Rutter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O cofundador da Fontdeck criou uma ferramenta para lidar com recursos OpenType, permitindo habilitar e desabilitar as diferentes funções. Você pode testar fontes variadas e analisar o CSS resultante: &lt;a href=&#34;http://clagnut.com/sandbox/css3/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://clagnut.com/sandbox/css3/&#34;&gt;http://clagnut.com/sandbox/css3/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;referências&#34;&gt;Referências&lt;/h2&gt;

&lt;p&gt;Há um PDF muito bom direto do site da Adobe que aborda como o OpenType funciona e alguns detalhes bem interessantes:&lt;/p&gt;

&lt;p&gt;DESCONHECIDO. Can I Use. Support tables for HTML5, CSS3, etc. &lt;strong&gt;Can I Use&lt;/strong&gt;, 2014. Disponivel em: &lt;a href=&#34;http://caniuse.com/#search=woff&#34;&gt;http://caniuse.com/#search=woff&lt;/a&gt;. Acesso em: 9 Junho 2014.&lt;/p&gt;

&lt;p&gt;DESCONHECIDO. Qual é a diferença entre fontes TrueType, PostScript e OpenType? &lt;strong&gt;Windows&lt;/strong&gt;. Disponivel em: &lt;a href=&#34;http://windows.microsoft.com/pt-br/windows/difference-truetype-postscript-opentype-fonts#1TC=windows-7&#34;&gt;http://windows.microsoft.com/pt-br/windows/difference-truetype-postscript-opentype-fonts#1TC=windows-7&lt;/a&gt;. Acesso em: 9 Junho 2014.&lt;/p&gt;

&lt;p&gt;MOTA, H. O que são fontes TrueType, OpenType e PostScript? &lt;strong&gt;Design Culture&lt;/strong&gt;, 13. Disponivel em: &lt;a href=&#34;http://www.designculture.com.br/o-que-sao-fontes-truetype-opentype-e-postscript/&#34;&gt;http://www.designculture.com.br/o-que-sao-fontes-truetype-opentype-e-postscript/&lt;/a&gt;. Acesso em: 16 Junho 2014.&lt;/p&gt;

&lt;p&gt;PAMENTAL, J. Domine o OpenType. &lt;strong&gt;Revista W&lt;/strong&gt;, São Paulo, n. 167, p. 62-66, Junho 2014.&lt;/p&gt;

&lt;p&gt;SANGIOVANNI, C. Rapidinha:O que é Kerning. &lt;strong&gt;Choco La Design&lt;/strong&gt;, 2011. Disponivel em: &lt;a href=&#34;http://chocoladesign.com/rapidinha-o-que-e-kerning&#34;&gt;http://chocoladesign.com/rapidinha-o-que-e-kerning&lt;/a&gt;. Acesso em: 9 Junho 2014.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>