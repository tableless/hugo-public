<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vagner Santana on Tableless</title>
    <link>https://tableless.github.io/hugo-public/author/vagner-santana/index.xml</link>
    <description>Recent content in Vagner Santana on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/author/vagner-santana/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Frame Player: Indo além da tag video em dispositivos móveis</title>
      <link>https://tableless.github.io/hugo-public/frame-player-indo-alem-da-tag-video-em-dispositivos-moveis/</link>
      <pubDate>Wed, 27 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/frame-player-indo-alem-da-tag-video-em-dispositivos-moveis/</guid>
      <description>

&lt;p&gt;Desde que o Flash se tornou obsoleto em dispositivos móveis (ou em outras palavras: quando a Apple o baniu do iOS) a forma de manipular arquivos de media ficou cada vez mais tendenciosa para uso das tags &lt;code&gt;audio&lt;/code&gt; e &lt;code&gt;video&lt;/code&gt;, consolidando o padrão Web. De toda forma o Flash ainda sobrevive bem neste ramo (prova disso é o YouTube que mantém seu player), mas este não será o foco deste artigo. O ponto mais importante que iremos tratar aqui é a reprodução de vídeos usando HTML5 em smartphones e tablets.&lt;/p&gt;

&lt;p&gt;Será que nos dias de hoje todos os problemas envolvendo arquivos de media em dispositivos móveis foram resolvidos, ou novos problemas foram criados?&lt;/p&gt;

&lt;p&gt;Sistemas operacionais móveis tendem a implementar especificidades, seja por limitações dos dispositivos ou algo envolvendo a usabilidade do sistema, o fato é que algumas vezes essas implementações não obedecem especificações, criando barreiras e limitando assim o desenvolvimento de aplicações web.&lt;/p&gt;

&lt;h3 id=&#34;os-problemas-com-a-tag-video-criados-pelos-sistemas-operacionais-móveis&#34;&gt;Os Problemas com a Tag Video Criados pelos Sistemas Operacionais Móveis&lt;/h3&gt;

&lt;p&gt;Quando inserimos um vídeo em uma página web utilizando a tag &lt;code&gt;video&lt;/code&gt; esperamos que o navegador fique responsável por carregar seu player nativo (exibindo seus controles caso seja utilizado o atributo &lt;code&gt;controls&lt;/code&gt;), até então nenhum problema visto que praticamente &lt;a href=&#34;http://caniuse.com/#search=video&#34; target=&#34;_blank&#34;&gt;todos os navegadores modernos&lt;/a&gt; (inclusive de dispositivos móveis) oferecem suporte, claro que cada um serão necessários os vários formatos de vídeo (codec) para poder reproduzir em diferentes navegadores, mas o grande problema não esta ai, e sim no comportamento que este player nativo toma quando carregado em dispositivos móveis.&lt;/p&gt;

&lt;p&gt;A especificação da tag &lt;code&gt;video&lt;/code&gt; define diversos &lt;a href=&#34;http://www.w3.org/TR/html-markup/video.html#video-attributes&#34; target=&#34;_blank&#34;&gt;atributos&lt;/a&gt;, vamos nos atentar para alguns em específico: &lt;code&gt;autoplay&lt;/code&gt;, &lt;code&gt;preload&lt;/code&gt; e &lt;code&gt;loop&lt;/code&gt;. Iremos analisar cada um deles e seu comportamento nos próximos parágrafos.&lt;/p&gt;

&lt;p&gt;O atributo &lt;code&gt;autoplay&lt;/code&gt; tem a função de iniciar a reprodução um vídeo automaticamente sem a necessidade de interação do usuário, analisando o &lt;a href=&#34;https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html&#34; target=&#34;_blank&#34;&gt;guia da Apple para o Safari&lt;/a&gt; na seção de Audio e Vídeo em HTML5 temos um tópico sobre este assunto, no qual relata que os métodos &lt;code&gt;play()&lt;/code&gt; e &lt;code&gt;load()&lt;/code&gt; são desabilitados em dispositivos iOS, exceto quando ocorre uma ação do usuário, ou seja, o atributo &lt;code&gt;autoplay&lt;/code&gt; não funciona, assim como o seguinte código também não irá funcionar:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;#060;body onload=&#34;document.myMovie.play()&#34;&amp;#062;
&lt;/pre&gt;

&lt;p&gt;O atributo &lt;code&gt;preload&lt;/code&gt;, responsável por carregar parte do arquivo de media junto da página e antes de sua reprodução, tem comportamento semelhante ao &lt;code&gt;autoplay&lt;/code&gt;. Neste caso pode ser levado em consideração esta ação, pois dispositivos móveis se conectam por redes de celulares, que muitas vezes cobram por dados trafegados.&lt;/p&gt;

&lt;p&gt;É possível utilizar o atributo &lt;code&gt;loop&lt;/code&gt; em dispositivos móveis, porém para garantir suporte a todos os dispositivos, é necessário incluir o hack abaixo, pois algumas versões (ex: iOS abaixo da versão 5) não suportam este atributo.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var video = document.getElementById(&#39;your-video-elem&#39;);

    function loopVideo(){
        video.currentTime = 0.1;
        video.play();
    }

    video.addEventListener(&#39;ended&#39;, loopVideo, false);
&lt;/pre&gt;

&lt;p&gt;Uma outra grande limitação é o controle de volume, ao tentar recuperar o valor atual do volume por JavaScript sempre será retornado 1, e este valor não pode ser alterado por código, tornando possível alterar o volume ou colocar no mudo apenas com interação do usuário pelos botões físicos. Assim como o volume também não é possível definir valores para a propriedade &lt;code&gt;playbackRate&lt;/code&gt;, tornando impossível implementar slow motion ou fast foward.&lt;/p&gt;

&lt;p&gt;Dispositivos móveis ao encontrarem um arquivo de vídeo em páginas web, renderizam esse quadro definindo uma imagem de placeholder por cima da imagem carregada pelo atributo &lt;code&gt;cover&lt;/code&gt; (quando definida), esta ação torna inviável o uso de vídeos como background por exemplo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://f.cl.ly/items/1L3Y1p1r1Y3B1E0l0W11/ios-video-placeholder.png&#34; width=&#34;338&#34; height=&#34;600&#34; alt=&#34;iOS video placeholder image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;iOS video placeholder image (a big play icon on center).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;O elemento &lt;code&gt;canvas&lt;/code&gt; possui um método &lt;code&gt;drawImage&lt;/code&gt; em sua API, no qual permite inserir imagens, vídeos e até mesmo outro elemento canvas, porém este método &lt;a href=&#34;https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/PuttingVideoonCanvas/PuttingVideoonCanvas.html&#34; target=&#34;_blank&#34;&gt;não é suportado em dispositivos iOS&lt;/a&gt;, a Apple afirma que este método utiliza muitos recursos do sistema, no Safari Desktop o método funciona perfeitamente.&lt;/p&gt;

&lt;p&gt;Por fim chegamos em dois fatores que considero mais limitantes, por serem impossíveis de serem solucionados. O primeiro fator é: vídeos em smartphones não podem ser carregados inline, somente em tela cheia. Já o outro fator é: não podemos reproduzir dois ou mais arquivos de aúdio ou vídeo simultaneamente, apenas um arquivo é permitido por vez, simplesmente por opção das empresas que desenvolvem os sistemas móveis.&lt;/p&gt;

&lt;h3 id=&#34;uma-alternativa-para-vídeos-e-gifs&#34;&gt;Uma Alternativa para Vídeos e Gifs&lt;/h3&gt;

&lt;p&gt;Considerando os problemas relatados anteriormente, quando surge a necessidade de desenvolver uma aplicação web baseada em videos para smartphones, isto é, uma aplicação que tem como base arquivos de vídeo com elevado nível de personalização e interação com o usuário, é perfeitamente possível de ser desenvolvida para navegadores desktop, porém inumeros problemas serão apresentados em dispositivos móveis. Um bom case para exemplificar este tipo de aplicação é o &lt;a href=&#34;https://vimeo.com/79706014&#34; target=&#34;_blank&#34;&gt;site que a Apple desenvolveu em 2012 para promover seus novos produtos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Criar animações de imagens similares a um vídeo é uma tarefa que o GIF já faz, porém este tipo possui &lt;a target=&#34;_blank&#34; href=&#34;http://stories4all9858180.wordpress.com/2012/12/05/advantages-and-limitations-of-gifs/&#34;&gt;diversas limitações&lt;/a&gt;, tendo como principal a profundidade de cor máxima: 256 bit, o que torna a qualidade da imagem baixa, inviabilizando seu uso em dispositivos com alta resolução de tela.&lt;/p&gt;

&lt;p&gt;Pensando nestes fatos surgiu a necessidade de criar uma alternativa que pudesse solucionar os problemas do vídeo e do GIF em dispositivos móveis, algo que pudesse reproduzir imagens em sequência (com uma certa qualidade) e que pudesse ser personalizado com a necessidade da aplicação, deixando isso a cargo do desenvolvedor. Esta necessidade é tão real que a Apple, em seu site citado acima, &lt;a href=&#34;http://www.tuaw.com/2012/10/16/how-apples-iphone-5-website-works/&#34; target=&#34;_blank&#34;&gt;criou uma alternativa própria&lt;/a&gt; para desenvolver estas animações sem utilizar vídeo e garantir suporte em todos os tipos de dispositivos, esta solução é bem próxima do que será discutido a seguir, existe uma &lt;a target=&#34;_blank&#34; href=&#34;https://docs.google.com/document/pub?id=1GWTMLjqQsQS45FWwqNG9ztQTdGF48hQYpjQHR_d1WsI&#34;&gt;análise minuciosa&lt;/a&gt; sobre esta técnica utilizada pela Apple.&lt;/p&gt;

&lt;h3 id=&#34;criando-um-player-de-frames&#34;&gt;Criando um Player de Frames&lt;/h3&gt;

&lt;p&gt;A necessidade comentada no parágrafo anterior teve seus requisitos bem definidos: reproduzir animações baseadas em imagens em uma certa taxa de velocidade, que tenha bom desempenho em dispositivos móveis, que seja personalizável e possa ter mais de uma instância executando em uma mesma página. Surgiu ai então o &lt;a href=&#34;http://vagnervjs.github.io/frame-player/&#34; target=&#34;_blank&#34;&gt;Frame Player&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;o-que-é-o-frame-player&#34;&gt;O que é o Frame Player?&lt;/h4&gt;

&lt;p&gt;O Frame Player é uma biblioteca JavaScript desenvolvida por &lt;a href=&#34;https://twitter.com/vagnervjs&#34; target=&#34;_blank&#34;&gt;Vagner Santana&lt;/a&gt; (eu) para reproduzir videos utilizando imagens no lugar de tipos comuns deste formato de media (i.e.: .mp4, .avi). A biblioteca se encarrega de mostrar uma sequência de imagens em uma determinada taxa de velocidade (fps), desta forma não é necessário utilizar a tag video.&lt;/p&gt;

&lt;h4 id=&#34;transformando-vídeo-em-imagens&#34;&gt;Transformando Vídeo em Imagens&lt;/h4&gt;

&lt;p&gt;Para que um vídeo seja reproduzido no Frame Player, é necessário extrair cada frame deste arquivo genrando uma sequência de imagens.&lt;/p&gt;

&lt;p&gt;Para gerar essa sequência de imagens a documentação do Frame Player instrui o uso do software &lt;a href=&#34;http://www.ffmpeg.org/&#34; target=&#34;_blank&#34;&gt;FFmpeg&lt;/a&gt; para conversão, utilizando o seguinte comando:&lt;/p&gt;

&lt;pre class=&#34;lang-terminal&#34;&gt;$ ffmpeg -i video.mp4 -an -f image2 &#34;%d.jpg&#34;
&lt;/pre&gt;

&lt;p&gt;Onde &lt;code&gt;video.mp4&lt;/code&gt; é o arquivo original em formato de vídeo, e &lt;code&gt;%d.jpg&lt;/code&gt; o destino final dos arquivos de imagens que serão gerados com nome em ordem numérica.&lt;/p&gt;

&lt;p&gt;Após a extração dos frames, cada imagens deverá ser codificada em &lt;code&gt;base64&lt;/code&gt; utilizando &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/data_URIs&#34; target=&#34;_blank&#34;&gt;Data URI Scheme&lt;/a&gt; e armazenadas todas em um único arquivo &lt;code&gt;JSON&lt;/code&gt;. Para isso junto do Frame Player foi desenvolvido um &lt;code&gt;script&lt;/code&gt; (disponível em PHP e Node.js) que codifica e cria um arquivo de saída &lt;code&gt;JSON&lt;/code&gt;. O script é executado em linha de comando da seguinte forma:&lt;/p&gt;

&lt;pre class=&#34;lang-terminal&#34;&gt;# Option 1: Node.js
    $ cd converter
    $ node app.js frameStart frameEnd folder/to/imgs/ json/video.json

    # Option 2: PHP
    $ php to_data_uri.php frameStart frameEnd folder/to/imgs/ json/video.json
&lt;/pre&gt;

&lt;p&gt;Os parâmetros &lt;code&gt;frameStart&lt;/code&gt; e &lt;code&gt;frameEnd&lt;/code&gt; deverá ser um valor numérico representando o frame inicial do vídeo e o frame final respectivamente. O caminho &lt;code&gt;folder/to/imgs/&lt;/code&gt; será a endereço para a pasta contendo a sequência de imagens geradas e &lt;code&gt;json/video.json&lt;/code&gt; deve ser o caminho para o arquivo &lt;code&gt;JSON&lt;/code&gt; de saída.&lt;/p&gt;

&lt;p&gt;Passada por essas duas etapas teremos transformado nosso vídeo em um arquivo &lt;code&gt;JSON&lt;/code&gt; que será processado pela biblioteca.&lt;/p&gt;

&lt;h4 id=&#34;por-dentro-do-frame-player&#34;&gt;Por Dentro do Frame Player&lt;/h4&gt;

&lt;p&gt;O código do Frame Player é todo escrito em JavaScript puro utilizando o paradigma de orientação a objetos baseado em protótipo, sem uso de nenhuma depêndencia. Desenvolver esta biblioteca usando orientação a objetos foi uma decisão primordial para viabilzar a capacidade de possuir multiplas instâncias do player em uma mesma página.&lt;/p&gt;

&lt;p&gt;Para utilizar a biblioteca em uma página, é necessário carregar dois arquivos referêntes ao código JavaScript e a folha de estilo do player:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;#060;link rel=&#34;stylesheet&#34; href=&#34;src/css/frameplayer.css&#34;&amp;#062;
    &amp;#060;script src=&#34;src/js/frameplayer.js&#34;&amp;#062;
&lt;/pre&gt;

&lt;p&gt;A primeira versão da biblioteca não contava com o arquivo CSS adicional, porém a possibilidade de carregar a folha de estilo em um arquivo separado permite ao utilizador ir além e personalizar qualquer elemento do player e ainda desacoplar o código CSS do JavaScript.&lt;/p&gt;

&lt;p&gt;Com os arquivos carregados, é necessário definir em seu código HTML o elemento que irá representar o player:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;#060;div id=&#34;my-player&#34; class=&#34;frameplayer&#34; data-vidsrc=&#34;videos/video.json&#34;&amp;#062;
&lt;/pre&gt;

&lt;p&gt;A classe &lt;code&gt;frameplayer&lt;/code&gt; é responsável por definir o estilo ao player, o &lt;code&gt;id&lt;/code&gt; pode ser qualquer nome definido pelo utilizador e o atributo &lt;code&gt;data-vidsrc&lt;/code&gt; deverá receber como valor o camaminho para o arquivo JSON gerado previamente.&lt;/p&gt;

&lt;p&gt;O player possui uma barra de controle do vídeo onde é inserido os botões de ação como play e pause. Essa barra é opcional ao utilizador, podendo ser desabilitada facilmente pelo parâmetro de opções. A contrução da barra de controle é feita por um método especifico da biblioteca (&lt;code&gt;FramePlayer.prototype.createControlsBar&lt;/code&gt;), em caso de desabilitado pelo utilizador a barra não é construida, evitando assim criar código de marcação que não será utilizado.&lt;/p&gt;

&lt;p&gt;A biblioteca possui dois parâmetros, o primeiro é o &lt;code&gt;id&lt;/code&gt; do elemento &lt;code&gt;div&lt;/code&gt; definido na marcação que será responsável por armazenar o player. Já o segundo parâmetro é referente as opções do player, esse parâmetro é um objeto JavaScript que possui a seguinte estrutura:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var options = ({
        &#39;rate&#39;: 30,
        &#39;controls&#39;: false,
        &#39;autoplay&#39;: true,
        &#39;width&#39;: &#39;640px&#39;,
        &#39;height&#39;: &#39;390px&#39;,
        &#39;radius&#39;: &#39;50%&#39;
    });
&lt;/pre&gt;

&lt;p&gt;Abaixo constam as informaçõe de cada atributo do parâmetro de opções:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rate&lt;/code&gt;: valor da taxa de velocidade de reprodução. O valor padrão é 20.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;controls&lt;/code&gt;: habilita ou desabilita a barra de controles. O valor padrão é true.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autoplay&lt;/code&gt;: permite a execução automática do vídeo após ser carregada a página. Seu valor padrão é false.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;width&lt;/code&gt;: valor referente a largura do player em pixel. O valor padrão é 480px.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;height&lt;/code&gt;: valor referente a altura do player em pixel. O valor padrão é 320px.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;radius&lt;/code&gt;: valor referente a borda arredondada do player. O valor padrão é null, portanto, sem bordas arredondadas por padrão.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Após ser definida as opções, o utilizador deverá instanciar o Frame Player da seguinte forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var player = new FramePlayer(&#39;my-player&#39;, options);
        player.play();
&lt;/pre&gt;

&lt;p&gt;Deve-se chamar o método construtor do Frame Player passando como parâmetro o &lt;code&gt;id&lt;/code&gt; do elemento e a variável com as opções. Após isso basta chamar o método play para executá-lo.&lt;/p&gt;

&lt;h4 id=&#34;o-método-play&#34;&gt;O Método Play&lt;/h4&gt;

&lt;p&gt;O método play &lt;code&gt;(FramePlayer.prototype.play)&lt;/code&gt; pode ser considerado o coração do Frame Player, pois ele é o responsável pela troca em sequência das imagens, levando em consideração a taxa de velocidade. A primeira ação deste método é carregar o arquivo JSON, quando é terminado o carregamento, executa-se o trecho código abaixo, que faz com que os frames sejam trocados.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;setInterval(function() {
        if(!player.paused){
            i++;
            if (i &amp;gt;= jsonVideoFile.frames.length) {
                i = 0;
            }
            img.src = jsonVideoFile.frames[i];
        }
    }, Math.round(1000 / player.rate));
&lt;/pre&gt;

&lt;p&gt;Acima podemos observar que a cada intervalo define-se um novo valor para o atributo &lt;code&gt;src&lt;/code&gt; do elemento imagem, este novo valor refere-se a ao próximo frame do vídeo. Dessa forma, conforme muda-se o valor de tempo do intervalo a velocidade da troca de imagens é afetada.&lt;/p&gt;

&lt;h4 id=&#34;base64-vs-image-file&#34;&gt;Base64 vs Image File&lt;/h4&gt;

&lt;p&gt;Uma grande questão surgiu após o lançamento da biblioteca: o uso de imagens codificadas em Base46 ser lento, pois o browser tem o trabalho de decodificar essa string, e por ser tratar de muitas imagens, este trabalho ficaria pesado em dispositivos móveis. Para saber mais sobre este fato tivemos um &lt;a href=&#34;http://www.mobify.com/blog/data-uris-are-slow-on-mobile&#34; target=&#34;_blank&#34;&gt;bom artigo como referência&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Com essa questão levantada, foi desenvolvida uma versão utilizando os arquivos de imagens em vez de Base64 URI, e a melhora do desempenho foi significativa.&lt;/p&gt;

&lt;p&gt;Você pode conferir mais sobre isso nesta &lt;a href=&#34;https://github.com/vagnervjs/frame-player/issues/4&#34; target=&#34;_blank&#34;&gt;issue&lt;/a&gt;. A versão baseada em arquivos de imagens está disponivel em uma &lt;a href=&#34;https://github.com/vagnervjs/frame-player/tree/img-tag&#34; target=&#34;_blank&#34;&gt;branch especifica&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h3&gt;

&lt;p&gt;Em nenhum momento o objetivo do desenvolvimento desta biblioteca foi eliminar o uso da tag &lt;code&gt;video&lt;/code&gt; em dispositivos móveis, muito pelo contrário, quando é necessário carregar arquivos de video com objetivo de apresentação da media apenas, é extremamente recomendável o uso dessa tag específica para isso. O real objetivo da bibliteca é criar uma alternativa para carregar animações em video quando é necessário integração com o restante da página, viabilizando múltiplos carregamento e personalização.&lt;/p&gt;

&lt;p&gt;A biblioteca Frame Player encontra-se em uma versão estável para uso em dispositivos móveis e mostra-se como uma boa solução para videos curtos, o maior ponto positivo é a liberdade que o desenvolvedor ganha para tornar a página dinâmica com o uso de videos nos dispositivos móveis, podendo desviar do player nativo da plataforma, e sem a dependencia do usuário dar o play para reproduzir o vídeo, o player conta ainda com um método específico para inserir filtros (grayscale, sepia, invert) nas imagens do vídeo.&lt;/p&gt;

&lt;p&gt;Existem ainda alguns trabalhos futuros para o Frame Player como buffer, compressão de imagens baseando-se em keyframes e até mesmo aúdio.&lt;/p&gt;

&lt;p&gt;Confira o &lt;a href=&#34;http://vagnervjs.github.io/frame-player&#34; target=&#34;_blank&#34;&gt;site&lt;/a&gt; do Frame Player e seu &lt;a href=&#34;https://github.com/vagnervjs/frame-player&#34; target=&#34;_blank&#34;&gt;repositório no Github&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;referências&#34;&gt;Referências:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; href=&#34;http://www.w3.org/TR/html-markup/video.html#video-attributes&#34;&gt;HTML Video Element specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html&#34;&gt;Safari HTML5 Audio and Video Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; href=&#34;http://blog.millermedeiros.com/unsolved-html5-video-issues-on-ios/&#34;&gt;Unsolved HTML5 video issues on iOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Grunt: você deveria estar usando!</title>
      <link>https://tableless.github.io/hugo-public/grunt-voce-deveria-estar-usando/</link>
      <pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/grunt-voce-deveria-estar-usando/</guid>
      <description>

&lt;p&gt;Todo programador é preguiçoso, e isso é fato, pois sempre estamos procurando ferramentas que automatizem o trabalho para nós. Mas isso necessariamente não é algo ruim, pelo contrário, automatizar tarefas (objetivo do Grunt) implica em ganho de produção e isso é ótimo. O que não podemos deixar acontecer é a não realização de tarefas primordiais para que uma aplicação tenha qualidade.&lt;/p&gt;

&lt;p&gt;Minificação e concatenação de arquivos por exemplo são tarefas básicas e você não deve deixar isso de lado, mas fazer isso usando um plugin no editor (que seja o Sublime Text) ou um site, copiar o código minificado, colar em um novo arquivo renomeado com .min no final e por fim salvar, e toda vez que alterar o código ter que repetir essa operação é um saco.&lt;/p&gt;

&lt;p&gt;E o deploy ? Se você utiliza FTP sabe o quão lento é fazer upload de arquivos, principalmente se forem muitos, e o pior de tudo, ele abre e fecha uma conexão para cada arquivo, é um sofrimento. E se você esquece de enviar um arquivo que alterou ? Melhor nem pensar&amp;#8230;&lt;/p&gt;

&lt;h2 id=&#34;o-que-é-o-grunt&#34;&gt;O que é o Grunt?&lt;/h2&gt;

&lt;p&gt;Foi pensando nessas e várias outras atividades que o Ben Alman, conhecido como &lt;a href=&#34;https://twitter.com//cowboy&#34; target=&#34;_blank&#34;&gt;Cowboy&lt;/a&gt; criou essa ferramenta incrível.&lt;/p&gt;

&lt;p&gt;O Grunt é uma aplicação de linha de comando que tem como objetivo automatizar tarefas, principalmente tarefas em aplicações JavaScript. Essas tarefas são como as descritas acima. E como isso é feito? Escrevendo as tarefas em JavaScript e rodando no Node.JS.&lt;/p&gt;

&lt;p&gt;Link oficial: &lt;a href=&#34;http://gruntjs.com&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://gruntjs.com&#34;&gt;http://gruntjs.com&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ok-quero-usar&#34;&gt;Ok, quero usar!&lt;/h2&gt;

&lt;p&gt;Bom, agora que você já entendeu para o que ele serve, vou mostrar como é simples utilizá-lo.&lt;/p&gt;

&lt;p&gt;Como eu disse, ele roda no Node.JS, então antes de tudo você precisa ter o node e o npm instalados em sua máquina. Se isso estiver ok, você pode continuar.&lt;/p&gt;

&lt;p&gt;Se você já instalou o Grunt alguma vez, certifique-se de remove-lo para não ocorrer problemas futuros.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;sudo npm uninstall -g grunt&lt;/pre&gt;

&lt;p&gt;Agora para instalar:&lt;/p&gt;

&lt;pre class=&#34;lang-shell&#34;&gt;sudo npm install -g grunt-cli&lt;/pre&gt;

&lt;p&gt;Isso deixará disponível o comando &lt;em&gt;grunt&lt;/em&gt; no terminal. Perceba que instalamos o &lt;em&gt;grunt-cli&lt;/em&gt; e não o &lt;em&gt;grunt&lt;/em&gt; em si, a tarefa do grunt-cli é rodar qualquer versão do grunt, isso permite que você tenha diversas versões do grunt disponíveis em diferentes projetos e você poderá rodar (inclusive simultâneamente) em sua máquina sem ter problemas.&lt;/p&gt;

&lt;h2 id=&#34;mas-como-ele-funciona&#34;&gt;Mas como ele funciona ?&lt;/h2&gt;

&lt;p&gt;Para utilizar o Grunt em um projeto, é necessário que exista dois arquivos: o &lt;em&gt;Gruntfile.js&lt;/em&gt; e o &lt;em&gt;package.json&lt;/em&gt;. Eles devem estar na raiz (diretório principal, root) do projeto. Vou falar sobre esses arquivos logo mais.&lt;/p&gt;

&lt;p&gt;Se você estiver trabalhando em um projeto que já utiliza o Grunt (isto é, exista os arquivos Gruntfile.js e package.json), para rodar é simples.&lt;/p&gt;

&lt;pre class=&#34;lang-shell&#34;&gt;// Acesse a pasta do projeto
cd project-folder

// Instale as dependências
sudo npm install

// Rode o Grunt
grunt&lt;/pre&gt;

&lt;p&gt;Simples não?&lt;/p&gt;

&lt;p&gt;Mas ok, vamos fazer isso do zero agora.&lt;/p&gt;

&lt;h2 id=&#34;criando-um-projeto-com-grunt&#34;&gt;Criando um projeto com Grunt&lt;/h2&gt;

&lt;p&gt;Para iniciar um projeto com o Grunt existem algumas opções: você pode optar pelo &lt;em&gt;grunt-init&lt;/em&gt; que gera o scaffolding para alguns modelos de aplicações, como:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jquery: cria um projeto para um plugin jQuery&lt;/li&gt;
&lt;li&gt;commonjs: cria um projeto para um módulo commonjs&lt;/li&gt;
&lt;li&gt;Gruntfile: cria um arquivo Gruntfile.js básico&lt;/li&gt;
&lt;li&gt;gruntplugin: cria um plugin grunt&lt;/li&gt;
&lt;li&gt;node: cria um módulo Node.JS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Você também pode baixar outros templates, além dos oficiais. Para criar um projeto a partir de um dos template como os descritos acima basta usar o comando:&lt;/p&gt;

&lt;pre class=&#34;lang-shell&#34;&gt;grunt-init&lt;/pre&gt;

&lt;p&gt;Ou então iniciar o Grunt sem um template, criando os arquivos &amp;#8220;na unha&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Antes, é nescessário que você saiba para que serve aqueles dois arquivos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gruntfile.js&lt;/strong&gt;: Esse é um arquivo JavaScript que são definidas e configuradas as tarefas a serem executadas pelo Grunt.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;package.json&lt;/strong&gt;: Esse arquivo é usado pelo npm para armazenar as informações da aplicação, dados como nome, autor, repositório e dependências, e é por isso que o grunt precisa dele, para instalar as dependências e os plugins do grunt que seu projeto irá utilizar. Ao rodar o comando npm install, ele procura as dependências descritas nessa arquivo, e instala na pasta do projeto as mesmas com suas respectivas versões.&lt;/p&gt;

&lt;p&gt;Para criar um arquivo &lt;em&gt;package.json&lt;/em&gt; você pode utilizar o comando &lt;em&gt;npm init&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-json&#34;&gt;{
    &#34;name&#34;: &#34;meu-projeto&#34;,
    &#34;version&#34;: &#34;0.0.1&#34;,
    &#34;description&#34;: &#34;Meu íncrivel projeto&#34;,
    &#34;homepage&#34;: &#34;http://vagnersantana.com/meuprojeto&#34;,
    &#34;repository&#34;: {
        &#34;type&#34;: &#34;git&#34;,
        &#34;url&#34;: &#34;http://github.com/vagnervjs/meu-projeto&#34;
    },
    &#34;engines&#34;: {
        &#34;node&#34;: &#34;0.8.x&#34;,
        &#34;npm&#34;: &#34;1.1.x&#34;
    },
    &#34;devDependencies&#34;: {
        &#34;grunt-cli&#34;: &#34;0.1.6&#34;,
        &#34;grunt&#34;: &#34;~0.4.1&#34;,
        &#34;grunt-contrib-jshint&#34;: &#34;~0.1.1&#34;
    }
}&lt;/pre&gt;

&lt;p&gt;Para instalar o Grunt e os plugins dele, você pode usar o comando &lt;em&gt;npm install &amp;#8211;save-dev&lt;/em&gt; que além de instalar localmente, adiciona a dependência e sua versão na sessão &lt;em&gt;devDependences&lt;/em&gt; do arquivo &lt;em&gt;package.json&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;O arquivo &lt;em&gt;Gruntfile.js&lt;/em&gt; é composto da função principal que engloba tudo, das configurações e tarefas da aplicação, do carregamento de grunt plugins e de tarefas personalizadas.&lt;/p&gt;

&lt;p&gt;Exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;module.exports = function(grunt) {
    &#39;use strict&#39;;

    // configuração do projeto
    var gruntConfig = {
        pkg: grunt.file.readJSON(&#39;package.json&#39;),
        min: {
            dist: {
                src: [&#39;src/assets/js/main.js&#39;],
                dest: &#39;src/assets/js/all.min.js&#39;
            }
        },
        cssmin: {
            dist: {
                src: [&#39;src/assets/css/main.css&#39;],
                dest: &#39;src/assets/css/all.min.css&#39;
            }
        },
        jshint: {
            all: [&#39;src/assets/**/*.js&#39;]
        }
    };

    grunt.initConfig(gruntConfig);

    // carregando plugins
    grunt.loadNpmTasks(&#39;grunt-contrib-jshint&#39;);

    // tarefas
    grunt.registerTask(&#39;default&#39;, [&#39;jshint&#39;]);
};&lt;/pre&gt;

&lt;p&gt;Bom, pra quem não entendeu direito as linhas acima, eu explico: dentro da função foram declaradas várias tarefas e suas configurações, por exemplo: &lt;em&gt;min&lt;/em&gt; é responsável por minificar os arquvios da pasta descrita na propriedade &lt;em&gt;src&lt;/em&gt; e enviar para o arquivo de destino em &lt;em&gt;desc&lt;/em&gt;. Depois de definir as tarefas e configurações em &lt;em&gt;initConfig()&lt;/em&gt;, é nescessário carregar os plugins grunt de terceitos, caso esteja utilizando algum.&lt;/p&gt;

&lt;p&gt;Feito isso, basta registrar as tarefas a serem executadas, usando &lt;em&gt;registerTask()&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;plugins-do-grunt&#34;&gt;Plugins do Grunt&lt;/h2&gt;

&lt;p&gt;Talvez a melhor parte do Grunt seja essa: os plugins que estão disponíveis.&lt;/p&gt;

&lt;p&gt;O Grunt vem com algumas tarefas já definidas como &lt;em&gt;min&lt;/em&gt; e &lt;em&gt;concat&lt;/em&gt;, e você as chama definindo suas configurações e adicionando o parâmetro &lt;em&gt;&amp;#8216;default&amp;#8217;&lt;/em&gt; em &lt;em&gt;registerTask()&lt;/em&gt;. Porém, a comunidade já criou e vem criando novas tarefas para o Grunt. Provavelmente tudo o que você precisa já deve existir. Confira essas tarefas em &lt;a href=&#34;http://gruntjs.com/plugins&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://gruntjs.com/plugins&#34;&gt;http://gruntjs.com/plugins&lt;/a&gt;&lt;/a&gt;, lá tem o link para o npm, onde você tem as instruções de como instalar e qual configuração utilizar.&lt;/p&gt;

&lt;h2 id=&#34;e-o-deploy&#34;&gt;E o deploy?&lt;/h2&gt;

&lt;p&gt;É, eu disse lá no início que é possível até fazer deploy com o Grunt, e sim, isso é perfeitamente possível. Agora que você já viu como ele funciona vou falar sobre esse plugin em específico.&lt;/p&gt;

&lt;p&gt;Para deploy estou utilizando o &lt;em&gt;grunt-rsync&lt;/em&gt;. Esse plugin cria uma tarefa de sincronização, tanto local como para um servidor remoto, usando o &lt;em&gt;rsync&lt;/em&gt; que já vem presente em sistemas operacionais &amp;#8220;unix like&amp;#8221;. O rsync é excelente pois mantém o diretório remoto sempre em sincronia com o diretório base, e só envia os arquivos que foram alterados, além de não enviar os arquivos um-a-um como faz o FTP. Outro ponto positivo é que ele utiliza SSH, portanto se você tiver uma chave publica adicionada as chaves autorizadas no servidor, você executa o deploy direto do Grunt e sem digitar senha.&lt;/p&gt;

&lt;p&gt;Veja a configuração da tarefa:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;rsync: {
    dist: {
        src: &#39;./src/&#39;,
        dest: &#39;./dist&#39;,
        recursive: true,
        syncDest: true,
        exclude: [&#39;main.*&#39;]
    },
    deploy: {
        src: &#39;./dist/&#39;,
        dest: &#39;/var/www&#39;,
        host: &#39;root@vagnersantana.com&#39;,
        recursive: true,
        syncDest: true
    }
}&lt;/pre&gt;

&lt;p&gt;Explicando: em dist eu estou fazendo uma sincronização local, preparando a aplicação para deploy, nela eu removo os arquivos que tem nome &amp;#8220;main&amp;#8221; pois estes foram minificados e concatenados em tarefas anteriores. Depois disso, defino a tarefa de deploy, que pega a pasta &amp;#8216;./dist&amp;#8217; que acabou de ser criada ou atualizada, e envio ela para meu servidor. A propriedade &amp;#8220;dest&amp;#8221; agora é é o diretório remoto e a propriedade &amp;#8220;host&amp;#8221; é o usuário e endereço do meu servidor remoto.&lt;/p&gt;

&lt;h2 id=&#34;como-rodar&#34;&gt;Como rodar?&lt;/h2&gt;

&lt;p&gt;Mais simples impossível, depois de tudo configurado, você pode executar todas as tarefas descritas no &lt;em&gt;Gruntfile.js&lt;/em&gt; com o comando:&lt;/p&gt;

&lt;pre class=&#34;lang-shell&#34;&gt;grunt&lt;/pre&gt;

&lt;p&gt;Talvez você precise utilizar &lt;em&gt;sudo&lt;/em&gt; caso alguma tarefa necessite de privilégios.&lt;/p&gt;

&lt;h2 id=&#34;grunt-boilerplate&#34;&gt;Grunt Boilerplate&lt;/h2&gt;

&lt;p&gt;Depois que comecei a utilizar o Grunt, percebi que sempre iria executar tarefas em comum para vários projetos, e isso me fez criar um padrão do Grunt com tudo que preciso em comum, e caso algum projeto necessitar de outras tarefas, é só ir lá e adicionar.&lt;/p&gt;

&lt;p&gt;Nesse boilerplate defini (por enquanto): min, cssmin e rsync. Não adicionei o JSHint pois utilizo direto no Sublime. Dessa forma com esse boilerplate pronto, para iniciar um projeto eu apenas clono o projeto grunt-boilerplate, mudo o nome da pasta, configuro o package.json, altero os caminhos e nomes de arquivos de acordo com o projeto, e pronto, é lindo =D&lt;/p&gt;

&lt;p&gt;Ficou com vontade de utilizar também? É só ir &lt;a title=&#34;Github&#34; href=&#34;https://github.com/vagnervjs/grunt-boilerplate&#34; target=&#34;_blank&#34;&gt;neste repositório&lt;/a&gt; no github, clonar o projeto e alterar para suas necessidades. Basta ter o grunt-cli e o node instalados para tudo funcionar.&lt;/p&gt;

&lt;p&gt;Se quiser realizar um fork, ou reportar um problema fique totalmente à vontade.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Ferramentas como Grunt, Yeoman, Bower estão ai disponíveis e abertas para todos nós, basta sair da sua zona de conformo, perder o medo de sair do tradicional. Essas ferramentas só existem para melhorar e ajudar nosso trabalho, e se usadas de forma correta, você só irá evoluir, tanto em produção como em profissionalismo. Esperto ter ajudado um pouquinho com o Grunt nesse post. Divirtam-se!&lt;/p&gt;

&lt;h2 id=&#34;referências&#34;&gt;Referências&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a title=&#34;Grunt&#34; href=&#34;http://gruntjs.com/getting-started&#34; target=&#34;_blank&#34;&gt;Grunt &amp;#8211; Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title=&#34;Meeting Grunt&#34; href=&#34;http://net.tutsplus.com/tutorials/javascript-ajax/meeting-grunt-the-build-tool-for-javascript/&#34; target=&#34;_blank&#34;&gt;Meet Grunt: The Build Tool for JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title=&#34;Introducing Grunt&#34; href=&#34;http://weblog.bocoup.com/introducing-grunt/&#34; target=&#34;_blank&#34;&gt;Bocoup &amp;#8211; Introducing Grunt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>