<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cezar Augusto on Tableless</title>
    <link>http://tableless.com.br/author/cezar-augusto/index.xml</link>
    <description>Recent content in Cezar Augusto on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/cezar-augusto/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>WP Rest API – O futuro do WordPress</title>
      <link>http://tableless.com.br/rest-json-wp-api-e-o-futuro-do-wordpress/</link>
      <pubDate>Mon, 07 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/rest-json-wp-api-e-o-futuro-do-wordpress/</guid>
      <description>

&lt;h2 id=&#34;tl-dr&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;O WP-API é a nova aposta do WordPress. Atualmente, funciona como um plugin do WordPress, a ser incorporado em duas etapas no Core, que expõe o conteúdo em uma arquitetura REST dispondo-o em formato JSON, pronto para consumo em outras linguagens/sites/aplicações/aplicativos.&lt;/p&gt;

&lt;h2 id=&#34;índice&#34;&gt;Índice&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#conceito&#34;&gt;Conceito&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#prowp&#34;&gt;O que o API significa para o WordPress?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#futuro&#34;&gt;Se esse é o futuro, do que o WP-API é capaz?&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#php&#34;&gt;Romper laços com o PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mobile&#34;&gt;Fazer uma integração mobile de verdade.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#frontend&#34;&gt;Front-End modular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#backend&#34;&gt;Back-End com a sua assinatura&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#javascript&#34;&gt;Mais um incentivo para você entrar na vibe do JavaScript e seguir a nova ordem mundial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#seguranca&#34;&gt;Ao expôr meu conteúdo, o WP-API não oferece nenhum risco à segurança?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#como&#34;&gt;Como funciona o WP-API&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#http&#34;&gt;Um pouco de HTTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rest&#34;&gt;O que significa REST?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#api&#34;&gt;API? é tipo&amp;#8230; APP?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#instalacao&#34;&gt;Instalando o plugin e fazendo sua primeira requisição&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#posts&#34;&gt;Para obter uma lista de Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#post&#34;&gt;Para visualizar um post específico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#paginas&#34;&gt;Para obter uma lista de Páginas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pagina&#34;&gt;Para visualizar uma página especifica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#catags&#34;&gt;Requisitando uma Categoria ou tag de determinado post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cat&#34;&gt;Obtendo uma lista de Categorias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tag&#34;&gt;Lista de Tags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cpt&#34;&gt;Lidando e visualizando conteúdo com Custom Post Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#acf&#34;&gt;Usando o ACF? Você ainda está na zona de conforto!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#final&#34;&gt;Palavras finais&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conceito&#34;&gt;Conceito&lt;/h2&gt;

&lt;p&gt;Considerada a próxima grande aposta do WordPress (plataforma utilizada por ~25% dos sites em todo mundo), com a primeira fase prevista para a versão 4.4 em dezembro deste ano (2015) e integração total na versão 4.5, o WP-API (também conhecido como JSON API ou REST API) expõe as informações de um site feito em WordPress para que sites externos/aplicações/aplicativos consumam seus dados. Na data deste artigo, o WP-API está disponível como &lt;a href=&#34;https://wordpress.org/plugins/rest-api/&#34; target=&#34;_blank&#34;&gt;plugin&lt;/a&gt; e os desenvolvedores estão otimistas sobre a  &lt;a href=&#34;https://make.wordpress.org/core/tag/json-api/&#34; target=&#34;_blank&#34;&gt;integração com o core do WP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O WP-API foi criado para facilitar a interação de sites em WordPress com outros sites/aplicações. O API permite que outros serviços sejam integrados ao WordPress e abre a possiblidade para que os mesmos criem, leiam, atualizem e deletem seu conteúdo (CRUD), sem necessariamente terem uma instalação local do WordPress.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Antes que você questione:&lt;/strong&gt; sem autenticação, apenas a leitura do conteúdo é possível. &lt;a href=&#34;#seguranca&#34;&gt;Mais abaixo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Imagine &lt;a href=&#34;#php&#34;&gt;desenvolver seu blog em WordPress usando Rails? Django? Node? Java???&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Quê cara, tá maluco? Que post é esse?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Essa realidade é possível porque a Web é feita de &lt;a href=&#34;#http&#34;&gt;HTTP&lt;/a&gt;, que tem equivalentes CRUD com seus verbos POST, GET, PUT e DELETE, e o &lt;a href=&#34;#api&#34;&gt;API&lt;/a&gt; é feito usando uma &lt;a href=&#34;#rest&#34;&gt;arquitetura REST&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No momento, desenvolver em WordPress requer algum conhecimento em PHP. Com o API, o PHP se tornará algo estritamente opcional, habilitando o desenvolvedor a utilizar seus conhecimentos em HTML, CSS e JavaScript/Ruby/Python/C#/FORTRAN (ok, forcei), o que for, para desenvolver seus temas, integrações, aplicações mobile e tudo o que a juventude de agora gosta de desenvolver. &lt;em&gt;A saber&lt;/em&gt;: um API é uma porção de códigos que permite que outras aplicações acessem seus dados na web em uma forma mais simples (vide o API do YouTube, Facebook, Instagram e agora o WordPress).&lt;/p&gt;

&lt;p&gt;Sendo um API RESTful, o WP-API permite que aplicações bem interessantes sejam criadas &lt;a href=&#34;#como&#34;&gt;utilizando uma interface JSON&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;prowp&#34;&gt;O que o API significa para o WordPress?&lt;/h2&gt;

&lt;p&gt;VIDA. FUTURO. DOMINAÇÃO DO MERCADO. UM APLICATIVO DA SUA EMPRESA CONSUMINDO DATA DO SITE FEITO EM WORDPRESS.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-large wp-image-52378 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/11/wp.jpg&#34; alt=&#34;wp&#34; width=&#34;280&#34; height=&#34;157&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O API evolui o WordPress como um CMS para uma aplicação completa. Veja: o API cria um padrão para que outras linguagens consigam interagir diretamente com seu conteúdo.&lt;/p&gt;

&lt;h2 id=&#34;futuro&#34;&gt;Se esse é o futuro, do que o WP-API é capaz?&lt;/h2&gt;

&lt;p&gt;Com a pretensão de usar a força da marca para incentivar desenvolvedores de outras linguagens a construir suas aplicações utilizando o WordPress, sejam elas plugins, temas, integrações, aplicações ou aplicativos, o WP-API amplifica o leque do WordPress à um nível inimáginável há alguns anos e talvez faça você perder seu preconceito. A ferramenta chega com as seguintes promessas:&lt;/p&gt;

&lt;h3 id=&#34;php&#34;&gt;Romper laços com o PHP&lt;/h3&gt;

&lt;p&gt;À parte da cultura da boca-torta criada no passado, o PHP ainda é a força-motriz por trás de 80% dos sites do mundo e tem o suporte de gigantes como Facebook, Wikipedia e o próprio WordPress. Entretanto, nos últimos anos houveram avanços significativos em linguagens como Ruby, Python, Go e claro, JavaScript, seja em termos de ferramentas, escalabilidade ou frameworks disponíveis.&lt;/p&gt;

&lt;p&gt;O WP-API dá aos desenvolvedores dessas linguagens acesso imediato à todo o leque de funcionalidades do WordPress. Razão suficiente para captar a atenção dos desenvolvedores e proprietários de sites. Quando pensamos na grandiosidade do ecossistema do WordPress e nas possibilidades que os desenvolvedores tem de gerar receita com ele (sejam temas ou plugins), o potencial de portar sites inteiros feitos em WordPress para outras linguagens/plataformas é algo tentador em termos de experiência e, claro, receita.&lt;/p&gt;

&lt;h3 id=&#34;mobile&#34;&gt;Fazer uma integração mobile de verdade.&lt;/h3&gt;

&lt;p&gt;Com a popularização de frameworks como Foundation e Bootstrap, grande parte dos sites desenvolvidos nos últimos anos chegaram a um padrão aceitável em termos de visualização de conteúdo em dispositivos móveis, mas uma integração de verdade está longe de ser um padrão.&lt;/p&gt;

&lt;p&gt;Estava.&lt;/p&gt;

&lt;p&gt;Usando o WP-API, desenvolvedores mobile poderão lidar com sites em WordPress como lidariam com qualquer serviço de &lt;a href=&#34;https://en.wikipedia.org/wiki/Mobile_Backend_as_a_service&#34; target=&#34;_blank&#34;&gt;Mobile Back End as a Service (MBaaS ou BaaS)&lt;/a&gt;. Este ponto sozinho já é suficiente para habilitar um site em WordPress como uma possibilidade para servir de backend para aplicações mobile nativas e serve de fundação para todos os tipos de integrações no futuro.&lt;/p&gt;

&lt;p&gt;Quando considerada a quantidade de sites rodando WP, que têm uma versão completamente distinta de suas versões mobile, o escopo para integrações futuras é imenso. O ideal de ter um banco de dados e diversas aplicações consumindo suas informações, agora é possível de forma genuína e descomplicada.&lt;/p&gt;

&lt;h3 id=&#34;frontend&#34;&gt;Front-End modular&lt;/h3&gt;

&lt;p&gt;Do ponto de vista do API, o front-end do WordPress é só mais uma aplicação externa consumindo seus dados. Aplicações MVW (model, view, whatever) como AngularJS, EmberJS, MeteorJS, BackboneJS, poderão facilmente fazer suas requisições e montar o workflow dos seus sonhos sem se preocupar com as entrelinhas de desenvolvimento em WP.&lt;/p&gt;

&lt;p&gt;A expectativa é ver uma revolução em plugins e temas para desenvolvedores e donos de site ao redor do mundo (são 25% da web, considere).&lt;/p&gt;

&lt;h3 id=&#34;backend&#34;&gt;Back-End com a sua assinatura&lt;/h3&gt;

&lt;p&gt;A potencial integração do REST API no core abre a possibilidade de reimaginar o admin do WordPress. Imagine que todas as funcionalidades do core estão abertas à você, com nenhum visual para te limitar. Chega de editar cores e imagens para tentar deixar o admin &amp;#8220;do seu jeito&amp;#8221;, ou baixar o &lt;a href=&#34;https://wordpress.org/plugins/user-role-editor/&#34; target=&#34;_blank&#34;&gt;User Role Editor&lt;/a&gt; para proibir seus clientes de destruírem seu trabalho, ou usar uma função para injetar CSS com um &lt;tt&gt;&amp;ldquo;display: none&amp;rdquo;&lt;/tt&gt; em coisas que você não gostaria que estivessem visíveis. Com o API, o controle é todo seu.&lt;/p&gt;

&lt;h3 id=&#34;javascript&#34;&gt;Mais um incentivo para você entrar na vibe do JavaScript e seguir a nova ordem mundial&lt;/h3&gt;

&lt;p&gt;Convenhamos: o JavaScript está criando uma nova ordem mundial. É hype, é futuro, é presente, opiniões divergentes. Em comum: é JavaScript. Frameworks MV** e outros menos conhecidos estão ditando uma tendência, que acredito seguir linear por um bom tempo.&lt;/p&gt;

&lt;p&gt;O WP-API faz do WordPress um companheiro ideal para essas tecnologias. Na visão de desenvolvedor, poder utilizar tecnologias de vanguarda mantendo sua bagagem em WordPress, é o mundo ideal.&lt;/p&gt;

&lt;h2 id=&#34;seguranca&#34;&gt;Ao expôr meu conteúdo, o WP-API não oferece nenhum risco à segurança?&lt;/h2&gt;

&lt;p&gt;Não. Não propriamente por conta do WP-API.&lt;/p&gt;

&lt;p&gt;A informação que o API fornece é, naturalmente, o que um site WordPress dispõe por padrão publicamente. A única diferença entre o front-end de um site e o WP-API é a forma como as informações são apresentadas. Por padrão não é possível, sem autenticação, apagar, atualizar ou criar nada &amp;#8211; apenas ler o conteúdo (requisição GET).&lt;/p&gt;

&lt;p&gt;Claro que novas funcionalidades expõem novos riscos. Porém, por ora, nenhuma vulnerabilidade foi encontrada e manter seu WordPress atualizado é um método simples e confiável de se manter seguro.&lt;/p&gt;

&lt;h2 id=&#34;como&#34;&gt;Como funciona o WP-API&lt;/h2&gt;

&lt;p&gt;O WP-API é acessado por HTTP e retorna requisições em formato JSON. Ambos fáceis de utilizar e com grande suporte pelas linguagens de programação mais populares, através de bibliotecas como Net::HTTP (Ruby), Requests (Phyton) e GoReq (Go), para citar alguns.&lt;/p&gt;

&lt;p&gt;Eu poderia me limitar a dizer que o WP-API é uma REST API, o que ficaria abstrato e não é o objetivo do artigo. O WP-API é empolgante, mas se você não tem nenhuma base sobre o que significa uma arquitetura REST, HTTP e requisições em geral, procurei expôr os conceitos mais básicos abaixo.&lt;/p&gt;

&lt;p&gt;Antes de falar de REST, é necessário entender alguns conceitos de HTTP.&lt;/p&gt;

&lt;h3 id=&#34;http&#34;&gt;Um pouco de HTTP&lt;/h3&gt;

&lt;p&gt;Ele assina pelo nome de Hypertext Transfer Protocol (HTTP) e é um conjunto de regras que determina como informações podem ser enviadas e recebidas e quais mensagens devem ser retornadas em resposta às requisições.&lt;/p&gt;

&lt;p&gt;Por exemplo, quando uma requisição é enviada pelo cliente e recebida com sucesso pelo servidor, a mensagem (conhecida como código de retorno, acompanhado de uma frase explicativa) é um variante de 200 (onde o número mais importante é a casa da centena, onde 2 significa sucesso na requisição). A mais famosa talvez seja a 404 &amp;#8211; Not Found, que retorna um valor inexistente para sua requisição (onde o primeiro número quatro significa &lt;em&gt;erro no cliente&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Outros protocolos bem conhecidos são o POP3 e o SMTP, que são usados para receber e enviar e-mails, respectivamente.&lt;/p&gt;

&lt;p&gt;O HTTP tem duas funções distintas: servidor e cliente. Em geral, o cliente envia a requisição e o servidor responde. É feito basicamente do &lt;em&gt;header&lt;/em&gt; (que contém metadata e informações importantes para o HTTP) e do &lt;em&gt;body&lt;/em&gt; (que contém o conteúdo da mensagem).&lt;/p&gt;

&lt;p&gt;Hypertext Transfer Protocol ou HTTP é a alma da web. É utilizado todas as vezes que você transfere um documento, ou faz uma solicitação AJAX.&lt;/p&gt;

&lt;p&gt;Se quiser mais informações, o TutsPlus tem &lt;a href=&#34;http://code.tutsplus.com/tutorials/a-beginners-guide-to-http-and-rest--net-16340&#34; target=&#34;_blank&#34;&gt;um ótimo tutorial&lt;/a&gt;, que usei como referência, com uma &lt;a href=&#34;http://code.tutsplus.com/pt/tutorials/a-beginners-guide-to-http-and-rest--net-16340?ec_unit=dropdown-language&#34; target=&#34;_blank&#34;&gt;igualmente ótima tradução&lt;/a&gt; feita pelo &lt;a href=&#34;http://tutsplus.com/authors/thierry-rene&#34; target=&#34;_blank&#34;&gt;Thierry Rene&lt;/a&gt;. Vale cada palavra.&lt;/p&gt;

&lt;p&gt;Concordo com o autor do link de referência sobre o conhecimento de HTTP não ser comum entre desenvolvedores, o que também considero importante e recomendo a leitura.&lt;/p&gt;

&lt;h3 id=&#34;rest&#34;&gt;O que significa REST?&lt;/h3&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-medium wp-image-52376&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/11/rest.jpg&#34; alt=&#34;rest&#34; width=&#34;279&#34; height=&#34;157&#34; /&gt;&lt;/p&gt;

&lt;p&gt;REST é definido por &lt;em&gt;Representational State Transfer&lt;/em&gt;! Entendi tudo, deixa eu dormir agora, obrigado.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Arquitetura: De acordo com uma citação do &lt;cite&gt;&lt;a href=&#34;https://pt.wikipedia.org/wiki/Arquitetura&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;&lt;/cite&gt;: a arquitetura lidaria com qualquer problema de agenciamento, organização, estética e ordenamento de componentes em qualquer situação de arranjo espacial.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Uma arquitetura REST é uma uma forma de organizar as interações entre sistemas. Ele define padrões, o que pode e o que não se deve fazer. A arquitetura fornece uma forma padronizada de como acessar dados. Em geral, sistemas seguem um padrão de comandos. Execute informação X, receba informação Y. Em uma arquitetura REST, o acesso é fornecido por recursos. O que significa que, em uma URL, tudo o que é passado são recursos que podem ser consumidos, não existem comandos inseridos e procura-se utilizar uma URL &lt;em&gt;humanamente legível&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;exemplo-de-comando-em-uma-url&#34;&gt;Exemplo de comando em uma URL.&lt;/h4&gt;

&lt;p&gt;Supondo que eu, ao acessar o site de minha empresa, gostaria de procurar por um vendedor admitido em 2015:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://siteincrivel.com.br/equipe.php?funcao=vendedor&amp;admissao=2015&lt;/pre&gt;

&lt;p&gt;Repare na instrução ao servidor: busque por vendedores admitidos em 2015. Enquanto a instrução pode ser facilmente interpretada, &lt;em&gt;equipe&lt;/em&gt; não é um recurso.&lt;/p&gt;

&lt;p&gt;Se a requisição fosse feita em uma arquitetura REST, minha URL seria:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://siteincrivel.com.br/equipe/admissao/2015/funcao/vendedor/&lt;/pre&gt;

&lt;p&gt;A URL, sem parâmetros, identifica o recurso que você deseja manipular de forma que eu obtenha informações precisas em todas as camadas. Fazer a requisição em um diretório retorna uma lista de recursos. Por exemplo, retirar &amp;#8220;vendedor&amp;#8221; da URL poderia me fornecer informações sobre todas as funções contratadas no ano de 2015.&lt;/p&gt;

&lt;p&gt;Veja: a arquitetura não abomina o uso de parâmetros na URL, que podem ser utilizados como uma espécie de filtro ou outra forma conveniente.&lt;/p&gt;

&lt;p&gt;Por fim, os sistemas que seguem os princípios REST são chamados de RESTFul.&lt;/p&gt;

&lt;h3 id=&#34;api&#34;&gt;API? é tipo&amp;#8230; APP?&lt;/h3&gt;

&lt;p&gt;Não, não.&lt;/p&gt;

&lt;p&gt;Um API (application programming interface) é uma forma simples de se comunicar com uma aplicação. Através de &lt;u&gt;endpoints*&lt;/u&gt; definidos, os desenvolvedores podem fazer seus programas e scripts interagirem com a aplicação.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Endpoints são definidos por suas funções, que podem ser acessados por HTTP. É a forma que o WP-API (que agora que você pegou a manha eu posso dizer: é um REST API) provê suas informações e permite seus desenvolvedores manipularem o WordPress, podendo ser a publicação de um post, atualização de uma página ou a exclusão de um comentário.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Certo, Cezar. Tudo isso parece mágico, linda teoria. Agora, como posso começar com o WP-API?&lt;/p&gt;

&lt;h2 id=&#34;instalacao&#34;&gt;Instalando o plugin e fazendo sua primeira requisição&lt;/h2&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-52375&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/11/plugin_v2b.jpeg&#34; alt=&#34;plugin_v2b&#34; width=&#34;766&#34; height=&#34;343&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Os exemplos utilizados requerem a versão 2 do API. Para baixá-lo, vá ao repositório do WordPess: &lt;a href=&#34;https://wordpress.org/plugins/rest-api/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://wordpress.org/plugins/rest-api/&#34;&gt;https://wordpress.org/plugins/rest-api/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depois de baixado, basta fazer a instalação. A instalação ocorre da mesma forma que qualquer outro plugin do WordPress.&lt;/p&gt;

&lt;h3 id=&#34;visualizando-o-conteúdo-like-a-boss-ou-a-primeira-requisição-a-gente-nunca-esquece&#34;&gt;Visualizando o conteúdo &lt;em&gt;like a boss&lt;/em&gt; ou A primeira requisição a gente nunca esquece&lt;/h3&gt;

&lt;p&gt;Se você usa o Chrome, baixe a extensão do &lt;a href=&#34;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop&#34; target=&#34;_blank&#34;&gt;Postman&lt;/a&gt;. O postman, dentre suas finalidades, vai servir para o propósito de visualizar o conteúdo da maneira correta.&lt;/p&gt;

&lt;h4 id=&#34;para-todas-as-requisições-que-faremos-tome-nota-dessa-instrução&#34;&gt;Para todas as requisições que faremos, tome nota dessa instrução&lt;/h4&gt;

&lt;p&gt;Para visualizar sua primeira requisição, abra o Postman (você pode digitar o endereço no browser diretamente, se você não se importar com um monte de código chapado na tela) e digite na URL (válido para todos os exemplos abaixo):&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://siteincrivel.com.br/wp-json/wp/v2/REQUISIÇÃO_AQUI.&lt;/pre&gt;

&lt;p&gt;Onde &lt;em&gt;siteincrivel&lt;/em&gt; é o seu site e _REQUISIÇÃO&lt;em&gt;AQUI&lt;/em&gt; será a requisição que vocẽ deseja fazer, dentre as possibilidades:&lt;/p&gt;

&lt;h3 id=&#34;posts&#34;&gt;Para obter uma lista de Posts&lt;/h3&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://siteincrivel.com.br/wp-json/wp/v2/posts&lt;/pre&gt;

&lt;h3 id=&#34;post&#34;&gt;Para visualizar um post específico&lt;/h3&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://siteincrivel.com.br/wp-json/wp/v2/{id}&lt;/pre&gt;

&lt;p&gt;Onde {id} é o ID do Post que você precisa.&lt;/p&gt;

&lt;h3 id=&#34;paginas&#34;&gt;Para obter uma lista de Páginas&lt;/h3&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://siteincrivel.com.br/wp-json/wp/v2/pages&lt;/pre&gt;

&lt;h3 id=&#34;pagina&#34;&gt;Para visualizar uma página especifica:&lt;/h3&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://siteincrivel.com.br/wp-json/wp/v2/pages/{id}&lt;/pre&gt;

&lt;p&gt;Onde {id} é o ID da página que você precisa.&lt;/p&gt;

&lt;h3 id=&#34;para-visualizar-uma-lista-de-categorias-ou-tags&#34;&gt;Para visualizar uma lista de categorias ou tags&lt;/h3&gt;

&lt;p&gt;Categorias e Tags são consideradas taxonomias. As taxonomias, diferente de posts e páginas, funcionam pelo slug e não pelo ID. O ID é necessário apenas para chamadas de Posts/Páginas.&lt;/p&gt;

&lt;p&gt;Os elementos de uma categoria ou tag, são consideradas pelo WordPress como termos (terms). Portanto ao criar a categoria &lt;em&gt;Marketing&lt;/em&gt;, você está dizendo ao WordPress que a taxonomia Categoria tem um termo chamado &lt;em&gt;Marketing&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Sendo assim:&lt;/p&gt;

&lt;h3 id=&#34;catags&#34;&gt;Requisitando uma Categoria ou tag de determinado post:&lt;/h3&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://demo.wp-api.org/wp-json/wp/v2/posts/{id_do_post}/terms/category/&lt;/pre&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://demo.wp-api.org/wp-json/wp/v2/posts/{id_do_post}/terms/tag/&lt;/pre&gt;

&lt;h3 id=&#34;cat&#34;&gt;Obtendo uma lista de Categorias&lt;/h3&gt;

&lt;p&gt;Nossa categoria modelo (Marketing) deverá aparecer aqui&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://siteincrivel.com.br/wp-json/wp/v2/terms/category&lt;/pre&gt;

&lt;h3 id=&#34;tag&#34;&gt;Lista de Tags&lt;/h3&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://seusite.com.br/wp-json/wp/v2/terms/tag&lt;/pre&gt;

&lt;h3 id=&#34;cpt&#34;&gt;Lidando e visualizando conteúdo com Custom Post Types:&lt;/h3&gt;

&lt;p&gt;Por padrão, o WP-API não autoriza a visualização direta de CPT. Para autorizar a requisição, abra o arquivo onde você armazena as informações sobre CPT do seu tema (em geral no &lt;tt&gt;functions.php&lt;/tt&gt;, ou qualquer &lt;tt&gt;include&lt;/tt&gt; que você tenha feito) e adicione o argumento (dentro de &lt;tt&gt;$args&lt;/tt&gt;, por favor):&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;show_in_rest =&amp;gt; true&lt;/pre&gt;

&lt;p&gt;Caso você tenha feito corretamente, o endereço abaixo vai listar os posts relacionados àquele CPT:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;http://siteincrivel.com.br/wp-json/wp/v2/{nome_do_cpt}&lt;/pre&gt;

&lt;h3 id=&#34;acf&#34;&gt;Usando o ACF? Você ainda está na zona de conforto!&lt;/h3&gt;

&lt;p&gt;A integração com o ACF é extensa para o objetivo do post, o que não importa muito, pois &lt;a href=&#34;https://wordpress.org/plugins/acf-to-wp-api/&#34; target=&#34;_blank&#34;&gt;existe um plugin excelente&lt;/a&gt; que cumpre a maioria das finalidades do ACF. Seja feliz.&lt;/p&gt;

&lt;h2 id=&#34;final&#34;&gt;Palavras finais&lt;/h2&gt;

&lt;p&gt;Vejo em muitos grupos e em alguns sites sobre o futuro do WordPress, que o sistema está em declínio e alguns absurdos também. O WP-API é uma grande aposta e suas promessas fazem merecer um olhar atento à nova funcionalidade.&lt;/p&gt;

&lt;p&gt;Se quiser um &lt;em&gt;modelo&lt;/em&gt; para começar, pode tentar o &lt;a href=&#34;https://github.com/Automattic/picard&#34; target=&#34;_blank&#34;&gt;Picard&lt;/a&gt;, feito em ReactJS pela própria Automattic, ou se quiser uma ideia sobre mais possibilidades do API, o Make WordPress Core tem uma &lt;a href=&#34;https://make.wordpress.org/core/2015/07/23/rest-api-whos-using-this-thing/&#34; target=&#34;_blank&#34;&gt;thread&lt;/a&gt; sobre aplicações que desenvolvedores estão trabalhando.&lt;/p&gt;

&lt;p&gt;E você, tem alguma opinião a respeito? Desenvolveu alguma aplicação com o WP-API? Deixe um comentário, eu adoraria saber!&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;Referências:&lt;/cite&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wp-api.org/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://wp-api.org/&#34;&gt;http://wp-api.org/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://feelingrestful.com/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://feelingrestful.com/&#34;&gt;https://feelingrestful.com/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://observer.com/2015/07/wordpress-rest-api/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://observer.com/2015/07/wordpress-rest-api/&#34;&gt;http://observer.com/2015/07/wordpress-rest-api/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jacklenox.com/2015/03/30/building-themes-with-the-wp-rest-api-wordcamp-london-march-2015/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://jacklenox.com/2015/03/30/building-themes-with-the-wp-rest-api-wordcamp-london-march-2015/&#34;&gt;http://jacklenox.com/2015/03/30/building-themes-with-the-wp-rest-api-wordcamp-london-march-2015/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://torquemag.io/client-side-applications-powered-by-the-wordpress-json-rest-api/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://torquemag.io/client-side-applications-powered-by-the-wordpress-json-rest-api/&#34;&gt;http://torquemag.io/client-side-applications-powered-by-the-wordpress-json-rest-api/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://premium.wpmudev.org/blog/wordpress-rest-api/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://premium.wpmudev.org/blog/wordpress-rest-api/&#34;&gt;https://premium.wpmudev.org/blog/wordpress-rest-api/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wpengine.com/blog/josh-pollock-wordpress-rest-api-finely-tuned-consultant/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://wpengine.com/blog/josh-pollock-wordpress-rest-api-finely-tuned-consultant/&#34;&gt;https://wpengine.com/blog/josh-pollock-wordpress-rest-api-finely-tuned-consultant/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://premium.wpmudev.org/blog/using-wordpress-rest-api/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://premium.wpmudev.org/blog/using-wordpress-rest-api/&#34;&gt;http://premium.wpmudev.org/blog/using-wordpress-rest-api/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apppresser.com/wp-api-post-submission/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://apppresser.com/wp-api-post-submission/&#34;&gt;https://apppresser.com/wp-api-post-submission/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.nexcess.net/2015/06/04/what-does-the-new-rest-api-mean-for-wordpress/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://blog.nexcess.net/2015/06/04/what-does-the-new-rest-api-mean-for-wordpress/&#34;&gt;https://blog.nexcess.net/2015/06/04/what-does-the-new-rest-api-mean-for-wordpress/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.wpwhitesecurity.com/wordpress-security/wordpress-rest-api-and-the-security-worries/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.wpwhitesecurity.com/wordpress-security/wordpress-rest-api-and-the-security-worries/&#34;&gt;http://www.wpwhitesecurity.com/wordpress-security/wordpress-rest-api-and-the-security-worries/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sitepoint.com/wp-api/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.sitepoint.com/wp-api/&#34;&gt;http://www.sitepoint.com/wp-api/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://1fix.io/blog/2015/07/20/query-vars-wp-api/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://1fix.io/blog/2015/07/20/query-vars-wp-api/&#34;&gt;https://1fix.io/blog/2015/07/20/query-vars-wp-api/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://code.tutsplus.com/tutorials/a-beginners-guide-to-http-and-rest--net-16340&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://code.tutsplus.com/tutorials/a-beginners-guide-to-http-and-rest&amp;amp;#8211;net-16340&#34;&gt;http://code.tutsplus.com/tutorials/a-beginners-guide-to-http-and-rest&amp;amp;#8211;net-16340&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://make.wordpress.org/core/2015/07/23/rest-api-whos-using-this-thing/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://make.wordpress.org/core/2015/07/23/rest-api-whos-using-this-thing/&#34;&gt;https://make.wordpress.org/core/2015/07/23/rest-api-whos-using-this-thing/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>