<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Harryson Guimarães on Tableless</title>
    <link>http://tableless.com.br/author/harryson-guimar%C3%A3es/index.xml</link>
    <description>Recent content in Harryson Guimarães on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/harryson-guimar%C3%A3es/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Acelere o desenvolvimento front-end com Jade</title>
      <link>http://tableless.com.br/acelere-o-desenvolvimento-front-end-com-jade/</link>
      <pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/acelere-o-desenvolvimento-front-end-com-jade/</guid>
      <description>&lt;p&gt;Certos elementos em nossos sites sempre se repetem, como o menu, o cabeçalho e o rodapé. Replicar o código desses elementos em cada página é uma péssima ideia. Imagine ter um site com mais de 100 páginas HTML e para cada uma, ter que codificar o mesmo menu, o mesmo cabeçalho e o mesmo rodapé. Além de ser algo extremamente trabalhoso, dar manutenção em um código desses é uma tarefa complicada. Imagine que para uma simples alteração de ano, geralmente encontrada no rodapé de muitos sites, seria necessário alterar 100 arquivos. O risco de esquecer algum deles e deixar suas páginas com um layout inconsistente é alto.&lt;/p&gt;

&lt;p&gt;Com o advento do HTML5, existe uma nova especificação para reutilização de HTML. São os &lt;a href=&#34;http://www.w3.org/TR/html-imports/&#34; target=&#34;_blank&#34;&gt;HTML imports&lt;/a&gt;. Porém, sua &lt;a href=&#34;http://caniuse.com/#search=import&#34; target=&#34;_blank&#34;&gt;adoção pelos navegadores atuais(07/2015) &lt;/a&gt;ainda é mínima. Outra estratégia largamente utilizada é o uso do &lt;em&gt;include&lt;/em&gt; do &lt;em&gt;PHP&lt;/em&gt;, como visto em &lt;a href=&#34;http://tableless.com.br/otimizando-e-organizando-seu-front-end-com-php/&#34; target=&#34;_blank&#34;&gt;outro artigo&lt;/a&gt; aqui mesmo no Tableless. Porém, essa não é uma solução elegante, já que depende de um servidor &lt;em&gt;PHP,&lt;/em&gt; e nem todo site/sistema é criado com base nessa estrutura de &lt;em&gt;backend&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Entra em cena o &lt;em&gt;template engine&lt;/em&gt; &lt;a href=&#34;http://jade-lang.com&#34; target=&#34;_blank&#34;&gt;Jade&lt;/a&gt;. Com recursos para fazer &lt;em&gt;include&lt;/em&gt; de HTML e muitas outras funcionalidades, sua sintaxe é extremamente limpa, baseada em indentação, como o &lt;em&gt;Python&lt;/em&gt;. No exemplo a seguir (retirado e adaptado do site oficial do projeto) compare seu equivalente transformado em HTML:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-13-às-21.12.59.png&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;alignnone&#34; title=&#34;JADE e HTML lado a lado&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-13-às-21.12.59.png&#34; alt=&#34;Jade e o HTML gerado&#34; width=&#34;800&#34; height=&#34;357&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Todo começo de linha é interpretado como uma tag HTML, a menos que comece com o operador &amp;#8220;|&amp;#8221;. Neste caso, será interpretado como innerHTML, assim como o texto após uma tag e um espaço (visto na linha 4 da imagem acima).&lt;/p&gt;

&lt;p&gt;No Jade, os atributos das tags são definidos dentro de parênteses, separados entre si por vírgula:&lt;/p&gt;

&lt;pre class=&#34;lang-haml&#34;&gt;form(name=&#34;form&#34;, novalidate)
  textarea(name=&#34;pergunta&#34;, required, id=&#34;pergunta&#34;)
  label(for=&#34;pergunta&#34;) Digite sua pergunta
&lt;/pre&gt;

&lt;p&gt;Equivalente em HTML:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;form name=&#34;form&#34; novalidate&amp;gt;
  &amp;lt;textarea name=&#34;pergunta&#34; required id=&#34;pergunta&#34;&amp;gt;&amp;lt;/textarea&amp;gt;
  &amp;lt;label for=&#34;pergunta&#34;&amp;gt;Digite sua pergunta&amp;lt;/label&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Ids e classes podem igualmente ser definidos dentro dos parênteses ou através de atalhos, onde &lt;code&gt;#&lt;/code&gt; é um atalho para id e &lt;code&gt;.&lt;/code&gt; é um atalho para classes:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div#container
  input#titulo.validate.bordered(type=&#34;text&#34;)
&lt;/pre&gt;

&lt;p&gt;O código acima irá gerar:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div id=&#34;container&#34;&amp;gt;
  &amp;lt;input id=&#34;titulo&#34; class=&#34;validate bordered&#34; type=&#34;text&#34;&amp;gt;
&amp;lt;div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;O Jade é muito mais que uma sintaxe limpa para seu HTML. Um grande recurso do Jade é o uso da herança de templates e &lt;em&gt;includes&lt;/em&gt;. É possível criar uma página base e então criar páginas que estendam esta página com um conteúdo específico. Assim, conseguimos criar um template com os trechos que se repetem em nosso site, como o cabeçalho, o rodapé, etc. Abaixo, um exemplo de herança de templates do Jade:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-13-às-21.29.23.png&#34; alt=&#34;Templates e includes&#34; width=&#34;343&#34; height=&#34;240&#34; /&gt;&lt;/p&gt;

&lt;p&gt;No arquivo layout.jade acima, é definido o template que será estendido por todas as outras páginas. É possível também visualizar o recurso de includes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;include head&lt;/code&gt; : arquivo head.jade, onde é carregado folhas de estilo, definido o title da página, o viewport, dentre outros;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;include cabecalho&lt;/code&gt;: arquivo cabecalho.jade onde é carregado a logo do site;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;include menu&lt;/code&gt;: arquivo menu.jade onde é inserido o menu do site. Pode também ser colocado junto com o cabecalho, mas aqui mantivemos em um arquivo separado;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;block contentBlock&lt;/code&gt; : esse é o trecho que será sobrescrito por cada página que extender o layout.jade;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;include footer&lt;/code&gt;: arquivo footer.jade com o rodapé do site (simplificado para melhor entendimento):&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-13-às-22.07.49.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-50039 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-13-às-22.07.49.png&#34; alt=&#34;exemplo de footer do arquivo Jade&#34; width=&#34;599&#34; height=&#34;120&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O Jade &amp;#8220;inclui&amp;#8221; o código do arquivo no lugar onde ele invocado (onde foi feito o &lt;em&gt;include&lt;/em&gt;). Criado o layout.jade, basta estender esse layout para cada página do seu site como visto no código abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-13-às-22.16.40.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-50040 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-13-às-22.16.40.png&#34; alt=&#34;contentBlock foi o nome do bloco definido no arquivo layout.jade para ser sobrescrito.&#34; width=&#34;746&#34; height=&#34;172&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O nome &lt;em&gt;contentBlock&lt;/em&gt; foi definido no arquivo layout.jade para ser sobrescrito. Com o recurso de &lt;em&gt;includes&lt;/em&gt; e &lt;em&gt;extends&lt;/em&gt; conseguimos resolver o problema sem ter que replicar código HTML para várias páginas.&lt;/p&gt;

&lt;p&gt;Outra funcionalidade que acelera nosso processo de desenvolvimento é o uso dos &lt;strong&gt;&lt;em&gt;mixins&lt;/em&gt;&lt;/strong&gt;. &lt;em&gt;Mixins&lt;/em&gt; reusam fragmentos de código HTML, possibilitando parametrizar certos pedaços de código. Vamos tomar como exemplo o _&lt;a href=&#34;http://getbootstrap.com/components/#panels-alternatives&#34; target=&#34;_blank&#34;&gt;panel&lt;/a&gt;_ do Bootstrap. Esse é o código usado para criar um &lt;em&gt;panel&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-13-às-23.23.28.png&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;alignnone wp-image-50050 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-13-às-23.23.28.png&#34; alt=&#34;Código para criação de um panel no Bootstrap.&#34; width=&#34;636&#34; height=&#34;393&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Não é tanto &lt;em&gt;markup&lt;/em&gt;, mas que tal usarmos a estrutura de um &lt;em&gt;panel&lt;/em&gt; com apenas uma linha? Com o uso de &lt;em&gt;mixins&lt;/em&gt; isso é possível. Criamos uma estrutura inicial com o &lt;em&gt;markup&lt;/em&gt; de um &lt;em&gt;panel&lt;/em&gt;, parametrizando o que for necessário como o título, o rodapé e o estilo do &lt;em&gt;panel&lt;/em&gt;. Após criada essa estrutura (&lt;em&gt;mixin&lt;/em&gt;) para inserir um &lt;em&gt;panel&lt;/em&gt;, basta chamá-lo com o comando &lt;em&gt;+panel()&lt;/em&gt;, passando os parâmetros desejados.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-15-às-21.59.46.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-50150 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-15-às-21.59.46.png&#34; alt=&#34;Mixin e seu uso&#34; width=&#34;612&#34; height=&#34;441&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O seguinte código gerou os &lt;em&gt;panels&lt;/em&gt; abaixo. Perceba, que na estrutura criada, se não informarmos um título, o &lt;em&gt;panel&lt;/em&gt; ficará sem o seu título. O mesmo para o rodapé. Se não informarmos a classe para estilizar o &lt;em&gt;panel&lt;/em&gt;, nosso &lt;em&gt;mixin&lt;/em&gt; aplica a classe &lt;em&gt;panel-default&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-15-às-21.58.49.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-50151 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/Captura-de-Tela-2015-07-15-às-21.58.49.png&#34; alt=&#34;Panels com uso de mixins&#34; width=&#34;579&#34; height=&#34;488&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note que no conteúdo do &lt;em&gt;mixin&lt;/em&gt;, temos um &lt;em&gt;block&lt;/em&gt;. Esse será o bloco substituído pelo conteúdo definido abaixo da chamada ao &lt;em&gt;panel&lt;/em&gt;. Nesse &lt;em&gt;mixin&lt;/em&gt;, é apresentado também o conceito de variáveis e o comando de decisão &lt;code&gt;if&lt;/code&gt;. Perceba o grande poder que os &lt;em&gt;mixins&lt;/em&gt; nos proporciona. O exemplo acima é simples, mas podemos criar qualquer &amp;#8220;componente&amp;#8221; mais complexo e reutilizá-lo ao longo do nosso desenvolvimento.&lt;/p&gt;

&lt;p&gt;Se interessou pelo Jade? Quer começar a usar hoje mesmo? No &lt;a href=&#34;http://jade-lang.com&#34; target=&#34;_blank&#34;&gt;site oficial do projeto&lt;/a&gt; você encontra um passo a passo de como usá-lo, além de documentação para outros recursos não citados nesse post. A princípio, a sintaxe do Jade pode parecer um pouco intimidadora, mas sua curva de aprendizado é rápida. Em questão de alguns minutos você já está familiarizado com sua estrutura.&lt;/p&gt;

&lt;p&gt;Com o Jade também é possível gerar o HTML preservando a indentação ou configurando-o para remover espaços e quebras de linha, gerando um HTML &amp;#8220;minificado&amp;#8221;.&lt;/p&gt;

&lt;p&gt;E se você utiliza algum automatizador de tarefas, basta adicionar o Jade ao seu workflow com o &lt;a href=&#34;https://github.com/gruntjs/grunt-contrib-jade&#34; target=&#34;_blank&#34;&gt;Grunt&lt;/a&gt; ou o &lt;a href=&#34;https://github.com/phated/gulp-jade&#34; target=&#34;_blank&#34;&gt;Gulp&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>