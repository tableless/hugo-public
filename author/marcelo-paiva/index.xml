<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marcelo Paiva on Tableless</title>
    <link>http://tableless.com.br/author/marcelo-paiva/index.xml</link>
    <description>Recent content in Marcelo Paiva on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/author/marcelo-paiva/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>HTTP2 para Desenvolvedores de Web</title>
      <link>http://tableless.com.br/http2-para-desenvolvedores-de-web/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/http2-para-desenvolvedores-de-web/</guid>
      <description>

&lt;p&gt;HTTP2 significa uma mudança na forma como construímos websites. As boas práticas de HTTP1 são prejudiciais no mundo do HTTP2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HTTP1 é lento e ineficiente para a maioria dos casos de uso de hoje na web.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;HTTP1.x é a versão do HTTP que nós já conhecemos quando entramos o endereço de um site. É um protocolo antigo que foi concebido antes mesmo de sabermos o que essa imensa rede mundial de computadores se tornaria. Apesar desse protocolo continuar funcionando como esperado, simplesmente não é tão eficiente como no início, porque ultimamente estamos exigindo algo muito mais complexo do que este protocolo foi projetado originalmente.&lt;/p&gt;

&lt;h2 id=&#34;nós-estamos-hackeando-o-http1&#34;&gt;Nós estamos hackeando o HTTP1&lt;/h2&gt;

&lt;p&gt;Para que os sites carreguem em tempo aceitável usando HTTP1, desenvolvemos uma série de técnicas; hacks na verdade; para conseguirmos extrair um bom desempenho deste protocolo antigo. São eles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Usando CSS Sprites&lt;/strong&gt;: Combine várias imagens em uma só imagem e utilizando CSS para mostrar apenas uma parte dessa imagem num devido lugar da página.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concatenando o Código&lt;/strong&gt;: Tornando vários arquivos de CSS ou JS e consolidá-los em um único arquivo maior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cookieless&lt;/strong&gt; &amp;#8211; Servindo arquivos de um domínio sem o uso de cookies, através de servidores estáticos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Usando Partições de Shard&lt;/strong&gt;: Criando registros de Alias no DNS de diferentes domínios ou sub-domínios para hospedagem dos arquivos de imagens.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As duas primeiras técnicas visam evitar várias solicitações HTTP. Em HTTP1 um pedido é uma coisa muito cara e leva muito tempo, cada pedido pode ser baixados com os cookies que devem ser enviados como parte do pedido, e nada disso é compactado. É mais rápido agrupar um monte de coisas e fazer tudo de uma só vez no lado do cliente do que continuar enviando pedidos para o servidor cada momento que o código precisa de um arquivo.&lt;/p&gt;

&lt;p&gt;A terceira técnica é usada para minimizar o tempo necessário para obter os arquivos; cookies, se estiver definido, deve ser enviado para o domínio solicitado junto com cada pedido &amp;#8211; que acrescenta-se a um monte de espaço &amp;#8216;desperdiçado&amp;#8217; na linha. Se os seus arquivos estão em um domínio diferente (exemplo: imagens.meusite.com) que não usa cookies, então o pedido desses arquivos não precisará enviar cookies com eles, o que será um pouco mais rápido.&lt;/p&gt;

&lt;p&gt;A última técnica, sharding, é porque os navegadores costumavam permitir apenas duas solicitações HTTP simultâneas fossem feitas por domínio. Se você criar um novo domínio para alguns de seus arquivos, então você dobra a quantidade de conexões simultâneas o navegador irá permitir a fim de obter seus arquivos. Assim, você pode baixar o conteúdo do site mais rapidamente. Na realidade, sharding não tem sido muito útil nos últimos anos, pois os fabricantes de navegadores decidiram eliminar essa restrição das duas conexões &amp;#8216;era tonto, e eles ignoraram.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;o-que-esperar-do-http2&#34;&gt;O que esperar do HTTP2?&lt;/h2&gt;

&lt;blockquote style=&#34;font-size: 200%&#34;&gt;
  &lt;p&gt;
    &lt;em&gt;Não use as boas práticas do HTTP1 como base para um site que está sendo hospedado em HTTP2.&lt;/em&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O protocolo HTTP2 está quase aqui, ele é baseado no SPDY®, e isso torna tudo muito mais eficiente. Significa também que todas as técnicas de desempenho HTTP1 são prejudiciais. Eles irão fazer um site HTTP2 mais lento, e não mais rápido. Portanto, não use as boas práticas do HTTP1 como base para um site que está sendo hospedado em HTTP2.&lt;/p&gt;

&lt;p&gt;HTTP2 faz com que o custo de múltiplos pedidos diminua por causa de um número de técnicas já incluídas:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
  &lt;li&gt;
    HTTP2 pode deixar a conexão em aberta para reutilização por um longo de tempo, para que não haja a necessidade daquela negociação cara que HTTP1 faz com o servidor em cada solicitação.
  &lt;/li&gt;
  &lt;li&gt;
    Ao contrário do HTTP1, o novo protocolo usa compactação de arquivos e assim o tamanho da solicitação é significativamente menor &amp;#8211; e, como resultado, mais rápida.
  &lt;/li&gt;
  &lt;li&gt;
    HTTP2 é multiplex, ou seja, pode enviar e receber várias coisas ao mesmo tempo através de uma única conexão.
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O que tudo isso significa, é que não só as técnicas que usamos no HTTP1 estão obsoletas, mas como também, farão as coisas ficarem mais lentas. Você poderá estar baixando arquivos desnecessários para a página a ser servida (concatenação de código e CSS sprites são suscetíveis à isso), e a técnica de sharding invoca pesquisas de DNS que irão retardar as coisas, na verdade, no HTTP2 voce não precisar de usar shard de forma alguma.&lt;/p&gt;

&lt;p&gt;Resumindo, quando você desenvolver o front-end (html/css/js) para um site que será servido através do HTTP2, tenha a certeza de que você não está usando velhas técnicas de desempenho do HTTP1, o que irão prejudicar o seu HTTP2 site.&lt;/p&gt;

&lt;h3 id=&#34;aprendendo-mais-sobre-o-http2&#34;&gt;Aprendendo mais sobre o HTTP2&lt;/h3&gt;

&lt;p&gt;Aqui está &lt;a href=&#34;http://daniel.haxx.se/http2/&#34;&gt;um excelente artigo (em inglês)&lt;/a&gt;, escrito por Daniel Stenberg, no qual ele detalha mais profundamente esse assunto.&lt;/p&gt;

&lt;h3 id=&#34;tradução&#34;&gt;Tradução&lt;/h3&gt;

&lt;p&gt;A tradução deste artigo para o Português foi devidamente autorizada pelo autor, &lt;a href=&#34;https://mattwilcox.net/web-development/http2-for-front-end-web-developers&#34;&gt;Matt Wilcox&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>