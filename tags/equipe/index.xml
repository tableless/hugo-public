<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Equipe on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/equipe/index.xml</link>
    <description>Recent content in Equipe on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/equipe/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Como boas práticas de escrita de código podem influenciar em uma melhor rotina de trabalho</title>
      <link>https://tableless.github.io/hugo-public/como-boas-praticas-de-escrita-de-codigo-podem-influenciar-em-uma-melhor-rotina-de-trabalho/</link>
      <pubDate>Sat, 17 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/como-boas-praticas-de-escrita-de-codigo-podem-influenciar-em-uma-melhor-rotina-de-trabalho/</guid>
      <description>

&lt;p&gt;Observei que alguns itens estão me ajudando na rotina de trabalho, como obter um melhor tempo de produção e um melhor controle sobre o que estou fazendo.&lt;/p&gt;

&lt;p&gt;São alguns hábitos simples que podem lhe ajudar muito. É apenas questão de implementar no seu dia a dia e demonstrar para a sua equipe (caso trabalhe em equipe) o quanto é mais organizado e produtivo trabalhar desta forma.&lt;/p&gt;

&lt;p&gt;A seguir listei algumas técnicas que podem ajudar bastante no seu dia a dia como desenvolvedor front-end.&lt;/p&gt;

&lt;h4 id=&#34;style-guide&#34;&gt;Style Guide&lt;/h4&gt;

&lt;p&gt;É um documento que contém estilos e padrões de um projeto, que podem ser utilizados para manter a pregnância do design e desenvolvimento.&lt;/p&gt;

&lt;p&gt;Existem algumas metodologias que podem ajudar você no desenvolvimento desse &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Style Guide, &lt;/strong&gt;como: &lt;a href=&#34;http://getbem.com/introduction/&#34; target=&#34;_blank&#34;&gt;BEM&lt;/a&gt;, &lt;a href=&#34;https://github.com/necolas/idiomatic-css/tree/master/translations/pt-BR&#34; target=&#34;_blank&#34;&gt;IDIOMATIC&lt;/a&gt;, &lt;a href=&#34;http://primercss.io/scaffolding/&#34; target=&#34;_blank&#34;&gt;PRIMER CSS&lt;/a&gt;, &lt;a href=&#34;http://getbootstrap.com/css/&#34; target=&#34;_blank&#34;&gt;Twitter Bootstrap&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;skeleton-ou-estruturas-boilerplate&#34;&gt;Skeleton ou Estruturas Boilerplate&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://www.initializr.com/&#34; target=&#34;_blank&#34;&gt;Initializr&lt;/a&gt;, &lt;a href=&#34;https://github.com/helderburato/generator-hyapp&#34; target=&#34;_blank&#34;&gt;Gerador HyApp&lt;/a&gt; + &lt;a href=&#34;http://yeoman.io/&#34; target=&#34;_blank&#34;&gt;Yeoman&lt;/a&gt; e &lt;a href=&#34;https://html5boilerplate.com/&#34; target=&#34;_blank&#34;&gt;HTML5 Boilerplate&lt;/a&gt;. Que são geradores de pequenas estruturas de diretórios para iniciar projetos em HTML/CSS/JS;&lt;/p&gt;

&lt;h4 id=&#34;font-ícones&#34;&gt;Font Ícones&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://fontawesome.io/&#34; target=&#34;_blank&#34;&gt;Font Awesome&lt;/a&gt;, &lt;a href=&#34;http://fontello.com/&#34; target=&#34;_blank&#34;&gt;Fontello&lt;/a&gt;, &lt;a href=&#34;https://icomoon.io/app/#/select&#34; target=&#34;_blank&#34;&gt;IcoMoon&lt;/a&gt; são ótimas opções. No meu dia a dia costumo utilizar na maioria dos projetos o &amp;#8220;Font Awesome&amp;#8221; pela facilidade e padronização nos layouts da empresa em que trabalho;&lt;/p&gt;

&lt;h4 id=&#34;web-fonts&#34;&gt;Web Fonts&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://fonts.google.com/&#34; target=&#34;_blank&#34;&gt;Google Fonts&lt;/a&gt; sem dúvidas é uma ótima opção e agiliza bastante quando utilizada nos layouts;&lt;/p&gt;

&lt;h4 id=&#34;task-runner&#34;&gt;Task Runner&lt;/h4&gt;

&lt;p&gt;Tratando-se de automatizadores de tarefas os mais conhecidos são o &lt;a href=&#34;http://gulpjs.com/&#34; target=&#34;_blank&#34;&gt;GulpJS&lt;/a&gt; e o &lt;a href=&#34;http://gruntjs.com/&#34; target=&#34;_blank&#34;&gt;GruntJS&lt;/a&gt;. Costumo utilizar o Gulp pois foi o que mais me identifiquei, mas você pode escolher o que mais adequar ao seu projeto ou ao modo de trabalho de sua equipe.&lt;/p&gt;

&lt;h3 id=&#34;será-que-isso-influencia-mesmo-na-rotina-ou-nos-custos-do-produto-final&#34;&gt;Será que isso influencia mesmo na rotina ou nos custos do produto final?&lt;/h3&gt;

&lt;p&gt;Segundo uma experiência direta da &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;IBM &lt;/strong&gt;e também de dados reunidos por pesquisadores que trabalham com centenas de empresas, percebe-se que a maioria das empresas acabam investindo &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;25% &lt;/strong&gt;a mais do orçamento no ciclo de vida do desenvolvimento para garantir a qualidade do software.&lt;/p&gt;

&lt;p&gt;Além disso, &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;30%&lt;/strong&gt; dos custos de projeto para desenvolvimento de software estão associados a retrabalho e &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;70%&lt;/strong&gt; desse valor estão relacionados a erros de requisitos.&lt;/p&gt;

&lt;p&gt;A qualidade de escrita de código influencia diretamente nos custos do projeto e da qualidade de vida do software.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56001&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/09/Group.png&#34; alt=&#34;Group&#34; width=&#34;1138&#34; height=&#34;600&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;mente-aberta-para-novas-ideias&#34;&gt;Mente aberta para novas ideias&lt;/h3&gt;

&lt;p&gt;Sou totalmente aberto a novas ideias e sugestões naquilo que eu posso melhorar no meu dia a dia de trabalho, mas parece que nem todo desenvolvedor enxerga as observações no seu próprio código como algo bom, algo produtivo. E sim como uma crítica pessoal.&lt;/p&gt;

&lt;p&gt;Lógico, todos nós temos dias difíceis, prazos curtos. E todo desenvolvedor que tem um pouco mais de experiência compreende muito bem como é correr contra o tempo para lançar um novo produto ou &lt;em class=&#34;markup--em markup--p-em&#34;&gt;feature&lt;/em&gt;. Mas creio que isso não seja motivo para excluir a possibilidade de mudança, de tentar o novo. &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;O que seria do mundo se ninguém tivesse tentado algo diferente?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Me deparo fazendo esse tipo de pergunta quase que diariamente, costumo estar sempre dando uma olhada em novas tecnologias, mesmo que seja por brincadeira. Mas me sinto frustrado quando não é possível aplicar nas equipes ou em projetos. Entendo que nem sempre é possível sair utilizando tudo que é novo, ainda mais quando nos deparamos com coisas novas todos os dias no nosso ramo, mas não podemos ficar presos ao velho para sempre.&lt;/p&gt;

&lt;p&gt;Tire 1 ou 2 dias agora para escrever bem seu código e no futuro você verá como o trabalho ficará mais fácil ao entrar novos membros na equipe e for necessário explicar como as coisas funcionam.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Padrões são bons!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Essa frase parece que assusta muitas pessoas, mas diferente de medo, ela deveria emitir a sensação de algo bom, pois é o que ela traz com o tempo.&lt;/p&gt;

&lt;p&gt;Agradeço a todos que tiraram um tempo e leram o texto, e qualquer sugestão de melhoria estou a disposição, obrigado!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A usabilidade deve ser pensada por todos</title>
      <link>https://tableless.github.io/hugo-public/a-usabilidade-deve-ser-pensada-por-todos/</link>
      <pubDate>Mon, 05 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/a-usabilidade-deve-ser-pensada-por-todos/</guid>
      <description>&lt;p&gt;No final de 2010, fui contatada pela &lt;a title=&#34;Revista WIDE&#34; href=&#34;http://revistawide.com.br/&#34; target=&#34;_blank&#34;&gt;Revista WIDE&lt;/a&gt; para participar da seção “Opinião” respondendo à seguinte questão: Todos devem pensar em usabilidade? A proposta era opinar se a usabilidade era algo a ser pensado apenas pelo designer (ou especialista de usabilidade) ou se programadores, editores, entre outros membros da equipe, deveriam têm responsabilidade na facilidade de uso do projeto. Isto é um tema delicado, às vezes polêmico, mas importante para ser debatido.&lt;/p&gt;

&lt;p&gt;O texto aqui divulgado é baseado na resposta que conferi à Revista WIDE e foi publicada na edição de Janeiro/Fevereiro de 2011.&lt;/p&gt;

&lt;p&gt;Como já vimos em &lt;a title=&#34;O que é Usabilidade?&#34; href=&#34;http://tableless.com.br/o-que-e-usabilidade/&#34; target=&#34;_blank&#34;&gt;outros artigos&lt;/a&gt;, a usabilidade é uma característica crítica de um website e, portanto, atualmente temos especialistas focados neste quesito. Mas existem aspectos que são tangíveis a designers, programadores e redatores/editores de conteúdo, sendo fatores pertinente a todos os profissionais envolvidos em um projeto. Porém, um dos maiores desafios é fazer com que toda a equipe tenha essa consciência das responsabilidades que os membros da equipe possuem quanto à usabilidade do projeto, cada qual dentro de seu contexto.&lt;/p&gt;

&lt;p&gt;Programadores e redatores de conteúdo não precisam se tornar especialistas em usabilidade, mas precisam compreender qual o seu papel, a sua contribuição para a facilidade de uso de um website. O programador é o responsável por implementar a interface planejada. Durante a implementação, aparecem questões funcionais de facilidade de uso que não foram previstas nos &lt;em&gt;wireframes&lt;/em&gt;, &lt;em&gt;storyboards&lt;/em&gt; e diagramas de fluxo de interação. Um campo de formulário sem validação, um erro de programação sem tratamento adequado que mostra uma mensagem genérica, um cadastro que não informa se a operação &amp;#8220;salvar&amp;#8221; foi bem sucedida, campos sem valores default, entre outros, são exemplos de falhas comuns que o programador pode corrigir para melhorar a experiência do usuário se ele conhecer algo sobre usabilidade.&lt;/p&gt;

&lt;p&gt;Da mesma forma, o designer pode projetar algo que tenha um bom apelo visual, mas que não apresente claramente o conteúdo do site, onde o usuário pode clicar, para onde ele pode ir. O redator também tem um papel importante na usabilidade: textos que sejam de fácil leitura, conteúdo claro e conciso que fale a linguagem do público-alvo, títulos de seções e artigos que sejam perceptivos e intuitivos facilitam a forma como as pessoas interagem e navegam em um determinado website. Um texto confuso pode comprometer a usabilidade, mesmo que do ponto de vista da interface e da funcionalidade esteja tudo correto.&lt;/p&gt;

&lt;p&gt;Quando se trata de usabilidade, um detalhe pode afetar a experiência do usuário. Toda a equipe tem que trabalhar em sintonia e cooperativamente para que a experiência do usuário seja abordada corretamente em todos os aspectos.&lt;/p&gt;

&lt;p&gt;Da mesma forma como programadores precisam entender algumas questões de usabilidade, é importante também que os especialistas em usabilidade compreendam determinadas restrições em termos de design, de implementação do código e de comunicação. Esta interação entre toda a equipe é importante para que a usabilidade seja pensada não somente sob o prisma da interface com o usuário, mas também sobre o ponto de vista funcional.&lt;/p&gt;

&lt;p&gt;O especialista de usabilidade pode atuar como um consultor da equipe em todas as fases de desenvolvimento de um projeto, mas cada profissional também precisa compreender diretrizes de usabilidade dentro do seu contexto de trabalho. É um esforço conjunto que precisa envolver toda a equipe.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Canivetes na web</title>
      <link>https://tableless.github.io/hugo-public/canivetes-na-web/</link>
      <pubDate>Tue, 03 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/canivetes-na-web/</guid>
      <description>&lt;p&gt;Eu nunca tive um canivete suiço. Lembro-me que meu tio tinha um, daqueles tradicionais, com cabo vermelho, abridor de rolhas e latas, chave de fenda, lima e tudo quanto mais tinha direito. Sem dúvida uma ferramenta útil em horas de aperto e imprevistos. Mesmo assim, eu nunca vi ninguém preferir a faca que vem no canivete em vez de utilizar uma faca normal. O motivo é óbvio: uma faca normal tem uma série de características que o canivete, por contemplar tantas ferramentas em um mesmo lugar, não poderá ter nunca. É muito mais confortável utilizar a faca, ela é mais ergonomica e afiada. Ela desempenha bem o seu trabalho porque ela foi criada, especificamente para cortar.&lt;/p&gt;

&lt;p&gt;Durante muito tempo agencias web achavam que o desenvolvedor deveria ser uma espécie de canivete suiço. Lembro-me que haviam empresas que procuravam designers que soubessem duas ou três linguagens server-side e programadores que entendessem bem de photoshop, fireworks e illustrator. Pague o salário de um e leve dois. Contudo, também haviam profissionais que achavam que ele deveria ter exatamente este perfil. Talvez por pressão do mercado ou até mesmo porque ninguém entendia direito esse negócio de web.&lt;/p&gt;

&lt;p&gt;Era “chic” você dizer que sabia um pouco de tudo. Mas o tempo mostrou que quem sabe um pouco de tudo na verdade sabe muito de nada. Há problemas que apenas um especialista, acostumado com as peculiaridades de um certo ambiente, pode resolver com maestria. Há coisas que só a faca pode cortar.&lt;/p&gt;

&lt;p&gt;Felizmente o mundo girou e a web mudou. Hoje é mais comum encontrarmos empresas que separam os processos. Paga-se mais para ter uma equipe de desenvolvimento web hoje em dia. No lugar daquele profissional meio ou quase nada especialista, você terá uma pessoa focada, concentrada em apenas um tipo de tarefa e está acostumado com essa atividade.&lt;/p&gt;

&lt;p&gt;O processo de desenvolvimento web vem sendo modificado durante anos. No começo do desenvolvimento de sites e sistemas para internet eram planejados baseando-se em papel. Passava-se muito tempo planejando um sistema antes de faze-lo. O cliente demorava para ganhar algo de valor e a equipe ficava ocupada prevendo quanto tempo levariam para desenvolver as etapas.&lt;/p&gt;

&lt;p&gt;O processo de desenvolvimento também era linear. Geralmente acontecia de a equipe receber o briefing do cliente, que depois era passado para o designer, que faria o layout no Photoshop ou qualquer outro sistema visual. Depois de já desenhado, ele preparia o HTML, normalmente utilizando um editor WYSIWYG. O programador por sua vez, com o código HTML na mão programaria todo o site ou sistema.&lt;/p&gt;

&lt;p&gt;Essa forma linear de desenvolver sistemas é algo aterrorizante, traz muitos problemas de manutenção e retrabalho. Se o cliente requisitasse alguma mudança no desenho do layout, o designer teria que refazer todo o HTML que por sua vez seria reprogramado novamente pelo programador. As partes: programação, design e client-side eram totalmente dependentes uma das outras. Uma forma antiga e nada produtiva de se desenvolver.&lt;/p&gt;

&lt;p&gt;Com a era dos Padrões Web isso tudo ajudou a mudar. A equipe já havia sido basicamente modificada. Agora, em vez de uma pessoa para fazer design, client-side e server-side, há pelo menos 3 profissionais: um para fazer o design, outro para estruturar o HTML e por fim o programador com o server-side. Essa partes são independentes. Se o cliente mudar de idéia em relação ao design do site, o HTML não precisará ser modificado, logo o programador não precisará reprogramar o site. Será trabalho apenas para o Designer, que terá que refazer o layout e criar um novo CSS. É trabalho para apenas uma pessoa. O resto da equipe poderá se ocupar com outras tarefas.&lt;/p&gt;

&lt;p&gt;O caso acima só terá sucesso se em cada uma fases do desenvolvimento houver um especialista por trás. Um “coringa” não conseguiria ser tão ágil porque ele não domina todas as áreas.&lt;/p&gt;

&lt;p&gt;Toda essa história também muda a cara do mercado. Profissionais são mais valorizados pelo seu conhecimento, sua experiência e especialização. Os profissionais se tornam mais dedicados com o processo e ganham uma visão muito maior de todo o projeto.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>