<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Placeholder on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/placeholder/index.xml</link>
    <description>Recent content in Placeholder on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/placeholder/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Estilizar e formatar placeholder de inputs</title>
      <link>https://tableless.github.io/hugo-public/estilizar-e-formatar-placeholder-de-inputs/</link>
      <pubDate>Wed, 26 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/estilizar-e-formatar-placeholder-de-inputs/</guid>
      <description>&lt;p&gt;O atributo &lt;strong&gt;placeholder&lt;/strong&gt; foi uma das maravilhas herdadas do HTML5. Eu me lembro de todas as gambiarras em Javascript e CSS que fazíamos para simular o que o atributo placeholder faz tão facilmente.&lt;/p&gt;

&lt;p&gt;O atributo placeholder é uma pequena dica, uma pequena frase, uma palavra, que tem o intuito de ajudar o usuário a entender como ele deve preencher aquele formulário. Entenda que e o placeholder NÃO deve ser usado como alternativa para a LABEL. Ou seja, aquela prática de colocar um &lt;strong&gt;display: none&lt;/strong&gt; nas labels e deixar apenas o placeholder visível não é legal. Também não é aconselhável ter uma descrição gigante. Para isso, use o atributo TITLE.&lt;/p&gt;

&lt;p&gt;Como esse atributo simplesmente insere um texto contextual no campo de formulário, muitos devs acham que não há maneira de formatá-lo, trocando cor, tamanho, font e etc&amp;#8230; Mas há! E é bem simples. Infelizmente você ainda precisa usar prefixos para funcionar, mas logo mais, quem sabe, não será mais necessário.&lt;/p&gt;

&lt;p&gt;Para formatar o atributo placeholder dos campos de formulários e textareas, basta manipular a pseudo-class ::placeholder. Não me perguntem por que é uma pseudo classe não e um pseudo elemento. Mas isso é só um detalhe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dica:&lt;/strong&gt; Eu poderia ter agrupado os seletores pra facilitar a leitura, o problema é que se um dos browsers não reconhece um dos seletores, ele acabam invalidando o grupo inteiro, aí nada funcionaria. Nesse caso a solução é colocar separado mesmo.&lt;/p&gt;

&lt;p&gt;Veja a &lt;a href=&#34;http://developers.whatwg.org/common-input-element-attributes.html#the-placeholder-attribute&#34;&gt;documentação oficial&lt;/a&gt; direto do WHATWG.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>