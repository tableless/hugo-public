<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Adaptive Web Design on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/adaptive-web-design/index.xml</link>
    <description>Recent content in Adaptive Web Design on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/adaptive-web-design/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Sobre desenvolvimento multi-device</title>
      <link>https://tableless.github.io/hugo-public/sobre-desenvolvimento-multi-device/</link>
      <pubDate>Mon, 30 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/sobre-desenvolvimento-multi-device/</guid>
      <description>

&lt;p&gt;Hoje existem uma série de dispositivos misturados em pelo menos três categorias que conhecemos: smartphones, tablets e desktops. Mas onde começa um e termina outro? Um smartphone de seis ou sete polegadas é um tablet? Se você acha que não existem smartphones deste tamanho, pesquise sobre o Fonepad da Asus para ter um exemplo. Dividir os aparelhos pelo tamanho da tela ou por features já não é mais tão seguro como antes. Então como podemos desenhar uma linha para delimitar onde inicia e onde termina um smartphone e começa um tablet? Ou um tablet e um notebook ou um desktop?&lt;/p&gt;

&lt;p&gt;Todos os meses a indústria cria novas definições de aparelhos. Veja o caso dos Phablets, que são os smartphones gigantes, como o Sony Z Ultra e o Nokia Lumia 1520. Há também os híbridos, que o Windows 8 tem trazido à tona e que estão se popularizando cada vez mais. É por isso que é muito difícil fazer uma classificação por features ou por tamanhos. Tudo é muito parecido.&lt;/p&gt;

&lt;p&gt;Sem dúvida é importante que você entenda o dispositivo que o seu cliente tem usado, mas mais importante do que isso é entender o contexto em que o cliente usa esses dispositivos. Não é muito difícil imaginar como é esse comportamento. Pense em como &lt;strong&gt;você&lt;/strong&gt; usa seus gadgets. Pense exatamente nas situações e lugares onde você usa seu smartphone, o seu tablet e quando você decide usar seu PC. Perceba que há um padrão de comportamento bastante comum entre todos os usuários destes dispositivos. Há uma questão ergonômica envolvida, onde decidimos qual dos dispositivos usar.&lt;/p&gt;

&lt;h2 id=&#34;classificação-ergonômica&#34;&gt;Classificação ergonômica&lt;/h2&gt;

&lt;p&gt;A primeira vez que vi essa maneira de diferenciar os dispositivos foi em uma palestra do Luke Wroblewski. E achei que faz bastante sentido essa divisão, por enquanto, por que a ergonomia dos aparelhos é algo que não muda muito. A classificação é a seguinte:&lt;/p&gt;

&lt;p&gt;Os aparelhos que você consegue usar com apenas uma mão, em pé, em lugares apertados, no ônibus, metro e etc, ficam no grupo &lt;strong&gt;palm&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Aparelhos que geralmente são usados em lugares mais confortáveis, principalmente em casa, em um sofá ou na cama, que normalmente precisam das duas mãos para serem manuseados, ficam no grupo &lt;strong&gt;lap&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Agora os aparelhos grandes, que normalmente ficam &amp;#8220;presos&amp;#8221; a uma mesa, em um ambiente controlado, sem muita perturbação e que geralmente é onde o usuário tem um nível de foco bem alto, são colocados no grupo &lt;strong&gt;desk&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Essa classificação é muito mais amigável e sabemos que não vai mudar daqui um ou dois anos por causa de um novo aparelho maluco que possa surgir. Isso também permite planejar o produto para uma continuidade mais previsível de tamanhos de telas.&lt;/p&gt;

&lt;p&gt;Mas há outros pontos que precisam ser levados em consideração. Embora eles sejam classificados por este fator ergonômico, como é a interação com cada dispositivo?&lt;/p&gt;

&lt;h2 id=&#34;classificação-via-interação&#34;&gt;Classificação via interação&lt;/h2&gt;

&lt;p&gt;As interações mais comuns existentes hoje são touch e teclado/mouse. Há interações que fogem desse padrão, que ainda são bem incomuns como as feitas com o Kinect ou até o Leap Motion.&lt;/p&gt;

&lt;p&gt;Mas ainda sim não é seguro traçar uma linha dividindo os dispositivos com essas interações. Há o caso dos notebooks híbridos e aqueles tablets que podemos conectar um teclado e um mouse.&lt;/p&gt;

&lt;p&gt;Há uma mistura nessa classificação e isso te coloca em um cenário onde o usuário vai usar sua interface com um mouse ou o próprio dedo em qualquer aparelho. Não há bala de prata aqui, mas ainda assim você &lt;strong&gt;não precisa fazer duas interfaces&lt;/strong&gt; para cada tipo de interação. Isso é caro, dá trabalho e sua equipe vai pirar antes do fim do projeto.&lt;/p&gt;

&lt;h2 id=&#34;desenhando-e-desenvolvendo-uma-vez&#34;&gt;Desenhando e desenvolvendo uma vez&lt;/h2&gt;

&lt;p&gt;Produzir algo para todos os dispositivos e prevendo todas as circunstancias pode ser algo bem fácil de fazer. Mas isso é uma maneira nova e bem diferente de fazer tudo o que você já sabe. Você vai continuar desenhando uma interface que envolve todas as possibilidades. Aqui vão 5 premissas básicas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Trabalhe pensando em Mobile First&lt;/li&gt;
&lt;li&gt;Tenha em mente a continuidade dos tamanhos de telas&lt;/li&gt;
&lt;li&gt;Pense em um futuro onde todos os dispositivos serão de alta resolução&lt;/li&gt;
&lt;li&gt;Otimize para touch&lt;/li&gt;
&lt;li&gt;Suporte cursores e teclados&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Essas premissas precisam ser seguidas no processo de desenvolvimento todo, mas as áreas de ux/design e front-end tem um papel mais crítico no caminho. Há muita discussão antes de digitar uma linha de código. Nas experiências que tenho passado, depois dessas grandes discussões, a taxa de retrabalho e refatoração de código é bem pequena.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fault Tolerance: a base do Progressive Enhancement</title>
      <link>https://tableless.github.io/hugo-public/faut-tolerant-base-progressive-enhancement/</link>
      <pubDate>Mon, 17 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/faut-tolerant-base-progressive-enhancement/</guid>
      <description>

&lt;p&gt;Fault Tolerance é como as máquinas tratam um erro quando ele acontece. É a habilidade do sistema continuar em operação quando uma falha inesperada ocorre. Isso &lt;a href=&#34;http://super.abril.com.br/ciencia/revolucao-cerebro-446545.shtml&#34;&gt;acontece a todo momento com seu cérebro&lt;/a&gt;. O sistema não pode parar até que esse erro seja resolvido, logo o sistema dá um jeito para que esse erro não afete todo o resto do sistema. A natureza inteira trabalha dessa forma. Os browsers trabalham dessa forma. É por isso que você consegue testar as coisas maravilhosas do CSS3 e do HTML5 sem se preocupar com browsers antigos.&lt;/p&gt;

&lt;h2 id=&#34;já-temos-as-vantagens-do-fault-tolerance-desde-o-início&#34;&gt;Já temos as vantagens do fault tolerance desde o início&lt;/h2&gt;

&lt;p&gt;Por exemplo, quando escrevemos uma propriedade de CSS que o browser não reconhece, ele simplesmente ignora aquela linha e passa para a próxima. Isso acontece o tempo inteiro quando aplicamos novidades do CSS ou do HTML. Lembra-se quando os browsers não reconheciam os novos tipos de campos de formulários do HTML5? O browser simplesmente substituía o campo desconhecido pelo campo comum de texto.&lt;/p&gt;

&lt;p&gt;Isso é importante por que o que se faz hoje no desenvolvimento de um website, continuará funcionando de alguma forma daqui 10 anos. Como os browsers tem essa tolerância a falhas, linguagens como HTML e CSS ganham poder para evoluir o tempo inteiro, sem os bloqueios das limitações do passado.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fault Tolerance é como as máquinas tratam um erro quando ele acontece.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Entender a importância do Fault Tolerance é a chave para entender o Progressive Enhancement. Na verdade o Progressive Enhancement não seria possível se essa tolerância de falhas não existisse em browsers e outros meios de acesso.&lt;/p&gt;

&lt;h2 id=&#34;tudo-sobre-acessibilidade&#34;&gt;Tudo sobre acessibilidade&lt;/h2&gt;

&lt;p&gt;Fundamentalmente, Progressive Enhancement é tudo sobre acessibilidade. Na verdade o termo acessibilidade é normalmente usado para indicar que o conteúdo deve ser acessível para pessoas com necessidades especiais. O progressive enhancement trata isso mas na ótica de que todo mundo tem necessidades especiais e por isso o acesso ao conteúdo deveria ser facilitado para qualquer pessoa em qualquer tipo de contexto. Isso inclui facilmente pessoas que acessam websites via smartphones, por exemplo, onde a tela é pequena e algumas das facilidades que existem no desktops estão ausentes.&lt;/p&gt;

&lt;h2 id=&#34;níveis-de-tolerância&#34;&gt;Níveis de tolerância&lt;/h2&gt;

&lt;p&gt;Nós passamos por alguns níveis ao desenvolver algo tendo como método o Progressive Enhacement. Esses níveis tem como objetivo sempre servir primeiro o conteúdo e depois todas as funcionalidades e comportamentos que podem melhorar o consumo deste conteúdo e também de toda a página.&lt;/p&gt;

&lt;p&gt;A base para tolerar erros é sempre manter um fallback quando algo ruim acontecer. A primeira camada geralmente é dar um fallback básico, conhecido pela maioria dos dispositivos. Esse fallback geralmente é servir um conteúdo em forma de texto. Isso é óbvio por que texto é um conteúdo acessível para praticamente qualquer meio de acesso existente hoje. Muitos dos elementos do HTML tem um fallback de texto para casos onde elemento não seja carregado ou não seja reconhecido. Lembra do atributo ALT? Até mesmo nas tags de vídeo e audio, como abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;video src=&#34;video.ogg&#34; controls&amp;gt;
  Texto de fallback.
&amp;lt;/video&amp;gt;
&lt;/pre&gt;

&lt;p&gt;A segunda camada é a &lt;strong&gt;semântica&lt;/strong&gt; do HTML. Cada elemento do HTML tem sua função e principalmente seu significado. Eles acrescentam significados a qualquer informação exibida pelo HTML e muitas vezes estendem o significado que o texto sozinho não conseguiria.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Texto é universal.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A terceira camada de experiência é a camada visual, onde o CSS e também as imagens, audios e vídeos são as responsáveis. É onde a coisa fica bonita e interativa. Aqui você sente mais a tolerância dos browsers a falhas. Usamos o tempo inteiro propriedades que nos ajudarão a melhorar a implementação de layouts, mas que em browsers antigos podem não ser renderizados. Experimentamos isso a todo momento.&lt;/p&gt;

&lt;p&gt;A quarta camada é a camada de interatividade ou comportamento. O Javascript toma conta dessa parte controlando os elementos do HTML, muitas vezes controlando propriedades do CSS para realizar ações de acordo com as interações do usuário.&lt;/p&gt;

&lt;p&gt;A camada final é uma extensão da semântica dos elementos do HTML. Aí é onde inserimos as iniciativas de WAI-ARIA. É onde vamos guiar leitores de telas e outros meios de acesso para elementos e pontos importantes na estrutura que o layout se baseia. Indicando quais regiões e elementos são referência de navegação.&lt;/p&gt;

&lt;p&gt;Nós sempre podemos resumir as camadas em 3:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Camada de conteúdo:&lt;/strong&gt; HTML semântico e rico com WAI-ARIA e tags corretas;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Camada de formatação:&lt;/strong&gt; CSS e estilos;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Camada de comportamento:&lt;/strong&gt; Javascript;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;adaptive-web-design&#34;&gt;Adaptive Web Design&lt;/h2&gt;

&lt;p&gt;Responsive design é bacana, coisa linda de Deus. Mas ainda está longe de ser algo que seja a solução para todos os problemas. Tudo está caminhando para algo mais flexível. A ideia do Responsive é muito, muito legal quando é aplicado a websites de conteúdo, blogs, websites institucionais, pequenos portais e etc. Mas quando vamos ambientes mais complexos, como fazer o administrativo de um produto, você tem elementos burocráticos difíceis de adequarmos em todas as telas.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fault Tolerance deve ser levado em conta em todos os seus projetos web.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A ideia do Adaptive Web Design é que você entregue exatamente a melhor experiência que o usuário pode receber no contexto em que ele se encontra. A palavra &amp;#8220;contexto&amp;#8221; tem sido muito usada quando conversamos sobre mobilidade. Contexto significa todo o ambiente e a forma com que seu usuário está consumindo o seu conteúdo naquele momento. Ele pode estar parado em um ônibus cheio, ou andando enquanto procura uma informação&amp;#8230; Ele pode estar assistindo TV ou cozinhando. Cada contexto influência em como ele vai consumir seu conteúdo. Não existe maneira de adaptar o conteúdo e as formas de uso para cada um dos tipos de contexto. Por esse motivo, a única saída de ter certeza (ou o máximo de certeza) é deixar as coisas simples.&lt;/p&gt;

&lt;p&gt;Há diversas maneiras de se fazer isso, mas antes que façamos soluções mirabolantes, temos que ter em mente que boa parte do trabalho já é feito pelos browsers e que podemos nos ater ao simples. Você não pode esperar que o usuário de mobile use seu site em um celular da mesma maneira que ele o usa em um Desktop. É por isso que você adapta elementos e a estrutura.&lt;/p&gt;

&lt;p&gt;Fault Tolerance deve ser levado em conta em todos os seus projetos web. Pensar assim te dá flexibilidade para avançar corrigindo problemas sem prejudicar todo o processo.&lt;/p&gt;

&lt;h4 id=&#34;leia-mais&#34;&gt;Leia mais&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/bem-vindo-a-xangrila-parte-1/&#34; title=&#34;Bem vindo a Xangri-lá – Parte 1&#34;&gt;Sobre Progressive Enhancement &amp;#8211; Bem vindo a Xangrilá &amp;#8211; Parte 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.techrepublic.com/blog/web-designer/understanding-progressive-enhancement-techniques-in-web-design/1809/&#34;&gt;Understanding Progressive Enhancement Techniques in Web Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.techrepublic.com/blog/web-designer/what-is-the-difference-between-responsive-vs-adaptive-web-design/&#34;&gt;What is the difference between Responsive e Adaptive Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.searchenginepeople.com/blog/the-difference-between-adaptive-design-and-responsive-design.html&#34;&gt;The difference between adaptive design and Responsive Deisgn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Não tenho versão mobile, faço ou não faço?</title>
      <link>https://tableless.github.io/hugo-public/nao-tenho-versao-mobile-faco-ou-nao-faco/</link>
      <pubDate>Mon, 06 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/nao-tenho-versao-mobile-faco-ou-nao-faco/</guid>
      <description>

&lt;p&gt;Estamos fazendo uma reestruturação no &lt;a href=&#34;http://locaweb.github.io/locawebstyle&#34;&gt;framework da firma&lt;/a&gt;. A primeira versão do projeto tinha como objetivo iniciar uma estruturação e uniformização de comportamento e design dos layouts de cada produto, melhorando o código front-end gerado, automatizando algumas tarefas e uniformizando o design e a expediência de uso. Não havíamos planejado nessa primeira versão qualquer tipo de compatibilidade com dispositivos móveis.&lt;/p&gt;

&lt;p&gt;Nessa reestruturação, o objetivo principal é produzir um novo código mais legível e escalável possível, de forma que não apenas nossa equipe de front-end consiga usar componentes, mas também que os back-ends possam montar painéis inteiros, como um quebra-cabeças, sem a necessidade de um front-end para tarefas básicas.&lt;/p&gt;

&lt;p&gt;O outro objetivo, tão importante quanto, é implementar uma versão mobile dos painéis. Logo, produzimos um código permitir que o layout seja responsivo e também cada elemento está sendo reformulado, se tornando um elemento adaptativo.&lt;/p&gt;

&lt;p&gt;Estamos usando o método de Mobile First para criar e produzir os elementos e a estrutura de layout. Isto por si só está sendo uma experiência de travar o cérebro. Mas algo que estamos discutindo muito é: nós não temos nenhum tipo de dado para justificar todo o trabalho para produzir e priorizar a versão mobile nos produtos. Não há resultados para mostrar indicativos que temos mais visitantes usando dispositivos mobile do que desktops. Não há estatísticas dos nossos produtos mostrando alguma tendência positiva de uso de mobiles nos painéis. Não temos nada disso simplesmente por que não tínhamos versão mobile.&lt;/p&gt;

&lt;p&gt;Várias e várias vezes criamos uma solução perfeita para desktops, mas que não é possível &amp;#8220;migrar&amp;#8221; a mesma experiência na versão mobile, logo, descartamos essa solução desktop para fazer algo mais homogêneo entre as duas plataformas. Como vamos justificar uma atitude dessa? O motivo disso é óbvio: não temos provas por que simplesmente não havia versão mobile até então. Só saberemos se todo esse trabalho vai valer a pena ou não apenas depois, quando terminarmos tudo. Aí sim saberemos exatamente o que dá certo, o que pode melhorar, o que teremos que matar sem choradeira&amp;#8230; Até lá, temos apenas um feeling.&lt;/p&gt;

&lt;h2 id=&#34;dúvida-sobre-versão-mobile&#34;&gt;Dúvida sobre versão mobile&lt;/h2&gt;

&lt;p&gt;Ter dúvidas se o trabalho de fazer uma versão mobile ou responsiva vale a pena é normal. Como no nosso caso, até pouco tempo ninguém pensava nessa coisa toda.&lt;/p&gt;

&lt;p&gt;Algumas empresas decidem implementar uma versão mobile paliativa, com menos informação ou menos features, para não dar muito trabalho apenas com a intenção de testar a adesão dos usuários. Não recomendo essa abordagem. Se a versão mobile for feita pela metade, o usuário não encontrará valor real na versão mobile. Obviamente o uso dessa versão não será frequente, gerando maus resultados. Logo a versão mobile acaba não saindo, já que não houve adesão dos usuários.&lt;/p&gt;

&lt;p&gt;Se você quer saber se a versão mobile vai dar certo ou não faça-o perfeito. Pense num projeto decente, com tudo o que o usuário precisa para usufruir da melhor experiência possível quando estiver em um dispositivo móvel. Assim você terá dados reais para decidir se vale ou não a pena.&lt;/p&gt;

&lt;h2 id=&#34;medir-medir-e-medir&#34;&gt;Medir, medir e medir&lt;/h2&gt;

&lt;p&gt;Depois de feito o trabalho para a versão mobile, você precisa medir a utilização do usuário. Há pelo menos 3 meios para obtermos dados de utilização importantes: podemos usar o Analytics, extraindo dados via dashboards customizados. Ainda no Analytics, podemos implementar os Track Events para saber se os módulos adaptados da versão mobile estão sendo usados. E por último, mas não menos importantes, há a possibilidade de fazer testes de usabilidade, pedindo para usuários reais testar a versão em seus aparelhos. É legal selecionar usuários que já demonstraram algum interesse nesse tipo de versão.&lt;/p&gt;

&lt;p&gt;Eu uso um dashboard customizado bem bacana que filtra dados da utilização mobile do seu site feito pelo pessoal da &lt;a href=&#34;http://www.agenciamestre.com/&#34;&gt;Agência Mestre&lt;/a&gt;. Para usar, &lt;a href=&#34;https://www.google.com/analytics/web/template?uid=_0Bifw1MQRiRKY7RDhQIww”&gt;clique nesse link&lt;/a&gt;. Certifique-se antes que você está logado em sua conta do analtytics.&lt;/p&gt;

&lt;h2 id=&#34;linha-de-corte-dos-aparelhos&#34;&gt;Linha de corte dos Aparelhos&lt;/h2&gt;

&lt;p&gt;Eu acho que você não quer passar pelos menos problemas de compatibilidade de browser e versões específicas que assombram a todos no desktop, na sua versão mobile. Há uma gama de aparelhos de todos os tamanhos, com densidades de pixels, resoluções e tamanhos de telas totalmente diferentes. É por esse motivo que você precisa de uma linha de corte.&lt;/p&gt;

&lt;p&gt;Geralmente a galera inclui smartphones como iPhone e aparelhos com as duas versões mais atuais do Android: a última versão e a anterior. Isso te dá uma margem de boa para aproveitar as novidades sem perder a sanidade. Esqueça aparelhos com versões antigas dos Androids. Quem tem problemas com a versão 2.5 sabe do que eu estou falando. Existem muitos aparelhos que são ótimos, mas rodam uma versão muito antiga do Android. Isso é um equivalente pior do que tentar forçar que seu site funcione no IE6 sem perder qualidade nos outros browsers.&lt;/p&gt;

&lt;p&gt;Não quero que você me entenda mal aqui. Não importa qual seja sua linha de corte, contanto que você saiba as consequências e o que você está abrindo mão ao escolher uma linha de corte muito baixa, contemplando aparelhos ruins. Entenda: ninguém precisa agradar a TODOS.&lt;/p&gt;

&lt;h2 id=&#34;concluindo&#34;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;Acho que você entendeu que não é possível ter resultados de verdade se você não tiver algo para testar. Se você não tem uma versão responsiva/adaptativa do seu site, experimente fazer só para depois decidir se vale ou não a pena manter essa versão.&lt;/p&gt;

&lt;p&gt;O Luke Wroblewski tem &lt;a href=&#34;http://www.lukew.com/ff/entry.asp?1841”&gt;um post interessante&lt;/a&gt; que mostra alguns dados da utilização movie de grandes websites.&lt;/p&gt;

&lt;p&gt;Mais da metade dos consumidores da Amazon compram usando um dispositivo móvel durante a temporada de final de ano (&lt;a href=&#34;http://phx.corporate-ir.net/phoenix.zhtml?c=176060&amp;p=irol-newsArticle&amp;ID=1886961&amp;highlight=“&gt;fonte&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;101 milhões de americanos usam o facebook diariamente via mobile. Isso equivale a 78% da visitação diária americana, que tem o total de 128 milhões (&lt;a href=&#34;http://techcrunch.com/2013/08/13/facebook-mobile-user-count/&#34;&gt;fonte&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;47.4 milhões de pessoas visitaram a versão mobile da ESPN em Setembro de 2013. Esta foi a primeira vez que o site mobile teve mais visitas únicas que o site desktop (&lt;a href=&#34;http://espnmediazone.com/us/press-releases/2013/10/espn-digital-media-sets-sports-category-record-in-september/&#34;&gt;fonte&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Mais do que provado que você deve prestar atenção nessa papagaiada toda, não?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>