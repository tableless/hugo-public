<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backend on Tableless</title>
    <link>http://tableless.com.br/tags/backend/index.xml</link>
    <description>Recent content in Backend on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/backend/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Features que sua API REST precisa ter desde o in√≠cio</title>
      <link>http://tableless.com.br/features-que-sua-api-rest-precisa-ter-desde-o-inicio/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/features-que-sua-api-rest-precisa-ter-desde-o-inicio/</guid>
      <description>

&lt;p&gt;Eu tenho trabalhado com dados suavemente flutuando atrav√©s do protocolo http por um tempo e agora eu tenho esse sentimento altru√≠sta de que eu posso contribuir com os desenvolvedores mais jovens com algumas hist√≥rias sobre os desafios que enfrentei durante a minha jornada.&lt;/p&gt;

&lt;p&gt;Este artigo basicamente tem¬†o objetivo de listar e discutir sobre alguns pontos importantes que sua API, possivelmente, poderia abra√ßar desde o in√≠cio do projeto, a fim de acelerar o processo de desenvolvimento para todos em sua equipe.&lt;/p&gt;

&lt;h2 id=&#34;autentica√ß√£o-e-autoriza√ß√£o&#34;&gt;Autentica√ß√£o e Autoriza√ß√£o&lt;/h2&gt;

&lt;p&gt;Se voc√™ se preocupa com quem vai acessar seus endpoints, √© necess√°rio prestar aten√ß√£o sobre este t√≥pico. Existem algumas especifica√ß√µes conhecidas para lidar com este assunto, principalmente &lt;a href=&#34;https://jwt.io/&#34;&gt;JWT&lt;/a&gt;, &lt;a href=&#34;https://oauth.net/&#34;&gt;OAuth&lt;/a&gt; e &lt;a href=&#34;https://oauth.net/2/&#34;&gt;OAuth2&lt;/a&gt;. Estas abordagens ir√£o abranger a maioria dos cen√°rios em seus aplicativos, mas √†s vezes voc√™ ser√° desafiado a criar um novo tipo¬†de camada de seguran√ßa para atender¬†algum requisito espec√≠fico, neste caso, tente n√£o reinventar a roda e adapte suas necessidades em um desses listados.&lt;/p&gt;

&lt;h2 id=&#34;query-filtering-sorting-e-pagination&#34;&gt;Query, Filtering, Sorting¬†e Pagination&lt;/h2&gt;

&lt;p&gt;Assim que o seu banco de dados cresce, voc√™ vai come√ßar a notar que alguns recursos est√£o demorando muito para serem recuperados. As abordagens comuns para esta situa√ß√£o s√£o: armazenar em cache seus objetos (pr√≥ximo t√≥pico) e / ou criar a pagina√ß√£o / filtragem. Se voc√™ pode obter o seu recurso com algo como:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;shiny.api.com/resources?query[type=2]&amp;limit=5&amp;start=1&amp;order=[name]&lt;/pre&gt;

&lt;p&gt;&amp;#8230;seus clients ser√£o capazes de selecionar apenas o que eles realmente precisam para processar uma p√°gina ou tela espec√≠fica. √â bom para dar uma certa autonomia para seus consumidores. Pr√≥ximo n√≠vel deste assunto √© &lt;a href=&#34;http://graphql.org/learn/&#34;&gt;GraphQL&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;cache&#34;&gt;Cache&lt;/h2&gt;

&lt;p&gt;Uma boa maneira de recuperar seus recursos incrivelmente r√°pido √© desenvolver alguma estrat√©gia de cache. O custo de suas requisi√ß√µes¬†ser√£o menores uma vez que seus dados estar√£o prontos para serem consumidos em um banco de dados in-memory. Com algum esfor√ßo voc√™ pode lidar com isso usando¬†&lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt; ou &lt;a href=&#34;https://memcached.org/&#34;&gt;Memcached&lt;/a&gt;. Boa sorte com sua expira√ß√£o de cache. Confira algumas reflex√µes sobre este tema com o &lt;a href=&#34;http://blog.remarkablelabs.com/2012/12/russian-doll-caching-cache-digests-rails-4-countdown-to-2013&#34;&gt;Russian Doll Caching&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;wrappers-e-summarized-fields&#34;&gt;Wrappers e Summarized Fields&lt;/h2&gt;

&lt;p&gt;√Äs vezes, voc√™ precisar√° fornecer alguns campos calculados &amp;#8211; ou quaisquer dados agregados¬†em geral &amp;#8211; em suas respostas e para esse cen√°rio, posso sugerir-lhe montar algo nessa linha:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;{
  &#34;summay&#34;: {
    &#34;total&#34;: 2
    &#34;averageAge&#34;: 22
  },
  &#34;data&#34;:[
  {
    &#34;name&#34;: &#34;John&#34;,
    &#34;age&#34;: 22
  },
  {
    &#34;name&#34;: &#34;Mary&#34;,
    &#34;age&#34;: 22
  }
  ]
}
&lt;/pre&gt;

&lt;h2 id=&#34;hateos&#34;&gt;HATEOS&lt;/h2&gt;

&lt;p&gt;HATEOAS significa¬†&lt;em&gt;Hypermedia as the application state of the engine&lt;/em&gt;. √â uma abordagem que permite que os clientes interpretem de forma aut√¥nima e din√¢mica¬†o estado atual de um recurso e as transi√ß√µes que podem ser iniciados decorrente deste mesmo estado.&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;{
  &#34;id&#34;: 276,
  &#34;amount&#34;: 90.00,
  &#34;links&#34;: [
  {
    &#34;type&#34;: &#34;orders&#34;,
    &#34;rel&#34;: &#34;self&#34;,
    &#34;href&#34;: &#34;/orders/ 276&#34;
  },
  {
    &#34;type&#34;: &#34;customer&#34;,
    &#34;rel&#34;: &#34;order&#39;s customer&#34;,
    &#34;href&#34;: &#34;/orders/276/customers&#34;
  }
  ]
}
&lt;/pre&gt;

&lt;p&gt;Sobre o JSON acima, voc√™ pode tirar as seguintes conclus√µes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dentro do array &amp;#8220;links&amp;#8221; s√£o todas as &amp;#8216;transi√ß√µes&amp;#8217; poss√≠veis com o recurso, neste caso, podem acessar o cliente que criou as ordens com o URI /orders/276/customers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rel:auto&lt;/strong&gt; significa que esta URI √© a refer√™ncia do estado atual, neste caso, a ordem com ID 276. &lt;strong&gt;rel&lt;/strong&gt;, em geral, representa a rela√ß√£o entre a liga√ß√£o com o recurso atual.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;¬†indica o tipo de recurso que √© o link em quest√£o.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ao padronizar seus servi√ßos RESTful usando HATEOAS voc√™ permite que os clientes usem os recursos de maneiras mais f√°ceis, afinal de contas, as possibilidades de navega√ß√£o entre os estados ser√£o listadas em cada hit em seus recursos.&lt;/p&gt;

&lt;p&gt;Conforme descrito em um &lt;a href=&#34;http://martinfowler.com/articles/richardsonMaturityModel.html&#34;&gt;post&lt;/a&gt; de Martin Fowler, HATEOAS em sua API √© o √∫ltimo passo para atingir a &amp;#8216;Gl√≥ria de REST&amp;#8221;, o estado da arte.&lt;/p&gt;

&lt;h2 id=&#34;message-queue&#34;&gt;Message Queue&lt;/h2&gt;

&lt;p&gt;Aposto que voc√™ tem algumas rotas em suas APIs que s√£o s√≠ncronas¬†mas n√£o precisam necessariamente ser. Alguns casos de uso para uso de fila de mensagens s√£o: enviar e-mails ap√≥s alguma a√ß√£o, redimensionamento de imagem, codifica√ß√£o de v√≠deo, etc. Uma pr√°tica comum para esta situa√ß√£o √© colocar essas a√ß√µes em uma fila de mensagens para serem processadas posteriormente de forma ass√≠ncrona. D√™ uma olhada na &lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;RabbitMQ&lt;/a&gt; ou &lt;a href=&#34;https://kafka.apache.org/&#34;&gt;Kafka&lt;/a&gt;, ambas s√£o grandes solu√ß√µes.&lt;/p&gt;

&lt;p&gt;&amp;#8211;&lt;/p&gt;

&lt;p&gt;√â isso a√≠. Pelo menos para mim estes s√£o os principais aspectos que eu vi nos √∫ltimos anos no desenvolvimento de novos apis http/rpc/rest. Se voc√™ acha que existem alguns outros pontos importantes para mencionar, por favor deixe nos coment√°rios e conversamos sobre üôÇ&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Por que utilizar Go/Golang no seu backend?</title>
      <link>http://tableless.com.br/por-que-utilizar-gogolang-no-seu-backend/</link>
      <pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/por-que-utilizar-gogolang-no-seu-backend/</guid>
      <description>

&lt;p&gt;O tempo passa e quando voc√™ √© viciado no que faz, no meu caso, codar, a busca por se aprimorar ou descobrir novas maneiras de resolver os problemas da sua √°rea nunca param, assim sendo, um belo dia, cheguei at√© o &lt;strong&gt;Go&lt;/strong&gt; e desde ent√£o n√£o parei mais de aprender sobre a linguagem. A ideia √© a cada semana fazer um post sobre, iniciando agora com uma simples introdu√ß√£o e sugest√µes de artigos para se animar.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;http://synflood.at/tmp/golang-slides/images/gophercolor.png&#34; alt=&#34;Imagem do gopher&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;o-que--gogolang&#34;&gt;O que √© Go/Golang?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Go&lt;/strong&gt; ou &lt;strong&gt;Golang&lt;/strong&gt; &amp;#8211; termo que facilita buscas no google &amp;#8211; √© uma linguagem &lt;em&gt;open source&lt;/em&gt; criada em 2009 pelo &lt;strong&gt;Google&lt;/strong&gt;, mais especificamente por caras como &lt;em&gt;Rob Pike&lt;/em&gt; e &lt;em&gt;Ken Thompson&lt;/em&gt;. Caso voc√™ n√£o conhe√ßa, s√£o engenheiros renomados, que tiveram grande influ√™ncia na hist√≥ria da computa√ß√£o e em projetos &lt;em&gt;open source&lt;/em&gt; de grande escala, pra citar um bem &amp;#8220;simples&amp;#8221;: &lt;strong&gt;Unix&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;S√≥ por esta constata√ß√£o, voc√™ j√° poderia largar tudo e seguir os passos deles cegamente, afinal, Rob e Ken provavelmente n√£o estariam trabalhando em algo meia boca. Brincadeiras √† parte, a Go foi criada com objetivos simples, dentre os principais, ter a rapidez do C, mas ser um pouco mais leg√≠vel e/ou f√°cil de programar. Inclusive, nos meus primeiros passos com a linguagem, pude sentir exatemente isso. &lt;a href=&#34;https://www.youtube.com/watch?v=FTl0tl9BGdc&#34; target=&#34;_blank&#34;&gt;Aqui&lt;/a&gt;¬†tem um v√≠deo bem massa do Rob dizendo o porqu√™ voc√™ deve aprender Go.&lt;/p&gt;

&lt;h3 id=&#34;por-que-eu-usaria-go&#34;&gt;Por que eu usaria Go?&lt;/h3&gt;

&lt;p&gt;Acima, eu disse algumas vantagens de utilizar a linguagem, por√©m, a lista √© bem mais vasta. Tentarei compilar os pontos que mais me chamam aten√ß√£o e que possivelmente seriam casos de uso para voc√™ utiliz√°-la:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go √© incrivelmente ‚Äòleve‚Äô em termos de uso de mem√≥ria. Existe &lt;a href=&#34;http://www.iron.io/how-we-went-from-30-servers-to-2-go/&#34; target=&#34;_blank&#34;&gt;um caso conhecido&lt;/a&gt; de uma companhia que rodava um servi√ßo em Ruby utilizando 50 servidores e foram para 2 com Go.&lt;/li&gt;
&lt;li&gt;Concorr√™ncia √© um dos pontos fortes da linguagem, se voc√™ precisar sobrecarregar um backend com diversos processamentos simult√¢neos, as &lt;code&gt;goroutines&lt;/code&gt; e &lt;code&gt;channels&lt;/code&gt; &lt;a href=&#34;https://matt.aimonetti.net/posts/2012/11/27/real-life-concurrency-in-go/&#34; target=&#34;_blank&#34;&gt;v√£o te ajudar bastante&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Compila muito r√°pido.&lt;/li&gt;
&lt;li&gt;Tem &lt;em&gt;garbage collector&lt;/em&gt;, voc√™ n√£o precisa se preocupar tanto com mem√≥ria como nos seus dias de C.&lt;/li&gt;
&lt;li&gt;√â fortemente tipada. (eu pelo menos acho isso bom, phpeiros)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;quem-est-usando-go&#34;&gt;Quem est√° usando Go?&lt;/h3&gt;

&lt;p&gt;Existe uma infinidade de empresas que ao descobrirem os poderes m√°gicos de Go, foram migrando seus servi√ßos/backend. Abaixo algumas grandes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Uber &amp;#8211; &lt;a href=&#34;https://eng.uber.com/go-geofence/&#34; target=&#34;_blank&#34;&gt;How we built uber engineering‚Äôs highest query per second service using Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Docker &amp;#8211; &lt;a href=&#34;http://pt.slideshare.net/jpetazzo/docker-and-go-why-did-we-decide-to-write-docker-in-go&#34; target=&#34;_blank&#34;&gt;Why did we decide to write Docker in Go?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dropbox &amp;#8211; &lt;a href=&#34;https://blogs.dropbox.com/tech/2014/07/open-sourcing-our-go-libraries/&#34; target=&#34;_blank&#34;&gt;Open sourcing our Go libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenShift &amp;#8211; &lt;a href=&#34;https://blog.gopheracademy.com/birthday-bash-2014/openshift-3-old-dogs-new-tricks/&#34; target=&#34;_blank&#34;&gt;OpenShift3 and Go &amp;#8211; Teaching Old Dogs New Tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter &amp;#8211; &lt;a href=&#34;https://blog.twitter.com/2015/handling-five-billion-sessions-a-day-in-real-time&#34; target=&#34;_blank&#34;&gt;Handling five billion sessions a day ‚Äì in real time&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enfim, existem muito mais empresas que se importam e/ou tem necessidade de melhorar a performance de seus servi√ßos e grande parte delas est√£o olhando para Go e outras linguagens com poderes maiores do que as ‚Äòenterprise languages‚Äô que vemos h√° anos por a√≠ nas grandes empresas do pa√≠s.&lt;/p&gt;

&lt;p&gt;Espero que o post tenha sido informativo e inspirador para voc√™ descobrir mais sobre a linguagem Go.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Por que Python?</title>
      <link>http://tableless.com.br/por-que-python/</link>
      <pubDate>Tue, 29 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/por-que-python/</guid>
      <description>

&lt;p&gt;Eu sou apaixonado por &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;. Muito. Daquele tipo que fala de Python sempre que pode. E uma pergunta que sempre me fazem √©: por qu√™? Vou tentar fazer uma lista dos motivos mais relevantes:&lt;/p&gt;

&lt;h2 id=&#34;1-√©-muito-bom-escrever-c√≥digo-python&#34;&gt;1. √â muito bom escrever c√≥digo Python&lt;/h2&gt;

&lt;p&gt;Geralmente, quando algu√©m cria uma linguagem de programa√ß√£o, tem em vista um objetivo. Por exemplo,¬†Lisp foi escrita para programa√ß√£o funcional. Java foi escrita para que o mesmo c√≥digo pudesse rodar em qualquer lugar. PHP foi criada para construir p√°ginas web. E Python foi criada para ser produtiva e f√°cil de escrever.&lt;/p&gt;

&lt;p&gt;Um programador experiente aprende a sintaxe do Python em algumas poucas horas. O jeito de escrever faz sentido.&lt;/p&gt;

&lt;p&gt;Veja, por exemplo, essa fun√ß√£o para calcular um n√∫mero de &lt;a href=&#34;https://pt.wikipedia.org/wiki/Sequ%C3%AAncia_de_Fibonacci&#34;&gt;Fibonacci&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;def fib(n):
    if n&amp;lt;3:
        return n
    return fib(n-1) + fib(n-2)&lt;/pre&gt;

&lt;p&gt;Note como a sintaxe √© simples. Mesmo nas decis√µes de design que s√£o &amp;#8220;pouco ortodoxas&amp;#8221;, como os blocos baseados na indenta√ß√£o, a decis√£o foi tomada pensando em produtividade. O modelo de blocos do Python faz com que voc√™ precise digitar menos. Al√©m disso, √© imposs√≠vel escrever c√≥digo n√£o indentado em Python.&lt;/p&gt;

&lt;p&gt;Veja nesse outro exemplo, a fun√ß√£o de Fibonacci em uma vers√£o &lt;a href=&#34;https://en.wikipedia.org/wiki/Memoization&#34;&gt;memoized&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;memo = {0:0, 1:1}

def fib(n):
    if not n in memo:
        memo[n] = fib(n-1) + fib(n-2)
    return memo[n]&lt;/pre&gt;

&lt;p&gt;Reparou como √© simples? Ao trabalhar com Python, a linguagem nunca est√° entre voc√™ e seu problema. Voc√™ pode gastar seu tempo com a l√≥gica de programa√ß√£o, que √© o que realmente importa, e n√£o com especificidades da linguagem que voc√™ est√° usando.&lt;/p&gt;

&lt;h2 id=&#34;2-organizar-um-projeto-python-√©-muito-f√°cil&#34;&gt;2.¬†Organizar um projeto Python √© muito f√°cil&lt;/h2&gt;

&lt;p&gt;Vamos colocar nossa fun√ß√£o de Fibonacci e salvar num arquivo, fib.py, incluindo um pouquinho de documenta√ß√£o. Chamamos cada arquivo Python de m√≥dulo:&lt;/p&gt;

&lt;pre&gt;&#39;&#39;&#39;Fibonacci function, memoized for better performance.&#39;&#39;&#39;
memo = {0:0, 1:1}

def fib(n):
    &#39;&#39;&#39;Returns the nth Fibonacci number.&#39;&#39;&#39;
    if not n in memo:
        memo[n] = fib(n-1) + fib(n-2)
    return memo[n]&lt;/pre&gt;

&lt;p&gt;Agora vamos importar esse arquivo no console do Python, e veja o que d√° para fazer:&lt;/p&gt;

&lt;div style=&#34;width: 490px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;img class=&#34;&#34; src=&#34;http://elcio.com.br/wp-content/uploads/2015/09/fib.gif&#34; alt=&#34;&#34; width=&#34;480&#34; height=&#34;267&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Executando fib.py e ajuda.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;√â como PHPDoc ou Javadoc, mas completamente nativo, e com uma sintaxe muito simples. E tudo o que voc√™ precisa para ler a documenta√ß√£o √© o pr√≥prio Python.&lt;/p&gt;

&lt;h2 id=&#34;3-o-ecossistema-python-√©-fant√°stico&#34;&gt;3. O ecossistema Python √© fant√°stico&lt;/h2&gt;

&lt;p&gt;Come√ßando pela pr√≥pria linguagem, que vem com uma excelente &lt;a href=&#34;https://docs.python.org/3/library/&#34;&gt;biblioteca padr√£o&lt;/a&gt;. Essa biblioteca √© bastante extensa e possui excelentes m√≥dulos, bem documentados e f√°ceis de usar. Por exemplo, digamos que voc√™ queira baixar o c√≥digo fonte desse artigo e gerar um arquivo GZip com ele, veja como √© f√°cil:&lt;/p&gt;

&lt;pre&gt;import urllib
import gzip
html=urllib.urlopen(&#39;http://tableless.com.br/por-que-python/&#39;).read()
gzfile=gzip.open(&#39;por-que-python.html.gz&#39;,&#39;w&#39;)
gzfile.write(html)&lt;/pre&gt;

&lt;p&gt;Usamos os m√≥dulos urllib e gzip.¬†Entre os recursos fornecidos pelos m√≥dulos que j√° vem com o Python, posso citar o controle de threads e processamento paralelo, a cria√ß√£o de webservices, bibliotecas para sockets, http, ftp, e-mail, a leitura e escrita de XML, JSON, CSV, o acesso a recursos do sistema operacional, matem√°tica e estat√≠stica, criptografia, manipula√ß√£o de arquivos de √°udio, testes automatizados, etc.&lt;/p&gt;

&lt;p&gt;Como¬†√© f√°cil escrever c√≥digo bom e bem documentado, a comunidade Python tem feito um excelente em fornecer m√≥dulos para praticamente tudo o que voc√™ precisar fazer. Voc√™ pode encontrar, no &lt;a href=&#34;https://pypi.python.org/pypi&#34;&gt;Python Package Index&lt;/a&gt;, milhares de m√≥dulos prontos para coisas como ler e escrever arquivos Excel, trabalhar com imagens, acessar bancos de dados os mais diversos, trabalhar com automa√ß√£o residencial, enviar SMS, integrar seu software ao Gmail, falar com servi√ßos de VoIP, conectar-se a redes sociais, criar um servidor de e-mails, desenvolver jogos 3D, e uma infinidade de outros recursos.&lt;/p&gt;

&lt;h3 id=&#34;e-tem-mais-8230&#34;&gt;E tem mais&amp;#8230;&lt;/h3&gt;

&lt;p&gt;Se voc√™ n√£o programa em Python, espero t√™-lo deixado pelo menos um pouquinho curioso. No pr√≥ximo artigo, vamos falar um pouco mais da linguagem, mostrando algumas caracter√≠sticas da sintaxe e dos tipos de dados que a tornam t√£o interessante. At√© l√°, fique √† vontade nos coment√°rios. Sugest√µes, d√∫vidas, cr√≠ticas e opini√µes s√£o muito bem vindas e v√£o me ajudar a preparar os pr√≥ximos artigos.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JAVA ‚Äì O caminho do aprendizado</title>
      <link>http://tableless.com.br/java-o-caminho-aprendizado/</link>
      <pubDate>Thu, 16 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/java-o-caminho-aprendizado/</guid>
      <description>&lt;p&gt;Para entender o que √© o Java, √© preciso compreender tr√™s elementos que quando est√£o juntos, se torna poss√≠vel o desenvolvimento de um sistema, s√£o eles: Uma linguagem de programa√ß√£o, um ambiente de desenvolvimento e uma interface de programas aplicativos¬†(Applications Programming Interface ‚Äì API).&lt;/p&gt;

&lt;p&gt;Uma linguagem √© composta por um conjunto de palavras e s√≠mbolos utilizados pelos programadores para escrever cada parte de um programa. Al√©m disso, ela tamb√©m define regras de sintaxe que precisam ser observadas. No Java, a linguagem √© utilizada para produzir diversos elementos de um programa, tais como: classes, interfaces, atributos, m√©todos, vari√°veis, constantes, estruturas de decis√£o e estruturas de repeti√ß√£o.&lt;/p&gt;

&lt;p&gt;O ambiente de desenvolvimento √© o conjunto de ferramentas necess√°rias para o desenvolvimento de softwares. O kit padr√£o do Java cont√©m um conjunto de consider√°vel de ferramentas, tais como: um compilador (javac), um interpretador de aplicativos (java), um visualizador de applets (appletviewer) e um gerador de documenta√ß√£o (javadoc). Tamb√©m existem v√°rias IDEs (Integrated Development Environment ‚Äì Ambiente de Desenvolvimento Integrado) dispon√≠veis que facilitam o processo de desenvolvimento de software, como a¬† IDE eclipse, que √© uma das IDEs mais utilizadas pelos desenvolvedores.&lt;/p&gt;

&lt;p&gt;Por√©m os softwares desenvolvidos em Java n√£o resultam somente da jun√ß√£o de um ambiente de desenvolvimento e de uma linguagem de programa√ß√£o. A isso se soma um extenso conjunto de componentes, que formam sua API. O Java cont√©m dois tipos fundamentais de componentes em sua API: as classes e as interfaces , uma pessoa que queira estudar Java, dever√° passar a maior parte do seu tempo estudando a sua API do que aprender a lidar com a linguagem e com um ambiente de desenvolvimento.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;O termo interface n√£o deve ser confundido com ‚ÄúInterface gr√°fica‚Äù. Do mesmo modo que uma classe, uma interface pode abrigar atributos e m√©todos. Para evitar mal entendidos, as refer√™ncias √† ‚ÄúInterface Gr√°fica‚Äù s√£o feitas atrav√©s da sigla GUI (Graphic User Interface ‚Äì Interface Gr√°fica de Usu√°rio).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Como a API Java cont√©m diversas classes e interfaces para o desenvolvimento de software, o desenvolvedor poder√° se concentrar apenas na constru√ß√£o dos componentes que atender√£o √†s necessidades do sistema que est√° sendo desenvolvido.&lt;/p&gt;

&lt;p&gt;Sendo assim, pode-se dizer que existem tr√™s partes distintas para se aprender acerca do Java: A linguagem de programa√ß√£o, a segunda diz respeito ao funcionamento das ferramentas que comp√µem o seu ambiente de desenvolvimento, e a terceira √© o extenso conjunto de classes e interfaces que comp√µem a sua API.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/imagem1.jpg&#34;&gt;&lt;img class=&#34;aligncenter wp-image-48148 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/imagem1.jpg&#34; alt=&#34;&#34; width=&#34;623&#34; height=&#34;456&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pode-se perceber claramente que ‚Äúlinguagem Java‚Äù √© uma express√£o que n√£o representa todo o caminho a ser trilhado. Para se tornar um desenvolvedor Java, √© preciso estudar tanto a linguagem quanto sua API e um ambiente de desenvolvimento. Assim, o mais adequado √© assumir o conceito de Java como um conjunto de tecnologias que podem ser aplicadas ao desenvolvimento de software e n√£o apenas como uma linguagem.&lt;/p&gt;

&lt;p&gt;Ao tratar do Java t√£o somente como uma linguagem de programa√ß√£o, ignora-se o segredo de seu sucesso: a produtividade possibilitada por sua extensa API e um ambiente de execu√ß√£o que permite que seus programas sejam executados nos principais sistemas operacionais.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Slim Framework</title>
      <link>http://tableless.com.br/php-slim-framework/</link>
      <pubDate>Wed, 04 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/php-slim-framework/</guid>
      <description>

&lt;p&gt;O Slim Framework √© um microframework PHP que facilita sua vida na hora de fazer pequenas APIs.&lt;/p&gt;

&lt;p&gt;Vou falar sobre um¬†problema que tive em um projeto em uma empresa que trabalho. L√° eu codifico com diferentes linguagens de programa√ß√£o em pequenos sistemas. Esses sistemas precisam ser acessados por 3 filiais e os usu√°rios se logam¬†com o mesmo login usado no E.R.P. que eles utilizam.&lt;/p&gt;

&lt;p&gt;Para simplificar meu trabalho resolvi criar uma API simples para autenticar os usu√°rios. Como eu queria usar uma estrutura REST e n√£o queria fazer tudo na unha e nem queria colocar um framework grande como Rails, Laravel, Zend ou Django. Pesquisei sobre microframeworks PHP e cheguei ao &lt;a href=&#34;http://www.sinatrarb.com/&#34;&gt;Sinatra&lt;/a&gt;, que j√° conhecia, e o &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt; (Python). Ent√£o encontrei o &lt;a href=&#34;http://www.slimframework.com/&#34;&gt;Slim&lt;/a&gt;¬†um microframework PHP.&lt;/p&gt;

&lt;p&gt;Eu queria trabalhar com uma estrutura REST¬†e o Slim j√° faz isso de forma muito simples criando rotas, como qualquer outro framework que trabalha com REST, a diferen√ßa √© que um microframework √© mais leve e n√£o precisa de tantas configura√ß√µes. √â uma m√£o na roda para quem precisa escrever uma API. Para voc√™s terem ideia: em um dia consegui resolver meu problema de autentica√ß√£o.&lt;/p&gt;

&lt;h2 id=&#34;c√≥digo&#34;&gt;C√≥digo&lt;/h2&gt;

&lt;p&gt;Agora vamos ao c√≥digo! O Slim pode ser instalado via &lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;¬†ou fazendo o download do c√≥digo fonte, para quem n√£o conhece ele √© um gerenciador de depend√™ncias para PHP assim como &lt;a href=&#34;http://bundler.io/&#34;&gt;Bundler&lt;/a&gt;¬†√© para o Ruby, nesse post vou mostrar a instala√ß√£o via composer:&lt;/p&gt;

&lt;h3 id=&#34;passo-1-8211-instala√ß√£o-do-composer&#34;&gt;Passo 1 &amp;#8211; Instala√ß√£o do composer&lt;/h3&gt;

&lt;p&gt;Leia o post (&lt;a href=&#34;http://tableless.com.br/composer-para-iniciantes/&#34;&gt;Composer para iniciantes&lt;/a&gt;) do &lt;a href=&#34;http://tableless.com.br/author/andrecardosodev/&#34;&gt;Andre Cardoso&lt;/a&gt;. Mas basicamente, para quem tem linux, √© s√≥ abrir o terminal e digitar o c√≥digo abaixo, se tiver windows, √© s√≥ pegar o execut√°vel no site e instalar.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;curl -s https://getcomposer.org/installer | php&lt;/pre&gt;

&lt;h3 id=&#34;passo-2-8211-criar-o-arquivo-composer-json&#34;&gt;Passo 2 &amp;#8211; Criar o arquivo composer.json&lt;/h3&gt;

&lt;p&gt;Crie um diretorio para seu projeto(no meu caso eu chamei de api) e coloque¬†um arquivo chamado composer.json dentro dela:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;mkdir api
cd api
&lt;/pre&gt;

&lt;p&gt;No arquivo composer.json adicione as seguintes linhas:&lt;/p&gt;

&lt;pre class=&#34;lang-json&#34;&gt;{
    &#34;require&#34;: {
        &#34;slim/slim&#34;: &#34;2.*&#34;
    }
}
&lt;/pre&gt;

&lt;h3 id=&#34;passo-3-8211-instalar-as-depend√™ncias&#34;&gt;Passo 3 &amp;#8211; Instalar as depend√™ncias&lt;/h3&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;composer install&lt;/pre&gt;

&lt;p&gt;Caso voc√™ n√£o tenha o Composer, as suas vari√°veis¬†de ambiente dever√£o ser assim:&lt;/p&gt;

&lt;pre&gt;php composer.phar install&lt;/pre&gt;

&lt;h3 id=&#34;passo-4-8211-cria√ß√£o-da-app&#34;&gt;Passo 4 &amp;#8211; Cria√ß√£o da app&lt;/h3&gt;

&lt;p&gt;Crie um arquivo &lt;code&gt;index.php&lt;/code&gt; e dentro dele coloque:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
require &#39;vendor/autoload.php&#39;;

//instancie o objeto
$app = new \Slim\Slim();

//defina a rota
get(&#39;/&#39;, function () { 
  echo &#34;Hello, World!&#34;; 
}); 
//rode a aplica√ß√£o Slim 
$app-&amp;gt;run();&lt;/pre&gt;

&lt;p&gt;Se voc√™ acessar &lt;code&gt;http://localhost/api/&lt;/code&gt; voc√™ ver√° a mensagem &lt;strong&gt;&amp;#8220;Hello World!&amp;#8221;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Mas n√£o √© isso que queremos, queremos uma API REST que retorne um JSON. Ent√£o vamos ver um exemplo bem simples. O Slim tamb√©m trabalha com templates, ent√£o dentro do diret√≥rio da nossa aplica√ß√£o vamos criar um diret√≥rio chamado de &lt;code&gt;templates&lt;/code&gt; e dentro dele criaremos um arquivo chamado &lt;code&gt;default.php&lt;/code&gt;, neste arquivo coloque o seguintes conte√∫do:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php 
header(&#39;Content-Type: application/json; charset=utf-8&#39;);
echo json_encode($data);
&lt;/pre&gt;

&lt;p&gt;Agora voltando ao nosso arquivo &lt;code&gt;index.php&lt;/code&gt; edite-o deixando da seguinte forma:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
require &#39;vendor/autoload.php&#39;;

//instancie o objeto
$app = new \Slim\Slim(array(
&#39;templates.path&#39; =&amp;gt; &#39;templates&#39;
));

//defina a rota
$app-&amp;gt;get(&#39;/&#39;, function () use ($app){ 
  //defina
  $data = array(&#34;data&#34;=&amp;gt;array(&#34;Hello&#34;=&amp;gt;&#34;World!&#34;)); 
  //set o arquivo de template
  $app-&amp;gt;render(&#39;default.php&#39;,$data,200); 
}); 

//rode a apli√ßica√ß√£o Slim
$app-&amp;gt;run();&lt;/pre&gt;

&lt;p&gt;Quando voc√™ acessar a url novamente voc√™ ver√° algo como:&lt;/p&gt;

&lt;pre class=&#34;lang-json&#34;&gt;{&#34;Hello&#34;:&#34;World!&#34;}
&lt;/pre&gt;

&lt;p&gt;Agora vamos incrementar mais. No mesmo arquivo &lt;code&gt;index.php&lt;/code&gt; antes de &lt;code class=&#34;lang-php&#34;&gt;$app-&amp;gt;run();&lt;/code&gt; adicione:&lt;/p&gt;

&lt;pre&gt;$app-&amp;gt;group(&#39;/users&#39;,function() use ($app){

  //rota para a home
  $app-&amp;gt;get(&#39;/&#39;,function() use ($app){
    //exemplo de lista de usuarios
    $users = array(
     &#39;users&#39;=&amp;gt;array(
       &#39;jo&#39;=&amp;gt;&#39;senhadejo&#39;,
       &#39;luca&#39;=&amp;gt;&#39;senhaluca&#39;,
       &#39;yasmin&#39;=&amp;gt;&#39;senhayasmin&#39;,
       &#39;eric&#39;=&amp;gt;&#39;seric&#39;
     )
    );
    $data = array(
      &#39;data&#39;=&amp;gt;$users
      );
    $app-&amp;gt;render(&#39;default.php&#39;,$data,200);
  });

  //rota para login
  $app-&amp;gt;post(&#39;/login/&#39;,function() use ($app){
    if(isset($_POST))
    {
      $data = $_POST;
      $app-&amp;gt;render(&#39;default.php&#39;,$data,200);
    }
    else
    {
      $app-&amp;gt;render(404);
    }
  });

});
&lt;/pre&gt;

&lt;p&gt;Caso voc√™ esteja acessando o sistema por subdiret√≥rio crie um arquivo chamado &lt;code&gt;.htaccess&lt;/code&gt; com o seguinte conte√∫do:&lt;/p&gt;

&lt;pre&gt;RewriteEngine On
RewriteBase /api/
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /api/index.php [L]
&lt;/pre&gt;

&lt;p&gt;Perceba que adicionei o m√©todo group no arquivo &lt;code&gt;index.php.&lt;/code&gt;¬†O Slim trabalha tamb√©m com grupos de rotas, ent√£o √© poss√≠vel criar v√°rios grupos com rotas pr√≥prias, dessa forma podemos¬†organizar o c√≥digo e n√£o ter que ficar digitando o¬†mesmo c√≥digo¬†v√°rias vezes. Com o grupo de¬†rotas chamado /users tudo que tiver dentro dele dever√° vir precedido de /users ex: (/users/login/, /users/update/).&lt;/p&gt;

&lt;p&gt;Acessando &lt;code&gt;http://localhost/api/users/&lt;/code&gt; voc√™ ver√° uma lista de usu√°rios, caso acesse &lt;code&gt;http://localhost/api/users/login/&lt;/code&gt; voc√™ ver√° uma p√°gina de erro. Isso ocorre porque setamos apenas uma rota POST para /users/login/ e como voc√™ acessou via GET o sistema redirecionou pois n√£o existe a rota GET para /users/login/.&lt;/p&gt;

&lt;p&gt;Daqui para frente √© s√≥ continuar implementando coisas novas, criando uma classe para conectar ao banco de dados, utilizando outros verbos HTTP, novos templates e etc. Voc√™ pode criar classes e us√°-las normalmente √© s√≥ inclu√≠-las com o require e instanciar o objeto;&lt;/p&gt;

&lt;p&gt;O post termina aqui. O link para documenta√ß√£o do Slim √© esse &lt;a href=&#34;http://docs.slimframework.com/&#34;&gt;http://docs.slimframework.com/&lt;/a&gt; divirtam-se e m√£os a obra! ;D&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>