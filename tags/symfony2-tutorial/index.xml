<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Symfony2 Tutorial on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/symfony2-tutorial/index.xml</link>
    <description>Recent content in Symfony2 Tutorial on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/symfony2-tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Iniciando com Symfony 2 – Parte 02</title>
      <link>https://tableless.github.io/hugo-public/iniciando-com-symfony-2-parte-02/</link>
      <pubDate>Mon, 09 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/iniciando-com-symfony-2-parte-02/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/02/symfony-logo-tableless.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/02/symfony-logo-tableless.png&#34; alt=&#34;Symfony logo&#34; width=&#34;720&#34; height=&#34;450&#34; class=&#34;alignnone size-full wp-image-46879&#34; srcset=&#34;uploads/2015/02/symfony-logo-tableless.png 720w, uploads/2015/02/symfony-logo-tableless-222x139.png 222w, uploads/2015/02/symfony-logo-tableless-400x250.png 400w&#34; sizes=&#34;(max-width: 720px) 100vw, 720px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depois de já instalado o Symfony 2, como postado no &lt;a title=&#34;Iniciando com Symfony2&#34; href=&#34;http://tableless.com.br/iniciando-com-symfony-2/&#34; target=&#34;_blank&#34;&gt;artigo anterior que escrevi&lt;/a&gt;, vamos avançar nosso processo criando um simples blog.&lt;/p&gt;

&lt;p&gt;É claro que o Symfony é para projetos maiores, mas para efeito de didática, achei um bom começo, espero que gostem.&lt;/p&gt;

&lt;h2 id=&#34;bundle-o-coração-do-symfony&#34;&gt;Bundle o coração do symfony&lt;/h2&gt;

&lt;p&gt;O Symfony trabalha com bundle (pacote), que é um conjunto de códigos que pode ser reutilizado em outros projetos. Simplificando: são componentes prontos, que facilitam nossa vida na hora de desenvolver. Podemos criar um bundle do zero, como vamos fazer aqui, ou configurar um já pronto.&lt;/p&gt;

&lt;p&gt;Antes de criarmos de nosso primeiro bundle, vamos fazer uma pequena modificação no projeto. Não vamos precisar do bundle AppBundle, só usamos para a introdução.&lt;/p&gt;

&lt;p&gt;Exclua a pasta AppBundle como mostrado na imagem, caminho src/AppBundle.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/02/01.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/02/01.png&#34; alt=&#34;Imagem pastas app/AppBundle&#34; width=&#34;750&#34; height=&#34;403&#34; class=&#34;alignnone size-full wp-image-46808&#34; srcset=&#34;uploads/2015/02/01.png 750w, uploads/2015/02/01-259x139.png 259w, uploads/2015/02/01-400x215.png 400w&#34; sizes=&#34;(max-width: 750px) 100vw, 750px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vamos apagar o registro desse bundle que acabamos de excluir, pois todos os bundles são registrados no AppKernel para que possamos usá-los.&lt;/p&gt;

&lt;p&gt;Entre no arquivo app/AppKernel.php e apague a linha &amp;#8220;new AppBundle\AppBundle()&amp;#8221;, no meu caso a linha 19.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php

use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Config\Loader\LoaderInterface;

class AppKernel extends Kernel
{
    public function registerBundles()
    {
        $bundles = array(
            new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
            new Symfony\Bundle\SecurityBundle\SecurityBundle(),
            new Symfony\Bundle\TwigBundle\TwigBundle(),
            new Symfony\Bundle\MonologBundle\MonologBundle(),
            new Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle(),
            new Symfony\Bundle\AsseticBundle\AsseticBundle(),
            new Doctrine\Bundle\DoctrineBundle\DoctrineBundle(),
            new Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle(),
//apague    new AppBundle\AppBundle(),    caso contrário acarretará em erro...
        );

        if (in_array($this-&amp;gt;getEnvironment(), array(&#39;dev&#39;, &#39;test&#39;))) {
            $bundles[] = new Symfony\Bundle\DebugBundle\DebugBundle();
            $bundles[] = new Symfony\Bundle\WebProfilerBundle\WebProfilerBundle();
            $bundles[] = new Sensio\Bundle\DistributionBundle\SensioDistributionBundle();
            $bundles[] = new Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle();
        }

        return $bundles;
    }

    public function registerContainerConfiguration(LoaderInterface $loader)
    {
        $loader-&amp;gt;load(__DIR__.&#39;/config/config_&#39;.$this-&amp;gt;getEnvironment().&#39;.yml&#39;);
    }
}

&lt;/pre&gt;

&lt;p&gt;Também devemos excluir a rota desse bundle.&lt;/p&gt;

&lt;p&gt;Entre no arquivo app/config/routing.yml e apague as linhas abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-yml&#34;&gt;app:
    resource: @AppBundle/Controller/
    type:     annotation
&lt;/pre&gt;

&lt;p&gt;Cuidado caso tenha feito alguma modificação desde a instalação, no meu caso, estou dando continuidade a partir da instalação, e apagando as linhas acima, meu arquivo routing.yml, ficou vazio.&lt;/p&gt;

&lt;h2 id=&#34;criando-um-bundle-utilizando-o-componente-console-do-symfony&#34;&gt;Criando um bundle utilizando o componente console do Symfony&lt;/h2&gt;

&lt;p&gt;Vamos criar nosso bundle! Podemos fazer isso codificando, porém o Symfony 2 nos traz um ferramenta poderosa e fantástica, o componente cosole, que já vem instalado em nossa aplicação, ou podemos instalá-lo separadamente pelo &lt;a href=&#34;https://packagist.org/packages/symfony/console&#34; title=&#34;Symfony Console&#34; target=&#34;_blank&#34;&gt;packagist&lt;/a&gt;, via composer.&lt;/p&gt;

&lt;p&gt;Vamos lá.&lt;/p&gt;

&lt;p&gt;Entre na pasta do projeto pelo terminal:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ cd symfony
&lt;/pre&gt;

&lt;p&gt;Primeiramente, para vermos o que o console do symfony é capaz, vamos digitar no terminal:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ php app/console
&lt;/pre&gt;

&lt;p&gt;Com este comando seremos apresentados à uma lista de comandos que podemos efetuar em nossa aplicação pelo componente console do Symfony. Se instalarmos alguns componentes adicionais do symfony, essa lista pode aumentar, mas não é nosso caso agora, vamos dar continuidade!&lt;/p&gt;

&lt;p&gt;Para criarmos nosso bunble, digitamos no terminal:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ php app/console generate:bundle
&lt;/pre&gt;

&lt;p&gt;Após darmos o enter aparecerá a seguinte tela, que é um assistente do Symfony para nos ajudar na geração do bundle:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/02/02.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/02/02.png&#34; alt=&#34;Criando bundle pelo symfony console&#34; width=&#34;750&#34; height=&#34;403&#34; class=&#34;alignnone size-full wp-image-46838&#34; srcset=&#34;uploads/2015/02/02.png 750w, uploads/2015/02/02-259x139.png 259w, uploads/2015/02/02-400x215.png 400w&#34; sizes=&#34;(max-width: 750px) 100vw, 750px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O symfony nos pede para digitarmos nossa namespace, que é o caminho completo do nosso bundle, primeiramente, temos que dar um nome para nosso vendor, caso não entenda, sugiro a &lt;a href=&#34;http://www.php-fig.org/psr/psr-4/&#34; title=&#34;PSR-04&#34; target=&#34;_blank&#34;&gt;leitura da PSR-4&lt;/a&gt;, em meus projetos particulares, coloco a sigla do meu nome como vendor &amp;#8220;CJSN&amp;#8221;, porém você pode colocar o nome do seu projeto, do seu cliente, etc&amp;#8230; Aqui vamos colocar Tableless, em seguida o nome de nosso bundle.&lt;/p&gt;

&lt;p&gt;Então digitamos&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ Bundle namespace: Tableless/CoreBundle
&lt;/pre&gt;

&lt;p&gt;Ao darmos enter, o Symfony nos pergunta como esse bundle vai ser reconhecido em nosso projeto e nos sugere um nome: TablelessCoreBundle&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ Bundle name [TablelessCoreBundle]:
&lt;/pre&gt;

&lt;p&gt;Você pode simplificar digitando apenas CoreBundle, em meu caso vou deixar como está, gosto assim em meus projetos, deixando-os padrão.&lt;/p&gt;

&lt;p&gt;E damos enter.&lt;/p&gt;

&lt;p&gt;Agora a pergunta é: Qual o caminho que queremos instalar nosso bundle?&lt;/p&gt;

&lt;p&gt;Por padrão vamos deixá-lo na pasta src/, somente damos enter.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ Target directory [/home/candidosouza/tableless/symfony/src]:
&lt;/pre&gt;

&lt;p&gt;Como vamos fazer a configuração de nosso bundle?&lt;/p&gt;

&lt;p&gt;Digitamos annotation e enter:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ Configuration format (yml, xml, php, or annotation): annotation
&lt;/pre&gt;

&lt;p&gt;A próxima pergunta é: Se queremos que ele gere toda a estrutura de diretórios de um bundle? Não, apenas damos um enter.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ Do you want to generate the whole directory structure [no]?
&lt;/pre&gt;

&lt;p&gt;Nos pergunta sobre a confirmação de geração do bundle, damos enter.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ Do you confirm generation [yes]? 
&lt;/pre&gt;

&lt;p&gt;Desejamos adicionar as configurações no AppKernel? Sim queremos, somente digitamos enter.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ Confirm automatic update of your Kernel [yes]?
&lt;/pre&gt;

&lt;p&gt;E pergunta se queremos inserir rotas para esse bundle, digitamos enter.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ Confirm automatic update of the Routing [yes]? 
&lt;/pre&gt;

&lt;p&gt;E pronto, nosso bundle está criado, veja as imagems abaixo para comparação.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/02/03.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/02/03.png&#34; alt=&#34;Finalizando criação de bundle&#34; width=&#34;750&#34; height=&#34;403&#34; class=&#34;alignnone size-full wp-image-46843&#34; srcset=&#34;uploads/2015/02/03.png 750w, uploads/2015/02/03-259x139.png 259w, uploads/2015/02/03-400x215.png 400w&#34; sizes=&#34;(max-width: 750px) 100vw, 750px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/02/03-1.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/02/03-1.png&#34; alt=&#34;Imagem finalizada CoreBundle&#34; width=&#34;750&#34; height=&#34;403&#34; class=&#34;alignnone size-full wp-image-46875&#34; srcset=&#34;uploads/2015/02/03-1.png 750w, uploads/2015/02/03-1-259x139.png 259w, uploads/2015/02/03-1-400x215.png 400w&#34; sizes=&#34;(max-width: 750px) 100vw, 750px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para vermos se está tudo certo, podemos entrar em nosso navegador e digitar a rota exemplo criada pelo Symfony: @Route(&amp;#8220;/hello/{name}&amp;#8221;), então digitamos a url no navegador: &lt;a href=&#34;http://127.0.0.1:8000/hello/Tableless&#34;&gt;http://127.0.0.1:8000/hello/Tableless&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lembrando que o servidor deve estar iniciado, você pode ver isso no tutorial anterior. Aparecerá a mensagem &amp;#8220;Hello Tableless!&amp;#8221;, se você notar, verá que a debug toolbar, a barra de ferramentas do Symfony, não está aparecendo, mas não vamos nos preocupar com isso, pois não usaremos essa rota, ela é gerada apenas para exemplo.&lt;/p&gt;

&lt;p&gt;Após a crianção do nosso bundle, o CoreBundle, vamos repetir a operação, e criar um novo bundle, agora com o nome ModelBundle.&lt;/p&gt;

&lt;p&gt;Novamente digitamos&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ php app/console generate:bundle
&lt;/pre&gt;

&lt;p&gt;em seguida:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ Tableless/ModelBundle
&lt;/pre&gt;

&lt;p&gt;E todo o processo anteriormente feito&amp;#8230;&lt;/p&gt;

&lt;p&gt;A primeira coisa a fazer depois de criarmos o ModelBundle, é excluir a rota gerada pelo Symfony, é claro que poderíamos ter feito isso na hora da criação, pelo terminal, quando ele nos faz a última pergunta: Confirmar atualização automática das Rotas[sim]?&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ Confirm automatic update of the Routing [yes]? 
&lt;/pre&gt;

&lt;p&gt;Era só termos digitado &amp;#8220;no&amp;#8221;, mas para efeito de didática, e para não ficarmos duplicando código nesse tutorial, preferi deixar assim.&lt;/p&gt;

&lt;p&gt;Vamos entrar no arquivo app/config/route.yml e vamos apagar a rota gerada para esse bundle.&lt;/p&gt;

&lt;p&gt;Apague as linhas abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;tableless_model:
    resource: &#34;@TablelessModelBundle/Controller/&#34;
    type:     annotation
    prefix:   /
&lt;/pre&gt;

&lt;p&gt;Deixando somente a rota do CoreBundle criada anteriormente.&lt;/p&gt;

&lt;p&gt;Vamos excluir também, as pastas Controller, e views, pois não vamos usar esses arquivos nesse bundle.&lt;/p&gt;

&lt;p&gt;Caminhos das pastas a serem excluidas:&lt;/p&gt;

&lt;p&gt;src/Tableless/ModelBundle/Controller&lt;/p&gt;

&lt;p&gt;src/Tableless/ModelBundle/Resources/views&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/02/04.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/02/04.png&#34; alt=&#34;Excluindo pastas&#34; width=&#34;750&#34; height=&#34;403&#34; class=&#34;alignnone size-full wp-image-46859&#34; srcset=&#34;uploads/2015/02/04.png 750w, uploads/2015/02/04-259x139.png 259w, uploads/2015/02/04-400x215.png 400w&#34; sizes=&#34;(max-width: 750px) 100vw, 750px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;concluindo&#34;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;Pronto, nosso simples projeto, está configurado e pronto para darmos inicio aos demais processos, neste momento em que se encontra o mesmo, vou comitar, e subir o projeto para o &lt;a href=&#34;https://github.com/candidosouza/tableless&#34; title=&#34;GitHub do projeto&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;. No próximo tutorial veremos como criar entidades com o Doctrine ORM em conjunto com o Symfony, para inserirmos nossos posts no banco de dados.&lt;/p&gt;

&lt;p&gt;Para finalizarmos, recomendo novamente a &lt;a href=&#34;http://symfony.com/doc/current/index.html&#34; title=&#34;Documentação do Symfony&#34; target=&#34;_blank&#34;&gt;documentação do Symfony&lt;/a&gt;, caso queiram fazer testes, estudar, se aprofundar mais no assunto!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>