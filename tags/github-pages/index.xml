<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github Pages on Tableless</title>
    <link>http://tableless.com.br/tags/github-pages/index.xml</link>
    <description>Recent content in Github Pages on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/github-pages/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Criando um “blog” no Github com tinypress.</title>
      <link>http://tableless.com.br/criando-um-blog-github-com-tinypress/</link>
      <pubDate>Fri, 25 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/criando-um-blog-github-com-tinypress/</guid>
      <description>

&lt;p&gt;Amigos, amigos, amigos, a internet é imprevisível. Há um tempo atrás eu trouxe pra vocês o novo CMS chamado &lt;a href=&#34;http://tableless.com.br/ghost-simples-e-perfeita-plataforma-para-publicacoes/&#34;&gt;Ghost&lt;/a&gt;. E eu, navegando por ai, vagarosamente, me esbarro (novamente) nessa ferramenta excepcional chamada &lt;a href=&#34;https://tinypress.co/&#34;&gt;Tinypress&lt;/a&gt;, que é praticamente um novo &amp;#8220;gerenciador&amp;#8221; de &lt;a href=&#34;http://reidark.github.io/criando-paginas-no-github/&#34;&gt;blog&lt;/a&gt; com integração ao Github.&lt;/p&gt;

&lt;h2 id=&#34;eu-não-entendo-nada-de-github-e-agora&#34;&gt;Eu não entendo nada de Github, e agora?&lt;/h2&gt;

&lt;p&gt;Calma, muita calma. Não precisa ficar desesperado, nesse básico tutorial você vai ver que não precisa entender muito de github para ter seu próprio blog hospedado lá. O tinypress faz praticamente tudo automático, e você só vai mexer nos códigos caso você queira, e, se quiser, acompanhe porque vou mostrar nesse artigo como pode ser feito.&lt;/p&gt;

&lt;h2 id=&#34;o-que-é-o-tinypress&#34;&gt;O que é o Tinypress?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/Captura-de-Tela-2014-04-23-às-20.51.26.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/Captura-de-Tela-2014-04-23-às-20.51.26.png&#34; alt=&#34;Tinypress Github Blog&#34; width=&#34;682&#34; height=&#34;258&#34; class=&#34;aligncenter size-full wp-image-42246&#34; srcset=&#34;uploads/2014/04/Captura-de-Tela-2014-04-23-às-20.51.26.png 682w, uploads/2014/04/Captura-de-Tela-2014-04-23-às-20.51.26-400x151.png 400w&#34; sizes=&#34;(max-width: 682px) 100vw, 682px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Antes de tudo eu já aviso: Ele cria um blog estático. Ok, pra alguns isso não seria novidade nenhuma, mas para quem não sabe o que é: Blog estático é basicamente páginas HTML ou Markdown (nesse caso) serem geradas em forma de post. Sim, não existe conexão com um banco de dados para puxar informações, é tudo estático, tá tudo ali, tudo escrito em documento já pronto. O que o tinypress faz é puxar essas páginas e exibir elas em forma de post. Mais ou menos como funciona o Middleman ou o Jekyll, para quem já se aventurou por estas bandas.&lt;/p&gt;

&lt;p&gt;O tinypress funciona basicamente assim:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Você entra no site e libera o acesso no github para a aplicação do tinypress.&lt;/li&gt;
&lt;li&gt;Escolha entre os templates já prontos.&lt;/li&gt;
&lt;li&gt;Escolher o nome do blog e a quantidade de posts por página.&lt;/li&gt;
&lt;li&gt;Se você não tiver um repositório de página pessoal ainda (seunome.github.io) ele automaticamente cria uma (repositório público).&lt;/li&gt;
&lt;li&gt;Pronto, você já está hábil para começar a fazer publicações.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;interface-e-como-postar&#34;&gt;Interface e como postar&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/Captura-de-Tela-2014-04-23-às-21.12.44.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/Captura-de-Tela-2014-04-23-às-21.12.44.png&#34; alt=&#34;Tinypress Interface&#34; width=&#34;728&#34; height=&#34;254&#34; class=&#34;aligncenter size-full wp-image-42248&#34; srcset=&#34;uploads/2014/04/Captura-de-Tela-2014-04-23-às-21.12.44.png 728w, uploads/2014/04/Captura-de-Tela-2014-04-23-às-21.12.44-400x139.png 400w&#34; sizes=&#34;(max-width: 728px) 100vw, 728px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A interface é básica, porém, é tudo que você precisa para escrever um texto, artigo ou qualquer coisa para um blog. Sim, quando eu digo básico, é &lt;strong&gt;bem&lt;/strong&gt; básico mesmo, hehe. Mas existem coisas bacanas na publicação do post, tem como escolher as tags, categorias, url amigável entre outros. A é, também tem como você escolher o post como publicado ou apenas draft (rascunho).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/Captura-de-Tela-2014-04-23-às-21.21.01.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/Captura-de-Tela-2014-04-23-às-21.21.01.png&#34; alt=&#34;Tinypress advanced options&#34; width=&#34;665&#34; height=&#34;284&#34; class=&#34;aligncenter size-full wp-image-42249&#34; srcset=&#34;uploads/2014/04/Captura-de-Tela-2014-04-23-às-21.21.01.png 665w, uploads/2014/04/Captura-de-Tela-2014-04-23-às-21.21.01-400x170.png 400w&#34; sizes=&#34;(max-width: 665px) 100vw, 665px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Assim como as páginas no github, o Tinypress usa a linguagem Markdown para os posts. Caso você não saiba &amp;#8220;escrever&amp;#8221; em .markdown (.md) olhe sua syntax básica &lt;a href=&#34;http://daringfireball.net/projects/markdown/syntax&#34;&gt;aqui&lt;/a&gt;. Relaxa, não é nada difícil, dá pra aprender rapidinho, até porquê você não vai usar nada avançado, por isso foque mais em aprender o uso de links, títulos, imagens e afins. Recomendo fortemente aprender essa linguagem não apenas para o blog, mas para te beneficiar ao escrever para alguns repositórios do github em outros projetos, visto que a linguagem usada é o markdown.&lt;/p&gt;

&lt;p&gt;tinypress tem resquicios de que foi criada com Jekyll, um &amp;#8220;gerador&amp;#8221; estático de &amp;#8220;blogs&amp;#8221;, você não precisa saber Jekyll para manusear os posts e coisas do tipo, mas caso queira mudar alguma coisa no código principal, aqui fica a dica do &lt;a href=&#34;http://jekyllrb.com/docs/github-pages/&#34;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;e-o-repositório-como-fica&#34;&gt;E o repositório, como fica?&lt;/h2&gt;

&lt;p&gt;Assim como eu expliquei no começo desse artigo, usarei algumas explicações básicas no meio do texto para os menos familiarizados conhecerem melhor o github.&lt;/p&gt;

&lt;p&gt;Pra quem ainda não se aventurou no universo do github, &lt;strong&gt;repositório&lt;/strong&gt; (público) é como se fosse uma pasta sua, com arquivos do formato que desejar para outras pessoas verem (ou não) suas aplicações, códigos e outras coisas, e assim formar um grande universo &lt;em&gt;open source&lt;/em&gt;. Não preciso nem falar que é online né, haha.&lt;/p&gt;

&lt;p&gt;O tinypress cria seu repositório de blog(seunome.github.io), ou seja, sua página no github. Dentro dele ele coloca os arquivos necessários para o blog rodar. Para verificar como ficou o meu repositório, entre &lt;a href=&#34;https://github.com/reidark/reidark.github.io&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lembrete:&lt;/strong&gt; Você só altera os arquivos se você quiser, nada do que está aqui é obrigatório, leia caso realmente queira alterar alguma coisa no template.&lt;/p&gt;

&lt;p&gt;Você pode alterar os arquivos na unha. Eu não sou o tipo de cara que gosta de mexer no que tá queto, mas, com certeza, num futuro próximo vou alterar um pouco do CSS do tema e talvez até criar um tema próprio. E como fazer isso? Navegue nas pastas do seu repositório. Como nós vamos ir direto na pasta onde se encontra o tema (css) vá até: &lt;em&gt;seu-repositório/public/css&lt;/em&gt; (&lt;a href=&#34;https://github.com/reidark/reidark.github.io/tree/master/public/css&#34;&gt;reidark.github.io/public/css&lt;/a&gt;). Pronto, ai está todo o CSS dá página, altere como desejar.&lt;/p&gt;

&lt;p&gt;*** Como eu altero esses arquivos:?**&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;R:&lt;/strong&gt; Olha, pra alterar meus repositórios no Github, eu gosto de usar o github for PC/MAC. É o software do github que você baixa na sua máquina e consegue editar facilmente seus repositórios. Você pode fazer o download aqui: &lt;a href=&#34;https://windows.github.com/&#34;&gt;Windows&lt;/a&gt; ou &lt;a href=&#34;https://mac.github.com/&#34;&gt;MAC&lt;/a&gt;. Depois de baixado, é só abrir e logar sua conta. Depois de logar sua conta você terá acesso a todos os seus repositórios, para alterá-los, basta &amp;#8220;clonar&amp;#8221; esse repositório para algum lugar do seu computador. Pronto, agora faça suas alterações, brinque, fuce. Após você salvar o arquivo, no software do github vai ter um &amp;#8220;commit pendente&amp;#8221; que seria basicamente uma alteração no arquivo original. Basta você ir lá, &amp;#8220;commitar&amp;#8221; (enviar) essa alteração que é basicamente apertar 1 botão e pronto!&lt;/p&gt;

&lt;p&gt;Caso você tenha dúvidas para alterar os arquivos, é só olhar naquela mesma página em que você efetuou o download, lá tem explicações.&lt;/p&gt;

&lt;p&gt;Você também pode usar o Git (provavelmente os mais experientes com versionamento irão fazer isso), mas isso eu já consideraria um pouco avançado, porém, você é livre para &lt;a href=&#34;http://tableless.com.br/iniciando-no-git-parte-1/&#34;&gt;aprender Git&lt;/a&gt; (altíssimo recomendado).&lt;/p&gt;

&lt;h2 id=&#34;eu-devo-fazer-esse-blog&#34;&gt;Eu devo fazer esse blog?&lt;/h2&gt;

&lt;p&gt;É aqui que eu queria chegar. Eu recomendaria esse tipo de blog estático para desenvolvedores e pessoas evangelizadoras do &lt;em&gt;open source&lt;/em&gt;. Lembre-se, o seu blog é código aberto (repositório público) e qualquer um pode xeretar por lá, isso significa que eles podem te ajudar, enviando commits para melhorar, ou apenas olhar.&lt;/p&gt;

&lt;p&gt;Não coloque esperanças em criar um baita blog de entretenimento com essa ferramenta, claramente ela não foi feita pra isso (caso você queira tentar, você é livre, meu amigo). Mas eu defendo totalmente a idéia de desenvolvedores criarem blogs para a postagem de artigos pessoais e outras coisas para o avanço do código aberto, já que nossa comunidade é basicamente movida a isso.&lt;/p&gt;

&lt;p&gt;Sejam livres para inovar, até porque essas coisas são feitas para isso!&lt;/p&gt;

&lt;p&gt;Espero que eu tenha conseguido apresentar essa nova ferramenta bacana pra vocês. Caso ela tenha algumas novas versões, pode ter certeza que eu volto pra mostrar, haha.&lt;/p&gt;

&lt;p&gt;Alguns links que podem ser interessantes:&lt;/p&gt;

&lt;p&gt;Site Oficial &amp;#8211; &lt;a href=&#34;https://tinypress.co/&#34;&gt;tinypress.co&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twitter Oficial &amp;#8211; &lt;a href=&#34;https://twitter.com/tinypress_co&#34;&gt;@tinypress&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meu blog criado com tinypress (básico) &amp;#8211; &lt;a href=&#34;http://reidark.github.io/&#34;&gt;reidark.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Abraços 🙂&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando páginas web para seus repositórios com o GitHub Pages</title>
      <link>http://tableless.com.br/criando-paginas-web-para-seus-repositorios-com-o-github-pages/</link>
      <pubDate>Mon, 29 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/criando-paginas-web-para-seus-repositorios-com-o-github-pages/</guid>
      <description>

&lt;p&gt;O github é um dos principais meios de compartilhamento de projetos disponíveis na internet, lá, encontram-se desde projetos simples até projetos extremamente complexos, como o kernel do linux (&lt;a href=&#34;https://github.com/torvalds/linux&#34;&gt;https://github.com/torvalds/linux&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Visando expandir a forma de divulgação de projetos, o github possui um serviço chamado ‘github pages’, que serve principalmente para prover páginas na internet sobre os repositórios. Essas páginas podem servir para divulgar exemplos, demos, documentações e qualquer outro tipo de informação sobre o seu projeto. E o melhor, esse serviço é de graça, basta ter uma conta no github! 😀&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/07/its-free.png&#34;&gt;&lt;img class=&#34;size-full wp-image-38035 aligncenter&#34; alt=&#34;its-free&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/07/its-free.png&#34; width=&#34;520&#34; height=&#34;300&#34; srcset=&#34;uploads/2013/07/its-free.png 520w, uploads/2013/07/its-free-291x168.png 291w&#34; sizes=&#34;(max-width: 520px) 100vw, 520px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;conhecimentos-iniciais&#34;&gt;Conhecimentos iniciais&lt;/h2&gt;

&lt;p&gt;Para conseguirmos criar páginas com o github não é necessário que se tenha um conhecimento avançado sobre a ferramenta, visto que veremos que ela disponibiliza um gerador automático de páginas que gera o conteúdo a partir de uma sintaxe bem simples (github flavored markdown). Porém, se você quiser fazer algumas coisas um pouco mais elaboradas com as suas páginas, é necessário conhecer alguns dos principais conceitos envolvidos com o github, como push, commit, fetch e pull.&lt;/p&gt;

&lt;p&gt;Portanto, se quiser descobrir um pouco mais sobre o github, recomendo que seja feita a leitura dos seguintes artigos disponíveis aqui no tableless:&lt;/p&gt;

&lt;p&gt;Iniciando no GIT &amp;#8211; Parte 1: &lt;a href=&#34;http://tableless.com.br/iniciando-no-git-parte-1/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://tableless.com.br/iniciando-no-git-parte-1/&#34;&gt;http://tableless.com.br/iniciando-no-git-parte-1/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Iniciando no GIT &amp;#8211; Parte 2: &lt;a href=&#34;http://tableless.com.br/iniciando-no-git-parte-2/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://tableless.com.br/iniciando-no-git-parte-2/&#34;&gt;http://tableless.com.br/iniciando-no-git-parte-2/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;criando-páginas-automaticamente&#34;&gt;Criando páginas automaticamente&lt;/h2&gt;

&lt;p&gt;Uma das opções que o github nos dá é a criação automática de páginas. Com ela, podemos criar rapidamente uma página com conteúdo e inclusive escolher um dos templates disponibilizados pelo github para estilizarmos nossa página.&lt;/p&gt;

&lt;p&gt;Para criar uma página utilizando o github pages clique na opção ‘settings’ do seu repositório:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/07/github-settings-option.png&#34;&gt;&lt;img class=&#34;size-full wp-image-38034 aligncenter&#34; alt=&#34;github-settings-option&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/07/github-settings-option.png&#34; width=&#34;113&#34; height=&#34;44&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O github irá abrir as opções de configurações do repositório, lá, poderá ser encontrado um botão chamado ‘Automatic page generator’, dentro da seção &amp;#8216;GitHub Pages&amp;#8217;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/07/github-pages-box.png&#34;&gt;&lt;img class=&#34;size-medium wp-image-38031 aligncenter&#34; alt=&#34;github-pages-box&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/07/github-pages-box-588x148.png&#34; width=&#34;588&#34; height=&#34;148&#34; srcset=&#34;uploads/2013/07/github-pages-box-588x148.png 588w, uploads/2013/07/github-pages-box-329x83.png 329w, uploads/2013/07/github-pages-box-660x166.png 660w, uploads/2013/07/github-pages-box.png 681w&#34; sizes=&#34;(max-width: 588px) 100vw, 588px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ao clicar nesse botão, você será redirecionado para um formulário contendo alguns campos e um editor de conteúdo, lá, você deverá informar o nome do projeto (que servirá como título na página criada), um subtítulo e o conteúdo que queremos que seja apresentado (em formato de markdown específico do github, referência disponível em &lt;a href=&#34;http://github.github.com/github-flavored-markdown/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://github.github.com/github-flavored-markdown/&#34;&gt;http://github.github.com/github-flavored-markdown/&lt;/a&gt;&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/07/github-pages-form.png&#34;&gt;&lt;img class=&#34;size-medium wp-image-38032 aligncenter&#34; alt=&#34;github-pages-form&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/07/github-pages-form-588x305.png&#34; width=&#34;588&#34; height=&#34;305&#34; srcset=&#34;uploads/2013/07/github-pages-form-588x305.png 588w, uploads/2013/07/github-pages-form-322x168.png 322w, uploads/2013/07/github-pages-form-596x310.png 596w, uploads/2013/07/github-pages-form.png 944w&#34; sizes=&#34;(max-width: 588px) 100vw, 588px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Após informar esses dados, poderemos escolher o layout que queremos. Assim, ao clicarmos no botão ‘Continue to Layouts’ somos redirecionados para um local onde são exibidos alguns templates pré-prontos que github nos disponibiliza. Basta clicar em algum deles para termos uma live-preview de como a nossa página irá ficar:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/07/github-pages-template.png&#34;&gt;&lt;img class=&#34;size-medium wp-image-38033 aligncenter&#34; alt=&#34;github-pages-template&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/07/github-pages-template-474x310.png&#34; width=&#34;474&#34; height=&#34;310&#34; srcset=&#34;uploads/2013/07/github-pages-template-474x310.png 474w, uploads/2013/07/github-pages-template-256x168.png 256w, uploads/2013/07/github-pages-template.png 930w&#34; sizes=&#34;(max-width: 474px) 100vw, 474px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Se você quiser editar o que escreveu, basta clicar no botão ‘edit’, senão, se estiver satisfeito com o resultado, basta clicar no botão ‘publish’.&lt;/p&gt;

&lt;p&gt;Pronto! Já possuímos uma página no github para o nosso repositório.&lt;/p&gt;

&lt;h2 id=&#34;e-como-faço-para-acessar-essa-página&#34;&gt;E como faço para acessar essa página?&lt;/h2&gt;

&lt;p&gt;As páginas criadas pelo github possuem o seguinte formato de endereço:&lt;/p&gt;

&lt;p&gt;http://&lt;span style=&#34;color: #ff0000&#34;&gt;nomedousuario&lt;/span&gt;.github.io/&lt;span style=&#34;color: #ff0000&#34;&gt;nomedorepositorio&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;No meu caso, o endereço ficou disponível da seguinte maneira:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wmartins.github.io/criando-paginas-github-pages/&#34;&gt;http://wmartins.github.io/criando-paginas-github-pages/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Portanto, basta substituir os valores em vermelho para acessar a sua página!&lt;/p&gt;

&lt;h2 id=&#34;erro-404&#34;&gt;Erro 404!?&lt;/h2&gt;

&lt;p&gt;O github demora um pouco (cerca de uns 10 minutos) para criar a sua página e disponibilizá-la, portanto, se você tentar acessá-la e estiver dando um erro 404, não se assuste, em breve ela estará disponível!&lt;/p&gt;

&lt;p&gt;Se você já esperou algum tempo e o erro 404 persiste, verifique se digitou corretamente o endereço e tente novamente.&lt;/p&gt;

&lt;h2 id=&#34;branch-gh-pages&#34;&gt;Branch ‘gh-pages’&lt;/h2&gt;

&lt;p&gt;Mas, qual é a mágica envolvida nisso? Como o github sabe onde está essa minha página recém criada? E se eu quiser adicionar coisas mais complexas, como por exemplo um demo do que estou desenvolvendo?&lt;/p&gt;

&lt;p&gt;A resposta dessa pergunta pode ser respondida ao observarmos os branches do nosso projeto. Ao olharmos a listagem de branches, conseguimos ver que um branch chamado ‘gh-pages’ foi criado automaticamente.&lt;/p&gt;

&lt;p&gt;O gh-pages é o responsável por conter os arquivos que darão vida à nossa página, assim, se o explorarmos, poderemos ver que existem arquivos como ‘index.html’, arquivos ‘.css’ entre outros. Enfim, é um branch que representa toda a página gerada.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/07/github-gh-pages-branch.png&#34;&gt;&lt;img class=&#34;size-full wp-image-38030 aligncenter&#34; alt=&#34;github-gh-pages-branch&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/07/github-gh-pages-branch.png&#34; width=&#34;512&#34; height=&#34;232&#34; srcset=&#34;uploads/2013/07/github-gh-pages-branch.png 512w, uploads/2013/07/github-gh-pages-branch-329x149.png 329w&#34; sizes=&#34;(max-width: 512px) 100vw, 512px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;mas-e-agora-como-edito-a-minha-página&#34;&gt;Mas, e agora? Como edito a minha página?&lt;/h2&gt;

&lt;p&gt;Como essa página é gerada a partir de um branch (o branch gh-pages), é só editarmos os códigos desse branch que automaticamente editamos a página. Para isso, podemos realizar o seguinte procedimento:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Baixamos o branch ‘gh-pages’ no nosso repositório local.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fazemos as modificações necessárias.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fazemos o commit dos arquivos modificados.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Realizamos um push para o branch ‘gh-pages’.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Pronto!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;e-como-eu-baixo-o-branch-gh-pages&#34;&gt;E como eu baixo o branch gh-pages?&lt;/h2&gt;

&lt;p&gt;Para baixar o branch gh-pages devemos realizar um fetch desse branch através do comando:&lt;/p&gt;

&lt;pre class=&#34;lang-git&#34;&gt;git fetch origin gh-pages&lt;/pre&gt;

&lt;p&gt;Após baixar esse branch, simplesmente trocamos o branch em que estamos para o branch gh-pages através do comando:&lt;/p&gt;

&lt;pre class=&#34;lang-git&#34;&gt;git checkout gh-pages&lt;/pre&gt;

&lt;p&gt;Agora é só editar o que desejarmos e realizarmos os pushs e commits para que a a nossa página seja atualizada.&lt;/p&gt;

&lt;h2 id=&#34;já-tenho-um-layout-pronto-que-fiz-manualmente-como-posso-usá-lo-para-gerar-uma-página-no-github&#34;&gt;Já tenho um layout pronto que fiz manualmente, como posso usá-lo para gerar uma página no github?&lt;/h2&gt;

&lt;p&gt;Bom, isso é simples, o github mostra as páginas lendo os arquivos do branch gh-pages, dessa forma, basta ter esse branch criado com um arquivo ‘index.html’ dentro que o github irá exibir a página corretamente.&lt;/p&gt;

&lt;h2 id=&#34;cuidado&#34;&gt;Cuidado:&lt;/h2&gt;

&lt;p&gt;Um único ponto importante para quem quer criar uma página no github manualmente é tomar o cuidado de fazer com que o branch gh-pages seja um branch órfão, ou seja, não tenha nenhum branch ‘pai’ associado. Visto que se este possuir algum branch pai, pode ser que em alguma alteração em algum dos dois cause uma boa dor de cabeça ou no branch pai ou no branch gh-pages após a realização de commits e pushs.&lt;/p&gt;

&lt;h2 id=&#34;como-assim-branch-órfão-como-faço-para-criar-um&#34;&gt;Como assim branch órfão? Como faço para criar um?&lt;/h2&gt;

&lt;p&gt;Criar um branch órfão é um processo bem simples, usualmente, para criarmos um branch usamos o seguinte comando:&lt;/p&gt;

&lt;pre class=&#34;lang-git&#34;&gt;git checkout -b new-branch&lt;/pre&gt;

&lt;p&gt;Porém, esse comando irá estabelecer uma relação entre o branch que estávamos com o branch recém criado, e isso é um problema quando estamos trabalhando no branch para geração de páginas, visto que não queremos associar o código do projeto com o código da página. Dessa forma, podemos usar a opção &amp;#8216;orphan&amp;#8217; para criar um branch desasociado de qualquer pai, nesse caso, já faremos a criação do branch gh-pages:&lt;/p&gt;

&lt;pre class=&#34;lang-git&#34;&gt;git checkout --orphan gh-pages&lt;/pre&gt;

&lt;p&gt;Após criarmos o branch gh-pages, basta adicionar os arquivos (lembre-se de adicionar um arquivo chamado index.html) e realizar o commit e o push dos mesmos.&lt;/p&gt;

&lt;h2 id=&#34;considerações-finais&#34;&gt;Considerações finais&lt;/h2&gt;

&lt;p&gt;Não sei se acontece o mesmo com vocês, mas quando eu vejo um repositório no github, a primeira coisa que eu procuro ver é se o mesmo possui algum demo ou então algum exemplo interessante de utilização.&lt;/p&gt;

&lt;p&gt;No final das contas, por mais que o código seja muito bem elaborado e etc, a melhor forma de atrair as pessoas para o seu repositório é disponibilizando uma página para o mesmo.&lt;/p&gt;

&lt;p&gt;Portanto, minha recomendação é que se você possui um projeto hospedado no github, tente criar uma página para ele. Quem sabe você não acaba atraíndo mais desenvolvedores para ajudar e torne o seu projeto mais legal ainda?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>