<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mercado on Tableless</title>
    <link>http://tableless.com.br/tags/mercado/index.xml</link>
    <description>Recent content in Mercado on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/mercado/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Faz uma animação legal aí!</title>
      <link>http://tableless.com.br/faz-uma-animacao-legal-ai/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/faz-uma-animacao-legal-ai/</guid>
      <description>&lt;p&gt;Sempre que um projeto começa, eu me questiono se a agência entende a importância da animação para o design de interface e como o trabalho do motion designer pode contribuir para o sucesso da experiência interativa, reforçando tudo o que foi pensado desde o nascimento do projeto, lá na arquitetura de informação.&lt;/p&gt;

&lt;p&gt;Muitas vezes, ouvi que o motion designer coloca a mão no projeto para refinar e fazer firulas no site. Isso dava a sensação de que meu trabalho era secundário. Ou então, que se não houvesse prazo suficiente para animar o site, me era dito: escolhe um elemento que você acha importante e faz uma animação legal aí.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Legal! Mas o que é uma “animação legal”?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Infelizmente, a animação é considerada decorativa pela maior parte dos profissionais de desenvolvimento web. E entender animação como algo apenas “legal” torna muito mais difícil de levar essa etapa do processo a sério, quando na verdade é parte essencial do processo de comunicação e entendimento em um projeto interativo.&lt;/p&gt;

&lt;p&gt;Nós usamos o HTML para contar histórias e comunicar grandes quantidades de informação. E a animação nos ajuda a fazer as duas coisas de forma melhor. Imaginemos que a animação é um guia turístico, que permite às pessoas acompanhar a história do seu site sem se perderem. Ela ajuda o olhar a se orientar dentro da interface, encontrar o seu caminho ou estabelecer relações visuais.&lt;/p&gt;

&lt;p&gt;Nossos cérebros e olhos são programados a prestar atenção aos objetos em movimento &amp;#8211; é um reflexo. Mágicos usam o movimento para realizar truques com as mãos. Desta forma, a animação pode ajudar o olho a ver de onde um novo objeto vem ou para onde o objeto foi (e provavelmente saber onde encontrá-lo novamente). Motion não é firula, é necessário e pode melhorar a experiência do usuário e tornar o design mais consistente e real.&lt;/p&gt;

&lt;p&gt;Portanto, a animação de interface preenche eventuais lacunas de compreensão de diversas maneiras:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;É crucial para sugerir interação, bem como criar um estímulo visual para o usuário perceber novas informações numa mudança de status na interface;&lt;/li&gt;
&lt;li&gt;Fornece feedback visual e sinaliza pistas do que vem em seguida;&lt;/li&gt;
&lt;li&gt;Apresenta transições espacialmente lógicas entre telas. Além disso, elementos animados de acordo com as leis da física ajudam as pessoas a memorizar a interface mais facilmente, pois lhes parece familiar e previsível;&lt;/li&gt;
&lt;li&gt;Estilos de animações transmitem mais personalidade ao conteúdo do que qualquer interação estática poderia transmitir;&lt;/li&gt;
&lt;li&gt;Animações bem feitas conquistam os usuários, tornam a experiência mais agradável e divertida e os ajuda a se relacionar de forma melhor com o produto.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hoje, com a propagação das pequenas telas dos devices, que nos leva a implementar grandes interfaces em pequenos espaços, seria confuso e frustrante para o usuário entender as relações espaciais entre layers, abas deslizantes e zooms sem o trabalho do motion designer para ligar os pontos. Assim como na tipografia, que pode apenas servir funcionalmente para a leitura ou pode agregar expressão ao conteúdo, a animação também pode ir além e se moldar para trabalhar em harmonia com o design. A atenção a esse nível de detalhes é o que separa os grandes projetos dos medianos, tanto na tipografia como em animação.&lt;/p&gt;

&lt;p&gt;Apesar da chatice de centenas de terminologias de profissões surgirem a cada mês no Linkedin (sim, já vi coisas como “astronauta de ideias” por lá), nossa área vem se denominando Motion UI. E há indícios de que venha, num futuro próximo, a se chamar UX Choreographer. É algo novo no mundo digital, mas que vem provando sua importância e não só merece uma fatia maior das horas do projeto, como também precisa deixar de ser “apenas” um braço da direção de arte ou da programação dentro das agências para, enfim, se tornar uma área de maior importância e independência.&lt;/p&gt;

&lt;p&gt;Independente, aqui, se refere a tornar-se mais profissional e não somente ser a pessoa que fica sentada sozinha no fundão da agência só recebendo o famoso: “faz alguma coisa legal aí!”.&lt;/p&gt;

&lt;p&gt;As agências e produtoras devem prever o espaço para mais um locutor, mais esse contador de histórias. A animação precisa ter sua voz e movimento devidamente reconhecidos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Para saber mais&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Recomendo ler o artigo &lt;a href=&#34;https://medium.com/@adaptivepath/jedi-principles-of-ui-animation-2b88423b1dac#.gzxg45w5u&#34; target=&#34;_blank&#34;&gt;Jedi Principles of UI Animation&lt;/a&gt;, uma verdadeira aula sobre animação de interface.&lt;/p&gt;

&lt;p&gt;Vale também assistir o vídeo &lt;a href=&#34;https://vimeo.com/93206523&#34; target=&#34;_blank&#34;&gt;Illusion of Life&lt;/a&gt;, sobre os 12 prncípios básicos da animação, de Frank Thomas e Ollie Johnston, animadores dos estúdios Disney.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Por que Python?</title>
      <link>http://tableless.com.br/por-que-python/</link>
      <pubDate>Tue, 29 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/por-que-python/</guid>
      <description>

&lt;p&gt;Eu sou apaixonado por &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;. Muito. Daquele tipo que fala de Python sempre que pode. E uma pergunta que sempre me fazem é: por quê? Vou tentar fazer uma lista dos motivos mais relevantes:&lt;/p&gt;

&lt;h2 id=&#34;1-é-muito-bom-escrever-código-python&#34;&gt;1. É muito bom escrever código Python&lt;/h2&gt;

&lt;p&gt;Geralmente, quando alguém cria uma linguagem de programação, tem em vista um objetivo. Por exemplo, Lisp foi escrita para programação funcional. Java foi escrita para que o mesmo código pudesse rodar em qualquer lugar. PHP foi criada para construir páginas web. E Python foi criada para ser produtiva e fácil de escrever.&lt;/p&gt;

&lt;p&gt;Um programador experiente aprende a sintaxe do Python em algumas poucas horas. O jeito de escrever faz sentido.&lt;/p&gt;

&lt;p&gt;Veja, por exemplo, essa função para calcular um número de &lt;a href=&#34;https://pt.wikipedia.org/wiki/Sequ%C3%AAncia_de_Fibonacci&#34;&gt;Fibonacci&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;def fib(n):
    if n&amp;lt;3:
        return n
    return fib(n-1) + fib(n-2)&lt;/pre&gt;

&lt;p&gt;Note como a sintaxe é simples. Mesmo nas decisões de design que são &amp;#8220;pouco ortodoxas&amp;#8221;, como os blocos baseados na indentação, a decisão foi tomada pensando em produtividade. O modelo de blocos do Python faz com que você precise digitar menos. Além disso, é impossível escrever código não indentado em Python.&lt;/p&gt;

&lt;p&gt;Veja nesse outro exemplo, a função de Fibonacci em uma versão &lt;a href=&#34;https://en.wikipedia.org/wiki/Memoization&#34;&gt;memoized&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;memo = {0:0, 1:1}

def fib(n):
    if not n in memo:
        memo[n] = fib(n-1) + fib(n-2)
    return memo[n]&lt;/pre&gt;

&lt;p&gt;Reparou como é simples? Ao trabalhar com Python, a linguagem nunca está entre você e seu problema. Você pode gastar seu tempo com a lógica de programação, que é o que realmente importa, e não com especificidades da linguagem que você está usando.&lt;/p&gt;

&lt;h2 id=&#34;2-organizar-um-projeto-python-é-muito-fácil&#34;&gt;2. Organizar um projeto Python é muito fácil&lt;/h2&gt;

&lt;p&gt;Vamos colocar nossa função de Fibonacci e salvar num arquivo, fib.py, incluindo um pouquinho de documentação. Chamamos cada arquivo Python de módulo:&lt;/p&gt;

&lt;pre&gt;&#39;&#39;&#39;Fibonacci function, memoized for better performance.&#39;&#39;&#39;
memo = {0:0, 1:1}

def fib(n):
    &#39;&#39;&#39;Returns the nth Fibonacci number.&#39;&#39;&#39;
    if not n in memo:
        memo[n] = fib(n-1) + fib(n-2)
    return memo[n]&lt;/pre&gt;

&lt;p&gt;Agora vamos importar esse arquivo no console do Python, e veja o que dá para fazer:&lt;/p&gt;

&lt;div style=&#34;width: 490px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;img class=&#34;&#34; src=&#34;http://elcio.com.br/wp-content/uploads/2015/09/fib.gif&#34; alt=&#34;&#34; width=&#34;480&#34; height=&#34;267&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Executando fib.py e ajuda.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;É como PHPDoc ou Javadoc, mas completamente nativo, e com uma sintaxe muito simples. E tudo o que você precisa para ler a documentação é o próprio Python.&lt;/p&gt;

&lt;h2 id=&#34;3-o-ecossistema-python-é-fantástico&#34;&gt;3. O ecossistema Python é fantástico&lt;/h2&gt;

&lt;p&gt;Começando pela própria linguagem, que vem com uma excelente &lt;a href=&#34;https://docs.python.org/3/library/&#34;&gt;biblioteca padrão&lt;/a&gt;. Essa biblioteca é bastante extensa e possui excelentes módulos, bem documentados e fáceis de usar. Por exemplo, digamos que você queira baixar o código fonte desse artigo e gerar um arquivo GZip com ele, veja como é fácil:&lt;/p&gt;

&lt;pre&gt;import urllib
import gzip
html=urllib.urlopen(&#39;http://tableless.com.br/por-que-python/&#39;).read()
gzfile=gzip.open(&#39;por-que-python.html.gz&#39;,&#39;w&#39;)
gzfile.write(html)&lt;/pre&gt;

&lt;p&gt;Usamos os módulos urllib e gzip. Entre os recursos fornecidos pelos módulos que já vem com o Python, posso citar o controle de threads e processamento paralelo, a criação de webservices, bibliotecas para sockets, http, ftp, e-mail, a leitura e escrita de XML, JSON, CSV, o acesso a recursos do sistema operacional, matemática e estatística, criptografia, manipulação de arquivos de áudio, testes automatizados, etc.&lt;/p&gt;

&lt;p&gt;Como é fácil escrever código bom e bem documentado, a comunidade Python tem feito um excelente em fornecer módulos para praticamente tudo o que você precisar fazer. Você pode encontrar, no &lt;a href=&#34;https://pypi.python.org/pypi&#34;&gt;Python Package Index&lt;/a&gt;, milhares de módulos prontos para coisas como ler e escrever arquivos Excel, trabalhar com imagens, acessar bancos de dados os mais diversos, trabalhar com automação residencial, enviar SMS, integrar seu software ao Gmail, falar com serviços de VoIP, conectar-se a redes sociais, criar um servidor de e-mails, desenvolver jogos 3D, e uma infinidade de outros recursos.&lt;/p&gt;

&lt;h3 id=&#34;e-tem-mais-8230&#34;&gt;E tem mais&amp;#8230;&lt;/h3&gt;

&lt;p&gt;Se você não programa em Python, espero tê-lo deixado pelo menos um pouquinho curioso. No próximo artigo, vamos falar um pouco mais da linguagem, mostrando algumas características da sintaxe e dos tipos de dados que a tornam tão interessante. Até lá, fique à vontade nos comentários. Sugestões, dúvidas, críticas e opiniões são muito bem vindas e vão me ajudar a preparar os próximos artigos.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Processo front-end na Locaweb</title>
      <link>http://tableless.com.br/processo-front-end-na-locaweb/</link>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/processo-front-end-na-locaweb/</guid>
      <description>

&lt;p&gt;É muito interessante entender como funcionam os processos em grandes empresas e comparar com processo que você executa na sua própria empresa. Depois que li &lt;a href=&#34;http://jaydson.org/processo-front-end-no-terra/&#34;&gt;o post que o Jaydson fez falando um pouco sobre o processo de desenvolvimento no Terra&lt;/a&gt;, fiquei de escrever um artigo parecido mostrando mais ou menos como nós aqui da Locaweb fazemos nosso front-end. Sugiro que leia o post do Jaydson e mate a sua curiosidade sobre o processo que eles tem lá.&lt;/p&gt;

&lt;h2 id=&#34;testes&#34;&gt;Testes&lt;/h2&gt;

&lt;p&gt;Eu vou repetir o que o Jaydson e o Rafael Rinaldi já falaram tantas vezes em eventos e artigos: Fazer testes front-end é difícil. Ferramentas front-end ainda estão caminhando e nos últimos anos tivemos uma explosão de novidades que nos ajudou muito a avançar na profissionalização da área. Mas testes ainda é um dos pontos fracos. Conseguimos testar muito bem JavaScript usando Jasmine, QUnit e tantos outros, mas testes CSS ainda é um problema grande.&lt;/p&gt;

&lt;p&gt;Essa semana adotamos na equipe a utilização do &lt;a href=&#34;https://github.com/BBC-News/wraith&#34;&gt;Wraith&lt;/a&gt;, um &lt;a href=&#34;http://bbc-news.github.io/wraith/&#34;&gt;teste de comparação de telas feito pelos desenvolvedores da BBC&lt;/a&gt;. Essa é só uma forma de conseguir testar a consistência das telas do seu produto. O &lt;a href=&#34;http://hardy.io&#34;&gt;Hardy&lt;/a&gt;, por exemplo, que usa o Cucumber para comparar seu código.&lt;/p&gt;

&lt;p&gt;Se você se interessar por testes CSS e quiser se aventurar nesse mundo, sugiro que &lt;a href=&#34;http://csste.st&#34;&gt;visite o site CSSTe.st&lt;/a&gt;. Eles compilaram informações de várias iniciativas e sistemas que fazem o trabalho de testar CSS mais fácil. Dá uma vasculhada lá, você vai achar coisas bem interessantes.&lt;/p&gt;

&lt;h2 id=&#34;pull-request&#34;&gt;Pull Request&lt;/h2&gt;

&lt;p&gt;Fazemos branch feature. Isso quer dizer que ninguém faz fork do projeto. As modificações são feitas em branchs separadas e submetidas via Pull Request (ou Merge Request, dependendo do sistema que você usar).&lt;/p&gt;

&lt;p&gt;O Pull Request precisa ter o OK de duas pessoas do time antes de ser aprovado. Antes de baixar o branch, a gente avalia algumas coisas antes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;As issues e o Pull Request estão bem descritivos mostrando qual o problema e o qual a solução adotada, com instruções exatas do que deve ser testado e avaliado?&lt;/li&gt;
&lt;li&gt;O CI passou? Tá okay?&lt;/li&gt;
&lt;li&gt;Se for JavaScript, os testes foram feitos? Se já existiam, precisou de modificação?&lt;/li&gt;
&lt;li&gt;Documentação está okay? Todas as atualizações foram feitas?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;O pior momento é descrever bem o Pull Request e as Issues. Temos que ter em mente que isso faz parte do Changelog e é muito útil para consultas posteriores.&lt;/p&gt;

&lt;p&gt;O pessoal da PlataformaTec tem uma cultura muito rica nesse assunto (e outros também). &lt;a href=&#34;http://guidelines.plataformatec.com.br/pull-requests.html&#34;&gt;Dá uma olhada no processo deles&lt;/a&gt;, que interessante!&lt;/p&gt;

&lt;h2 id=&#34;framework&#34;&gt;Framework&lt;/h2&gt;

&lt;p&gt;Desenvolvemos um framework interno chamado &lt;a href=&#34;http://opensource.locaweb.com.br/locawebstyle/&#34;&gt;Locaweb Style&lt;/a&gt;. Na verdade, hoje existem 3 tipos de frameworks de interface aqui na firma. Cada um serve para serviços com designs e propósitos totalmente diferentes: um para a área de Checkout (compra), outro para área de Central do Cliente e o principal que é para a interface dos produtos.&lt;/p&gt;

&lt;p&gt;Esso deve ser padrão em muitas empresas e várias pessoas vão perguntar por que não usamos o Bootstrap. Nosso framework principal, que é o que faz a interface dos produtos que tem contato direto com o usuário se chama &lt;strong&gt;Locaweb Style&lt;/strong&gt; e você pode ver o projeto (que é totalmente open source) &lt;a href=&#34;http://github.com/locaweb/locawebstyle/&#34;&gt;no nosso GitHub&lt;/a&gt;. A documentação está bem completa e &lt;a href=&#34;http://opensource.locaweb.com.br/locawebstyle/&#34;&gt;pode ser vista aqui&lt;/a&gt;. A ideia é que todos os produtos que tenham interface com o usuário use esse framework. Esse ponto é importante porque resolve uma série de problemas como:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Processo&lt;/strong&gt; &amp;#8211; As três equipes trabalham melhor quando as responsabilidades são bem dividas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Experiência padronizada&lt;/strong&gt; &amp;#8211; Padronizando a interface e as interações, o usuário tem uma experiência melhor entre os produtos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tirar a responsabilidade do client-side dos back-ends&lt;/strong&gt; &amp;#8211; Cá entre nós: back-end não tem que se preocupar se o layout está bonito, se tem botão desalinhado, se aquilo vai ser bem visto no celular, se o CSS está bem escrito etc etc etc…&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Excesso de projetos&lt;/strong&gt; &amp;#8211; São diversos projetos ao mesmo tempo, com equipes enxutas, trabalhando paralelamente. Não perde-se mais tempo de desenvolvimento criando telas parecidas do zero.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UX com mais liberdade&lt;/strong&gt; &amp;#8211; O time de UX precisa de atenção, carinho e de alguém que sente com eles para se preocupar com coisas que façam o nosso cliente amar o produto.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Liberar gargalos&lt;/strong&gt; &amp;#8211; Os times de UX e de front-end eram gargalos constantes. Precisávamos agilizar o processo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Já estamos na versão 3 e cometemos uma série de erros nas duas primeiras versões. O maior erro que eu posso citar é a utilização do Bootstrap como base. Geralmente, o design definido pelo designer do time não era igual ao do Bootstrap. Claro. A empresa precisa de uma identidade própria. Logo, tínhamos o problema de recriar o design dos módulos e muitas vezes, precisávamos estender as funcionalidades JS de alguns módulos do Bootstrap. Quando percebemos, estávamos reescrevendo boa parte do framework. Logo, decidimos retirar totalmente o Bootstrap da versão atual, mantendo apenas o GRID.&lt;/p&gt;

&lt;h2 id=&#34;stack-de-desenvolvimento&#34;&gt;Stack de desenvolvimento&lt;/h2&gt;

&lt;p&gt;Não vou explicar detalhadamente cada uma das tecnologias, mas segue todas que usamos hoje para manter principalmente o framework:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SASS&lt;/strong&gt; &amp;#8211; Usando sintaxe &lt;strong&gt;.sass&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wraith&lt;/strong&gt; &amp;#8211; Como teste de comparação visual de interface.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jasmine&lt;/strong&gt; &amp;#8211; Para testes JS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JSHint&lt;/strong&gt; &amp;#8211; Para manter a escrita de JS padronizada.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rake&lt;/strong&gt; &amp;#8211; Para executar os testes e outras tarefas como publicação da documentação e fechamento de pacote para deploy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Middleman&lt;/strong&gt; &amp;#8211; Para manter as documentações.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;.editorconfig&lt;/strong&gt; &amp;#8211; Para manter o padrão dos editores em dia.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nos projetos, nós nem nos preocupamos com o build dos assets. O Asset Pipeline está plugado em todos os projetos e faz tudo muito bem. Não há Grunt ou Gulp nos projetos.&lt;/p&gt;

&lt;p&gt;Usamos Travis ligado no nosso &lt;a href=&#34;http://github.com/locaweb/&#34;&gt;GitHub&lt;/a&gt;. Os projetos todos internamente usam Jenkins.&lt;/p&gt;

&lt;h2 id=&#34;deploy-e-ambiente&#34;&gt;Deploy e ambiente&lt;/h2&gt;

&lt;p&gt;O deploy melhorou muito nos últimos anos. Hoje estamos assim: alguns produtos, não todos, podem fazer deploy a qualquer hora. Alguns precisam abrir um ticket para agendar uma janela. Nós, quando precisamos fazer um deploy do framework, ainda precisamos agendar. Mas já estamos andando para fazer deploy a qualquer momento do dia sem limite de vezes. Como os produtos usam o Locaweb Style com a versão travada, não há nenhum tipo de risco. O Deploy também pode ser descomplicado e automatizado, já que são apenas assets.&lt;/p&gt;

&lt;p&gt;O nosso ambiente é bastante comum: temos um ambiente de teste, um de homologação e produção. Simples assim.&lt;/p&gt;

&lt;h2 id=&#34;pontos-falhos&#34;&gt;Pontos falhos&lt;/h2&gt;

&lt;p&gt;Existem uma série de coisas que precisamos melhorar assim que encontrarmos tempo entre um projeto e outro. Mas o principal é manter a padronização de escrita de JS nos projetos. Há projetos que não usam nenhum tipo de pattern (nós usamos o &lt;a href=&#34;http://addyosmani.com/resources/essentialjsdesignpatterns/book/#revealingmodulepatternjavascript&#34;&gt;Revealing Module Pattern&lt;/a&gt;), outros que usam CoffeeScript (o padrão é não usar), outros projetos que misturam JS puro com jQuery (o padrão é usar sempre a abstração do jQuery). A ideia é que nenhum projeto precise ter CSS para customizações. Toda a interface precisa estar dentro do Locaweb Style. Nem sempre é possível, já que há uma premissa que tudo o que está no framework precisa ser usado em dois produtos no mínimo. Não tem sentido colocar algo lá se apenas um produto vai usar e os outros não.&lt;/p&gt;

&lt;h2 id=&#34;entrosamento&#34;&gt;Entrosamento&lt;/h2&gt;

&lt;p&gt;Ter uma equipe unida e entrosada é difícil. Todo mundo precisa estar disposto a fazer aquele relacionamento dar certo, sempre entendendo as diferenças pessoais de cada um, como em um casamento. Ter uma equipe 100% unida, sem brigas, concordando com tudo é impossível. Eu tenho a sorte de trabalhar com uma equipe que se conhece e sabe exatamente onde temos que melhorar mais, entendendo os pontos fracos e principalmente nossos pontos fortes. Leva tempo para criar esse entrosamento. Muito trabalho, suor e sangue. São muitas reuniões de feedback, 1 on 1, retrospectiva&amp;#8230;&lt;/p&gt;

&lt;p&gt;Outra coisa que ajuda é a multidisciplinaridade entre os integrantes. Temos caras que lá programam um pouco de back. Outros que são mestres no CSS e tem um chamego especial para o lado de UX e Design, outros que gostam de mexer com infra. Isso tudo conta como ponto positivo.&lt;/p&gt;

&lt;p&gt;Lendo assim, até parece simples! 😉&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trabalhe ao lado de gente boa (e seja a gente boa)</title>
      <link>http://tableless.com.br/trabalhe-ao-lado-de-gente-boa-e-seja-a-gente-boa/</link>
      <pubDate>Thu, 23 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/trabalhe-ao-lado-de-gente-boa-e-seja-a-gente-boa/</guid>
      <description>&lt;p&gt;Comecei na área de Desenvolvimento um pouco atrasado comparado aos meus companheiros de serviço. Claro que já estou envolvido com informática há muito mais tempo do que desenvolvo para a Web, porém, trabalhava com a área de infraestrutura. Hoje, depois de algum tempo de experiência em grandes empresas, &lt;em&gt;startups&lt;/em&gt; e equipes de &lt;em&gt;freelancers&lt;/em&gt;, posso contar um pouco do que aprendi e deixar uma dica para quem quer crescer profissionalmente: &lt;strong&gt;Trabalhe ao lado de gente boa!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Conheci a programação de fato aos 19 anos com um bom programador PHP. Esse cara me deu poucas dicas, mas dicas muito valiosas. Com o passar do tempo, conheci muita gente na internet (inclusive aqui no Tableless), e estas pessoas me deram muito mais dicas, e dicas excelentes. Eu não parti para uma vaga como desenvolvedor logo de início: passei alguns anos trabalhando com infraestrutura, mas com aquela vontade de ser programador, sempre buscando referências e conhecendo cada vez mais &amp;#8220;gente boa&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Pessoas &amp;#8220;gente boa&amp;#8221; vão cobrar que você trabalhe bem. Eles vão te cobrar um código limpo, de fácil manutenção (e não é porque são preguiçosos, mas porque isso é essencialmente bom), código escalável, boa lógica de programação e muito mais. Você vai &amp;#8220;apanhar&amp;#8221; de gente boa. Eles vão cobrar o tempo todo para que seu foco seja o mesmo que o deles: desenvolver seguindo boas práticas e pensando fora da caixa, fora da CPU desta máquina que você bate no teclado digitando códigos em disparada às vezes sem foco (no caso, você).&lt;/p&gt;

&lt;p&gt;Aprendi muita coisa desde que entrei em um novo emprego este ano, cheio de bons profissionais ao meu redor. Isso está me fazendo evoluir muito e foi o que me motivou a escrever sobre. E sim, ainda estou apanhando bastante, mas resolvi escrever para tentar lhe convencer a &lt;strong&gt;buscar algo melhor como profissional&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Mas será que esta experiência só acontece quando trabalhamos ao lado de grandes equipes e equipes boas? E se trabalhamos sozinhos, com pouca gente, ou mesmo com equipes que não tem esse mesmo foco, o que fazer? Você deve buscar o seu melhor e &lt;strong&gt;cobrar-se&lt;/strong&gt; por isso. Não é porque determinada pessoa trabalha mal na empresa que você irá espelhar-se nela e estagnar. Não é ela quem vai determinar o seu futuro.&lt;/p&gt;

&lt;p&gt;Caso não consiga obter um bom resultado policiando-se, procure alguém que possa avaliar seu desempenho em alguma ferramenta externa, seja um amigo do Facebook/Twitter, ou uma galera no Github, e quando você se sentir bem é hora de começar a fazer sua parte e ajudar outras pessoas. Você será a &amp;#8220;gente boa&amp;#8221; que busca fazer o serviço do outro ser bom como o seu. Se esse ciclo continuar, garanto que você não vai se arrepender.&lt;/p&gt;

&lt;p&gt;Compartilhe experiências, ajude quem tem dúvida. Aprendemos muito mais ajudando o próximo do que fechados em nosso &amp;#8220;mundinho&amp;#8221;. Grande parte do conteúdo pelo qual você estudou foi escrito por gente boa que queria ajudar, seja em blogs, revistas, etc. Pense nisso: &lt;strong&gt;gente boa é gente que faz a diferença&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>O nome UX está errado</title>
      <link>http://tableless.com.br/o-nome-ux-esta-errado/</link>
      <pubDate>Tue, 09 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/o-nome-ux-esta-errado/</guid>
      <description>&lt;p&gt;O que é um profissional de UX? Se você for responder rápido, você vai dizer: “É o mano (ou a mana) que faz o Wireframe do projeto.” Essa resposta é no mínimo incompleta. O profissional de UX é responsável por muito mais que isso. O Wireframe é na verdade uma resposta representativa de todo um trabalho prévio de pesquisa, organização e garimpo de informação junto com usuários e clientes. Há uma preocupação muito forte com fluxo de conteúdo e principalmente fluxo de navegação, além de juntar especificar a função e comportamento do sistema. Por isso, meça suas palavras, parça. UX não é o cara que &lt;strong&gt;só&lt;/strong&gt; faz os wireframes.&lt;/p&gt;

&lt;p&gt;Na verdade, esse texto é mais um desaforismo. A sigla UX é formada pelas palavras &lt;strong&gt;U&lt;/strong&gt;ser e&lt;strong&gt;X&lt;/strong&gt;perience. É muita prepotência dizer que apenas um profissional cuida da experiência do usuário, ainda mais quando ele faz parte apenas de uma parte do processo de desenvolvimento do projeto. Todo mundo do projeto cuida da experiência do usuário. Esse zelo começa desde o cara que faz o primeiro atendimento ao cliente/usuário, passa por todo o time que você já conhece e só vai terminar Deus sabe onde. Até o cara de infra, que cuida dos servidores, o mano que cuida do banco de dados, os back-ends, editores etc etc etc são profissionais de UX.&lt;/p&gt;

&lt;p&gt;Na minha opinião, quem nós chamamos de UX hoje, deveria ser chamado de outro nome. Eu gosto muito de chamar de Arquiteto de Informação. Mas esse nome também não é perfeito, pois ele contempla apenas uma parte do trabalho. Mesmo assim, ele consegue englobar boa parte das atribuições. O Arquiteto de Informação é aquele cara que vai filtrar as informações importantes junto dos clientes, usuários, donos de produto e também dos devs. É ele que vai priorizar quais informações e ações são mais importantes que outras. É ele que vai dizer onde cada coisa precisa ir. É ele que vai brigar defendendo o fluxo de navegação, fluxo de conteúdo etc etc. É o que o profissional de UX atual faz boa parte do tempo, e logo depois de tudo isso, ele representa esses dias de estudo e pesquisa no produto final, que geralmente é o Wireframe.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;É muita prepotência dizer que apenas um profissional cuida da experiência do usuário&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Outro problema são o profissionais da área de UX que se auto-denominam designers. Eles desenham sim, mas o contexto é outro. O papel do Designer é muito claro, até mais claro que o do profissional de UX. Mas não vale chamá-lo de Designer. E por favor, nem me venha falar que o certo é chamar o Designer de UI.&lt;/p&gt;

&lt;p&gt;Esse negócio de nomenclatura dos cargos está ficando bem confuso no mercado de web. Chamam front-end de front-end, mas back-end chamam de Desenvolvedor. Front-end não é desenvolvedor? Todos envolvidos no &lt;strong&gt;desenvolvimento&lt;/strong&gt; de um projeto podem ser chamados de desenvolvedor. Eles estão desenvolvendo alguma coisa, cada um com sua tarefa.&lt;/p&gt;

&lt;p&gt;Para mim, existem apenas dois lados no mercado de web, mais especificamente na parte de desenvolvimento técnico (aposto que você leu técnico e pensou em programadores): existe a área onde se executa o desenho. E a outra área onde se executa a função. Na área do desenho, ficam todos aqueles que estejam envolvidos em fluxos, interface, arquitetura e estrutura de layouts, guias visuais etc etc etc. Na área de função, ficam os responsáveis pela área de programa, que vai cuidar de fazer coisas funcionarem da melhor maneira possível. Não importa aqui se o cara manja de JavaScript ou Ruby. Na área de desenho, o cara pode manjar de JavaScript par fazer os comportamentos, por exemplo.&lt;/p&gt;

&lt;p&gt;Na área de UX, comparada com outras áreas de internet, é um misto de profissionais. Tem empresas que contratam profissionais como psicólogos e sociólogos para entenderem melhor seu cliente usuário. Esses tipo de profissional conhece muito mais sobre pessoas do que qualquer profissional de UX. Eles são UX, então? Mas claro que são. Afinal de contas, eles cuidam e estão preocupados com a experiência dos usuários. Mas eles não deixaram de ser psicólogos ou sociólogos.&lt;/p&gt;

&lt;p&gt;Por favor, entenda: a minha briga aqui é com o nome UX e não com o que esse profissional faz.&lt;/p&gt;

&lt;p&gt;Contudo, eu reitero: TODOS cuidam do UX do projeto, pelo simples motivo de que todos se preocupam e cuidam da experiência do usuário, de acordo com as suas tarefas. Não há um profissional específico dono desse título.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vida de Home Office</title>
      <link>http://tableless.com.br/vida-de-home-office/</link>
      <pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/vida-de-home-office/</guid>
      <description>

&lt;h2 id=&#34;o-que-é-home-office&#34;&gt;O que é Home Office?&lt;/h2&gt;

&lt;p&gt;Home Office, também conhecido pela sigla SOHO (Small Office and Home Office) ou mesmo &lt;strong&gt;trabalho remoto&lt;/strong&gt;, é uma formula chave usada por muitas empresas no qual acredita que o funcionário seja bem mais produtivo no ambiente familiar. Para esse tipo de trabalho é necessário ter disciplina.&lt;/p&gt;

&lt;h3 id=&#34;um-pouco-da-minha-experiência&#34;&gt;Um pouco da minha experiência.&lt;/h3&gt;

&lt;p&gt;Há três meses estou trabalhando em Home Office. No começo era um pouco difícil pois era o primeiro contato com essa forma de trabalho. Alguns amigos me disseram que não suportam trabalhar em casa pelo fato de não ter concentração nas atividades, porém, outros levaram para o lado positivo, informando que esse método de trabalho foi um dos melhores meios que algumas empresas aderiram, pelo fato de proporcionar uma qualidade de vida melhor para os funcionários, poupando-os do estresse gerado pelo trânsito, além de proporcionar a interação entre trabalho e família. Hoje me sinto melhor. Sei que não preciso enfrentar fila nos pontos de ônibus, usar roupas formais para exercer a minha função, ou até mesmo evitar horas de deslocamento da minha casa até o meu local de trabalho. Mas tudo tem seu preço, o que geralmente as pessoas confundem é que: ao estar no conforto do lar, elas podem ficar livres do horário de dedicação das atividades impostas pela empresa, e por pensarem assim acabam se dando mal. No momento em que iniciei essa “aventura”, simplesmente mapeei todo o meu tempo como se eu estivesse trabalhando em um ambiente empresarial comum onde as atividades são dirigidas pelo tempo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ao trabalhar em um ambiente empresarial.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Deslocamento (Casa / Empresa): 2 horas.&lt;/li&gt;
&lt;li&gt;Horário de trabalho: 8 Horas.&lt;/li&gt;
&lt;li&gt;Intervalo para o Almoço: 1 hora.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Ambiente Home Office.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Deslocamento passou a ser o meu horário de estudo: 2 horas.&lt;/li&gt;
&lt;li&gt;Horário de trabalho diário: (8 Horas).&lt;/li&gt;
&lt;li&gt;Intervalo para o Almoço: 1 Hora.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Com esse planejamento posso exercer minhas atividades pessoais além de cumprir toda a demanda de trabalho imposta pela empresa, e o restante de tempo utilizo para dedicar a minha família e praticar esporte.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Família.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Minha família não entedia sobre o assunto, ou até mesmo chegavam a pensar que por eu estar trabalhando em casa, poderia ajuda-los em algumas tarefas. Porem e importante ressaltar que por mais que esteja no ambiente familiar, o seu trabalho e uma prioridade e deve ser feito com disciplina e dedicação para que os resultados sejam satisfatórios.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vantagens:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Redução do estresse decorrente do trânsito.&lt;/li&gt;
&lt;li&gt;Convívio no ambiente familiar.&lt;/li&gt;
&lt;li&gt;Custos diários reduzidos (Passagem / Refeições).&lt;/li&gt;
&lt;li&gt;Maior liberdade profissional.&lt;/li&gt;
&lt;li&gt;Mais qualidade de vida.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Desvantagens:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Perda de foco.&lt;/li&gt;
&lt;li&gt;Preconceito do mercado de trabalho.&lt;/li&gt;
&lt;li&gt;Possibilidade de excesso de carga de trabalho&lt;/li&gt;
&lt;li&gt;Ambiente de trabalho confinado (Antissocial).&lt;/li&gt;
&lt;li&gt;Indefinição de horários de trabalho e lazer, se não houver planejamento e disciplina.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Claro, cada um tem uma metodologia de trabalho e seu próprio tempo para se acostumar a nova rotina. Outro ponto importante é também como as pessoas, que estão no escritório, trabalham com alguém que não está presente fisicamente. Mas isso é uma ideia para outro post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dicas valiosas para sua carreira de Dev (ou de T.I.)</title>
      <link>http://tableless.com.br/dicas-valiosas-para-sua-carreira/</link>
      <pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/dicas-valiosas-para-sua-carreira/</guid>
      <description>&lt;p&gt;Então você é aquele cara aficcionado por tecnologia e está cursando ou já cursou sistemas da informação, análise de sistemas, engenharia da computação ou qualquer outro dos 1300 nomes de cursos que essa área deve ter. Você se depara com um mundo de oportunidades: desenvolvimento, segurança, banco de dados, suporte, etc.&lt;/p&gt;

&lt;p&gt;Em um belo momento da sua jornada você se pergunta “E aí? O que eu quero pra minha carreira?”.&lt;/p&gt;

&lt;p&gt;A ideia deste post é compartilhar algumas dicas para você fazer isso e não ser tão afetado toda vez que você decidir mudar o rumo de sua carreira. Afinal de contas, a mudança faz parte de nossa vida, não há como dizer se vamos ou não vamos fazer a mesma coisa pro resto da vida, certo?&lt;/p&gt;

&lt;p&gt;Vamos falar um pouco das carreiras de T.I. antes de entrarmos na área de desenvolvimento.&lt;/p&gt;

&lt;p&gt;Sabemos que a área de T.I é muito vasta e promissora. Sendo assim, quando estamos na faculdade não faltam oportunidades para você ganhar acima da média, seja você um Help Desk ou um Analista de Segurança da Informação. O problema é que muitas pessoas acabam aceitando muitas coisas apenas por inércia e esquecem que sempre reavaliar o que elas querem pra vida delas.&lt;/p&gt;

&lt;p&gt;Além disso, existem algumas modalidades em que podemos ‘jogar o jogo’. Podemos abrir uma empresa, ser PJ, viver de frellas, &amp;#8216;puxar&amp;#8217; placa de vídeo do Paraguai, comprar iPhones em Miami e etc. Ou seja, não ganha dinheiro em T.I quem não estiver afim.&lt;/p&gt;

&lt;p&gt;Eu mesmo já passei por quase todos os momentos acima e vários cargos dentro de T.I. e em um belo momento parei na área de Dev. Ainda assim, sempre surge aquela pergunta “E aí? O que eu quero pra minha carreira?”. O fato é que para qualquer conselheiro de carreiras essa pergunta deve ser respondida para um longo prazo, ou seja, ela deveria ser “Aonde eu quero estar daqui a 20 anos e o que eu quero estar fazendo?&amp;#8221;&lt;/p&gt;

&lt;p&gt;Fácil né? Ainda mais em uma área onde o que você aprendeu hoje certamente já está fora de moda mês que vem. Não se iluda dizendo que quer estar na praia tomando todas, a não ser que você tenha realmente tudo planejado até lá. A maioria de nós não sabe nem o quer fazer mês que vem.&lt;/p&gt;

&lt;p&gt;Trazendo um pouco para área de desenvolvimento, podemos focar em tantas coisas: Front-end, Back-end, full stack, dev ops, testing, PM, performance, mobile, UX e etc. Isso sem mencionar as milhões de APIs e linguagem que vemos por aí.&lt;/p&gt;

&lt;p&gt;Nós desenvolvedores já podemos nos deparar com algumas mudanças drásticas em nossas carreiras, como simplesmente não querer mais lidar com o front-end e começar a gostar de back-end, ou simplesmente uma mudança de linguagem. O problema é: Se eu sou em desenvolvedor senior em front, eu vou ser um desenvolvedor senior em back? Qualquer recrutador de qualquer empresa vai dizer que não. Ou seja, você provavelmente será rebaixado de cargo e se salário com uma mudança dessa.&lt;/p&gt;

&lt;p&gt;Então aí vão algumas dicas para minimizar o impacto dessas mudanças e planejar melhor seu futuro como desenvolvedor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Invista em coisas duradouras, não apenas em tecnologias ou linguagens.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sabe aquele curso de inglês que você tá ‘embarrigando&amp;#8217; a anos? Acredito que eu não precise dizer o quão importante isso é para sua carreira. Conheço muitas empresas que contratam pessoas que sabem inglês e preferem formar essa pessoa na área técnica, do que contratar alguém experiente que ainda não se deu ao trabalho de aprender inglês. Lembrando que inglês de leitura não é inglês, estou falando de inglês fluente, inglês de não ter medo de se comunicar. Isso é essencial para você que quer uma carreira promissora em empresas grandes e empresas de nível internacional. Lembre-se que se você está em um processo para entrar em uma empresa internacional e existe um canadense, um europeu, um indiano e um australiano no processo, você já pode se considerar o 5o da fila, pois todos esses países falam inglês nativamente.&lt;/p&gt;

&lt;p&gt;Qual o feedback sobre seus soft skills?&lt;/p&gt;

&lt;p&gt;Você sabe o que são soft skills? São as habilidades (ou desabilidades) que não aprendemos na ‘escola&amp;#8217;, ou seja, nossas atitudes comportamentais. Você é muito preguiçoso no inicio do dia? Você é muito introspectivo? Você é perfeccionista? Você é teimoso? Você não sabe se impor? Você não consegue discutir sem se esquentar? Você é ansioso?&lt;/p&gt;

&lt;p&gt;Tudo isso tem cura amigos, basta correr atrás. Existem cursos e coaching de carreira pra isso.&lt;/p&gt;

&lt;p&gt;Ao investir nos seus soft skills você não está mais dependendo de tecnologia e está agregando valor a longo prazo em sua carreira e em qualidade de vida. Isso requer também uma boa dose de humildade para reconhecer que somos assim e tomarmos uma atitude em relação a isso.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Mistura de conhecimentos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Você ama alguma linguagem promissora e não faz outra coisa a não ser isso?&lt;/p&gt;

&lt;p&gt;É hora de rever algumas coisas, seja sempre curioso em relação a coisas novas e aprender pelo menos o básico de outras coisas. Sendo assim, você nunca vai começar do zero, além do fato de que você poderá contar com um leque maior de conhecimentos para o seu dia a dia e não viverá fechado em um casulo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. O balanço entre planejamento e ação.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Não há como planejarmos passo a passo os próximos 20 anos de nossa carreira, portanto é bom trabalharmos com algumas possibilidades de carreira e também quebrar isso em passos menores. Aqui temos conteúdo suficiente para um novo post sobre planejamento de carreira. A dica principal é não planejar demais e também não se perder no dia a dia. Devemos sempre saber como o dia de hoje está afetando nossos planos para o nossas metas futuras.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Atitude na maioria dos casos supera o conhecimento&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Falo isso por experiência própria. A algum tempo sai da área de segurança da informação para ir para área de desenvolvimento, mas não voltei a estaca zero, muito pelo contrário.&lt;/p&gt;

&lt;p&gt;&amp;#8220;Então você saiu de uma área e foi pra outra que você não manjava nada?” Sim (praticamente)!&lt;/p&gt;

&lt;p&gt;Acredito que nossas habilidades técnicas sejam apenas para definir o nosso nicho de carreira. O mercado de hoje preza pelas qualidades não técnicas acima das técnicas. Para mim programação é programação, não importa a linguagem. De que adianta ter um mega especialista em Ruby que é arrogante? Mesmo que ele receba um salário de estagiário pelo trabalho de especialista, ninguém gosta de trabalhar com pessoas arrogantes.&lt;/p&gt;

&lt;p&gt;Quando fiz essa mudança deixei claro para todos que:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Eu não era o melhor programador do mundo&lt;/li&gt;
&lt;li&gt;Mas eu sabia programar&lt;/li&gt;
&lt;li&gt;Deixei claro quem eu era e como eu trabalhava&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Isso reforça que uma mudança que aparentemente é drástica em nossa carreira pode ser superada facilmente, também foi o suficiente para concluírem que não importava o buraco que eu estivesse eu daria meus pulos pra sair de lá.&lt;/p&gt;

&lt;p&gt;Fechamos a conclusão de que os nossos soft skills são extremamente importantes, pois eles definem a forma como lidamos com as pessoas no nosso dia a dia e ao contrário da tecnologia, eles não se perdem. Nós da área de T.I temos a mania de ser metódicos, nerds, egocêntricos e colocarmos a tecnologia a frente das pessoas. Basta uma mudança nessa ‘chave&amp;#8217; para que possamos agregar mais com atitudes em relação as outras pessoas do que simplesmente aprender uma linguagem nova.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>O mercado de desenvolvimento front-end</title>
      <link>http://tableless.com.br/pensamentos-sobre-o-mercado-de-desenvolvimento-front-end/</link>
      <pubDate>Thu, 14 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/pensamentos-sobre-o-mercado-de-desenvolvimento-front-end/</guid>
      <description>

&lt;p&gt;Você já deve ter notado que o mercado cresceu demais nos últimos anos. De repente, codificar HTML virou a coisa mais importante do mundo e saber JavaScript transforma você automaticamente em um rockstar.&lt;/p&gt;

&lt;p&gt;O interesse das empresas também aumentou bastante. Empresas gringas tem buscado desesperadamente profissionais no mundo todo, inclusive no Brasil. Hoje não é muito difícil ir trabalhar em Amsterdam ou em Bangkok. A mão de obra nestes países está bem escassa. Mal sabem eles que aqui no Brasil o cenário é o mesmo: falta profissionais. Isso é bom, por um lado, pois os novatos ganham importantes oportunidades . Quem se esforça para aprender certo e rápido, se dá muito bem.&lt;/p&gt;

&lt;p&gt;Diversos fatores contribuíram para que a revolução acontecesse e que finalmente o dev front-end se tornasse a estrela da vez. E sim, isso é uma REvolução.&lt;/p&gt;

&lt;h2 id=&#34;a-primeira-evolução&#34;&gt;A primeira Evolução&lt;/h2&gt;

&lt;p&gt;Se você é novo na profissão, pode não ter acompanhado quando a febre dos Padrões Web contaminou todos os devs. Foi um negócio bem incrível de viver.&lt;/p&gt;

&lt;p&gt;O cenário do desenvolvimento web naquele início era bem grotesco. Tudo estava começando e ninguém — ninguém mesmo — sabia de verdade como produzir websites. Estou falando de um mercado pós-bolha.&lt;/p&gt;

&lt;p&gt;Os browsers eram bem ruins. O W3C era mais lerdo que uma tartaruga para avançar com as recomendações. E os desenvolvedores sofriam de todas as maneiras possíveis.&lt;/p&gt;

&lt;p&gt;Produzir websites para browsers ruins e uma conexão indecente era uma aventura. É por isso que dou risada quando alguém diz que o Internet Explorer 8 é uma porcaria. Ah! Se ele soubesse como é resolver um bug para o IE3/4…&lt;/p&gt;

&lt;p&gt;Foi nesse cenário e em plena guerra dos browsers que o WaSP surgiu. O WaSP era composto de designers e desenvolvedores que estavam cansados de produzir websites de maneira espartana. Algo precisava acontecer, precisava mudar. Tudo precisava ser derrubado para algo novo se reerguer. Eles fizeram exatamente isso. A evolução foi iniciada nas trincheiras.&lt;/p&gt;

&lt;p&gt;Hoje o mercado está no patamar atual muito por causa da iniciativa desses poucos profissionais inconformados. Este foi um fator importante, que abriu a trilha para o caminho correto. Vamos aos outros pontos.&lt;/p&gt;

&lt;h2 id=&#34;o-html-5&#34;&gt;O HTML 5&lt;/h2&gt;

&lt;p&gt;A forma com que as novidades do HTML foram divulgadas pelo W3C e pelo grupo WHATWG ajudaram muito a adoção e principalmente na popularidade da linguagem. Nenhuma outra versão do HTML ganhou um logo, um site para divulgação, adesivos, camisetas e etc… Toda esse campanha contribuiu para que o HTML fosse divulgado como uma linguagem séria e madura.&lt;/p&gt;

&lt;p&gt;O WHATWG teve uma atitude muito semelhante que a do WaSP. Eles estavam cansados de esperar as decisões do W3C, que literalmente levavam anos para serem tomadas. Foi aí que um grupo de desenvolvedores resolveu iniciar por conta própria a recomendação do que seria hoje o HTML5.&lt;/p&gt;

&lt;p&gt;As novas APIs facilitaram milhões de vezes a manipulação do DOM com JavaScript. Isso chamou a atenção de outros profissionais, como designers e desenvolvedores back-end. A partir de então tudo começou a mudar, desde o processo de desenvolvimento até a divisão de responsabilidades em projetos.&lt;/p&gt;

&lt;p&gt;Os desenvolvedores back-end sempre tiveram o suporte de várias ferramentas que os auxiliam no desenvolvimento. Mas esse suporte praticamente não existia no mundo front-end. Me lembro da empolgação geral quando saiu uma extensão do Firefox chamada Web Developer Tools. O que nos leva a outro ponto importante: ferramentário.&lt;/p&gt;

&lt;h2 id=&#34;tooling&#34;&gt;Tooling&lt;/h2&gt;

&lt;p&gt;Quem nunca ouviu falar de Yeoman, Bower, Grunt, Middleman, Jekyll, Sass, Compass, Less e uma série de outras ferramentas que facilitam o desenvolvimento diário? Depois que o Node.js surgiu, uma série de ferramentas surgiriam com ele. Outras ferramentas vieram da comunidade Ruby, suprindo uma série de outras dificuldades.&lt;/p&gt;

&lt;p&gt;Hoje podemos automatizar tarefas com o Grunt ou Gulp, gerenciar nossas dependências com o Bower, escrever sites estáticos com Middleman e Jekyll. Há uma série de outras ferramentas que medem a performance do site, que buscam erros no seu código etc etc etc.&lt;/p&gt;

&lt;p&gt;A falta de ferramentas era um problema grande no início. Não havia nada que nos ajudasse a escrever código de alta qualidade, apenas nós mesmos e a fiscalização dos colegas de trabalho. Fazia parecer que a área era meio amadora, sabe? Tentando fazer as coisas no achismo. Parecia que todo mundo ainda estava tentando descobrir os truques da área. Hoje é muito difícil conhecer alguém que não conheça o Inspector dos browsers ou que não use qualquer outra ferramenta auxiliar.&lt;/p&gt;

&lt;h2 id=&#34;o-javascript&#34;&gt;O JavaScript&lt;/h2&gt;

&lt;p&gt;Mas, na minha opinião, o que fez com que pessoas olhassem o front-end de forma diferente foi o JavaScript. De uma hora para outra uma série de iniciativas envolvendo a linguagem surgiram e de repente todo mundo achava o JavaScript uma linguagem maravilhosa. Principalmente os devs back-end que tinham uma visão ruim da nossa profissão. Muitos desdenhavam porque achavam que era só escrever HTML e pintar quadradinhos com CSS.&lt;/p&gt;

&lt;p&gt;O Node.js abriu os olhos de muita gente. Gente que não dava nada para esse mercado. Daí em diante é história.&lt;/p&gt;

&lt;p&gt;Depois que frameworks como Angular, Ember e Backbone surgiram, a badalação em volta do JavaScript cresceu muito. Isso é bom e ruim. É muito polêmico ainda escrever JS no servidor. Em vários lugares os devs ainda estão perdidos. A iniciativa de escrever JS no servidoré algo um pouco nebuloso ainda. Desenvolvedores que não sabem lidar com a novidade, acabam fazendo projetos híbridos, construindo parte de projetos com essas tecnologias. O projeto acaba ficando estranho, onde parte é escrita em JavaScript no servidor e a outra é escrita em linguagem server-side comum. Isso por que todo mundo quer experimentar. Eu ainda acho estranho abordagens assim. Se você quer escrever JS no servidor, ele precisa ser sua linguagem principal. Oras, você nunca misturou PHP com Ruby, não é? Por que fazer parte do projeto em Ruby e apenas um pedaço JavaScript então? Mesmo assim, essa visão é meio estranha, já que nenhuma linguagem resolve todos os problemas de um projeto. &lt;/p&gt;

&lt;p&gt;Mesmo assim o mercado vai caminhando. Não creio que essa confusão dure muito mais tempo e que todo mundo consiga encontrar uma maneira decente de fazer o processo funcionar.&lt;/p&gt;

&lt;p&gt;Além disso, um dev front-end não é só aquele que escreve JavaScript. Envolve muito mais. Na verdade esse é outro problema. Para mim não existe front-end, existe designer e programador. Mas deixa essa conversa para próxima.&lt;/p&gt;

&lt;h2 id=&#34;aceitação-do-grupo&#34;&gt;Aceitação do grupo&lt;/h2&gt;

&lt;p&gt;Aos poucos os front-ends foram sendo aceitos no processo e em outros meios. Essa aceitação é ótima. Existe o lado ruim sim, mas toda essa vitrine que o mercado de front-end ganhou é interessante para essa comunidade que andava pelas sombras e com vergonha de si mesmo durante anos. Esse novo ciclo é bom para aprendermos o que realmente dá resultado e como podemos formar profissionais cada vez mais importantes no processo.&lt;/p&gt;

&lt;p&gt;É importante que os devs tenham ideia do contexto geral desse mercado para que não sejam engolidos como aconteceu anos atrás, tanto na bolha, quanto no advento dos Padrões Web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Artigo originalmente &lt;a href=&#34;https://medium.com/@diegoeis/sobre-o-mercado-de-desenvolvimento-front-end-7fdd918c4206&#34;&gt;escrito no meu blog&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>9 dicas para novos empreendedores</title>
      <link>http://tableless.com.br/9-dicas-para-novos-empreendedores/</link>
      <pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/9-dicas-para-novos-empreendedores/</guid>
      <description>

&lt;p&gt;Quem trabalha com tecnologia com certeza já pensou em entrar para esse vasto mercado com seu próprio produto ou serviço, na tentativa de gerar valor para uma nova ideia ou uma empresa.&lt;/p&gt;

&lt;p&gt;Mas quando o assunto é montar seu próprio negócio, surgem muitas duvidas por onde começar e quais seriam os passos a serem dados para que esse objetivo se torne realidade.&lt;/p&gt;

&lt;p&gt;Pra quem se empenha em fazer o dever de casa, é possível criar e manter uma empresa saudável e competitiva no mercado, principalmente se tratando de uma empresa de tecnologia, área tão visada e explorada atualmente.&lt;/p&gt;

&lt;p&gt;Realizando uma pesquisa nos principais sites de empreendedorismo, pude criar uma lista de 9 principais dicas para te ajudar a alavancar essa ideia encubada na cabeça:&lt;/p&gt;

&lt;h3 id=&#34;1-8211-faça-suas-apostas-baseando-se-na-experiência-de-mercado&#34;&gt;1 &amp;#8211; Faça Suas Apostas Baseando-se na Experiência de Mercado&lt;/h3&gt;

&lt;p&gt;Talvez a ideia seja boa, mas pode acontecer de você não ter a mínima noção de como desenvolver o produto ou que tipo de tecnologia usar para desenvolvê-lo. Na falta de experiência na área, o jeito é conhecer alguém ou um sócio que possa te ajudar com experiência e conhecimento ou buscar serviços de empresas de consultoria especializadas no ramo desejado.&lt;/p&gt;

&lt;h3 id=&#34;2-8211-esteja-preparado&#34;&gt;2 &amp;#8211; Esteja Preparado&lt;/h3&gt;

&lt;p&gt;Não adianta querer saber o quadrado da hipotenusa sem antes saber qual é o quadrado dos catetos. A busca de conhecimento e capacitação devem ser uma das principais metas a serem cumpridas. Investir em cursos de capacitação e eficiência ajuda a enfrentar os obstáculos com mais determinação e com maior capacidade e rapidez na hora de tomar decisões importantes, identificar problemas e solucioná-los da maneira mais rápida e econômica possível.&lt;/p&gt;

&lt;h3 id=&#34;3-8211-planeje-primeiro&#34;&gt;3 &amp;#8211; Planeje Primeiro&lt;/h3&gt;

&lt;p&gt;“Se não sabe onde quer chegar, qualquer caminho serve” já dizia o Gato de Cheshire em Alice no País das Maravilhas. Este provavelmente seja um dos principais motivos que levam empresas novas ao “falecimento” precoce, a deficiência na hora de planejar. Trace metas, crie planos de negócio que agreguem valor ao seu produto, pesquise o que há no mercado atualmente antes de qualquer coisa, para não correr o risco de se engajar em algo que já não é mais novidade e que não seja um diferencial que chame a atenção de possíveis clientes ou investidores.&lt;/p&gt;

&lt;h3 id=&#34;4-8211-prepare-se-para-investir&#34;&gt;4 &amp;#8211; Prepare-se para Investir&lt;/h3&gt;

&lt;p&gt;é muito importante ter consciência de que uma hora ou outra você vai ter que gastar dinheiro. Para isso, definir uma estrutura operacional e financeira para a empresa é uma maneira de evitar jogar dinheiro fora. Estudar provisões rentáveis da empresa, investimentos e custos vai ajudar muito o negócio nos primeiros anos de vida, fazendo com o que o motor dos negócios não fique sem gasolina e que o barco da empresa não fique à deriva. Tenha em mente custos com serviços de terceiros, contratações de funcionários, marketing, etc.&lt;/p&gt;

&lt;h3 id=&#34;5-8211-agregue-valores-ao-seu-produto&#34;&gt;5 &amp;#8211; Agregue Valores ao Seu Produto&lt;/h3&gt;

&lt;p&gt;Faça a si mesmo as seguintes perguntas: “O que faria um cliente se interessar pelo meu produto?”, “Como eu posso ganhar a preferência das pessoas?”. Saber a resposta para essas perguntas é muito importante, pois facilita a identificação do seu público alvo e irá ajudar na hora de implementar novas estratégias e regras de negócio.&lt;/p&gt;

&lt;h3 id=&#34;6-8211-saiba-diferenciar-o-que-é-seu-e-o-que-é-da-empresa&#34;&gt;6 &amp;#8211; Saiba Diferenciar o Que é Seu e o Que é da Empresa&lt;/h3&gt;

&lt;p&gt;Como já dizia o velho e conhecido “refrão”, não confunda “centavos novos” com “sentar nos ovos”. Saiba diferenciar suas finanças e despesas pessoais com as da empresa. Seguir a risca um cronograma financeiro de pagamentos de funcionários e contas da empresa irá ajudar a economizar o capital e a não desperdiçar dinheiro. Incluir-se no quadro de pagamento dos funcionários e manter datas fixas de pagamentos são boas maneiras de evitar gastar dinheiro à toa.&lt;/p&gt;

&lt;h3 id=&#34;7-8211-prepare-se-para-despesas-não-planejadas&#34;&gt;7 &amp;#8211; Prepare-se para Despesas Não Planejadas&lt;/h3&gt;

&lt;p&gt;Apesar de você manter um bom planejamento e controle sobre o dinheiro, haverá sempre despesas que não foram previamente incluídas no orçamento inicial. Estar preparado para gastos não planejados como compra de novos equipamentos (por necessidade ou por falha/defeito), oportunidades de última hora que exigem investir dinheiro, irá manter a empresa e os negócios nos trilhos.&lt;/p&gt;

&lt;h3 id=&#34;8-8211-procure-saber-exatamente-onde-investir&#34;&gt;8 &amp;#8211; Procure Saber Exatamente Onde Investir&lt;/h3&gt;

&lt;p&gt;Não adianta também ter dinheiro e não saber o que fazer com ele. Geralmente é o que acontece com a maioria dos empresários e empreendedores. Procure priorizar a capacitação dos funcionários da empresa, estratégias de marketing e a estrutura da empresa, pois são coisas referentes diretamente ao cliente e a manutenção e ao contínuo funcionamento da empresa.&lt;/p&gt;

&lt;h3 id=&#34;9-8211-mantenha-a-calma-e-não-seja-ansioso&#34;&gt;9 &amp;#8211; Mantenha a Calma e Não Seja Ansioso&lt;/h3&gt;

&lt;p&gt;Não deixe que o nervosismo e a ansiedade atrapalhe os negócios e prejudique seu produto ou serviço antes mesmo de ser conhecido pelos seus clientes. Pode ser que os resultados demorem a aparecer, mas não deixe que isso prejudique sua vontade de trabalhar, atrapalhe a busca por novos conhecimentos e vontade de inovar.&lt;/p&gt;

&lt;p&gt;Seguindo estas dicas, tenho certeza que o sucesso do novo empreendimento estará mais próximo de ser alcançado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Boa sorte e bons negócios!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>O que você faz quando falta a internet?</title>
      <link>http://tableless.com.br/o-que-voce-faz-quando-falta-internet/</link>
      <pubDate>Thu, 12 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/o-que-voce-faz-quando-falta-internet/</guid>
      <description>&lt;p&gt;Nos últimos anos, você já deve ter encontrado alguém preocupado em saber de onde vem a comida que come. É o movimento &lt;a href=&#34;http://www.usda.gov/wps/portal/usda/knowyourfarmer?navid=KNOWYOURFARMER&#34;&gt;Know Your Food&lt;/a&gt;, ou algo assim. Parece coisa de hippies e fãs de new-age, mas não é&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;1&#34; rel=&#34;footnote&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. E eu adoraria ver surgir algo assim para a internet: &lt;a href=&#34;https://www.google.com/goodtoknow/web/101/&#34;&gt;Know Your Web&lt;/a&gt;. Saiba de onde vem a informação que você consome.&lt;/p&gt;

&lt;p&gt;Um bom ponto de partida seria o livro &lt;a href=&#34;http://www.amazon.com/Tubes-A-Journey-Center-Internet/dp/0061994952&#34;&gt;Tubes&lt;/a&gt;, de Andrew Blum. Trata-se de uma investigação a respeito de como funcionam as entranhas da web: pátios cheios de servidores, cabos submarinos, sistemas de refrigeração, backbones etc. Uma estrutura tão industrial, tão &lt;em&gt;old school&lt;/em&gt;, que faria os velhos socialistas Marx e Engels sentirem-se em casa.&lt;/p&gt;

&lt;p&gt;Também ajudaria ouvir a série &lt;a href=&#34;http://toe.prx.org/2013/04/toe-01-the-clouds-part-one/&#34;&gt;The Clouds&lt;/a&gt;, do podcast &lt;a href=&#34;http://toe.prx.org/&#34;&gt;Theory of Everything&lt;/a&gt;. Nela, o apresentador Benjamen Walker tenta desmistificar o conceito — esse sim, bastante new-age, quase religioso — de computação em nuvem. A vaga ideia de &amp;#8220;nuvem&amp;#8221; desvia nossa atenção da &lt;em&gt;materialidade&lt;/em&gt; dos interesses em jogo na internet: dinheiro, poder.&lt;/p&gt;

&lt;p&gt;Walker questiona quem são as empresas que, de repente, &amp;#8220;se ofereceram&amp;#8221; para guardar nossos documentos e gerenciar &lt;em&gt;gratuitamente&lt;/em&gt; parte das nossas vidas on-line. Como funcionam? De onde saem os materiais usados na construção dos mega-servidores de internet? Quanto custa a conveniência? Para responder a essas perguntas, acaba arrumando confusão com a Amazon e até com a máfia chinesa. E não via internet. Walker foi visitar minas de &lt;a href=&#34;https://en.wikipedia.org/wiki/Neodymium&#34;&gt;neodímio&lt;/a&gt; na China, de onde sai cerca de 90% dos minérios usados em componentes de computadores e ímãs.&lt;/p&gt;

&lt;p&gt;Esses são excelentes documentários, que abrem nossas cabeças para a responsabilidade no uso da informação (já que ela tem custos, prazos de validade e cria resíduos). Mas ainda sinto falta de um filme radicalmente voltado para developers, que mostre o(s) ambiente(s) físico(s) e o universo psicológicos nos quais os softwares são construídos. As noites mal-dormidas, a comida processada etc. Que mostre o estado mental e físico produzido por certos &lt;a href=&#34;http://git-scm.com/docs/gittutorial&#34;&gt;commits&lt;/a&gt;, se é que você me entende.&lt;/p&gt;

&lt;p&gt;Talvez a série &lt;a href=&#34;http://goo.gl/eY0oCw&#34;&gt;Silicon Valley&lt;/a&gt; dê para o gasto. Mas penso mais numa espécie de atualização do &lt;a href=&#34;https://www.youtube.com/watch?v=u404SLJj7ig&#34;&gt;Code Rush&lt;/a&gt;, que contou os primórdios da Mozilla, na época em que a fundação tinha &lt;a href=&#34;http://craphound.com/?p=5198&#34;&gt;mais credibilidade&lt;/a&gt;. Ou algo como &lt;a href=&#34;http://buy.indiegamethemovie.com/&#34;&gt;Indie Game&lt;/a&gt;. Teria que mostrar — com algum realismo — a &lt;em&gt;materialidade&lt;/em&gt; do código: o que significa, fisicamente, criar um aplicativo.&lt;/p&gt;

&lt;p&gt;Mas, afinal, por que tudo isso? Para entender a dimensão humana, social e ambiental da tecnologia. Ao longo dos anos, parece que estamos nos acostumando a descontextualizar e praticamente deificar certos aparelhos e certas situações cognitivas (por exemplo, as redes sociais). Quase paramos de nos perguntar: &amp;#8220;para quê?&amp;#8221;, &amp;#8220;por quê?&amp;#8221;, &amp;#8220;isso é realmente necessário?&amp;#8221; Essas perguntas soam até reacionárias, ranzinzas.&lt;/p&gt;

&lt;p&gt;Esse, digamos, &amp;#8220;entusiasmo&amp;#8221; acaba servindo apenas para sustentar o consumismo acéfalo, a busca interminável por features, upgrades ou conteúdos que se tornam aceitáveis apenas porque alteramos a percepção do valor do nosso tempo, disponibilidade e atenção. O entretenimento virou um culto tão inquestionável que não entendemos os custos (sociais, ambientais e psicológicos) implicados no uso da tecnologia. O quão doente é uma sociedade que precisa ter entretenimento onipresente?&lt;/p&gt;

&lt;p&gt;Porém, quando nos relacionamos via internet, ainda temos de lidar com coisas antiquadas como Estados, política e questões ambientais. Não conseguiremos ignorar esses fatores por muito tempo. Não será possível se isolar num mundo geek consumista por muito tempo. No mínimo porque, com as mudanças climáticas em voga no planeta, está ficando cada vez mais difícil garantir serviços de comunicação plenamente estáveis e confiáveis. Provavelmente, seremos forçados, em algum momento, a pisar no freio: toda época de excessos tende a trazer uma de austeridade.&lt;/p&gt;

&lt;p&gt;Agora mesmo, escrevo em meio a uma queda de energia. A Copa já começou. O sol está perfeito lá fora. Mas os ventos são &lt;em&gt;assustadores&lt;/em&gt;. Computadores e TVs digitais servem para nada. O entretenimento vira abstinência. O que me lembra da previsão do escritor Bruce Sterling, na SXSW 2014: em breve, seremos um bando de &lt;a href=&#34;http://caosordenado.com/bruce-sterling-como-aterrorizar-geeks-na-sxsw/&#34;&gt;velhotes, entulhados em grandes cidades, com medo do céu&lt;/a&gt;. Não importa o quão avançados são os aparelhos nos meus bolsos. Em algum momento, serão praticamente inúteis. O que faremos nessa hora?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Anotações Palestra 16ELW – Zeno Rocha</title>
      <link>http://tableless.com.br/anotacoes-palestra-16elw-zeno-rocha/</link>
      <pubDate>Tue, 22 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/anotacoes-palestra-16elw-zeno-rocha/</guid>
      <description>

&lt;p&gt;Essas foram as minhas anotações que extrai da palestra que o &lt;a href=&#34;http://zenorocha.com&#34;&gt;Zeno Rocha&lt;/a&gt; fez no 16 Encontro Locaweb de Curitiba em 2014.&lt;/p&gt;

&lt;p&gt;Ainda vamos passar por mais 3 cidades: &lt;a href=&#34;http://eventos.locaweb.com.br/16o-encontro-locaweb-de-profissionais-de-internet-porto-alegre/&#34;&gt;Porto Alegre&lt;/a&gt;, &lt;a href=&#34;http://eventos.locaweb.com.br/16o-encontro-locaweb-de-profissionais-de-internet-rio-de-janeiro/&#34;&gt;Rio de Janeiro&lt;/a&gt; e &lt;a href=&#34;http://eventos.locaweb.com.br/16o-encontro-locaweb-de-profissionais-de-internet-sao-paulo/&#34;&gt;São Paulo&lt;/a&gt;. Se você ainda não participou deste evento, corra! O Tableless escolheu os palestrantes e estamos falando sobre assuntos bem diversos sobre desenvolvimento web. &lt;a href=&#34;http://eventos.locaweb.com.br&#34;&gt;Faça sua inscrição&lt;/a&gt;!&lt;/p&gt;

&lt;h1 id=&#34;sobre-sua-carreira-e-comportamento&#34;&gt;Sobre sua carreira e comportamento&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;A moda toda é largar tudo e empreender em alguma coisa&lt;/li&gt;
&lt;li&gt;Todo mundo é manipulado pelas cifras do mercado&lt;/li&gt;
&lt;li&gt;Nós temos vários heróis no mercado como o Steve Jobs, Bill Gates etc&lt;/li&gt;
&lt;li&gt;Mas não é tão fácil chegar no ponto destes caras. Você deve mirar fazer algo maior que eles.&lt;/li&gt;
&lt;li&gt;Você pode seguir outro caminho, fazer outras coisas, ter outras oportunidades.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;saiba-reconhecer-as-oportunidades&#34;&gt;Saiba Reconhecer as oportunidades.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Em 2010 a Apple matou o Flash e reconheceu o HTML5 como uma alternativa válida&lt;/li&gt;
&lt;li&gt;As oportunidades podem ser simples experimentos com qualquer linguagem. Qual o sentido de criar experimentos que só você vai gostar ou que só vai servir para você aprender?&lt;/li&gt;
&lt;li&gt;Mas esses experimentos aparentemente sem importância podem alavancar sua carreira de maneira imprevisível.&lt;/li&gt;
&lt;li&gt;O Futuro é o HTML11. &lt;a href=&#34;http://vimeo.com/html11&#34;&gt;http://vimeo.com/html11&lt;/a&gt; 😉&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;não-tenha-medo-do-novo&#34;&gt;Não tenha medo do novo&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;O Flash já foi o queridinho um dia.&lt;/li&gt;
&lt;li&gt;Mas outras ferramentas e tecnologias podem chegar e quando chegam, você precisa saber se comportar.&lt;/li&gt;
&lt;li&gt;Como você se comporta diante de mudanças?&lt;/li&gt;
&lt;li&gt;O que importa é como você vai encarar essas mudanças.&lt;/li&gt;
&lt;li&gt;Encare o desafio e não deixe o bonde passar.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;não-deixe-o-bonde-passar&#34;&gt;Não deixe o bonde passar&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Tenha um desafio. Crie um projeto open source, não importa o que seja, mas faça. Claro, de preferência que seja útil para alguém.&lt;/li&gt;
&lt;li&gt;Não tenha medo de divulgar seu código.&lt;/li&gt;
&lt;li&gt;Não tenha medo de se expor.&lt;/li&gt;
&lt;li&gt;Não tenha medo de palestrar.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;freela-não-compensa-8230&#34;&gt;Freela não compensa&amp;#8230;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ligue o foda-se para o dinheiro.&lt;/li&gt;
&lt;li&gt;A não ser que você precise mesmo, mas para manter seu filho, sua casa e etc.&lt;/li&gt;
&lt;li&gt;Dinheiro é consequência.&lt;/li&gt;
&lt;li&gt;Opte por experiências e não por dinheiro.&lt;/li&gt;
&lt;li&gt;Foque-se em apenas uma coisa. Freela pode dar errado. Não opte por fazer freela.&lt;/li&gt;
&lt;li&gt;Será que contribuir em um projeto opensource não é melhor que fazer um freela? Pode não fazer sentido, mas pense bem.&lt;/li&gt;
&lt;li&gt;Se você não mensurar suas tarefas, você não vai saber quanto leva pra fazer seus projetos.&lt;/li&gt;
&lt;li&gt;Você estima baseado nas suas experiências.&lt;/li&gt;
&lt;li&gt;Lembre-se: estimativa não é para acertar, mas é pra chegar perto.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;qualidade-acima-de-quantidade&#34;&gt;Qualidade acima de quantidade&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Prefira trabalhar 1 ano em um case bem feito do que em vários ruins.&lt;/li&gt;
&lt;li&gt;Tenha orgulho de mostrar seu nome em projetos bem feitos.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;pró-atividade-é-tudo&#34;&gt;Pró-atividade é tudo&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Não espere seu chefe mandar, se a demanda não existe, crie uma.&lt;/li&gt;
&lt;li&gt;Crie demandas que dão valor aos seus projetos internos&lt;/li&gt;
&lt;li&gt;Crie demandas que dão valor à empresa que você trabalha&lt;/li&gt;
&lt;li&gt;Faça pessoas chorarem com seu projeto. Mude a cabeça das pessoas com suas ideias.&lt;/li&gt;
&lt;li&gt;Não espere alguém dizer o que você deve fazer.&lt;/li&gt;
&lt;li&gt;Invista bastante tempo aprendendo ferramentas.&lt;/li&gt;
&lt;li&gt;E quando aprendeu bastante uma ferramenta, aprenda outra.&lt;/li&gt;
&lt;li&gt;Invista tempo, mas não fique apegado a isso.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ame-a-segunda-feira&#34;&gt;Ame a segunda-feira&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Não odeie a sexta-feira. Se você passa a semana inteira esperando que ela acabe, peça demissão e vá embora.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tente-mudar-o-mundo&#34;&gt;Tente mudar o mundo&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Não importa qual mundo seja. Pode ser o seu mundo. Pode ser o mundo todo. Não importa, mas mude alguma coisa.&lt;/li&gt;
&lt;li&gt;A mudança de vários mundos faz uma grande diferença no mercado como um todo&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>6 dicas para se dar bem em freelas e trabalhos remotos</title>
      <link>http://tableless.com.br/6-dicas-freelas-remoto/</link>
      <pubDate>Mon, 24 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/6-dicas-freelas-remoto/</guid>
      <description>

&lt;p&gt;Ao contrário do que muitos acham, trabalho remoto (ou até um projeto freelancer) não é algo fácil. Eu sei que é o sonho de todo mundo ficar em casa, organizar o seu próprio horário para ir ao parque (cinema, praia, sítio, bar, prostíbulo etc etc etc) enquanto todo mundo se mata em um escritório.&lt;/p&gt;

&lt;p&gt;Para ter esse privilégio, você não precisa ser só bom no que faz, você precisa ser responsável e ter disciplinas extras que vão além das suas responsabilidades técnicas.&lt;/p&gt;

&lt;p&gt;Montar uma empresa remota &amp;#8211; como o Tableless está se tornando &amp;#8211; é algo realmente desafiador. Você precisa encontrar profissionais que tem um senso &amp;#8220;social&amp;#8221; muito apurado. Que não pensam apenas na sua tarefa, mas também na tarefa de todos os outros integrantes do projeto, inclusive, o lado do cliente, que geralmente está preocupado com o andamento do projeto.&lt;/p&gt;

&lt;p&gt;Estas são algumas dicas básicas para você não ser um fiasco quando quiser se aventurar em trabalhar remotamente, aqui no Tableless ou em qualquer outra empresa que tenha essa possibilidade:&lt;/p&gt;

&lt;h2 id=&#34;1-dê-status&#34;&gt;1. Dê status&lt;/h2&gt;

&lt;p&gt;A equipe não está o tempo todo do seu lado e é muito difícil todo mundo trabalhar no mesmo horário. Trabalhar em uma equipe remota não quer dizer que todo mundo precisa estar ali no chat o dia inteiro. Claro, é bem diferente se você trabalha em uma empresa convencional e vai fazer um dia de trabalho remoto. Nesse caso é muito aconselhável que você trabalhe no horário normal, como se você tivesse ido à empresa normalmente.&lt;/p&gt;

&lt;p&gt;Em uma equipe não presencial, o status é o que faz as coisas não saírem dos eixos. Você precisa dar e receber o status do projeto o tempo inteiro. Seja por email, por sms, por código morse ou sinal de fumaça. Você precisa dar notícias e essas notícias precisam ser frequentes.&lt;/p&gt;

&lt;p&gt;&amp;#8220;Mas Diego, não basta a equipe olhar os commits e pronto?&amp;#8221;&lt;/p&gt;

&lt;p&gt;Não, não é só checar os commits e a listagem de issues concluídas. A equipe e a pessoa que interage e atende o cliente precisa saber de TUDO. Embora seu commit seja incrivelmente detalhado, isso não basta. Você precisa conversar com a equipe e dizer exatamente qual o status da sua parte no projeto. A lista de tarefas feitas e a lista de commits serão o apoio, mas o que vai mesmo deixá-los seguros e informados são as suas palavras.&lt;/p&gt;

&lt;p&gt;Se você não gosta de dar satisfações, esqueça, você não serve para fazer trabalho remoto. Se você não gosta de mandar email dizendo detalhadamente em que pé está seu trabalho, desista, isso não é para você.&lt;/p&gt;

&lt;p&gt;Geralmente o status pode ser dado 2 vezes ao dia, pela manhã e na parte da tarde. Se você fizer uma parada longa no decorrer do dia, é bom também manter a equipe informada. Mas geralmente um report no meio da manhã e outro no final da tarde é essencial para que o gerente do projeto possa informar ao cliente como tudo está andando.&lt;/p&gt;

&lt;h2 id=&#34;2-nunca-omita-informações&#34;&gt;2. Nunca omita informações&lt;/h2&gt;

&lt;p&gt;Se você precisa dar notícias o tempo todo, você não pode, em hipótese alguma, omitir ou esquecer informações. Quando alguém perguntar a você qual o status da tarefa, não se preocupe se ela está incompleta, diga exatamente o status atual. Não tente agradar ou dar aquela enrolada, isso não funciona.&lt;/p&gt;

&lt;p&gt;Se falta fazer um pedaço da funcionalidade, diga. Se você se esqueceu de fazer alguma coisa, diga. Se você bebeu até cair na noite anterior e não vai conseguir trabalhar, diga. Mas nunca, de forma nenhuma, omita qualquer tipo de informação.&lt;/p&gt;

&lt;p&gt;Digo isso porque toda a equipe e também quem está lidando direto com o cliente necessita de informações exatas. Se você simplesmente omitir informações, as decisões emergenciais, que são as decisões mais importantes, serão totalmente equivocadas.&lt;/p&gt;

&lt;p&gt;Essas informações serão usadas também indicar um status mais adequado para o cliente. Aqui no Tableless eu sou bem sincero. Prefiro perder o cliente falando a verdade do que tentar enrolá-lo. Dá mais trabalho enrolar do que perder o projeto. Prefiro ficar são para finalizar os outros projetos que restam, do que aflito e maluco tentando inventar uma desculpa para o cliente.&lt;/p&gt;

&lt;p&gt;Dinheiro nenhum paga uma dor de cabeça desse tipo.&lt;/p&gt;

&lt;h2 id=&#34;3-mantenha-o-repositório-do-projeto-sempre-atualizado&#34;&gt;3. Mantenha o repositório do projeto sempre atualizado&lt;/h2&gt;

&lt;p&gt;NUNCA, NUNCA, NUNCA saia da frente do computador sem dar um push antes. Vai pra praia curtir? Atualize seu projeto e envie seus commits para o repositório. Vai pro parque correr com seu cachorro? Atualize o repositório.&lt;/p&gt;

&lt;p&gt;Atrasar um projeto por que você não atualizou o repositório é coisa de júnior. Ainda mais quando as suas tarefas afetam as tarefas do time.&lt;/p&gt;

&lt;p&gt;Esse é um erro que pode causar uma dor de cabeça terrível para equipe inteira.&lt;/p&gt;

&lt;p&gt;Só para deixar claro: não estou dizendo que você tem que subir tarefas incompletas. Você só sobe tarefas totalmente completas e revisadas para o repositório. Mesmo assim, se você estiver trabalhando em um branch separado dedicado para uma determinada tarefa, suba tudo o que puder e avise o time que determinado branch está com uma tarefa incompleta, mas sempre deixe esse branch atualizado. Alguém, eventualmente, pode continuar seu projeto de onde você parou. Se isso acontecer e você não tiver atualizado o branch, alguém vai ter problemas.&lt;/p&gt;

&lt;h2 id=&#34;4-uma-notícia-ruim-é-melhor-do-que-notícia-nenhuma&#34;&gt;4. Uma notícia ruim é melhor do que notícia nenhuma&lt;/h2&gt;

&lt;p&gt;Ahhh, notícias ruins. Notícias ruins são normais em projetos de internet. Contudo, não ter notícia nenhuma é pior. O cliente fica desesperado, estressado e começa a duvidar da sua capacidade. Problemas acontecem. Estamos falando sobre desenvolvimento de software, ou seja, problemas invariavelmente acontecerão.&lt;/p&gt;

&lt;p&gt;O problema é a sua posição perante este cenário. Ninguém gosta de receber notícias ruins, mas todo mundo gosta de receber notícias sobre seu projeto. É importante para que o cliente consiga programar seu cronograma. Ele pode ter engatilhado um grande lançamento, campanha de marketing, apresentação para executivos ou qualquer outra coisa importante. Quando você não dá a notícia ruim (ou qualquer outra notícia), você prejudica uma cadeia inteira de pessoas e processos.&lt;/p&gt;

&lt;p&gt;Lembre-se que O problema não é dar a notícia ruim, o problema é não dar notícia nenhuma. Sempre dê notícias sobre o projeto para o cliente, por mais insignificante que essa notícia seja.&lt;/p&gt;

&lt;h2 id=&#34;5-não-pegue-o-projeto-se-você-acha-que-não-vai-entregá-lo&#34;&gt;5. Não pegue o projeto se você acha que não vai entregá-lo&lt;/h2&gt;

&lt;p&gt;Talvez você esteja muito atarefado. Talvez você esteja de saco cheio e queira tirar férias. Talvez você queira tanto dinheiro que se envolve em muitos projetos e não entrega nenhum. Talvez você tenha problemas de saúde&amp;#8230; Não importa o motivo, mas se você sabe que não vai conseguir entregar o projeto, seja por incompetência ou por qualquer outro motivo, não se comprometa.&lt;/p&gt;

&lt;p&gt;É melhor perder um cliente que talvez possa te contactar novamente mais tarde, do que você se envolver, estragar o projeto do cliente e depois largá-lo com um problema gigante nas mãos.&lt;/p&gt;

&lt;p&gt;Nesse cenário, o melhor é ser honesto. Diga que você não tem tempo porque está com muitos projetos, porque pretende viajar ou por causa de qualquer outro motivo. Nunca dispense o cliente sem uma desculpa verdadeira.&lt;/p&gt;

&lt;p&gt;O cliente não vai ficar bravo com você. Nesse momento você não está comprometido com nada. Você pode dizer &lt;em&gt;não&lt;/em&gt; tranquilamente nesse momento.&lt;/p&gt;

&lt;h2 id=&#34;6-seja-responsável&#34;&gt;6. Seja responsável&lt;/h2&gt;

&lt;p&gt;Eu sinto que não deveria conversar sobre nenhum destes pontos com ninguém, pelo simples motivo de que isso é questão de ter ou não responsabilidade. Se você tiver responsabilidade e claro, comprometimento, você vai se dar bem. O problema é que muitos devs simplesmente pisam na bola e para mim isso não tem outro nome: irresponsabilidade.&lt;/p&gt;

&lt;p&gt;Você tem um trabalho para entregar e existem pessoas que contam contigo. Você tem um cliente, que te paga para fazer um determinado projeto, ele &amp;#8220;manda&amp;#8221; na bagaça toda. É muita falta de responsabilidade, de educação e comprometimento você falhar ao tentar deixá-lo a par dos acontecimentos do seu próprio projeto.&lt;/p&gt;

&lt;p&gt;Lembre-se de todas essas disciplinas e com certeza você vai se destacar da média.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Resultados do Survey 2013</title>
      <link>http://tableless.com.br/resultados-survey-2013/</link>
      <pubDate>Mon, 25 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/resultados-survey-2013/</guid>
      <description>

&lt;p&gt;Eu sei, eu sei&amp;#8230; me desculpe. Demorei para liberar os resultados. Demorei por vários motivos. Mas vamos ao que importa. 😉&lt;/p&gt;

&lt;p&gt;Como muitos já sabem, tive a vontade de entender melhor o mercado de front-end nacional. Queria saber quanto a galera está ganhando, quais suas perspectivas sobre o trabalho, sobre o mercado, onde eles arranjam conhecimento etc&amp;#8230; Por isso tentei promover um survey, nacional, de front-end. Nesse survey os devs poderiam responder às perguntas sobre diversos assuntos relacionados a vida profissional e também seu conhecimento técnico. Por favor, deixem comentários para sabermos se esses dados ajudaram e se podemos continuar no ano que vem com a pesquisa.&lt;/p&gt;

&lt;h2 id=&#34;os-dados&#34;&gt;Os dados&lt;/h2&gt;

&lt;p&gt;Você pode ver os resultados indo &lt;a href=&#34;http://tableless.com.br/survey/&#34;&gt;direto para este link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Também, preparamos um pequeno infográfico, feita pela designer &lt;a href=&#34;http://bit.ly/marasampaio&#34;&gt;Mara Sampaio&lt;/a&gt;, para facilitar o compartilhamento destes dados. Ele está logo abaixo.&lt;/p&gt;

&lt;p&gt;Há também o PDF &lt;a href=&#34;http://bit.ly/pdf-survey-2013&#34;&gt;com os dados na íntegra aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/11/infografico_tableless-2013.jpg&#34; alt=&#34;infografico_tableless-2013&#34; width=&#34;600&#34; height=&#34;4187&#34; class=&#34;alignnone size-full wp-image-39600&#34; srcset=&#34;uploads/2013/11/infografico_tableless-2013.jpg 600w, uploads/2013/11/infografico_tableless-2013-24x168.jpg 24w&#34; sizes=&#34;(max-width: 600px) 100vw, 600px&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gestão ágil – Management 3.0</title>
      <link>http://tableless.com.br/anotacoes-sobre-management-3-0/</link>
      <pubDate>Mon, 07 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/anotacoes-sobre-management-3-0/</guid>
      <description>

&lt;p&gt;Fiz um curso estes dias sobre uma nova metodologia de gestão para ambientes ágeis e complexos. Chama-se Management 3.0. Foi um curso de dois dias inteiros na &lt;a href=&#34;http://www.adaptworks.com.br/?utm_source=TablelessComBr&amp;amp;utm_medium=post&amp;amp;utm_campaign=PostTableless&#34;&gt;AdaptWorks&lt;/a&gt;. Se você nunca fez, faça. Se você já fez o curso, faça outra vez.&lt;/p&gt;

&lt;p&gt;Estas são as minhas anotações sobre o que ouvi. Como eu disse, são anotações, por isso falta muito conteúdo.&lt;/p&gt;

&lt;p&gt;Management 3.0 não é uma metodologia. Ela é uma mindset. É um modo de pensar. Não há uma sequência a seguir. São visões diferentes sobre um mesmo ponto: gerenciar corretamente projetos e pessoas em ambientes complexos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Qual o tamanho ideal de um grupo? Depende. Depende da necessidade. Mas geralmente uma equipe de 5 pessoas é o ideal. Isso não quer dizer que você precisa ter UMA equipe de 5 pessoas para 20 projetos, mas 20 equipes de 5 pessoas. Quanto mais gente, pior a comunicação. Quando há muita gente em uma equipe, informalmente pessoas acabam criando sub-equipes menores (panelinhas).&lt;/li&gt;
&lt;li&gt;Mais importante do que ter um time é ter um time diversificado. Quanto mais diversificado, mais aprendizados e assuntos diferentes.&lt;/li&gt;
&lt;li&gt;Em todas as empresas já existem auto-organização. Os métodos ágeis elevam os níveis de auto-organização.&lt;/li&gt;
&lt;li&gt;Onde não há restrições (as corretas), há auto-organização.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Em lugares que não há auto-organização ou não é necessário haver uma auto-organização ou existem muitas restrições.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;A gestão 1.0 é baseada em uma pirâmide, onde apenas um toma decisão e todos abaixo executam.&lt;/li&gt;
&lt;li&gt;A gestão 2.0 parte do modo de gestão anterior, mas com ideias diferentes. Balanced Scorecard, Six Sigma, etc…&lt;/li&gt;
&lt;li&gt;A gestão 3.0 tem a ideia de lidar com organizações complexas. Onde o sistema se auto-organiza se adaptando ao cenário e ambiente da empresa.&lt;/li&gt;
&lt;li&gt;&amp;#8220;O século 21 é o Século da Complexidade.&amp;#8221; Stephen Hawking&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;teoria-da-complexidade&#34;&gt;Teoria da Complexidade&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;PENSE NISSO: Mesmo remunerando acima da média do mercado e aplicando uma política de bônus, há uma rotatividade média de 08 meses. O que está gerando isso? Crie uma solução para evitar essa perda de talentos.

&lt;ul&gt;
&lt;li&gt;Perguntar para quem saiu o porque saiu.&lt;/li&gt;
&lt;li&gt;Será que a política de bônus está adequada?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&amp;#8220;Para cada problema complexo sempre há uma resposta clara, simples e ERRADA.&amp;#8221; H. L. Mencken&lt;/li&gt;
&lt;li&gt;Paradigma simplificador: disjunção e redução&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;cas-8211-complex-adaptive-system&#34;&gt;CAS &amp;#8211; Complex Adaptive System.&lt;/h2&gt;

&lt;p&gt;Um time de desenvolvimento de software é um sistema complexo adaptativo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Teoria geral dos sistemas. O estudo da relações entre elementos. Ludwig Von Bertalanffy&lt;/li&gt;
&lt;li&gt;Teoria do Caos. Edward Lorenz.&lt;/li&gt;
&lt;li&gt;Gerentes são como outras pessoas, só que com alguns &amp;#8220;poderes especiais&amp;#8221;. Ou gerentes são parte do contexto do time restringindo e direcionando o sistema.&lt;/li&gt;
&lt;li&gt;Sistemas fechados são como uma pedra. Não há troca de energia (termodinâmica). Um sistema busca se fechar visando manter suas estruturas e seu meio interior. Sistemas fechados não trocam energias com outros sistemas. Isso evita que ele se desintegre.&lt;/li&gt;
&lt;li&gt;Sistema aberto é um sistema vivo. Há troca de energia entre outros sistemas.&lt;/li&gt;
&lt;li&gt;Um sistema está sempre oscilando entre aberto e fechado. Isso é a base da auto-organização.&lt;/li&gt;
&lt;li&gt;Sistemas complexos adaptativos são complexos por causa da baixa produtividade, baixa motivação e baixa satisfação do cliente.&lt;/li&gt;
&lt;li&gt;Não há como predizer o futuro de um sistema complexos.&lt;/li&gt;
&lt;li&gt;Know Unknowns. Aquilo que você sabe que você não sabe.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Você tem um baralho e sabe que tem um coringa lá, mas não sabe onde. E você sabe que você não sabe onde o coringa está.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unknowns Unknowns. As coisas que você não sabe que você não sabe.&lt;/li&gt;
&lt;li&gt;Propriedades e comportamentos emergentes são amplamente imprevisíveis.&lt;/li&gt;
&lt;li&gt;Racionalidade e racionalização

&lt;ul&gt;
&lt;li&gt;Racionalidade admite que nosso sistema lógico é insuficiente&lt;/li&gt;
&lt;li&gt;Racionalização consiste em querer prender o sistema em um sistema coerente.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;O comportamento de um sistema complexo pode ser: ordenado, complexo ou caótico&lt;/li&gt;
&lt;li&gt;Existem 6 visões no management 3.0:

&lt;ul&gt;
&lt;li&gt;Improve everything&lt;/li&gt;
&lt;li&gt;Align Constrains&lt;/li&gt;
&lt;li&gt;Empower teams&lt;/li&gt;
&lt;li&gt;Energise people&lt;/li&gt;
&lt;li&gt;Develop competence&lt;/li&gt;
&lt;li&gt;Grow structure&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;o-que-é-gestão&#34;&gt;O que é gestão?&lt;/h1&gt;

&lt;p&gt;Gestão está ligado a tomada de decisão. É maximizar as forças favoráveis e diminuir as forças contrárias.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gerir é NÃO ATRAPALHAR A EQUIPE.&lt;/li&gt;
&lt;li&gt;Proteja as pessoas das más formações de time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Proteja recursos compartilhados.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tragédia-dos-comuns&#34;&gt;Tragédia dos comuns&lt;/h2&gt;

&lt;p&gt;A tragédia dos comuns faz que as pessoas ou equipes otimizem apenas seus próprios trabalhos sem levar em consideração o bem comum que a organização está tentando alcançar.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gestor carrasco (mata todo mundo), gestor gamer (controla todo mundo), gestor barney (ama todo mundo).&lt;/li&gt;
&lt;li&gt;O gestor é um jardineiro. O gestor atua no ambiente para proteger, desenvolver e dirigir.&lt;/li&gt;
&lt;li&gt;O gestor não precisa garantir, mas ele tenta inspirar, por meio de restrições simples, que dirigem e guiam as decisões da equipe e individualmente.&lt;/li&gt;
&lt;li&gt;A gestão é tão importante que não pode ficar na mão de apenas uma pessoa.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;restrições-e-regras&#34;&gt;Restrições e regras&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Gestão define restrições. Regras emergem do sistema dinamicamente. Exemplos de restrição dos patos voando juntos.&lt;/li&gt;
&lt;li&gt;Restrições no transito: Não faça com os outros o que não gostaria que fosse feito com você. Tenha responsabilidade pelos seus atos e suas consequencias. Os grandes protegem os pequenos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Diferente das regras de transito. Com as restrições tudo fica bem organizado.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Não permita que metas individuais dos stakeholders substituam metas extrínsecas e emergente.&lt;/li&gt;
&lt;li&gt;Metas são excelentes restrições para atuarmos no sistema.&lt;/li&gt;
&lt;li&gt;Três tipo comuns de propósitos:

&lt;ul&gt;
&lt;li&gt;Propósito Intrínseco. Junto devs e eles Produzirão software.&lt;/li&gt;
&lt;li&gt;Propósito Extrínseco: Empresa precisa Ganhar dinheiro, por isso produz software&lt;/li&gt;
&lt;li&gt;Propósito Emergente: Ser um time vencedor.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Do it yourself team values

&lt;ul&gt;
&lt;li&gt;O time define seus core-values&lt;/li&gt;
&lt;li&gt;Compara com as expectativas da gestão&lt;/li&gt;
&lt;li&gt;Comprometem-se com 3 ou 7 valores&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Regras definem como fazer.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Restrições te deixam livre para definir como fazer.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;energise-people&#34;&gt;Energise people&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;TEORIA X: pessoas não gostam de trabalhar e só fazem pois precisam.&lt;/li&gt;
&lt;li&gt;TEORIA Y: as pessoas tem prazer no que fazem, talvez não fariam de graça, mas gostam do seu trabalho. Em regra geral, as pessoas escolhem sua profissão por que gostam.&lt;/li&gt;
&lt;li&gt;Motivação Extrínseca: efeito não linear. Não Trabalhar pela meta, mas pela recompensa.&lt;/li&gt;
&lt;li&gt;Motivação Higiênica: não é o excesso que te faz feliz, mas a falta que te deixa triste.&lt;/li&gt;
&lt;li&gt;Exemplos de motivação extrínseca: pressão, chantagem, propina.&lt;/li&gt;
&lt;li&gt;Motivação Intrínseca: desejo de atingir a meta, onde a meta é a própria recompensa.&lt;/li&gt;
&lt;li&gt;O Scrum, por exemplo, é uma auto-organização com uma condição explicita e determina onde começa e onde termina a auto-organização.&lt;/li&gt;
&lt;li&gt;Gerentes são como jardineiros: o gestor deixa a auto-organização fazer o trabalho enquanto guiam o sistema para resultados de valor.&lt;/li&gt;
&lt;li&gt;Dê ao time as condições necessárias para realizar o seu trabalho.&lt;/li&gt;
&lt;li&gt;Em um sistema complexo, tudo acontece de uma vez, e os problemas ignoram qualquer autoridade central. Por tanto a governança deve se espalhar entre todas as partes.&lt;/li&gt;
&lt;li&gt;A hierarquia foi criada para garantir que cada pessoa tenha um chefe, para que o poder, a autorização, fique distribuída entre os chefes. Fica fácil de ver como o poder é distribuído.&lt;/li&gt;
&lt;li&gt;Autorização geralmente começa com shareholders. O dono do negócio começa distribuindo o poder e assim por diante.&lt;/li&gt;
&lt;li&gt;Gerentes empoderam pessoas e distribuem controle para prevenir que o sistema quebre.&lt;/li&gt;
&lt;li&gt;Zero-Sum. Um ganha outro perde.&lt;/li&gt;
&lt;li&gt;No-Zero-Sum. Todos ganham.&lt;/li&gt;
&lt;li&gt;Confie nas pessoas. Comunique isso claramente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;De que forma as pessoas ganharam sua confiança?&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;10-desejos-intrínsecos-champfrogs&#34;&gt;10 desejos intrínsecos: Champfrogs&lt;/h2&gt;

&lt;p&gt;Pessoas diferentes vão se motivar por coisas e maneiras diferentes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Curiosidade&lt;/strong&gt; &amp;#8211; a pessoa precisa experimentar coisas novas, tentar coisas diferentes, se não ficam desmotivadas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Honra&lt;/strong&gt; &amp;#8211; Lealdade, Integridade, Orgulho. Compartilhar valores com um grupo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aceitação&lt;/strong&gt; &amp;#8211; Precisa de aceitação. Precisa ser aceito sem esconder a personalidade. Ela se sentirá desmotivada se não souber que o time gosta dela.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maestria&lt;/strong&gt; ou Domínio &amp;#8211; Pessoas que precisam enfrentar desafios. Precisam mostrar que sabem.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Poder&lt;/strong&gt; &amp;#8211; Pessoas que gostam de influenciar, pessoa que gostam de ser ouvidas, que tem voz ativa&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Liberdade&lt;/strong&gt; &amp;#8211; Tomar suas próprias decisões. Fazer seu trabalho sem precisar de consenso o tempo todo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Relacionamentos&lt;/strong&gt; &amp;#8211; Ter bons relacionamentos com colegas, podendo contar com eles como amigos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ordem&lt;/strong&gt; &amp;#8211; Gostam de ter previsibilidade e estabilidade. Necessidade de ambientes estáveis.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Objetivo&lt;/strong&gt; &amp;#8211; Pessoas motivadas pelo objetivo, pelo propósito, pela necessidade de propósito. Trabalha por algo maior que si mesma. Precisam sentir que seu trabalho faz diferença nas pessoas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; &amp;#8211; Pessoa que tem necessidade do prestígio social. Gosta de ter privilégios especiais, recompensas, títulos.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;proximity-management&#34;&gt;Proximity management&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Mova sua mesa para perto dos times.&lt;/li&gt;
&lt;li&gt;Gerência caminhando pela empresa.&lt;/li&gt;
&lt;li&gt;Gemba Walk, vá e veja, face-time.&lt;/li&gt;
&lt;li&gt;Comemore coisas grandes, pequenas, comportamentos, resultados, sucessos, fracassos, comemore aprendizado, comemore o que foi bem feito.&lt;/li&gt;
&lt;li&gt;Não prometa recompensas de antemão.&lt;/li&gt;
&lt;li&gt;Mantenha as recompensas pequenas.&lt;/li&gt;
&lt;li&gt;Recompense publicamente.&lt;/li&gt;
&lt;li&gt;Recompense comportamentos em vez de resultados.&lt;/li&gt;
&lt;li&gt;Recompense pares, não subordinados.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;empoderando-a-equipe&#34;&gt;Empoderando a equipe&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Pegar um poder de um lugar e levá-lo para outro lugar.&lt;/li&gt;
&lt;li&gt;Empoderar os integrantes da equipe.&lt;/li&gt;
&lt;li&gt;O poder sempre vai existir em um sistema social.&lt;/li&gt;
&lt;li&gt;Normalmente esse poder fica onde está o maior risco, naturalmente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Quem deve resolver um problema, dentro de um sistema social complexo, é quem está mais próximo do problema.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;No Empowerment você não dá o poder, você empresta o poder.&lt;/li&gt;
&lt;li&gt;Empoderar está relacionado com delegar, mas delegar não é deLARGAR.&lt;/li&gt;
&lt;li&gt;Delegar é compartilhar a responsabilidade, não perder a responsabilidade. É preciso treinar, acompanhar e dar o devido suporte.&lt;/li&gt;
&lt;li&gt;Desenvolvimento ágil funciona por causa de times auto-organizáveis.&lt;/li&gt;
&lt;li&gt;Veja a delegação como um investimento.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;confiança&#34;&gt;Confiança&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ganhe a confiança das pessoas.&lt;/li&gt;
&lt;li&gt;Você destrói a confiança das pessoas quando não lidera pelo exemplo e espera que as pessoas façam coisas que você mesmo não faria.&lt;/li&gt;
&lt;li&gt;É comum que as pessoas procurem o gestor para obter respostas, muitas vezes não dar a resposta e permitir que o time trabalhe junto para encontrá-la é uma forma de ajudá-los a ganhar confiança uns-nos-outros.&lt;/li&gt;
&lt;li&gt;Confie em si mesmo. Seja fiel aos seus próprios valores.&lt;/li&gt;
&lt;li&gt;Faça uma lista explicita com áreas de autorização. Preparar a agenda do projeto. Escolher tecnologias chave. Definir padrões de documentação.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Melhore o processo em vez de culpar as pessoas.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;quadro-de-delegação-autorização&#34;&gt;Quadro de delegação/autorização&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Quatro estilos de liderança

&lt;ol&gt;
&lt;li&gt;Telling (contar)&lt;/li&gt;
&lt;li&gt;Selling (vender)&lt;/li&gt;
&lt;li&gt;Participating (participar)&lt;/li&gt;
&lt;li&gt;Delegation (delegar)&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;O envolvimento depende da tarefa

&lt;ol&gt;
&lt;li&gt;Responsible&lt;/li&gt;
&lt;li&gt;Accountable&lt;/li&gt;
&lt;li&gt;Consulted&lt;/li&gt;
&lt;li&gt;Informed&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Os 7 níveis de autoridade

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Contar&lt;/strong&gt; &amp;#8211; decidir como gerente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vender&lt;/strong&gt; &amp;#8211; convencer as pessoas da sua decisão.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Consultar&lt;/strong&gt; &amp;#8211; colher informações do time antes de decidir.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concordar&lt;/strong&gt; &amp;#8211; Decidir junto com o time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aconselhar&lt;/strong&gt; &amp;#8211; Inluenciar a decisão do time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interrogar&lt;/strong&gt; &amp;#8211; Pedir feedback depois da decisão do time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Delegar&lt;/strong&gt; &amp;#8211; Sem incluência, deixar o time resolver.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;O nível ideal e autoridade depende da competência das pessoas e do impacto organizacional das decisões&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;game-delegation-poker&#34;&gt;Game: Delegation Poker&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Encontre os cartões do &lt;strong&gt;poker da delegação&lt;/strong&gt; e as estórias.&lt;/li&gt;
&lt;li&gt;Uma das pessoas escolhe uma estória e lê em voz alta ou conta uma estória da experiência pessoal.&lt;/li&gt;
&lt;li&gt;Todos escolhem (em particular) um dos 7 cartões.&lt;/li&gt;
&lt;li&gt;Depois que tiverem decidido, mostrem os cartões.&lt;/li&gt;
&lt;li&gt;Todos ganham pontos exceto a minoria com valores altos.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;develop-competence&#34;&gt;Develop competence&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Faça uma auto-avaliação: defina uma meta, avalie sua competência e seu conhecimento naquela disciplina.&lt;/li&gt;
&lt;li&gt;Competência = conhecimento vs disciplina.&lt;/li&gt;
&lt;li&gt;Não olhe para competência como algo de conhecimento natural. Invista em competências fora do comum para a equipe, como cursos/treinamentos sobre gestão de tempo.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;learning&#34;&gt;Learning&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;O momento em que você está aprendendo, você não tem performance. Para ter performance você precisa repetir as coisas.&lt;/li&gt;
&lt;li&gt;Você não aprende no &amp;#8220;campeonato&amp;#8221;. No campeonato você precisa de performance.&lt;/li&gt;
&lt;li&gt;Em desenvolvimento web tem um problema: você precisa aprender enquanto performa.&lt;/li&gt;
&lt;li&gt;Prescriptive Learning. O aprendizado dos &amp;#8220;alunos&amp;#8221; é determinado por quem ensina.&lt;/li&gt;
&lt;li&gt;Emergent Learning. Aprendizado não programado, não planejado. Você cria condições para que o aprendizado aconteça, mas não determina que ele aconteça.&lt;/li&gt;
&lt;li&gt;Para gerar emergent learning precisa haver discussão a nível igualitário. Caso contrário é precriptive learning.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;grow-structure&#34;&gt;Grow structure&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Exemplo Toyota na China:

&lt;ul&gt;
&lt;li&gt;Você é seu próprio CEO, você deve fazer isso dar dinheiro, você tornar o empreendimento lucrativo.&lt;/li&gt;
&lt;li&gt;Para tanto criou-se múltiplas áreas, idênticas, que competiam e colaboravam umas com as outras ao mesmo tempo.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;O ambiente de trabalho é uma rede. As pessoas se comunicam.&lt;/li&gt;
&lt;li&gt;Um expertise individual não distingue pessoas com alta performance.&lt;/li&gt;
&lt;li&gt;Em sistemas compelxos, estruturas emergem naturalmente.&lt;/li&gt;
&lt;li&gt;Teoria das Fractais: melhor comunicação por todas as escalas.&lt;/li&gt;
&lt;li&gt;Você não é um especialista em tudo. Você pode ser especialista em uma coisa e ter conhecimento em outras. Você quer ser escritor, mas gosta de palestrar e ser instrutor, mas não é especialista nestas áreas.&lt;/li&gt;
&lt;li&gt;Promova líderes informais&lt;/li&gt;
&lt;li&gt;Nós temos mais nomes de cargos do que pessoas. Esqueça os cargos e lide com as pessoas.&lt;/li&gt;
&lt;li&gt;É impossível para as pessoas saberem o que acontece em toda a empresa. Por isso, se preocupe com as coisas que você precisa fazer agora e não com distrações de próximos projetos ou como resolver um problema que irá existir mais pra frente.&lt;/li&gt;
&lt;li&gt;Dois times de 5 é melhor dos que um time de 10.&lt;/li&gt;
&lt;li&gt;Se há um bom trabalho como Scrum Master, o time não precisa de liderança direta. O time consegue se virar sozinho.&lt;/li&gt;
&lt;li&gt;Plan:

&lt;ul&gt;
&lt;li&gt;what is your goal?&lt;/li&gt;
&lt;li&gt;Where is it going well?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Do:

&lt;ul&gt;
&lt;li&gt;what are the crucial steps?&lt;/li&gt;
&lt;li&gt;when and where do you start?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Check:

&lt;ul&gt;
&lt;li&gt;how you get the feedbacks?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Act

&lt;ul&gt;
&lt;li&gt;How do you accelerate the results?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Tente várias vezes até dar certo.&lt;/li&gt;
&lt;li&gt;Um sistema social é complexo e adaptativo. Continue cutucando-o e veja como ele responde e muda.&lt;/li&gt;
&lt;li&gt;mensagens racionais não é o bastante. Trate as pessoas com emoção.&lt;/li&gt;
&lt;li&gt;A cultura muda apenas depois que você a atitude das pessoas.&lt;/li&gt;
&lt;li&gt;A estrutura de uma organização não depende do seu ambiente.&lt;/li&gt;
&lt;li&gt;Mudanças de ambiente, mudanças nos tipos de produtos, mudanças no tamanho da empresa e mudanças de pessoas deveriam liderar a mudança da estrutura da organização.&lt;/li&gt;
&lt;li&gt;Gerentes não precisam conhecer o melhor diagrama organizacional. O que eles precisam é de conselhos de como se adaptar.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;mais-sobre-o-assunto&#34;&gt;Mais sobre o assunto:&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.management30.com&#34;&gt;Management 3.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.happymelly.com&#34;&gt;Happy Melly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jurgenappelo.com&#34;&gt;Jurgen Appelo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Como evitar maus clientes</title>
      <link>http://tableless.com.br/como-evitar-maus-clientes/</link>
      <pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/como-evitar-maus-clientes/</guid>
      <description>

&lt;p&gt;Eu sei, atender é muito difícil e &lt;a href=&#34;http://tableless.com.br/atender-bem-para-atender-sempre&#34;&gt;atender bem&lt;/a&gt; é mais difícil ainda. Mas existem dois pontos importantes que se bem administrados você pode evitar muita dor de cabeça na hora de negociar e entregar um projeto.&lt;/p&gt;

&lt;h2 id=&#34;lei-da-compensação&#34;&gt;Lei da compensação&lt;/h2&gt;

&lt;p&gt;Muitos negócios acabam logo no início por que um dos lados abre mão de muita coisa nas negociações iniciais do projeto. Quem nunca negociou com clientes que além de pedirem descontos, querem que definir a data de pagamento e a data entrega do projeto?&lt;/p&gt;

&lt;p&gt;A lei da compensação é simples: você não pode abrir mão de alguma coisa sem ter algo em troca. Por exemplo: se o cliente brigar por preço, você pede uma data maior de entrega. Se ele pede uma data de entrega menor, você briga por preço. Não é justo um de vocês decidir quanto pagar e quando entregar. Você pode acabar fazendo um projeto com uma data impossível de entregar por um preço baixíssimo ou o cliente pode ter um projeto caro e que vai demorar pra ser entregue. Entende?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Essa história de 40% no aceite 60% na entrega pode até dar certo, mas só se você confiar no seu taco.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Você também pode brigar por features no projeto. Se o projeto precisa ser entregue em uma data que não poderá ser mudada, é interessante negociar a quantidade de features do projeto. Dessa forma você simplifica o desenvolvimento. Por outro lado o projeto pode ficar mais barato para o cliente, e consequentemente você ganha menos. O importante é equalizar os fatores. Você vai ganhar menos, mas também vai trabalhar menos. Isso significa menos profissionais alocados, logo, menos dinheiro sendo gasto em um único projeto, e os profissionais podem ser liberados para outros jobs.&lt;/p&gt;

&lt;p&gt;Existe aquele cenário onde há a data da entrega é imutável e as features não podem ser retiradas. Nesse caso você briga por preço. Um projeto assim geralmente não é barato, já que você precisa envolver mais pessoas para entregar na data com todas as features acordadas.&lt;/p&gt;

&lt;p&gt;Entenda que você precisa ser duro nesses cenários. Isso se chama negociação. 🙂&lt;/p&gt;

&lt;p&gt;Você não pode simplesmente abrir mão de algo sem ter nada em troca. A mesma coisa é aplicada para o cliente. Ele não pode e nem deve abrir mão de algo no projeto dele sem ter algo em troca.&lt;/p&gt;

&lt;p&gt;Agora, se você ficar com essa bobeira de &amp;#8220;Ah, mas eu preciso de dinheiro e se eu não pegar esse cliente, outro cara vai pegar&amp;#8221;, você só vai piorar sua situação profissional e pessoal.&lt;/p&gt;

&lt;h2 id=&#34;datas-e-pagamentos&#34;&gt;Datas e pagamentos&lt;/h2&gt;

&lt;p&gt;Definir a data de entrega dos projetos não é algo trivial. Você nunca vai acertar na primeira vez, nem na segunda. Requer prática e sangue frio. Muitos se perdem nesse ponto por que além de não estimarem direito, acabam atrelando o pagamento da última parcela ou até mesmo do pagamento inteiro com a data de entrega do projeto. E se você atrasa o projeto? E se o cliente muda de ideia no meio do caminho? Se esse projeto se arrastar durante meses você vai aguentar ficar sem a última parcela do pagamento?&lt;/p&gt;

&lt;p&gt;Essa história de 40% no aceite 60% na entrega pode até dar certo, mas só se você confiar no seu taco e na capacidade do cliente de não mudar de ideia.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A lei da compensação é simples: você não pode abrir mão de alguma coisa sem ter algo em troca.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Essa forma de pagamento ajudam os clientes a se protegerem caso o projeto atrase ou você suma no mundo. É compreensível já que existe tantos picaretas por aí. Nesse caso tenha em mente de ter dado uma data para entrega factível, de acordo com suas capacidades, de forma que você tenha fôlego para desenvolver o projeto e talvez até entregar antes do esperado.&lt;/p&gt;

&lt;h2 id=&#34;desista-de-clientes-ruins&#34;&gt;Desista de clientes ruins&lt;/h2&gt;

&lt;p&gt;Não importa em qual fase do projeto você esteja, se o cliente não coopera com pagamento, se te pede mais do que o acordado sem te pagar a mais por isso ou qualquer outro motivo de forma que você saia prejudicado, desista dele.&lt;/p&gt;

&lt;p&gt;Assim como há maus profissionais existem maus clientes. Nesse caso, não perca tempo, pule pra outro e siga em frente. Seja transparente, explique seus motivos, tente resolver a situação. Mas &lt;strong&gt;não tenha medo de deixar um mal cliente para trás&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Atender alguém que apenas quer sugar seu esforço é o primeiro passo para o negócio empacar. Por isso respire fundo e tome alguma atitude.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Não vale a pena levar o projeto adiante se o cliente não entende o seu cenário. Se ele não está disposto a mudar, mude você caia fora. Esse cliente vai falar um monte, vai brigar, vai te chamar de safado e ladrão, mas seja firme em sua decisão. Era um compromisso parasita para você e para sua empresa. Vai bater aquele arrependimento, sensação de ter jogado dinheiro fora, mas não se engane, você fez o melhor que podia.&lt;/p&gt;

&lt;p&gt;Assuntos como esse quase nunca são discutidos em nosso mercado. Muitos freelas ou empreendedores novatos aprendem isso da maneira mais difícil. Mas quando aprendemos, lidamos com nossos projetos de forma mais confiante, errando menos e deixando os clientes que merecem mais felizes.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>