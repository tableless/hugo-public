<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/android/index.xml</link>
    <description>Recent content in Android on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Criando uma aplica√ß√£o m√≥vel com Ionic 2 e Angular 2 em dez passos</title>
      <link>https://tableless.github.io/hugo-public/criando-uma-aplicacao-movel-com-ionic-2-e-angular-2-em-dez-passos/</link>
      <pubDate>Fri, 04 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-uma-aplicacao-movel-com-ionic-2-e-angular-2-em-dez-passos/</guid>
      <description>

&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;

&lt;p&gt;√Ä esta altura do campeonato √© prov√°vel que voc√™ j√° tenha ouvido falar da nova vers√£o deste famoso framework para cria√ß√£o de aplica√ß√µes m√≥veis h√≠bridas. O &lt;strong&gt;&lt;a href=&#34;https://ionicframework.com/docs/v2/&#34; target=&#34;_blank&#34;&gt;Ionic 2&lt;/a&gt;&lt;/strong&gt; acaba de chegar em seu &lt;em&gt;Release Candidate&lt;/em&gt; e, com ele, tr√°s uma s√©rie de recursos e otimiza√ß√µes de c√≥digo, al√©m de um consider√°vel ganho de performance! Muito desse m√©rito se deve ao &lt;strong&gt;&lt;a href=&#34;https://angular.io/&#34; target=&#34;_blank&#34;&gt;Angular&lt;/a&gt;&lt;/strong&gt; (como √© chamada a nova vers√£o do framework, que deixa para tr√°s o &amp;#8220;JS&amp;#8221; ao final do nome) que chega &amp;#8211; finalmente &amp;#8211; na sua vers√£o est√°vel, provando que n√£o est√° para brincadeiras.&lt;/p&gt;

&lt;p&gt;Depois de passar por v√°rias mudan√ßas e quebras de c√≥digo √† cada novo release, o &lt;strong&gt;Ionic 2&lt;/strong&gt; agora atinge a maturidade e se torna um competidor ainda mais forte do modelo de desenvolvimento tradicional (nativo). No entanto, se voc√™ j√° est√° familiarizado com o &lt;strong&gt;&lt;a href=&#34;http://ionicframework.com/&#34; target=&#34;_blank&#34;&gt;Ionic 1&lt;/a&gt;&lt;/strong&gt;, a mudan√ßa nos conceitos pode lhe soar um tanto quanto desagrad√°veis √† primeira vista. Mas uma vez que voc√™ entende como as pe√ßas se encaixam, vai perceber que criar aplica√ß√µes m√≥veis com o framework tornou-se uma atividade ainda mais simples e recompensadora.&lt;/p&gt;

&lt;h3 id=&#34;o-que-tem-de-novo&#34;&gt;O que tem de novo?&lt;/h3&gt;

&lt;p&gt;O Ionic foi desenvolvido com base no &lt;strong&gt;&lt;a href=&#34;https://angularjs.org/&#34; target=&#34;_blank&#34;&gt;AngularJS&lt;/a&gt;&lt;/strong&gt;, um framework voltado para a cria√ß√£o de aplica√ß√µes web modernas, constru√≠das com base em uma p√°gina &lt;strong&gt;HTML5&lt;/strong&gt; que atualiza seu conte√∫do de maneira din√¢mica (as famosas &lt;em&gt;Single Page Applications&lt;/em&gt; ou &lt;em&gt;SPAs&lt;/em&gt;). Ao tirar proveito dessa arquitetura &amp;#8211; e adicionar uma s√©rie de estilos que emulam o visual de aplica√ß√µes nativas &amp;#8211; o Ionic facilitou, em muito, a tarefa de construir um app h√≠brido, ou seja, aquele que executa tanto em smartphones &lt;strong&gt;iOS&lt;/strong&gt; quando &lt;strong&gt;Android&lt;/strong&gt;, otimizando o seu &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Time_to_market&#34; target=&#34;_blank&#34;&gt;Tempo de Mercado&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Mesmo ainda sendo executado em uma &lt;strong&gt;WebView&lt;/strong&gt; (browser interno dos smartphones), uma aplica√ß√£o baseada no Ionic 2 √© muito mais r√°pida, modular e escal√°vel, se comparada com a primeira vers√£o. Principalmente porque o framework segue os padr√µes web mais recentes, como a nova especifica√ß√£o &lt;strong&gt;ES6&lt;/strong&gt; (ou ES2015), trazendo para o javaScript conceitos como &lt;strong&gt;classes&lt;/strong&gt;, &lt;strong&gt;m√≥dulos&lt;/strong&gt; e &lt;strong&gt;arrow functions&lt;/strong&gt;. Al√©m disso, temos tamb√©m a presen√ßa do pol√™mico &lt;strong&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34; target=&#34;_blank&#34;&gt;TypeScript&lt;/a&gt;&lt;/strong&gt; (opcional), que tr√°s o poder da tipagem para o seu c√≥digo, com o intuito de minimizar erros, simplificar a inje√ß√£o de depend√™ncias, facilitar testes, e etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/tumblr_npjjd6T4Lu1tq4of6o1_400.gif&#34; alt=&#34;Too much information - gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Mas embora tudo isso pare√ßa um verdadeiro balaio de gato que funciona mais como repelente do que atrativo, n√£o se deixe enganar: A vers√£o 2 do Ionic d√° um consider√°vel salto de inova√ß√£o em rela√ß√£o √† sua vers√£o original e abre caminho para &lt;a href=&#34;https://ionicframework.com/docs/v2/resources/progressive-web-apps/&#34; target=&#34;_blank&#34;&gt;novas e interessantes tend√™ncias&lt;/a&gt; que valem a pena serem exploradas!&lt;/p&gt;

&lt;h2 id=&#34;m√£o-na-massa&#34;&gt;M√£o na massa!&lt;/h2&gt;

&lt;p&gt;Para entender melhor como se constr√≥i uma aplica√ß√£o com o Ionic 2, vamos criar uma do zero üòÄ&lt;/p&gt;

&lt;p&gt;A aplica√ß√£o que iremos construir √© um simples leitor de feeds baseado na API do &lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/&#34; target=&#34;_blank&#34;&gt;Reddit&lt;/a&gt;&lt;/strong&gt;, o poderoso canal agregador de not√≠cias, onde membros da comunidade podem submeter conte√∫dos como links, textos, imagens, etc. O app ser√° 100% funcional e poder√° ser instalado no seu smartphone e, quem sabe, at√© mesmo evoluir com a inclus√£o de novas funcionalidades.&lt;/p&gt;

&lt;h3 id=&#34;instalando-o-framework&#34;&gt;Instalando o framework&lt;/h3&gt;

&lt;p&gt;Se voc√™ j√° tem o Ionic 1 instalado na sua m√°quina, basta digitar o seguinte comando no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g ionic&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Esse comando atualiza o framework para trabalhar com o Ionic 2 sem afetar a instala√ß√£o da vers√£o 1.&lt;/p&gt;

&lt;p&gt;Mas caso voc√™ seja marinheiro de primeira viagem, certifique-se que tenha o &lt;strong&gt;&lt;a href=&#34;https://nodejs.org/en/&#34; target=&#34;_blank&#34;&gt;Node.js&lt;/a&gt;&lt;/strong&gt; instalado na sua m√°quina e, em seguida, digite no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g ionic cordova&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lembre-se de que voc√™ tamb√©m deve ter o SDK do Android e o Java instalados para fazer build para Android e/ou o Xcode para o build no iPhone:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ionicframework.com/docs/v2/resources/platform-setup/mac-setup.html&#34; target=&#34;_blank&#34;&gt;Guia de instala√ß√£o para Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ionicframework.com/docs/v2/resources/platform-setup/windows-setup.html&#34; target=&#34;_blank&#34;&gt;Guia de instala√ß√£o para Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Depois que a instala√ß√£o for conclu√≠da, voc√™ pode verificar a vers√£o do framework no terminal, digitando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic -v&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;criando-um-novo-projeto&#34;&gt;Criando um novo projeto&lt;/h3&gt;

&lt;p&gt;O CLI (&lt;em&gt;Command Line Interface&lt;/em&gt;) do Ionic vem com um monte de comandos √∫teis que nos ajudam na cria√ß√£o e na manuten√ß√£o dos projetos. Para conferir a lista de comandos dispon√≠veis, digite:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic help&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Por enquanto o que nos interessa √© o comando &lt;strong&gt;start&lt;/strong&gt;. Digite o seguinte no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic start MyReader blank --v2 --appname &amp;quot;Best Reader Ever&amp;quot; --id &amp;quot;com.tableless.myreader&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;O comando &lt;strong&gt;start&lt;/strong&gt; oferece tr√™s tipos de templates com c√≥digo boilerplate. S√£o eles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;sidemenu&lt;/strong&gt; &amp;#8211; adiciona um menu lateral √† aplica√ß√£o (estilo de navega√ß√£o &lt;a href=&#34;https://material.google.com/patterns/navigation-drawer.html&#34; target=&#34;_blank&#34;&gt;padr√£o no Android&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tabs&lt;/strong&gt; &amp;#8211; cria uma navega√ß√£o baseada em guias (modelo de organiza√ß√£o de conte√∫do &lt;a href=&#34;https://developer.apple.com/ios/human-interface-guidelines/ui-bars/tab-bars/&#34; target=&#34;_blank&#34;&gt;incentivado pelo iOS&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;blank&lt;/strong&gt; &amp;#8211; cria um projeto com boilerplate b√°sico, sem nenhum template espec√≠fico.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O comando que digitamos no terminal vai utilizar o template &lt;strong&gt;blank&lt;/strong&gt;. Tamb√©m passamos mais tr√™s par√¢metros adicionais: &lt;strong&gt;v2&lt;/strong&gt; que informa que queremos trabalhar com a vers√£o 2 do Ionic, &lt;strong&gt;appname&lt;/strong&gt;, que define um nome de projeto menos formal e &lt;strong&gt;id&lt;/strong&gt;, que nos possibilita definir o package da aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;Vamos agora acessar a pasta do nosso projeto, digitando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd MyReader&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;passo-1-8211-conhecendo-a-arquitetura&#34;&gt;Passo 1 &amp;#8211; Conhecendo a arquitetura&lt;/h3&gt;

&lt;p&gt;Depois de tantas configura√ß√µes e explica√ß√µes iremos, enfim, para a parte divertida do processo!&lt;/p&gt;

&lt;p&gt;Se voc√™ visitar a pasta do projeto dentro de &lt;strong&gt;src/pages/&lt;/strong&gt;, vai notar a presen√ßa de uma outra pasta chamada &lt;strong&gt;home&lt;/strong&gt;. Dentro dela h√° tr√™s arquivos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;home.html;&lt;/li&gt;
&lt;li&gt;home.scss;&lt;/li&gt;
&lt;li&gt;home.ts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essas pastas e arquivos foram criados como resultado do comando &lt;strong&gt;start&lt;/strong&gt;. O Ionic √© baseado no Angular que, por sua vez, considera que os principais componentes de uma aplica√ß√£o devem ter escopos isolados. Portanto, cada &amp;#8220;p√°gina&amp;#8221; de um projeto tem seu pr√≥prio template visual (html), estilo (scss) e classe (ts). Perceba tamb√©m que, por padr√£o, o Ionic utiliza &lt;strong&gt;Sass&lt;/strong&gt; para a escrita de CSS e TypeScript para as classes, ao inv√©s de JavaScript puro. Fique √† vontade para vasculhar as pastas do projeto e entender como as informa√ß√µes s√£o organizadas, uma vez que este tutorial n√£o tem o prop√≥sito de explorar isso com detalhes.&lt;/p&gt;

&lt;p&gt;Antes de modificar algo no projeto, vamos verificar o que j√° foi gerado de gra√ßa. Digite no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic serve&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Este comando inicia um servidor local na nossa m√°quina e abre uma nova aba no browser com a aplica√ß√£o no ar. Como o &lt;em&gt;LiveReload&lt;/em&gt; j√° vem habilitado por padr√£o, modifica√ß√µes que fizermos no c√≥digo ser√£o refletidas automaticamente no browser:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-localhost-1.jpg&#34; alt=&#34;Ionic 2 - Screenshot 1 localhost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos ver isso acontecendo em tempo real. Abra o arquivo &lt;strong&gt;home.html&lt;/strong&gt; e remova o c√≥digo desnecess√°rio at√© que ele fique assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-header&amp;gt;
  &amp;lt;ion-navbar&amp;gt;
    &amp;lt;ion-title&amp;gt;My Feed Reader&amp;lt;/ion-title&amp;gt;
  &amp;lt;/ion-navbar&amp;gt;
&amp;lt;/ion-header&amp;gt;

&amp;lt;ion-content&amp;gt;

&amp;lt;/ion-content&amp;gt;&lt;/pre&gt;

&lt;p&gt;Confira a mudan√ßa ocorrendo automaticamente no browser:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-localhost-2.jpg&#34; alt=&#34;Ionic 2 - Screenshot 2 localhost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora vamos dar uma olhada no componente respons√°vel por controlar nosso template. Abra o arquivo &lt;strong&gt;home.ts&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Component } from &#39;@angular/core&#39;;
import { NavController } from &#39;ionic-angular&#39;;

@Component({
   selector: &#39;page-home&#39;,
   templateUrl: &#39;home.html&#39;
})
export class HomePage {
   constructor(public navCtrl: NavController) {}
}
&lt;/pre&gt;

&lt;p&gt;Perceba que o arquivo √© composto por tr√™s blocos distintos, que eu chamo carinhosamente de os &lt;strong&gt;3D&lt;/strong&gt;: &lt;strong&gt;Declaration&lt;/strong&gt;, &lt;strong&gt;Decorator&lt;/strong&gt; e &lt;strong&gt;Definition&lt;/strong&gt;. A primeira parte √© onde declaramos componentes externos ou bibliotecas que iremos utilizar em nosso projeto:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Component } from &#39;@angular/core&#39;;
import { NavController } from &#39;ionic-angular&#39;;
&lt;/pre&gt;

&lt;p&gt;O segundo bloco √© composto por um &lt;strong&gt;Decorator&lt;/strong&gt;. No Angular, todo componente tem um &amp;#8220;decorador&amp;#8221;, que √© respons√°vel por fornecer metadados ou informa√ß√µes sobre a classe. No nosso caso, o decorador est√° dizendo que as modifica√ß√µes no html ser√£o feitas apenas no componente &lt;strong&gt;page-home&lt;/strong&gt; e que este arquivo, ou seja, o template html que iremos utilizar, se chama &lt;strong&gt;home.html&lt;/strong&gt;, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;@Component({
   selector: &#39;page-home&#39;,
   templateUrl: &#39;home.html&#39;
})
&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Lembre-se que, por padr√£o, os Decorators ficam sempre em cima do bloco de defini√ß√£o da classe.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O seletor &lt;strong&gt;page-home&lt;/strong&gt; ser√° √∫til quando for necess√°rio criar regras de estilo em CSS aplicadas apenas √† ele.&lt;/p&gt;

&lt;p&gt;E, por fim, temos nosso escopo de classe. Classes em qualquer linguagem de programa√ß√£o orientada √† objeto servem para definir a estrutura e o comportamento de objetos. Por enquanto o que voc√™ precisa saber √© que nossa classe tem apenas um construtor que recebe um objeto do tipo &lt;strong&gt;NavController&lt;/strong&gt; por par√¢metro. Nosso pr√≥ximo passo ser√° inserir novos atributos e m√©todos para definir melhor o seu comportamento:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;export class HomePage {
  constructor(public navCtrl: NavController) {}
&lt;/pre&gt;

&lt;h3 id=&#34;passo-2-8211-consumindo-dados-de-uma-api-p√∫blica&#34;&gt;Passo 2 &amp;#8211; Consumindo dados de uma API p√∫blica&lt;/h3&gt;

&lt;p&gt;Agora que voc√™ j√° sabe mais ou menos como as coisas funcionam, vamos fazer rapidamente uma requisi√ß√£o √† uma API externa (Reddit) para exibir seu resultado em uma lista no nosso template.&lt;/p&gt;

&lt;h4 id=&#34;2-1-8211-trabalhando-com-observables&#34;&gt;2.1 &amp;#8211; Trabalhando com Observables&lt;/h4&gt;

&lt;p&gt;Inclua o seguinte c√≥digo em &lt;strong&gt;home.ts&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Component } from &#39;@angular/core&#39;;
import { NavController } from &#39;ionic-angular&#39;;
import { Http } from &#39;@angular/http&#39;;
import &#39;rxjs/add/operator/map&#39;;

@Component({
  selector: &#39;page-home&#39;,
  templateUrl: &#39;home.html&#39;
})
export class HomePage {

  public feeds: Array&amp;lt;string&amp;gt;;
  private url: string = &#34;https://www.reddit.com/new.json&#34;;  

  constructor(public navCtrl: NavController, public http: Http) {

    this.http.get(this.url).map(res =&amp;gt; res.json())
      .subscribe(data =&amp;gt; {
        this.feeds = data.data.children;
      }); 
  }

}
&lt;/pre&gt;

&lt;p&gt;_Caso queira entender melhor sobre os endpoints da API, d√™ uma olhada &lt;a href=&#34;https://www.reddit.com/dev/api/&#34; target=&#34;_blank&#34;&gt;nesse link&lt;/a&gt;._&lt;/p&gt;

&lt;p&gt;O que fizemos acima foi importar o componente &lt;strong&gt;Http&lt;/strong&gt; e injet√°-lo no m√©todo construtor. Isso nos possibilita acessar sua inst√¢ncia atrav√©s do objeto &lt;strong&gt;this&lt;/strong&gt;. Note que tamb√©m estamos importando o operador &lt;strong&gt;map&lt;/strong&gt; da biblioteca &lt;strong&gt;&lt;a href=&#34;https://github.com/Reactive-Extensions/RxJS&#34; target=&#34;_blank&#34;&gt;rxjs&lt;/a&gt;&lt;/strong&gt;. O rxjs √© uma das extens√µes que comp√µe a &lt;strong&gt;&lt;a href=&#34;http://reactivex.io/&#34; target=&#34;_blank&#34;&gt;reactiveX&lt;/a&gt;&lt;/strong&gt; (Reactive Extensions), uma biblioteca ass√≠ncrona que trabalha com o stream de dados no padr√£o &lt;strong&gt;Observable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No objeto http estamos fazendo uma requisi√ß√£o do tipo &lt;strong&gt;GET&lt;/strong&gt; √† um endpoint que definimos na vari√°vel &lt;strong&gt;url&lt;/strong&gt;, acima do m√©todo construtor. Note que, com o uso do TypeScript, podemos definir seu escopo (p√∫blica ou privada) e ainda definir o seu tipo (string, number, array&amp;#8230;). Ponto para o TypeScript!&lt;/p&gt;

&lt;p&gt;Em seguida, transformamos o resultado dessa requisi√ß√£o utilizando o operador map e o convertemos para JSON atrav√©s do m√©todo &lt;strong&gt;subscribe&lt;/strong&gt; (&amp;#8220;similar&amp;#8221; ao m√©todo &lt;strong&gt;then&lt;/strong&gt; de uma Promise).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;√â importante salientar que o map da biblioteca rxjs √© utilizado exclusivamente para mapear um &lt;strong&gt;array do tipo Observable&lt;/strong&gt; e n√£o √© o mesmo map que utilizamos em um array comum no JavaScript. Aprenda mais sobre requisi√ß√µes remotas com Observables &lt;a href=&#34;https://angular.io/docs/ts/latest/guide/server-communication.html#!#rxjs&#34; target=&#34;_blank&#34;&gt;nesse link&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Por fim, inclu√≠mos o resultado da requisi√ß√£o (agora um objeto do tipo JSON) dentro da vari√°vel p√∫blica &lt;strong&gt;feeds&lt;/strong&gt;, que aqui representa um array de strings. Seu escopo precisa ser p√∫blico pois iremos acessar seu conte√∫do no template.&lt;/p&gt;

&lt;h4 id=&#34;2-2-8211-exibindo-resultado-para-o-usu√°rio&#34;&gt;2.2 &amp;#8211; Exibindo resultado para o usu√°rio&lt;/h4&gt;

&lt;p&gt;Como voc√™ percebeu, dentro do nosso arquivo &lt;strong&gt;home.ts&lt;/strong&gt; h√° uma refer√™ncia ao template &lt;strong&gt;home.html&lt;/strong&gt; dentro do bloco &lt;strong&gt;@Component&lt;/strong&gt;. Esse template, na verdade, √© aquilo que o usu√°rio realmente v√™ na tela do seu smartphone, com base no que definimos dentro da nossa classe. Por enquanto ele n√£o est√° exibindo nada. Modifique o conte√∫do de &lt;strong&gt;home.html&lt;/strong&gt; conforme abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-header&amp;gt;
  &amp;lt;ion-navbar&amp;gt;
    &amp;lt;ion-title&amp;gt;My Feed Reader&amp;lt;/ion-title&amp;gt;
  &amp;lt;/ion-navbar&amp;gt;
&amp;lt;/ion-header&amp;gt;

&amp;lt;ion-content&amp;gt;
  &amp;lt;ion-list&amp;gt;
    &amp;lt;ion-item *ngFor=&#34;let feed of feeds&#34;&amp;gt;
      {{feed.data.title}}
    &amp;lt;/ion-item&amp;gt;
  &amp;lt;/ion-list&amp;gt;
&amp;lt;/ion-content&amp;gt;
&lt;/pre&gt;

&lt;p&gt;O Ionic fornece uma grande variedade de componentes visuais &lt;em&gt;out of the box&lt;/em&gt; que nos permite construir uma interface praticamente id√™ntica √† de uma aplica√ß√£o nativa. N√£o s√≥ isso como tamb√©m √© capaz de adaptar o seu estilo visual de acordo com cada plataforma (algo que veremos em breve).&lt;/p&gt;

&lt;p&gt;A tag &lt;strong&gt;&lt;ion-navbar&gt;&lt;/strong&gt; representa a barra de navega√ß√£o que fica no topo da tela. Essa barra geralmente comporta o t√≠tulo da aplica√ß√£o (como visto na tag &lt;strong&gt;&lt;ion-title&gt;&lt;/strong&gt;) mas tamb√©m pode conter bot√µes de a√ß√£o e demais itens, caso necess√°rio.&lt;/p&gt;

&lt;p&gt;J√° as informa√ß√µes din√¢micas sempre s√£o inseridas dentro da tag &lt;strong&gt;&lt;ion-content&gt;&lt;/strong&gt;, como acabamos de fazer ao inserir o componente &lt;strong&gt;&lt;ion-list&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;N√£o iremos nos aprofundar nos detalhes dos templates visuais fornecidos pelo Ionic. Voc√™ pode encontrar exemplos do markup de cada componente &lt;a href=&#34;https://ionicframework.com/docs/v2/components&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;. O componente que estamos utilizando no exemplo acima √© &lt;a href=&#34;https://ionicframework.com/docs/v2/components/#lists&#34; target=&#34;_blank&#34;&gt;este&lt;/a&gt;. Eu apenas copiei o markut e inseri aqui, alterando apenas aquilo que √© necess√°rio. Esta √©, sem d√∫vida, uma das features mais importantes do framework, uma vez que ela acelera o processo de prototipa√ß√£o de um aplicativo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Observe o seguinte bloco de c√≥digo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-list&amp;gt;
    &amp;lt;ion-item *ngFor=&#34;let feed of feeds&#34;&amp;gt;
      {{feed.data.title}}
    &amp;lt;/ion-item&amp;gt;
  &amp;lt;/ion-list&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Note o loop que estamos executando com a instru√ß√£o *&lt;strong&gt;ngFor&lt;/strong&gt;. Estamos acessando o conte√∫do do array &lt;strong&gt;feeds&lt;/strong&gt; e iterando sobre ele com uma vari√°vel local (&lt;strong&gt;feed&lt;/strong&gt;) para popular nossa lista. Esta √© uma conveni√™ncia fornecida pelo Angular conhecida como &lt;em&gt;Embedded templates&lt;/em&gt; ou diretivas html, que nos ajuda na renderiza√ß√£o dos atributos dispon√≠veis na classe associada. Observe agora o seguinte trecho:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;{{feed.data.title}}&lt;/pre&gt;

&lt;p&gt;Ele representa o valor que ser√° exibido em cada c√©lula da lista, que, neste caso, representa o t√≠tulo do feed. Esta sintaxe entre chaves duplas √© chamada de &lt;strong&gt;Interpola√ß√£o&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Agora salve o arquivo e verifique o resultado no browser. √â prov√°vel que voc√™ esteja vendo algo assim:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-localhost-3.jpg&#34; alt=&#34;Ionic 2 - Screenshot 3 localhost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Se voc√™ entendeu tudo que foi explicado at√© aqui, significa que voc√™ j√° domina boa parte dos principais conceitos n√£o s√≥ do Ionic 2 como tamb√©m do Angular 2. Parab√©ns!&lt;/p&gt;

&lt;p&gt;Agora √© o momento em que nos despedimos das explica√ß√µes mais detalhadas e partimos para a a√ß√£o. Vamos dar um tapinha no visual desse app e inserir alguns recursos extras que ir√£o torn√°-lo ainda mais sexy üòâ&lt;/p&gt;

&lt;h3 id=&#34;passo-3-8211-customizando-o-template&#34;&gt;Passo 3 &amp;#8211; Customizando o template&lt;/h3&gt;

&lt;p&gt;Nosso pr√≥ximo passo ser√° incluir mais informa√ß√µes nas c√©lulas dessa lista, uma vez que apenas o t√≠tulo n√£o √© o suficiente para capturar a aten√ß√£o do usu√°rio.&lt;/p&gt;

&lt;h4 id=&#34;3-1-8211-adicionando-informa√ß√µes-extras&#34;&gt;3.1 &amp;#8211; Adicionando informa√ß√µes extras&lt;/h4&gt;

&lt;p&gt;Ainda em &lt;strong&gt;home.html&lt;/strong&gt;, altere o conte√∫do atual de dentro da tag &lt;strong&gt;&lt;ion-content&gt;&lt;/strong&gt; para:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;ion-list&amp;gt;
    &amp;lt;ion-item *ngFor=&#34;let feed of feeds&#34;&amp;gt;
       &amp;lt;ion-thumbnail item-left&amp;gt;
          &amp;lt;img [src]=&#34;feed.data.thumbnail&#34;&amp;gt;
       &amp;lt;/ion-thumbnail&amp;gt;
       &amp;lt;h2&amp;gt;{{feed.data.title}}&amp;lt;/h2&amp;gt;
       &amp;lt;p&amp;gt;{{feed.data.domain}}&amp;lt;/p&amp;gt;
    &amp;lt;/ion-item&amp;gt;
 &amp;lt;/ion-list&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Salve o arquivo e visualize o resultado no browser:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-localhost-4.jpg&#34; alt=&#34;Ionic 2 - Screenshot 4 localhost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora estamos utilizando um novo template de lista, que comporta imagens. O Ionic j√° faz o servi√ßo de ajustar os itens pra voc√™ contanto que indiquemos isso atrav√©s dos atributos e classes que o framework nos oferece. Perceba, por exemplo, o atributo &lt;strong&gt;item-left&lt;/strong&gt; presente dentro da tag &lt;strong&gt;&lt;ion-thumbnail&gt;&lt;/strong&gt;. Altere seu nome para &lt;strong&gt;item-right&lt;/strong&gt; e voc√™ ver√° que as imagens ser√£o posicionadas √† direita da c√©lula. Tente tamb√©m alterar a tag &lt;strong&gt;&lt;ion-thumbnail&gt;&lt;/strong&gt; para &lt;strong&gt;&lt;ion-avatar&gt;&lt;/strong&gt; e ver√° que as imagens ficar√£o menores e com bordas arredondadas. Muito conveniente!&lt;/p&gt;

&lt;p&gt;Note que o atributo &lt;strong&gt;src&lt;/strong&gt; da tag de imagem est√° envolto por colchetes. Essa sintaxe se chama &lt;em&gt;Property binding&lt;/em&gt; e √© utilizada para atribuir uma propriedade da view ao valor de uma express√£o. No entanto, a mesma sintaxe pode ser substitu√≠da por esta:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;img src=&#34;{{ feed.data.thumbnail }}&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Para fins did√°ticos iremos deixar a express√£o com colchetes neste exemplo.&lt;/p&gt;

&lt;p&gt;Perceba tamb√©m que o t√≠tulo do feed agora aparece dentro da tag &lt;strong&gt;h2&lt;/strong&gt; e um novo item foi inserido dentro de uma tag &lt;strong&gt;p&lt;/strong&gt;. Voc√™ pode utilizar o &lt;em&gt;Chrome Developer Tools&lt;/em&gt; para inspecionar a conte√∫do da listagem dispon√≠vel no array inserindo a instru√ß√£o &lt;code&gt;console.log(this.feed);&lt;/code&gt; ao fim da requisi√ß√£o, dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.http.get(this.url).map(res =&amp;gt; res.json())
    .subscribe(data =&amp;gt; {
      this.feeds = data.data.children;
     // Exibindo conte√∫do do array no console do browser
      console.log(this.feeds);
    }); 
&lt;/pre&gt;

&lt;h3 id=&#34;passo-4-8211-fornecendo-feedback-ao-cliente-e-capturando-eventos&#34;&gt;Passo 4 &amp;#8211; Fornecendo feedback ao cliente e capturando eventos&lt;/h3&gt;

&lt;p&gt;Embora nossa aplica√ß√£o consiga requisitar dados externos com sucesso, n√£o h√° nada que informe ao usu√°rio sobre o status dessa a√ß√£o. Ele pode aguardar poucos segundos como tamb√©m pode esperar uma eternidade at√© que alguma coisa apare√ßa na tela do celular, dependendo do tipo de conex√£o que esteja enfrentando.&lt;/p&gt;

&lt;h4 id=&#34;4-1-8211-adicionando-um-loading&#34;&gt;4.1 &amp;#8211; Adicionando um Loading&lt;/h4&gt;

&lt;p&gt;Insira o seguinte conte√∫do no arquivo &lt;strong&gt;home.ts&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Component } from &#39;@angular/core&#39;;
import { NavController, LoadingController } from &#39;ionic-angular&#39;;
import { Http } from &#39;@angular/http&#39;;
import &#39;rxjs/add/operator/map&#39;;

@Component({
  selector: &#39;page-home&#39;,
  templateUrl: &#39;home.html&#39;
})
export class HomePage {

  public feeds: Array&amp;lt;string&amp;gt;;
  private url: string = &#34;https://www.reddit.com/new.json&#34;;  

  constructor(public navCtrl: NavController, public http: Http, public loadingCtrl: LoadingController) {

    this.fetchContent();

  }

  fetchContent ():void {
    let loading = this.loadingCtrl.create({
      content: &#39;Fetching content...&#39;
    });

    loading.present();

    this.http.get(this.url).map(res =&amp;gt; res.json())
      .subscribe(data =&amp;gt; {
        this.feeds = data.data.children;
        loading.dismiss();
      });  
  }
&lt;/pre&gt;

&lt;p&gt;Salve o arquivo e verifique imediatamente o resultado no browser:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-localhost-5.jpg&#34; alt=&#34;Ionic 2 - Screenshot 5 localhost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O Loading √© um √≥timo componente para fornecer feedback visual para o usu√°rio, indicando que alguma atividade est√° sendo executada em background. Nada mais √© que uma caixa de di√°logo que bloqueia qualquer atividade do usu√°rio at√© que determinada a√ß√£o seja conclu√≠da. A nossa caixa de di√°logo inclui um spinner e um texto indicativo por padr√£o, mas todas essas op√ß√µes podem ser customizadas para atender melhor a necessidade do seu app.&lt;/p&gt;

&lt;p&gt;Incluir um Loading √© extremamente simples: Primeiro n√≥s importamos o componente &lt;strong&gt;LoadingController&lt;/strong&gt; da biblioteca &lt;strong&gt;ionic-angular&lt;/strong&gt; e injetamos o objeto no m√©todo construtor. Em seguida, inicializamos o Loading com uma mensagem de feedback e depois apresentamos ele atrav√©s do m√©todo &lt;strong&gt;present&lt;/strong&gt;. Depois n√≥s retiramos o componente da tela caso tenhamos sucesso na requisi√ß√£o atrav√©s do m√©todo &lt;strong&gt;dismiss&lt;/strong&gt;. Simples!&lt;/p&gt;

&lt;p&gt;Perceba tamb√©m que, como boa pr√°tica, movemos a requisi√ß√£o da API para um m√©todo chamado &lt;strong&gt;fetchContent&lt;/strong&gt; que √© ent√£o chamado imediatamente no construtor. Outra novidade √© a inclus√£o do tipo de retorno do m√©todo, tipado como &lt;strong&gt;void&lt;/strong&gt;. Se voc√™ vem de linguagens como Java, sabe que esta √© uma maneira de dizer que o m√©todo n√£o retorna nada, apenas executa uma a√ß√£o.&lt;/p&gt;

&lt;h4 id=&#34;4-2-8211-eventos-html&#34;&gt;4.2 &amp;#8211; Eventos html&lt;/h4&gt;

&lt;p&gt;Antes de passarmos para a pr√≥xima etapa, vamos incluir um evento nas c√©lulas. Fa√ßa a seguinte modifica√ß√£o em &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-item *ngFor=&#34;let feed of feeds&#34; (click)=&#34;itemSelected(feed)&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Queremos executar alguma a√ß√£o sempre que o usu√°rio clicar/tocar em uma das c√©lulas. Conseguimos isso fazendo o &lt;em&gt;binding&lt;/em&gt; do m√©todo &lt;strong&gt;itemSelected&lt;/strong&gt; no evento html &lt;strong&gt;click&lt;/strong&gt; e passando o feed como argumento. Essa sintaxe de incluir eventos html dentro de par√™nteses √© chamado de &lt;em&gt;Event Binding&lt;/em&gt; no Angular.&lt;/p&gt;

&lt;p&gt;Agora basta incluir o m√©todo dentro da classe:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;itemSelected (feed):void {
    alert(feed.data.url);
  } 
&lt;/pre&gt;

&lt;p&gt;Salve o arquivo e clique em cima de alguma c√©lula. A url do post ser√° exibida em um alert!&lt;/p&gt;

&lt;h3 id=&#34;passo-5-8211-exibindo-o-conte√∫do-de-uma-url-no-browser&#34;&gt;Passo 5 &amp;#8211; Exibindo o conte√∫do de uma url no browser&lt;/h3&gt;

&lt;p&gt;Agora que voc√™ j√° entendeu como capturar uma a√ß√£o do usu√°rio, vamos prosseguir com as funcionalidades do nosso app e fazer com que o post seja exibido no browser.&lt;/p&gt;

&lt;h4 id=&#34;5-1-8211-instalando-plugin-inappbrowser&#34;&gt;5.1 &amp;#8211; Instalando plugin InAppBrowser&lt;/h4&gt;

&lt;p&gt;Em uma nova aba do terminal, entre na pasta do projeto e digite o seguinte:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic plugin add cordova-plugin-inappbrowser&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Este plugin nos possibilita abrir sites externos em um browser diretamente do app. Mas s√≥ ser√° poss√≠vel testar essa funcionalidade se voc√™ fizer o build para testar no emulador ou no seu pr√≥prio dispositivo. Para isso, digite a seguinte instru√ß√£o no terminal caso voc√™ possua um iPhone:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic platform add ios&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ou, caso tenha um dispositivo Android:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic platform add android&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Agora altere o par√¢metro do m√©todo no arquivo &lt;strong&gt;home.html&lt;/strong&gt; para enviar apenas a url como argumento:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-item *ngFor=&#34;let feed of feeds&#34; (click)=&#34;itemSelected(feed.data.url)&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;E agora basta fazer as seguintes altera√ß√µes em &lt;strong&gt;home.ts&lt;/strong&gt;. Primeiro, importar a classe do plugin:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { InAppBrowser } from &#39;ionic-native&#39;;
&lt;/pre&gt;

&lt;p&gt;Em seguida, fa√ßa a seguinte altera√ß√£o no m√©todo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;itemSelected (url: string):void {
   let browser = new InAppBrowser(url, &#39;_system&#39;);
 }
&lt;/pre&gt;

&lt;p&gt;Pronto! Agora s√≥ resta testar se a funcionalidade est√° sendo executada conforme desejado.&lt;/p&gt;

&lt;h4 id=&#34;5-2-8211-executando-testes-nas-plataformas&#34;&gt;5.2 &amp;#8211; Executando testes nas plataformas&lt;/h4&gt;

&lt;p&gt;Para instalar o emulador do iOS e preparar o ambiente para testes no seu pr√≥prio iPhone, basta digitar no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm -g install ios-sim ios-deploy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora digite a instru√ß√£o abaixo e, caso tudo tenha dado certo, √© prov√°vel que voc√™ veja o aplicativo abrindo no seu emulador:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic run ios&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Caso esteja com o celular conectado ao computador atrav√©s da porta USB, o deploy ser√° automaticamente executado no seu iPhone. Se mesmo assim voc√™ encontrar dificuldades, tente digitar:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic run ios --device&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para testar no Android, apenas digite:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic run android&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Maiores detalhes sobre deploy e testes em ambas plataformas voc√™ encontra &lt;a href=&#34;https://ionicframework.com/docs/v2/resources/developer-tips/&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Caso voc√™ tenha conseguido testar com sucesso, deve ter percebido que, ao clicar em uma das c√©lulas, h√° um certo delay entre o momento do clique e o carregamento da p√°gina. Para corrigir isso, apenas insira o conte√∫do da c√©lula dentro de um &lt;strong&gt;bot√£o&lt;/strong&gt; (button) com o atributo &lt;strong&gt;ion-item&lt;/strong&gt;, dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;button ion-item *ngFor=&#34;let feed of feeds&#34; (click)=&#34;itemSelected(feed.data.url)&#34;&amp;gt;
    &amp;lt;ion-thumbnail item-left&amp;gt;
       &amp;lt;img [src]=&#34;feed.data.thumbnail&#34;&amp;gt;
    &amp;lt;/ion-thumbnail&amp;gt;
    &amp;lt;h2&amp;gt;{{feed.data.title}}&amp;lt;/h2&amp;gt;
    &amp;lt;p&amp;gt;{{feed.data.domain}}&amp;lt;/p&amp;gt;
 &amp;lt;/button&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Agora o delay n√£o s√≥ √© removido como √© adicionado um overlay em tom mais escuro na c√©lula quando a mesma √© pressionada.&lt;/p&gt;

&lt;p&gt;Tem mais uma coisa que est√° incomodando: Perceba que os posts sem imagens est√£o quebrando nosso layout e deixando a nossa lista com aspecto pouco profissional. Vamos mudar isso incluindo o seguinte trecho de c√≥digo dentro do m√©todo &lt;strong&gt;subscribe&lt;/strong&gt; de &lt;strong&gt;fecthContent&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.feeds.forEach((e, i, a) =&amp;gt; {
   if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) { 
      e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
   }
 })
&lt;/pre&gt;

&lt;p&gt;Utilizamos o m√©todo &lt;strong&gt;forEach&lt;/strong&gt; do JavaScript para iterar pelo array de feeds e verificar quais itens est√£o sem imagem. Em seguida, para estes itens, inclu√≠mos uma imagem padr√£o do pr√≥prio reddit, que est√° dispon√≠vel em um link p√∫blico e ir√° servir de placeholder.&lt;/p&gt;

&lt;p&gt;Veja o resultado de todas estas modifica√ß√µes rodando em um device iOS:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step5.gif&#34; alt=&#34;Ionic 2 - InAppBrowser&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;passo-6-8211-adicionando-scroll-infinito-na-c√©lula&#34;&gt;Passo 6 &amp;#8211; Adicionando scroll infinito na c√©lula&lt;/h3&gt;

&lt;p&gt;Nosso app est√° ficando bem legal mas ainda necessita de algumas modifica√ß√µes para ficar realmente atrativo. Uma delas √© viabilizar alguma maneira de acessar os posts mais antigos, j√° que nosso app tem uma restri√ß√£o de apenas 25 itens por request. Isto √© muito ruim, pois o usu√°rio fica limitado √† visitar apenas estes itens.&lt;/p&gt;

&lt;p&gt;Se voc√™ explorar a API do reddit vai perceber que ela nos fornece v√°rios par√¢metros do tipo GET para controlar filtros e pagina√ß√µes. Um deles √© chamado &lt;em&gt;after&lt;/em&gt;, que utiliza o o atributo &lt;em&gt;fullName&lt;/em&gt; (jun√ß√£o do tipo do post mais o seu ID) como identificador √∫nico e funciona como √¢ncora para os demais posts.&lt;/p&gt;

&lt;p&gt;Em outras palavras, uma requisi√ß√£o como esta:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://www.reddit.com/new.json?after=t3_57ct5z&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Pode ser lida como: &amp;#8220;_Busque os novos posts que vem depois do post de nome t3&lt;em&gt;57ct5z&lt;/em&gt;&amp;#8221;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fique atento com a forma como voc√™ l√™ a instru√ß√£o pois h√° uma pegadinha: &lt;strong&gt;Depois&lt;/strong&gt; aqui se refere ao array de posts, ou seja, os posts mais velhos e n√£o os mais recentes. Veremos como buscar os mais recentes na pr√≥xima etapa do app&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Agora que voc√™ j√° entendeu a mec√¢nica, vamos come√ßar inserindo o componente respons√°vel por acionar o scroll infinito na nossa p√°gina. Insira a seguinte instru√ß√£o em &lt;strong&gt;home.html&lt;/strong&gt; imediatamente ap√≥s o fim da tag &lt;strong&gt;&lt;ion-list&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;ion-infinite-scroll (ionInfinite)=&#34;doInfinite($event)&#34;&amp;gt;
    &amp;lt;ion-infinite-scroll-content
       loadingText=&#34;Loading more data...&#34;&amp;gt;
    &amp;lt;/ion-infinite-scroll-content&amp;gt;
 &amp;lt;/ion-infinite-scroll&amp;gt; 
&lt;/pre&gt;

&lt;p&gt;E criamos o m√©todo correspondente em nossa classe:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;doInfinite(infiniteScroll) {

    let paramsUrl = (this.feeds.length &amp;gt; 0) ? this.feeds[this.feeds.length - 1].data.name : &#34;&#34;;

      this.http.get(this.olderPosts + paramsUrl).map(res =&amp;gt; res.json())
        .subscribe(data =&amp;gt; {
        
          this.feeds = this.feeds.concat(data.data.children);
          
          this.feeds.forEach((e, i, a) =&amp;gt; {
            if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
              e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
            }
          })
          infiniteScroll.complete();
        }); 
  }  
&lt;/pre&gt;

&lt;p&gt;Por fim, inserimos a url da requisi√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;private olderPosts: string = &#34;https://www.reddit.com/new.json?after=&#34;;
&lt;/pre&gt;

&lt;p&gt;O novo m√©todo √© bem parecido com o &lt;strong&gt;fetchContent&lt;/strong&gt;, com a diferen√ßa de que criamos uma vari√°vel local que guarda o valor do atributo &lt;strong&gt;nome&lt;/strong&gt; do √∫ltimo item do array de feeds e insere este valor no fim da url. Em seguida, pegamos o array resultante da requisi√ß√£o e adicionamos no fim do array original atrav√©s do m√©todo &lt;strong&gt;concat&lt;/strong&gt; do JavaScript. Note tamb√©m que utilizamos o m√©todo &lt;strong&gt;complete&lt;/strong&gt; do componente, indicando que o mesmo deve ser removido da view.&lt;/p&gt;

&lt;p&gt;O resultado voc√™ confere abaixo:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step6.gif&#34; alt=&#34;Ionic 2 - Infinite Scroll&#34; /&gt;&lt;/p&gt;

&lt;p&gt;E, com isto, inclu√≠mos uma funcionalidade extremamente importante em aplica√ß√µes m√≥veis: A habilidade de adicionar itens em uma lista por demanda, algo que enriquece em muito a experi√™ncia do usu√°rio. Se voc√™ estava esperando instru√ß√µes muito complexas, sinto lhe desapontar!&lt;/p&gt;

&lt;h3 id=&#34;passo-7-8211-atualizando-a-lista-com-pull-to-refresh&#34;&gt;Passo 7 &amp;#8211; Atualizando a lista com pull-to-refresh&lt;/h3&gt;

&lt;p&gt;Da mesma forma que adicionamos uma funcionalidade para carregar posts mais antigos sempre que chegarmos ao fim da nossa lista, precisamos agora viabilizar uma maneira de atualiza-la com os posts mais recentes. Uma excelente maneira de fazer isso √© incluindo o componente &lt;strong&gt;Refresher&lt;/strong&gt; na nossa aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;O Refresher √© um componente que adiciona o recurso de &lt;strong&gt;pull-to-refresh&lt;/strong&gt; √† nossa lista. O pull-to-refresh consiste em manter o dedo pressionado no topo de uma lista e arrast√°-la at√© uma determinada posi√ß√£o at√© que um evento seja disparado. No nosso caso, utilizaremos esse evento para inserir os posts mais recentes no in√≠cio do array, ao contr√°rio do que fizemos com o componente InfiniteScroll.&lt;/p&gt;

&lt;p&gt;Sem mais delongas, vamos come√ßar inserindo o markup do componente antes da tag &lt;strong&gt;&lt;ion-list&gt;&lt;/strong&gt; no arquivo &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;ion-refresher (ionRefresh)=&#34;doRefresh($event)&#34;&amp;gt;
    &amp;lt;ion-refresher-content
       pullingIcon=&#34;arrow-dropdown&#34;
       pullingText=&#34;Pull to refresh&#34;
       refreshingSpinner=&#34;circles&#34;
       refreshingText=&#34;Refreshing...&#34;&amp;gt;
    &amp;lt;/ion-refresher-content&amp;gt;
 &amp;lt;/ion-refresher&amp;gt; 
&lt;/pre&gt;

&lt;p&gt;Diferentemente do InfiniteScroll, desta vez eu inclu√≠ alguns par√¢metros adicionais, como os textos de in√≠cio e fim do evento, o formato padr√£o do spinner, o √≠cone da seta, etc.&lt;/p&gt;

&lt;p&gt;A url da requisi√ß√£o tamb√©m precisa ser diferente, uma vez que iremos buscar os itens mais novos. Utilizaremos ent√£o o par√¢metro &lt;em&gt;before&lt;/em&gt; oferecido pelo Reddit, fazendo com que a nossa nova url fique assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;private newerPosts: string = &#34;https://www.reddit.com/new.json?before=&#34;;
&lt;/pre&gt;

&lt;p&gt;Por fim, inserimos o m√©todo na classe:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;doRefresh(refresher) {

    let paramsUrl = this.feeds[0].data.name;

    this.http.get(this.newerPosts + paramsUrl).map(res =&amp;gt; res.json())
      .subscribe(data =&amp;gt; {
      
        this.feeds = data.data.children.concat(this.feeds);
        
        this.feeds.forEach((e, i, a) =&amp;gt; {
          if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
            e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
          }
        })
        refresher.complete();
      });
  } 

&lt;/pre&gt;

&lt;p&gt;Perceba como o m√©todo √© similar √†quele que escrevemos para o scroll infinito. A √∫nica diferen√ßa est√° na vari√°vel de par√¢metro (que agora guarda o nome do primeiro item da lista como refer√™ncia) e a maneira como concatenamos o array de feeds, inserindo os novos dados no in√≠cio da lista e n√£o no fim. Observe tamb√©m a instru√ß√£o &lt;strong&gt;refresher.complete&lt;/strong&gt;, que informa que opera√ß√£o foi conclu√≠da e que o componente pode ser removido da view.&lt;/p&gt;

&lt;p&gt;Nossa aplica√ß√£o agora utiliza o refresher para atualizar a lista com os novos posts, veja:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step7.gif&#34; alt=&#34;Ionic 2 - Refresher&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;passo-8-8211-filtrando-a-lista-com-uma-action-sheet&#34;&gt;Passo 8 &amp;#8211; Filtrando a lista com uma Action Sheet&lt;/h3&gt;

&lt;p&gt;Agora que a nossa lista tem potencial para aumentar cada vez mais de tamanho, seria interessante termos uma op√ß√£o de filtrar posts pertencentes √† determinadas categorias. Podemos fazer isso facilmente com uma &lt;strong&gt;Action Sheet&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No arquivo &lt;strong&gt;home.html&lt;/strong&gt; vamos incluir um bot√£o do lado direito da nossa AppBar/NavBar que ser√° respons√°vel por disparar o m√©todo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-header&amp;gt;
   &amp;lt;ion-navbar&amp;gt;
       &amp;lt;ion-title&amp;gt;My Feed Reader&amp;lt;/ion-title&amp;gt;
       &amp;lt;ion-buttons end&amp;gt;
          &amp;lt;button ion-button icon-only (click)=&#34;showFilters()&#34;&amp;gt;
              &amp;lt;ion-icon name=&#34;funnel&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;
          &amp;lt;/button&amp;gt;
       &amp;lt;/ion-buttons&amp;gt; 
   &amp;lt;/ion-navbar&amp;gt;
&amp;lt;/ion-header&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Observe o atributo &lt;strong&gt;end&lt;/strong&gt; na tag &lt;strong&gt;&lt;ion-buttons&gt;&lt;/strong&gt;, indicando que o bot√£o deve ser posicionado √† direita, ou seja, no fim da barra de navega√ß√£o. O atributo &lt;strong&gt;start&lt;/strong&gt; posicionaria o bot√£o √† esquerda. O &lt;strong&gt;&lt;ion-buttons&gt;&lt;/strong&gt; funciona como um container de bot√µes. No nosso caso, s√≥ precisamos de um que ser√° representado por um √≠cone (por isso o atributo &lt;strong&gt;icon-only&lt;/strong&gt;). Fizemos o binding do m√©todo &lt;strong&gt;showFilters&lt;/strong&gt; no evento &lt;strong&gt;click&lt;/strong&gt; e escolhemos o √≠cone de nome &lt;strong&gt;funnel&lt;/strong&gt; para representar o filtro.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Os √≠cones no Ionic s√£o uma implementa√ß√£o pr√≥pria do que chamamos de &lt;strong&gt;icon fonts&lt;/strong&gt;, ou seja, fontes que cont√©m s√≠mbolos ao inv√©s de texto ou n√∫meros e que podem ser estilizados utilizando CSS. Utilizar esse tipo de fonte √© conveniente pois reduz a necessidade de imagens, o que torna nosso aplicativo ligeiramente mais r√°pido e menos pesado. Para ter acesso √† lista de √≠cones do Ionic 2, d√™ uma olhada &lt;a href=&#34;https://ionicframework.com/docs/v2/ionicons/&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Antes de incluir nosso m√©todo, precisamos de mais duas vari√°veis. Uma que ser√° respons√°vel por guardar a vers√£o √≠ntegra do nosso array de feeds (sem nenhum filtro) e uma outra que ser√° um booleano, com a fun√ß√£o de indicar se h√° ou n√£o um filtro ativo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;public noFilter: Array&amp;lt;any&amp;gt;;
 public hasFilter: boolean = false;
&lt;/pre&gt;

&lt;p&gt;Com isso podemos incluir as seguintes instru√ß√µes no final do m√©todo &lt;strong&gt;subscribe&lt;/strong&gt; das fun√ß√µes &lt;strong&gt;doRefresh&lt;/strong&gt; e &lt;strong&gt;doInfinite&lt;/strong&gt;, com a finalidade de remover qualquer filtro ativo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.noFilter = this.feeds;
 this.hasFilter = false;
&lt;/pre&gt;

&lt;p&gt;Por fim, vamos agora incluir o m√©todo &lt;strong&gt;showFilters&lt;/strong&gt; na classe:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;showFilters() :void {

    let actionSheet = this.actionSheetCtrl.create({
      title: &#39;Filter options:&#39;,
      buttons: [
        {
          text: &#39;Music&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;music&#34;);
            this.hasFilter = true;
          }
        },
        {
          text: &#39;Movies&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;movies&#34;);
            this.hasFilter = true;
          }
        },        
        {
          text: &#39;Cancel&#39;,
          role: &#39;cancel&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter;
            this.hasFilter = false;
          }
        }
      ]
    });

    actionSheet.present();

  }  
&lt;/pre&gt;

&lt;p&gt;Primeiramente inicializamos o componente com a fun√ß√£o &lt;strong&gt;create&lt;/strong&gt; em uma vari√°vel local. Este componente recebe um t√≠tulo e um array de bot√µes onde cada bot√£o tem, obrigatoriamente, um texto indicativo e um handler que dispara o evento correspondente. Estes bot√µes representam as op√ß√µes que ser√£o apresentadas para o usu√°rio na tela. O c√≥digo do filtro √© autoexplicativo.&lt;/p&gt;

&lt;p&gt;O √∫ltimo bot√£o tem a fun√ß√£o de cancelar a opera√ß√£o e remover qualquer filtro que esteja ativo. Perceba que este bot√£o tem uma propriedade &lt;strong&gt;role&lt;/strong&gt; com o valor de &lt;strong&gt;cancel&lt;/strong&gt;, indicando que adota o comportamento padr√£o da plataforma e sempre estar√° posicionado como √∫ltima op√ß√£o da lista. Vale ressaltar que se o usu√°rio clicar fora da Action Sheet, ou seja, no overlay da camada de fundo, a a√ß√£o ser√° interpretada como um cancelamento (o mesmo comportamento do bot√£o com a role &amp;#8220;cancel&amp;#8221;).&lt;/p&gt;

&lt;p&gt;Em seguida adicionamos o m√©todo &lt;strong&gt;actionSheet.present&lt;/strong&gt; para que o componente seja apresentado na tela.&lt;/p&gt;

&lt;p&gt;Por enquanto s√≥ estamos filtrando os subreddits com as categorias m√∫sica ou filmes, mas nada nos impede de inserir mais op√ß√µes de filtro no componente. O c√≥digo final da nossa classe fica assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Component } from &#39;@angular/core&#39;;
import { NavController, LoadingController, ActionSheetController } from &#39;ionic-angular&#39;;
import { Http } from &#39;@angular/http&#39;;
import &#39;rxjs/add/operator/map&#39;;
import { InAppBrowser } from &#39;ionic-native&#39;;

@Component({
  selector: &#39;page-home&#39;,
  templateUrl: &#39;home.html&#39;
})
export class HomePage {

  public feeds: Array&amp;lt;any&amp;gt;;
  private url: string = &#34;https://www.reddit.com/new.json&#34;;
  private newerPosts: string = &#34;https://www.reddit.com/new.json?before=&#34;;  
  private olderPosts: string = &#34;https://www.reddit.com/new.json?after=&#34;;

  public hasFilter: boolean = false;
  public noFilter: Array&amp;lt;any&amp;gt;;

  constructor(public navCtrl: NavController, public http: Http, 
       public loadingCtrl: LoadingController, public actionSheetCtrl: ActionSheetController) {

    this.fetchContent();

  }

  fetchContent ():void {
    let loading = this.loadingCtrl.create({
      content: &#39;Fetching content...&#39;
    });

    loading.present();

    this.http.get(this.url).map(res =&amp;gt; res.json())
      .subscribe(data =&amp;gt; {
        this.feeds = data.data.children;

        this.feeds.forEach((e, i, a) =&amp;gt; {
          if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
            e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
          }
        })

        this.noFilter = this.feeds;  

        loading.dismiss();
      });  
  }

  doRefresh(refresher) {

    let paramsUrl = this.feeds[0].data.name;

    this.http.get(this.newerPosts + paramsUrl).map(res =&amp;gt; res.json())
      .subscribe(data =&amp;gt; {
      
        this.feeds = data.data.children.concat(this.feeds);
        
        this.feeds.forEach((e, i, a) =&amp;gt; {
          if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
            e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
          }
        })

        this.noFilter = this.feeds;
        this.hasFilter = false;

        refresher.complete();
      });
  }  

  doInfinite(infiniteScroll) {

    let paramsUrl = (this.feeds.length &amp;gt; 0) ? this.feeds[this.feeds.length - 1].data.name : &#34;&#34;;

      this.http.get(this.olderPosts + paramsUrl).map(res =&amp;gt; res.json())
        .subscribe(data =&amp;gt; {
        
          this.feeds = this.feeds.concat(data.data.children);
          
          this.feeds.forEach((e, i, a) =&amp;gt; {
            if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
              e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
            }
          })

          this.noFilter = this.feeds;
          this.hasFilter = false;          
          
          infiniteScroll.complete();
        }); 
  }   

  itemSelected (url: string):void {
    let browser = new InAppBrowser(url, &#39;_system&#39;);
  } 
  
  showFilters() :void {

    let actionSheet = this.actionSheetCtrl.create({
      title: &#39;Filter options:&#39;,
      buttons: [
        {
          text: &#39;Music&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;music&#34;);
            this.hasFilter = true;
          }
        },
        {
          text: &#39;Movies&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;movies&#34;);
            this.hasFilter = true;
          }
        },
        {
          text: &#39;Games&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;gaming&#34;);
            this.hasFilter = true;
          }
        },
        {
          text: &#39;Pictures&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;pics&#34;);
            this.hasFilter = true;
          }
        },                
        {
          text: &#39;Ask Reddit&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;askreddit&#34;);
            this.hasFilter = true;
          }
        },        
        {
          text: &#39;Cancel&#39;,
          role: &#39;cancel&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter;
            this.hasFilter = false;
          }
        }
      ]
    });

    actionSheet.present();

  }        

}

&lt;/pre&gt;

&lt;p&gt;Por quest√µes de bom senso, seria interessante indicar ao usu√°rio quando um filtro est√° ou n√£o ativo alterando a cor do √≠cone do funil. Podemos fazer isso utilizando o conceito de &lt;em&gt;Property binding&lt;/em&gt; explicado mais acima, com a diferen√ßa de que agora a propriedade ser√° atribu√≠da baseada em uma condi√ß√£o.&lt;/p&gt;

&lt;p&gt;insira o seguinte c√≥digo na tag &lt;strong&gt;&lt;ion-icon&gt;&lt;/strong&gt; em &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-icon name=&#34;funnel&#34; [style.color]=&#34;hasFilter ? &#39;orange&#39; : &#39;inherit&#39;&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;
&lt;/pre&gt;

&lt;p&gt;O resultado pode ser visto abaixo:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step8.gif&#34; alt=&#34;Ionic 2 - Action Sheet&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;passo-9-8211-adicionando-um-provider-e-uma-barra-de-busca&#34;&gt;Passo 9 &amp;#8211; Adicionando um provider e uma barra de busca&lt;/h3&gt;

&lt;p&gt;Apesar de termos avan√ßado com sucesso at√© aqui, tenho certeza de que a quantidade de c√≥digo repetitivo presente em nossa classe deve ter te causado um certo inc√¥modo. Podemos muito bem mover a responsabilidade de conex√£o com a API para um outro servi√ßo externo, no intuito de evitar o &lt;a href=&#34;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34; target=&#34;_blank&#34;&gt;DRY&lt;/a&gt; e a propaga√ß√£o de &lt;a href=&#34;https://en.wikipedia.org/wiki/Code_smell&#34; target=&#34;_blank&#34;&gt;code smell&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;9-1-8211-criando-um-injectable&#34;&gt;9.1 &amp;#8211; Criando um Injectable&lt;/h4&gt;

&lt;p&gt;O Angular nos permite criar uma classe com a anota√ß√£o &lt;strong&gt;@Injectable&lt;/strong&gt; para estes cen√°rios. Esse tipo de classe tamb√©m s√£o conhecidos como &lt;strong&gt;Providers&lt;/strong&gt; e podem tanto ser criados &amp;#8220;na m√£o&amp;#8221; quanto com a ajuda do CLI. Digite no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic g provider RedditService&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Esse c√≥digo cria uma pasta &lt;strong&gt;providers&lt;/strong&gt; no nosso projeto com um arquivo de nome &lt;strong&gt;reddit-service.ts&lt;/strong&gt;, onde o Ionic insere alguns c√≥digos de boilerplate para facilitar nossa vida. Altere seu conte√∫do conforme abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Injectable } from &#39;@angular/core&#39;;
import { Http } from &#39;@angular/http&#39;;
import &#39;rxjs/add/operator/map&#39;;

@Injectable()
export class RedditService {

  private feeds: Array&amp;lt;any&amp;gt;;

  constructor(private http: Http) {}

  fetchData(url: string): Promise&amp;lt;any&amp;gt; {
    
    return new Promise(resolve =&amp;gt; {

      this.http.get(url).map(res =&amp;gt; res.json())
        .subscribe(data =&amp;gt; {
          this.feeds = data.data.children;
          
          this.feeds.forEach((e, i, a) =&amp;gt; {
            if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
              e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
            }
          })
          resolve(this.feeds);
        }, err =&amp;gt; console.log(err));          
    });
  }
}
&lt;/pre&gt;

&lt;p&gt;Replicamos boa parte do c√≥digo presente no m√©todo &lt;strong&gt;fetchContent&lt;/strong&gt; da classe &lt;strong&gt;home.ts&lt;/strong&gt; aqui no nosso m√©todo &lt;strong&gt;fetchData&lt;/strong&gt;, com algumas diferen√ßas. A primeira delas √© a j√° citada anota√ß√£o &lt;strong&gt;@Injectable()&lt;/strong&gt; presente antes do nome da classe, o que nos permite mover a defini√ß√£o do servi√ßo para o construtor de &lt;strong&gt;home.ts&lt;/strong&gt; dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;constructor(public redditService: RedditService) {}
&lt;/pre&gt;

&lt;p&gt;Isso evita que tenhamos de instanciar o servi√ßo utilizando &lt;strong&gt;new&lt;/strong&gt;. Clique &lt;a href=&#34;https://en.wikipedia.org/wiki/Dependency_injection&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; para saber mais sobre &lt;strong&gt;Inje√ß√£o de Depend√™ncia&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Outra mudan√ßa importante √© que, por conveni√™ncia, a assinatura do m√©todo retorna uma &lt;strong&gt;Promise&lt;/strong&gt; do tipo &lt;strong&gt;any&lt;/strong&gt; (para evitar que tenhamos qualquer erro em tempo de compila√ß√£o) ao inv√©s de um &lt;strong&gt;Observable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Por fim, para utilizar este servi√ßo em nossa classe &lt;strong&gt;home.ts&lt;/strong&gt; precisamos inclu√≠-lo no arquivo &lt;strong&gt;app.module.ts&lt;/strong&gt;, dentro da pasta &lt;strong&gt;src/app&lt;/strong&gt;. Este arquivo faz uso da anota√ß√£o &lt;strong&gt;@NgModule&lt;/strong&gt;, onde todas as depend√™ncias da aplica√ß√£o devem ser declaradas previamente:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { NgModule } from &#39;@angular/core&#39;;
import { IonicApp, IonicModule } from &#39;ionic-angular&#39;;
import { MyApp } from &#39;./app.component&#39;;
import { HomePage } from &#39;../pages/home/home&#39;;
//indicamos o source path do arquivo:
import { RedditService } from &#39;../providers/reddit-service&#39;;

@NgModule({
  declarations: [
    MyApp,
    HomePage
  ],
  imports: [
    IonicModule.forRoot(MyApp)
  ],
  bootstrap: [IonicApp],
  entryComponents: [
    MyApp,
    HomePage
  ],
//declaramos o nome do nosso provider:
  providers: [RedditService]
})
export class AppModule {}
&lt;/pre&gt;

&lt;p&gt;Com isso √© poss√≠vel escrever os m√©todos da nossa classe &lt;strong&gt;home.ts&lt;/strong&gt; da seguinte maneira:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.redditService.fetchData(this.url).then(data =&amp;gt; {
     this.feeds = data;
     this.noFilter = this.feeds;
     loading.dismiss();
 })
&lt;/pre&gt;

&lt;p&gt;Repare que al√©m de muito mais simples, agora utilizamos o m√©todo &lt;strong&gt;then&lt;/strong&gt; ao inv√©s do &lt;strong&gt;subscribe&lt;/strong&gt; para recuperar os dados do servi√ßo e preencher nosso array.&lt;/p&gt;

&lt;h4 id=&#34;9-2-8211-adicionando-uma-searchbar&#34;&gt;9.2 &amp;#8211; Adicionando uma SearchBar&lt;/h4&gt;

&lt;p&gt;Para aplicativos que utilizam listas e exibem conte√∫do sob demanda √© uma boa pr√°tica adicionar algum recurso de busca para que o usu√°rio procure informa√ß√µes com base em uma palavra espec√≠fica ou sequ√™ncia de caracteres. Para tal, o Ionic fornece um componente chamado &lt;strong&gt;SearchBar&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Para evitar conflitos com as a√ß√µes da nossa lista, escolhi inserir o componente diretamente na AppBar/NavBar da aplica√ß√£o. Para tal, insira o seguinte bloco de c√≥digo dentro da tag &lt;strong&gt;&lt;ion-title&gt;&lt;/strong&gt; em &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;ion-searchbar 
    [(ngModel)]=&#34;searchTerm&#34;
    (ionInput)=&#34;filterItems()&#34; 
    placeholder=&#34;Type here...&#34; &amp;gt;
 &amp;lt;/ion-searchbar&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Perceba que a jun√ß√£o das sintaxes de &lt;em&gt;Event binding&lt;/em&gt; e &lt;em&gt;Input binding&lt;/em&gt; do &lt;strong&gt;ngModel&lt;/strong&gt; nos permite replicar o t√£o famoso recurso de &lt;em&gt;Two-way data binding&lt;/em&gt; no Angular 2.&lt;/p&gt;

&lt;p&gt;Agora inclua o seguinte m√©todo em &lt;strong&gt;home.ts&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;filterItems() {
    this.hasFilter = false;
    this.feeds = this.noFilter.filter((item) =&amp;gt; {
        return item.data.title.toLowerCase().indexOf(this.searchTerm.toLowerCase()) &amp;gt; -1;
    });
  }
&lt;/pre&gt;

&lt;p&gt;Veja o resultado rodando em um iPhone:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step9.gif&#34; alt=&#34;Ionic 2 - SearchBar&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Antes de concluir eu gostaria de mostrar um recurso fornecido pelo framework que nos permite testar o comportamento e visual da nossa aplica√ß√£o em diferentes plataformas chamado &lt;strong&gt;Ionic Lab&lt;/strong&gt;. Caso ainda esteja com o servidor ativo, basta inserir &lt;strong&gt;/ionic-lab&lt;/strong&gt; ap√≥s o n√∫mero da porta na url ou digitar &lt;code&gt;ionic serve --lab&lt;/code&gt; no terminal. O resultado √© o seguinte:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-ionic-lab.jpg&#34; alt=&#34;Ionic 2 - Ionic Lab&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Na imagem acima voc√™ consegue visualizar o nosso aplicativo no &lt;strong&gt;iOS&lt;/strong&gt;, &lt;strong&gt;Android&lt;/strong&gt; e &lt;strong&gt;Windows Phone&lt;/strong&gt;! O Ionic n√£o apenas executa o build da aplica√ß√£o com uma √∫nica base de c√≥digo para dispositivos diferentes como tamb√©m se adapta ao comportamento e estilo visual de cada um, numa tentativa de fazer com que o usu√°rio sempre tenha uma experi√™ncia condizente com a plataforma que utiliza. Perceba, por exemplo, como o spinner, a barra de busca, os √≠cones e estilo da lista s√£o diferentes entre as plataformas. No caso do iOS, s√£o inclu√≠dos at√© mesmo as setas na lateral direita da c√©lula, o que √© comum na plataforma. Al√©m de tudo isso, poder testar aplicativos dessa maneira e ainda tirar proveito do recurso de &lt;em&gt;LiveReload&lt;/em&gt; enquanto voc√™ est√° programando √© algo realmente especial.&lt;/p&gt;

&lt;p&gt;Estamos chegando ao fim da cria√ß√£o do nosso aplicativo. Vimos que, apenas com pequenos ajustes, foi poss√≠vel obter um c√≥digo mais modular e ainda incluir o componente &lt;strong&gt;SearchBar&lt;/strong&gt; com o estilo visual adequado para cada plataforma. Tudo isso de maneira simples e r√°pida, gra√ßas ao casamento perfeito entre o &lt;strong&gt;Angular&lt;/strong&gt; e os componentes estilizados fornecido pelo &lt;strong&gt;Ionic&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;passo-10-8211-melhorando-a-experi√™ncia-do-usu√°rio&#34;&gt;Passo 10 &amp;#8211; Melhorando a experi√™ncia do usu√°rio&lt;/h3&gt;

&lt;p&gt;Mesmo com todos os recursos que o Ionic 2 nos oferece √© sempre importante garantir a melhor experi√™ncia poss√≠vel para o usu√°rio fazendo otimiza√ß√µes gerais, como customiza√ß√£o de UI, ajustes no comportamento de componentes, ganho de performance, etc. Essa √∫ltima etapa ser√° dedicada √† este prop√≥sito.&lt;/p&gt;

&lt;h4 id=&#34;10-1-8211-controlando-o-scroll&#34;&gt;10.1 &amp;#8211; Controlando o scroll&lt;/h4&gt;

&lt;p&gt;Notei alguns problemas ao utilizar a Action Sheet para filtrar a lista quando o scroll est√° numa posi√ß√£o muito abaixo, pois a a√ß√£o de carregar posts antigos pode ser disparada indevidamente. Podemos evitar isso fazendo a lista rolar para o topo antes de executar qualquer filtro. Mas como controlar isso programaticamente?&lt;/p&gt;

&lt;p&gt;O componente &lt;strong&gt;Content&lt;/strong&gt; (que gere a tag &lt;strong&gt;&lt;ion-content&gt;&lt;/strong&gt; do nosso template html) disponibiliza um m√©todo de controle do scroll chamado &lt;strong&gt;scrollToTop&lt;/strong&gt;. Podemos inserir o c√≥digo no in√≠cio do m√©todo &lt;strong&gt;showFilters&lt;/strong&gt; da Action Sheet dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.content.scrollToTop();
&lt;/pre&gt;

&lt;p&gt;Antes precisamos obter uma refer√™ncia √† este componente utilizando a anota√ß√£o &lt;strong&gt;@ViewChild&lt;/strong&gt; da biblioteca &lt;strong&gt;@angular/core&lt;/strong&gt; (algo similar √† maneira como protocolos funcionam no iOS):&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;@ViewChild(Content) content: Content;
&lt;/pre&gt;

&lt;p&gt;Agora a lista vai rolar para o topo sempre que acionarmos a Action Sheet!&lt;/p&gt;

&lt;h4 id=&#34;10-2-8211-melhorando-a-busca-com-observables&#34;&gt;10.2 &amp;#8211; Melhorando a busca com Observables&lt;/h4&gt;

&lt;p&gt;Apesar de termos nossa barra de buscas funcionando perfeitamente, a cada caractere digitado estamos emitindo uma nova requisi√ß√£o, o que √© desnecess√°rio. Mas h√° uma forma elegante de lidar com isso utilizando Observables, uma vez que o evento s√≥ ser√° disparado quando uma requisi√ß√£o for considerada v√°lida.&lt;/p&gt;

&lt;p&gt;O que queremos fazer √© monitorar o componente de duas maneiras: A primeira √© oferecendo um tempo maior para que o usu√°rio conclua a digita√ß√£o da palavra que est√° buscando atrav√©s do m√©todo &lt;strong&gt;debounceTime&lt;/strong&gt; e a segunda √© utilizando o m√©todo &lt;strong&gt;distinctUntilChanged&lt;/strong&gt; que ir√° comparar a palavra (ou a sequ√™ncia de caracteres) digitada com a √∫ltima que foi procurada, evitando que uma nova requisi√ß√£o seja emitida para um resultado que j√° se encontra na tela.&lt;/p&gt;

&lt;p&gt;Iremos utilizar o &lt;strong&gt;FormControl&lt;/strong&gt; de &lt;strong&gt;@angular/forms&lt;/strong&gt; que ir√° conectar uma vari√°vel da classe ao input presente no nosso html (similar √† maneira como o &lt;em&gt;Two way binding&lt;/em&gt; funciona).&lt;/p&gt;

&lt;p&gt;Inclua as seguintes instru√ß√µes no componente &lt;strong&gt;&lt;ion-searchbar&gt;&lt;/strong&gt; em &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;ion-searchbar 
    [(ngModel)]=&#34;searchTerm&#34;
    [formControl]=&#34;searchTermControl&#34; 
    [showCancelButton]=true
    (ionInput)=&#34;filterItems()&#34; 
    placeholder=&#34;Type here...&#34; &amp;gt;
 &amp;lt;/ion-searchbar&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Note que al√©m do &lt;strong&gt;formControl&lt;/strong&gt; tamb√©m atribu√≠mos o valor &lt;strong&gt;true&lt;/strong&gt; √† propriedade &lt;strong&gt;showCancelButton&lt;/strong&gt;, que ir√° apresentar um bot√£o para cancelar a busca e retirar o teclado digital da tela.&lt;/p&gt;

&lt;p&gt;E a seguinte instru√ß√£o que ir√° controlar quando devemos disparar a busca:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.searchTermControl = new FormControl();
  this.searchTermControl.valueChanges.debounceTime(1000).distinctUntilChanged().subscribe(search =&amp;gt; {
    if (search !== &#39;&#39; &amp;&amp; search) {
      this.filterItems();
    }
  })  
&lt;/pre&gt;

&lt;p&gt;E com isso o componente se torna mais coerente com a expectativa do usu√°rio, que ir√° perceber um ganho de performance ao filtrar resultados em uma lista com muitas c√©lulas.&lt;/p&gt;

&lt;h4 id=&#34;10-3-8211-ajustando-o-visual-dos-componentes-com-css&#34;&gt;10.3 &amp;#8211; Ajustando o visual dos componentes com CSS&lt;/h4&gt;

&lt;p&gt;Nosso aplicativo agora depende de algumas mudan√ßas visuais para corrigir alguns pequenos detalhes. O primeiro deles √© referente ao Android. O Ionic 2, ao rodar em um dispositivo Android, oferece automaticamente suporte ao &lt;strong&gt;&lt;a href=&#34;https://material.google.com/&#34; target=&#34;_blank&#34;&gt;Material Design&lt;/a&gt;&lt;/strong&gt; do &lt;strong&gt;Google&lt;/strong&gt; (uma linguagem visual que sintetiza princ√≠pios cl√°ssicos daquilo que considera o &amp;#8220;bom design&amp;#8221;). Em resumo, o Material Design se preocupa em criar uma experi√™ncia unificada de layout entre as plataformas que rodam o sistema operacional do Android. &lt;a href=&#34;https://material.google.com/#introduction-principles&#34; target=&#34;_blank&#34;&gt;Aqui&lt;/a&gt; voc√™ pode conhecer melhor sobre seus princ√≠pios fundamentais.&lt;/p&gt;

&lt;p&gt;Um dos pontos de aten√ß√£o √© a maneira como os textos devem ser apresentados ao usu√°rio. O Material Design trabalha com a no√ß√£o de hierarquia baseada em tons e opacidade. Em outras palavras, textos prim√°rios (que representam t√≠tulos e informa√ß√µes de destaque) recebem 87% de opacidade enquanto subt√≠tulos recebem 54%. Veja abaixo:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-material-design-spec.jpg&#34; alt=&#34;Ionic 2 - Material Design Spec&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Se voc√™ for inspecionar as cores presentes nos textos das c√©lulas (utilize o &lt;em&gt;Devtools&lt;/em&gt; para tal) vai notar que elas n√£o seguem este ponto da especifica√ß√£o da linguagem. O texto principal, por exemplo, utiliza preto puro e √© sempre bom (fica aqui a dica) &lt;a href=&#34;https://ianstormtaylor.com/design-tip-never-use-black&#34; target=&#34;_blank&#34;&gt;evitar&lt;/a&gt; preto puro em seus designs sempre que poss√≠vel.&lt;/p&gt;

&lt;p&gt;Diferentemente do Android, a preocupa√ß√£o do iOS est√° voltada para o conte√∫do, por isso n√£o existe nenhuma linguagem t√£o restritiva quanto o Material Design na plataforma. No entanto, irei replicar a mudan√ßa visual que faremos para o Android tamb√©m no iOS, tornando nossos textos ainda mais agrad√°veis para leitura.&lt;/p&gt;

&lt;p&gt;Em &lt;strong&gt;home.scss&lt;/strong&gt; inclua o seguinte c√≥digo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;// iOS &amp; Android only
  .item-md, .item-ios {
      h2 {
          color: rgba($color: #000, $alpha: .87);
      }
      p {
          color: rgba($color: #000, $alpha: .54);
      }
  }
&lt;/pre&gt;

&lt;p&gt;Repare que podemos fazer o nesting dos elementos por estar utilizando &lt;strong&gt;Sass&lt;/strong&gt;. Tamb√©m perceba que aplicamos a altera√ß√£o apenas para as plataformas Android e iOS mas n√£o para Windows Phone. As classes voc√™ pode obter facilmente ao inspecionar o DOM no console do browser.&lt;/p&gt;

&lt;p&gt;Outro problema aparente s√£o os t√≠tulos dos posts que somem ao atingir a borda da c√©lula. Precisamos incluir uma quebra de linha para que eles sejam apresentados por completo. Dessa vez iremos aplicar a altera√ß√£o √†s tr√™s plataformas:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;// iOS, Android &amp; WP
  .item-md, .item-ios, .item-wp {
      h2, p {
          white-space: normal;
      }
  }
&lt;/pre&gt;

&lt;p&gt;Por fim, gostaria de melhorar a maneira como a barra de busca se apresenta na vers√£o iOS. Ela est√° pequena e diminui ainda mais de tamanho quando o bot√£o de cancelar est√° ativo. Tamb√©m seria interessante escurecer um pouco mais a opacidade do background para lhe conferir maior destaque:&lt;/p&gt;

&lt;p&gt;Inclua o seguinte c√≥digo (desta vez aplicado apenas para o iOS):&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;// iOS only
  .toolbar-ios { 
      ion-title {
          padding: 0 90px 0 1px;  
      } 
      .searchbar-ios .searchbar-input {
          background: rgba($color: #000, $alpha: 0.12);            
      }
  }
&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Caso prefira, voc√™ tamb√©m pode alterar o valor das vari√°veis Sass do Ionic. &lt;a href=&#34;https://ionicframework.com/docs/v2/theming/overriding-ionic-variables/&#34; target=&#34;_blank&#34;&gt;Neste link&lt;/a&gt; h√° uma lista de todas elas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;10-4-8211-ajustes-finais-no-html&#34;&gt;10.4 &amp;#8211; Ajustes finais no html&lt;/h4&gt;

&lt;p&gt;Vamos iniciar modificando a cor da NavBar. Inclua o seguinte atributo na tag &lt;strong&gt;&lt;ion-navbar&gt;&lt;/strong&gt; em &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-navbar color=&#34;secondary&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Como estamos utilizando &lt;strong&gt;Sass&lt;/strong&gt;, fazemos uma refer√™ncia √† vari√°vel &lt;strong&gt;secondary&lt;/strong&gt; do array &lt;strong&gt;colors&lt;/strong&gt; que est√° listado no arquivo &lt;strong&gt;src/theme/variable.scss&lt;/strong&gt;. Isso significa que voc√™ pode alterar o valor da cor na vari√°vel ao inv√©s de escrever diretamente no template html.&lt;/p&gt;

&lt;p&gt;Agora eu gostaria de inserir um √≠cone na frente do meu endere√ßo de dom√≠nio (que representa meu subt√≠tulo na lista) sempre que a categoria estiver relacionada com alguma das listadas na nossa Action Sheet. Eu posso controlar esse comportamento utilizando a diretiva de html do Angular chamada &lt;strong&gt;ngSwitch&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Substitua esta linha:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;p&amp;gt;{{feed.data.domain}}&amp;lt;/p&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Por esta instru√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;div [ngSwitch]=feed.data.subreddit.toLowerCase()&amp;gt;
   &amp;lt;p *ngSwitchCase=&#34;&#39;askreddit&#39;&#34;&amp;gt;&amp;lt;ion-icon name=&#34;help-circle&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;&amp;nbsp;{{feed.data.domain}}&amp;lt;/p&amp;gt;
   &amp;lt;p *ngSwitchCase=&#34;&#39;gaming&#39;&#34;&amp;gt;&amp;lt;ion-icon name=&#34;logo-playstation&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;&amp;nbsp;{{feed.data.domain}}&amp;lt;/p&amp;gt;
   &amp;lt;p *ngSwitchCase=&#34;&#39;music&#39;&#34;&amp;gt;&amp;lt;ion-icon name=&#34;musical-notes&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;&amp;nbsp;{{feed.data.domain}}&amp;lt;/p&amp;gt;
   &amp;lt;p *ngSwitchCase=&#34;&#39;movies&#39;&#34;&amp;gt;&amp;lt;ion-icon name=&#34;film&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;&amp;nbsp;{{feed.data.domain}}&amp;lt;/p&amp;gt;
   &amp;lt;p *ngSwitchCase=&#34;&#39;pics&#39;&#34;&amp;gt;&amp;lt;ion-icon name=&#34;image&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;&amp;nbsp;{{feed.data.domain}}&amp;lt;/p&amp;gt;
   &amp;lt;p *ngSwitchDefault&amp;gt;{{feed.data.domain}}&amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Observe que os √≠cones apenas ser√£o aplicados no caso de coincidirem com os argumentos. Em caso contr√°rio, ser√° exibido apenas o texto sem nenhum √≠cone, conforme descrito na cl√°usula &lt;strong&gt;ngSwitchDefault&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Outra coisa que me incomoda √© o componente &lt;strong&gt;Refresher&lt;/strong&gt; ser acionado com muito pouco esfor√ßo. Eu sinto que o usu√°rio poderia puxar um pouco mais a lista para evitar que o evento seja disparado com muita facilidade. Podemos modificar isso alterando a propriedade &lt;strong&gt;pullMin&lt;/strong&gt;, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-refresher (ionRefresh)=&#34;doRefresh($event)&#34; [pullMin]=90&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Alteramos para 90 dpi a dist√¢ncia m√≠nima que o usu√°rio deve alcan√ßar para disparar o evento. A dist√¢ncia padr√£o √© 60.&lt;/p&gt;

&lt;p&gt;Seria tamb√©m interessante alterar a cor da barra de status da aplica√ß√£o para a cor branca, j√° que o fundo da NavBar agora est√° colorido. Como a barra de status √© um componente nativo, para modific√°-lo precisaremos instalar um plugin do &lt;strong&gt;Cordova&lt;/strong&gt;. Verifique se ele j√° est√° instalado procurando no arquivo &lt;strong&gt;package.json&lt;/strong&gt; por &amp;#8220;&lt;strong&gt;cordova-plugin-statusbar&lt;/strong&gt;&amp;#8220;. Caso contr√°rio, digite no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic plugin add cordova-plugin-statusbar&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;E insira a seguinte instru√ß√£o dentro do m√©todo construtor do arquivo &lt;strong&gt;src/app/app.component.ts&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;StatusBar.backgroundColorByHexString(&#39;#ffffff&#39;);
&lt;/pre&gt;

&lt;p&gt;E agora veja como ficou o visual final da nossa aplica√ß√£o rodando em um iPhone 6:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step10.gif&#34; alt=&#34;Ionic 2 - UX enhancement&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;10-5-8211-aumentando-o-desempenho&#34;&gt;10.5 &amp;#8211; Aumentando o desempenho&lt;/h4&gt;

&lt;p&gt;Se voc√™ pensa em evoluir de um prot√≥tipo para um aplicativo real, se preocupar com o seu desempenho √© tarefa essencial. Abaixo eu listo algumas sugest√µes que podem ajudar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WKWebView&lt;/strong&gt; &amp;#8211; Recentemente o time do Ionic tornou poss√≠vel rodar os aplicativos iOS utilizando o browser WKWebView (evolu√ß√£o do antigo browser UIWebView). Este novo engine oferece aos aplicativos iOS um ganho de performance muito superior ao antigo browser, principalmente na experi√™ncia com listas. Para instalar o plugin, digite: &lt;code&gt;ionic plugin add https://github.com/driftyco/cordova-plugin-wkwebview-engine.git --save&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Crosswalk&lt;/strong&gt; &amp;#8211; Como o Android tem algumas limita√ß√µes de desempenho que podem ser encontradas em alguns devices (principalmente nos antigos devido √†s v√°rias vers√µes de sistema existentes), fica dif√≠cil garantir que o aplicativo ir√° rodar exatamente da maneira como queremos. O Crosswalk √© um browser moderno que √© empacotado junto com o seu app no momento que voc√™ faz o build para Android. Isso significa que, independente do device do usu√°rio, ele estar√° executando o app no Crosswalk. O ganho de performance √© vis√≠vel mas ele pode aumentar o tamanho final da sua aplica√ß√£o. Para instalar, digite: &lt;code&gt;ionic plugin add cordova-plugin-crosswalk-webview&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Virtual Scroll&lt;/strong&gt; &amp;#8211; O nosso aplicativo pode adicionar novos itens √† lista de v√°rias maneiras. Isso significa que, quanto mais a lista aumenta de tamanho, mais itens precisar√£o ser renderizados, o que ir√° consumir muita mem√≥ria e impactar o desempenho geral. O Virtual Scroll foi criado com o intuito de minimizar este impacto, uma vez que ele apenas renderiza uma quantidade &amp;#8220;x&amp;#8221; de c√©lulas na tela, suficientes para preenche-la. Dessa forma elas podem ser reutilizadas, o que evita uma sobrecarga de mem√≥ria (comportamento muito similar ao de uma &lt;strong&gt;ListView&lt;/strong&gt; no iOS). Para entender melhor sobre como utilizar o Virtual Scroll, visite &lt;a href=&#34;https://ionicframework.com/docs/v2/api/components/virtual-scroll/VirtualScroll/&#34; target=&#34;_blank&#34;&gt;este link&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;considera√ß√µes-finais&#34;&gt;Considera√ß√µes finais&lt;/h2&gt;

&lt;p&gt;Sim, √© um post gigantesco. Mas a minha meta ao escrev√™-lo era gerar o m√°ximo de valor para profissionais que ainda n√£o tiveram contato com o Ionic 2 ou aqueles que desejam entender melhor como ele funciona, uma vez que somos carentes de tutoriais mais densos escritos sobre o assunto em portugu√™s.&lt;/p&gt;

&lt;p&gt;Seja voc√™ um desenvolvedor, gerente de produto ou CIO de uma empresa, √© muito importante compreender que ainda √© dif√≠cil nos dias de hoje suportar a grande diversidade de aparelhos e plataformas existentes em um ecossistema que vive em constante mudan√ßa. Os custos para manter uma equipe multidisciplinar sempre atualizada (e com boa sinergia) √© alt√≠ssimo e isso se reflete no or√ßamento repassado para o cliente. Optar pelo desenvolvimento de aplicativos h√≠bridos √©, antes de mais nada, uma op√ß√£o estrat√©gica que deve ser avaliada de acordo com o contexto de cada projeto. Muitas das vezes os argumentos √† favor do desenvolvimento nativo n√£o se justificam, principalmente se o projeto n√£o demanda um &lt;em&gt;frame rate&lt;/em&gt; muito alto (como aplicativos com muitas anima√ß√µes, transi√ß√µes customizadas ou jogos).&lt;/p&gt;

&lt;p&gt;Outro ponto que precisa ser esclarecido √© que o Ionic tem um papel important√≠ssimo no que se refere √† uma fase que √© t√£o ou mais importante que o desenvolvimento em si: A &lt;strong&gt;prototipa√ß√£o&lt;/strong&gt;. Poder validar o produto com o cliente ainda em fase inicial √© um grande diferencial. Algo que lhe confere uma posi√ß√£o de destaque em um mercado extremamente competitivo.&lt;/p&gt;

&lt;h2 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;H√° muito espa√ßo para melhorias e recursos adicionais que podem ser implementados no aplicativo que criamos. Caso tope desafios, voc√™ pode tentar os seguintes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Incluir data de publica√ß√£o do post na lista;&lt;/li&gt;
&lt;li&gt;Incluir recurso de navega√ß√£o entre telas (deixei o NavController l√° de prop√≥sito);&lt;/li&gt;
&lt;li&gt;Oferecer op√ß√£o de alterar url para exibir resultados de um determinado subreddit;&lt;/li&gt;
&lt;li&gt;Considerar cen√°rios onde o usu√°rio pode perder a conex√£o com a internet;&lt;/li&gt;
&lt;li&gt;Op√ß√£o de utilizar algum recurso nativo do smartphone (ex: C√¢mera).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para facilitar o seu aprendizado, o projeto est√° dispon√≠vel no &lt;strong&gt;&lt;a href=&#34;https://github.com/carloscabral/my-reader---Ionic2&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;&lt;/strong&gt; separado por branches. Por exemplo, caso voc√™ queira ter acesso ao passo 4 do tutorial, baixa digitar no terminal &lt;code&gt;git checkout step4&lt;/code&gt; e o c√≥digo fonte referente √† este passo estar√° dispon√≠vel.&lt;/p&gt;

&lt;p&gt;Bons estudos e at√© a pr√≥xima!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se voc√™ ficou curioso sobre a cria√ß√£o de aplicativos multiplataforma que utilizam tecnologia da web, saiba que o Ionic n√£o √© a √∫nica op√ß√£o existente. Leia meu post sobre &lt;strong&gt;&lt;a href=&#34;http://tableless.com.br/react-native-construa-aplicacoes-moveis-nativas-com-javascript/&#34; target=&#34;_blank&#34;&gt;React Native&lt;/a&gt;&lt;/strong&gt; e descubra como j√° √© poss√≠vel criar uma aplica√ß√£o 100% nativa utilizando JavaScript.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Menos √© mais com Android Annotations</title>
      <link>https://tableless.github.io/hugo-public/menos-e-mais-com-android-annotations/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/menos-e-mais-com-android-annotations/</guid>
      <description>&lt;p&gt;De todo o trabalho que voc√™ tem ao programar uma aplica√ß√£o android, uma grande parte dele √© por conta de todo o c√≥digo¬†&lt;em&gt;boilerplate&lt;/em&gt; que¬†&lt;strong&gt;sempre&lt;/strong&gt; temos que fazer. Uma das coisas que mais me incomoda √© que todos os recursos (&lt;em&gt;views e afins&lt;/em&gt;)¬†precisam ser referenciados para poderem ser acessados e isso, dependendo da quantidade de recursos que voc√™ precisa ter na aplica√ß√£o, pode resultar em muitas e muitas linhas de c√≥digo. Se voc√™ precisar criar eventos, servi√ßos, &lt;em&gt;broadcasts&lt;/em&gt;, _adapters_¬†ou rodar o c√≥digo em¬†uma nova¬†_thread_¬† nem vou colocar em quest√£o aqui!&lt;/p&gt;

&lt;p&gt;N√≥s que programamos para android acabamos nos &lt;del&gt;conformando&lt;/del&gt; acostumando com todo esse c√≥digo e tempo perdido que ele gera para ser produzido porque, num fluxo normal de desenvolvimento, ele √© inevit√°vel. Sem falar em classes gigantes as quais¬†precisaremos manter depois. E foi exatamente por estes motivos que¬†as¬†&lt;strong&gt;&lt;a href=&#34;http://androidannotations.org/&#34; target=&#34;_blank&#34;&gt;Android Annotations&lt;/a&gt;¬†&lt;/strong&gt; foram criadas.&lt;/p&gt;

&lt;p&gt;Essas anota√ß√µes fazem parte de um framework de c√≥digo livre, que utiliza &lt;a href=&#34;https://pt.wikipedia.org/wiki/Inje%C3%A7%C3%A3o_de_depend%C3%AAncia&#34; target=&#34;_blank&#34;&gt;inje√ß√£o de depend√™ncia&lt;/a&gt;, para nos ajudar a eliminar todo aquele &lt;em&gt;boilerplate&lt;/em&gt;, trocando-os por anota√ß√µes. Uma vez que diminu√≠mos a quantidade de c√≥digo que temos que escrever, fica mais f√°cil de manter a aumentamos a velocidade com que desenvolvemos nossas aplica√ß√µes.&lt;/p&gt;

&lt;p&gt;Vou demonstrar aqui como utilizar as¬†_annotation__s¬†_em alguns dos elementos que eu mencionei para que voc√™s vejam como √© f√°cil e simples e como melhora o nosso c√≥digo. Vamos supor que voc√™ tem uma¬†&lt;em&gt;main activity&lt;/em&gt; com 5 views e¬†precisar√° pegar o valor do usu√°rio de todas elas, como acontece em um¬†cadastro por exemplo.&lt;/p&gt;

&lt;p&gt;Primeiro vamos declarar nosso layout num arquivo XML (n√£o estou me preocupando com a est√©tica do layout)&lt;/p&gt;

&lt;pre class=&#34;xml&#34;&gt;&amp;lt;!-- activity_register.xml --&amp;gt;
&amp;lt;LinearLayout xmlns:android=&#34;http://schemas.android.com/apk/res/android&#34;
    xmlns:tools=&#34;http://schemas.android.com/tools&#34;
    android:layout_width=&#34;fill_parent&#34;
    android:layout_height=&#34;fill_parent&#34;
    android:orientation=&#34;vertical&#34;
    android:layout_gravity=&#34;left&#34;
    android:gravity=&#34;left&#34; &amp;gt;

    &amp;lt;EditText
        android:id=&#34;@+id/name&#34;
        android:layout_width=&#34;wrap_content&#34;
        android:layout_height=&#34;wrap_content&#34;
        android:layout_marginTop=&#34;16dp&#34; /&amp;gt;

    &amp;lt;EditText
        android:id=&#34;@+id/address&#34;
        android:layout_width=&#34;wrap_content&#34;
        android:layout_height=&#34;wrap_content&#34; /&amp;gt;

    &amp;lt;EditText
        android:id=&#34;@+id/numberAddress&#34;
        android:layout_width=&#34;wrap_content&#34;
        android:layout_height=&#34;wrap_content&#34; /&amp;gt;

    &amp;lt;EditText
        android:id=&#34;@+id/telephone&#34;
        android:layout_width=&#34;wrap_content&#34;
        android:layout_height=&#34;wrap_content&#34; /&amp;gt;

    &amp;lt;EditText
        android:id=&#34;@+id/birthday&#34;
        android:layout_width=&#34;wrap_content&#34;
        android:layout_height=&#34;wrap_content&#34; /&amp;gt;
    
    &amp;lt;Button
        android:id=&#34;@+id/saveButton&#34;
        android:layout_width=&#34;140dp&#34;
        android:layout_height=&#34;wrap_content&#34;
        android:text=&#34;Save&#34; /&amp;gt;

&amp;lt;/LinearLayout&amp;gt;
&lt;/pre&gt;

&lt;p&gt;e agora precisaremos criar a nossa &lt;em&gt;main activity&lt;/em&gt; para injetarmos nossas &lt;em&gt;views&lt;/em&gt; e obter as entradas do usu√°rio. Da maneira normal fica assim&lt;/p&gt;

&lt;pre class=&#34;java&#34;&gt;public class Calculator extends Activity {
  private EditText name;
  private EditText address;
  private EditText numberAddress;
  private EditText telephone;
  private TextView birthday;
  private Button saveButton;

  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_register);

    name = (EditText) findViewById(R.id.name);
    address = (EditText) findViewById(R.id.address);
    numberAddress = (EditText) findViewById(R.id.numberAddress);
    telephone = (EditText) findViewById(R.id.telephone);
    birthday = (EditText) findViewById(R.id.birthday);
    saveButton = (Button) findViewById(R.id.addButton);

    saveButton.setOnClickListener(new View.OnClickListener() {
      public void onClick(View v) {
       # save the information
       ...
      }
    });
  }
}
&lt;/pre&gt;

&lt;p&gt;Como era de se esperar, inflamos nosso &lt;em&gt;layout&lt;/em&gt; xml no m√©todo &lt;code&gt;onCreate&lt;/code&gt; e obtemos a refer√™ncia de cada uma das &lt;em&gt;views&lt;/em&gt; das quais precisamos obter o valor (para o nosso caso todas). Al√©m disso criamos um evento no bot√£o de salvar, que obviamente tem a fun√ß√£o de salvar nossos dados (n√£o fiz a implementa√ß√£o disso aqui para manter simples o exemplo). Ao utilizarmos &lt;em&gt;Android Annotations&lt;/em&gt;, o nosso c√≥digo fica assim&lt;/p&gt;

&lt;pre class=&#34;java&#34;&gt;@EActivity(R.layout.activity_register)
public class Calculator extends Activity {
  @ViewById EditText name;
  @ViewById EditText address;
  @ViewById EditText numberAddress;
  @ViewById EditText telephone;
  @ViewById TextView birthday;
  @ViewById Button saveButton;

  @Click
  public void saveButton() {
     # as views j√° est√£o referenciadas
     # name.getText(); j√° est√° dispon√≠vel por exemplo

     # salvar as informa√ß√µes
     ...
  }
}
&lt;/pre&gt;

&lt;p&gt;Como voc√™s podem perceber de cara o c√≥digo √© bem menor. N√£o precisamos mais do m√©todo &lt;code&gt;onCreate&lt;/code&gt; porque para este exemplo espcificamente, a √∫nica coisa que estamos fazendo l√° era inflando nossas views atrav√©s do nosso layout e isso √© feito automaticamente para n√≥s utilizando a anota√ß√£o &lt;code&gt;@EActivity&lt;/code&gt;. Em rela√ß√£o a referenciar as nossas &lt;em&gt;views&lt;/em&gt;, isso √© feito somente adicionando a anota√ß√£o &lt;code&gt;@ViewById&lt;/code&gt; antes de cada uma delas que queremos referenciar. Ao fazer isso nossas &lt;em&gt;views&lt;/em&gt; j√° est√£o prontas para serem acessadas. Algo que √© importante de se saber √© que para que as anota√ß√µes tenham efeito, os atributos precisa ter o mesmo nome das ids que est√£o no xml, do contr√°rio voc√™ precisar√° indicar a id da seguinte maneira&lt;/p&gt;

&lt;pre class=&#34;java&#34;&gt;@ViewById(R.id.name)
EditText name;
&lt;/pre&gt;

&lt;p&gt;o que eu n√£o recomendo que voc√™ fa√ßa pois o interessante √© utilizar todo o poder do &lt;em&gt;framework&lt;/em&gt; ao nosso favor. Outro elemente que n√£o precisamos implementar foi o evento no bot√£o de salvar, que foi substitu√≠do pela anota√ß√£o &lt;code&gt;@Click&lt;/code&gt; que colocamos acima do m√©todo em que vamos tratar o nosso evento. Como voc√™s j√° devem ter percebido, o nome do m√©todo precisa ter como nome o nome do nosso bot√£o referenciado logo acima.&lt;/p&gt;

&lt;p&gt;E isso √© tudo que precisamos fazer para inflar nossas views e adicionar um evento no nosso bot√£o. √â claro que esse √© um exemplo bem b√°sico. Agora pense em um projeto grande com m√∫ltiplas &lt;em&gt;activities&lt;/em&gt; e &lt;em&gt;fragments&lt;/em&gt;, o quanto isso nos ajudaria a economizar tempo. E al√©m do mais, o que eu mostrei aqui √© s√≥ um pouquinho (pouquinho mesmo) do que se pode fazer com as anota√ß√µes.&lt;/p&gt;

&lt;p&gt;Voc√™ pode conferir todo o poder que o¬†AA tem visitando a seu &lt;a href=&#34;https://github.com/excilys/androidannotations/wiki/Cookbook&#34; target=&#34;_blank&#34;&gt;cookbook&lt;/a&gt;. L√° existem diversos exemplos que servem como¬†_guideline¬†_para voc√™ come√ßar a utilizar o &lt;em&gt;framework&lt;/em&gt; hoje mesmo e parar de perder tempo escrevendo aquele mesmo c√≥digo de novo e de novo em todos os seus projetos. Eu duvido que voc√™ vai se arrepender. At√© a pr√≥xima!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>React Native: Construa aplica√ß√µes m√≥veis nativas com JavaScript</title>
      <link>https://tableless.github.io/hugo-public/react-native-construa-aplicacoes-moveis-nativas-com-javascript/</link>
      <pubDate>Tue, 05 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/react-native-construa-aplicacoes-moveis-nativas-com-javascript/</guid>
      <description>

&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;

&lt;p&gt;O &lt;strong&gt;React Native&lt;/strong&gt;¬†√© um projeto desenvolvido pelos engenheiros do &lt;strong&gt;Facebook&lt;/strong&gt; e que consiste em uma s√©rie de ferramentas que viabilizam a cria√ß√£o de aplica√ß√µes m√≥veis &lt;strong&gt;nativas&lt;/strong&gt; para a plataforma¬†&lt;strong&gt;iOS&lt;/strong&gt;¬†e &lt;strong&gt;Android&lt;/strong&gt;, utilizando o que h√° de mais moderno no desenvolvimento Front-end &amp;#8211; mirando no futuro. √â o estado da arte no que se refere ao desenvolvimento mobile baseado em JavaScript.&lt;/p&gt;

&lt;p&gt;O stack do React Native √© poderoso, pois nos permite utilizar &lt;strong&gt;ECMAScript 6&lt;/strong&gt;, &lt;strong&gt;CSS Flexbox&lt;/strong&gt;, &lt;strong&gt;JSX&lt;/strong&gt;, diversos pacotes do &lt;strong&gt;NPM&lt;/strong&gt; e muito mais. Sem contar que nos permite fazer debug na mesma IDE utilizada para o desenvolvimento nativo com essas plataformas (al√©m de tornar o processo extremamente divertido).&lt;/p&gt;

&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;Nesta introdu√ß√£o ao React Native iremos criar um aplicativo nativo voltado para a plataforma iOS, o que significa que voc√™ precisa de um computador rodando &lt;strong&gt;Mac OS X&lt;/strong&gt;. Embora o desenvolvimento para Android j√° seja poss√≠vel com o framework (foi anunciado em setembro de 2015), o foco aqui ser√° o iOS. Mas irei falar um pouco sobre o Android mais √† frente neste post.&lt;/p&gt;

&lt;h3 id=&#34;instalando-o-xcode&#34;&gt;Instalando o Xcode&lt;/h3&gt;

&lt;p&gt;A primeira coisa que voc√™ precisa instalar (caso ainda n√£o o tenha em sua m√°quina) √© o &lt;strong&gt;Xcode&lt;/strong&gt;. Xcode √© a IDE de desenvolvimento da Apple para cria√ß√£o de aplicativos para iPhone e iPad. Sua instala√ß√£o √© necess√°ria pois, sem ele, nosso c√≥digo n√£o poder√° ser &amp;#8220;compilado&amp;#8221; para Objective-C. Tamb√©m √© nele que iremos fazer o debug de nossa aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;Para instalar, basta abrir a App Store no seu Mac e buscar por &amp;#8220;Xcode&amp;#8221;. A instala√ß√£o pode ser um pouco demorada. Aproveite esse tempo pra contar para os seus familiares que voc√™ ir√° construir uma aplica√ß√£o iOS nativa utilizando apenas JavaScript e os recursos mais modernos da plataforma. üòâ&lt;/p&gt;

&lt;h3 id=&#34;instalando-o-node-js&#34;&gt;Instalando o Node.js&lt;/h3&gt;

&lt;p&gt;O React Native √© um projeto que utiliza recursos provenientes do Node.js, portanto precisaremos dele para prosseguir.&lt;/p&gt;

&lt;p&gt;H√° duas maneiras de instalar o Nodejs: Voce pode fazer download diretamente no &lt;a href=&#34;https://nodejs.org/en/download/&#34; target=&#34;_blank&#34;&gt;site do projeto&lt;/a&gt; ou atrav√©s do &lt;a href=&#34;http://brew.sh/&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;, o famoso package manager do Mac OS X. Caso j√° o tenha instalado na sua m√°quina, basta digitar o seguinte c√≥digo no seu Terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brew install node&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ter o Homebrew instalado na sua m√°quina √© prefer√≠vel pois iremos utiliz√°-lo para instalar a maioria dos outros pacotes necess√°rios para nossa aplica√ß√£o.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Conforme sugerido pela documenta√ß√£o oficial, voc√™ pode instalar o &lt;strong&gt;NVM&lt;/strong&gt; (Node Version Manager) ao inv√©s de instalar o Node diretamente, j√° que o React Native trabalha com vers√µes do Node iguais ou superiores √† vers√£o 4.0. Basta digitar no Terminal &amp;#8220;&lt;strong&gt;brew install nvm&lt;/strong&gt;&amp;#8221; e em seguida &amp;#8220;&lt;strong&gt;nvm install node &amp;amp;&amp;amp; nvm alias default node&lt;/strong&gt;&amp;#8221; para garantir a instala√ß√£o da vers√£o mais recente.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;instalando-o-watchman&#34;&gt;Instalando o Watchman&lt;/h3&gt;

&lt;p&gt;O &lt;strong&gt;Watchman&lt;/strong&gt; √© um pacote muito bacana respons√°vel por monitorar altera√ß√µes em nosso c√≥digo e atualizar a nossas views em tempo real (um recurso extremamente poderoso no qual iremos falar mais √† frente).&lt;/p&gt;

&lt;p&gt;Digite a seguinte instru√ß√£o no seu Terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brew install --HEAD watchman&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;O par√¢metro &lt;code&gt;--HEAD&lt;/code&gt; √© necess√°rio pois garante que a √∫ltima vers√£o do Watchman ser√° instalada, evitando problemas de compatibilidade com a vers√£o mais recente do Framework.&lt;/p&gt;

&lt;p&gt;√ìtimo. Estamos quase l√°&amp;#8230;&lt;/p&gt;

&lt;h3 id=&#34;instalando-o-cli-do-react-native&#34;&gt;Instalando o CLI do React Native&lt;/h3&gt;

&lt;p&gt;Por fim, precisamos instalar o &lt;strong&gt;CLI&lt;/strong&gt; (Command Line Interface) do projeto que consiste em uma s√©rie de helpers necess√°rios para a cria√ß√£o dos nossos aplicativos. Dessa vez, iremos instalar utilizando o NPM:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g react-native-cli&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Utilizamos o &lt;code&gt;-g&lt;/code&gt; para instalar o CLI de forma global em nossa m√°quina.&lt;/p&gt;

&lt;p&gt;Perfeito! Agora que todo o nosso arsenal foi preparado, podemos iniciar nossa aventura. Vamos conhecer um pouco do React Native e criar uma aplica√ß√£o simples de exemplo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Caso queira acompanhar atrav√©s do &lt;strong&gt;Git&lt;/strong&gt;, basta clonar o &lt;a href=&#34;https://github.com/carloscabral/myFirstProject---React-Native&#34; target=&#34;_blank&#34;&gt;reposit√≥rio do projeto no Github&lt;/a&gt;, acessar a pasta do mesmo atrav√©s da linha de comando e digitar as seguintes instru√ß√µes no Terminal: &lt;strong&gt;git checkout step2 &amp;amp;&amp;amp; npm install&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;executando-o-aplicativo-de-exemplo&#34;&gt;Executando o aplicativo de exemplo&lt;/h2&gt;

&lt;p&gt;Criar uma aplica√ß√£o com o React Native √© muito simples. Crie uma pasta qualquer e navegue pra dentro dela utilizando o Terminal. Digite o seguinte comando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;react-native init MyFirstProject&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Se voc√™ abrir a pasta do projeto no seu computador, ir√° verificar que tr√™s arquivos foram automaticamente criados:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;index.ios.js&lt;/li&gt;
&lt;li&gt;index.android.js&lt;/li&gt;
&lt;li&gt;package.json&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E tr√™s pastas tamb√©m:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ios&lt;/li&gt;
&lt;li&gt;android&lt;/li&gt;
&lt;li&gt;node_modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O arquivo &lt;em&gt;index.ios.js&lt;/em&gt; √© onde iremos escrever o c√≥digo da nossa aplica√ß√£o. A vantagem aqui √© que podemos utilizar o nosso editor de texto favorito ao inv√©s de uma IDE (pr√°tica comum entre os devs Frontend). O arquivo &lt;em&gt;package.json&lt;/em&gt; √© criado automaticamente pelo NPM e serve para gerenciar as depend√™ncias da nossa aplica√ß√£o, que, por sua vez, ficam dispon√≠veis na pasta _node&lt;em&gt;modules&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A pasta &lt;em&gt;ios&lt;/em&gt; √© onde a m√°gica ocorre. Esta √© a pasta que cont√©m o projeto iOS nativo gerado pelo React Native (o mesmo conceito para a pasta android). Fa√ßa um teste e abra o arquivo &lt;em&gt;MyFirstProject.xcodeproj&lt;/em&gt; no Xcode para visualizar sua extrutura no &lt;strong&gt;Project Navigator&lt;/strong&gt; (√† esquerda). Agora pressione o bot√£o &lt;strong&gt;Run&lt;/strong&gt; na barra de ferramentas, conforme a imagem:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/xcode-run-button.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52737&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/xcode-run-button.jpg&#34; alt=&#34;xcode-run-button&#34; width=&#34;442&#34; height=&#34;139&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Com isso acabamos de solicitar a execu√ß√£o do aplicativo. Neste momento estamos &amp;#8220;compilando o c√≥digo JavaScript&amp;#8221; presente no nosso projeto (criado por default) para Objective-C e gerando o bundle da aplica√ß√£o. Agora j√° podemos testar o resultado em um emulador.&lt;/p&gt;

&lt;p&gt;Geralmente o emulador demora um pouco para exibir alguma coisa na primeira vez que √© acionado, mas nada lhe impede de rodar o app em um iPhone real. Basta abrir o arquivo &lt;em&gt;AppDelegate.m&lt;/em&gt;, localizar a string atribu√≠da ao objeto &lt;code&gt;jsCodeLocation&lt;/code&gt; com o conte√∫do &lt;strong&gt;@&lt;a href=&#34;http://localhost:8081/&amp;amp;#8230&#34;&gt;http://localhost:8081/&amp;amp;#8230&lt;/a&gt;;&lt;/strong&gt; e alterar o valor de &lt;code&gt;localhost&lt;/code&gt; para o n√∫mero de IP do seu computador. Lembre-se que o device precisa estar conectado ao seu Mac atrav√©s da porta USB e ambos devem compartilhar da mesma rede Wifi. Por fim, basta selecionar o seu iPhone na lista de emuladores dispon√≠veis no Xcode.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Para que o procedimento acima seja poss√≠vel, √© necess√°rio que voc√™ tenha uma conta de desenvolvedor (iOS developer account) configurada na Apple. Basta gerar um certificado, registrar o seu device e &amp;#8211; depois de efetuar todo o exaustivo processo de configura√ß√£o &amp;#8211; ele ficar√° dispon√≠vel na lista de &lt;strong&gt;deploy target&lt;/strong&gt; do Xcode.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Quando o emulador terminar de carregar, o resultado exibido ser√° este:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-initial-screen_2.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52742&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-initial-screen_2.jpg&#34; alt=&#34;react native initial screen&#34; width=&#34;344&#34; height=&#34;524&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perceba que o aplicativo de exemplo cont√©m apenas poucos par√°grafos com instru√ß√µes b√°sicas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Para iniciar, basta editar o arquivo &lt;em&gt;index.ios.js&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Para recarregar a aplica√ß√£o, basta pressionar &lt;strong&gt;CMD + R&lt;/strong&gt; no teclado.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos ent√£o abrir o arquivo &lt;em&gt;index.ios.js&lt;/em&gt; em nosso editor favorito. No meu caso, irei trabalhar com o &lt;a href=&#34;http://www.sublimetext.com/2&#34; target=&#34;_blank&#34;&gt;Sublime Text 2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Se voc√™ j√° est√° acostumado com a escrita de c√≥digo do React, n√£o h√° motivos para sustos. Mas, se este n√£o for o seu caso, n√£o entre em p√¢nico: o React Native √© muito simples de trabalhar.&lt;/p&gt;

&lt;p&gt;Vamos fazer um pouco de m√°gica agora: Encontre o texto &lt;strong&gt;Welcome to React Native&lt;/strong&gt; e modifique-o para &lt;strong&gt;My First Voodoo App!&lt;/strong&gt; &amp;#8211; ou qualquer outra coisa que voc√™ queira. Abra o emulador e pressione &lt;strong&gt;CMD + R&lt;/strong&gt; no seu teclado (caso abra uma action sheet, basta clicar em &amp;#8220;Reload&amp;#8221;). Perceba que, em poucos segundos, sua View foi atualizada com o texto novo. Este, meu amigo, √© um dos recursos mais fant√°sticos presentes na plataforma: O live-reload!&lt;/p&gt;

&lt;p&gt;Se voc√™ j√° vem de um background web, deve estar se perguntando: &amp;#8221; &amp;#8211; S√©rio? Existe motivo para dramatizar com isso?&amp;#8221;. Mas se voc√™ j√° tem experi√™ncia no desenvolvimento com &lt;strong&gt;Swift&lt;/strong&gt; ou &lt;strong&gt;Objective-C&lt;/strong&gt; deve saber que altera√ß√µes feitas no seu c√≥digo precisam ser re-compiladas no Xcode para que voc√™ possa visualizar o que foi modificado. Altera√ß√µes em Views n√£o s√£o refletidas em tempo real quando voc√™ est√° trabalhando de forma nativa. Isso, por si s√≥, j√° faz o React Native merecer sua aten√ß√£o!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fazer preview de altera√ß√µes visuais de componentes em tempo de desenvolvimento √© um recurso que pode ser conseguido com &lt;strong&gt;IBDesignables&lt;/strong&gt; de modo nativo. Este recurso est√° dispon√≠vel a partir da vers√£o 6 do Xcode. Com ele o desenvolvedor pode visualizar aquilo que est√° modificando na View sem precisar compilar o app. Mas este √© um recurso relativamente avan√ßado utilizado por desenvolvedores mais experientes e que necessita de escrita de c√≥digo para funcionar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos agora tentar entender melhor como foi estruturado o c√≥digo de exemplo e o que cada bloco significa.&lt;/p&gt;

&lt;h2 id=&#34;estrutura-do-react-native&#34;&gt;Estrutura do React Native&lt;/h2&gt;

&lt;p&gt;Todo projeto em React tem como premissa a cria√ß√£o e reutiliza√ß√£o de componentes. Basicamente, o que o c√≥digo de exemplo faz √© criar o componente e exibi-lo na tela. Olhando pra ele, voc√™ j√° deve ter reparado que o bloco central √© o principal respons√°vel por essa opera√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var MyFirstProject = React.createClass({
 render: function() {
   return (
     &amp;lt;View style={styles.container}&amp;gt;
       &amp;lt;Text style={styles.welcome}&amp;gt;
         My First Voodoo App!
       &amp;lt;/Text&amp;gt;
       &amp;lt;Text style={styles.instructions}&amp;gt;
         To get started, edit index.ios.js
       &amp;lt;/Text&amp;gt;
       &amp;lt;Text style={styles.instructions}&amp;gt;
         Shake or press menu button for dev menu
       &amp;lt;/Text&amp;gt;
     &amp;lt;/View&amp;gt;
   );
 }
});
&lt;/pre&gt;

&lt;p&gt;Agora que voc√™ j√° brincou um pouco com o c√≥digo gerado por default, vamos esquec√™-lo por um minuto e criar algo do zero.&lt;/p&gt;

&lt;p&gt;Exclua todo o conte√∫do do arquivo &lt;em&gt;index.ios.js&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Em React, para criar um novo componente, basta criar uma vari√°vel qualquer que receba a nota√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;React.createClass({});
&lt;/pre&gt;

&lt;p&gt;Por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var Tableless = React.createClass({

});
&lt;/pre&gt;

&lt;p&gt;Agora √© necess√°rio suprir esse componente com par√¢metros e uma s√©rie de instru√ß√µes, respons√°veis por definir o seu comportamento e aspecto visual. Quem se responsabiliza por isso √© o m√©todo &lt;code&gt;render&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Por exemplo, se quisermos retornar alguma coisa na classe &lt;strong&gt;Tableless&lt;/strong&gt; que acabamos de criar, far√≠amos:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var Tableless = React.createClass({
   render: function() {
      return &amp;lt;p&amp;gt;Hello, Tableless!&amp;lt;/p&amp;gt;;
   }
});
&lt;/pre&gt;

&lt;p&gt;Mas, pera a√≠&amp;#8230; O que significa essa tag de par√°grafo HTML envolta do texto? Afinal, estamos lidando com HTML ou JavaScript?&lt;/p&gt;

&lt;h3 id=&#34;jsx&#34;&gt;JSX&lt;/h3&gt;

&lt;p&gt;Para facilitar a escrita de c√≥digo, o React utiliza &lt;strong&gt;JSX&lt;/strong&gt; (opcional), uma sintaxe que possibilita a escrita de componentes JavaScript por meio de tags.&lt;/p&gt;

&lt;p&gt;Para ilustrar isso melhor, o componente acima poderia ser escrito da seguinte maneira sem o uso do JSX:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var Tableless = React.createClass({
  render: function() {
     return React.createElement(&#34;p&#34;, null, &#34;Hello, Tableless!&#34;);
  }
});
&lt;/pre&gt;

&lt;p&gt;Conforme pode ser observado, esta √© uma forma de escrita muito mais verbosa do que a anterior. Eu sei, pode parecer que voc√™ est√° escrevendo HTML dentro de JavaScript mas, com a devida pr√°tica, voc√™ vai entender como o JSX quebra um grande galho para o desenvolvedor. Optar por n√£o utiliz√°-lo √© certeza de ter um c√≥digo muito repetitivo e de dif√≠cil manuten√ß√£o.&lt;/p&gt;

&lt;p&gt;Agora que voc√™ compreendeu como funciona o JSX, deve estar se perguntando (pelo menos eu espero) como uma aplica√ß√£o m√≥vel pode retornar tags HTML como &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt; ou &lt;code&gt;div&lt;/code&gt; dentro de um componente nativo, certo?&lt;/p&gt;

&lt;p&gt;Exatamente&amp;#8230; n√£o pode.&lt;/p&gt;

&lt;p&gt;Embora o c√≥digo acima execute sem falhas em aplica√ß√µes web, ele n√£o funcionaria dentro do escopo do React Native, simplesmente porque o que precisamos s√£o de componentes do iOS, como &lt;code&gt;UIView&lt;/code&gt;, &lt;code&gt;UILabel&lt;/code&gt; e &lt;code&gt;UIImage&lt;/code&gt;. Ou seja, se voc√™ precisa de um &amp;#8220;wrapper&amp;#8221; na sua tela, voc√™ ir√° retornar o componente &lt;code&gt;&amp;lt;View&amp;gt;&lt;/code&gt; ao inv√©s de uma &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. Caso queira exibir um texto, voc√™ ir√° utilizar a tag &lt;code&gt;&amp;lt;Text&amp;gt;&lt;/code&gt; ao inv√©s de um &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; e assim por diante.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://facebook.github.io/react-native/docs/&#34; target=&#34;_blank&#34;&gt;Aqui&lt;/a&gt; voc√™ encontra a listagem completa dos componentes dispon√≠veis, tanto para iOS quanto para Android.&lt;/p&gt;

&lt;h3 id=&#34;es6&#34;&gt;ES6&lt;/h3&gt;

&lt;p&gt;Ap√≥s a cria√ß√£o de um componente precisamos registr√°-lo para exibi√ß√£o. Fazemos isso retornando a fun√ß√£o com o nome do componente atrav√©s do &lt;code&gt;AppRegistry&lt;/code&gt;, dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Se o c√≥digo acima n√£o ficou √≥bvio pra voc√™, n√£o se assuste. Por default o React Native permite que trabalhemos com as novas epecifica√ß√µes do &lt;strong&gt;EcmaScript 6&lt;/strong&gt; (ou 2015, para os √≠ntimos). Uma delas √© a sintaxe chamada de &lt;strong&gt;arrow functions&lt;/strong&gt; (familiar para quem j√° trabalhou com &lt;strong&gt;CoffeeScript&lt;/strong&gt;), que permite uma escrita mais simples baseada em &lt;strong&gt;closures&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A vers√£o JavaScript &lt;strong&gt;ES5&lt;/strong&gt; do c√≥digo acima seria:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;AppRegistry.registerComponent(&#39;MyFirstProject&#39;, function() {
   return Tableless
});
&lt;/pre&gt;

&lt;p&gt;Mas uma vez, √© uma quest√£o de prefer√™ncia e n√£o uma imposi√ß√£o da ferramenta.&lt;/p&gt;

&lt;p&gt;Contudo, o que fizemos at√© aqui n√£o ser√° suficiente para fazer o c√≥digo rodar. N√≥s n√£o definimos nenhuma das depend√™ncias declaradas na aplica√ß√£o. Vamos resolver esse problema:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var React = require(&#39;react-native&#39;);&lt;/pre&gt;

&lt;p&gt;A string entre aspas √© a biblioteca que estamos solicitando acesso. Nesta caso, estamos atribuindo seu retorno √† vari√°vel React que acabamos de criar.&lt;/p&gt;

&lt;p&gt;Agora que temos acesso √† principal biblioteca do React, vamos declarar as restantes, necess√°rias para rodar nossa aplica√ß√£o sem erros. A vers√£o completa do nosso c√≥digo fica assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var AppRegistry = React.AppRegistry;
var View = React.View;
var Text = React.Text;

var Tableless = React.createClass({
    render: function() {
        return &amp;lt;View&amp;gt;
            &amp;lt;Text&amp;gt;
              Hello, Tableless!
            &amp;lt;/Text&amp;gt;
        &amp;lt;/View&amp;gt;
    }
});

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Se voc√™ pressionar &lt;strong&gt;CMD + R&lt;/strong&gt; no teclado j√° ter√° uma aplica√ß√£o rodando sem erros. Mas vamos corrigir mais duas coisinhas pra deixar nosso c√≥digo ainda mais atraente&amp;#8230;&lt;/p&gt;

&lt;p&gt;Substitua o c√≥digo do escopo de declara√ß√£o pelo seguinte:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var React = require(&#39;react-native&#39;);
var {
  AppRegistry,
  View,
  Text,
} = React;
&lt;/pre&gt;

&lt;p&gt;Como todas as bibliotecas declaradas depois da react-native fazem parte do seu core, podemos assinalar as tr√™s vari√°veis seguintes ao objeto React. Este √© mais um recurso dispon√≠vel do &lt;strong&gt;ES6/ES2015&lt;/strong&gt; chamado de &lt;strong&gt;destructuring assignment&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Outra coisa que n√£o est√° muito legal no c√≥digo √© a indenta√ß√£o dos componentes no m√©todo return. Vamos envolv√™-los em um par√™nteses para que seja permitido pular de linha e tabular tudo seguindo uma melhor hierarquia visual, dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;render: function() {
     return (
       &amp;lt;View&amp;gt;
          &amp;lt;Text&amp;gt;
             Hello, Tableless!
          &amp;lt;/Text&amp;gt;
       &amp;lt;/View&amp;gt;
     );
  }
&lt;/pre&gt;

&lt;p&gt;Vale salientar que sem o par√™nteses essa tabula√ß√£o n√£o seria poss√≠vel e iria disparar um erro no simulador.&lt;/p&gt;

&lt;p&gt;Vamos ver como ficou o c√≥digo final agora:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
  AppRegistry,
  View,
  Text,
} = React;

var Tableless = React.createClass({
   render: function() {
      return (
         &amp;lt;View&amp;gt;
             &amp;lt;Text&amp;gt;
                Hello, Tableless!
             &amp;lt;/Text&amp;gt;
         &amp;lt;/View&amp;gt;
      );
   }
});

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Se voc√™ rodar o aplicativo, ir√° perceber que o mesmo executa sem erros. Mas, numa primeira olhada, parece que n√£o h√° nada na tela! Se voc√™ observar atentamente, ir√° perceber que o texto est√° no canto superior esquerdo da tela, sem qualquer tipo de orienta√ß√£o ou margem. Precisamos corrigir isso!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_1.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52746&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_1.jpg&#34; alt=&#34;react native simple label&#34; width=&#34;344&#34; height=&#34;524&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;flexbox&#34;&gt;Flexbox&lt;/h3&gt;

&lt;p&gt;Como estamos lidando exclusivamente com JavaScript, n√£o temos acesso a CSS. Mas para aproximar a experi√™ncia de criar aplicativos m√≥veis ao desenvolvimento de uma p√°gina web, os respons√°veis pelo projeto desenvolveram uma maneira declarativa de estilizar componentes bem similar ao CSS.&lt;/p&gt;

&lt;p&gt;Insira a seguinte nota√ß√£o no bloco da View principal (linha 2 do c√≥digo):&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;return (
      // fazemos refer√™ncia ao estilo
      &amp;lt;View style={styles.container}&amp;gt;
          &amp;lt;Text&amp;gt;
              Hello, Tableless!
          &amp;lt;/Text&amp;gt;
      &amp;lt;/View&amp;gt;
   );
&lt;/pre&gt;

&lt;p&gt;Agora vamos criar uma vari√°vel &amp;#8220;styles&amp;#8221; que recebe o objeto &lt;strong&gt;StyleSheet&lt;/strong&gt; com os seguintes par√¢metros:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var styles = StyleSheet.create({

container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
}

})
&lt;/pre&gt;

&lt;p&gt;Antes de executar o c√≥digo, precisamos incluir o &lt;strong&gt;StyleSheet&lt;/strong&gt; em nosso escopo de inicializa√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var {
  AppRegistry,
  StyleSheet,
  Text,
  View,
} = React;
&lt;/pre&gt;

&lt;p&gt;Agora sim. Execute o c√≥digo pelo Xcode e voc√™ ver√° o seguinte resultado:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_3.2.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52767&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_3.2.jpg&#34; alt=&#34;react native simple label with border&#34; width=&#34;344&#34; height=&#34;524&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O texto agora se encontra alinhado no centro da tela e temos uma borda vermelha envolta do container. O que aconteceu aqui?&lt;/p&gt;

&lt;p&gt;Bem, n√≥s criamos um objeto container com seis par√¢metros: &lt;code&gt;flex&lt;/code&gt;, &lt;code&gt;flexDirection&lt;/code&gt;, &lt;code&gt;justifyContent&lt;/code&gt;, &lt;code&gt;alignItems&lt;/code&gt;, &lt;code&gt;borderWidth&lt;/code&gt; e &lt;code&gt;borderColor&lt;/code&gt;. Os dois √∫ltimos s√£o autoexplicativos e similares √† aplica√ß√£o de bordas do CSS. A diferen√ßa aqui √© que ao inv√©s de declarar &lt;code&gt;border-width&lt;/code&gt;, com h√≠fen, declaramos &lt;code&gt;borderWidth&lt;/code&gt;, em &lt;strong&gt;camelCase&lt;/strong&gt; (lembrando que estamos lidando com JavaScript e n√£o CSS de verdade). Outra observa√ß√£o importante √© que n√£o precisamos atribuir &lt;strong&gt;px&lt;/strong&gt; ao final do valor como fazemos na web, pois aplicativos nativos tem suas resolu√ß√µes de tela baseada em pontos &lt;strong&gt;(pt)&lt;/strong&gt; e n√£o em pixels.&lt;/p&gt;

&lt;p&gt;O React Native utiliza o &lt;strong&gt;Flexbox&lt;/strong&gt; para organiza√ß√£o visual dos componentes, o que simplifica, em muito, a constru√ß√£o de layouts. Basicamente, o par√¢metro &lt;code&gt;flex: 1&lt;/code&gt; significa que o container ocupa 100% de altura e largura na tela. O par√¢metro &lt;code&gt;flexDirection: column&lt;/code&gt; significa que os elementos seguir√£o o fluxo baseado em colunas, que √© de cima para baixo. A outra op√ß√£o seria &lt;code&gt;flexDirection: row&lt;/code&gt;, onde os elementos s√£o ordenados da esquerda para a direita. Por default, O fluxo padr√£o √© o de colunas, portanto voc√™ pode apagar essa instru√ß√£o sem nenhum impacto no seu c√≥digo.&lt;/p&gt;

&lt;p&gt;Por fim, temos a instru√ß√£o &lt;code&gt;justifyContent: center&lt;/code&gt; e &lt;code&gt;alignItems: center&lt;/code&gt;. O primeiro √© respons√°vel por alinhar o conte√∫do de forma vertical (eixo y), enquanto o √∫ltimo serve para alinhar de forma horizontal (eixo x). Al√©m de &lt;code&gt;center&lt;/code&gt;, tamb√©m existem outros valores como &lt;code&gt;flex-start&lt;/code&gt; e &lt;code&gt;flex-end&lt;/code&gt;. Tente utiliz√°-los para ver o que acontece no seu layout&amp;#8230;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se ainda restou alguma d√∫vida, &lt;a href=&#34;http://tableless.com.br/centralizando-conteudo-na-vertical-e-horizontal-com-css-flexbox/&#34; target=&#34;_blank&#34;&gt;este post&lt;/a&gt; escrito pelo Diego Eis pode te ajudar a entender.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;E se eu quiser uma borda arredondada envolta do texto e n√£o no container? Tamb√©m gostaria de mudar a cor do texto, centraliz√°-lo e inserir um padding envolta do mesmo. Simples&amp;#8230;&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
 AppRegistry,
 StyleSheet,
 Text,
 View,
} = React;

var Tableless = React.createClass({
   render: function() {
      return (
         &amp;lt;View style={styles.container}&amp;gt;
             // criamos um novo estilo para o componente de texto
             &amp;lt;Text style={styles.myText}&amp;gt;
                 Hello, Tableless!
             &amp;lt;/Text&amp;gt;
         &amp;lt;/View&amp;gt;
      );
   }
});

var styles = StyleSheet.create({

 container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
 },
 // declara√ß√£o do nosso novo estilo
 myText: {            
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
   borderRadius: 4,
   textAlign: &#39;center&#39;,
   padding: 10,
 // tamb√©m √© permitido passar uma string da cor ao inv√©s de um hexadecimal
   color: &#39;green&#39;,
 }

})

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Executando o c√≥digo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_2.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52746&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_2.jpg&#34; alt=&#34;react native simple label&#34; width=&#34;344&#34; height=&#34;524&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora que voc√™ j√° est√° familiarizado com o &amp;#8220;modo React&amp;#8221; de criar aplica√ß√µes, vamos tentar entender rapidamente o que acontece por baixo dos panos&amp;#8230;&lt;/p&gt;

&lt;h2 id=&#34;javascriptcore&#34;&gt;JavaScriptCore&lt;/h2&gt;

&lt;p&gt;Se voc√™ j√° ouviu falar sobre React, j√° ouviu sobre &lt;strong&gt;Virtual DOM&lt;/strong&gt;. Essa √© uma forma genial de abstra√ß√£o que os engenheiros do facebook desenvolveram para trazer melhorias na performance de aplica√ß√µes web, uma vez que um &lt;a href=&#34;https://pt.wikipedia.org/wiki/Modelo_de_Objeto_de_Documentos&#34; target=&#34;_blank&#34;&gt;DOM&lt;/a&gt; Virtual fica em mem√≥ria e apenas modifica√ß√µes significativas em sua estrutura s√£o novamente renderizadas na tela, sem necessidade de percorrer toda a √°rvore novamente.&lt;/p&gt;

&lt;p&gt;Em algum momento eles pensaram: &lt;em&gt;&amp;#8220;E se, utilizando essa abordagem, pud√©ssemos tamb√©m abstrair uma camada qualquer diferente do DOM para conseguir resultados similares em rela√ß√£o √† performance?&amp;#8230;&amp;#8221;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At√© ent√£o, o √∫nico componente presente no iOS e no Android que viabiliza a execu√ß√£o de c√≥digo JavaScript de modo nativo s√£o seus browsers internos, conhecidos como WebViews. Com base nesse cen√°rio, v√°rios frameworks surgiram nos √∫ltimos anos com a proposta de utilizar a camada de c√≥digo nativa apenas para disparar uma aplica√ß√£o com c√≥digo escrito em HTML, CSS e JavaScript no pr√≥prio Browser (sem a barra de endere√ßos, obviamente). Como o container respons√°vel pelo ciclo de vida da aplica√ß√£o √© nativo, isso possibilita que essas aplica√ß√µes sejam desenvolvidas e distribu√≠das atrav√©s das lojas oficiais, como a &lt;strong&gt;App Store&lt;/strong&gt; e &lt;a href=&#34;https://play.google.com/store/apps&#34; target=&#34;_blank&#34;&gt;Google Play&lt;/a&gt;, sem maiores problemas. Esse movimento originou o termo atualmente conhecido como &lt;strong&gt;Aplicativos H√≠bridos&lt;/strong&gt;. Embora essa abordagem provou-se vitoriosa em alguns cen√°rios, ainda consiste em uma p√°gina web que simula uma aplica√ß√£o escrita de forma nativa, o que, algumas vezes, peca em quest√£o de performance e experi√™ncia.&lt;/p&gt;

&lt;p&gt;Em React Native continuamos escrevendo um aplicativo em JavaScript, mas que n√£o exibe uma p√°gina web como resultado. Ao inv√©s disso, o nosso c√≥digo executa uma inst√¢ncia do chamado &lt;a href=&#34;http://trac.webkit.org/wiki/JavaScriptCore&#34; target=&#34;_blank&#34;&gt;JavaScriptCore&lt;/a&gt; respons√°vel por renderizar componentes &lt;strong&gt;verdadeiramente nativos&lt;/strong&gt; dentro do nosso app. Por exemplo, se voc√™ abrir o arquivo &lt;em&gt;/ios/MyFirstProject/AppDelegate.m&lt;/em&gt; no Xcode, vai encontrar sempre o seguinte conte√∫do, independente da quantidade de c√≥digo que tiver escrito no seu editor de texto:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/AppDelegate.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-53026&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/AppDelegate.png&#34; alt=&#34;AppDelegate.m image &#34; width=&#34;844&#34; height=&#34;777&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O segredo est√° nessa classe &lt;code&gt;RCTRootView&lt;/code&gt;. Ela √© uma classe criada pelo pr√≥prio framework, respons√°vel por apresentar os elementos da classe &lt;code&gt;UIKit&lt;/code&gt; com base no c√≥digo que escrevemos em JS. Ou seja, o controle do comportamento do nosso app √© feito em JavaScript, mas em nenhum momento ocorre compila√ß√£o desse c√≥digo para Objective-C, bin√°rio ou coisa do tipo. Por isso conseguimos ver atualiza√ß√µes em tempo real em nossa aplica√ß√£o, uma vez que nenhum c√≥digo em Objective-C √© escrito, apenas c√≥digo JavaScript. N√£o tem nada pra re-compilar! Genial.&lt;/p&gt;

&lt;p&gt;Como essa &amp;#8220;passagem de bast√£o&amp;#8221; entre o c√≥digo JavaScript e Objective-C √© feita est√° fora do escopo desse post, mas caso tenha curiosidade de saber onde vai parar o c√≥digo que escrevemos, basta acessar a url &lt;a href=&#34;http://localhost:8081/index.ios.bundle?platform=ios&amp; dev=true&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://localhost:8081/index.ios.bundle?platform=ios&amp;amp;&#34;&gt;http://localhost:8081/index.ios.bundle?platform=ios&amp;amp;&lt;/a&gt; dev=true&lt;/a&gt; enquanto a aplica√ß√£o estiver no ar. Voc√™ ir√° perceber nosso c√≥digo em meio √† um monte de outros gerados pelo framework.&lt;/p&gt;

&lt;h2 id=&#34;explorando-as-apis-e-componentes-nativos&#34;&gt;Explorando as APIs e componentes nativos&lt;/h2&gt;

&lt;p&gt;Uma das coisas mais legais &amp;#8211; e vantajosas &amp;#8211; de se trabalhar com o React Native √© a possibilidade de utilizar os componentes e APIs nativos da plataforma. Indiscutivelmente, √© um recurso que oferece uma experi√™ncia mais atrativa para o usu√°rio e que torna dispens√°vel a utiliza√ß√£o de servi√ßos de terceiros como o &lt;a href=&#34;https://cordova.apache.org/&#34; target=&#34;_blank&#34;&gt;Apache Cordova&lt;/a&gt;, por exemplo. O React Native tamb√©m trabalha em uma thread separada da thread principal, o que faz com que sua aplica√ß√£o mantenha a alta performance sem sacrificar a capacidade do seu smartphone (o que √© incr√≠vel!).&lt;/p&gt;

&lt;p&gt;Para come√ßar a ilustrar esses pontos, vamos modificar o nosso c√≥digo para exibir um alerta nativo do iOS quando um bot√£o for clicado.&lt;/p&gt;

&lt;h3 id=&#34;capturando-eventos-e-fornecendo-feedback-visual&#34;&gt;Capturando eventos e fornecendo feedback visual&lt;/h3&gt;

&lt;p&gt;Assim como todos os demais componentes, o React Native criou um espec√≠fico para recuperar o evento de &lt;strong&gt;touch&lt;/strong&gt; (ou tap) na tela do device. Seu nome √© &lt;code&gt;&amp;lt;TouchableHighlight&amp;gt;&lt;/code&gt;, que nada mais √© do que um wrapper invis√≠vel respons√°vel por fazer algum outro componente responder ao toque do usu√°rio e, em seguida, conect√°-lo a algum evento/m√©todo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&amp;lt;TouchableHighlight onPress={this.someFunction}&amp;gt;
   // aplica√ß√£o de estilo no componente
   &amp;lt;View style={styles.button}&amp;gt;
      &amp;lt;Text&amp;gt;An Alert Message&amp;lt;/Text&amp;gt;
   &amp;lt;/View&amp;gt;
&amp;lt;/TouchableHighlight&amp;gt;
&lt;/pre&gt;

&lt;p&gt;No c√≥digo acima temos um exemplo de como podemos fazer uso desse componente. Perceba que dentro dele temos uma outra &lt;code&gt;&amp;lt;View&amp;gt;&lt;/code&gt; que abriga um componente &lt;code&gt;&amp;lt;Text&amp;gt;&lt;/code&gt; com um texto indicativo. O &lt;code&gt;&amp;lt;TouchableHighlight&amp;gt;&lt;/code&gt; recebe uma fun√ß√£o de nome &lt;code&gt;someFunction&lt;/code&gt; quando o evento &lt;strong&gt;onPress&lt;/strong&gt; for acionado. Outra coisa bacana do componente √© que o mesmo fornece feedback visual do momento em que o usu√°rio pressiona e solta o bot√£o. Por default, o React Native aplica um efeito de &lt;strong&gt;overlay&lt;/strong&gt; ao componente sem que precisemos fazer nada. Awesome!&lt;/p&gt;

&lt;p&gt;O &lt;code&gt;&amp;lt;TouchableHighlight&amp;gt;&lt;/code&gt; tamb√©m responde √† outros eventos, como &lt;code&gt;onPressIn&lt;/code&gt;, &lt;code&gt;onPressOut&lt;/code&gt; e &lt;code&gt;onLongPress&lt;/code&gt;, para atender √†s demais necessidades de intera√ß√£o com o usu√°rio.&lt;/p&gt;

&lt;p&gt;Vamos agora mexer no nosso c√≥digo e substituir a fun√ß√£o &lt;code&gt;someFunction&lt;/code&gt; do evento &lt;code&gt;onPress&lt;/code&gt; do nosso bot√£o por um &lt;strong&gt;alert dialog&lt;/strong&gt; nativo da plataforma. O c√≥digo do alerta √© muito simples, conforme abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;AlertIOS.alert(
  &#39;Simple Title&#39;,
  &#39;Hi, I am a native iOS alert component in action.&#39;
)
&lt;/pre&gt;

&lt;p&gt;Nosso alerta √© simples e recebe apenas dois par√¢metros: O t√≠tulo e a descri√ß√£o que ser√£o exibidos para o usu√°rio. Vamos juntar tudo e ver como fica o nosso c√≥digo final (&lt;code&gt;git checkout step3&lt;/code&gt;):&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
   AppRegistry,
   StyleSheet,
   Text,
   View,
   // declaramos o TouchableHighlight.
   TouchableHighlight,     
   // declaramos o AlertIOS.
   AlertIOS,           
} = React;

var Tableless = React.createClass({

 render: function() {
   return (
      &amp;lt;View style={styles.container} &amp;gt;
        &amp;lt;Text style={styles.myText}&amp;gt;
          Hello, Tableless!
        &amp;lt;/Text&amp;gt;
        // inserimos o c√≥digo do alerta no lugar da fun√ß√£o
        &amp;lt;TouchableHighlight onPress={() =&amp;gt; AlertIOS.alert(    
             &#39;Simple Title&#39;,
             &#39;Hi, I am a native iOS alert component in action.&#39;
           )}&amp;gt;
           &amp;lt;View style={styles.button}&amp;gt;
               // exemplo de estilo inline.
               &amp;lt;Text style={{color: &#39;#fff&#39;}}&amp;gt;An Alert Message&amp;lt;/Text&amp;gt; 
           &amp;lt;/View&amp;gt;
        &amp;lt;/TouchableHighlight&amp;gt;
      &amp;lt;/View&amp;gt;
    );
 }
});

var styles = StyleSheet.create({

container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
},
myText: {
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
   borderRadius: 4,
   textAlign: &#39;center&#39;,
   padding: 10,
   marginBottom: 10,
   color: &#39;green&#39;,
},
// estilo do bot√£o.
button: {                
   backgroundColor: &#39;lightblue&#39;,
   padding: 20,
   borderRadius: 5,
},

})

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Pressione &lt;strong&gt;CMD + R&lt;/strong&gt; no teclado e veja o resultado do que criamos no seu emulador com poucas linhas de c√≥digo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-alert-ios.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52771&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-alert-ios.gif&#34; alt=&#34;react native alert ios&#34; width=&#34;640&#34; height=&#34;480&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;props-state&#34;&gt;Props &amp;amp; State&lt;/h3&gt;

&lt;p&gt;Tudo o que fizemos at√© o momento foi √≥timo, mas n√£o √© o suficiente para manter uma aplica√ß√£o em funcionamento. E se eu quisesse alterar o valor do texto que aparece na tela de forma din√¢mica, com base em um input do usu√°rio? Podemos fazer isso facilmente utilizando o conceito de &lt;strong&gt;state&lt;/strong&gt;, que nada mais √© do que &lt;strong&gt;gerenciar um componente e aplicar altera√ß√µes em seu valor durante seu ciclo de vida&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Para que isso seja poss√≠vel, precisaremos de tr√™s coisas novas em nosso c√≥digo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Um m√©todo que defina o &lt;strong&gt;estado inicial&lt;/strong&gt; do meu componente;&lt;/li&gt;
&lt;li&gt;Um componente nativo que receba &lt;strong&gt;inputs do usu√°rio&lt;/strong&gt; na tela;&lt;/li&gt;
&lt;li&gt;Um m√©todo respons√°vel por &lt;strong&gt;modificar o valor&lt;/strong&gt; desse meu componente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Primeiramente, vamos criar o estado inicial do meu componente:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;getInitialState : function() {
   // Inicializamos nosso componente com uma String de texto.
   return { myText : &#34;Hello, Tableless!&#34; };
},    
&lt;/pre&gt;

&lt;p&gt;Em seguida, um componente para receber inputs do usu√°rio:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&amp;lt;TextInput
         placeholder=&#34;Type something...&#34;
         onChange={this.textInputDidChange} /&amp;gt;
// Input com um placeholder + m√©todo.
&lt;/pre&gt;

&lt;p&gt;E, por fim, a fun√ß√£o com o m√©todo respons√°vel por atualizar o estado da minha View sempre que o valor do meu componente for modificado:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;textInputDidChange : function (event) {      
   this.setState({ myText: event.nativeEvent.text });
},   
&lt;/pre&gt;

&lt;p&gt;Vamos ver como tudo isso fica no nosso c√≥digo (&lt;code&gt;git checkout step4&lt;/code&gt;).&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
   AppRegistry,
   StyleSheet,
   Text,
   View,
   TouchableHighlight,
   AlertIOS,
   // declaramos o TextInput.
   TextInput,        
} = React;

var Tableless = React.createClass({

getInitialState : function() {
   return { myText : &#34;Hello, Tableless!&#34; };
},    

textInputDidChange : function (event) {      
   this.setState({ myText: event.nativeEvent.text });
},

 render: function() {
  return (
    &amp;lt;View style={styles.container} &amp;gt;
      // Repare os estilos inline (opcional).
      &amp;lt;TextInput style = {{ height: 50, padding: 6, fontSize: 16, borderColor: &#34;lightblue&#34;, borderWidth: 1,     margin: 10, borderRadius: 4 }}
               placeholder=&#34;Type something...&#34;
               onChange={this.textInputDidChange} /&amp;gt;   
         &amp;lt;Text style={styles.myText}&amp;gt;
            // Ao inv√©s do texto est√°tico, fazemos refer√™ncia √† vari√°vel myText.
            {this.state.myText}   
         &amp;lt;/Text&amp;gt;
         &amp;lt;TouchableHighlight onPress={() =&amp;gt; AlertIOS.alert(
                 &#39;Simple Title&#39;,
                 &#39;Hi, I am a native iOS alert component in action.&#39;
              )}&amp;gt;
           &amp;lt;View style={styles.button}&amp;gt;
                &amp;lt;Text style={{color: &#39;#fff&#39;}}&amp;gt;An Alert Message&amp;lt;/Text&amp;gt;
           &amp;lt;/View&amp;gt;
         &amp;lt;/TouchableHighlight&amp;gt;
    &amp;lt;/View&amp;gt;
  );
 }
});

var styles = StyleSheet.create({

 container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
 },
 myText: {
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
   borderRadius: 4,
   textAlign: &#39;center&#39;,
   padding: 10,
   marginBottom: 10,
   color: &#39;green&#39;,
 },
 button: {
   backgroundColor: &#39;lightblue&#39;,
   padding: 20,
   borderRadius: 5,
 },

})

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Agora nosso label reflete o valor que digitamos em nosso input, veja:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-text-input-ios.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52776&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-text-input-ios.gif&#34; alt=&#34;react native text input ios&#34; width=&#34;640&#34; height=&#34;480&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Caso queira simular o teclado do device, basta ir na barra de ferramentas do emulador e procurar a op√ß√£o &lt;strong&gt;Hardware -&amp;gt; Keyboard -&amp;gt; Toggle Software Keyboard&lt;/strong&gt;. Ao habilitar essa op√ß√£o, o teclado nativo do device ser√° exibido sempre que um input for solicitado.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Se voc√™ tem o costume de utilizar aplicativos no iPhone j√° deve ter reparado que o comportamento de transi√ß√£o de telas √© ligeiramente diferente daquilo que observamos na web. Ao inv√©s de exibir uma outra p√°gina qualquer como resultado de alguma a√ß√£o (como clique em um link ou uma busca) no iOS n√≥s trabalhamos com um componente chamado &lt;strong&gt;UINavigationController&lt;/strong&gt; que gerencia essa transi√ß√£o de forma hier√°rquica. Obviamente j√° temos √† nossa disposi√ß√£o um componente para lidar com isso, chamado &lt;strong&gt;NavigatorIOS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Dito isso, a primeira coisa que precisamos fazer √© mudar o componente &lt;strong&gt;root&lt;/strong&gt; da nossa aplica√ß√£o que, ao inv√©s de apontar para &lt;strong&gt;Tableless&lt;/strong&gt;, agora ir√° apontar para a classe &lt;strong&gt;MainNav&lt;/strong&gt;, conforme abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; MainNav);&lt;/pre&gt;

&lt;p&gt;Agora vamos criar a classe &lt;strong&gt;MainNav&lt;/strong&gt; que ir√° funcionar como um container que far√° refer√™ncia √† tela &lt;strong&gt;Tableless&lt;/strong&gt; que est√°vamos trabalhando anteriormente, dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var MainNav = React.createClass({
  render: function() {
    return (
      // Inclu√≠mos o NavigatorIOS em MainNav e fazemos ele apontar para Tableless.
      &amp;lt;NavigatorIOS
        initialRoute={{ component: Tableless, title: &#39;MyFirstProject&#39; }} 
        style={{ flex: 1 }} /&amp;gt;
    );    
  }
});
&lt;/pre&gt;

&lt;p&gt;Perfeito. Agora vamos criar uma outra tela que ser√° respons√°vel por exibir o texto que iremos digitar em nossa View principal. Irei chamar essa tela de &lt;strong&gt;NextScreen&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var NextScreen = React.createClass({
  render: function() {
    return (
      &amp;lt;View&amp;gt;
        &amp;lt;Text&amp;gt;
          You entered: {this.props.inputText}
        &amp;lt;/Text&amp;gt;
      &amp;lt;/View&amp;gt;
    );
  }
});
&lt;/pre&gt;

&lt;p&gt;Perceba a instru√ß√£o &lt;code&gt;{this.props.inputText}&lt;/code&gt; dentro do componente &lt;code&gt;&amp;lt;Text&amp;gt;&lt;/code&gt;. Ele ser√° o respons√°vel por apresentar o valor digitado no nosso input. Mas para que isso ocorra, precisamos de um novo evento¬†em nosso &lt;code&gt;&amp;lt;TextInput&amp;gt;&lt;/code&gt; que guarde esse valor e o conduza at√© a pr√≥xima tela que acabamos de criar. J√° que n√£o temos um bot√£o pra disparar esse m√©todo, que tal cham√°-lo logo ap√≥s pressionar o &lt;strong&gt;Return&lt;/strong&gt; do teclado? Existe um evento chamado &lt;code&gt;onEndEditing&lt;/code&gt; que faz justamente isso:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&amp;lt;TextInput placeholder=&#34;Type something...&#34;
              onChange={this.textInputDidChange}
              // inclu√≠mos o novo evento aqui.
              onEndEditing={ event =&amp;gt; this.callNextScreen(event.nativeEvent.text) } /&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Referenciamos a fun√ß√£o de nome¬†&lt;strong&gt;callNextScreen&lt;/strong&gt; que recupera o texto¬†que digitamos atrav√©s do evento de nome¬†&lt;code&gt;event.nativeEvent.text&lt;/code&gt;. Vamos criar essa fun√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// a fun√ß√£o recebe o texto digitado como par√¢metro
callNextScreen: function (inputText) {
  // chamamos a transi√ß√£o &lt;strong&gt;push&lt;/strong&gt; nativa do iOS.
  this.props.navigator.push({
     title: &#34;The Next Screen&#34;,
     component: NextScreen,
     // enviamos o par√¢metro para a tela &lt;strong&gt;NextScreen&lt;/strong&gt;
     passProps: { &#39;inputText&#39;: inputText }
  });
}
&lt;/pre&gt;

&lt;p&gt;Perceba que n√≥s chamamos a fun√ß√£o &lt;code&gt;push&lt;/code&gt; do &lt;code&gt;navigator&lt;/code&gt; que faz parte do atributo props da nossa tela &lt;strong&gt;NextScreen&lt;/strong&gt;. Uma outra novidade √© o par√¢metro &lt;code&gt;passProps&lt;/code&gt; que recebe um objeto com chave e valor de nome &lt;code&gt;inputText&lt;/code&gt;, respons√°vel por guardar o texto que digitamos e conduzi-lo √† pr√≥xima tela. Vamos ver como ficou o c√≥digo final (&lt;code&gt;git checkout step5&lt;/code&gt;):&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  TouchableHighlight,
  AlertIOS,
  TextInput,
  // novo componente NavigatorIOS
  NavigatorIOS, 
} = React;

var Tableless = React.createClass({

getInitialState : function() {
  return {
    myText : &#34;Hello, Tableless!&#34;
  };
},

callNextScreen: function (inputText) {
  this.props.navigator.push({
    title: &#34;The Next Screen&#34;,
    component: NextScreen,
    passProps: { &#39;inputText&#39;: inputText }
});
},

textInputDidChange : function (event) {
  this.setState({ myText: event.nativeEvent.text });
},

render: function() {
  return (
   &amp;lt;View style={styles.container} &amp;gt;
    &amp;lt;TextInput style = {{ height: 50, padding: 6, fontSize: 16, borderColor: &#34;lightblue&#34;, borderWidth: 1, margin:    10, borderRadius: 4 }}
      placeholder=&#34;Type something...&#34;
      onChange={this.textInputDidChange}
      onEndEditing={ event =&amp;gt; this.callNextScreen(event.nativeEvent.text) } /&amp;gt;
    &amp;lt;Text style={styles.myText}&amp;gt;
      {this.state.myText}
    &amp;lt;/Text&amp;gt;
    &amp;lt;TouchableHighlight onPress={() =&amp;gt; AlertIOS.alert(
        &#39;Simple Title&#39;,
        &#39;Hi, I am a native iOS alert component in action.&#39;
      )}&amp;gt;
      &amp;lt;View style={styles.button}&amp;gt;
        &amp;lt;Text style={{color: &#39;#fff&#39;}}&amp;gt;An Alert Message&amp;lt;/Text&amp;gt;
      &amp;lt;/View&amp;gt;
    &amp;lt;/TouchableHighlight&amp;gt;
   &amp;lt;/View&amp;gt;
  );
}

});

var MainNav = React.createClass({
 render: function() {
   return (
     &amp;lt;NavigatorIOS
       initialRoute={{
         component: Tableless,
         title: &#39;MyFirstProject&#39;
       }}
       style={{ flex: 1 }} /&amp;gt;
   );
 }
});

var NextScreen = React.createClass({
 render: function() {
   return (
     &amp;lt;View style = {{ backgroundColor: &#39;green&#39;, flex: 1, justifyContent: &#39;center&#39;, alignItems: &#39;center&#39; }} &amp;gt;
       &amp;lt;Text style = {{ color: &#39;#fff&#39;, fontSize: 22 }} &amp;gt;
         You entered: {this.props.inputText}
       &amp;lt;/Text&amp;gt;
     &amp;lt;/View&amp;gt;
   );
 }
});

var styles = StyleSheet.create({

 container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
 },
 myText: {
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
   borderRadius: 4,
   textAlign: &#39;center&#39;,
   padding: 10,
   marginBottom: 10,
   color: &#39;green&#39;,
 },
 button: {
   backgroundColor: &#39;lightblue&#39;,
   padding: 20,
   borderRadius: 5,
 },

})

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; MainNav);
&lt;/pre&gt;

&lt;p&gt;O¬†resultado:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-navigator-ios.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52778&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-navigator-ios.gif&#34; alt=&#34;react native navigator ios&#34; width=&#34;640&#34; height=&#34;480&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fa√ßa um teste no seu device e observe o qu√£o suave s√£o as anima√ß√µes. Uma vez na tela seguinte, voc√™ pode retornar para a anterior com um simples gesto de deslizar os dedos da esquerda para a direita (o famoso &lt;strong&gt;swipe gesture&lt;/strong&gt;). Voc√™ consegue at√© mesmo simular uma transi√ß√£o similar em html com &lt;code&gt;overflow&lt;/code&gt;, mas n√£o ser√° a mesma coisa. Esse √© o verdadeiro ganho de trabalhar com componentes 100% nativos: As transi√ß√µes em &lt;strong&gt;60fps&lt;/strong&gt; (60 frames por segundo).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-swipe-60fps.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52793&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-swipe-60fps.gif&#34; alt=&#34;react native swipe 60fps&#34; width=&#34;640&#34; height=&#34;480&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Por fim, voc√™ foi apresentado aos dois principais conceitos do React: &lt;strong&gt;props&lt;/strong&gt;, utilizado quando queremos compartilhar valores entre componentes e &lt;strong&gt;state&lt;/strong&gt;, quando desejamos monitorar o estado de um componente e suas altera√ß√µes (geralmente ocasionado por algum evento de usu√°rio).&lt;/p&gt;

&lt;h2 id=&#34;modularidade&#34;&gt;Modularidade&lt;/h2&gt;

&lt;p&gt;Voc√™ tem consci√™ncia da bagun√ßa que nosso c√≥digo pode se tornar se prosseguirmos com a escrita de toda a l√≥gica em um mesmo arquivo, n√©? Mas uma das vantagens da plataforma √© justamente a modulariza√ß√£o, uma vez que cada componente pode estar isolado em arquivos diferentes, gerenciando seus pr√≥prios estados de forma individual. Fazemos isso atrav√©s do &lt;strong&gt;module.exports&lt;/strong&gt; do Node, presente na especifica√ß√£o do &lt;strong&gt;CommonJS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Para ilustrar como isso pode ser feito, vamos separar nossa se√ß√£o de estilos no arquivo &lt;em&gt;style.js&lt;/em&gt; e requisitar seu acesso no arquivo _index.ios.js_¬†(&lt;code&gt;git checkout step6&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Conte√∫do de &lt;em&gt;style.js&lt;/em&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var React = require(&#39;react-native&#39;);
var { StyleSheet } = React;

var styles = StyleSheet.create({

 container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
 },
 myText: {
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
   borderRadius: 4,
   textAlign: &#39;center&#39;,
   padding: 10,
   marginBottom: 10,
   color: &#39;green&#39;,
 },
 button: {
   backgroundColor: &#39;lightblue&#39;,
   padding: 20,
   borderRadius: 5,
 },

});
// viabilizamos a exporta√ß√£o do m√≥dulo.
module.exports = styles;
&lt;/pre&gt;

&lt;p&gt;E no arquivo &lt;em&gt;index.ios.js&lt;/em&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  TouchableHighlight,
  AlertIOS,
  TextInput,
  NavigatorIOS,
} = React;

// solicitamos acesso ao conte√∫do de¬†&lt;em&gt;style.js&lt;/em&gt;
var styles = require(&#39;./style&#39;);

var Tableless = React.createClass({ ... })
&lt;/pre&gt;

&lt;p&gt;Seguindo esse conceito, sua aplica√ß√£o fica muito mais leg√≠vel, principalmente se utilizarmos o &lt;strong&gt;Nesting&lt;/strong&gt; de componentes (n√£o abordado nesse tutorial).&lt;/p&gt;

&lt;p&gt;Como exerc√≠cio, tente fazer o mesmo com os demais componentes que criamos.&lt;/p&gt;

&lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt;

&lt;p&gt;Uma das vantagens oferecidas pelo framework √© poder criar aplica√ß√µes agn√≥sticas, que compartilham a mesma base de c√≥digo. Neste caso, voc√™ poderia ter os arquivos &lt;em&gt;index.ios.js&lt;/em&gt; e &lt;em&gt;index.android.js&lt;/em&gt; apontando para uma classe &amp;#8220;root&amp;#8221;, respons√°vel por executar o c√≥digo com base no sistema utilizado pelo usu√°rio: iOS ou Android. Isso √© poss√≠vel se voc√™ fizer uso de componentes que n√£o s√£o espec√≠ficos de cada plataforma, como &lt;code&gt;View&lt;/code&gt;, &lt;code&gt;Image&lt;/code&gt;, &lt;code&gt;ListView&lt;/code&gt;, &lt;code&gt;MapView&lt;/code&gt;, &lt;code&gt;Modal&lt;/code&gt;, &lt;code&gt;TouchableHighlight&lt;/code&gt;, &lt;code&gt;Text&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;Outra possibilidade, em aplica√ß√µes mais complexas, √© de compartilhar a mesma l√≥gica entre ambas as plataformas com a diferen√ßa de utilizar componentes espec√≠ficos para cada uma delas. A vantagem seria proporcionar a melhor experi√™ncia &lt;strong&gt;nativa&lt;/strong&gt; poss√≠vel para o usu√°rio. Como exemplo, temos os componentes &lt;code&gt;DrawerLayoutAndroid&lt;/code&gt;, &lt;code&gt;ProgressBarAndroid&lt;/code&gt;, &lt;code&gt;ToolbarAndroid&lt;/code&gt;, etc.&lt;/p&gt;

&lt;h2 id=&#34;um-futuro-m√≥vel-para-o-javascript&#34;&gt;Um futuro m√≥vel para o JavaScript&lt;/h2&gt;

&lt;p&gt;Hoje em dia o desenvolvedor JavaScript vive um momento fant√°stico, pois al√©m de contar com frameworks como &lt;a href=&#34;http://ionicframework.com/&#34; target=&#34;_blank&#34;&gt;Ionic&lt;/a&gt;, que tem o intuito de explorar o desenvolvimento h√≠brido atrav√©s de tecnologias web, agora temos o React Native √† nossa disposi√ß√£o, com o intuito de conduzir o JavaScript ao ambiente nativo. No entanto, diferente do conhecido termo imortalizado pelo Java &amp;#8220;&lt;em&gt;Write once, run anywhere&lt;/em&gt;&amp;#8220;, o framework defende o &amp;#8220;&lt;em&gt;Learn once, write anywhere&lt;/em&gt;&amp;#8220;, o que significa que cada plataforma tem seu pr√≥prio visual, estrutura e recursos √∫nicos. E que voc√™, como engenheiro de software, deve ser capaz de construir aplica√ß√µes para qualquer que seja a plataforma &amp;#8211; sem necessariamente aprender uma gama de novas tecnologias &amp;#8211; mas sempre respeitando o ecossistema nativo de cada uma delas. Isso √© fant√°stico!&lt;/p&gt;

&lt;p&gt;Outro ponto que vale ressaltar √© a otimiza√ß√£o que o framework oferece ao dia a dia de uma equipe, uma vez que ele tem o potencial de acelerar todo o processo &amp;#8211; n√£o s√≥ de desenvolvimento, mas tamb√©m de lan√ßamento de um aplicativo. Como exemplo, a Apple possibilita que altera√ß√µes sejam executadas no &amp;#8220;ar&amp;#8221; em aplicativos baseados no tal JavaScriptCore &lt;strong&gt;sem precisar aguardar pelo exaustivo processo de review deles&lt;/strong&gt;. Ou seja, mais produtividade e mais clientes felizes!&lt;/p&gt;

&lt;p&gt;Embora o React Native seja um framework fant√°stico no que se prop√µe a oferecer, ele n√£o √© o √∫nico. Existem outras ferramentas que permitem o desenvolvimento de aplicativos nativos utilizando JavaScript, como √© o caso do j√° conhecido &lt;a href=&#34;http://www.appcelerator.com/mobile-app-development-products/&#34; target=&#34;_blank&#34;&gt;Titanium&lt;/a&gt; e, do mais recente, &lt;a href=&#34;https://www.nativescript.org/&#34; target=&#34;_blank&#34;&gt;NativeScript&lt;/a&gt;. Mas a grande sacada do React Native √© o &lt;strong&gt;React&lt;/strong&gt; em si. Sua natureza declarativa, a metodologia de reutiliza√ß√£o de componentes e o foco prim√°rio na interface do usu√°rio proporcionam uma experi√™ncia, at√© o momento, in√©dita para o desenvolvedor web que deseja migrar para o mundo do desenvolvimento m√≥vel.&lt;/p&gt;

&lt;p&gt;Em resumo, o React Native merece sua aten√ß√£o porque&amp;#8230;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;N√£o remove voc√™ do ecossistema da web:¬†&lt;/strong&gt;As mesmas ferramentas que usamos para o desenvolvimento web s√£o basicamente as mesmas que utilizaremos para desenvolvimento mobile. Ao inv√©s de depender exclusivamente do Xcode ou Android Studio, um &lt;a href=&#34;http://www.sublimetext.com/&#34; target=&#34;_blank&#34;&gt;SublimeText&lt;/a&gt;, &lt;a href=&#34;https://atom.io/&#34; target=&#34;_blank&#34;&gt;Atom&lt;/a&gt; ou &lt;a href=&#34;http://brackets.io/&#34; target=&#34;_blank&#34;&gt;Brackets&lt;/a&gt; j√° dar√£o conta do recado pra voc√™. Com se isso n√£o bastasse, voc√™ ainda tem a op√ß√£o de fazer debug do c√≥digo via &lt;a href=&#34;https://developers.google.com/web/tools/chrome-devtools/&#34; target=&#34;_blank&#34;&gt;Chrome DevTools&lt;/a&gt;, atrav√©s de uma extens√£o desenvolvida exclusivamente para o React, como se fosse uma aplica√ß√£o web de verdade!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Utiliza Flexbox e CSS:¬†&lt;/strong&gt;O Flexbox permite que voc√™ estruture sua camada visual de maneira muito simples e intuitiva. Esse √© um ponto cr√≠tico em aplica√ß√µes nativas. Tome o AutoLayout do iOS, como exemplo. Lidar com Constraints, Size Classes e outros recursos n√£o s√£o assim t√£o simples. Sem contar que essa fica sendo uma tarefa exclusiva do Desenvolvedor e n√£o do Designer. Em contrapartida, se voc√™ j√° √© um Webdesigner, pode aproveitar seu c√≥digo CSS diretamente na plataforma &amp;#8211; ou solicitar que o Designer gere ele pra voc√™ incluir no seu app. N√£o √© o m√°ximo?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;√â extremamente extens√≠vel:¬†&lt;/strong&gt;Voc√™ pode compartilhar o seu c√≥digo JavaScript com o seu colega de trabalho que desenvolve em Objective-C, Swift ou Java sem maiores problemas. O framework possibilita a integra√ß√£o de m√≥dulos nativos, proporcionando um ambiente colaborativo ainda mais rico e transparente. Ou seja, sempre que houver a necessidade de implementar um m√≥dulo nativo &amp;#8211; ou reaproveitar algum que j√° tenha sido criado pela sua equipe &amp;#8211; basta import√°-lo no seu projeto e ele estar√° dispon√≠vel. Yes!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Utiliza Polyfills para tirar vantagem dos recursos web:¬†&lt;/strong&gt;APIs como &lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;geolocation&lt;/code&gt;, &lt;code&gt;setTimeout&lt;/code&gt; e o pr√≥prio &lt;code&gt;flexbox&lt;/code&gt; n√£o existem em ambiente nativo, mas existem no Browser! Mais uma vez, a transi√ß√£o entre os ambientes web e nativo fica ainda mais simples de ser feita.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simples gerenciamento das depend√™ncias do projeto:&lt;/strong&gt;Programadores JavaScript j√° est√£o acostumados a utilizar o NPM para gerir depend√™ncias e fazer build de suas aplica√ß√µes. Trazer essa ferramenta para dentro do escopo nativo significa menos uma barreira adicional. Em um simples arquivo &lt;em&gt;package.json&lt;/em&gt; voc√™ √© capaz de organizar todas as suas depend√™ncias como se estivesse trabalhando na web, sem a necessidade de aprender ferramentas como &lt;a href=&#34;https://cocoapods.org/&#34; target=&#34;_blank&#34;&gt;Cocoapods&lt;/a&gt; para iOS ou &lt;a href=&#34;http://gradle.org/&#34; target=&#34;_blank&#34;&gt;Gradle&lt;/a&gt; no caso do Android.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;O desenvolvimento mobile est√° mudando com a mesma velocidade da demanda de mercado. Mais e mais ferramentas v√™m sendo desenvolvidas com o intuito de prover uma experi√™ncia mais rica, tanto para o desenvolvedor quanto para o usu√°rio final. Frameworks como React Native surgem como uma prova de conceito de que existem falhas em ambos os ecossistemas e o que resta fazer √© unir o melhor dos dois mundos. O mais importante, no fim das contas, √© a tal da estrat√©gia. Se &lt;a href=&#34;https://en.wikipedia.org/wiki/Time_to_market&#34; target=&#34;_blank&#34;&gt;tempo de mercado&lt;/a&gt; e produtividade fazem parte do seu vocabul√°rio (ou de sua startup), fique de olho nas mudan√ßas. Elas est√£o apenas come√ßando&amp;#8230;&lt;/p&gt;

&lt;p&gt;Enfim&amp;#8230; √© uma √©poca excelente para ser um desenvolvedor JavaScript. üôÇ&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Conhe√ßa mais sobre o React para web &lt;a href=&#34;http://tableless.com.br/react-javascript-reativo/&#34; target=&#34;_blank&#34;&gt;neste post&lt;/a&gt; do Davi Ferreira.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Login com a API do GooglePlus no Android.</title>
      <link>https://tableless.github.io/hugo-public/login-com-api-do-googleplus-no-android/</link>
      <pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/login-com-api-do-googleplus-no-android/</guid>
      <description>

&lt;p&gt;Temos uma op√ß√£o bastante √∫til hoje em dia no Android, que √© usar a sincroniza√ß√£o da conta de e-mail do Google.&lt;/p&gt;

&lt;p&gt;N√£o vou alongar muito a introdu√ß√£o, vamos partir para a codifica√ß√£o e configura√ß√£o da API.&lt;/p&gt;

&lt;h2 id=&#34;criando-um-novo-projeto-no-androidstudio&#34;&gt;Criando um novo Projeto no AndroidStudio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/1.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52732&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/1.png&#34; alt=&#34;1&#34; width=&#34;472&#34; height=&#34;326&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Digite o &lt;strong&gt;nome&lt;/strong&gt; da aplica√ß√£o e escolha tamb√©m um nome do &lt;strong&gt;package&lt;/strong&gt;, vamos precisar para ativar a API do GooglePlus¬†no &lt;strong&gt;Console do Google.&lt;/strong&gt; Continuei a cria√ß√£o e escolha uma &lt;strong&gt;Empty&lt;/strong&gt; &lt;strong&gt;Activity&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;configura√ß√£o-no-console-do-google-e-ativa√ß√£o-da-api&#34;&gt;Configura√ß√£o no Console do Google e Ativa√ß√£o da API&lt;/h2&gt;

&lt;p&gt;Tenho que informar que essa √© a parte mais chata do tutorial, mas enfim com pouco de paci√™ncia e aten√ß√£o vamos conseguir.&lt;/p&gt;

&lt;p&gt;Acesse o link para configurar¬†&lt;a href=&#34;https://developers.google.com/mobile/add?platform=android&amp;cntapi=signin&amp;cnturl=https:%2F%2Fdevelopers.google.com%2Fidentity%2Fsign-in%2Fandroid%2Fsign-in%3Fconfigured%3Dtrue&amp;cntlbl=Continue%20Adding%20Sign-In&#34; target=&#34;_blank&#34;&gt;Console Configura√ß√£o&lt;/a&gt;. Voc√™ ir√° ver algo parecido com isso:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/c1.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52724&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/c1.png&#34; alt=&#34;c1&#34; width=&#34;600&#34; height=&#34;337&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Adicione o &lt;strong&gt;nome&lt;/strong&gt; para a sua aplica√ß√£o (Sugiro que seja o mesmo nome que Adicionou no seu App).&lt;/li&gt;
&lt;li&gt;Adicione o nome do &lt;strong&gt;package&lt;/strong&gt; (Voc√™ pode encontrar esse nome no seu &lt;strong&gt;AndroidManisfest.xml&lt;/strong&gt; ou no seu &lt;strong&gt;Gradle app-level&lt;/strong&gt; escrito &lt;strong&gt;applicationId&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;Escolha sua Regi√£o.&lt;/li&gt;
&lt;li&gt;Continue (Choose and configure services).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Feito,¬†vai ser¬†redirecionado a uma p√°gina e irar visualizar um campo vazio, l√° voc√™ vai digitar o seu¬†&lt;strong&gt;SHA-1&lt;/strong&gt;. Por√©m como obter meu SHA-1? Voc√™ vai ter que acessar via linha de comando a pasta (&lt;strong&gt;.android&lt;/strong&gt;) normalmente ela fica localizada na raiz ¬†(&lt;strong&gt;C:\Users\NomeUsuario.android&lt;/strong&gt;) ¬†dentro voc√™ vai perceber um arquivo (chave chamada &lt;strong&gt;debug.keystore&lt;/strong&gt;¬†),&lt;strong&gt;¬†&lt;/strong&gt;quando achar digite o seguinte comando na pasta:&lt;/p&gt;

&lt;pre&gt;keytool -list -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/cmd.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52729&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/cmd.png&#34; alt=&#34;cmd&#34; width=&#34;956&#34; height=&#34;537&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Caso voc√™ n√£o consiga acesse o link para mais informa√ß√µes &lt;a href=&#34;https://developers.google.com/android/guides/client-auth&#34; target=&#34;_blank&#34;&gt;obter SHA-1&lt;/a&gt;. Agora¬†copie e cole o SHA-1 no Console do Google e voc√™ ter√° algo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/c3.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52730&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/c3.png&#34; alt=&#34;c3&#34; width=&#34;700&#34; height=&#34;361&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora continue (Continue to Generate configuration files). Gere o arquivo, fa√ßa o download depois copie e cole na raiz do seu projeto exemplo (C:\Users\Alessandro\AndroidstudioProjects\GoogleSign-In\app).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/Sem-t√≠tulooo.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52731&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/Sem-t√≠tulooo.png&#34; alt=&#34;Sem t√≠tulooo&#34; width=&#34;600&#34; height=&#34;337&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;voltando-para-nosso-projeto-no-androidstudio&#34;&gt;Voltando para nosso Projeto no AndroidStudio&lt;/h2&gt;

&lt;p&gt;Feito as devidas configura√ß√µes no &lt;strong&gt;Console do Google&lt;/strong&gt;, vamos configurar o Build Gradle o suporte &lt;strong&gt;Play Services&lt;/strong&gt; na nossa aplica√ß√£o.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Adicione a depend√™ncia no &lt;strong&gt;project-level&lt;/strong&gt; build.gradle:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;classpath &#39;com.google.gms:google-services:1.5.0-beta2&#39;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Adicione o plugin e depend√™ncia no &lt;strong&gt;app-level&lt;/strong&gt; build.gradle e o Play services Auth:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;apply plugin: &#39;com.google.gms.google-services&#39;&lt;/pre&gt;

&lt;pre&gt;compile &#39;com.google.android.gms:play-services-auth:8.3.0&#39;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/teste.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52733&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/teste.png&#34; alt=&#34;teste&#34; width=&#34;956&#34; height=&#34;538&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;arquivo-de-layout&#34;&gt;Arquivo de Layout&lt;/h2&gt;

&lt;p&gt;No arquivo de layout &lt;strong&gt;activity_main.xml¬†&lt;/strong&gt;adicione:&lt;/p&gt;

&lt;pre class=&#34;lang-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt;
&amp;lt;LinearLayout
    xmlns:android=&#34;http://schemas.android.com/apk/res/android&#34;
    xmlns:tools=&#34;http://schemas.android.com/tools&#34;
    android:layout_width=&#34;match_parent&#34;
    android:layout_height=&#34;match_parent&#34;
    tools:context=&#34;barreto.alessandro.googlesign_in.MainActivity&#34;
    android:orientation=&#34;vertical&#34;&amp;gt;

    &amp;lt;RelativeLayout
        android:padding=&#34;10dp&#34;
        android:background=&#34;#1f737373&#34;
        android:layout_width=&#34;match_parent&#34;
        android:layout_height=&#34;wrap_content&#34;&amp;gt;

        &amp;lt;ImageView
            android:src=&#34;@mipmap/ic_launcher&#34;
            android:id=&#34;@+id/ivUsuario&#34;
            android:layout_width=&#34;100dp&#34;
            android:layout_height=&#34;100dp&#34;
            android:layout_centerHorizontal=&#34;true&#34; /&amp;gt;

        &amp;lt;TextView
            android:layout_marginTop=&#34;8dp&#34;
            android:text=&#34;Android Teste&#34;
            android:layout_centerHorizontal=&#34;true&#34;
            android:textAppearance=&#34;?android:attr/textAppearanceLarge&#34;
            android:layout_below=&#34;@+id/ivUsuario&#34;
            android:id=&#34;@+id/tvNome&#34;
            android:layout_width=&#34;wrap_content&#34;
            android:layout_height=&#34;wrap_content&#34; /&amp;gt;

        &amp;lt;TextView
            android:layout_marginTop=&#34;5dp&#34;
            android:layout_centerHorizontal=&#34;true&#34;
            android:layout_below=&#34;@+id/tvNome&#34;
            android:text=&#34;androidteste@gmail.com&#34;
            android:id=&#34;@+id/tvEmail&#34;
            android:layout_width=&#34;wrap_content&#34;
            android:layout_height=&#34;wrap_content&#34;
            android:textAppearance=&#34;?android:attr/textAppearanceMedium&#34;/&amp;gt;

    &amp;lt;/RelativeLayout&amp;gt;

    &amp;lt;LinearLayout
        android:orientation=&#34;vertical&#34;
        android:layout_marginTop=&#34;16dp&#34;
        android:layout_gravity=&#34;center_horizontal&#34;
        android:padding=&#34;16dp&#34;
        android:layout_width=&#34;match_parent&#34;
        android:layout_height=&#34;wrap_content&#34;&amp;gt;

        &amp;lt;com.google.android.gms.common.SignInButton
            android:id=&#34;@+id/sign_in_button&#34;
            android:layout_width=&#34;match_parent&#34;
            android:layout_height=&#34;wrap_content&#34; /&amp;gt;

        &amp;lt;Button
            android:id=&#34;@+id/btnDesconectar&#34;
            android:layout_marginTop=&#34;10dp&#34;
            android:text=&#34;Desconectar&#34;
            android:layout_width=&#34;match_parent&#34;
            android:layout_height=&#34;wrap_content&#34; /&amp;gt;

        &amp;lt;Button
            android:id=&#34;@+id/btnRevogar&#34;
            android:layout_marginTop=&#34;10dp&#34;
            android:text=&#34;Revogar acesso&#34;
            android:layout_width=&#34;match_parent&#34;
            android:layout_height=&#34;wrap_content&#34; /&amp;gt;

    &amp;lt;/LinearLayout&amp;gt;
&amp;lt;/LinearLayout&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Sem muito coment√°rio sobre o c√≥digo acima, ele possui:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Um &lt;strong&gt;ImageView&lt;/strong&gt; para imagem do usu√°rio.&lt;/li&gt;
&lt;li&gt;Dois &lt;strong&gt;TextView&lt;/strong&gt; para nome e e-mail.&lt;/li&gt;
&lt;li&gt;Tr√™s &lt;strong&gt;Buttons&lt;/strong&gt;¬†sendo que um customizado, v√£o servir para Login, Desconectar, Revogar o Acesso do usu√°rio&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;a-class-principal&#34;&gt;A Class Principal&lt;/h2&gt;

&lt;p&gt;Agora vamos fazer o vinculo entre o XML e Java API (&lt;strong&gt;bindViews&lt;/strong&gt;). Crie um m√©todo chamado &lt;strong&gt;bindViews&lt;/strong&gt; e adicione:&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;/**
     * Metodo para fazer o vinculo entre o xml e java api
     */
    private void bindViews(){
        ivUsuario       = (ImageView)findViewById(R.id.ivUsuario);
        tvNome          = (TextView)findViewById(R.id.tvNome);
        tvEmail         = (TextView)findViewById(R.id.tvEmail);
        btnDesconectar  = (Button)findViewById(R.id.btnDesconectar);
        btnRevogar      = (Button)findViewById(R.id.btnRevogar);
        signInButton    = (SignInButton) findViewById(R.id.sign_in_button);
        // litener de clicks
        signInButton.setOnClickListener(this);
        btnDesconectar.setOnClickListener(this);
        btnRevogar.setOnClickListener(this);
    }
&lt;/pre&gt;

&lt;p&gt;Vamos solicitar da API informa√ß√µes simples de um login como nome, e-mail, foto e id, no momento √© o que necessitamos para esse exemplo.&lt;/p&gt;

&lt;p&gt;Temos que utilizar o objeto &lt;strong&gt;GoogleSignOptions¬†&lt;/strong&gt;e passar como par√¢metro &lt;strong&gt;GoogleSignOptions.DEFAULT_SIGN_IN&lt;/strong&gt;¬†nele contem a op√ß√£o &lt;strong&gt;requestEmail()&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestEmail()
                .build();
&lt;/pre&gt;

&lt;p&gt;Agora que j√° temos configurado nossa solicita√ß√£o, iremos criar um objeto GoogleApiClient com acesso ao login do Google API e as op√ß√µes especificadas. Colocando tudo em um m√©todo que chamei de obterConfiguracoesPadraoLogin() .&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;/**
     * Metodo para fazer as primeiras requisi√ß√µes da API para login simples
     */
    private void obterConfiguracoesPadraoLogin(){
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestEmail()
                .build();

        mGoogleApiClient = new GoogleApiClient.Builder(this)
                .enableAutoManage(this,this)
                .addApi(Auth.GOOGLE_SIGN_IN_API, gso)
                .build();

    }
&lt;/pre&gt;

&lt;p&gt;Agora a &lt;strong&gt;inten√ß√£o&lt;/strong&gt;¬†de login usando uma &lt;strong&gt;Intent do Android&lt;/strong&gt;¬†com o m√©todo getSignInIntent e passando¬†para o¬†&lt;strong&gt;startActivityForResult&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;/**
     * metodo para inicar o login
     */
    private void signIn() {
        Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);
        startActivityForResult(signInIntent, SIGN_IN);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.sign_in_button:
                signIn();
                break;
            // ...
        }
    }
&lt;/pre&gt;

&lt;p&gt;Apos isso o m√©todo¬†&lt;strong&gt;onActivityResult¬†&lt;/strong&gt;ser√° chamado com nossos resultados e para recuperar utilizamos o¬†&lt;strong&gt;getSignInResultFromIntent&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;@Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == SIGN_IN) {
            GoogleSignInResult resultado = Auth.GoogleSignInApi.getSignInResultFromIntent(data);
            if (resultado.isSuccess()){
                GoogleSignInAccount acct = resultado.getSignInAccount();
                obterInfoGoogle(acct);
            }
        }
    }
&lt;/pre&gt;

&lt;p&gt;Depois de recuperar o resultado, voc√™ pode verificar se a solicita√ß√£o ¬†deu certo¬†com o m√©todo &lt;strong&gt;isSuccess&lt;/strong&gt; . Se bem-sucedido, voc√™ pode chamar o m√©todo &lt;strong&gt;getSignInAccount&lt;/strong&gt; para obter um objeto &lt;strong&gt;GoogleSignInAccount&lt;/strong&gt; que cont√©m informa√ß√µes sobre o usu√°rio.&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;private void obterInfoGoogle(GoogleSignInAccount acct){
        String nome = acct.getDisplayName();
        tvNome.setText(nome);
        String email = acct.getEmail();
        tvEmail.setText(email);
        String id = acct.getId();
        Log.i(TAG,&#34;ID do usu√°rio no GooglePlus &#34;+id);
        String urlFoto = acct.getPhotoUrl().toString();
        Picasso.with(MainActivity.this).load(urlFoto).resize(100,100).into(ivUsuario);
    }
&lt;/pre&gt;

&lt;p&gt;Utilizei a lib¬†&lt;a href=&#34;http://square.github.io/picasso/&#34; target=&#34;_blank&#34;&gt;Picasso&lt;/a&gt;¬†para o carregamento¬†eficiente de imagem, adicione no seu &lt;strong&gt;Gradle app-level&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;compile &#39;com.squareup.picasso:picasso:2.5.2&#39;
&lt;/pre&gt;

&lt;p&gt;No &lt;strong&gt;AndroidManifest.xml&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&amp;lt;uses-permission android:name=&#34;android.permission.INTERNET&#34;/&amp;gt;
&lt;/pre&gt;

&lt;p&gt;.Agora segue toda a Class &lt;strong&gt;MainActivity&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;package barreto.alessandro.googlesign_in;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import com.google.android.gms.auth.api.Auth;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.auth.api.signin.GoogleSignInResult;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.SignInButton;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.common.api.Status;
import com.squareup.picasso.Picasso;

public class MainActivity extends AppCompatActivity implements GoogleApiClient.OnConnectionFailedListener, View.OnClickListener {

    private static final String TAG = &#34;TAG&#34;;
    private static final int SIGN_IN = 10;

    private ImageView ivUsuario;
    private TextView tvNome,tvEmail;
    private Button btnDesconectar,btnRevogar;
    private SignInButton signInButton;

    private GoogleApiClient mGoogleApiClient;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        bindViews();
        obterConfiguracoesPadraoLogin();

    }

    /**
     * Metodo para fazer o vinculo entre o xml e java api
     */
    private void bindViews(){
        ivUsuario       = (ImageView)findViewById(R.id.ivUsuario);
        tvNome          = (TextView)findViewById(R.id.tvNome);
        tvEmail         = (TextView)findViewById(R.id.tvEmail);
        btnDesconectar  = (Button)findViewById(R.id.btnDesconectar);
        btnRevogar      = (Button)findViewById(R.id.btnRevogar);
        signInButton    = (SignInButton) findViewById(R.id.sign_in_button);
        // litener de clicks
        signInButton.setOnClickListener(this);
        btnDesconectar.setOnClickListener(this);
        btnRevogar.setOnClickListener(this);
    }

    /**
     * Metodo para fazer as primeiras requisi√ß√µes da API para login simples
     */
    private void obterConfiguracoesPadraoLogin(){
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestEmail()
                .build();

        mGoogleApiClient = new GoogleApiClient.Builder(this)
                .enableAutoManage(this,this)
                .addApi(Auth.GOOGLE_SIGN_IN_API, gso)
                .build();

    }

    /**
     * metodo para inicar o login
     */
    private void signIn() {
        Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);
        startActivityForResult(signInIntent, SIGN_IN);
    }
    

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == SIGN_IN) {
            GoogleSignInResult resultado = Auth.GoogleSignInApi.getSignInResultFromIntent(data);
            if (resultado.isSuccess()){
                GoogleSignInAccount acct = resultado.getSignInAccount();
                obterInfoGoogle(acct);
            }
        }
    }

    private void obterInfoGoogle(GoogleSignInAccount acct){
        String nome = acct.getDisplayName();
        tvNome.setText(nome);
        String email = acct.getEmail();
        tvEmail.setText(email);
        String id = acct.getId();
        Log.i(TAG,&#34;ID do usu√°rio no GooglePlus &#34;+id);
        String urlFoto = acct.getPhotoUrl().toString();
        Picasso.with(MainActivity.this).load(urlFoto).resize(100,100).into(ivUsuario);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.sign_in_button:
                signIn();
                break;
            case R.id.btnDesconectar:
                break;
            case R.id.btnRevogar:
                break;
        }
    }

    @Override
    public void onConnectionFailed(ConnectionResult connectionResult) {
        Log.e(TAG,&#34;onConnectionFailed &#34;+connectionResult.getErrorMessage());
    }

}
&lt;/pre&gt;

&lt;p&gt;Falta ainda fazer o &lt;strong&gt;desconectar&lt;/strong&gt; e &lt;strong&gt;revogar&lt;/strong&gt; acesso, estou deixando para pr√≥xima parte, at√© l√°.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Material Design na barra de navega√ß√£o &amp; status do Chrome</title>
      <link>https://tableless.github.io/hugo-public/material-design-na-barra-de-navegacao-status-chrome/</link>
      <pubDate>Mon, 27 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/material-design-na-barra-de-navegacao-status-chrome/</guid>
      <description>&lt;p&gt;Recentemente muitos aplicativos j√° est√£o seguindo essa nova tend√™ncia de aplicar o material design do google no seus aplicativos mas meu foco hoje n√£o s√£o os aplicativos mas sim em sites responsivos, o que isso de aplicar material de design na barra de navega√ß√£o?&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/img.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-48412&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/img.png&#34; alt=&#34;img&#34; width=&#34;401&#34; height=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pois bem vamos aplicar essa barra de status alterada e a barra de navega√ß√£o tamb√©m (Obs: S√≥ vai pegar em Android 5.0 ou superior com Chome instalado)&lt;/p&gt;

&lt;p&gt;Eu estava navegando em uma mat√©ria do Tecmundo e quando o site terminou de carregar me deparei com a barra do Chrome customizada nas cores do site. Essa t√©cnica est√° sendo cada vez mais usados por sites a√≠ fora, n√£o vi ainda websites brasileiros usando a barra customizada, at√© agora, s√≥ percebi no Tecmundo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/Screenshot_2015-04-23-19-34-26.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-48413&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/Screenshot_2015-04-23-19-34-26.png&#34; alt=&#34;Screenshot_2015-04-23-19-34-26&#34; width=&#34;720&#34; height=&#34;1280&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comecei ent√£o a procurar como isso pode ser feito e me assustei com a facilidade: basta inserir uma metatag e pronto: a barra superior do Chrome do Android 5.0 fica customizada.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;meta name=&#34;theme-color&#34; content=&#34;#ea2f4a&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Esse √© o resultado:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/Screenshot_2015-04-23-21-41-17.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-48414&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/Screenshot_2015-04-23-21-41-17.png&#34; alt=&#34;Screenshot_2015-04-23-21-41-17&#34; width=&#34;720&#34; height=&#34;1280&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A pasta ‚Äúres‚Äù e os resources em um projeto Android</title>
      <link>https://tableless.github.io/hugo-public/a-pasta-res-e-os-resources-em-um-projeto-android/</link>
      <pubDate>Wed, 15 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/a-pasta-res-e-os-resources-em-um-projeto-android/</guid>
      <description>

&lt;p&gt;√â preciso mais do que s√≥ c√≥digo para criarmos um aplicativo realmente bom para Android. E por mais que amemos c√≥digo, temos que entender como usar todos os recursos que o Android nos d√°, por isso, vamos l√°!&lt;/p&gt;

&lt;p&gt;O primeiro passo √©¬†entender que¬†&lt;em&gt;resources&lt;/em&gt; o Android nos permite usar na cria√ß√£o de um App.&lt;/p&gt;

&lt;h1 id=&#34;tipos-de-resources&#34;&gt;Tipos de Resources&lt;/h1&gt;

&lt;p&gt;Como vamos ver daqui a pouco, todos os resources de um projeto ficam na pasta &lt;strong&gt;res/¬†&lt;/strong&gt;dele. E podem ser basicamente:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/animation-resource.html&#34; target=&#34;_blank&#34;&gt;Anima√ß√µes&lt;br /&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Podem ser dois tipos &amp;#8220;interpoladas&amp;#8221; (tween animation) e de &amp;#8220;frames&amp;#8221; (frames animation). A primeira consiste em criar uma anima√ß√£o modificando uma √∫nica imagem e a segunda segue a l√≥gica do &lt;em&gt;.gif&lt;/em&gt;¬†ao criar uma anima√ß√£o com uma sequ√™ncia de imagens.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/color-list-resource.html&#34; target=&#34;_blank&#34;&gt;Cores&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Voc√™ define cores de acordo com o estado da View.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/drawable-resource.html&#34; target=&#34;_blank&#34;&gt;Drawable&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Recursos¬†gr√°ficos que podem ser bitmaps ou XML.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/layout-resource.html&#34; target=&#34;_blank&#34;&gt;Layout&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Voc√™ pode definir v√°rios layouts para sua UI e altern√°-los de acordo com o estado da aplica√ß√£o.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/menu-resource.html&#34; target=&#34;_blank&#34;&gt;Menu&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Assim como os layouts para sua UI, voc√™ pode definir &amp;#8220;layouts de menu&amp;#8221; para us√°-los na sua aplica√ß√£o¬†(m√©todo¬†&lt;a href=&#34;http://developer.android.com/reference/android/app/Fragment.html#onCreateOptionsMenu(android.view.Menu,%20android.view.MenuInflater)&#34; target=&#34;_blank&#34;&gt;onCreateOptionsMenu()&lt;/a&gt; da sua Activity).
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/string-resource.html&#34; target=&#34;_blank&#34;&gt;Strings&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Um recurso super interessante. Pois te permite definir strings e utiliz√°-las por todo o seu projeto concentrando-as em apenas um lugar, caso queira modific√°-las depois. Permite tamb√©m a internacionaliza√ß√£o do seu App, sendo utiliza-da na tradu√ß√£o da sua aplica√ß√£o.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/style-resource.html&#34; target=&#34;_blank&#34;&gt;Estilo&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Define apar√™ncia e formato dos elementos da sua UI. (Uso bem parecido com o do CSS: concentrar estiliza√ß√£o em um √∫nico arquivo.)
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/guide/topics/resources/more-resources.html&#34; target=&#34;_blank&#34;&gt;Outros tipos de Recurso&lt;/a&gt;&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  Assim como as &lt;em&gt;strings&lt;/em&gt;, podemos definir valores &lt;em&gt;booleanos&lt;/em&gt;, &lt;em&gt;inteiros&lt;/em&gt;, &lt;em&gt;dimens√µes&lt;/em&gt;, &lt;em&gt;cores&lt;/em&gt;¬†e outras¬†&lt;em&gt;arrays &lt;/em&gt;para usarmos por toda a aplica√ß√£o.
&lt;/p&gt;

&lt;h1 id=&#34;a-pasta-8220-res-8221&#34;&gt;A pasta &amp;#8220;res&amp;#8221;&lt;/h1&gt;

&lt;p&gt;Voc√™ deve sempre usar os arquivos e pastas de resource para armazenar valores da sua aplica√ß√£o, al√©m das imagens, √© claro. Dessa forma voc√™ consegue manter e atualizar seu c√≥digo¬†muito mais facilmente, al√©m de poder definir alternativas para cada um deles, de acordo com situa√ß√µes espec√≠ficas, como diferentes idiomas, tamanhos e orienta√ß√µes de tela. Isso √© √≥timo, visto a gama imensa de dispositivos¬†que utilizam o sistema do rob√¥ verde.&lt;/p&gt;

&lt;p&gt;A pasta &lt;strong&gt;res/¬†&lt;/strong&gt;√© a pasta do seu projeto que guarda todos os resources da sua aplica√ß√£o:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/Tree-do-Android-Studio.png&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-48069&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/Tree-do-Android-Studio.png&#34; alt=&#34;Tree do Android Studio&#34; width=&#34;408&#34; height=&#34;648&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cada tipo de¬†recurso que vimos antes deve ficar dentro de uma dessas pastas. Abaixo temos uma tabela retirada da &lt;a href=&#34;http://developer.android.com/guide/topics/resources/providing-resources.html&#34; target=&#34;_blank&#34;&gt;documenta√ß√£o&lt;/a&gt; do Android, com¬†os nomes das pastas¬†e os respectivos tipos de resource:&lt;/p&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th scope=&#34;col&#34;&gt;
      Diret√≥rio
    &lt;/th&gt;
    
    &lt;th scope=&#34;col&#34;&gt;
      Tipo de Resource
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;code&gt;animator/&lt;/code&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      arquivos XML que definem¬†&lt;a href=&#34;http://developer.android.com/guide/topics/graphics/prop-animation.html&#34;&gt;anima√ß√µes de propriedades&lt;/a&gt;.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;code&gt;anim/&lt;/code&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      arquivos XML que definem¬†&lt;a href=&#34;http://developer.android.com/guide/topics/graphics/view-animation.html#tween-animation&#34;&gt;tween¬†animations&lt;/a&gt;. (Anima√ß√µes de propriedades podem ser salvas aqui tamb√©m, mas o diret√≥rio&lt;em&gt; animator/&lt;/em&gt; √© prefer√≠vel, por quest√£o de organiza√ß√£o)
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;code&gt;color/&lt;/code&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      arquivos XML que definem um estado de lista de cores. Veja¬†&lt;a href=&#34;http://developer.android.com/guide/topics/resources/color-list-resource.html&#34;&gt;Color¬†State List Resource&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;code&gt;drawable/&lt;/code&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      arquivos Bitmap (.png, .jpg, .gif) ou arquivos¬†XML que s√£o compilados nos seguintes resources:&lt;/p&gt; 
      
      &lt;ul&gt;
        &lt;li&gt;
          arquivos Bitmap
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&#34;http://developer.android.com/tools/help/draw9patch.html&#34; target=&#34;_blank&#34;&gt;9-Patch&lt;/a&gt; (bitmaps redimension√°veis)
        &lt;/li&gt;
        &lt;li&gt;
          listas de estado
        &lt;/li&gt;
        &lt;li&gt;
          Shapes (formas)
        &lt;/li&gt;
        &lt;li&gt;
          Anima√ß√µes (frame animations)
        &lt;/li&gt;
        &lt;li&gt;
          Outros tipos
        &lt;/li&gt;
      &lt;/ul&gt;
      
      &lt;p&gt;
        Veja &lt;a href=&#34;http://developer.android.com/guide/topics/resources/drawable-resource.html&#34;&gt;Drawable Resources&lt;/a&gt; para mais informa√ß√µes.&lt;/td&gt; &lt;/tr&gt; 
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;mipmap/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            Arquivos &amp;#8220;drawable&amp;#8221; especificamente para √≠cones de aplica√ß√µes de diferentes tipos de densidade.
          &lt;/td&gt;
        &lt;/tr&gt;
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;layout/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            arquivos XML que definem sua UI (user interface).
          &lt;/td&gt;
        &lt;/tr&gt;
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;menu/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            arquivos XML que definem os menus da sua aplica√ß√£o, como Menu de Op√ß√µes, de Contexto e Sub-menus. Mais informa√ß√µes em:¬†&lt;a href=&#34;http://developer.android.com/guide/topics/resources/menu-resource.html&#34;&gt;Menu Resource&lt;/a&gt;.
          &lt;/td&gt;
        &lt;/tr&gt;
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;raw/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            Pasta para salvar arquivos na sua forma natural (raw).
          &lt;/td&gt;
        &lt;/tr&gt;
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;values/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            Arquivos XML que cont√™m valores, como¬†strings, inteiros, e cores. Dentro dessa pasta voc√™ deve nomear cada arquivo XML com o nome do seu resource e dessa forma ir√° acessar com uma subclasse de &lt;code&gt;R&lt;/code&gt;. Por exemplo, o arquivo &lt;code&gt;string.xml&lt;/code&gt; ser√° acessado por &lt;code&gt;R.string&lt;/code&gt;. Abaixo algumas conven√ß√µes:&lt;/p&gt; 
            
            &lt;ul&gt;
              &lt;li&gt;
                &lt;code&gt;arrays.xml&lt;/code&gt; para Arrays.
              &lt;/li&gt;
              &lt;li&gt;
                &lt;code&gt;colors.xml&lt;/code&gt; para valores de cores.
              &lt;/li&gt;
              &lt;li&gt;
                &lt;code&gt;dimens.xml&lt;/code&gt; para dimens√µes.
              &lt;/li&gt;
              &lt;li&gt;
                &lt;code&gt;strings.xml&lt;/code&gt; para todas as strings.
              &lt;/li&gt;
              &lt;li&gt;
                &lt;code&gt;styles.xml&lt;/code&gt; para estilos.
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
        
        &lt;tr&gt;
          &lt;td&gt;
            &lt;code&gt;xml/&lt;/code&gt;
          &lt;/td&gt;
          
          &lt;td&gt;
            Arquivos¬†XML que podem ser lidos em tempo de execu√ß√£o chamando¬†&lt;code&gt;&amp;lt;a href=&#34;http://developer.android.com/reference/android/content/res/Resources.html#getXml(int)&#34;&gt;Resources.getXML()&amp;lt;/a&gt;&lt;/code&gt;. V√°rios arquivos XML de configura√ß√£o podem ser salvos aqui, por exemplo.&lt;br /&gt; &lt;!-- or preferences configuration. --&gt;
          &lt;/td&gt;
        &lt;/tr&gt;&lt;/tbody&gt; &lt;/table&gt; 
        

&lt;pre&gt;&lt;code&gt;    &amp;lt;h1&amp;gt;
      ¬†Mas e essas outras pastas?
    &amp;lt;/h1&amp;gt;

    &amp;lt;p&amp;gt;
      Voc√™ deve ter notado que na imagem, temos outras pastas bem parecidas com as que guardam os resources por padr√£o. S√£o elas:¬†&amp;lt;em&amp;gt;drawable-hdpi&amp;lt;/em&amp;gt;,¬†&amp;lt;em&amp;gt;drawable-mdpi&amp;lt;/em&amp;gt;,¬†&amp;lt;em&amp;gt;drawable-xhdpi&amp;lt;/em&amp;gt; e¬†&amp;lt;em&amp;gt;drawable-xxhdpi&amp;lt;/em&amp;gt; (que s√£o varia√ß√µes da pasta &amp;lt;strong&amp;gt;drawable&amp;lt;/strong&amp;gt;),¬†&amp;lt;em&amp;gt;layout-land&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;layout-sw600dp&amp;lt;/em&amp;gt;¬†e &amp;lt;em&amp;gt;layout-sw600dp-land&amp;lt;/em&amp;gt; (que s√£o varia√ß√µes da pasta &amp;lt;strong&amp;gt;layout&amp;lt;/strong&amp;gt;) e as varia√ß√µes da pasta &amp;lt;strong&amp;gt;values&amp;lt;/strong&amp;gt;, que s√£o &amp;lt;em&amp;gt;values-en&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;values-es&amp;lt;/em&amp;gt; e &amp;lt;em&amp;gt;values-sw600dp&amp;lt;/em&amp;gt;.
    &amp;lt;/p&amp;gt;

    &amp;lt;div id=&amp;quot;attachment_48078&amp;quot; style=&amp;quot;width: 429px&amp;quot; class=&amp;quot;wp-caption aligncenter&amp;quot;&amp;gt;
      &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/resource_devices_diagram2.png&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;wp-image-48078 size-full&amp;quot; src=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/resource_devices_diagram2.png&amp;quot; alt=&amp;quot;resource_devices_diagram2&amp;quot; width=&amp;quot;419&amp;quot; height=&amp;quot;157&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;

      &amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
        Dois dispositivos diferentes, cada um utilizando um resource de layout diferente.
      &amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;amp;nbsp;
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Como vimos antes, um dos¬†maiores benef√≠cios de usarmos a estrutura de resources do Android √© a facilidade de manuten√ß√£o¬†e a capacidade de alterar os resources de acordo com caracter√≠sticas e configura√ß√µes dos dispositivos. √â por isso que temos¬†essas varia√ß√µes de nomes de pastas. Por exemplo: a pasta &amp;lt;strong&amp;gt;values&amp;lt;/strong&amp;gt; guarda o arquivo¬†&amp;lt;em&amp;gt;strings.xml&amp;lt;/em&amp;gt;, respons√°vel pelas strings da aplica√ß√£o, como nome e vers√£o do App, t√≠tulo para cada Activity, URLs e qualquer mensagem ou texto que voc√™ usar, mas temos tamb√©m a pasta &amp;lt;strong&amp;gt;values-es&amp;lt;/strong&amp;gt;, que tamb√©m guarda um arquivo &amp;lt;em&amp;gt;strings.xml&amp;lt;/em&amp;gt; (com ¬†as mesmas strings do arquivo anterior), mas que¬†receber√° uma prioridade maior, se o idioma do dispositivo for o ingl√™s. Ou seja, o processo de tradu√ß√£o da aplica√ß√£o se faz apenas colocando valores traduzidos dentro dessa varia√ß√£o da pasta value.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Resumindo: voc√™ pode mudar o nome da pasta para utilizar determinados resources em determinadas condi√ß√µes.
    &amp;lt;/p&amp;gt;

    &amp;lt;h1&amp;gt;
      Como escolher o nome da pasta dos resources?
    &amp;lt;/h1&amp;gt;

    &amp;lt;p&amp;gt;
      Se voc√™ est√° usando o Android Studio, o que eu recomendo fortemente (e ensino a instalar &amp;lt;a href=&amp;quot;http://mariovalney.com/aula-2-como-instalar-o-android-studio/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;aqui&amp;lt;/a&amp;gt;), a forma mais f√°cil de criar uma pasta de resource √© clicar com o bot√£o direito do mouse na pasta &amp;lt;strong&amp;gt;res/&amp;lt;/strong&amp;gt;, na¬†guia &amp;lt;em&amp;gt;1. Project¬†&amp;lt;/em&amp;gt;(imagem anterior) e ir em &amp;lt;strong&amp;gt;New &amp;gt; Android resource directory&amp;lt;/strong&amp;gt;.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Quando voc√™ clicar, ir√° abrir a janela abaixo:
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;amp;nbsp;
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/New-Resource-Directory.png&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;aligncenter size-full wp-image-48074&amp;quot; src=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/New-Resource-Directory.png&amp;quot; alt=&amp;quot;New Resource Directory&amp;quot; width=&amp;quot;843&amp;quot; height=&amp;quot;481&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      No primeiro¬†campo, voc√™ pode alterar¬†o¬†nome do diret√≥rio (voc√™ n√£o precisa digitar nada, pois a IDE ir√° completar o nome de acordo com as op√ß√µes que voc√™ selecionar). Logo abaixo, voc√™ pode escolher o&amp;lt;strong&amp;gt; tipo de resource&amp;lt;/strong&amp;gt;.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Ap√≥s escolher o tipo de resource, voc√™ deve selecionar um dos &amp;amp;#8220;qualificadores&amp;amp;#8221; √† esquerda e clicar nas duas setas para a direita, que est√£o¬†entre os dois quadros. Ir√° aparecer as op√ß√µes de cada qualificador. Por exemplo, ao escolher &amp;lt;strong&amp;gt;UI Mode&amp;lt;/strong&amp;gt;, teremos a possibilidade de escolher entre &amp;lt;em&amp;gt;Portrait&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;Landscape&amp;lt;/em&amp;gt; e &amp;lt;em&amp;gt;Square&amp;lt;/em&amp;gt;:&amp;lt;em&amp;gt;&amp;lt;br /&amp;gt; &amp;lt;/em&amp;gt;
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/New-Resource-Directory-Final.png&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;aligncenter size-full wp-image-48077&amp;quot; src=&amp;quot;http://tableless.com.br/wp-content/uploads/2015/04/New-Resource-Directory-Final.png&amp;quot; alt=&amp;quot;New Resource Directory Final&amp;quot; width=&amp;quot;810&amp;quot; height=&amp;quot;375&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Podemos escolher mais de um qualificador (como na imagem acima) e ao clicar nos itens da coluna da direita (Chosen qualifiers) podemos alterar as op√ß√µes de cada um. No final, basta clicar em OK.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Voc√™ pode encontrar uma lista completa dos qualificadores, caso queira escolher o nome da pasta manualmente ou n√£o esteja usando o Android Studio, na &amp;lt;a href=&amp;quot;http://developer.android.com/guide/topics/resources/providing-resources.html#table2&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;documenta√ß√£o do Android&amp;lt;/a&amp;gt;. Lembrando que a ordem dos qualificadores deve ser a mesma da tabela, ou seja, nomear uma pasta como¬†&amp;lt;strong&amp;gt;drawable-hdpi-port¬†&amp;lt;/strong&amp;gt;est√° errado e¬†&amp;lt;strong&amp;gt;drawable-port-hdpi &amp;lt;/strong&amp;gt;est√° certo, pois o qualificador de orienta√ß√£o da tela (-port) vem antes do qualificador de densidade de p√≠xel (-hdpi).
    &amp;lt;/p&amp;gt;

    &amp;lt;h1&amp;gt;
      Como acessar esses resources?
    &amp;lt;/h1&amp;gt;

    &amp;lt;p&amp;gt;
      OK. J√° sabemos como organizar nossos arquivos e pastas e como podemos criar um App com a melhor compatibilidade poss√≠vel. Agora √© hora de descobrir como acessar esses arquivos.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Na verdade √© bem simples: utilizaremos o ID de cada resource. E¬†todos os¬†IDs dos resources s√£o definidos na sua classe &amp;lt;strong&amp;gt;R&amp;lt;/strong&amp;gt;,¬†que a &amp;lt;em&amp;gt;aapt tool&amp;lt;/em&amp;gt; automaticamente gera.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Quando sua aplica√ß√£o √© compilada a &amp;lt;em&amp;gt;aapt tool¬†&amp;lt;/em&amp;gt;gera a¬†classe &amp;lt;strong&amp;gt;R¬†&amp;lt;/strong&amp;gt;para os resources dentro da pasta &amp;lt;strong&amp;gt;res¬†&amp;lt;/strong&amp;gt;e sub-classes para¬†os tipos de resource. Al√©m disso, para cada resource desse tipo √© gerado um inteiro est√°tico. Mas apesar da lasse &amp;lt;strong&amp;gt;R&amp;lt;/strong&amp;gt;¬†conter todos os IDs, voc√™ n√£o deve precisar olhar nela para acessar um resource, basta saber que um ID √© composto pelo tipo e pelo nome do resource (sem extens√£o).¬†Sendo assim, voc√™ j√° sabe que o ID do seu arquivo&amp;lt;em&amp;gt; activity_about.xml¬†&amp;lt;/em&amp;gt;dentro da pasta layout √©:¬†&amp;lt;code&amp;gt;layout.activity_about&amp;lt;/code&amp;gt;.
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      Por fim, existem duas formas de acessar um resource utilizando esse ID:
    &amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;lt;strong&amp;gt;No c√≥digo: &amp;lt;/strong&amp;gt;usando o inteiro est√°tico provido pela¬†classe &amp;lt;strong&amp;gt;R&amp;lt;/strong&amp;gt;,¬†assim:¬†&amp;lt;code&amp;gt;R.layout.activity_about&amp;lt;/code&amp;gt;. Por exemplo:
    &amp;lt;/p&amp;gt;

    &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_about);
    }
&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;p&amp;gt;
      &amp;lt;strong&amp;gt;Em um arquivo XML: &amp;lt;/strong&amp;gt;usando uma sintaxe especial (@tipo/nome) usando o ID provido pela classe &amp;lt;strong&amp;gt;R&amp;lt;/strong&amp;gt;,¬†assim:¬†&amp;lt;code&amp;gt;@string/list_item_textview_title_default&amp;lt;/code&amp;gt;. Por exemplo:
    &amp;lt;/p&amp;gt;

    &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;
&amp;amp;lt;TextView
    android:id=&amp;quot;@+id/list_item_textview_title&amp;quot;
    android:layout_width=&amp;quot;wrap_content&amp;quot;
    android:layout_height=&amp;quot;wrap_content&amp;quot;
    android:text=&amp;quot;@string/app_credits&amp;quot;
    style=&amp;quot;@style/h1&amp;quot;/&amp;amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;h1&amp;gt;
      Conclus√£o
    &amp;lt;/h1&amp;gt;

    &amp;lt;p&amp;gt;
      A organiza√ß√£o das pastas de resources do Android √© bem simples e intuitiva e nos permite tornar nossa aplica√ß√£o compat√≠vel com todos os tipos de dispositivos do mercado. Sendo assim, n√£o temos desculpas para desenvolver aplica√ß√µes cada vez melhores! Abra√ßos e at√© a pr√≥xima!
    &amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Introdu√ß√£o ao Ionic Framework</title>
      <link>https://tableless.github.io/hugo-public/introducao-ao-ionic-framework/</link>
      <pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/introducao-ao-ionic-framework/</guid>
      <description>

&lt;h2 id=&#34;o-que-√©-o-ionic&#34;&gt;O que √© o Ionic?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://ionicframework.com/&#34;&gt;Ionic&lt;/a&gt; √© um¬†framework criado no final de 2013 que visa a cria√ß√£o de aplica√ß√µes h√≠bridas para dispositivos m√≥veis. Hoje o Ionic encontra-se na vers√£o 1.0.0-beta.14 que segundo a equipe por tr√°s do desenvolvimento, ser√° o √∫ltimo release beta.&lt;/p&gt;

&lt;p&gt;Ele nada mais √© do que uma pilha de componentes e outros frameworks. Estes componentes s√£o:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cordova.apache.org/&#34;&gt;Cordova&lt;/a&gt;: Integra√ß√£o com recursos nativos dos dispositivos&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://angularjs.org/&#34;&gt;AngularJS&lt;/a&gt;: Cria√ß√£o da parte Web da App&lt;/li&gt;
&lt;li&gt;Ionic Module e o Ionic CLI: Ferramentas e Componentes disponibilizados pelo framework&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;pr√©-requisitos&#34;&gt;Pr√©-requisitos&lt;/h2&gt;

&lt;p&gt;Para utilizar o Ionic e desenvolvedor aplica√ß√µes m√≥veis com o Cordova √© necess√°rio ter instalado as seguintes depend√™ncias:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;NodeJS&lt;/li&gt;
&lt;li&gt;NPM&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vou pular a parte em que diz como instalar o NodeJS e o NPM pois s√£o coisas simples de se encontrar na internet.&lt;/p&gt;

&lt;h2 id=&#34;objetivo-do-artigo&#34;&gt;Objetivo do artigo&lt;/h2&gt;

&lt;p&gt;O objetivo deste artigo √© dar uma breve introdu√ß√£o do que √© o Ionic e o que ele usa como tecnologias.&lt;/p&gt;

&lt;h2 id=&#34;como-come√ßar&#34;&gt;Como come√ßar&lt;/h2&gt;

&lt;p&gt;Uma vez com NodeJS e o NPM instalados, √© necess√°rio instalar 2 m√≥dulos globais.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;npm install -g ionic cordova&lt;/pre&gt;

&lt;p&gt;Uma vez com esses dois m√≥dulos instalados, usaremos o gerador do Ionic CLI para criar um novo projeto.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;ionic start appName tabs&lt;/pre&gt;

&lt;p&gt;A sintaxe para a cria√ß√£o de uma nova aplica√ß√£o √© &lt;em&gt;ionic start NOME_DO_APP TIPO_DO_GENERATOR&lt;/em&gt;. Existem hoje 3 tipos de projeto base que s√£o &lt;em&gt;tabs&lt;/em&gt;, &lt;em&gt;blank&lt;/em&gt; e &lt;em&gt;sidemenu&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Cada gerador ir√° iniciar seu projeto de uma forma diferente por√©m todos seguem a mesma estrutura de pastas exibida abaixo.&lt;/p&gt;

&lt;p&gt;[## O que √© o Ionic?&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ionicframework.com/&#34;&gt;Ionic&lt;/a&gt; √© um¬†framework criado no final de 2013 que visa a cria√ß√£o de aplica√ß√µes h√≠bridas para dispositivos m√≥veis. Hoje o Ionic encontra-se na vers√£o 1.0.0-beta.14 que segundo a equipe por tr√°s do desenvolvimento, ser√° o √∫ltimo release beta.&lt;/p&gt;

&lt;p&gt;Ele nada mais √© do que uma pilha de componentes e outros frameworks. Estes componentes s√£o:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cordova.apache.org/&#34;&gt;Cordova&lt;/a&gt;: Integra√ß√£o com recursos nativos dos dispositivos&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://angularjs.org/&#34;&gt;AngularJS&lt;/a&gt;: Cria√ß√£o da parte Web da App&lt;/li&gt;
&lt;li&gt;Ionic Module e o Ionic CLI: Ferramentas e Componentes disponibilizados pelo framework&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;pr√©-requisitos-1&#34;&gt;Pr√©-requisitos&lt;/h2&gt;

&lt;p&gt;Para utilizar o Ionic e desenvolvedor aplica√ß√µes m√≥veis com o Cordova √© necess√°rio ter instalado as seguintes depend√™ncias:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;NodeJS&lt;/li&gt;
&lt;li&gt;NPM&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vou pular a parte em que diz como instalar o NodeJS e o NPM pois s√£o coisas simples de se encontrar na internet.&lt;/p&gt;

&lt;h2 id=&#34;objetivo-do-artigo-1&#34;&gt;Objetivo do artigo&lt;/h2&gt;

&lt;p&gt;O objetivo deste artigo √© dar uma breve introdu√ß√£o do que √© o Ionic e o que ele usa como tecnologias.&lt;/p&gt;

&lt;h2 id=&#34;como-come√ßar-1&#34;&gt;Como come√ßar&lt;/h2&gt;

&lt;p&gt;Uma vez com NodeJS e o NPM instalados, √© necess√°rio instalar 2 m√≥dulos globais.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;npm install -g ionic cordova&lt;/pre&gt;

&lt;p&gt;Uma vez com esses dois m√≥dulos instalados, usaremos o gerador do Ionic CLI para criar um novo projeto.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;ionic start appName tabs&lt;/pre&gt;

&lt;p&gt;A sintaxe para a cria√ß√£o de uma nova aplica√ß√£o √© &lt;em&gt;ionic start NOME_DO_APP TIPO_DO_GENERATOR&lt;/em&gt;. Existem hoje 3 tipos de projeto base que s√£o &lt;em&gt;tabs&lt;/em&gt;, &lt;em&gt;blank&lt;/em&gt; e &lt;em&gt;sidemenu&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Cada gerador ir√° iniciar seu projeto de uma forma diferente por√©m todos seguem a mesma estrutura de pastas exibida abaixo.&lt;/p&gt;

&lt;p&gt;]&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/02/Screen-Shot-2015-02-18-at-5.33.43-PM.png&#34;&gt;4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uma vez com o projeto criado, podemos roda-lo com o comando &lt;em&gt;ionic serve&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Como podemos ver pela imagem, o ionic utiliza o Gulp como ferramenta de automatiza√ß√£o de tarefas mas n√£o se preocupe que ele tem objetivos muito simples como compilar o SCSS, CoffeeScript e rodar um servidor para visualiza√ß√£o do projeto. &lt;strong&gt;O uso do SCSS e do CoffeeScript √© opcional.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O desenvolvimento da aplica√ß√£o a partir da√≠ √© bastante &lt;em&gt;straightforward&lt;/em&gt;. Em nada difere de desenvolver um sistema Web tradicional.&lt;/p&gt;

&lt;h2 id=&#34;e-se-eu-quiser-utilizar-recursos-nativos-do-dispositivo&#34;&gt;E se eu quiser utilizar recursos nativos do dispositivo?&lt;/h2&gt;

&lt;p&gt;Caso seja necess√°rio utilizar recursos nativos do celular como C√¢mera, Push Notification, Leitor de C√≥digo de Barra entre outros, voc√™ pode utilizar todos os recursos do Cordova que est√£o dispon√≠veis e al√©m disso utilizar um outro m√≥dulo do AngularJS que a equipe do Ionic criou para facilitar o uso de plugins que √© o &lt;a href=&#34;http://ngcordova.com/&#34;&gt;ngCordova&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;A grande vantagem do Ionic √© que seu desenvolvimento foi pensado em utilizar os recursos mais novos do CSS, HTML e JavaScript com o objetivo de prover para o desenvolvedor uma gama de componentes pr√©-prontos de alta qualidade e desempenho.&lt;/p&gt;

&lt;p&gt;A equipe por tr√°s da ferramenta est√° trabalhando a todo vapor lan√ßando corre√ß√µes e melhorias continuamente e ouvindo bastante os desenvolvedor que a est√£o utilizando.&lt;/p&gt;

&lt;p&gt;√â tamb√©m um √≥timo projeto para contribuir pois o desenvolvimento √© bastante simples e a comunidade √© bastante receptiva.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debug Remoto com Chrome no Android</title>
      <link>https://tableless.github.io/hugo-public/debug-remoto-com-chrome-android/</link>
      <pubDate>Sat, 22 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/debug-remoto-com-chrome-android/</guid>
      <description>

&lt;p&gt;Vasculhando a web me deparei com uma coisa muito interessante: a Google criou uma forma de n√≥s, desenvolvedores, usarmos nossas m√°quinas e o Google Chrome DevTools para inspecionar, debugar e analizar p√°ginas em nossos dispositivos m√≥veis.&lt;/p&gt;

&lt;p&gt;Como isso funciona? O &amp;#8220;&lt;em&gt;RemoteDebugging&lt;/em&gt;&amp;#8221; ocorre pela porta USB, a partir do momento que voc√™ conecta seu celular no computador, voc√™ pode inspecionar p√°ginas html, css, javascript, rodar scripts no console, visualizar o comportamento de uma p√°gina nem precisar realizar deploy, testar web apps, outra coisa interessante √© que voc√™ pode at√© inspecionar Webviews.&lt;/p&gt;

&lt;p&gt;Para iniciar debug remoto voc√™ precisar√° de:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Um celular ou tablet Android com Chrome for Android na vers√£o 31 ou maior instalado via Google Play. (O Chrome for Android beta j√° esta na vers√£o 32 &amp;#8211; √© uma boa op√ß√£o para sempre testar as novidades &amp;#8211; requer ADB-free para conectar)&lt;/li&gt;
&lt;li&gt;Um cabo usb para plugar o seu dispositivo. (Para usu√°rios windows instalar um &lt;a title=&#34;OEM USB Android&#34; href=&#34;http://developer.android.com/tools/extras/oem-usb.html&#34; target=&#34;_blank&#34;&gt;driver USB apropriado&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Google Chrome na vers√£o 31 ou maior em sua m√°quina&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos agora √†s configura√ß√µes:&lt;/p&gt;

&lt;h2 id=&#34;1-8211-configurando-seus-dispositivos&#34;&gt;1 &amp;#8211; Configurando seus dispositivos&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Configurando o Android&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Caso as op√ß√µes de desenvolvedor n√£o estejam habilitadas, ser√° necess√°rio faz√™-las. A partir da vers√£o 4.2 do Android essa funcionalidade vem escondida por default. Para desabilita-la v√° at√© Configura√ß√µes &amp;gt; Sobre ¬†o telefone e aperte 7 vezes a op√ß√£o Build number. No Android 4.0 e 4.1 √© s√≥ ir em Configura√ß√µes &amp;gt; Op√ß√µes de Desenvolvedor. Em op√ß√µes do desenvolvedor basta habilitar a op√ß√£o Debug USB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Configurando o Computador&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Caso tenha um linux ser√° necess√°rio instalar alguns programas para que o celular ou tablet seja reconhecido pelo computador.&lt;/p&gt;

&lt;p&gt;Utiliza os seguintes comandos:&lt;/p&gt;

&lt;p&gt;Para instalar os drivers para reconhecimento do dispositivo:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ ¬†sudo apt-get -y install mtp-tools mtpfs gmtp
&lt;/pre&gt;

&lt;p&gt;Para instalar o Chromium Browser &amp;#8211; a vers√£o open source do Google Chrome:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ ¬†sudo apt-get install chromium-browser
&lt;/pre&gt;

&lt;p&gt;Caso esteja em Windows ser√° necess√°rio ir no site do android e instalar o¬†&lt;a title=&#34;OEM USB Android&#34; href=&#34;http://developer.android.com/tools/extras/oem-usb.html&#34; target=&#34;_blank&#34;&gt;driver usb&lt;/a&gt; do fabricante¬†apropriado.&lt;/p&gt;

&lt;p&gt;As vers√µes 32 do Chrome ¬†(as vers√µes beta) tem suporte nativo para Debug Remoto, basta a acessar &lt;code&gt;about:inspect&lt;/code&gt;¬†e ver a lista de dispositivos.&lt;/p&gt;

&lt;p&gt;Para vers√µes m31 e anteriores √© necess√°rio instalar a extens√£o do chrome¬†&lt;a href=&#34;https://developers.google.com/chrome-developer-tools/docs/remote-debugging?hl=pt-br#remote-debugging-chrome-extension&#34;&gt;ADB Chrome extension&lt;/a&gt;. ¬†Essa exten√ß√£o inclui o Android Debug Bridge(ADB) e seguintes benef√≠cios:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inclui ADB se n√£o tiver instalado o pacote total do sdk android.&lt;/li&gt;
&lt;li&gt;Fornece uma interface de usu√°rio para facilmente ligar e desligar o ADB e listar dispositivos conectados.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quando a ADB Chrome extension tiver sido instalada um √≠cone cinza do android aparecer√° ao lado do menu do Chrome&lt;/p&gt;

&lt;p&gt;1 &amp;#8211; Clique no √≠cone do android e depois em &lt;strong&gt;Start ADB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/01/tableless-adb-plugin-menu.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40309&#34; alt=&#34;tableless-adb-plugin-menu&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/tableless-adb-plugin-menu.png&#34; width=&#34;206&#34; height=&#34;141&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ap√≥s iniciado o √≠cone do android ficar√° verde e o n√∫mero de dispositivos ativos ser√° exibido.&lt;/p&gt;

&lt;p&gt;2 &amp;#8211; Clique em¬†&lt;strong&gt;View Inspection Targets&lt;/strong&gt;¬†para abrir a p√°gina¬†&lt;strong&gt;about:inspect&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/01/tableless-adb-plugin-menu-active.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40310&#34; alt=&#34;tableless-adb-plugin-menu-active&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/tableless-adb-plugin-menu-active.png&#34; width=&#34;205&#34; height=&#34;144&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3 &amp;#8211; Conecte seu celular&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Conecte seu dispositivo a maquina de desenvolvimento via cabo USB. Qdo voc√™ plugar o cabo a seguinte mensagem ser√° exibida:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/01/usb-debugging-dialog.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40314&#34; alt=&#34;usb-debugging-dialog&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/usb-debugging-dialog.png&#34; width=&#34;344&#34; height=&#34;292&#34; srcset=&#34;uploads/2014/01/usb-debugging-dialog.png 344w, uploads/2014/01/usb-debugging-dialog-197x168.png 197w&#34; sizes=&#34;(max-width: 344px) 100vw, 344px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ap√≥s apertar em OK v√° para p√°gina¬†&lt;code&gt;about:inspect&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/01/devices-list.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-40316&#34; alt=&#34;devices-list&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/devices-list-588x226.png&#34; width=&#34;588&#34; height=&#34;226&#34; srcset=&#34;uploads/2014/01/devices-list-588x226.png 588w, uploads/2014/01/devices-list-329x126.png 329w, uploads/2014/01/devices-list-660x254.png 660w, uploads/2014/01/devices-list.png 674w&#34; sizes=&#34;(max-width: 588px) 100vw, 588px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nessa tela, basta clicar no link &amp;#8220;&lt;em&gt;inspect&lt;/em&gt;&amp;#8221; e voc√™ ver√° a seguinte tela:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/02/inspect-1.png&#34;&gt;&lt;img class=&#34;alignnone size-medium wp-image-40923&#34; alt=&#34;inspect-1&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/inspect-1-450x310.png&#34; width=&#34;450&#34; height=&#34;310&#34; srcset=&#34;uploads/2014/02/inspect-1-450x310.png 450w, uploads/2014/02/inspect-1-244x168.png 244w, uploads/2014/02/inspect-1.png 973w&#34; sizes=&#34;(max-width: 450px) 100vw, 450px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clicando no bot√£o &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/02/screencast0.png&#34;&gt;&lt;img alt=&#34;screencast0&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/screencast0.png&#34; width=&#34;25&#34; height=&#34;26&#34; /&gt;&lt;/a&gt;¬†voc√™ ver√°:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/02/inspect2.png&#34;&gt;&lt;img alt=&#34;inspect2&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/inspect2-562x310.png&#34; width=&#34;562&#34; height=&#34;310&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Com o screencast voc√™ pode interagir com a tela do seu device como se fosse um site, usar todas as ferramentas de desenvolvedor do chrome e tudo que √© feito no device √© repetido no seu pc e vice-versa, veja abaixo¬†um video no youtube demonstrando a intera√ß√£o.&lt;/p&gt;

&lt;p&gt;Fonte e mais informa√ß√µes:¬†&lt;a title=&#34;Chorme Developer Tools - Remote Debug com Chrome&#34; href=&#34;https://developers.google.com/chrome-developer-tools/docs/remote-debugging?hl=pt-BR&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://developers.google.com/chrome-developer-tools/docs/remote-debugging?hl=pt-BR&#34;&gt;https://developers.google.com/chrome-developer-tools/docs/remote-debugging?hl=pt-BR&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Design de Aplicativos para Android ‚Äì Parte 2</title>
      <link>https://tableless.github.io/hugo-public/design-de-aplicativos-para-android-parte-2/</link>
      <pubDate>Wed, 05 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/design-de-aplicativos-para-android-parte-2/</guid>
      <description>

&lt;p&gt;No &lt;a href=&#34;http://tableless.com.br/design-de-aplicativos-para-android-parte-1/&#34; title=&#34;Design de Aplicativos para Android ‚Äì Parte 1&#34;&gt;primeiro artigo desta s√©rie&lt;/a&gt;, conversamos um pouco sobre a anatomia de um App Android e no que ele difere de outros sistemas operacionais. Hoje vamos nos aprofundar nos aspectos mais t√©cnicos do design de aplicativos. Busque seu caf√© e boa leitura!&lt;/p&gt;

&lt;h2 id=&#34;o-que-√©-um-pixel&#34;&gt;O que √© um pixel?&lt;/h2&gt;

&lt;p&gt;Um pixel √© o menor ponto f√≠sico em um dispositivo. √â uma combina√ß√£o espertinha de duas palavras pix (como em &amp;#8220;picture&amp;#8221;) e el (como em &amp;#8220;element&amp;#8221;). Ou seja, um pixel √© o elemento pelo qual as imagens s√£o criadas.&lt;/p&gt;

&lt;h3 id=&#34;sobre-pixels-e-relatividade&#34;&gt;Sobre pixels e relatividade&lt;/h3&gt;

&lt;p&gt;O pixel parece uma unidade fixa quando voc√™ escreve c√≥digos CSS, mas na realidade o tamanho f√≠sico do pixel varia de acordo com o dispositivo. Isto significa que 1px aqui no meu monitor √© diferente do mesmo 1px do seu. Mas n√£o √© s√≥ o tamanho do pixel que pode mudar de aparelho para aparelho. A quantidade de pixels que cabem em uma mesma √°rea tamb√©m varia. Como o assunto √© meio denso, vamos usar uma met√°fora. Imagine pegar uma r√©gua e desenhar com um marcador permanente (√â s√≥ imagina√ß√£o. N√£o v√° dizer que eu mandei fazer isto, hein?) um quadrado de 1 polegada em um iPhone 3GS. Agora desenhe o mesmo quadrado em um iPhone 4 que possui tela de alta resolu√ß√£o (que a galera do marketing da Ma√ßa resolveu chamar de Retina). Embora os quadrados imagin√°rios sejam do mesmo tamanho, como a densidade de pixels de um monitor HD √© maior, temos mais pixels apertadinhos em um mesmo espa√ßo. Esta maravilha da tecnologia permite imagens muito mais bonitas, n√≠tidas e detalhadas‚Ä¶ Mas, como tudo tem um pre√ßo, o designer de iOS ter√° que criar duas imagens: uma para a densidade &amp;#8220;base&amp;#8221; e outra para a densidade dobrada.&lt;/p&gt;

&lt;p&gt;iOS? Este artigo n√£o √© sobre Android? Pois √©, amigo, tenho uma m√° not√≠cia. Os celulares da Apple s√£o todos padronizados ent√£o se fossemos separar todos os iPhones do mundo de acordo com a resolu√ß√£o s√≥ existiriam duas pilhas: normal e retina (HD). Como o Android √© um sistema aberto e democr√°tico existem diversas marcas, cada uma criando aparelhos com a densidade de pixels que est√° na moda no momento e‚Ä¶ Moral da hist√≥ria: existem 6 pilhas de densidade para Android. Cada uma engloba uma determinada faixa de pontos por polegada e √© rotulada com uma sigla charmosa. Parece bem mais trabalhoso a princ√≠pio. Mas nem tudo est√° perdido. O segredo para criar um layout que vai manter a consist√™ncia em diferentes aparelhos est√° nos pixels virtuais.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40536&#34; alt=&#34;densidade-de-pixels&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/densidade-de-pixels.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/densidade-de-pixels.jpg 660w, uploads/2014/01/densidade-de-pixels-277x168.jpg 277w, uploads/2014/01/densidade-de-pixels-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;pilhas-de-densidade&#34;&gt;Pilhas de densidade&lt;/h2&gt;

&lt;p&gt;Para simplificar agrupamos as densidade de pixels mais comuns, medidas em DPI (quantidade de pontos por polegadas), em categorias com nomes mais amig√°veis. A coluna em negrito √© a resolu√ß√£o base (MDPI).&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;nbsp;&lt;/th&gt;
&lt;th&gt;LDPI&lt;/th&gt;
&lt;th&gt;MDPI&lt;/th&gt;
&lt;th&gt;HDPI&lt;/th&gt;
&lt;th&gt;XHDPI&lt;/th&gt;
&lt;th&gt;XXHDPI&lt;/th&gt;
&lt;th&gt;XXXHDPI&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Resolu√ß√£o&lt;/td&gt;
&lt;td&gt;baixa&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;m√©dia (base)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;alta&lt;/td&gt;
&lt;td&gt;extra-alta&lt;/td&gt;
&lt;td&gt;extra-extra-alta&lt;/td&gt;
&lt;td&gt;extra-extra-extra-alta&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Densidade&lt;/td&gt;
&lt;td&gt;120dpi&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;160dpi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;240dpi&lt;/td&gt;
&lt;td&gt;320dpi&lt;/td&gt;
&lt;td&gt;480dpi&lt;/td&gt;
&lt;td&gt;640dpi&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Escala em rela√ß√£o a base&lt;/td&gt;
&lt;td&gt;0.75x&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.5x&lt;/td&gt;
&lt;td&gt;2x&lt;/td&gt;
&lt;td&gt;3x&lt;/td&gt;
&lt;td&gt;4x&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Distribui√ß√£o entre aparelhos*&lt;/td&gt;
&lt;td&gt;9.3%&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;23.4%&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;34.0%&lt;/td&gt;
&lt;td&gt;21.0%&lt;/td&gt;
&lt;td&gt;10.6%&lt;/td&gt;
&lt;td&gt;1.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;*De acordo com &lt;a href=&#34;http://developer.android.com/about/dashboards/index.html&#34; title=&#34;Developer Android - Dashboards&#34;&gt;pesquisa&lt;/a&gt; realizada em Janeiro de 2014.&lt;/p&gt;

&lt;p&gt;Estas s√£o as categorias ou pilhas de densidade. Nem todos os dispositivos se encaixam perfeitamente em uma destas categorias, por isto devemos sempre arredondar para o valor mais pr√≥ximo. Por exemplo: um aparelho de 242dpi ainda seria classificado como HDPI.&lt;/p&gt;

&lt;p&gt;Eu acrescentei o LDPI nesta tabela para voc√™s conhecerem, mas o sistema redimensiona os assets para ela automaticamente a partir do HDPI.&lt;/p&gt;

&lt;h2 id=&#34;e-os-tais-pixels-virtuais&#34;&gt;E os tais pixels virtuais?&lt;/h2&gt;

&lt;p&gt;DP (tamb√©m chamado de DIP) √© uma sigla para Density-independent Pixels, ou seja, Pixel Independente de Resolu√ß√£o. √â uma unidade de medida abstrata baseada na densidade da tela e fundamental para criarmos apps para Android. 1dp corresponde a 1px em uma tela de resolu√ß√£o de 160dpi (o MDPI da nossa tabelinha, tamb√©m conhecido como Resolu√ß√£o Base). Utilizar dp como medida √© garantir que os elementos do layout tenham o mesmo tamanho f√≠sico independente da resolu√ß√£o. N√£o importa se no mesmo quadrado cabem 4px ou apenas 1, eles sempre ter√£o o mesmo tamanho f√≠sico.&lt;/p&gt;

&lt;p&gt;Vamos para um exemplo pr√°tico. Se voc√™ tiver um √≠cone em PNG de 32dp (ou 32px na resolu√ß√£o base MDPI) vai precisar das seguintes vers√µes para atender as outras resolu√ß√µes: 48px (HDPI), 64px (XHDPI), 96px (XXHDPI) e 128px (XXXHDPI). Mas, como voc√™s podem notar atrav√©s da tabela, a grande maioria dos usu√°rios (78.4%) se concentra entre as resolu√ß√µes MDPI-XDHPI. Ou seja, se voc√™ tiver que priorizar se concentre nestas tr√™s faixas.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40541&#34; alt=&#34;icones-de-acao&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/icones-de-acao.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/icones-de-acao.jpg 660w, uploads/2014/01/icones-de-acao-277x168.jpg 277w, uploads/2014/01/icones-de-acao-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lembre-se na hora de converter as medidas de sempre arredondar o n√∫mero se aparecerem casas decimais. Se voc√™ partir do pressuposto que 1px √© a menor unidade de medida poss√≠vel n√£o existe meio pixel.&lt;/p&gt;

&lt;h2 id=&#34;qual-tamanho-devo-usar-para-o-artboard-do-layout&#34;&gt;Qual tamanho devo usar para o artboard do layout?&lt;/h2&gt;

&lt;p&gt;√â aqui que a coisa pega! Por mais que voc√™ crie assets em diferentes resolu√ß√µes utilizando DP, o cliente (e o desenvolvedor) querem ver um mockup ou pelo menos um wireframe simulando o aplicativo final. √â preciso escolher um tamanho de canvas para a cria√ß√£o do seu layout. Para isto vamos analisar algumas resolu√ß√µes comuns.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MDPI&lt;/th&gt;
&lt;th&gt;HDPI&lt;/th&gt;
&lt;th&gt;XHDPI&lt;/th&gt;
&lt;th&gt;XXHDPI&lt;/th&gt;
&lt;th&gt;XXXHDPI&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;360x640px&lt;/td&gt;
&lt;td&gt;540x960px&lt;/td&gt;
&lt;td&gt;720x1280px&lt;/td&gt;
&lt;td&gt;1920x1080px&lt;/td&gt;
&lt;td&gt;1440x2160px&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Se o seu aplicativo for espec√≠fico para smartphones podemos nos concentrar nas densidades MDPI, HDPI e XDPI. Voc√™ pode come√ßar na resolu√ß√£o MDPI e aumentar seus assets (lembre-se de utilizar vetores para este caso) mas eu, pessoalmente, prefiro come√ßar com um arquivo maior em XDPI (&lt;strong&gt;720x1280px&lt;/strong&gt;) e depois criar vers√µes menores dos mesmos assets (75% menor para HDPI e 50% menor para MDPI). Vale ainda acrescentar as barras e bot√µes padr√µes do Android para ficar mais f√°cil de visualizar o resultado final.&lt;/p&gt;

&lt;p&gt;Se voc√™ est√° criando um aplicativo que servir√° tamb√©m para tablets √© importante criar um layout que atenda as demais densidades tamb√©m. Neste caso comece pelo XXXDPI (1440x2160px).&lt;/p&gt;

&lt;p&gt;Aten√ß√£o: estes tamanhos s√£o apenas generaliza√ß√µes para facilitar o processo criativo e n√£o correspondem necessariamente a dispositivos reais. Existe uma quantidade imensa de tamanhos e formatos de smartphones e tablets e projetar um mock-up para todos seria invi√°vel. Estes formatos s√£o apenas amostras para que voc√™ possa visualizar o resultado do projeto. Por isto lembre-se de projetar pensando nos valores em dp.&lt;/p&gt;

&lt;h2 id=&#34;ritmo&#34;&gt;Ritmo&lt;/h2&gt;

&lt;p&gt;A ponta do dedo de uma pessoa tem por volta por volta de 9mm, o que corresponde a cerca de 48dp. Este deve ser portanto o tamanho base dos objetos toc√°veis do seu layout para que a interface funcione de maneira confort√°vel e os √≠cones e bot√µes sejam f√°ceis de tocar com precis√£o. Uma margem de 8dp deve ser acrescentada para garantir a separa√ß√£o dos objetos e evitar erros.&lt;/p&gt;

&lt;p&gt;48dp √© um tamanho legal para definir como grid horizontal do seu layout.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/style/metrics-grids.html&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40549&#34; alt=&#34;ritmo&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/ritmo.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/ritmo.jpg 660w, uploads/2014/01/ritmo-277x168.jpg 277w, uploads/2014/01/ritmo-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;tipografia&#34;&gt;Tipografia&lt;/h2&gt;

&lt;p&gt;A fam√≠lia tipogr√°fica padr√£o do Android 4.4 √© a Roboto. A fonte pode ser baixada gratuitamente atrav√©s do &lt;a href=&#34;http://www.google.com/fonts/specimen/Roboto&#34; title=&#34;Roboto - Google Fonts&#34;&gt;Google Fonts&lt;/a&gt; e vem com uma s√©rie de pesos diferentes: thin, light, regular, medium, bold e black e vers√µes condensadas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/style/typography.html&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40546&#34; alt=&#34;roboto-font&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/roboto-font.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/roboto-font.jpg 660w, uploads/2014/01/roboto-font-277x168.jpg 277w, uploads/2014/01/roboto-font-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;sp&#34;&gt;SP&lt;/h3&gt;

&lt;p&gt;A tipografia do seu layout deve seguir uma outra medida: o SP (scaled pixel). Um SP corresponde a 1 dp em escala 100%. Parece a mesma coisa, mas n√£o √©. A vantagem do SP √© que ele √© redimension√°vel. Ou seja, o usu√°rio poder√° aumentar e diminuir o tamanho do texto em SP de acordo com suas prefer√™ncias. 10sp seriam correspondentes a 11dp se o tamanho do texto estivesse em escala 110%. Esta flexibilidade √© uma quest√£o de acessibilidade j√° que poder redimensionar o texto √© fundamental para pessoas com dificuldade de vis√£o.&lt;/p&gt;

&lt;p&gt;Para resumir o drama das unidades de medida:&lt;/p&gt;

&lt;p&gt;&amp;#8211; SP para tipografia.&lt;/p&gt;

&lt;p&gt;&amp;#8211; DP para todo o resto.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Fim.&lt;/p&gt;

&lt;p&gt;Para garantir a legibilidade a documenta√ß√£o oficial recomenda alguns tamanhos para texto:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40538&#34; alt=&#34;escala-roboto&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/escala-roboto.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/escala-roboto.jpg 660w, uploads/2014/01/escala-roboto-277x168.jpg 277w, uploads/2014/01/escala-roboto-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lembre-se que, se voc√™ tiver usando o Photoshop deve converter o tamanho de acordo com a densidade que escolheu trabalhar. Vamos supor que o seu artboard seja o XDPI (720x1280px). Isto significa 1sp = 2px. Ou seja, o texto de 22sp vai valer 44px e assim por diante.&lt;/p&gt;

&lt;p&gt;√â poss√≠vel tamb√©m implementar fontes customizadas atrav√©s de um arquivo ttf. Mas esta op√ß√£o pode deixar o seu app um pouco mais pesado.&lt;/p&gt;

&lt;h2 id=&#34;√≠cones&#34;&gt;√çcones&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/style/iconography.html&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40542&#34; alt=&#34;icones&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/icones1.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/icones1.jpg 660w, uploads/2014/01/icones1-277x168.jpg 277w, uploads/2014/01/icones1-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;launcher&#34;&gt;Launcher&lt;/h3&gt;

&lt;p&gt;Este √© o √≠cone de inicializa√ß√£o do aplicativo a partir da Home. Como este √© o primeiro contato que o p√∫blico ter√° com a sua marca √© interessante incorporar conceitos da sua identidade visual como formas, cores ou at√© mesmo utilizar o seu logotipo. √â importante testar se o √≠cone permanece vis√≠vel em diversos tipos de background j√° que o usu√°rio pode trocar o papel de parede da Home pela imagem que desejar. O launcher icon pode ser utilizando tamb√©m ao longo da barra de a√ß√£o em todas as telas do aplicativo.&lt;/p&gt;

&lt;p&gt;Al√©m das vers√£o padr√£o de 48dp, √© importante criar um Launcher no tamanho 512x512px para ser utilizado na Google Play.&lt;/p&gt;

&lt;h3 id=&#34;√≠cones-de-a√ß√£o&#34;&gt;√çcones de a√ß√£o&lt;/h3&gt;

&lt;p&gt;Os √≠cones da barra de a√ß√£o precisam ter 32dp. O estilo destes √≠cones √© s√≥lido, sem muitos detalhes, representando claramente uma a√ß√£o √∫nica e ocupando uma √°rea focal de 24dp. A grossura dos tra√ßos e espa√ßos negativos deve ter ao menos 2dp. J√° existem √≠cones pr√©-definidos para diversas a√ß√µes comuns como compartilhar um conte√∫do ou enviar um e-mail, portanto, antes de criar o seu, verifique se n√£o existe um &lt;a href=&#34;http://developer.android.com/design/style/iconography.html&#34; title=&#34;Developer Android - Iconography&#34;&gt;padr√£o do sistema&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;√≠cones-contextuais&#34;&gt;√çcones contextuais&lt;/h3&gt;

&lt;p&gt;S√£o √≠cones pequenos utilizados ao longo do App que servem para mostrar a√ß√µes secund√°rias e status de itens. As estrelinhas em e-mails importantes no Gmail s√£o um exemplo de √≠cone contextual. O estilo deve ser neutro, flat e simples. Prefira formas preenchidas e cores s√≥lidas. Tamanho 16dp e √°rea focal 12dp.&lt;/p&gt;

&lt;h3 id=&#34;√≠cones-de-notifica√ß√£o&#34;&gt;√çcones de notifica√ß√£o&lt;/h3&gt;

&lt;p&gt;Utilizados na barra de status para indicar novas notifica√ß√µes para o seu App. Devem ter 24dp, sendo que a √°rea focal deve ser 22dp. A recomenda√ß√£o para estilo √© que sejam s√≥lidos, brancos e simples. Procure utilizar uma vers√£o simplificada do s√≠mbolo do launcher para facilitar a associa√ß√£o entre a notifica√ß√£o e o seu aplicativo.&lt;/p&gt;

&lt;h3 id=&#34;tabela-de-convers√£o&#34;&gt;Tabela de convers√£o&lt;/h3&gt;

&lt;p&gt;Para facilitar o calculo, consulte esta tabela para descobrir o tamanho de cada tipo de item em pixels.&lt;/p&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;
      Launcher
    &lt;/th&gt;
    
    &lt;th&gt;
      Action Icon
    &lt;/th&gt;
    
    &lt;th&gt;
      Pequeno / Contextual
    &lt;/th&gt;
    
    &lt;th&gt;
      Notifica√ß√£o
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      mdpi
    &lt;/td&gt;
    
    &lt;td&gt;
      48x48px
    &lt;/td&gt;
    
    &lt;td&gt;
      32x32px
    &lt;/td&gt;
    
    &lt;td&gt;
      16x16px
    &lt;/td&gt;
    
    &lt;td&gt;
      24x24px
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      hdpi
    &lt;/td&gt;
    
    &lt;td&gt;
      72x72px
    &lt;/td&gt;
    
    &lt;td&gt;
      48x48px
    &lt;/td&gt;
    
    &lt;td&gt;
      24x24px
    &lt;/td&gt;
    
    &lt;td&gt;
      36x36px
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      xhdpi
    &lt;/td&gt;
    
    &lt;td&gt;
      96x96px
    &lt;/td&gt;
    
    &lt;td&gt;
      64x64px
    &lt;/td&gt;
    
    &lt;td&gt;
      32x32px
    &lt;/td&gt;
    
    &lt;td&gt;
      48x48px
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      xxhdpi
    &lt;/td&gt;
    
    &lt;td&gt;
      144x144px
    &lt;/td&gt;
    
    &lt;td&gt;
      96x96px
    &lt;/td&gt;
    
    &lt;td&gt;
      48x48px
    &lt;/td&gt;
    
    &lt;td&gt;
      72x72px
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&#34;organizando-os-assets&#34;&gt;Organizando os assets&lt;/h2&gt;

&lt;h3 id=&#34;conven√ß√µes-de-nomenclatura&#34;&gt;Conven√ß√µes de nomenclatura&lt;/h3&gt;

&lt;p&gt;Existem alguns padr√µes para nomear os assets que s√£o √∫teis na hora de encontrar o arquivo que voc√™ precisa dentro de uma pasta. Estes s√£o alguns dos prefixos comuns:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo de asset&lt;/th&gt;
&lt;th&gt;Prefixo&lt;/th&gt;
&lt;th&gt;Exemplo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;√çcone&lt;/td&gt;
&lt;td&gt;ic_&lt;/td&gt;
&lt;td&gt;ic_estrela.png&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Launcher&lt;/td&gt;
&lt;td&gt;ic_launcher&lt;/td&gt;
&lt;td&gt;ic_launcher_nomedoapp.png&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;√çcones da action bar&lt;/td&gt;
&lt;td&gt;ic_menu&lt;/td&gt;
&lt;td&gt;ic_menu_busca.png&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;√çcones da barra de status&lt;/td&gt;
&lt;td&gt;ic_stat_notificar&lt;/td&gt;
&lt;td&gt;ic_stat_notificar_msg.png&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;√çcones das tabs&lt;/td&gt;
&lt;td&gt;ic_tab&lt;/td&gt;
&lt;td&gt;ic_tab_recente.png&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;√çcones de dialogo&lt;/td&gt;
&lt;td&gt;ic_dialog&lt;/td&gt;
&lt;td&gt;ic_dialog_info.png&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;estrutura-de-diret√≥rio&#34;&gt;Estrutura de diret√≥rio&lt;/h3&gt;

&lt;p&gt;Separe os √≠cones em pastas de acordo com a densidade. Lembre-se de utilizar o mesmo nome para as diferentes vers√µes do mesmo √≠cone para facilitar na hora de encontrar o asset que voc√™ precisa.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40539&#34; alt=&#34;estritura-de-pastas&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/estritura-de-pastas.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/estritura-de-pastas.jpg 660w, uploads/2014/01/estritura-de-pastas-277x168.jpg 277w, uploads/2014/01/estritura-de-pastas-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;branding&#34;&gt;Branding&lt;/h2&gt;

&lt;p&gt;Al√©m dos √≠cones e do seu logotipo existe um grande espa√ßo para voc√™ refor√ßar o branding dentro de um aplicativo. Elementos da interface como checkboxes, radio buttons, barras de progresso, abas e sliders podem ser personalizados para refletir a identidade visual da sua marca.&lt;/p&gt;

&lt;h3 id=&#34;bot√µes&#34;&gt;Bot√µes&lt;/h3&gt;

&lt;p&gt;Para bot√µes formados apenas por imagens n√£o √© necessario utilizar um background. O mesmo vale para bot√µes formados por texto. Uma frase demonstrando a a√ß√£o claramente (como &amp;#8220;Iniciar&amp;#8221; ou &amp;#8220;Login&amp;#8221;) juntamente como cores, peso ou tipografia diferente j√° √© suficiente para sinalizar ao usu√°rio que √© poss√≠vel interagir com o objeto.&lt;/p&gt;

&lt;p&gt;A recomenda√ß√£o da &lt;a href=&#34;http://developer.android.com/design/building-blocks/buttons.html&#34; title=&#34;Android Developer - Buttons&#34;&gt;documenta√ß√£o oficia&lt;/a&gt;l √© evitar utilizar backgrounds para os bot√µes j√° que a apar√™ncia deles tende a deixar o visual do app mais pesado. O ideal √© deixar um ou dois no m√°ximo para os seguintes casos: call to action (ex: cadastrar), decis√£o chave (ex: aceitar ou rejeitar) ou a√ß√£o significativa (ex: comprar agora, deletar).&lt;/p&gt;

&lt;h2 id=&#34;entreg√°veis&#34;&gt;Entreg√°veis&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Wireframe ou mock-up na resolu√ß√£o de tela e densidade de pixels de sua prefer√™ncia. Se desejar inclua tamb√©m vers√µes retrato e paisagens e um layout alternativo para tablets.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Imagens bitmap recortadas em tamanhos diferentes para todas as densidades que voc√™ decidir atender (no m√≠nimo tr√™s vers√µes: MDPI, HDPI e XDPI). Arquivos transparentes devem estar em png.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Especifica√ß√µes de tamanhos de itens e espa√ßamento (na unidade DP), tipografia (tamanhos em SP), cores e varia√ß√µes dos itens para comportamentos ativo, inativo, no momento de toque, etc. Esta documenta√ß√£o pode ser em um arquivo de texto organizadinho, anota√ß√µes nas imagens do layout ou at√© mesmo um &lt;a href=&#34;http://tableless.com.br/guia-de-estilos/&#34; title=&#34;Guia de Estilos&#34;&gt;Guia de Estilos&lt;/a&gt; completo.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;ferramentas&#34;&gt;Ferramentas&lt;/h2&gt;

&lt;p&gt;Seguindo estas etapas seu trabalho est√° conclu√≠do! ¬†Abaixo eu separei algumas ferramentas √∫teis para auxiliar cada processo. Para mais dicas n√£o esque√ßa de consultar a &lt;a href=&#34;http://developer.android.com/design&#34; title=&#34;Android Developer - Design&#34;&gt;documenta√ß√£o oficial&lt;/a&gt;.¬†At√© a pr√≥xima!&lt;/p&gt;

&lt;h3 id=&#34;android-downloads&#34;&gt;Android Downloads&lt;/h3&gt;

&lt;p&gt;A se√ß√£o &lt;a href=&#34;http://developer.android.com/design/downloads/index.html&#34; title=&#34;Android Developer - Downloads&#34;&gt;Android Downloads&lt;/a&gt;¬†da documenta√ß√£o oficial conta com diversos itens √∫teis: kit de stencils para wireframes, √≠cones de a√ß√£o em formato vetor e bitmap, paleta de cores e guia sobre a fonte Roboto. Vale a sua visita!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/downloads/index.html&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40531&#34; alt=&#34;android-developers-downloads&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/android-developers-downloads.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/android-developers-downloads.jpg 660w, uploads/2014/01/android-developers-downloads-277x168.jpg 277w, uploads/2014/01/android-developers-downloads-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;android-ui-design-kit-for-photoshop&#34;&gt;Android UI Design Kit for Photoshop&lt;/h3&gt;

&lt;p&gt;O kit &lt;a href=&#34;http://androiduiux.com/2014/01/10/android-ui-design-kit-for-photoshop-4-4-free-download/&#34; title=&#34;Android UI&#34;&gt;Android UI&lt;/a&gt; em formato Photoshop tem vers√µes dos elementos da user interface do Android 4.4 prontinho para voc√™ utilizar. S√£o barrinhas, campos de formul√°rio, abas, bot√µes do sistema, enfim, uma s√©rie de recursos super √∫teis para voc√™ desenvolver o layout do seu aplicativo. O arquivo √© sempre atualizado para m√°xima compatibilidade com a √∫ltima vers√£o do sistema operacional.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://androiduiux.com/2014/01/10/android-ui-design-kit-for-photoshop-4-4-free-download/&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40533&#34; alt=&#34;android-ui-design-kit&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/android-ui-design-kit.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/android-ui-design-kit.jpg 660w, uploads/2014/01/android-ui-design-kit-277x168.jpg 277w, uploads/2014/01/android-ui-design-kit-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;android-developers&#34;&gt;Android Developers&lt;/h3&gt;

&lt;p&gt;Se voc√™ prefere assistir v√≠deo aulas, d√™ uma olhada no canal do Youtube¬†&lt;a href=&#34;https://www.youtube.com/user/androiddevelopers&#34; title=&#34;Android Developers&#34;&gt;Android Developers&lt;/a&gt;, principalmente na s√©rie Design Bytes. S√£o v√≠deo curtos e gratuitos que d√£o uma s√©rie de pinceladas √∫teis sobre as melhores pr√°ticas. A maior parte dos v√≠deos est√° em ingl√™s, mas alguns j√° est√£o sendo nacionalizados.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/androiddevelopers&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40532&#34; alt=&#34;android-developers&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/android-developers.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/android-developers.jpg 660w, uploads/2014/01/android-developers-277x168.jpg 277w, uploads/2014/01/android-developers-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;conversores-de-densidade&#34;&gt;Conversores de densidade&lt;/h3&gt;

&lt;p&gt;Se voc√™ ficou meio perdido para converter medidas de pixel para dp, d√™ uma olhada nestas calculadoras online. Basta definir um valor em pixel para obter as medidas proporcionais em MDPI, HDPI e XHDPI. Mais f√°cil do que falar mal do IE6.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.teehanlax.com/blog/density-converter/&#34; title=&#34;Teehanlax density converter&#34;&gt;Teehanlax Density Converter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://coh.io/adpi/&#34; title=&#34;Android DPI Calculator&#34;&gt;Android DPI Calculator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.teehanlax.com/blog/density-converter/&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40537&#34; alt=&#34;density-converter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/density-converter.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/density-converter.jpg 660w, uploads/2014/01/density-converter-277x168.jpg 277w, uploads/2014/01/density-converter-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;android-app-icon-template&#34;&gt;Android App Icon Template&lt;/h3&gt;

&lt;p&gt;O &lt;a href=&#34;http://appicontemplate.com/android&#34; title=&#34;Android App Icon Template&#34;&gt;App Icon Template&lt;/a&gt; √© um arquivo de Photoshop com smart objects para que voc√™ possa criar e visualizar seu launcher icon renderizado na tela inicial do Android. O pacote ainda acompanha texturas, linhas guias e actions para automatizar o processo de exportar o √≠cone para diversas densidades de tela. Existe tamb√©m uma vers√£o do mesmo template para iOS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://appicontemplate.com/android&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40534&#34; alt=&#34;app-icon-template&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/app-icon-template.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/app-icon-template.jpg 660w, uploads/2014/01/app-icon-template-277x168.jpg 277w, uploads/2014/01/app-icon-template-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;android-asset-studio&#34;&gt;Android Asset Studio&lt;/h3&gt;

&lt;p&gt;Se voc√™ √© um desenvolvedor e n√£o entende nada de design o &lt;a href=&#34;http://android-ui-utils.googlecode.com/hg/asset-studio/dist/index.html&#34; title=&#34;Android Asset Studio&#34;&gt;Android Asset Studio&lt;/a&gt; pode ser √∫til para voc√™. A ferramenta √© um kit com diversos geradores para criar os assets b√°sicos de interfaces Android. Basta customizar as cores, definir um estilo para os itens e baixar os arquivos. O kit de ferramentas conta ainda com um gerador de √≠cones, gaveta de navega√ß√£o e frames de smartphones para apresentar o seu layout. N√£o d√° para criar nada especialmente genial, mas √© um bom ponto de partida se voc√™ deseja criar uma aplica√ß√£o simples.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://android-ui-utils.googlecode.com/hg/asset-studio/dist/index.html&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40535&#34; alt=&#34;asset-studio&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/asset-studio.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/asset-studio.jpg 660w, uploads/2014/01/asset-studio-277x168.jpg 277w, uploads/2014/01/asset-studio-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;fluid-ui&#34;&gt;Fluid UI&lt;/h3&gt;

&lt;p&gt;Esta ferramenta √© bem interessante para criar wireframes e fluxogramas online. O [No &lt;a href=&#34;http://tableless.com.br/design-de-aplicativos-para-android-parte-1/&#34; title=&#34;Design de Aplicativos para Android ‚Äì Parte 1&#34;&gt;primeiro artigo desta s√©rie&lt;/a&gt;, conversamos um pouco sobre a anatomia de um App Android e no que ele difere de outros sistemas operacionais. Hoje vamos nos aprofundar nos aspectos mais t√©cnicos do design de aplicativos. Busque seu caf√© e boa leitura!&lt;/p&gt;

&lt;h2 id=&#34;o-que-√©-um-pixel-1&#34;&gt;O que √© um pixel?&lt;/h2&gt;

&lt;p&gt;Um pixel √© o menor ponto f√≠sico em um dispositivo. √â uma combina√ß√£o espertinha de duas palavras pix (como em &amp;#8220;picture&amp;#8221;) e el (como em &amp;#8220;element&amp;#8221;). Ou seja, um pixel √© o elemento pelo qual as imagens s√£o criadas.&lt;/p&gt;

&lt;h3 id=&#34;sobre-pixels-e-relatividade-1&#34;&gt;Sobre pixels e relatividade&lt;/h3&gt;

&lt;p&gt;O pixel parece uma unidade fixa quando voc√™ escreve c√≥digos CSS, mas na realidade o tamanho f√≠sico do pixel varia de acordo com o dispositivo. Isto significa que 1px aqui no meu monitor √© diferente do mesmo 1px do seu. Mas n√£o √© s√≥ o tamanho do pixel que pode mudar de aparelho para aparelho. A quantidade de pixels que cabem em uma mesma √°rea tamb√©m varia. Como o assunto √© meio denso, vamos usar uma met√°fora. Imagine pegar uma r√©gua e desenhar com um marcador permanente (√â s√≥ imagina√ß√£o. N√£o v√° dizer que eu mandei fazer isto, hein?) um quadrado de 1 polegada em um iPhone 3GS. Agora desenhe o mesmo quadrado em um iPhone 4 que possui tela de alta resolu√ß√£o (que a galera do marketing da Ma√ßa resolveu chamar de Retina). Embora os quadrados imagin√°rios sejam do mesmo tamanho, como a densidade de pixels de um monitor HD √© maior, temos mais pixels apertadinhos em um mesmo espa√ßo. Esta maravilha da tecnologia permite imagens muito mais bonitas, n√≠tidas e detalhadas‚Ä¶ Mas, como tudo tem um pre√ßo, o designer de iOS ter√° que criar duas imagens: uma para a densidade &amp;#8220;base&amp;#8221; e outra para a densidade dobrada.&lt;/p&gt;

&lt;p&gt;iOS? Este artigo n√£o √© sobre Android? Pois √©, amigo, tenho uma m√° not√≠cia. Os celulares da Apple s√£o todos padronizados ent√£o se fossemos separar todos os iPhones do mundo de acordo com a resolu√ß√£o s√≥ existiriam duas pilhas: normal e retina (HD). Como o Android √© um sistema aberto e democr√°tico existem diversas marcas, cada uma criando aparelhos com a densidade de pixels que est√° na moda no momento e‚Ä¶ Moral da hist√≥ria: existem 6 pilhas de densidade para Android. Cada uma engloba uma determinada faixa de pontos por polegada e √© rotulada com uma sigla charmosa. Parece bem mais trabalhoso a princ√≠pio. Mas nem tudo est√° perdido. O segredo para criar um layout que vai manter a consist√™ncia em diferentes aparelhos est√° nos pixels virtuais.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40536&#34; alt=&#34;densidade-de-pixels&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/densidade-de-pixels.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/densidade-de-pixels.jpg 660w, uploads/2014/01/densidade-de-pixels-277x168.jpg 277w, uploads/2014/01/densidade-de-pixels-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;pilhas-de-densidade-1&#34;&gt;Pilhas de densidade&lt;/h2&gt;

&lt;p&gt;Para simplificar agrupamos as densidade de pixels mais comuns, medidas em DPI (quantidade de pontos por polegadas), em categorias com nomes mais amig√°veis. A coluna em negrito √© a resolu√ß√£o base (MDPI).&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;nbsp;&lt;/th&gt;
&lt;th&gt;LDPI&lt;/th&gt;
&lt;th&gt;MDPI&lt;/th&gt;
&lt;th&gt;HDPI&lt;/th&gt;
&lt;th&gt;XHDPI&lt;/th&gt;
&lt;th&gt;XXHDPI&lt;/th&gt;
&lt;th&gt;XXXHDPI&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Resolu√ß√£o&lt;/td&gt;
&lt;td&gt;baixa&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;m√©dia (base)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;alta&lt;/td&gt;
&lt;td&gt;extra-alta&lt;/td&gt;
&lt;td&gt;extra-extra-alta&lt;/td&gt;
&lt;td&gt;extra-extra-extra-alta&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Densidade&lt;/td&gt;
&lt;td&gt;120dpi&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;160dpi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;240dpi&lt;/td&gt;
&lt;td&gt;320dpi&lt;/td&gt;
&lt;td&gt;480dpi&lt;/td&gt;
&lt;td&gt;640dpi&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Escala em rela√ß√£o a base&lt;/td&gt;
&lt;td&gt;0.75x&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.5x&lt;/td&gt;
&lt;td&gt;2x&lt;/td&gt;
&lt;td&gt;3x&lt;/td&gt;
&lt;td&gt;4x&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Distribui√ß√£o entre aparelhos*&lt;/td&gt;
&lt;td&gt;9.3%&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;23.4%&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;34.0%&lt;/td&gt;
&lt;td&gt;21.0%&lt;/td&gt;
&lt;td&gt;10.6%&lt;/td&gt;
&lt;td&gt;1.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;*De acordo com &lt;a href=&#34;http://developer.android.com/about/dashboards/index.html&#34; title=&#34;Developer Android - Dashboards&#34;&gt;pesquisa&lt;/a&gt; realizada em Janeiro de 2014.&lt;/p&gt;

&lt;p&gt;Estas s√£o as categorias ou pilhas de densidade. Nem todos os dispositivos se encaixam perfeitamente em uma destas categorias, por isto devemos sempre arredondar para o valor mais pr√≥ximo. Por exemplo: um aparelho de 242dpi ainda seria classificado como HDPI.&lt;/p&gt;

&lt;p&gt;Eu acrescentei o LDPI nesta tabela para voc√™s conhecerem, mas o sistema redimensiona os assets para ela automaticamente a partir do HDPI.&lt;/p&gt;

&lt;h2 id=&#34;e-os-tais-pixels-virtuais-1&#34;&gt;E os tais pixels virtuais?&lt;/h2&gt;

&lt;p&gt;DP (tamb√©m chamado de DIP) √© uma sigla para Density-independent Pixels, ou seja, Pixel Independente de Resolu√ß√£o. √â uma unidade de medida abstrata baseada na densidade da tela e fundamental para criarmos apps para Android. 1dp corresponde a 1px em uma tela de resolu√ß√£o de 160dpi (o MDPI da nossa tabelinha, tamb√©m conhecido como Resolu√ß√£o Base). Utilizar dp como medida √© garantir que os elementos do layout tenham o mesmo tamanho f√≠sico independente da resolu√ß√£o. N√£o importa se no mesmo quadrado cabem 4px ou apenas 1, eles sempre ter√£o o mesmo tamanho f√≠sico.&lt;/p&gt;

&lt;p&gt;Vamos para um exemplo pr√°tico. Se voc√™ tiver um √≠cone em PNG de 32dp (ou 32px na resolu√ß√£o base MDPI) vai precisar das seguintes vers√µes para atender as outras resolu√ß√µes: 48px (HDPI), 64px (XHDPI), 96px (XXHDPI) e 128px (XXXHDPI). Mas, como voc√™s podem notar atrav√©s da tabela, a grande maioria dos usu√°rios (78.4%) se concentra entre as resolu√ß√µes MDPI-XDHPI. Ou seja, se voc√™ tiver que priorizar se concentre nestas tr√™s faixas.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40541&#34; alt=&#34;icones-de-acao&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/icones-de-acao.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/icones-de-acao.jpg 660w, uploads/2014/01/icones-de-acao-277x168.jpg 277w, uploads/2014/01/icones-de-acao-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lembre-se na hora de converter as medidas de sempre arredondar o n√∫mero se aparecerem casas decimais. Se voc√™ partir do pressuposto que 1px √© a menor unidade de medida poss√≠vel n√£o existe meio pixel.&lt;/p&gt;

&lt;h2 id=&#34;qual-tamanho-devo-usar-para-o-artboard-do-layout-1&#34;&gt;Qual tamanho devo usar para o artboard do layout?&lt;/h2&gt;

&lt;p&gt;√â aqui que a coisa pega! Por mais que voc√™ crie assets em diferentes resolu√ß√µes utilizando DP, o cliente (e o desenvolvedor) querem ver um mockup ou pelo menos um wireframe simulando o aplicativo final. √â preciso escolher um tamanho de canvas para a cria√ß√£o do seu layout. Para isto vamos analisar algumas resolu√ß√µes comuns.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MDPI&lt;/th&gt;
&lt;th&gt;HDPI&lt;/th&gt;
&lt;th&gt;XHDPI&lt;/th&gt;
&lt;th&gt;XXHDPI&lt;/th&gt;
&lt;th&gt;XXXHDPI&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;360x640px&lt;/td&gt;
&lt;td&gt;540x960px&lt;/td&gt;
&lt;td&gt;720x1280px&lt;/td&gt;
&lt;td&gt;1920x1080px&lt;/td&gt;
&lt;td&gt;1440x2160px&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Se o seu aplicativo for espec√≠fico para smartphones podemos nos concentrar nas densidades MDPI, HDPI e XDPI. Voc√™ pode come√ßar na resolu√ß√£o MDPI e aumentar seus assets (lembre-se de utilizar vetores para este caso) mas eu, pessoalmente, prefiro come√ßar com um arquivo maior em XDPI (&lt;strong&gt;720x1280px&lt;/strong&gt;) e depois criar vers√µes menores dos mesmos assets (75% menor para HDPI e 50% menor para MDPI). Vale ainda acrescentar as barras e bot√µes padr√µes do Android para ficar mais f√°cil de visualizar o resultado final.&lt;/p&gt;

&lt;p&gt;Se voc√™ est√° criando um aplicativo que servir√° tamb√©m para tablets √© importante criar um layout que atenda as demais densidades tamb√©m. Neste caso comece pelo XXXDPI (1440x2160px).&lt;/p&gt;

&lt;p&gt;Aten√ß√£o: estes tamanhos s√£o apenas generaliza√ß√µes para facilitar o processo criativo e n√£o correspondem necessariamente a dispositivos reais. Existe uma quantidade imensa de tamanhos e formatos de smartphones e tablets e projetar um mock-up para todos seria invi√°vel. Estes formatos s√£o apenas amostras para que voc√™ possa visualizar o resultado do projeto. Por isto lembre-se de projetar pensando nos valores em dp.&lt;/p&gt;

&lt;h2 id=&#34;ritmo-1&#34;&gt;Ritmo&lt;/h2&gt;

&lt;p&gt;A ponta do dedo de uma pessoa tem por volta por volta de 9mm, o que corresponde a cerca de 48dp. Este deve ser portanto o tamanho base dos objetos toc√°veis do seu layout para que a interface funcione de maneira confort√°vel e os √≠cones e bot√µes sejam f√°ceis de tocar com precis√£o. Uma margem de 8dp deve ser acrescentada para garantir a separa√ß√£o dos objetos e evitar erros.&lt;/p&gt;

&lt;p&gt;48dp √© um tamanho legal para definir como grid horizontal do seu layout.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/style/metrics-grids.html&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40549&#34; alt=&#34;ritmo&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/ritmo.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/ritmo.jpg 660w, uploads/2014/01/ritmo-277x168.jpg 277w, uploads/2014/01/ritmo-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;tipografia-1&#34;&gt;Tipografia&lt;/h2&gt;

&lt;p&gt;A fam√≠lia tipogr√°fica padr√£o do Android 4.4 √© a Roboto. A fonte pode ser baixada gratuitamente atrav√©s do &lt;a href=&#34;http://www.google.com/fonts/specimen/Roboto&#34; title=&#34;Roboto - Google Fonts&#34;&gt;Google Fonts&lt;/a&gt; e vem com uma s√©rie de pesos diferentes: thin, light, regular, medium, bold e black e vers√µes condensadas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/style/typography.html&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40546&#34; alt=&#34;roboto-font&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/roboto-font.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/roboto-font.jpg 660w, uploads/2014/01/roboto-font-277x168.jpg 277w, uploads/2014/01/roboto-font-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;sp-1&#34;&gt;SP&lt;/h3&gt;

&lt;p&gt;A tipografia do seu layout deve seguir uma outra medida: o SP (scaled pixel). Um SP corresponde a 1 dp em escala 100%. Parece a mesma coisa, mas n√£o √©. A vantagem do SP √© que ele √© redimension√°vel. Ou seja, o usu√°rio poder√° aumentar e diminuir o tamanho do texto em SP de acordo com suas prefer√™ncias. 10sp seriam correspondentes a 11dp se o tamanho do texto estivesse em escala 110%. Esta flexibilidade √© uma quest√£o de acessibilidade j√° que poder redimensionar o texto √© fundamental para pessoas com dificuldade de vis√£o.&lt;/p&gt;

&lt;p&gt;Para resumir o drama das unidades de medida:&lt;/p&gt;

&lt;p&gt;&amp;#8211; SP para tipografia.&lt;/p&gt;

&lt;p&gt;&amp;#8211; DP para todo o resto.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Fim.&lt;/p&gt;

&lt;p&gt;Para garantir a legibilidade a documenta√ß√£o oficial recomenda alguns tamanhos para texto:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40538&#34; alt=&#34;escala-roboto&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/escala-roboto.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/escala-roboto.jpg 660w, uploads/2014/01/escala-roboto-277x168.jpg 277w, uploads/2014/01/escala-roboto-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lembre-se que, se voc√™ tiver usando o Photoshop deve converter o tamanho de acordo com a densidade que escolheu trabalhar. Vamos supor que o seu artboard seja o XDPI (720x1280px). Isto significa 1sp = 2px. Ou seja, o texto de 22sp vai valer 44px e assim por diante.&lt;/p&gt;

&lt;p&gt;√â poss√≠vel tamb√©m implementar fontes customizadas atrav√©s de um arquivo ttf. Mas esta op√ß√£o pode deixar o seu app um pouco mais pesado.&lt;/p&gt;

&lt;h2 id=&#34;√≠cones-1&#34;&gt;√çcones&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/style/iconography.html&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40542&#34; alt=&#34;icones&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/icones1.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/icones1.jpg 660w, uploads/2014/01/icones1-277x168.jpg 277w, uploads/2014/01/icones1-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;launcher-1&#34;&gt;Launcher&lt;/h3&gt;

&lt;p&gt;Este √© o √≠cone de inicializa√ß√£o do aplicativo a partir da Home. Como este √© o primeiro contato que o p√∫blico ter√° com a sua marca √© interessante incorporar conceitos da sua identidade visual como formas, cores ou at√© mesmo utilizar o seu logotipo. √â importante testar se o √≠cone permanece vis√≠vel em diversos tipos de background j√° que o usu√°rio pode trocar o papel de parede da Home pela imagem que desejar. O launcher icon pode ser utilizando tamb√©m ao longo da barra de a√ß√£o em todas as telas do aplicativo.&lt;/p&gt;

&lt;p&gt;Al√©m das vers√£o padr√£o de 48dp, √© importante criar um Launcher no tamanho 512x512px para ser utilizado na Google Play.&lt;/p&gt;

&lt;h3 id=&#34;√≠cones-de-a√ß√£o-1&#34;&gt;√çcones de a√ß√£o&lt;/h3&gt;

&lt;p&gt;Os √≠cones da barra de a√ß√£o precisam ter 32dp. O estilo destes √≠cones √© s√≥lido, sem muitos detalhes, representando claramente uma a√ß√£o √∫nica e ocupando uma √°rea focal de 24dp. A grossura dos tra√ßos e espa√ßos negativos deve ter ao menos 2dp. J√° existem √≠cones pr√©-definidos para diversas a√ß√µes comuns como compartilhar um conte√∫do ou enviar um e-mail, portanto, antes de criar o seu, verifique se n√£o existe um &lt;a href=&#34;http://developer.android.com/design/style/iconography.html&#34; title=&#34;Developer Android - Iconography&#34;&gt;padr√£o do sistema&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;√≠cones-contextuais-1&#34;&gt;√çcones contextuais&lt;/h3&gt;

&lt;p&gt;S√£o √≠cones pequenos utilizados ao longo do App que servem para mostrar a√ß√µes secund√°rias e status de itens. As estrelinhas em e-mails importantes no Gmail s√£o um exemplo de √≠cone contextual. O estilo deve ser neutro, flat e simples. Prefira formas preenchidas e cores s√≥lidas. Tamanho 16dp e √°rea focal 12dp.&lt;/p&gt;

&lt;h3 id=&#34;√≠cones-de-notifica√ß√£o-1&#34;&gt;√çcones de notifica√ß√£o&lt;/h3&gt;

&lt;p&gt;Utilizados na barra de status para indicar novas notifica√ß√µes para o seu App. Devem ter 24dp, sendo que a √°rea focal deve ser 22dp. A recomenda√ß√£o para estilo √© que sejam s√≥lidos, brancos e simples. Procure utilizar uma vers√£o simplificada do s√≠mbolo do launcher para facilitar a associa√ß√£o entre a notifica√ß√£o e o seu aplicativo.&lt;/p&gt;

&lt;h3 id=&#34;tabela-de-convers√£o-1&#34;&gt;Tabela de convers√£o&lt;/h3&gt;

&lt;p&gt;Para facilitar o calculo, consulte esta tabela para descobrir o tamanho de cada tipo de item em pixels.&lt;/p&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;
      Launcher
    &lt;/th&gt;
    
    &lt;th&gt;
      Action Icon
    &lt;/th&gt;
    
    &lt;th&gt;
      Pequeno / Contextual
    &lt;/th&gt;
    
    &lt;th&gt;
      Notifica√ß√£o
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      mdpi
    &lt;/td&gt;
    
    &lt;td&gt;
      48x48px
    &lt;/td&gt;
    
    &lt;td&gt;
      32x32px
    &lt;/td&gt;
    
    &lt;td&gt;
      16x16px
    &lt;/td&gt;
    
    &lt;td&gt;
      24x24px
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      hdpi
    &lt;/td&gt;
    
    &lt;td&gt;
      72x72px
    &lt;/td&gt;
    
    &lt;td&gt;
      48x48px
    &lt;/td&gt;
    
    &lt;td&gt;
      24x24px
    &lt;/td&gt;
    
    &lt;td&gt;
      36x36px
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      xhdpi
    &lt;/td&gt;
    
    &lt;td&gt;
      96x96px
    &lt;/td&gt;
    
    &lt;td&gt;
      64x64px
    &lt;/td&gt;
    
    &lt;td&gt;
      32x32px
    &lt;/td&gt;
    
    &lt;td&gt;
      48x48px
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      xxhdpi
    &lt;/td&gt;
    
    &lt;td&gt;
      144x144px
    &lt;/td&gt;
    
    &lt;td&gt;
      96x96px
    &lt;/td&gt;
    
    &lt;td&gt;
      48x48px
    &lt;/td&gt;
    
    &lt;td&gt;
      72x72px
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&#34;organizando-os-assets-1&#34;&gt;Organizando os assets&lt;/h2&gt;

&lt;h3 id=&#34;conven√ß√µes-de-nomenclatura-1&#34;&gt;Conven√ß√µes de nomenclatura&lt;/h3&gt;

&lt;p&gt;Existem alguns padr√µes para nomear os assets que s√£o √∫teis na hora de encontrar o arquivo que voc√™ precisa dentro de uma pasta. Estes s√£o alguns dos prefixos comuns:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo de asset&lt;/th&gt;
&lt;th&gt;Prefixo&lt;/th&gt;
&lt;th&gt;Exemplo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;√çcone&lt;/td&gt;
&lt;td&gt;ic_&lt;/td&gt;
&lt;td&gt;ic_estrela.png&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Launcher&lt;/td&gt;
&lt;td&gt;ic_launcher&lt;/td&gt;
&lt;td&gt;ic_launcher_nomedoapp.png&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;√çcones da action bar&lt;/td&gt;
&lt;td&gt;ic_menu&lt;/td&gt;
&lt;td&gt;ic_menu_busca.png&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;√çcones da barra de status&lt;/td&gt;
&lt;td&gt;ic_stat_notificar&lt;/td&gt;
&lt;td&gt;ic_stat_notificar_msg.png&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;√çcones das tabs&lt;/td&gt;
&lt;td&gt;ic_tab&lt;/td&gt;
&lt;td&gt;ic_tab_recente.png&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;√çcones de dialogo&lt;/td&gt;
&lt;td&gt;ic_dialog&lt;/td&gt;
&lt;td&gt;ic_dialog_info.png&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;estrutura-de-diret√≥rio-1&#34;&gt;Estrutura de diret√≥rio&lt;/h3&gt;

&lt;p&gt;Separe os √≠cones em pastas de acordo com a densidade. Lembre-se de utilizar o mesmo nome para as diferentes vers√µes do mesmo √≠cone para facilitar na hora de encontrar o asset que voc√™ precisa.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40539&#34; alt=&#34;estritura-de-pastas&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/estritura-de-pastas.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/estritura-de-pastas.jpg 660w, uploads/2014/01/estritura-de-pastas-277x168.jpg 277w, uploads/2014/01/estritura-de-pastas-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;branding-1&#34;&gt;Branding&lt;/h2&gt;

&lt;p&gt;Al√©m dos √≠cones e do seu logotipo existe um grande espa√ßo para voc√™ refor√ßar o branding dentro de um aplicativo. Elementos da interface como checkboxes, radio buttons, barras de progresso, abas e sliders podem ser personalizados para refletir a identidade visual da sua marca.&lt;/p&gt;

&lt;h3 id=&#34;bot√µes-1&#34;&gt;Bot√µes&lt;/h3&gt;

&lt;p&gt;Para bot√µes formados apenas por imagens n√£o √© necessario utilizar um background. O mesmo vale para bot√µes formados por texto. Uma frase demonstrando a a√ß√£o claramente (como &amp;#8220;Iniciar&amp;#8221; ou &amp;#8220;Login&amp;#8221;) juntamente como cores, peso ou tipografia diferente j√° √© suficiente para sinalizar ao usu√°rio que √© poss√≠vel interagir com o objeto.&lt;/p&gt;

&lt;p&gt;A recomenda√ß√£o da &lt;a href=&#34;http://developer.android.com/design/building-blocks/buttons.html&#34; title=&#34;Android Developer - Buttons&#34;&gt;documenta√ß√£o oficia&lt;/a&gt;l √© evitar utilizar backgrounds para os bot√µes j√° que a apar√™ncia deles tende a deixar o visual do app mais pesado. O ideal √© deixar um ou dois no m√°ximo para os seguintes casos: call to action (ex: cadastrar), decis√£o chave (ex: aceitar ou rejeitar) ou a√ß√£o significativa (ex: comprar agora, deletar).&lt;/p&gt;

&lt;h2 id=&#34;entreg√°veis-1&#34;&gt;Entreg√°veis&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Wireframe ou mock-up na resolu√ß√£o de tela e densidade de pixels de sua prefer√™ncia. Se desejar inclua tamb√©m vers√µes retrato e paisagens e um layout alternativo para tablets.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Imagens bitmap recortadas em tamanhos diferentes para todas as densidades que voc√™ decidir atender (no m√≠nimo tr√™s vers√µes: MDPI, HDPI e XDPI). Arquivos transparentes devem estar em png.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Especifica√ß√µes de tamanhos de itens e espa√ßamento (na unidade DP), tipografia (tamanhos em SP), cores e varia√ß√µes dos itens para comportamentos ativo, inativo, no momento de toque, etc. Esta documenta√ß√£o pode ser em um arquivo de texto organizadinho, anota√ß√µes nas imagens do layout ou at√© mesmo um &lt;a href=&#34;http://tableless.com.br/guia-de-estilos/&#34; title=&#34;Guia de Estilos&#34;&gt;Guia de Estilos&lt;/a&gt; completo.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;ferramentas-1&#34;&gt;Ferramentas&lt;/h2&gt;

&lt;p&gt;Seguindo estas etapas seu trabalho est√° conclu√≠do! ¬†Abaixo eu separei algumas ferramentas √∫teis para auxiliar cada processo. Para mais dicas n√£o esque√ßa de consultar a &lt;a href=&#34;http://developer.android.com/design&#34; title=&#34;Android Developer - Design&#34;&gt;documenta√ß√£o oficial&lt;/a&gt;.¬†At√© a pr√≥xima!&lt;/p&gt;

&lt;h3 id=&#34;android-downloads-1&#34;&gt;Android Downloads&lt;/h3&gt;

&lt;p&gt;A se√ß√£o &lt;a href=&#34;http://developer.android.com/design/downloads/index.html&#34; title=&#34;Android Developer - Downloads&#34;&gt;Android Downloads&lt;/a&gt;¬†da documenta√ß√£o oficial conta com diversos itens √∫teis: kit de stencils para wireframes, √≠cones de a√ß√£o em formato vetor e bitmap, paleta de cores e guia sobre a fonte Roboto. Vale a sua visita!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/downloads/index.html&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40531&#34; alt=&#34;android-developers-downloads&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/android-developers-downloads.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/android-developers-downloads.jpg 660w, uploads/2014/01/android-developers-downloads-277x168.jpg 277w, uploads/2014/01/android-developers-downloads-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;android-ui-design-kit-for-photoshop-1&#34;&gt;Android UI Design Kit for Photoshop&lt;/h3&gt;

&lt;p&gt;O kit &lt;a href=&#34;http://androiduiux.com/2014/01/10/android-ui-design-kit-for-photoshop-4-4-free-download/&#34; title=&#34;Android UI&#34;&gt;Android UI&lt;/a&gt; em formato Photoshop tem vers√µes dos elementos da user interface do Android 4.4 prontinho para voc√™ utilizar. S√£o barrinhas, campos de formul√°rio, abas, bot√µes do sistema, enfim, uma s√©rie de recursos super √∫teis para voc√™ desenvolver o layout do seu aplicativo. O arquivo √© sempre atualizado para m√°xima compatibilidade com a √∫ltima vers√£o do sistema operacional.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://androiduiux.com/2014/01/10/android-ui-design-kit-for-photoshop-4-4-free-download/&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40533&#34; alt=&#34;android-ui-design-kit&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/android-ui-design-kit.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/android-ui-design-kit.jpg 660w, uploads/2014/01/android-ui-design-kit-277x168.jpg 277w, uploads/2014/01/android-ui-design-kit-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;android-developers-1&#34;&gt;Android Developers&lt;/h3&gt;

&lt;p&gt;Se voc√™ prefere assistir v√≠deo aulas, d√™ uma olhada no canal do Youtube¬†&lt;a href=&#34;https://www.youtube.com/user/androiddevelopers&#34; title=&#34;Android Developers&#34;&gt;Android Developers&lt;/a&gt;, principalmente na s√©rie Design Bytes. S√£o v√≠deo curtos e gratuitos que d√£o uma s√©rie de pinceladas √∫teis sobre as melhores pr√°ticas. A maior parte dos v√≠deos est√° em ingl√™s, mas alguns j√° est√£o sendo nacionalizados.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/androiddevelopers&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40532&#34; alt=&#34;android-developers&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/android-developers.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/android-developers.jpg 660w, uploads/2014/01/android-developers-277x168.jpg 277w, uploads/2014/01/android-developers-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;conversores-de-densidade-1&#34;&gt;Conversores de densidade&lt;/h3&gt;

&lt;p&gt;Se voc√™ ficou meio perdido para converter medidas de pixel para dp, d√™ uma olhada nestas calculadoras online. Basta definir um valor em pixel para obter as medidas proporcionais em MDPI, HDPI e XHDPI. Mais f√°cil do que falar mal do IE6.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.teehanlax.com/blog/density-converter/&#34; title=&#34;Teehanlax density converter&#34;&gt;Teehanlax Density Converter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://coh.io/adpi/&#34; title=&#34;Android DPI Calculator&#34;&gt;Android DPI Calculator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.teehanlax.com/blog/density-converter/&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40537&#34; alt=&#34;density-converter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/density-converter.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/density-converter.jpg 660w, uploads/2014/01/density-converter-277x168.jpg 277w, uploads/2014/01/density-converter-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;android-app-icon-template-1&#34;&gt;Android App Icon Template&lt;/h3&gt;

&lt;p&gt;O &lt;a href=&#34;http://appicontemplate.com/android&#34; title=&#34;Android App Icon Template&#34;&gt;App Icon Template&lt;/a&gt; √© um arquivo de Photoshop com smart objects para que voc√™ possa criar e visualizar seu launcher icon renderizado na tela inicial do Android. O pacote ainda acompanha texturas, linhas guias e actions para automatizar o processo de exportar o √≠cone para diversas densidades de tela. Existe tamb√©m uma vers√£o do mesmo template para iOS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://appicontemplate.com/android&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40534&#34; alt=&#34;app-icon-template&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/app-icon-template.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/app-icon-template.jpg 660w, uploads/2014/01/app-icon-template-277x168.jpg 277w, uploads/2014/01/app-icon-template-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;android-asset-studio-1&#34;&gt;Android Asset Studio&lt;/h3&gt;

&lt;p&gt;Se voc√™ √© um desenvolvedor e n√£o entende nada de design o &lt;a href=&#34;http://android-ui-utils.googlecode.com/hg/asset-studio/dist/index.html&#34; title=&#34;Android Asset Studio&#34;&gt;Android Asset Studio&lt;/a&gt; pode ser √∫til para voc√™. A ferramenta √© um kit com diversos geradores para criar os assets b√°sicos de interfaces Android. Basta customizar as cores, definir um estilo para os itens e baixar os arquivos. O kit de ferramentas conta ainda com um gerador de √≠cones, gaveta de navega√ß√£o e frames de smartphones para apresentar o seu layout. N√£o d√° para criar nada especialmente genial, mas √© um bom ponto de partida se voc√™ deseja criar uma aplica√ß√£o simples.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://android-ui-utils.googlecode.com/hg/asset-studio/dist/index.html&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40535&#34; alt=&#34;asset-studio&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/asset-studio.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/asset-studio.jpg 660w, uploads/2014/01/asset-studio-277x168.jpg 277w, uploads/2014/01/asset-studio-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;fluid-ui-1&#34;&gt;Fluid UI&lt;/h3&gt;

&lt;p&gt;Esta ferramenta √© bem interessante para criar wireframes e fluxogramas online. O]&lt;a href=&#34;https://www.fluidui.com/&#34; title=&#34;Fluid UI&#34;&gt;24&lt;/a&gt; conta com diversos elementos comuns de uma interface Android em um esquema drag and drop para voc√™ criar rascunhos com velocidade. O plano gratuito permite criar at√© 10 telas, mas existem outros planos pagos ilimitados.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.fluidui.com/&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40540&#34; alt=&#34;fluidui&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/fluidui.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/fluidui.jpg 660w, uploads/2014/01/fluidui-277x168.jpg 277w, uploads/2014/01/fluidui-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;saiba-mais&#34;&gt;Saiba mais&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design&#34; title=&#34;Android Developer - Design&#34;&gt;Documenta√ß√£o oficial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.mengto.com/how-to-design-for-android-devices/&#34; title=&#34;How to design for Android devices&#34;&gt;How to design for Android Devices&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Design de Aplicativos para Android ‚Äì Parte 1</title>
      <link>https://tableless.github.io/hugo-public/design-de-aplicativos-para-android-parte-1/</link>
      <pubDate>Mon, 27 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/design-de-aplicativos-para-android-parte-1/</guid>
      <description>

&lt;h2 id=&#34;uma-quest√£o-de-motiva√ß√£o&#34;&gt;Uma quest√£o de motiva√ß√£o&lt;/h2&gt;

&lt;p&gt;Recentemente participei de uma maratona de desenvolvimento chamada &lt;a href=&#34;http://developerbus.withgoogle.com/&#34; title=&#34;Google Developer Bus&#34;&gt;Google Developer Bus&lt;/a&gt; ¬†onde encarei o seguinte desafio: criar o layout para um aplicativo Android em apenas 3 dias. J√° trabalho h√° alguns anos com design para a web e, quem acompanha meus textos sabe, sou uma grande evangelista do design responsivo. Mas esta experi√™ncia anterior n√£o foi o suficiente para me preparar para a tarefa. Criar aplicativos nativos √© algo completamente diferente! Envolve um pouco de matem√°tica, muita paci√™ncia e conhecimento do sistema.&lt;/p&gt;

&lt;p&gt;A aus√™ncia de material did√°tico tamb√©m representa um empecilho. Fora a &lt;a href=&#34;http://developer.android.com/design/&#34; title=&#34;Android Design,&#34;&gt;documenta√ß√£o oficial&lt;/a&gt;, existe pouqu√≠ssimo material dispon√≠vel para designers‚Ä¶ Este √© um dado surpreendente considerando que o Android √© atualmente o sistema operacional m√≥vel mais popular do mundo com &lt;a href=&#34;http://www.idc.com/getdoc.jsp?containerId=prUS24442013&#34; title=&#34;Android Pushes Past 80% Market Share While Windows Phone Shipments Leap 156.0% Year Over Year in the Third Quarter, According to IDC &#34;&gt;81% de market share&lt;/a&gt;. ¬†Pensando nisto decidi criar uma s√©rie de artigos sobre o tema voltados para quem, como eu, √© iniciante na √°rea. Minha inten√ß√£o √© dividir com voc√™s o que aprendi e compartilhar algumas dicas e atalhos para criar apps bonitos, funcionais e coerentes com as guidelines espec√≠ficas da plataforma. Pense neste artigo como um starter kit para voc√™ que pretende se aventurar pelo maravilhoso mundo do design de aplicativos e n√£o faz id√©ia por onde come√ßar.&lt;/p&gt;

&lt;p&gt;Nesta primeira etapa vamos conhecer de perto a estrutura e navega√ß√£o do Android e as principais diferen√ßas entre outros sistema operacionais m√≥veis. Este artigo foi criado tendo em mente as diretrizes para a vers√£o do &lt;strong&gt;Android 4.4 KitKat&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conhe√ßa-o-android&#34;&gt;Conhe√ßa o Android&lt;/h2&gt;

&lt;p&gt;O primeiro passo para criar bons aplicativos para Android √©: passe algum tempo se familiarizando com o sistema. Parece um ponto √≥bvio, mas muitas pessoas ignoram esta etapa e acabam criando aplicativos inconsistentes. Se voc√™ possui um aparelho, baixe alguns apps e explore todas as telas. Tente encontrar, dentre cases bem sucedidos, quais pontos eles tem em comum e quais pontos eles diferem. Se voc√™ est√° a procura de inspira√ß√£o pode procurar por showcases espec√≠ficos como o &lt;a href=&#34;http://androidniceties.tumblr.com/&#34; title=&#34;Androide Niceties&#34;&gt;Android Niceties&lt;/a&gt; e &lt;a href=&#34;http://www.android-app-patterns.com/&#34; title=&#34;Android App Patterns&#34;&gt;Android App Patterns&lt;/a&gt;. Mas n√£o √© necess√°rio se limitar a isto. O pr√≥prio &lt;a href=&#34;https://play.google.com/store&#34; title=&#34;Google Play Store&#34;&gt;Google Play&lt;/a&gt; (loja de apps do Google) fornece screenshots de todos os aplicativos. Veja quais s√£o os mais populares e conhe√ßa seus prov√°veis concorrentes. Vale at√© criar uma pequena biblioteca de inspira√ß√£o em uma pastinha no computador ou em alguma rede como &lt;a href=&#34;https://kippt.com/&#34; title=&#34;Kippt&#34;&gt;Kippt&lt;/a&gt; ou &lt;a href=&#34;http://www.pinterest.com/&#34; title=&#34;Pinterest&#34;&gt;Pinterest&lt;/a&gt;. Quanto mais voc√™ se cercar de boas id√©ias, mais f√°cil ser√° para desenvolver a sua.&lt;/p&gt;

&lt;h2 id=&#34;a-anatomia-de-um-app&#34;&gt;A anatomia de um App&lt;/h2&gt;

&lt;p&gt;Ser um usu√°rio de aparelho Android n√£o qualifica voc√™ automaticamente um especialista no sistema. Conhecer a anatomia de uma interface Android (e no que ela difere de outros sistemas operacionais como iOS e Windows Phone) √© fundamental para criar bons aplicativos. Vamos explorar a diagrama√ß√£o padr√£o de um aplicativo.&lt;/p&gt;

&lt;h3 id=&#34;action-bar-barra-de-a√ß√£o&#34;&gt;Action Bar (Barra de A√ß√£o)&lt;/h3&gt;

&lt;p&gt;A barra de a√ß√£o √© equivalente a se√ß√£o header de um site: ¬†logotipo, t√≠tulo da p√°gina e itens de navega√ß√£o. Esta barra deve ser flex√≠vel para acomodar √≠cones, menus ou caixas de texto expans√≠veis. O espa√ßo tamb√©m √© utilizado para notifica√ß√µes de itens novos, alertas em geral e trocas de modo de visualiza√ß√£o quando existe esta fun√ß√£o (lista ou grid, por exemplo).&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40477&#34; alt=&#34;action-bar&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/action-bar.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/action-bar.jpg 660w, uploads/2014/01/action-bar-277x168.jpg 277w, uploads/2014/01/action-bar-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;branding&#34;&gt;Branding&lt;/h4&gt;

&lt;p&gt;Este espa√ßo √© destinado a logo ou √≠cone do app.&lt;/p&gt;

&lt;h4 id=&#34;action-icons-√≠cones-de-a√ß√£o&#34;&gt;Action Icons (√çcones de A√ß√£o)&lt;/h4&gt;

&lt;p&gt;Do centro para o canto direito temos Action Icons, ou √≠cones de a√ß√£o. Estes √≠cones servem de atalho para representar a√ß√µes globais frequentes que um usu√°rio poder√° realizar no seu app como buscar uma informa√ß√£o ou compartilhar conte√∫do.&lt;/p&gt;

&lt;p&gt;Normalmente s√£o exibidos de 2 a 5 √≠cones, dependendo do tamanho da √°rea de exibi√ß√£o do aparelho. Se mesmo assim voc√™ achar que n√£o √© suficiente organize as a√ß√µes que n√£o couberem na action bar em um menu complementar dropdown chamado &lt;strong&gt;Action Overflow&lt;/strong&gt; (√≠cone de tr√™s quadradinhos pequenos). Lembre-se de exibir apenas os √≠cones de a√ß√µes que est√£o dispon√≠veis naquele momento. Se n√£o √© poss√≠vel realizar uma determinada a√ß√£o dentro de uma tela, esconda o √≠cone!&lt;/p&gt;

&lt;p&gt;√â muito importante que cada √≠cone represente claramente o conceito. O ideal seria sempre procurar no &lt;a href=&#34;http://developer.android.com/downloads/design/Android_Design_Icons_20131106.zip&#34; title=&#34;Android Design Icons&#34;&gt;conjunto de √≠cones oficiais&lt;/a&gt; se j√° existe um √≠cone padr√£o do Android para a a√ß√£o que voc√™ deseja realizar. Desta maneira voc√™ garante a consist√™ncia do aplicativo e que o usu√°rio n√£o precise pensar muito para deduzir o que o seu √≠cone faz, j√° que ele j√° viu a mesma a√ß√£o em outros lugares. Uma das dicas de ouro da documenta√ß√£o oficial √©: se parece igual, deve funcionar igual. A√ß√µes como compartilhar ou buscar, por exemplo, devem usar os √≠cones padr√µes. Voc√™ pode personalizar estes √≠cones trocando cores e adicionando efeitos sutis para que reflita o seu branding, mas sem que isto afete a ess√™ncia do √≠cone.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/downloads/&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-40494&#34; alt=&#34;action-icons-android&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/action-icons-android.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/action-icons-android.jpg 660w, uploads/2014/01/action-icons-android-277x168.jpg 277w, uploads/2014/01/action-icons-android-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;navigation-drawer-gaveta-de-navega√ß√£o&#34;&gt;Navigation Drawer (Gaveta de Navega√ß√£o)&lt;/h4&gt;

&lt;p&gt;Menu de navega√ß√£o que surge da esquerda para a direita, cobrindo o conte√∫do do aplicativo. Para abrir a gaveta basta clicar no √≠cone (tr√™s risquinhos) ao lado esquerdo do logotipo.&lt;/p&gt;

&lt;h4 id=&#34;contextual-action-bar-barra-de-a√ß√£o-contextual&#34;&gt;Contextual Action Bar (Barra de A√ß√£o Contextual)&lt;/h4&gt;

&lt;p&gt;A Contextual Action Bar, ou CAB para os √≠ntimos, √© uma barra de a√ß√£o tempor√°ria que substitui os itens padr√µes durante uma determinada tarefa. Exemplo: exibir quantos elementos de uma lista foram selecionados.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40480&#34; alt=&#34;contextal-action-bar&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/contextal-action-bar.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/contextal-action-bar.jpg 660w, uploads/2014/01/contextal-action-bar-277x168.jpg 277w, uploads/2014/01/contextal-action-bar-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;das-diferentes-maneiras-de-voltar&#34;&gt;Das diferentes maneiras de voltar&lt;/h4&gt;

&lt;p&gt;Uma das principais caracter√≠sticas do Android √© que o bot√£o voltar est√° sempre presente, seja como um bot√£o f√≠sico no hardware ou um equivalente virtual do sistema. A fun√ß√£o deste bot√£o √© voltar para a √∫ltima tela em ordem cronol√≥gica e isto pode significar, muitas vezes, sair do aplicativo atual. O bot√£o de voltar, portanto, reflete sempre o seu hist√≥rico de navega√ß√£o. Seria redundante ter a mesma fun√ß√£o repetida dentro do seu aplicativo&amp;#8230; Ao inv√©s disto podemos fazer uso do bot√£o¬†&lt;strong&gt;Up&lt;/strong&gt;, simbolizado por uma seta voltada para a esquerda na barra de a√ß√£o ao lado do logotipo. A id√©ia deste √≠cone √© voltar para uma tela relacionada, de n√≠vel acima da atual. Vamos supor que voc√™ esteja na dashboard do Youtube, por exemplo e navegou para uma lista de reprodu√ß√µes de v√≠deos. O Up faria voc√™ voltar da tela &amp;#8220;filha&amp;#8221; para a tela &amp;#8220;pai&amp;#8221;. Ou seja, de volta da lista de v√≠deos para a dashboard. Por isto que, na tela inicial de uma aplicativo, n√£o existe bot√£o up pois voc√™ j√° est√° no primeiro n√≠vel da hierarquia.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40486&#34; alt=&#34;up-back&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/up-back.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/up-back.jpg 660w, uploads/2014/01/up-back-277x168.jpg 277w, uploads/2014/01/up-back-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;bottom-bar-barra-inferior&#34;&gt;Bottom Bar (barra inferior)&lt;/h3&gt;

&lt;p&gt;Espa√ßo localizado no rodap√© do aplicativo de maneira fixa. Serve como um complemento da barra de a√ß√£o, exibindo outros √≠cones de a√ß√£o que voc√™ julgar importante.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40479&#34; alt=&#34;bottom-bar&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/bottom-bar.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/bottom-bar.jpg 660w, uploads/2014/01/bottom-bar-277x168.jpg 277w, uploads/2014/01/bottom-bar-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;tipos-de-navega√ß√£o&#34;&gt;Tipos de Navega√ß√£o&lt;/h2&gt;

&lt;p&gt;J√° falamos um pouco sobre gavetas de navega√ß√£o, mas existem diversos outros tipos de menu; cada um √© mais apropriado para um tipo de situa√ß√£o. Vamos a eles!&lt;/p&gt;

&lt;h3 id=&#34;fixed-tabs-abas-fixas&#34;&gt;Fixed Tabs (Abas Fixas)&lt;/h3&gt;

&lt;p&gt;As Fixed Tabs ficam no topo do aplicativo, logo abaixo da Barra de A√ß√£o. O conceito aqui √© deixar os itens do menu sempre a vista, para que o usu√°rio possa navegar rapidamente entre as se√ß√µes internas do aplicativo tocando na tab ou atrav√©s de um swipe para esquerda ou para a direta. Este tipo de navega√ß√£o em abas √© ideal para quando voc√™ espera que o usu√°rio alterne entre as telas frequentemente. O contra √© que, por conta das diferen√ßas de largura dos aparelhos, as abas fixas s√≥ acomodam confortavelmente tr√™s itens no m√°ximo.&lt;/p&gt;

&lt;h3 id=&#34;scrollable-tabs-abas-rol√°veis&#34;&gt;Scrollable Tabs (Abas rol√°veis )&lt;/h3&gt;

&lt;p&gt;O funcionamento √© bem parecido com as abas fixas, com a diferen√ßa que o usu√°rio poder√° deslizar para o lado para visualizar mais itens. O recurso combina a praticidade das abas fixas com a possibilidade maior de exibi√ß√£o. Mas n√£o abuse! O ideal √© utilizar de 5 a 7 abas no m√°ximo.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40485&#34; alt=&#34;tabs&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/tabs.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/tabs.jpg 660w, uploads/2014/01/tabs-277x168.jpg 277w, uploads/2014/01/tabs-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;spinners&#34;&gt;Spinners&lt;/h3&gt;

&lt;p&gt;Um Spinner √© um menu drop-down simbolizado por um pequeno tri√¢ngulo no canto inferior direito da √¢ncora. √â comum posicionar um Spinner abaixo do logotipo do aplicativo para sinalizar o menu. Mas voc√™ pode utilizar Spinners sempre que quiser otimizar o espa√ßo ou mostrar diversas op√ß√µes de dados como em um campo de formul√°rio com m√∫ltiplas op√ß√µes (estilo select), alternar entre duas contas de um servi√ßo ou escolher datas em um calend√°rio.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40484&#34; alt=&#34;spinner&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/spinner.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/spinner.jpg 660w, uploads/2014/01/spinner-277x168.jpg 277w, uploads/2014/01/spinner-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;navigation-drawer-gaveta-de-navega√ß√£o-1&#34;&gt;Navigation Drawer (Gaveta de Navega√ß√£o)&lt;/h3&gt;

&lt;p&gt;Menu que escorrega da esquerda para a direita. √â √≥timo para navega√ß√£o complexas (3 ou mais itens) j√° que √© um menu global que pode ser acessado de qualquer lugar do app. √â especialmente √∫til para navega√ß√£o multinivel e para economia de espa√ßo da tela. O ponto contra √© que a gaveta fica sempre escondida, o que leva um pouco mais de tempo para o usu√°rio descobrir e acessar.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40483&#34; alt=&#34;navigation-drawer&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/navigation-drawer.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/navigation-drawer.jpg 660w, uploads/2014/01/navigation-drawer-277x168.jpg 277w, uploads/2014/01/navigation-drawer-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;n√£o-misture-tipos-de-navega√ß√£o&#34;&gt;N√£o misture tipos de navega√ß√£o&lt;/h3&gt;

&lt;p&gt;Evite misturar diversos tipos de navega√ß√£o ao mesmo tempo pois isto pode confundir o usu√°rio. Prefira basear sua escolha em crit√©rios como quantidade de itens, frequ√™ncia de uso e import√¢ncia.&lt;/p&gt;

&lt;h3 id=&#34;conte√∫do-primeiro&#34;&gt;Conte√∫do primeiro!&lt;/h3&gt;

&lt;p&gt;Alguns aplicativos mais antigos exibem um layout estilo dashboard mostrando apenas a navega√ß√£o na tela inicial. Esta √© uma abordagem confusa que afasta as pessoas do que elas realmente vieram ali para ver: o conte√∫do! Valorize o tempo do seu usu√°rio e prefira sempre utilizar uma abordagem mais direta mostrando na tela inicial o que voc√™ tiver de mais interessante para oferecer.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40495&#34; alt=&#34;distribuicao-de-conteudo&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/distribuicao-de-conteudo.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/distribuicao-de-conteudo.jpg 660w, uploads/2014/01/distribuicao-de-conteudo-277x168.jpg 277w, uploads/2014/01/distribuicao-de-conteudo-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;n√£o-reutilize-layouts-de-outros-sistemas&#34;&gt;N√£o reutilize layouts de outros sistemas&lt;/h2&gt;

&lt;p&gt;Sim. Isto significa que para dar suporte a diversas plataformas voc√™ ter√° que repensar todo o design do seu app! E o motivo para isto acontecer √© que os sistemas operacionais m√≥veis, embora tenham praticamente as mesmas funcionalidades, s√£o estruturados de maneira completamente diferente.&lt;/p&gt;

&lt;p&gt;S√≥ a t√≠tulo de compara√ß√£o vamos dar uma olhadinha no aplicativo do WhatsApp nas tr√™s plataformas. As diferen√ßas j√° come√ßam nos √≠cones de lan√ßamento do aplicativo. No Android eles podem possuir qualquer formato e normalmente tem algum efeito de profundidade j√° que s√£o usados arquivos com transpar√™ncia. J√° no iPhone eles s√£o quadrados com cantos arredondados e no Windows Phone s√£o tiles animados que mostram informa√ß√µes em tempo real e podem ter cores e tamanhos diferentes. Ufa! E nem abrimos o app ainda‚Ä¶&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40482&#34; alt=&#34;launcher-icons&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/launcher-icons.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/launcher-icons.jpg 660w, uploads/2014/01/launcher-icons-277x168.jpg 277w, uploads/2014/01/launcher-icons-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Por dentro as diferen√ßas v√£o ficando mais expressivas. A fun√ß√£o de voltar, que j√° comentamos neste artigo, √© um exemplo disto. No Android e no Windows Phone existem bot√µes do sistema espec√≠ficos para esta fun√ß√£o. O iPhone s√≥ possui o bot√£o Home&amp;#8230; Pra facilitar a vida do usu√°rio e acrescentar esta fun√ß√£o os aplicativos normalmente ocupam o canto superior esquerdo com uma seta ou bot√£o rotulado voltar. Esta √© exatamente a √°rea de branding / gaveta de navega√ß√£o no Android. J√° no Windows Phone neste cantinho normalmente fica marcado o nome do app e logo abaixo a navega√ß√£o (que √© toda tipogr√°fica e comandada por swipes). As cores e texturas dos sistemas tamb√©m s√£o bem diferentes.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40488&#34; alt=&#34;whats-app&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/whats-app.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/whats-app.jpg 660w, uploads/2014/01/whats-app-277x168.jpg 277w, uploads/2014/01/whats-app-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Os √≠cones de a√ß√£o s√£o outra diferen√ßa crucial. No Android eles devem ficar na barra superior, j√° no iPhone e Windows Phone estes √≠cones s√£o posicionados em uma barra fixa no rodap√©‚Ä¶ Os s√≠mbolos e formatos tamb√©m s√£o bem diferentes.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40481&#34; alt=&#34;icones&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/icones.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/icones.jpg 660w, uploads/2014/01/icones-277x168.jpg 277w, uploads/2014/01/icones-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Fora as diferen√ßas estil√≠sticas da user interface como cantos arredondados, gradientes, tipografia, tamanhos e nem vou come√ßar a falar sobre resolu√ß√µes (Spoiler alert: este √© tema do pr√≥ximo artigo).&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-40487&#34; alt=&#34;user-interface&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/01/user-interface.jpg&#34; width=&#34;660&#34; height=&#34;400&#34; srcset=&#34;uploads/2014/01/user-interface.jpg 660w, uploads/2014/01/user-interface-277x168.jpg 277w, uploads/2014/01/user-interface-511x310.jpg 511w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Moral da hist√≥ria: procure sempre planejar o layout levando em conta a experi√™ncia de cada sistema operacional. Explore os pontos fortes de cada um, tente contornar as fraquezas e use itens padronizados a seu favor. Seu usu√°rio vai agradecer no final!&lt;/p&gt;

&lt;h2 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;Bem, agora que voc√™ j√° conhece a estrutura dos aplicativos Android j√° est√° pronto para colocar a m√£o na massa e come√ßar a criar seus pr√≥prios apps. No pr√≥ximo artigo vamos abordar aspectos mais t√©cnicos: descubra o que diabos √© um DP, aprenda sobre densidade de pixels e resolu√ß√£o, organize seus assets e veja quais s√£o os entreg√°veis. At√© a pr√≥xima!&lt;/p&gt;

&lt;h3 id=&#34;saiba-mais&#34;&gt;Saiba mais&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/index.html&#34; title=&#34;Android Design&#34;&gt;Documenta√ß√£o Oficial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.mengto.com/how-to-design-for-android-devices/&#34; title=&#34;Hot to design for Android devices&#34;&gt;How to design for Android devices&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Batalha das App Stores ‚Äì Conhe√ßa os Pontos Fortes e Previs√µes</title>
      <link>https://tableless.github.io/hugo-public/a-batalha-das-app-stores-conheca-os-pontos-fortes-e-previsoes/</link>
      <pubDate>Wed, 04 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/a-batalha-das-app-stores-conheca-os-pontos-fortes-e-previsoes/</guid>
      <description>&lt;p&gt;Os celulares est√£o cada vez mais conectados com a Internet. Com a invas√£o do iPhone e tamb√©m dos smartphones dotados com a &lt;strong&gt;plataforma Android&lt;/strong&gt;, um novo e extenso leque de op√ß√µes foi aberto: agora √© poss√≠vel fazer download de jogos e in√∫meros &lt;strong&gt;aplicativos&lt;/strong&gt; para as mais diversas fun√ß√µes direto de lojas online, as chamadas &lt;strong&gt;app stores&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Para voc√™ que se interessa pelo tema ou est√° em d√∫vida sobre quais os pontos fortes de cada plataforma, a Ponto Frio disponibilizou na internet um &lt;strong&gt;infogr√°fico sobre app stores&lt;/strong&gt; que re√∫ne diversas informa√ß√µes relevantes e interessantes sobre o tema.&lt;/p&gt;

&lt;p&gt;O conte√∫do aponta, por exemplo, quais os &lt;strong&gt;aplicativos mais vendidos&lt;/strong&gt; na Apple Store (iPhone), cujo l√≠der √© o game Angry Birds, e tamb√©m na Android Market, liderada pelo jogo Cut the Rope. Outra informa√ß√£o muito √∫til √© a m√©dia de pre√ßo dos conte√∫dos, sendo a Apple a mais barata, com US$ 2,75, e o Google um pouco mais caro, com US$ 4,50 de m√©dia. No entanto, apesar de custar mais, 65% de todo o conte√∫do Android √© gr√°tis, contra apenas 30% da Apple App Store.&lt;/p&gt;

&lt;p&gt;J√° com rela√ß√£o ao &lt;strong&gt;n√∫mero de downloads&lt;/strong&gt; de cada app store, tamb√©m √© poss√≠vel encontrar n√∫meros muito interessantes, capazes at√© de prever tend√™ncias para os pr√≥ximos anos. Por m√™s, o Android registra cerca de 640 milh√µes de downloads em todo mundo. A Apple registra um n√∫mero maior que o dobro levando em conta o mesmo per√≠odo de tempo (30 dias): 1,45 bilh√£o de downloads. Para os pr√≥ximos anos, √© previsto um enorme crescimento do Android, que deve empatar no n√∫mero de vendas com a Apple em maio de 2013 e liderar o mercado de downloads j√° em 2014.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://conteudo.pontofrio.com.br/html/infograficos/tablets-a-batalha-das-app-store.html?utm_medium=infografico&amp;amp;utm_campaign=TABLETS_batalha-app-stores&amp;amp;cm_mmc=Infograficos-_-TABLETS-_-infografico-_-batalha-app-stores&#34;&gt;&lt;img style=&#34;float: center;margin: 2px&#34; src=&#34;http://conteudo.pontofrio.com.br/html/infograficos/tablets/tablets-batalha-app-stores-500.jpg&#34; alt=&#34;Infogr√°fico: A batalha das App Stores | PontoFrio.com&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Infogr√°fico: &lt;a href=&#34;http://conteudo.pontofrio.com.br/html/infograficos/tablets-a-batalha-das-app-store.html?utm_medium=infografico&amp;amp;utm_campaign=TABLETS_batalha-app-stores&amp;amp;cm_mmc=Infograficos-_-TABLETS-_-infografico-_-batalha-app-stores&#34;&gt;A batalha das App Stores&lt;/a&gt; | &lt;a href=&#34;http://pontofrio.com.br?utm_medium=infografico&amp;amp;utm_campaign=TABLETS_batalha-app-stores&amp;amp;cm_mmc=Infograficos-_-TABLETS-_-infografico-_-batalha-app-stores&#34;&gt;PontoFrio.com&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Style Guide para Android</title>
      <link>https://tableless.github.io/hugo-public/style-guide-para-android/</link>
      <pubDate>Fri, 13 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/style-guide-para-android/</guid>
      <description>&lt;p&gt;A &lt;a href=&#34;http://www.wired.com/?utm_source=TablelessComBr&amp;amp;utm_medium=postLink&amp;amp;utm_campaign=TablelessLink&#34;&gt;Wired&lt;/a&gt; &lt;a href=&#34;http://www.wired.com/gadgetlab/2012/01/android-design-matias-duarte/?utm_source=TablelessComBr&amp;amp;utm_medium=postLink&amp;amp;utm_campaign=TablelessLink&#34;&gt;entrevistou o Matias Duarte&lt;/a&gt;, o cara por tr√°s (ui!) do planejamento de UX do Android.&lt;/p&gt;

&lt;p&gt;O Google &lt;a href=&#34;http://developer.android.com/design/index.html?utm_source=TablelessComBr&amp;amp;utm_medium=postLink&amp;amp;utm_campaign=TablelessLink&#34;&gt;lan√ßou recentemente um guia de estilo para desenvolvedores do Android&lt;/a&gt;. Neste artigo eles conversam sobre como √© dif√≠cil manter um sistema operacional para mobiles que pode ser instalado e portado para praticamente qualquer dispositivo. Quando um sistema tem essa flexibilidade, as chances da usabilidade e acessibilidade das aplica√ß√µes e tamb√©m do sistema tem grandes chances de dar carquinha. Outro problema √© desenvolver aplica√ß√µes para um sistema que vive em constante atualiza√ß√£o. O style guide criado pelo Google vem para tentar facilitar todo o processo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://developer.android.com/design/index.html?utm_source=TablelessComBr&amp;amp;utm_medium=postLink&amp;amp;utm_campaign=TablelessLink&#34;&gt;O site&lt;/a&gt; √© cheio de dicas sobre a interface do sistema, sempre se baseando na √∫ltima vers√£o do sistema, atualmente a 4.0, Ice Cream Sandwich. O site √© praticamente um pequeno manual de boas pr√°ticas e guias para os desenvolvedores fazerem um bom trabalho visual nos seus apps.&lt;/p&gt;

&lt;p&gt;√â uma boa iniciativa que veio tarde. A Apple e a Microsoft martelam esse assunto faz tempo em seus sistemas. Eu j√° fui usu√°rio dos tr√™s sistemas e de longe o Android tinha as Apps com os visuais mais estranhos. Acho que agora o Google dar√° um jeito na bagun√ßa.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.android.com/guide/practices/ui_guidelines/index.html&#34;&gt;User Interface Guideline do Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/hh202915(v=VS.92).aspx&#34;&gt;User Experience Design Guidelines for Windows Phone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/MobileHIG/Introduction/Introduction.html&#34;&gt;iOS Human Interface Guidelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Versionamento inteligente para mobiles</title>
      <link>https://tableless.github.io/hugo-public/versionamento-inteligente-para-mobiles/</link>
      <pubDate>Wed, 20 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/versionamento-inteligente-para-mobiles/</guid>
      <description>&lt;p&gt;O iPhone fez a festa dele. Todo mundo gostou do que viu e usou. Acontece que n√£o s√≥ de iPhone vive o homem, e h√° pessoas por a√≠ que n√£o gostam do aparelho por motivos diversos. H√° mercado para todos e por isso √© natural que apare√ßam outros aparelhos com novos sistemas. Acontece que o lan√ßamento do iPhone criou uma moda de &lt;a href=&#34;http://tableless.com.br/porque-so-para-o-iphone&#34;&gt;criar vers√µes dos sites espec√≠ficas para ele&lt;/a&gt;. No come√ßo isso foi √≥timo. Mas agora, isso priva diversos celulares similares ao iPhone de terem uma boa experi√™ncia de navega√ß√£o. √â o caso de usu√°rios de Android.&lt;/p&gt;

&lt;p&gt;O Android √© o novo sistema operacional para mobiles do Google. At√© para um AppleBoy, como eu, o sistema √© interessante. Tem a interface bem acabada, app&amp;#8217;s amig√°veis e etc. Ele faz muito bem o papel dele. O Engine de renderiza√ß√£o do browser dele √© WebKit. O mesmo engine que o Safari Mobile utiliza. E n√£o estou falando de vers√µes antigas do Webkit como alguns outros celulares utilizam. O Android utiliza as vers√µes mais atuais do Webkit, com suporte extenso a CSS e HTML. Portanto, um site que teoricamente foi feito apenas para iPhone, pode ser visualizado da mesma maneira pelos usu√°rios de Android.&lt;/p&gt;

&lt;p&gt;A√≠ entra outra quest√£o: provavelmente voc√™ deve ter pensado que seria apenas fazer um script de detec√ß√£o de browser, capturando as visitas de Safari Mobile e Android e pronto. √â a√≠ que voc√™ se engana. J√° h√° v√°rios outros aparelhos que est√£o utilizando engines parecidas e que podem renderizar sua &amp;#8220;vers√£o de iphone&amp;#8221;. Exatamente por isso, que voc√™ precisa fazer um filtro por caracter√≠sticas e n√£o por browser. Fazemos isso utilizando &lt;a href=&#34;http://tableless.com.br/introducao-sobre-media-queries&#34;&gt;Media Queries&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As Media Queries permitem fazer um pequeno filtro, onde definimos as caracter√≠sticas do dispositivo que acessar√° a p√°gina. Com isso, podemos definir um CSS espec√≠fico para aquele grupo de dispositivos que se encaixaram no seu filtro. Veja um exemplo abaixo:&lt;/p&gt;

&lt;pre lang=&#34;css&#34; line=&#34;1&#34;&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;style.css&#34; type=&#34;text/css&#34; media=&#34;screen and (min-width:481px)&#34; /&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;mob.css&#34; type=&#34;text/css&#34; media=&#34;screen and (max-width:480px)&#34; /&gt;
&lt;/pre&gt;

&lt;p&gt;A media que fiz √© muito simples de ser entendida. A primeira linha engloba dispositivos que tem tela colorida, com uma resolu√ß√£o de largura m√≠nima de 481px, isso inclui seu monitor, notebook e etc. A outra linha engloba dispositivos com uma largura m√°xima de 480px, ou seja, iPhones, Androids e dispositivos que seguem esse mesmo esquema de resolu√ß√£o e etc.&lt;/p&gt;

&lt;p&gt;Dessa forma, voc√™ filtra os dispositivos e n√£o os browsers dos aparelhos. Isso previne que algum celular, t√£o bom quanto o iPhone e o Android fiquem de fora de ter uma boa experi√™ncia de uso. Quer fazer um teste interessante? Se voc√™ estiver utilizando um browser que aceita media queries, redimensione a janela para uma largura menor que 480px. Voc√™ ver√° o Tableless chaveando os estilos automaticamente. Perceba que alguns elementos s√£o reformatados e outros retirados do layout.&lt;/p&gt;

&lt;p&gt;O filtro ainda n√£o est√° completo porque n√£o estamos contemplando os aparelhos que n√£o aceitam meda queries, mas s√£o mobiles. Para isso, usar√≠amos os &lt;a href=&#34;http://tableless.com.br/o-que-sao-media-types&#34;&gt;Media Types&lt;/a&gt;, com valor de &lt;strong&gt;handheld&lt;/strong&gt;. Embora celulares que aceitem os Media Types n√£o tenham um bom suporte de CSS, podemos fazer pelo menos uma formata√ß√£o de texto, cor e background. Celulares que utilizam Opera Mini, ter√£o uma √≥tima experi√™ncia.&lt;/p&gt;

&lt;p&gt;√â sempre aquela mesma velha id√©ia: dar a melhor experi√™ncia para todos os meios de acesso. Sempre.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>