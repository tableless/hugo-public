<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Googlemaps on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/googlemaps/index.xml</link>
    <description>Recent content in Googlemaps on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/googlemaps/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Utilizando o MarkerClusterer no Google Maps</title>
      <link>https://tableless.github.io/hugo-public/utilizando-o-markerclusterer-google-maps/</link>
      <pubDate>Wed, 07 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/utilizando-o-markerclusterer-google-maps/</guid>
      <description>

&lt;p&gt;Seja você desenvolvedor ou não, temos que admitir o poder do Google Maps. É bem difícil encontrar alguém hoje em dia que não tenha acessado pelo menos uma vez o famoso &lt;em&gt;Maps&lt;/em&gt; para ver onde ficava um determinado lugar.&lt;/p&gt;

&lt;p&gt;Esses dias me deparei novamente com o excelente artigo do Thulio Philipe sobre a &lt;a href=&#34;http://tableless.com.br/api-google-maps-v3/&#34;&gt;API do Google Maps V3&lt;/a&gt; e resolvi escrever um pouco sobre um recurso chamado &lt;strong&gt;MarkerClusterer&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;o-que-é-o-markerclusterer&#34;&gt;O que é o MarkerClusterer?&lt;/h2&gt;

&lt;p&gt;Segundo o Google, trata-se de uma solução para o problema de muitos &lt;em&gt;pontos&lt;/em&gt; em um mapa. Indo direto ao ponto, ele agrupa pontos (&lt;em&gt;markers&lt;/em&gt;) que são muito próximos uns dos outros no mapa e renderiza um ponto diferente com o número de ícones agrupados.&lt;/p&gt;

&lt;p&gt;Confuso? Visualmente fica mais fácil para explicar. Imagine que tivéssemos um mapa assim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/exemplo-antes-MarkerClusterer.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-42294&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/exemplo-antes-MarkerClusterer.png&#34; alt=&#34;Exemplo de mapa simples sem a utilização do MarkerClusterer&#34; width=&#34;624&#34; height=&#34;424&#34; srcset=&#34;uploads/2014/04/exemplo-antes-MarkerClusterer.png 624w, uploads/2014/04/exemplo-antes-MarkerClusterer-400x271.png 400w&#34; sizes=&#34;(max-width: 624px) 100vw, 624px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Temos alguns pontos que são bem próximos uns dos outros enquanto outros são mais distantes. Aplicando o MarkerClusterer ficaria assim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/exemplo-depois-MarkerClusterer.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-42295&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/exemplo-depois-MarkerClusterer.png&#34; alt=&#34;Exemplo de mapa simples com a utilização do MarkerClusterer&#34; width=&#34;624&#34; height=&#34;424&#34; srcset=&#34;uploads/2014/04/exemplo-depois-MarkerClusterer.png 624w, uploads/2014/04/exemplo-depois-MarkerClusterer-400x271.png 400w&#34; sizes=&#34;(max-width: 624px) 100vw, 624px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Você pode estar pensando a mesma coisa que pensei a primeira vez que vi o exemplo: &lt;em&gt;&amp;#8220;Ah, nem precisava agrupar os itens! Tem poucos no mapa!&amp;#8221;&lt;/em&gt; Pode ser. Agora imagine que tivéssemos um mapa assim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/exemplo2-antes-MarkerClusterer.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-42292&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/exemplo2-antes-MarkerClusterer.png&#34; alt=&#34;Exemplo de mapa mais complexo com a utilização do MarkerClusterer&#34; width=&#34;624&#34; height=&#34;424&#34; srcset=&#34;uploads/2014/04/exemplo2-antes-MarkerClusterer.png 624w, uploads/2014/04/exemplo2-antes-MarkerClusterer-400x271.png 400w&#34; sizes=&#34;(max-width: 624px) 100vw, 624px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pois é! De acordo com o próprio Google, um mapa assim acaba por se tornar lento pelo fato de um ponto no mapa ser uma combinação de vários elementos no DOM. Logo, quanto mais pontos no mapa, maior o trabalho no navegador para renderização. O legal é que existe até um &lt;a href=&#34;http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/examples/speed_test_example.html?&#34;&gt;teste de velocidade&lt;/a&gt; comparando um mapa com e sem o uso do MarkerClusterer.&lt;/p&gt;

&lt;p&gt;Como ficaria com a utilização do MarkerClusterer:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/exemplo2-depois-MarkerClusterer.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-42293&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/exemplo2-depois-MarkerClusterer.png&#34; alt=&#34;Exemplo de mapa mais complexo sem a utilização do MarkerClusterer&#34; width=&#34;624&#34; height=&#34;424&#34; srcset=&#34;uploads/2014/04/exemplo2-depois-MarkerClusterer.png 624w, uploads/2014/04/exemplo2-depois-MarkerClusterer-400x271.png 400w&#34; sizes=&#34;(max-width: 624px) 100vw, 624px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pode ser até que a questão da &lt;strong&gt;perfomance&lt;/strong&gt; não influencie tanto no seu projeto, mas um ponto que deve ser considerado é a &lt;strong&gt;usabilidade&lt;/strong&gt; e &lt;strong&gt;experiência do usuário&lt;/strong&gt; ao interagir com o mapa. &lt;strong&gt;Se colocar no lugar do usuário&lt;/strong&gt; nessa hora é fundamental. Pra localizar determinado ponto no mapa: fica mais fácil com todos visíveis próximos uns dos outros ou agrupados em grupos maiores? Logicamente não existe um certo ou errado pois isso vai variar de projeto para projeto, mas vale a discussão com os membros do time.&lt;/p&gt;

&lt;p&gt;As imagens acima foram tiradas &lt;a href=&#34;https://developers.google.com/maps/articles/toomanymarkers?hl=pt-br#markerclusterer&#34;&gt;daqui&lt;/a&gt; onde também é possível ler mais a respeito desse recurso.&lt;/p&gt;

&lt;p&gt;Peguei um exemplo do próprio Google pra podermos visualizar a diferença entre um mapa &lt;a href=&#34;http://codepen.io/raphaelfabeni/full/hdjgA&#34;&gt;sem a utilização do MarkerClusterer&lt;/a&gt; e &lt;a href=&#34;http://codepen.io/raphaelfabeni/full/zjcFd&#34;&gt;com a utilização do recurso&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dando uma olhada no código do exemplo com a utilização do recurso temos o seguinte:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div id=&#34;map-container&#34;&amp;gt;&amp;lt;div id=&#34;map&#34;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;!-- Scripts --&amp;gt;
&amp;lt;script src=&#34;http://maps.google.com/maps/api/js?sensor=false&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&#34;http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/data.json&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&#34;http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/markerclusterer.js&#34;&amp;gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;body { margin: 0; }

#map-container {
  -webkit-box-shadow: rgba(64, 64, 64, 0.5) 0 2px 5px;
     -moz-box-shadow: rgba(64, 64, 64, 0.5) 0 2px 5px;
          box-shadow: rgba(64, 64, 64, 0.1) 0 2px 5px;
  width: 600px;
}

#map {
  width: 600px;
  height: 400px;
}
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;JS&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;function initialize() {
  var center = new google.maps.LatLng(48.091534, 15.5116439);
  
  var map = new google.maps.Map(document.getElementById(&#39;map&#39;), {
    zoom: 3,
    center: center,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });

  var markers = [];
  for (var i = 0; i &amp;lt; 100; i++) {
    var dataPhoto = data.photos[i];
    var latLng = new google.maps.LatLng(dataPhoto.latitude,
              dataPhoto.longitude);
    var marker = new google.maps.Marker({
      position: latLng
    });
    markers.push(marker);
  }
  var markerCluster = new MarkerClusterer(map, markers);
}

google.maps.event.addDomListener(window, &#39;load&#39;, initialize);
&lt;/pre&gt;

&lt;p&gt;A parte de HTML e CSS é bem tranquila e, se pararmos pra olhar, até a parte do JS é de fácil entendimento.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Primeiro é criado o objeto do mapa com seus parâmetros e ele é passado à variável &lt;code&gt;map&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Depois é criado um array vazio que vai armazenar todos os &lt;em&gt;markers.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Logo após é executado um &lt;code&gt;for&lt;/code&gt; que vai iterar pelo JSON que contém as informações dos pontos e, adicionar cada ponto no array que criamos acima.&lt;/li&gt;
&lt;li&gt;Nesse momento é criado o objeto &lt;em&gt;MarkerClusterer&lt;/em&gt; passando como parâmetros o array contendo todos os pontos do JSON e o mapa.&lt;/li&gt;
&lt;li&gt;Por fim, o mapa é iniciado no &lt;em&gt;load&lt;/em&gt; da página.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;É isso pessoal, a idéia era dar uma passada geral sobre o recurso que pode ser útil para alguém que for mexer com mapas que possuem muitos pontos!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>API Google Maps V3</title>
      <link>https://tableless.github.io/hugo-public/api-google-maps-v3/</link>
      <pubDate>Fri, 10 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/api-google-maps-v3/</guid>
      <description>

&lt;p&gt;Neste post irei falar um pouco sobre a &lt;a title=&#34;API Google Maps V3&#34; href=&#34;https://developers.google.com/maps/documentation/javascript/?hl=pt-BR&#34; target=&#34;_blank&#34;&gt;API Google Maps V3&lt;/a&gt;, que sofreu atualizações e veio com algumas melhorias e recursos adicionais para dispositivos móveis e desktops.&lt;/p&gt;

&lt;p&gt;No último projeto que participei, o designer incluiu no layout um mapa com width: 100%. Até ai nada demais, não é? Fui no Google Maps, digitei o endereço do local e incorporei o mapa ao meu projeto com aquele iframe lindo cheio de tags inúteis. Não é errado usar o embed do Google. É simples de incorporar no seu projeto, é relativamente fácil de manipular e deixar as dimensões do jeito que quiser, mas o código não é aquela coisa linda.&lt;/p&gt;

&lt;p&gt;Vamos ao que interessa. Irei descrever abaixo o passo a passo de como eu cheguei &lt;a title=&#34;Resultado do mapa personalizado / Github&#34; href=&#34;http://thulioph.github.io/mapa/&#34; target=&#34;_blank&#34;&gt;neste resultado&lt;/a&gt;. Depois de ler este post você conseguirá brincar bastante, personalizando o quanto quiser o seu mapa.&lt;/p&gt;

&lt;h2 id=&#34;html&#34;&gt;HTML&lt;/h2&gt;

&lt;p&gt;No HTML eu criei uma div que receberá o mapa.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div id=&#34;mapa&#34;&amp;gt;&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;h2 id=&#34;css&#34;&gt;CSS&lt;/h2&gt;

&lt;p&gt;Estilizei minha div determinando uma largura, altura e uma borda para melhor visualizá-la.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;#mapa{
  width: 100%; 
  height: 500px; 
  border: 1px solid #ccc;
}
&lt;/pre&gt;

&lt;p&gt;Criei um arquivo com o nome de &lt;strong&gt;mapa.js&lt;/strong&gt; onde terá todas as configurações e parâmetros do mapa e executei a chamada no html, que agora está com essa cara:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!doctype html&amp;gt;
 &amp;lt;html lang=”pt,BR”&amp;gt;
  &amp;lt;head&amp;gt;
   &amp;lt;meta charset=”UTF-8”&amp;gt;
   &amp;lt;title&amp;gt;API Google Maps V3&amp;lt;/title&amp;gt;
   &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;css/mapa.css&#34; &amp;gt;
   &amp;lt;script src=”js/mapa.js”&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
  &amp;lt;div id=”mapa”&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;h2 id=&#34;js-criando-minha-chave-api&#34;&gt;JS/Criando minha chave API&lt;/h2&gt;

&lt;p&gt;Para começar a brincar será preciso criar uma chave de API, de acordo com as normas do Google, esta chave é necessária para suas aplicações serem monitoradas e terem um “cadastro”, assim o google poderá entrar em contato com você com relação a sua aplicação caso seja necessário. Como crio uma chave?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Entre no site de &lt;a href=&#34;https://code.google.com/apis/console/&#34; title=&#34;Console de APIs / Google&#34; target=&#34;_blank&#34;&gt;Console de APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clique no lado esquerdo em &lt;strong&gt;Serviços&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Ative o serviço &lt;strong&gt;API do Google Maps v3&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;No menu esquerdo clique no link &lt;strong&gt;acesso á api&lt;/strong&gt;, a chave de acesso estará disponível nesta página na sessão &lt;strong&gt;Acesso Simples a API&lt;/strong&gt;;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;js-exibindo-um-mapa-simples&#34;&gt;JS/Exibindo um mapa simples&lt;/h2&gt;

&lt;p&gt;Agora que você já tem uma chave pode iniciar a brincadeira, e a primeira coisa a se fazer é mostrar o mapa do local no html. Como funciona?&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function initialize() {

// Exibir mapa;
  var myLatlng = new google.maps.LatLng(-8.0631495, -34.87131120000004);
  var mapOptions = {
  zoom: 17,
  center: myLatlng,
  mapTypeId: google.maps.MapTypeId.ROADMAP
}

// Exibir o mapa na div #mapa;
  var map = new google.maps.Map(document.getElementById(“mapa”), mapOptions);

}
&lt;/pre&gt;

&lt;p&gt;O que foi feito?&lt;/p&gt;

&lt;h3 id=&#34;initialize&#34;&gt;initialize()&lt;/h3&gt;

&lt;p&gt;Função que engloba todos os parâmetros e configurações do mapa.&lt;/p&gt;

&lt;h3 id=&#34;mylatlng&#34;&gt;myLatlng&lt;/h3&gt;

&lt;p&gt;Variável onde passo a latitude, longitude (nesta ordem) do local do mapa.&lt;/p&gt;

&lt;h3 id=&#34;var-mapoptions&#34;&gt;var mapOptions = {}&lt;/h3&gt;

&lt;p&gt;Objeto onde contém as variáveis de inicialização do mapa.&lt;/p&gt;

&lt;h3 id=&#34;zoom&#34;&gt;zoom&lt;/h3&gt;

&lt;p&gt;Define a resolução inicial do mapa, o quanto perto ou longe ele será, os valores podem ir de 0 até qualquer número.&lt;/p&gt;

&lt;h3 id=&#34;center&#34;&gt;center&lt;/h3&gt;

&lt;p&gt;Define que o mapa será em um ponto específico, ponto este passado na variável &lt;strong&gt;myLatlng&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;maptypeid&#34;&gt;mapTypeId&lt;/h3&gt;

&lt;p&gt;define o tipo de mapa que será exibido: &lt;strong&gt;ROADMAP&lt;/strong&gt; &lt;em&gt;mapa padrão&lt;/em&gt;, &lt;strong&gt;SATELLITE&lt;/strong&gt; &lt;em&gt;blocos fotográficos&lt;/em&gt;, &lt;strong&gt;HYBRID&lt;/strong&gt; &lt;em&gt;rodovias, cidades, etc..&lt;/em&gt;, &lt;strong&gt;TERRAIN&lt;/strong&gt; &lt;em&gt;exibe montanhas, rios, etc.&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;var-map&#34;&gt;var map&lt;/h3&gt;

&lt;p&gt;Variável, atribui a ela um novo objeto &lt;strong&gt;Map&lt;/strong&gt; passando as opções definidas no &lt;strong&gt;mapOptions&lt;/strong&gt;;&lt;/p&gt;

&lt;p&gt;Para o mapa aparecer de fato no seu projeto, é preciso inserir o script da api do google maps, mas não vou declarar no html o script vou inseri-lo no meu &lt;strong&gt;mapa.js&lt;/strong&gt; onde ele será carregado de forma assíncrona, melhorando o desempenho. Como faz?&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// Função para carregamento assíncrono
  function loadScript() {
  var script = document.createElement(“script”);
  script.type = “text/javascript”;
  script.src =”http://maps.googleapis.com/maps/api/js?key=SUA_API_KEY&amp;sensor=true_or_false&amp;callback=initialize”;

  document.body.appendChild(script);
}

  window.onload = loadScript;

&lt;/pre&gt;

&lt;p&gt;O que foi feito?&lt;/p&gt;

&lt;h3 id=&#34;loadscript&#34;&gt;loadScript&lt;/h3&gt;

&lt;p&gt;Função que faz este procedimento, ela cria através do js a tag script no seu documento html com todos os parâmetros passados abaixo.&lt;/p&gt;

&lt;p&gt;Criei um elemento script definindo o &lt;strong&gt;type&lt;/strong&gt; e o &lt;strong&gt;src&lt;/strong&gt; do mesmo.&lt;/p&gt;

&lt;h3 id=&#34;atenção&#34;&gt;Atenção!&lt;/h3&gt;

&lt;p&gt;para os parâmetros do &lt;strong&gt;script.src&lt;/strong&gt; onde em &lt;strong&gt;key&lt;/strong&gt; você terá que inserir a sua chave de API, em &lt;strong&gt;sensor=true/false&lt;/strong&gt; você informa se sua aplicação usa algum sensor para determinar a localização do usuário &lt;em&gt;gps&lt;/em&gt; e em &lt;strong&gt;callback=initialize&lt;/strong&gt; você instrui a api para só executar a função &lt;strong&gt;initialize()&lt;/strong&gt; após a api ser totalmente carregada.&lt;/p&gt;

&lt;p&gt;Até agora você conseguiu mostrar o mapa na div que foi declarada no html e carregou de forma assíncrona a API do Google Maps, está duvidando? Veja como ficou o &lt;a href=&#34;https://gist.github.com/thulioph/8150735&#34; title=&#34;Trecho do código até este momento / Gist&#34; target=&#34;_blank&#34;&gt;código até aqui&lt;/a&gt; e teste na sua aplicação. \o/&lt;/p&gt;

&lt;h2 id=&#34;js-modificando-os-controles-do-usuário&#34;&gt;JS/Modificando os controles do usuário&lt;/h2&gt;

&lt;p&gt;Quando acessamos algum mapa no &lt;a href=&#34;https://www.google.com.br/maps/preview&#34; title=&#34;Link para o Google Maps / Google&#34; target=&#34;_blank&#34;&gt;Google Maps&lt;/a&gt; ele nos mostra alguns controles como: &lt;strong&gt;controle de zoom&lt;/strong&gt;, &lt;strong&gt;panorâmico&lt;/strong&gt;, &lt;strong&gt;controle de escala&lt;/strong&gt;, &lt;strong&gt;controle de giro&lt;/strong&gt; e &lt;strong&gt;mapa da visão geral&lt;/strong&gt;, mas você pode personalizar e escolher o que quer disponibilizar para seu usuário. Caso não queira personalizar nada e deixar seu usuário com todas as configurações padrão, possibilitando que o Google futuramente adicione mais controles, não especifique nada, se você se parece comigo e gosta de &amp;#8220;ser do contra&amp;#8221; &lt;em&gt;no bom sentido rsrs&lt;/em&gt; e quer personalizar, vamos lá!&lt;/p&gt;

&lt;p&gt;Para desabilitar todas as configurações automáticas do Google Maps defina a propriedade &lt;strong&gt;disableDefaultUI: true&lt;/strong&gt; no objeto &lt;strong&gt;Map options&lt;/strong&gt;. Você também pode escolher quais controles seu usuário terá acesso, os controles só aceitam valores &lt;em&gt;boolean&lt;/em&gt; e todos definidos dentro de &lt;strong&gt;Map options&lt;/strong&gt;, esses controles são:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;panControl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Controle Panorâmico, seus valores são &lt;em&gt;true or false&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;zoomControl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Controle de zoom, seus valores são &lt;em&gt;true or false&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mapTypeControl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Controle do tipo de mapa, seus valores são &lt;em&gt;true or false&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scaleControl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Controle de Escala, seus valores são &lt;em&gt;true or false&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;streetViewControl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Controle do street view, seus valores são &lt;em&gt;true or false&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;overviewMapControl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Controle de visão geral do mapa, seus valores são &lt;em&gt;true or false&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;No meu exemplo eu desativei o controle panorâmico e agora meu &lt;strong&gt;mapOptions&lt;/strong&gt; ficou desta forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var mapOptions = {
  zoom: 17,
  center: myLatlng,
  panControl: false,
  mapTypeId: google.maps.MapTypeId.ROADMAP
}
&lt;/pre&gt;

&lt;p&gt;Até este momento, você já consegue visualizar o mapa e escolher quais controles seu usuário terá acesso. Não duvide, apenas &lt;a href=&#34;https://gist.github.com/thulioph/8151176&#34; title=&#34;Trecho do código até este momento / Gist.&#34; target=&#34;_blank&#34;&gt;veja como está ficando&lt;/a&gt; e teste! \o&lt;/p&gt;

&lt;h2 id=&#34;js-inserindo-pin-personalizado&#34;&gt;JS/Inserindo Pin Personalizado&lt;/h2&gt;

&lt;p&gt;O marcador do Google Maps é padrão, e você pode alterá-lo e inserir um pin personalizado e dar um efeito a ele. Imagine que você quer colocar no seu site pessoal um mapa do bairro onde você mora e marcar a sua casa com um pin que será uma imagem sua &lt;em&gt;pra que isso? rsrs&lt;/em&gt; vamos lá!&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// Marcador personalizado;
  var image = ‘https://cdn1.iconfinder.com/data/icons/gpsmapicons/blue/gpsmapicons01.png’;
  var marcadorPersonalizado = new google.maps.Marker({
  position: myLatlng,
  map: map,
  icon: image,
  title: ‘Marco Zero - Recife/PE’,
  animation: google.maps.Animation.DROP
});
&lt;/pre&gt;

&lt;p&gt;O que foi feito?&lt;/p&gt;

&lt;h3 id=&#34;new-google-maps-marker&#34;&gt;new google.maps.Marker&lt;/h3&gt;

&lt;p&gt;O construtor capaz de fazer isto.&lt;/p&gt;

&lt;h3 id=&#34;marcadorpersonalizado&#34;&gt;marcadorPersonalizado&lt;/h3&gt;

&lt;p&gt;Variável que recebe algumas propriedades:&lt;/p&gt;

&lt;h4 id=&#34;position&#34;&gt;position&lt;/h4&gt;

&lt;p&gt;especifica a localização do marcador e como eu quero que ele fique na minha localização, informo a variável que contém estas informações &lt;strong&gt;myLatlng&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id=&#34;map&#34;&gt;map&lt;/h4&gt;

&lt;p&gt;Especifica onde o marcador vai ser posicionado &lt;em&gt;não precisa ser declarado, valor opcional&lt;/em&gt;. Caso eu utilize o pin em mais algum local, criei uma variável &lt;strong&gt;image&lt;/strong&gt; informando o caminho do meu pin.&lt;/p&gt;

&lt;h4 id=&#34;icon&#34;&gt;icon&lt;/h4&gt;

&lt;p&gt;Especifica a imagem que será o marcador, aqui você inclui o caminho da imagem podendo ser absoluto ou relativo. A própria api irá redimensionar a imagem para o tamanho padrão.&lt;/p&gt;

&lt;h4 id=&#34;title&#34;&gt;title&lt;/h4&gt;

&lt;p&gt;Especifica o texto que irá aparecer ao encostar o mouse em cima do pin.&lt;/p&gt;

&lt;h4 id=&#34;animation&#34;&gt;animation&lt;/h4&gt;

&lt;p&gt;Define alguma animação já definida pela api do google maps, os possíveis valores são &lt;strong&gt;DROP&lt;/strong&gt; &lt;em&gt;o marcador “cai do céu” para o local indicado&lt;/em&gt; e &lt;strong&gt;BOUNCE&lt;/strong&gt; &lt;em&gt;o marcador fica pulando no local indicado&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Até aqui você está mostrando o mapa, personalizando os controles e modificando o pin para um de seu gosto e de quebra ainda consegue animá-los. &lt;a href=&#34;https://gist.github.com/thulioph/8151788&#34; title=&#34;Trecho do código até este momento / Gist&#34; target=&#34;_blank&#34;&gt;Veja como está ficando&lt;/a&gt; até agora. /o/&lt;/p&gt;

&lt;h2 id=&#34;js-janela-de-informações-no-mapa&#34;&gt;JS/Janela de informações no mapa&lt;/h2&gt;

&lt;p&gt;Em alguns mapas quando o usuário clica no pin do local é aberto uma espécie de balão de texto sobre aquele pin, com algumas informações tipo telefone, e-mail, ou qualquer coisa do gênero. Esta “janela” que se abre é chamada de janela de informações ou &lt;strong&gt;InfoWindow&lt;/strong&gt; &lt;em&gt;nome bastante óbvio rsrs&lt;/em&gt;, agora vamos inseri-la no nosso mapa. Dando continuidade ao exemplo anterior, agora você quer que quando o usuário clique na sua foto do mapa, apareça seus dados para contato, e-mail, telefone, etc. Mãos a obra!&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// Parâmetros do texto que será exibido no clique;
  var contentString = ‘&amp;lt;h2&amp;gt;Marco Zero&amp;lt;/h2&amp;gt;’ + ‘&amp;lt;p&amp;gt;Praça Rio Branco, Recife/PE.&amp;lt;/p&amp;gt;’ + ‘&amp;lt;a href=”http://pt.wikipedia.org/wiki/Pra%C3%A7a_Rio_Branco_(Recife)” target=”_blank”&amp;gt;clique aqui para mais informações&amp;lt;/a&amp;gt;’;

  var infowindow = new google.maps.InfoWindow({
  content: contentString,
  maxWidth: 700
});

// Exibir texto ao clicar no pin;
google.maps.event.addListener(marcadorPersonalizado, ‘click’, function() {
  infowindow.open(map,marcadorPersonalizado);
});

&lt;/pre&gt;

&lt;p&gt;O que foi feito?&lt;/p&gt;

&lt;h3 id=&#34;new-google-maps-infowindow&#34;&gt;new google.maps.InfoWindow&lt;/h3&gt;

&lt;p&gt;Realiza toda a mágica.&lt;/p&gt;

&lt;h3 id=&#34;content&#34;&gt;content&lt;/h3&gt;

&lt;p&gt;Deverá ter uma string de texto ou nó no DOM para exibir na janela. Aqui dentro será inserido o conteúdo que você deseja que apareça no balão de informações. Caso queira utilizar esta string em outro local, criei uma variável com o nome &lt;strong&gt;contentString&lt;/strong&gt; onde inseri as informações do balão.&lt;/p&gt;

&lt;h3 id=&#34;maxwidth&#34;&gt;maxWidth&lt;/h3&gt;

&lt;p&gt;Especifica em pixels a largura máxima do balão de informações. Por padrão a janela se expande para incluir o conteúdo e o texto é quebrado automaticamente, quando se aplica um valor no &lt;strong&gt;maxWidth&lt;/strong&gt; você força um determinado tamanho para ela.&lt;/p&gt;

&lt;h3 id=&#34;atenção-1&#34;&gt;Atenção!&lt;/h3&gt;

&lt;p&gt;É preciso atribuir um evento ao método &lt;strong&gt;infowindow.open&lt;/strong&gt; caso contrário ele não será aberto no clique. O &lt;strong&gt;google.maps.event.addListener&lt;/strong&gt; adiciona um evento de ‘click’ ao &lt;strong&gt;marcadorPersonalizado&lt;/strong&gt;, isso irá disparar o método &lt;strong&gt;infowindow.open&lt;/strong&gt; no &lt;strong&gt;map&lt;/strong&gt; e no &lt;strong&gt;marcadorPersonalizado&lt;/strong&gt;. Agora quando você clicar no pin irá abrir o balão de informações com o conteúdo da variável &lt;strong&gt;contentString&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mais um nível e esse foi tranquilo hein? Agora você já está mostrando o mapa, personalizando os controles e o pin, animando o pin e inseriu um balão de informações no clique do usuário. Confere &lt;a href=&#34;https://gist.github.com/thulioph/8152405&#34; title=&#34;Trecho do código até este momento / Gist&#34; target=&#34;_blank&#34;&gt;como está ficando&lt;/a&gt; o código e vamos para o último passo! \o\ /o/&lt;/p&gt;

&lt;h2 id=&#34;js-modificando-a-cor-do-mapa&#34;&gt;JS/Modificando a cor do mapa&lt;/h2&gt;

&lt;p&gt;Pra completar o design do seu site, você queria pintar o mapa do seu bairro com sua cor favorita que é azul, para isso você precisará criar seu estilo e para inserir um estilo personalizado no seu mapa você precisa saber como é a matriz de estilos padrão para quando combinar os estilos obter o resultado que deseja. Vamos lá?&lt;/p&gt;

&lt;h3 id=&#34;featuretype&#34;&gt;featureType&lt;/h3&gt;

&lt;p&gt;Especifica o tipo de mapa;&lt;/p&gt;

&lt;h3 id=&#34;elementtype&#34;&gt;elementType&lt;/h3&gt;

&lt;p&gt;Especifica o tipo de elemento que será exibido no mapa, os valores suportados são: &lt;strong&gt;geometry&lt;/strong&gt; &lt;em&gt;todos os elementos geométricos&lt;/em&gt;, &lt;strong&gt;geometry.fill&lt;/strong&gt; &lt;em&gt;seleciona apenas o preenchimento da geometria&lt;/em&gt;, &lt;strong&gt;geometry.stroke&lt;/strong&gt; &lt;em&gt;seleciona apenas a textura da geometria&lt;/em&gt;, &lt;strong&gt;labels&lt;/strong&gt; &lt;em&gt;seleciona apenas rótulos textuais&lt;/em&gt;, &lt;strong&gt;labels.icon&lt;/strong&gt; &lt;em&gt;seleciona apenas o ícone do rótulo&lt;/em&gt;, &lt;strong&gt;labels.text&lt;/strong&gt; &lt;em&gt;seleciona apenas o texto do rótulo&lt;/em&gt;, &lt;strong&gt;labels.text.fill&lt;/strong&gt; &lt;em&gt;seleciona apenas o preenchimento do rótulo&lt;/em&gt;, &lt;strong&gt;labels.text.stroke&lt;/strong&gt; &lt;em&gt;seleciona apenas a textura do texto&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;stylers&#34;&gt;stylers&lt;/h3&gt;

&lt;p&gt;É desta combinação de estilos que a cor irá se originar, os valores que você pode trabalhar são:&lt;/p&gt;

&lt;h4 id=&#34;hue&#34;&gt;hue&lt;/h4&gt;

&lt;p&gt;String hexadecimal RGB que indicará a cor básica.&lt;/p&gt;

&lt;h4 id=&#34;lightness&#34;&gt;lightness&lt;/h4&gt;

&lt;p&gt;Indica o brilho do elemento, valores negativos aumentam a escuridão, este valor varia de -100 e 100.&lt;/p&gt;

&lt;h4 id=&#34;saturation&#34;&gt;saturation&lt;/h4&gt;

&lt;p&gt;Intensidade da cor básica a ser aplicada, este valor varia de -100 e 100.&lt;/p&gt;

&lt;h4 id=&#34;gamma&#34;&gt;gamma&lt;/h4&gt;

&lt;p&gt;Modificam a luminosidade das matizes, utilizados para modificar o contraste dos elementos, este valor varia entre 0.01 e 10.0.&lt;/p&gt;

&lt;h4 id=&#34;inverse-lightness&#34;&gt;inverse_lightness&lt;/h4&gt;

&lt;p&gt;Se true, inverte a luminosidade existente.&lt;/p&gt;

&lt;h4 id=&#34;visibility&#34;&gt;visibility&lt;/h4&gt;

&lt;p&gt;on, off ou simplified, indica como um elemento aparece no mapa.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// Criando um array com os estilos
var styles = [
{
  stylers: [
   { hue: “#41a7d5” },
   { saturation: 60 },
   { lightness: -20 },
   { gamma: 1.51 }
  ]
},
 {
  featureType: “road”,
  elementType: “geometry”,
  stylers: [
   { lightness: 100 },
   { visibility: “simplified” }
  ]
 },
 {
  featureType: “road”,
  elementType: “labels”
 }
];
&lt;/pre&gt;

&lt;p&gt;O que foi feito?&lt;/p&gt;

&lt;p&gt;Criei uma matriz de estilos &lt;em&gt;descrita acima&lt;/em&gt;, que nada mais é do que um array com os estilos do mapa, onde neste array é passado as cores e os estilos para exibição;&lt;/p&gt;

&lt;p&gt;Agora crio um novo objeto &lt;strong&gt;google.maps.StyledMapType&lt;/strong&gt; passando a matriz que foi criada e um nome para o novo tipo de mapa;&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var styledMap = new google.maps.StyledMapType(styles, {
  name: “Mapa Style”
});
&lt;/pre&gt;

&lt;p&gt;Crie o objeto do mapa e nas opções do mapa &lt;strong&gt;mapOptions&lt;/strong&gt; inclua um identificador para o novo tipo de mapa &lt;strong&gt;map_style&lt;/strong&gt;. Isto irá possibilitar o usuário a visualizar o mapa tradicional do Google &lt;strong&gt;google.maps.MapTypeId.ROADMAP&lt;/strong&gt; e o seu mapa &lt;strong&gt;map_style&lt;/strong&gt;. Para visualizar isto, observe no canto superior direito do mapa, se você desejar só disponibilizar o seu tipo de mapa, é só em &lt;strong&gt;mapTypeIds&lt;/strong&gt; deixar o identificador do seu mapa;&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;mapTypeControlOptions: {

  mapTypeIds: [google.maps.MapTypeId.ROADMAP, ‘map_style’]
}
&lt;/pre&gt;

&lt;p&gt;Associe o estilo do mapa com o &lt;strong&gt;MapTypeId&lt;/strong&gt;;&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;map.mapTypes.set(‘map_style’, styledMap);
map.setMapTypeId(‘map_style’);
&lt;/pre&gt;

&lt;p&gt;E é isso, agora você já está apto para inserir um mapa, personalizar controles e pin, animar o pin e customizar as cores do seu mapa. Veja o &lt;a href=&#34;https://gist.github.com/thulioph/8153570&#34; title=&#34;Código completo do material / Gist&#34; target=&#34;_blank&#34;&gt;código completo aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O post ficou enorme, mas espero que eu tenha sido bastante claro e tenha conseguido transmitir da melhor forma este conteúdo pois a API não é difícil, consegui fazer isso tudo em um único dia e vocês também podem. Qualquer dúvida ou se acha que fiz algo de errado, entre em contato comigo ou deixa nos comentários.&lt;/p&gt;

&lt;p&gt;Link de Referência:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developers.google.com/maps/documentation/javascript/tutorial?hl=pt-br&#34; title=&#34;Link para visualziar a API do Google Maps / Google&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://developers.google.com/maps/documentation/javascript/tutorial?hl=pt-br&#34;&gt;https://developers.google.com/maps/documentation/javascript/tutorial?hl=pt-br&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>