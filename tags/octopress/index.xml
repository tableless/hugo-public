<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Octopress on Tableless</title>
    <link>http://tableless.com.br/tags/octopress/index.xml</link>
    <description>Recent content in Octopress on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/octopress/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Criando um blog com Octopress e Github Pages</title>
      <link>http://tableless.com.br/criando-um-blog-com-octopress-e-github-pages/</link>
      <pubDate>Thu, 19 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/criando-um-blog-com-octopress-e-github-pages/</guid>
      <description>

&lt;p&gt;Já faz pouco mais de uma semana que venho estudando o Octopress para o desenvolvimento do meu &lt;a title=&#34;divecch.com&#34; href=&#34;http://divecch.com&#34; target=&#34;_blank&#34;&gt;blog&lt;/a&gt;. Hoje vou mostrar como iniciar seu blog utilizando essa ferramenta e falar um pouco sobre como está sendo a experiência de criar um blog totalmente estático, sem a necessidade de um server-side.&lt;/p&gt;

&lt;p&gt;O &lt;a title=&#34;Octopress Official Page&#34; href=&#34;http://octopress.org/&#34; target=&#34;_blank&#34;&gt;Octopress&lt;/a&gt; é um framework criado por &lt;a title=&#34;Brandon Mathis Website&#34; href=&#34;http://brandonmathis.com/&#34; target=&#34;_blank&#34;&gt;Brandon Mathis&lt;/a&gt; com o &lt;a title=&#34;Jekyll Framework&#34; href=&#34;http://jekyllrb.com/&#34; target=&#34;_blank&#34;&gt;Jekyll&lt;/a&gt;, que é uma ferramenta Ruby para gerar sites estáticos a partir de templates HTML, CSS, Javascript, arquivos de configurações e markdowns. Também possui algumas tarefas automatizadas com o rake, para criar, novos posts, gerar o conteúdo estático, fazer deploy, etc. Eu nunca havia trabalhado com esse tipo de ferramenta e achei bem interessante essa ideia, porém o Octopress é totalmente voltado pra blogs e nesse pouco tempo de uso já senti algumas limitações, estou começando a cogitar a ideia de criar uma ferramenta dessas pra abranger outros segmentos além de blogs, mas isso é uma história para outro post. Bom, chega de blá, blá, blá e vamos pra prática!&lt;/p&gt;

&lt;h3 id=&#34;como-instalar&#34;&gt;Como instalar&lt;/h3&gt;

&lt;p&gt;Antes de começar, certifiquem-se que vocês possuem instalado o &lt;strong&gt;&lt;a title=&#34;Ruby&#34; href=&#34;https://www.ruby-lang.org/pt/&#34; target=&#34;_blank&#34;&gt;ruby&lt;/a&gt; – versão &amp;gt; 1.9.3&lt;/strong&gt; e &lt;a title=&#34;Git&#34; href=&#34;http://git-scm.com/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;git&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Agora basta fazer clone do repositório do Octopress e adicionar o nome do blog no final do comando. No nosso exemplo vamos utilizar “blog-zueiro”:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;git clone git://github.com/imathis/octopress.git blog-zueiro
cd blog-zueiro&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dentro da pasta “blog-zueiro”, execute os seguintes comandos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;gem install bundler
rbenv rehash   # caso esteja utilizando o rbenv
bundle install # baixa todas as dependências do projeto
rake install   # instala o tema default do octopress
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pronto, temos toda a estrutura do nosso “blog-zueiro” pronta.&lt;/p&gt;

&lt;h3 id=&#34;rodando-no-localhost&#34;&gt;Rodando no localhost&lt;/h3&gt;

&lt;p&gt;Para visualizar nosso blog localmente, basta executar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;rake generate   # gera todos os arquivos estáticos do nosso blog.
rake preview    # inicia um servidor local na porta 4000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;aeee, agora podemos visualizar nosso “blog-zueiro” acessando &lt;a href=&#34;http://localhost:4000&#34;&gt;http://localhost:4000&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;configurações-básicas&#34;&gt;Configurações básicas:&lt;/h3&gt;

&lt;p&gt;Uma das grandes vantagens que notei no Octopress, é a parte de customizar seu blog através do arquivo de configurações, que fica em “&lt;strong&gt;/_config.yml&lt;/strong&gt;”.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;yaml&#34;&gt;
url:            # url do seu blog: joseh.github.io
title:          # Titulo do blog: Zueiro na Net
subtitle:       # Subtítulo do blog (Slogan)
author:         # Nome do autor do blog.
simple_search:  # Engine da barra de pesquisa no site, default é o google.
description:    # Descrição do blog
date_format:    # Formato de data, no nosso caso “%d/%m/%Y”
subscribe_rss:  # Url para os feeds do seu blog, por padrão é o arquivo /atom.xml
subscribe_email:# Url para inscrever-se por e-mail (serviço obrigatório)
email:          # E-mail para o feed RSS.
root:           # rootpath das nossas urls (default: /)
permalink:      # formato da url para os posts do nosso blog
source:         # diretório dos source do projeto
destination:    # diretório dos arquivos finais
plugins:        # diretório dos plugins que você for utilizar no projeto
code_dir:       # diretório para os code snippets 
category_dir:   # diretório das paginas de categoria do blog
pygments:       # opção para ativar o syntax highlighting do python pygments
paginate:       # numero de posts por pagina na pagina de blog index
pagination_dir: # diretório base para a paginação
recent_posts:   # quantidade de posts recentes a serem exibidos no sidebar do blog
default_asides: # assides que vão ser apresentados no sidebar do blog
blog_index_asides: # assides serão exibidos na página de blog index
post_asides:    # assides que serão exibidos na página de algum post
page_asides:    # assides que serão exibidos em uma página comum
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;dica:&lt;/strong&gt; os assides são componentes que ficam exibindo na lateral do blog, como o “Recent Posts” que ficam no diretório &lt;strong&gt;source/_includes/assides&lt;/strong&gt;, lá você pode modificar , como por exemplo trocar os títulos pra português, ou alterar a estrutura do html e inserir novos códigos ruby para customizar seu asside.&lt;/p&gt;

&lt;p&gt;Caso você queira criar novos assides, basta criar um novo arquivo em &lt;strong&gt;source/_includes/custom/assides/&lt;/strong&gt; e adicionar ele no default_assides do arquivo &lt;strong&gt;_config.yml&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;primeiro-post&#34;&gt;Primeiro post&lt;/h3&gt;

&lt;p&gt;Legal, temos nosso blog configurado e rodando localmente mas ainda não tem nenhum conteúdo. O Octopress fornece uma rake task para automatizar a criação de postagens. Então vamos lá, vamos criar nossa primeira postagem com o título “começando a zueira na net”:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;rake new_post[“começando a zueira na net”]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Com isso, foi gerado um arquivo .makdown dentro da pasta “blog-zueiro/source/_posts” com o seguinte aspecto:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;layout: post
title: &#34;começando a zueira na net&#34;
date: 2013-11-29 11:14:44 -0200
comments: true
categories:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;layout:&lt;/strong&gt; é referente ao layout que ele vai usar pra página. Esses layouts ficam dentro da pasta “blog-zueiro/source/_layouts”, caso você queira, pode criar seu próprio layout dentro dessa tela e alterar o markdown para utilizar ele.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;titulo:&lt;/strong&gt; é o titulo do post&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;data:&lt;/strong&gt; é a data de criação&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;comments:&lt;/strong&gt; é se o seu post vai ter comentários ou não (true | false)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;categories:&lt;/strong&gt; são as categorias relacionadas ao seu post, por exemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;categories: [zueiro na net, blog, octopress, ruby]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;author:&lt;/strong&gt; é o autor do post&lt;/p&gt;

&lt;p&gt;Agora basta escrever nosso post:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;---
layout: post
title: &#34;começando a zueira na net&#34;
date: 2013-11-29 11:14:44 -0200
comments: true
categories:[zueiro na net, blog, octopress, ruby]
author: Zeh Zueiro
---
Cheguei na net e to afim de zueira, meu primeiro post é sobre...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;dica:&lt;/strong&gt; existem vários editores de arquivos markdown que facilita na hora de inserir links, imagens, etc. Teve dois que eu utilizei e gostei bastante que é o &lt;a href=&#34;https://stackedit.io&#34;&gt;https://stackedit.io&lt;/a&gt; e o &lt;a href=&#34;http://mouapp.com/&#34;&gt;http://mouapp.com&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;deploy-para-o-githubpages&#34;&gt;Deploy para o GithubPages&lt;/h3&gt;

&lt;p&gt;Ótimo, já temos a estrutura do nosso blog pronta, já criamos nosso primeiro post, agora quero mostrar pro meus amigos, afinal, de que adianta eu ter um blog que só eu vejo???&lt;/p&gt;

&lt;p&gt;Pra colocar nosso blog no ar, vamos utilizar o Github Pages que é suportado nativamente pelo Octopress e a hospedagem é free.&lt;/p&gt;

&lt;p&gt;Primeiro acesse sua conta no github.com e crie um repositório com o seguinte padrão: &lt;strong&gt;username.github.io&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Então se seu username for &lt;strong&gt;joseh&lt;/strong&gt;, o repositório deverá se chamar: &lt;strong&gt;joseh.github.io&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Volte novamente pro terminal e execute:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;rake setup_github_pages&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nesse momento ele vai pedir pra você inserir o repositório do github, o que a gente criou agora pouco: &lt;a href=&#34;http://github.com/joseh/joseh.github.io.git&#34;&gt;http://github.com/joseh/joseh.github.io.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;e em seguida:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;
rake generate # para gerar o conteúdo estático do blog
rake deploy   # para subir fazer subir seu blog pro repositório que configuramos.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;agora você pode visualizar seu blog no endereço &lt;strong&gt;joseh.github.io&lt;/strong&gt;, lembrando que algumas vezes podem levar até 10 minutos pro github disponibilizar seu site online.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;possíveis problemas:&lt;/strong&gt; caso sua pagina não esteja online depois de 10 min, verifique se o seu repositório esta no padrão correto: username.github.io, inclusive respeitando maiúsculas e minúsculas.&lt;/p&gt;

&lt;p&gt;No meu caso, meu usuário é diRex, então meu repositório teve que ficar diRex.github.io. Se estiver errado, renomeie seu repositório pelo github e execute novamente o rake setup_github_pages pra configurar o repositório com o novo nome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dica:&lt;/strong&gt; o Octopress já vem com dois branches configurados, um master, onde vai ficar os arquivos de produção do blog e um source, onde ficam, obviamente, o source do seu projeto. Então, quando for atualizar o source do seu projeto no github…:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;git add .
git commit -m “mensagem”
git push origin source
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;e pra baixar as atualizações do source em outra máquina:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;git pull origin source&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;socializando-nosso-blog&#34;&gt;Socializando nosso blog&lt;/h3&gt;

&lt;p&gt;Nesse mesmo arquivo &lt;strong&gt;_config.yml&lt;/strong&gt; temos algumas configurações que permitem adicionar algumas interações com as redes sociais:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;yaml&#34;&gt;github_user:                    # usuário do github
github_repo_count: 0            # quantidade de repositórios que vão ser exibidos
github_show_profile_link: true  # exibir link para o perfil
github_skip_forks: true         # não exibir forks
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;yaml&#34;&gt;twitter_user:                 # usuário do twitter
twitter_tweet_button: true    # exibir botão de tweet
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Google Plus&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;yaml&#34;&gt;google_plus_one: false        # exibir botão +1
google_plus_one_size: medium  # tamanho do botão
googleplus_user:              # usuário do gplus
googleplus_hidden: false      # esconder botão +1 dos assets
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Pinboard&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;yaml&#34;&gt;pinboard_user:       # usuário do pinboard
pinboard_count: 3    # quantidade de bookmarks exibidos
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Delicious&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;yaml&#34;&gt;delicious_user:      # usuário do delicious
delicious_count: 3   # quantidade de bookmarks exibidos
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Disqus Comments&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;yaml&#34;&gt;disqus_short_name:                # short name do seu disqus app
disqus_show_comment_count: false  # exibir quantidade de comentários
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Disqus é uma plataforma de comentários, caso você não preencher o short name do disqus, seu blog não vai ter comentários, a menos que utilize os comentários do facebook, como vou ensinar a seguir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Facebook&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;yaml&#34;&gt;facebook_like: false     # exibir botões de curtir e compartilhar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Agora é só escolher quais opções você quer adicionar no seu blog para ter maior interação com seus visitantes XD!&lt;/p&gt;

&lt;h3 id=&#34;comentários-com-o-facebook&#34;&gt;Comentários com o Facebook&lt;/h3&gt;

&lt;p&gt;Uma coisa que não vem por padrão no Octopress e que eu queria colocar no meu blog, são os comentários com o Facebook. Acho que facilita mais do que usar o Disqus, pois grande maioria do pessoal já tem conta no Facebook.&lt;/p&gt;

&lt;p&gt;Como acho que outras pessoas também irão sentir essa necessidade, vou mostrar como fazer pra colocar essa funcionalidade no seu blog.&lt;/p&gt;

&lt;p&gt;Primeiro crie uma app para o facebook: &lt;a href=&#34;https://developers.facebook.com/apps&#34;&gt;https://developers.facebook.com/apps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora vamos até o doc de comentários do facebook: &lt;a href=&#34;https://developers.facebook.com/docs/plugins/comments/&#34;&gt;https://developers.facebook.com/docs/plugins/comments/&lt;/a&gt; e preencha os campos de acordo com a imagem a seguir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/7oygYA9JHZZUrF9NHv0OgZSFLSKSJ-MujapA0gUnm1M=w733-h453-no&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Clique em &lt;strong&gt;Get Code&lt;/strong&gt; e ele vai gerar pra você dois trechos de códigos, um javascript e um html. O javascript você deve substituir pelo código que tem dentro do arquivo &lt;strong&gt;source/_includes/facebook_like.html&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O código html você coloca onde for exibir os comentários, no meu caso coloquei em &lt;strong&gt;source/_includes/post/sharing.html&lt;/strong&gt; para exibir em baixo dos botões de curtir e compartilhar.&lt;/p&gt;

&lt;h3 id=&#34;customizar-layout&#34;&gt;Customizar layout&lt;/h3&gt;

&lt;p&gt;O Octopress utiliza o pré-processador de css SaSS nos seus templates, esse está sendo meu primeiro contato com pré processadores e realmente traz muitas facilidades, quem quiser ficar por dentro de como o SaSS funciona, acesse: &lt;a href=&#34;http://sass-lang.com/.&#34;&gt;http://sass-lang.com/.&lt;/a&gt; Toda customização do layout pode ser feita através dos arquivos .scss que ficam na pasta /sass.&lt;/p&gt;

&lt;h3 id=&#34;criando-novas-páginas&#34;&gt;Criando novas páginas&lt;/h3&gt;

&lt;p&gt;Caso você queira adicionar uma página mais paginas no seu blog, como uma página de contato:&lt;/p&gt;

&lt;pre&gt;rake new_page[“contato”]&amp;lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;e o arquivo da sua nova página será criado em &lt;strong&gt;source/contato/index.markdown&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;trafego-de-acesso-com-google-analytics&#34;&gt;Trafego de acesso com google analytics&lt;/h3&gt;

&lt;p&gt;Ter uma analise do trafego de acesso do seu site é crucial para tomar decisões na hora de melhorar o seu conteúdo online. Para quem ainda não usou o google analytics, essa é uma boa hora pra ver como funciona, eu mesmo ainda não tinha utilizado e estou me divertindo vendo os relatórios de acesso, locais de onde o blog recebe visitas e tudo mais.&lt;/p&gt;

&lt;p&gt;Pra adicionar o analytics aos seu blog, basta criar uma conta em www.google.com/analytics/‎ e obter um ID de acompanhamento. Depois disso, só adicionar esse ID no arquivo _config.yml:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;google_analytics_tracking_id: XX-99999999-9
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;custom-domain&#34;&gt;Custom domain&lt;/h3&gt;

&lt;p&gt;Para finalizar, caso você queira usar um custom domain, como por exemplo: exemplo.com,&lt;/p&gt;

&lt;p&gt;tudo que precisa fazer é criar um arquivo chamado CNAME dentro da pasta &lt;strong&gt;source/&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Agora vá até o seu provedor de dominio, e configure o subdominio &lt;code&gt;www.exemplo.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;para apontar pro seu endereço do github: &lt;strong&gt;username.github.io&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Caso você também queira usar o naked name &lt;code&gt;exemplo.com&lt;/code&gt;, modifique o seu registro de dns do tipo A para apontar pro ip &lt;code&gt;204.232.175.78&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;E isso é tudo pessoal, kkkk! Espero que tenham gostado do post, curtam, comentem, compartilhem. Críticas quanto ao texto também são bem vindas. Se conhecerem outras ferramentas que possuem o mesmo propósito de gerar conteúdo estático, comentem também!&lt;/p&gt;

&lt;p&gt;Gostaria também de agradecer o grande Diego Eis pelo espaço e pela iniciativa do Tableless. Parabéns!&lt;/p&gt;

&lt;p&gt;vlw !!!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>