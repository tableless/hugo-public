<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frameworks Css on Tableless</title>
    <link>http://tableless.com.br/tags/frameworks-css/index.xml</link>
    <description>Recent content in Frameworks Css on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/frameworks-css/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Dicas de como fazer seu próprio framework CSS</title>
      <link>http://tableless.com.br/dicas-de-como-fazer-seu-proprio-framework-css/</link>
      <pubDate>Tue, 03 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/dicas-de-como-fazer-seu-proprio-framework-css/</guid>
      <description>

&lt;p&gt;Algumas anotações da minha palestra na QCon 2013, sobre como fazer seu próprio framework CSS.&lt;/p&gt;

&lt;p style=&#34;margin-bottom:5px&#34;&gt;
  &lt;strong&gt; &lt;a href=&#34;https://www.slideshare.net/diegoeis/frameworks-css2&#34; title=&#34;Construindo seu framework CSS&#34; target=&#34;_blank&#34;&gt;Construindo seu framework CSS&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;http://www.slideshare.net/diegoeis&#34; target=&#34;_blank&#34;&gt;Diego Eis&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;

&lt;h3 id=&#34;por-que-usar-frameworks&#34;&gt;Por que usar Frameworks?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Aumentar a eficiência&lt;/li&gt;
&lt;li&gt;Consistência e padrão de código&lt;/li&gt;
&lt;li&gt;Compatibilidade mais confiável&lt;/li&gt;
&lt;li&gt;Fácil manutenção&lt;/li&gt;
&lt;li&gt;Facilita a repetições de tarefas&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;por-que-não-usar-frameworks&#34;&gt;Por que não usar Frameworks?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Curva de aprendizado&lt;/li&gt;
&lt;li&gt;HTML engessado&lt;/li&gt;
&lt;li&gt;CSS engessado&lt;/li&gt;
&lt;li&gt;Sopa de classes&lt;/li&gt;
&lt;li&gt;Tem que manter tudo atualizado o tempo todo&lt;/li&gt;
&lt;li&gt;Versionamento problemático&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;separe-seu-css-em-partes&#34;&gt;Separe seu CSS em partes&lt;/h3&gt;

&lt;p&gt;É bom para manutenção, escalabilidade do código e também evita misturar assuntos diferentes.&lt;/p&gt;

&lt;h4 id=&#34;base&#34;&gt;Base&lt;/h4&gt;

&lt;p&gt;CSS Reset, Tipografia, customizações globais e genéricas do seu layout. Aqui é onde você vai colocar as características comuns, que todo o framework usará.&lt;/p&gt;

&lt;h4 id=&#34;layout&#34;&gt;Layout&lt;/h4&gt;

&lt;p&gt;Grids, responsive e outras decisões de estrutura. Aqui será a casca, a infraestrutura do seu framework. É onde você decide como vai se comportar mas mediaqueries de estrutura e comportamentos de grid.&lt;/p&gt;

&lt;h4 id=&#34;módulos&#34;&gt;Módulos&lt;/h4&gt;

&lt;p&gt;Aqui entra o grande trabalho do seu framwork. São os elementos criados em módulos: botões, alertas, tables, tabs, collapses, sliders, headers, listas e etc…&lt;/p&gt;

&lt;p&gt;Alguns desenvolvedores podem querer dividir alguns elementos como collapses, modais e etc em outra parte chamada ESTADOS. Que agrupam elementos que tem comportamentos como abrir e fechar, aparecer e desaparecer, coisas do tipo.&lt;/p&gt;

&lt;h4 id=&#34;themes&#34;&gt;Themes&lt;/h4&gt;

&lt;p&gt;Aqui depende muito da sua necessidade. Pode ser que seu projeto precise ter vários temas de cores ou você quer visuais diferentes (flat e skeumo por exemplo). Aí é bom separar as particularidades visuais de cada cenário em lugares separados.&lt;/p&gt;

&lt;h3 id=&#34;princípios-teoricos&#34;&gt;Princípios teoricos&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Modular e adaptável&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ou seja, você precisa combinar o quanto quiser todos os elementos o seu framework. Eles precisam ser plugáveis uns aos outros.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Leve&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Escreva o mínimo possível. Não tente abraçar todos os browsers. Gracefull degradation e Progressive Enhancement devem estar no seu sangue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rápido&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mínimo de requisições. Isso quer dizer que você tem que usar o menor número de arquivos possível. Diminua o número de arquivos CSS, JS e Imagens.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simples&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Precisa ser fácil para fazer manutenção, legível para novos integrantes entenderem rapidamente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tenha poucas dependências&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dependa menos de terceiros. Existem plugins que são indispensáveis como JQuery. Seja criterioso com os plugins que você utilizar&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Regra da similaridade&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se dois elementos são muito parecidos para incluir em uma página, provavelmente eles são muito parecidos para serem incluídos juntos em um site. Escolha um.&lt;/p&gt;

&lt;h3 id=&#34;na-prática&#34;&gt;Na prática&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Modularize componentes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Componentes são como legos. Você pluga diversas peças para formar uma peça maior.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Evite especificar tags. Mantenha o foco nas classes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;É melhor fazer .btn do que a.btn&lt;/p&gt;

&lt;p&gt;Botões podem ser um link, um input, uma tag button…&lt;/p&gt;

&lt;p&gt;Deixe as classes livres para customizar qualquer elemento.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Não trave as dimensões do seu site.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O Grid controla a largura. O conteúdo controla a altura. Não trave alturas ou larguras a não ser que seja extremamente necessário.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Minimize seletores. Seja sucinto.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Não faça seletores complexos como: .search fieldset label .btn&lt;/p&gt;

&lt;p&gt;Seja breve e vá direto ao ponto: .header .search .btn&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Separe o conteúdo do container.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O estilo do conteúdo não pode ser dependente do seu container. Eu posso estilizar qualquer conteúdo independente do container que o elemento está. Trate o container como um módulo e o conteúdo como outro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Separe a estrutura do layout&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Você pode ter a liberdade de estilizar cada bloco de estrutura do jeito que achar melhor. O container pode ser estruturado de várias formas, com diferentes layouts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSS Incremental: customize objetos aplicando multiplas classes. Mas não abuse.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Aqui você deve ir com cuidado. Um botão pode ter vários tamanhos, defina um tamanho padrão, mas crie outras classes que mudarão o tamanho do botão conforme a necessidade. Fica assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;a href=&#34;#&#34; class=&#34;btn btn-large&#34;&amp;gt;Bot&amp;atilde;o&amp;lt;/a&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Se quiser que esse botão flutue a direita, você pode inserir mais uma classe:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;a href=&#34;#&#34; class=&#34;btn btn-large float-right&#34;&amp;gt;Bot&amp;atilde;o&amp;lt;/a&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Mas tome cuidado para não misturar muita &amp;#8220;formatação&amp;#8221; no HTML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use font para icones. É melhor ao lidar com diversos tamanhos e cores.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fonts tem mais facilidade para mudarmos o tamanho, cores e posição.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Você pode usar algum pre-processador. Mas cuidado.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pré-processadores podem te ajudar em diversas tarefas. Mas se não tomar cuidado o código pode ficar muito maior do que se fosse criado à mão.&lt;/p&gt;

&lt;h3 id=&#34;considere-usar-um-framework-como-base&#34;&gt;Considere usar um framework como base&lt;/h3&gt;

&lt;p&gt;Não reinvente a roda. Procure um framework que te agrade mais e parta daí.&lt;/p&gt;

&lt;p&gt;Customize o layout deste framework para a sua necessidade e adicione novas funções às funções existentes.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>