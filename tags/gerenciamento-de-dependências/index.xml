<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gerenciamento De Dependências on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/gerenciamento-de-depend%C3%AAncias/index.xml</link>
    <description>Recent content in Gerenciamento De Dependências on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/gerenciamento-de-depend%C3%AAncias/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Composer para iniciantes</title>
      <link>https://tableless.github.io/hugo-public/composer-para-iniciantes/</link>
      <pubDate>Tue, 18 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/composer-para-iniciantes/</guid>
      <description>

&lt;p&gt;&lt;a title=&#34;Ir para a homepage do Composer&#34; href=&#34;https://getcomposer.org/&#34; target=&#34;_blank&#34;&gt;Composer&lt;/a&gt; é uma ferramenta para gerenciamento de dependências para o PHP que vem ganhando espaço e se tornando cada vez mais indispensável. Com algumas poucas linhas de configurações você define todas as bibliotecas de terceiros ou mesmo suas que deseja/precisa utilizar em seu projeto, o composer encarrega-se de baixá-las e criar um autoloader deixando-as prontas para uso.&lt;/p&gt;

&lt;p&gt;Para muitos o composer ainda é um mistério então o intuito deste post é mostrar ao usuário que ainda não conhece como baixar, configurar e utilizar o composer de forma básica.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;do-que-preciso&#34;&gt;Do que preciso?&lt;/h2&gt;

&lt;p&gt;Basicamente precisará do PHP em sua versão a partir da 5.3.2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Os exemplos criados neste post serão baseados em ambiente Linux, em sua maioria funcionará da mesma forma no Mac OS X mas para o Windows recomendo que leia a documentação oficial. O conceito é o mesmo nos três Sistemas Operacionais no entanto no Windows há algumas mínimas diferenças.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;como-começo&#34;&gt;Como começo?&lt;/h2&gt;

&lt;p&gt;Primeiramente você precisa realizar o download do phar do composer. O &lt;a title=&#34;Descubra o que é um arquivo Phar&#34; href=&#34;https://php.net/manual/pt_BR/book.phar.php&#34; target=&#34;_blank&#34;&gt;phar&lt;/a&gt; é um empacotamento de uma aplicação e é utilizado para fornecer bibliotecas e ferramentas nas quais o desenvolvedor não tem de se preocupar com sua estrutura. Em outras palavras, é pegar e usar.&lt;/p&gt;

&lt;p&gt;Para que você obtenha o composer há duas maneiras distintas. Através da biblioteca &lt;a title=&#34;Descubra o que é cURL&#34; href=&#34;http://en.wikipedia.org/wiki/CURL&#34; target=&#34;_blank&#34;&gt;cURL&lt;/a&gt; e através do próprio PHP. Basta selecionar uma das opções abaixo e executar em seu terminal.&lt;/p&gt;

&lt;p&gt;Instalando via cURL:&lt;/p&gt;

&lt;p&gt;curl -sS &lt;a href=&#34;https://getcomposer.org/installer&#34;&gt;https://getcomposer.org/installer&lt;/a&gt; | php&lt;/p&gt;

&lt;p&gt;Instalando via PHP:&lt;/p&gt;

&lt;p&gt;php -r &amp;#8220;readfile(&amp;#8216;&lt;a href=&#34;https://getcomposer.org/installer&amp;amp;#8217;);&amp;amp;#8221&#34;&gt;https://getcomposer.org/installer&amp;amp;#8217;);&amp;amp;#8221&lt;/a&gt;; | php&lt;/p&gt;

&lt;p&gt;Existem outras maneiras de instalar, na verdade são configurações mais avançadas de instalação que não serão abordadas aqui por se tratar de ser um conteudo voltado à iniciantes.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;qual-o-próximo-passo&#34;&gt;Qual o próximo passo?&lt;/h2&gt;

&lt;p&gt;Antes de você sair querendo fazer as coisas acontecerem precisamos passar alguns conceitos básicos.&lt;/p&gt;

&lt;p&gt;O composer facilita o gerenciamento de dependências em seus projetos, com isso houve a necessidade de uma padronização para a interoperabilidade entre os mais diversos frameworks PHP do mercado. Mas detalhe que o composer não limita-se à uso somente em frameworks, você pode tranquilamente utilizá-lo em seus projetos com PHP puro desde que siga as recomendações da &lt;a title=&#34;Descubra o que é FIG&#34; href=&#34;http://www.php-fig.org/&#34; target=&#34;_blank&#34;&gt;FIG&lt;/a&gt; (Framework Interoperability Group).&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;o-arquivo-de-configurações&#34;&gt;O arquivo de configurações&lt;/h2&gt;

&lt;p&gt;Agora que você já tem uma noção do que é o composer está na hora de botar a mão na massa.&lt;/p&gt;

&lt;p&gt;Primeiramente crie um arquivo chamado &lt;em&gt;composer.json&lt;/em&gt;. Este arquivo possuirá as configurações de dependências de sua aplicação em formato &lt;a title=&#34;Veja mais sobre a estrutura de um arquivo Json&#34; href=&#34;http://json.org/json-pt.html&#34; target=&#34;_blank&#34;&gt;Json&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Abaixo segue um esqueleto básico do _composer.json_ – o arquivo em que as dependências serão descritas, em seguida o mesmo será esclarescido.&lt;/p&gt;

&lt;pre class=&#34;prettyprint lang-json&#34;&gt;{
    &#34;name&#34;: &#34;Nome do projeto&#34;,
    &#34;description&#34;: &#34;Breve descrição do que a aplicação se propoe a fazer&#34;,
    &#34;authors&#34;: [
        {
            &#34;name&#34;: &#34;Seu nome&#34;,
            &#34;email&#34;: &#34;seu-email@seu-dominio.com&#34;
        }
    ],
    &#34;require&#34;: {
        &#34;php&#34;: &#34;&amp;gt;=5.2.8&#34;
    }
}&lt;/pre&gt;

&lt;p&gt;O “name” é o nome de sua aplicação. Esta marcação é opcional mas recomendada.&lt;/p&gt;

&lt;p&gt;O “description” é uma breve descrição do que sua aplicação se propõe a fazer. Também opcional.&lt;/p&gt;

&lt;p&gt;Em “authors” aparecem os créditos de desenvolvedores que contribuiram com o projeto.&lt;/p&gt;

&lt;p&gt;O “require” basicamente deixa claro quais são as dependências de sua aplicação. Neste caso se a versão do PHP for abaixo da 5.2.8 simplesmente uma mensagem de erro será lançada ao instalar as dependências lhe informando que não é possível prosseguir por nem todos os requisitos estarem satisfeitos.&lt;/p&gt;

&lt;p&gt;Como você pode ver acima este é o esqueleto de uma aplicação muito básica, sem configurações avançadas e sem indicação de nenhuma biblioteca de terceiro.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;ok-mas-e-agora&#34;&gt;Ok, mas e agora?&lt;/h2&gt;

&lt;p&gt;Agora que você já tem o esqueleto de seu composer configurado em sua aplicação falta incluir alguns pacotes. O composer utiliza como seu repositório o &lt;a title=&#34;Pacotes do composer&#34; href=&#34;https://packagist.org/&#34; target=&#34;_blank&#34;&gt;Packagist&lt;/a&gt; onde qualquer desenvolvedor pode criar seus próprios pacotes e disponibilizá-los para a comunidade semelhante o &lt;a title=&#34;Ir ao Github&#34; href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;github&lt;/a&gt;. O Packagist lhe fornece o total de instalações dos pacotes por dia, mês e o total. O mais legal é que estas estatísticas são fiéis, ou seja, se alguém remover um pacote do seu _composer.json_ o total de instalações é reduzido. Com esta informação restam contagens apenas aplicações que realmente estão utilizando determinado pacote.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;um-pequeno-exemplo&#34;&gt;Um pequeno exemplo.&lt;/h2&gt;

&lt;p&gt;Para fins didáticos mostrarei aqui a utilização de uma biblioteca para slug criada por &lt;a title=&#34;Perfil de Kevin Le Brun no Github&#34; href=&#34;https://github.com/kevinlebrun&#34; target=&#34;_blank&#34;&gt;Kevin Le Brun&lt;/a&gt;, o &lt;a title=&#34;Slug PHP no Github&#34; href=&#34;https://github.com/kevinlebrun/slug.php&#34; target=&#34;_blank&#34;&gt;slug.php&lt;/a&gt;. Na seção em que são definidos os requerimentos (require) no arquivo _composer.json _basta adicionar logo abaixo da linha que define que o necessita do PHP o nome do pacote desejado e a sua versão. Neste caso o pacote é &amp;#8220;kevinlebrun/slug.php&amp;#8221; e a versão é &amp;#8220;1.*&amp;#8221;. Com isso a nova estrutura do composer.json é:&lt;/p&gt;

&lt;pre class=&#34;prettyprint lang-json&#34;&gt;...
&#34;require&#34;: {
        &#34;php&#34;: &#34;&amp;gt;=5.2.8&#34;,
        &#34;kevinlebrun/slug.php&#34;: &#34;1.*&#34;
}
...&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Muito bem, agora está tudo pronto para que você veja o composer em ação. Na pasta raíz de sua aplicação (que é a mesma que o _composer.json_ e o _composer.phar_ se encontram) rode o comando &lt;strong&gt;php composer.phar install&lt;/strong&gt;. Este comando fará o composer ler as configurações setadas no arquivo json e instalar todas as bibliotecas/pacotes necessários para a sua aplicação e também estas mesmas bibliotecas que possuírem dependências terão as mesmas resolvidas. Pense no composer mais ou menos como o apt-get do Linux debian-like. Nele, ao instalar um pacote qualquer todas suas dependências são resolvidas automaticamente.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-large wp-image-41193&#34; alt=&#34;Estruturdo composer e instalação&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/estrutura-e-instalacao-660x292.png&#34; width=&#34;660&#34; height=&#34;292&#34; srcset=&#34;uploads/2014/02/estrutura-e-instalacao-660x292.png 660w, uploads/2014/02/estrutura-e-instalacao-329x146.png 329w, uploads/2014/02/estrutura-e-instalacao-588x261.png 588w, uploads/2014/02/estrutura-e-instalacao-400x177.png 400w, uploads/2014/02/estrutura-e-instalacao.png 1275w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Perceba que na pasta em que encontra-se sua aplicação agora existem a pasta &lt;em&gt;vendor&lt;/em&gt;, um arquivo _composer.phar_ (que já encontrava-se ali), um arquivo _composer.json_ (que já encontrava-se ali) e um arquivo _composer.lock_ – que é o arquivo gerado automaticamente após a instalação com sucesso.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-41194&#34; alt=&#34;Estrutura de arquivos após a instalação via composer&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/estrutura-arquivos.png&#34; width=&#34;682&#34; height=&#34;333&#34; srcset=&#34;uploads/2014/02/estrutura-arquivos.png 682w, uploads/2014/02/estrutura-arquivos-329x160.png 329w, uploads/2014/02/estrutura-arquivos-588x287.png 588w, uploads/2014/02/estrutura-arquivos-634x310.png 634w, uploads/2014/02/estrutura-arquivos-400x195.png 400w&#34; sizes=&#34;(max-width: 682px) 100vw, 682px&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;o-próximo-passo-mais-um&#34;&gt;O próximo passo (mais um)&lt;/h2&gt;

&lt;p&gt;Agora já temos tudo. O composer gerenciando as dependências, as dependências definidas em nosso arquivo composer.json, e uma pasta contendo todas as dependências necessárias juntamente com o autoloader do composer que encarrega-se de registar todos os namespaces dos arquivos baixados na pasta &lt;em&gt;vendor&lt;/em&gt;. Com isso basta utilizarmos.&lt;/p&gt;

&lt;p&gt;Crie um arquivo chamado index.php e inclua o autoloader do composer conforme o exemplo abaixo.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;pre class=&#34;prettyprint lang-php&#34;&gt;&amp;lt;?php
header(&#39;Content-Type: text/html; charset=utf-8&#39;);

require &#39;vendor/autoload.php&#39;;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Importante que esteja definido que o conteúdo será exibido utilizando a codificação UTF-8 pois problemas podem ocorrer no tratamento de caracteres especiais como acentuações.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Com isso em mãos, basta apenas utlizarmos nosso slug.php.&lt;/p&gt;

&lt;pre class=&#34;prettyprint lang-php&#34;&gt;$slugifier = new \Slug\Slugifier();

// Definindo tratamento de caracteres com acentuação
$slugifier-&amp;gt;setTransliterate(true); 

$frase = &#39;Frase com acentuação para teste de criação de slug&#39;;

$slug = $slugifier-&amp;gt;slugify($frase);

echo &#39;&amp;lt;b&amp;gt;Frase natural: &amp;lt;/b&amp;gt;&#39; . $frase . &#34;&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&#34;;
echo &#39;&amp;lt;b&amp;gt;Frase com aplicação de slug: &amp;lt;/b&amp;gt;&#39; . $slug . &#34;&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&#34;;&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Perfeito, agora basta exibir no seu browser ou mesmo via terminal.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-41196&#34; alt=&#34;Slug rodando no terminal&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/slug-terminal.png&#34; width=&#34;816&#34; height=&#34;424&#34; srcset=&#34;uploads/2014/02/slug-terminal.png 816w, uploads/2014/02/slug-terminal-323x168.png 323w, uploads/2014/02/slug-terminal-588x305.png 588w, uploads/2014/02/slug-terminal-596x310.png 596w, uploads/2014/02/slug-terminal-400x207.png 400w&#34; sizes=&#34;(max-width: 816px) 100vw, 816px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Acessando nosso localhost através de um browser o resultado será este&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-41195&#34; alt=&#34;Slug rodando no navegador&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/slug-browser.png&#34; width=&#34;621&#34; height=&#34;353&#34; srcset=&#34;uploads/2014/02/slug-browser.png 621w, uploads/2014/02/slug-browser-295x168.png 295w, uploads/2014/02/slug-browser-545x310.png 545w, uploads/2014/02/slug-browser-400x227.png 400w&#34; sizes=&#34;(max-width: 621px) 100vw, 621px&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;complementando&#34;&gt;Complementando&lt;/h2&gt;

&lt;p&gt;O comando &lt;strong&gt;php composer.phar install&lt;/strong&gt; é utilizado somente uma vez em seu repositório. Para qualquer alteração do _composer.json_ que caracteriza-se como uma nova dependência ou remoção de uma existente deve ser utilizado o comando &lt;strong&gt;php composer.phar update&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O composer ainda possui um self-update em que baixa a sua última versão. Normalmente ao rodar qualquer comando você verá uma mensagem dizendo que a sua versão do composer precisa ser atualizada. Para isto basta o comando &lt;strong&gt;php composer.phar self-update&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;finalizando&#34;&gt;Finalizando&lt;/h2&gt;

&lt;p&gt;O composer está se tornando a cada dia mais utilizado entre desenvolvedores e vale muito a pena se aprofundar no assunto.&lt;/p&gt;

&lt;p&gt;O código-fonte deste exemplo está no github para eventuais consultas &lt;a title=&#34;Código-fonte do projeto criado para este post&#34; href=&#34;https://github.com/andrebian/posts/blob/master/tableless/tableless-composer-para-iniciantes/sources/sources.zip&#34; target=&#34;_blank&#34;&gt;neste link&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>