<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssl on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/ssl/index.xml</link>
    <description>Recent content in Ssl on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/ssl/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Adicionando SSL no NGINX com o Let’s Encrypt</title>
      <link>https://tableless.github.io/hugo-public/adicionando-ssl-no-nginx-com-o-lets-encrypt/</link>
      <pubDate>Fri, 02 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/adicionando-ssl-no-nginx-com-o-lets-encrypt/</guid>
      <description>

&lt;p&gt;O &lt;strong&gt;Let&amp;#8217;s Encrypt&lt;/strong&gt; é uma forma fácil, automatizada e gratuita de se inserir &lt;strong&gt;&lt;a href=&#34;https://www.1and1.com/certificado-ssl&#34;&gt;SSL&lt;/a&gt;&lt;/strong&gt; em uma aplicação &lt;em&gt;web&lt;/em&gt;. A utilização do &lt;strong&gt;SSL&lt;/strong&gt; é bem importante quando se há autenticação, tráfego de dados privados ou até mesmo para ser melhor colocado no &lt;em&gt;ranking&lt;/em&gt; do &lt;em&gt;Google&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Neste artigo vou demonstrar como gerar e adicionar o &lt;strong&gt;SSL&lt;/strong&gt; no &lt;strong&gt;NGINX&lt;/strong&gt; com a ferramenta &lt;strong&gt;Let&amp;#8217;s Encrypt&lt;/strong&gt;. Irei utilizar o sistema operacional &lt;em&gt;Debian&lt;/em&gt; para executar os comandos, mas estes podem ser facilmente modificados para serem executados em qualquer &lt;em&gt;distro&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;instalandooletsencrypt&#34;&gt;Instalando o Let&amp;#8217;s Encrypt:&lt;/h4&gt;

&lt;p&gt;Clone o projeto no &lt;em&gt;github&lt;/em&gt; e redirecione para o caminho &lt;strong&gt;/opt/letsencrypt&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt
&lt;/pre&gt;

&lt;p&gt;É necessário ter o &lt;em&gt;git&lt;/em&gt; instalado, caso não tenha:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ sudo apt-get install git
&lt;/pre&gt;

&lt;h4 id=&#34;preparandoonginxparaservalidado&#34;&gt;Preparando o NGINX para ser validado:&lt;/h4&gt;

&lt;p&gt;O &lt;strong&gt;Let&amp;#8217;s Encrypt&lt;/strong&gt; valida se o domínio realmente é seu, então para isso é necessário adicionar uma regra no seu &lt;em&gt;site&lt;/em&gt; do &lt;strong&gt;NGINX&lt;/strong&gt;. Adicione o &lt;strong&gt;location&lt;/strong&gt; &lt;em&gt;^/.well-known&lt;/em&gt; no seu site &lt;strong&gt;(/etc/nginx/sites-enabled/yoursite)&lt;/strong&gt;, como por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;server {  
    listen 80;
    server_name your-domain.com.br;

    location ~ ^/.well-known {
        root /var/www/yoursite;
    }

    location / {
        return 301 https://www.$server_name$request_uri;
    }
}
&lt;/pre&gt;

&lt;p&gt;Este &lt;strong&gt;location&lt;/strong&gt; será requisitado pelo &lt;strong&gt;Let&amp;#8217;s Encrypt&lt;/strong&gt; para confirmar sua identidade. Lembrando que você deve substituir o &lt;strong&gt;root&lt;/strong&gt; e o &lt;strong&gt;server_name&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Após adicionar o &lt;em&gt;well-known&lt;/em&gt;, reinicie o seu &lt;strong&gt;NGINX&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ sudo systemctl restart nginx
&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;É bom lembrar que o seu domínio deve estar apontando para sua aplicação para obter sucesso com o &lt;strong&gt;SSL&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;gerandoosslcomoletsencrypt&#34;&gt;Gerando o SSL com o Let&amp;#8217;s Encrypt:&lt;/h4&gt;

&lt;p&gt;Substitua no comando abaixo, o caminho &lt;strong&gt;/var/www/yoursite&lt;/strong&gt; pelo diretório raiz do seu site no &lt;strong&gt;NGINX&lt;/strong&gt;, e também o &lt;strong&gt;yourdomain.com.br&lt;/strong&gt; e &lt;strong&gt;www.yourdomain.com.br&lt;/strong&gt; pelo seu domínio:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ sudo /opt/letsencrypt/letsencrypt-auto certonly -a webroot --webroot-path=/var/www/yoursite -d yourdomain.com.br -d www.yourdomain.com.br
&lt;/pre&gt;

&lt;p&gt;Neste processo irá ser solicitado seu &lt;em&gt;e-mail&lt;/em&gt;, para caso necessite da recuperação de seu certificado.&lt;/p&gt;

&lt;h4 id=&#34;adicionandoocertificadoemsuaaplicao&#34;&gt;Adicionando o certificado em sua aplicação:&lt;/h4&gt;

&lt;p&gt;Após o certificado ser gerado com sucesso, altere novamente o seu arquivo de regras do seu site &lt;strong&gt;(/etc/nginx/sites-enabled/yoursite)&lt;/strong&gt;, adicionando mais um &lt;strong&gt;server&lt;/strong&gt;, desta vez o de &lt;strong&gt;ssl&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;server {  
    listen 443 ssl;
    server_name yourdomain.com.br www.yourdomain.com.br;

    location / {
        proxy_pass http://localhost:8080;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }

    location ~ ^/.well-known {
        root /var/www/yoursite;
    }

    ssl_certificate /etc/letsencrypt/live/yourdomain.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com.br/privkey.pem;
}
&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Lembrando que você deve alterar o &lt;strong&gt;location /&lt;/strong&gt; com as configurações específicas da sua aplicação web.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Reinicie novamente o seu &lt;strong&gt;NGINX&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ sudo systemctl restart nginx
&lt;/pre&gt;

&lt;p&gt;Entre em seu domínio utilizando o &lt;strong&gt;https&lt;/strong&gt; e veja se o processo ocorreu com sucesso.&lt;/p&gt;

&lt;h4 id=&#34;conferindoaqualidadedoseussl&#34;&gt;Conferindo a qualidade do seu SSL:&lt;/h4&gt;

&lt;p&gt;Altere &lt;em&gt;example.com&lt;/em&gt; pelo seu domínio:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=example.com&#34;&gt;https://www.ssllabs.com/ssltest/analyze.html?d=example.com&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;melhorandoaqualidadedoseucertificado&#34;&gt;Melhorando a qualidade do seu certificado:&lt;/h4&gt;

&lt;p&gt;É importante validar as cifras utilizadas, limitar a versão do protocolo &lt;strong&gt;SSL&lt;/strong&gt;, entre outras coisas. Para isso, recomendo a leitura do seguinte tópico na wiki da Mozilla, &lt;a href=&#34;https://wiki.mozilla.org/Security/Server_Side_TLS&#34;&gt;Server Side TLS&lt;/a&gt;. Existe também o &lt;a href=&#34;https://mozilla.github.io/server-side-tls/ssl-config-generator&#34;&gt;Mozilla SSL Configuration Generator&lt;/a&gt;, um gerador de configuração &lt;strong&gt;SSL&lt;/strong&gt; para diversos servidores de aplicação.&lt;/p&gt;

&lt;h4 id=&#34;renovandoseucertificadocomcrontab&#34;&gt;Renovando seu certificado com crontab:&lt;/h4&gt;

&lt;p&gt;O certificado gerado é válido por 3 meses, para facilitar a renovação, você pode criar um &lt;em&gt;cronjob&lt;/em&gt; para fazer este trabalho:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ crontab -e
&lt;/pre&gt;

&lt;p&gt;Adicione no final do arquivo:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;0 0 1 */2 * /opt/letsencrypt/letsencrypt-auto renew --quiet --no-self-upgrade  
0 0 1 */2 * systemctl reload nginx  
&lt;/pre&gt;

&lt;h3 id=&#34;concluindo&#34;&gt;Concluindo:&lt;/h3&gt;

&lt;p&gt;Neste artigo foi demonstrando a geração do &lt;strong&gt;SSL&lt;/strong&gt; para o &lt;strong&gt;NGINX&lt;/strong&gt;, mas este mesmos passos podem ser facilmente executados em qualquer servidor de aplicação, com algumas modificações. Lembrando que existem outros comandos específicos da ferramenta &lt;strong&gt;Let&amp;#8217;s Encrypt&lt;/strong&gt;, como &lt;strong&gt;letsencrypt-apache&lt;/strong&gt; que faz todo o trabalho pra você no caso do &lt;em&gt;Apache&lt;/em&gt;, mas tentei demonstrar a forma genérica, que pode servir para outros servidores.&lt;/p&gt;

&lt;h3 id=&#34;referências-e-links&#34;&gt;Referências e Links:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://letsencrypt.org&#34;&gt;https://letsencrypt.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/certbot/certbot&#34;&gt;https://github.com/certbot/certbot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nginx.com/blog/free-certificates-lets-encrypt-and-nginx&#34;&gt;https://www.nginx.com/blog/free-certificates-lets-encrypt-and-nginx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;O certificado &lt;a href=&#34;https://www.1and1.com/certificado-ssl&#34;&gt;SSL&lt;/a&gt; também pode ser contratado na &lt;a href=&#34;https://www.1and1.com/&#34;&gt;1&amp;amp;1&lt;/a&gt; ou Certisign.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Keygen: Certificando suas paginas com HTML</title>
      <link>https://tableless.github.io/hugo-public/keygen-certificando-suas-paginas-com-html/</link>
      <pubDate>Wed, 13 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/keygen-certificando-suas-paginas-com-html/</guid>
      <description>

&lt;p&gt;Com a convergência tudo está indo para a web. Tudo. Por enquanto a grande maioria das apps e paginas estão abertas, mas a medida que o tempo passa, a web também evolui. Em um ambiente completamente social, aonde a relevância do conteúdo não está mais nas mãos de quem anuncia, mas sim na dos leitores, conteúdo cada vez mais segmentado vai surgir. E inevitavelmente, cada vez mais precisaremos de &lt;strong&gt;certificados&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;o-que-são-e-como-funcionam-os-certificados&#34;&gt;O que são e como funcionam os certificados?&lt;/h2&gt;

&lt;p&gt;Em criptografia, um certificado de chave pública (também conhecido como um certificado digital ou certificado de identidade – aka SSL) é um documento eletrônico que usa uma assinatura digital para vincular uma chave pública com informações sobre a identidade do remetente – que pode ter informações como o nome de uma pessoa ou um organização, seu endereço e assim por diante. O certificado pode ser usado para verificar se uma chave pública pertence a um indivíduo. Vamos cada vez mais agregando valor ao conteúdo na web através de rating, comentários, presença online, etc. Mas ainda sim a web oferece brechas no sistema, permitindo que pessoas possam emitir valores e opiniões sem a devida validação. Essas brechas vao diminuindo a medida que os certificados vão sendo usados, e em uma web puramente social, é difícil se imaginar sem um destes certificados, e acho que no futuro próximo, isso será realidade mandatória para todos.&lt;/p&gt;

&lt;p&gt;O uso mais comum dos certificados é de web sites baseados em HTTPS. Browsers validam certificados SSL de servidores web, para que o usuário pode se sentir seguro de que sua interação com o site não tem espiões e que o site é quem afirma ser. Na prática, um usuário obtém uma chave criptografada gerada pelo website, que validada com um fornecedor certificado (uma loja de certificado$) confirma a procedência do certificado. Durante a navegação, este certificado público é enviado a qualquer browser que se conecte ao site, mostrando para o usuário que o endereço é validado – e seguro.&lt;/p&gt;

&lt;div id=&#34;attachment_3480&#34; style=&#34;width: 662px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/04/certifi.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2011/04/certifi.png&#34; alt=&#34;Esta imagem é uma representacao grafica do ultimo paragrafo, mostrando a interacao que o usuario tem com servidor atraves de SSL&#34; width=&#34;652&#34; height=&#34;207&#34; class=&#34;size-full wp-image-3480&#34; srcset=&#34;uploads/2011/04/certifi.png 652w, uploads/2011/04/certifi-300x95.png 300w&#34; sizes=&#34;(max-width: 652px) 100vw, 652px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Intercação de usuário com website seguro atraves de certificados SSL
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Quem faz esta validação é chamado de &lt;strong&gt;entidade certificadora&lt;/strong&gt;, e poderíamos mencionar a &lt;strong&gt;Certisign&lt;/strong&gt;, &lt;strong&gt;Verisign&lt;/strong&gt; e &lt;strong&gt;Serasa&lt;/strong&gt; além de &lt;strong&gt;Federações e Sindicatos&lt;/strong&gt;, como a &lt;strong&gt;FENACON&lt;/strong&gt; e a &lt;strong&gt;PRODEMGE&lt;/strong&gt;. No Brasil por exemplo, manter uma chave publica pessoal para atestar sua identidade (&lt;a href=&#34;http://www.certisign.com.br/produtos-e-servicos/certificados-digitais/e-cpf&#34;&gt;e-CPF&lt;/a&gt;) custa em média R$130,00.&lt;/p&gt;

&lt;h2 id=&#34;single-sign-on-x-certificados&#34;&gt;Single sign-on X Certificados&lt;/h2&gt;

&lt;p&gt;É notório que o custo dos certificados são suas maiores barreiras. É visível o custo de manutenção de estruturas para manter servidores &lt;strong&gt;apenas&lt;/strong&gt; para validar certificados – e não são poucos. Mas mesmo assim, algo tão importante deveria ser mantido em regime de economia de escala &amp;#8211; e ser oferecido de maneira mais acessível a população.&lt;/p&gt;

&lt;p&gt;Enquanto isso, vamos oferecendo soluções para os clientes que envolvem na maioria das vezes, &lt;a href=&#34;http://www.opengroup.org/security/sso/&#34;&gt;single-sign-on (SSO)&lt;/a&gt;. O conceito vem sendo pregado pelo &lt;a href=&#34;http://www.opengroup.org/security/sso/&#34;&gt;Open Group&lt;/a&gt; a muito tempo, e dele surgiu o &lt;a href=&#34;http://openid.net/get-an-openid/what-is-openid/&#34;&gt;OpenID&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O funcionamento de um &lt;strong&gt;OpenID&lt;/strong&gt; é simples, ele simplesmente valida a existência de um usuário baseado em serviços ja consolidados de login, que oferecem uma API bem documentada e incentivam o seu uso. &lt;a href=&#34;http://openid.net/get-an-openid/&#34;&gt;Google, Facebook e outras empresas oferecem estes servicos&lt;/a&gt;. “Cascatear” a validação, oferecendo a segurança de uma entidade como as mencionadas é algo que fortalece muito a segurança da sua aplicação e a confiança do usuário. Se você não existe em uma rede social (eis que chegamos na &lt;a href=&#34;http://pt.wikipedia.org/wiki/Reifica%C3%A7%C3%A3o_(marxismo)&#34;&gt;reificação&lt;/a&gt; do usuário através de sua existencia digital), não tem como logar, validar, navegar&amp;#8230; enfim, nada.&lt;/p&gt;

&lt;p&gt;Mas ainda sim este método apresenta falhas. Alguém que tenha posse de seu user e senha pode facilmente se passar por você. Isso o single sign-on não pode evitar, mas certificados resolvem este problema. Mas também não são perfeitos. É importante conhecer os dois métodos pois dependendo do nível de segurança que você precisa oferecer a aplicação, qualquer uma das opções serão válidas. Quer apenas ter certeza que o usuário existe antes de postar um comentário em seu site? Ok, dá pra usar um single sign-on sem problemas. Precisa mostrar que seu site é &lt;strong&gt;realmente seguro&lt;/strong&gt; para garantir transações financeiras e honrar o cadeadinho na tray do navegador? Certificados são o que você deverá usar.&lt;/p&gt;

&lt;h2 id=&#34;como-requerer-um-certificado-pelo-método-usual&#34;&gt;Como requerer um certificado pelo método usual?&lt;/h2&gt;

&lt;p&gt;Um certificado custa dinheiro. E não é barato. Talvez por isso eles ainda nao sejam amplamente utilizados. Bancos por exemplo costumam pagar para seus clientes seus certificados como ferramentas de fidelização. Certificados são temporais e muitas pessoas quando necessitam, compram por um ano ou tres o serviço. Existem leis em tramite no congresso em relação ao RIC, o registro de identidade civil, com vinculações ao e-cpf, o que virtualmente obriga todos a possuírem certificados digitais atrelados ao CPF no longo prazo.&lt;/p&gt;

&lt;h2 id=&#34;como-montar-um-certificado-apenas-com-8230-html&#34;&gt;Como montar um certificado apenas com&amp;#8230; HTML?&lt;/h2&gt;

&lt;p&gt;Mas até ai nada novo. Na real, nada do que esta neste post é novo, apenas &lt;strong&gt;obscuro&lt;/strong&gt;. Desde a época do saudoso Netspace Navigator existe uma tag pouco utilizada, e da mesma maneira pouco conhecida &amp;#8211; &lt;keygen&gt; &lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;lt;a href=&amp;quot;http://tableless.com.br/wp-content/uploads/2011/04/IC341506.gif&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;http://tableless.com.br/wp-content/uploads/2011/04/IC341506.gif&amp;quot; alt=&amp;quot;&amp;quot; width=&amp;quot;561&amp;quot; height=&amp;quot;200&amp;quot; class=&amp;quot;alignleft size-full wp-image-3481&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Quando a internet ainda engatinhava, a Netscape criou um meio dela mesma poder emitir – e validar – certificados, usando HTTP e HTML. Essa tag é suportada pela maioria dos browsers (exceção a Apple – Safari e iOS), porém nunca foi oficialmente colocada no pacote das especificações HTML. Vinha sendo usada de maneira tímida, mas voltou aos spots com o HTML5. Ou seja, embora muitas documentações mencionem ela como elemento HTML5 (inclusive a do Mozilla Developer Network), é quase mais velha que a especificação HTML4.&lt;/p&gt;

&lt;h2 id=&#34;como-funciona&#34;&gt;Como funciona?&lt;/h2&gt;

&lt;p&gt;A sintaxe é simples e suporta atributos globais como o autofocus.&lt;/p&gt;

&lt;pre lang=&#34;html&#34; line=&#34;1&#34;&gt;&amp;lt;keygen name=&#34;soureal&#34; challenge=&#34;String de verificacao&#34; keytype=&#34;tipo de chave&#34; keyparams=&#34;pqg-params&#34;&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Challenge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Uma seqüência de desafio que é apresentado juntamente com a chave pública. O padrão é uma string vazia se não for especificada.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disabled&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Atributo booleano que indica que o controle de formulário não está disponível para interação.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Form&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Todo &lt;code&gt;keygen&lt;/code&gt; para funcionar depende de um form que processa a informação. Com isso, podemos dizer que por enquanto, adeus Ajax para fazer uso de keygen sem submeter formulários. Foi da tentativa de conseguir isso que resolvi criar este post. O elemento de form precisa existir associado ao &amp;lt;keygen&amp;amp;gt.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;keyType&lt;/dt&gt;
&lt;dd&gt;O tipo de chave gerada. O valor padrão é o RSA.&lt;/dd&gt;
&lt;dt&gt;Nome&lt;/dt&gt;
&lt;dd&gt;O nome do campo&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt; e &lt;strong&gt;Challenge&lt;/strong&gt; são attributos obrigatórios. &lt;strong&gt;Keytype&lt;/strong&gt; especifica o tipo de chave (RSA-DSA e EC). Caso use chaves DSA ou EC você precisa especificar &lt;strong&gt;keyparams&lt;/strong&gt;. Para declará-los da seguinte maneira: &lt;strong&gt;keyparams=&amp;#8221;pqg-params&amp;#8221;&lt;/strong&gt; ou &lt;strong&gt;pqg=&amp;#8221;pqg-params&amp;#8221;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O modo como o keygen é apresentado varia de navegador a navegador, desde os tempos de Netscape (a Microsoft acreditem – criou um suporte sensacional – porém atrelado a registro de DLL’s, te obrigando a ter um IIS, e por consequencia uma licença de Windows). A interface do usuário para pode ser um menu, botões de rádio, ou até abordagens que ainda não conhecemos. As opções de encriptação apresentam níveis, médio e alto. Se o navegador do usuário estiver configurado para suportar&lt;/p&gt;

&lt;p&gt;hardware criptográfico (por exemplo, &amp;#8220;smart cards&amp;#8221;), o usuário também poderá escolher aonde salvar seu certificado, em um cartão inteligente ou em um software(browser) e armazenado no disco.&lt;/p&gt;

&lt;h2 id=&#34;e-o-código&#34;&gt;E o código?&lt;/h2&gt;

&lt;pre lang=&#34;html&#34; line=&#34;1&#34;&gt;&lt;/pre&gt;

&lt;p&gt;Para ver o em ação, clique aqui: &lt;a href=&#34;http://koolbanana.com.br/usehtml/keygen.html&#34;&gt;http://koolbanana.com.br/usehtml/keygen.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E pra quem achava que keygen era coisa de pirata&amp;#8230;&lt;/p&gt;

&lt;p&gt;Gostaria de agradecer o &lt;strong&gt;Gabriel Pereira Borges&lt;/strong&gt; por ter ajudado (e inspirado) este post. A dor de cabeça valeu a pena!&lt;/p&gt;

&lt;h3 id=&#34;referências&#34;&gt;Referências&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Certificados SSL: &lt;a href=&#34;http://en.wikipedia.org/wiki/Ssl_certificate&#34;&gt;http://en.wikipedia.org/wiki/Ssl_certificate&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.networksolutions.com/SSL-certificates/how-ssl-works.jsp&#34;&gt;http://www.networksolutions.com/SSL-certificates/how-ssl-works.jsp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;e-cpf: &lt;a href=&#34;http://www.certisign.com.br/produtos-e-servicos/certificados-digitais/e-cpf&#34;&gt;http://www.certisign.com.br/produtos-e-servicos/certificados-digitais/e-cpf&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.receita.fazenda.gov.br/atendvirtual/solicemrenrevcd.htm&#34;&gt;http://www.receita.fazenda.gov.br/atendvirtual/solicemrenrevcd.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open Group: &lt;a href=&#34;http://www.opengroup.org/&#34;&gt;http://www.opengroup.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSO: &lt;a href=&#34;http://www.opengroup.org/security/sso/&#34;&gt;http://www.opengroup.org/security/sso/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://code.google.com/googleapps/marketplace/sso.html&#34;&gt;http://code.google.com/googleapps/marketplace/sso.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SAML: &lt;a href=&#34;http://code.google.com/googleapps/domain/sso/saml_reference_implementation.html&#34;&gt;http://code.google.com/googleapps/domain/sso/saml_reference_implementation.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenID: &lt;a href=&#34;http://openid.net/get-an-openid/&#34;&gt;http://openid.net/get-an-openid/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://openid.net/get-an-openid/what-is-openid/&#34;&gt;http://openid.net/get-an-openid/what-is-openid/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reificação: &lt;a href=&#34;http://pt.wikipedia.org/wiki/Reifica%C3%A7%C3%A3o_(marxismo&#34;&gt;http://pt.wikipedia.org/wiki/Reifica%C3%A7%C3%A3o_(marxismo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;RIC: &lt;a href=&#34;http://portal.mj.gov.br/ric&#34;&gt;http://portal.mj.gov.br/ric&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Keygen: &lt;a href=&#34;https://developer.mozilla.org/En/HTML/Element/keygen&#34;&gt;https://developer.mozilla.org/En/HTML/Element/keygen&lt;/a&gt;&lt;br /&gt;
Obscure tags: &lt;a href=&#34;http://obscuretags.com/showcode.php?id=19&#34;&gt;http://obscuretags.com/showcode.php?id=19&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://dev.w3.org/html5/markup/keygen.html&#34;&gt;http://dev.w3.org/html5/markup/keygen.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/cc249768(v=prot.13).aspx&#34;&gt;http://msdn.microsoft.com/en-us/library/cc249768(v=prot.13).aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;documentacao de 1998(!!!): &lt;a href=&#34;http://devedge-temp.mozilla.org/library/manuals/1998/htmlguide/tags10.html#1615503&#34;&gt;http://devedge-temp.mozilla.org/library/manuals/1998/htmlguide/tags10.html#1615503&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gerando chaves com Keygen em IIS: &lt;a href=&#34;http://forums.hostsearch.com/archive/index.php?t-2094.html&#34;&gt;http://forums.hostsearch.com/archive/index.php?t-2094.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IIS suporte a keygen: &lt;a href=&#34;http://certs.ipsca.com/Support/CSRMicrosoft-Internet-Information-Server-4.0.asp&#34;&gt;http://certs.ipsca.com/Support/CSRMicrosoft-Internet-Information-Server-4.0.asp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>