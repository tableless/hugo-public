<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bitbucket on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/bitbucket/index.xml</link>
    <description>Recent content in Bitbucket on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/bitbucket/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Usando GIT para atualizar arquivos no servidor de hospedagem II ‚Äì Final</title>
      <link>https://tableless.github.io/hugo-public/usando-git-para-atualizar-arquivos-no-servidor-de-hospedagem-ii-final/</link>
      <pubDate>Thu, 19 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/usando-git-para-atualizar-arquivos-no-servidor-de-hospedagem-ii-final/</guid>
      <description>

&lt;p&gt;Esta √© a segunda e √∫ltima parte do artigo que explica como fazer um esquema simples para deploy autom√°tico usando GIT + Bitbucket&lt;/p&gt;

&lt;p&gt;A mesma configura√ß√£o pode ser usada em qualquer servidor GIT e qualquer servi√ßo de hospedagem que tenha acesso via ssh e git instalado&lt;/p&gt;

&lt;p&gt;Se voc√™ ainda n√£o leu a primeira parte, segue o link: &lt;a href=&#34;http://tableless.com.br/usando-git-para-atualizar-arquivos-no-servidor-de-hospedagem&#34;&gt;http://tableless.com.br/usando-git-para-atualizar-arquivos-no-servidor-de-hospedagem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No artigo anterior, criamos as chaves SSH para autentica√ß√£o no Bitbucket, criamos um reposit√≥rio GIT e manualmente executamos o comando | git pull | para atualizar o nosso reposit√≥rio.&lt;/p&gt;

&lt;p&gt;Nessa segunda parte vamos executar o comando para atualiza√ß√£o, de forma automatizada, sem precisar acessar o servidor. Vamos fazer um painel de controle para acompanhar os logs de deploy, mostrando se o comando foi executado com sucesso ou se aconteceu algum erro.&lt;/p&gt;

&lt;p&gt;Gostaria de lembrar que essa √© uma solu√ß√£o simples, existem v√°rias maneiras de fazer deploy automatizado, eu escolhi fazer usando php e shell_exec, √© mais r√°pido e para projetos simples isso funciona muito bem. O mesmo pode ser feito usando &lt;a href=&#34;https://pt.wikipedia.org/wiki/CGI&#34;&gt;CGI&lt;/a&gt; ou &lt;a href=&#34;https://pt.wikipedia.org/wiki/Shell_script&#34;&gt;Shell Script&lt;/a&gt;, ou ainda voc√™ pode usar um servi√ßo online como o heroku.com, ou configurar o Capistrano, ou Jenkins, etc&amp;#8230;&lt;/p&gt;

&lt;h4 id=&#34;o-comando-shell-exec-no-php&#34;&gt;O Comando shell_exec no PHP&lt;/h4&gt;

&lt;p&gt;No manual do php:&lt;/p&gt;

&lt;p&gt;(PHP 4, PHP 5, PHP 7)&lt;/p&gt;

&lt;p&gt;shell_exec ‚Äî Executa um comando via shell e retorna a sa√≠da inteira como uma string&lt;/p&gt;

&lt;p&gt;Isso quer dizer que podemos executar um comando no servidor e ler o retorno desse comando, no nosso caso vamos executar o comando | git pull origin master | o mesmo comando que est√°vamos executando manualmente l√° no servidor, lembra que t√≠nhamos que acessar o servidor via putty, navegar at√© a pasta do nosso reposit√≥rio e depois executar um git pull, j√° que isso √© uma tarefa repetitiva, vamos automatizar, √© isso que devemos fazer com todos os processos repetitivos.&lt;/p&gt;

&lt;p&gt;Em muitos servidores de hospedagem esse comando √© bloqueado por padr√£o, se estiver bloqueado voc√™ vai receber um aviso parecido com esse:&lt;/p&gt;

&lt;pre class=&#34;lang-shell&#34;&gt;Warning:  shell_exec() has been disabled for security reasons in /var/www/deploy.php on line 10&lt;/pre&gt;

&lt;p&gt;No meu caso eu abri um chamado no painel da hospedagem, explicando que precisava da libera√ß√£o para usar em um sistema de deploy autom√°tico usando GIT e prontamente fui atendido e o comando foi liberado.&lt;/p&gt;

&lt;p&gt;Vou usar o mesmo reposit√≥rio que usei para a primeira parte, &lt;a href=&#34;https://bitbucket.org/jzonta/artigo_atualizacao_arquivos&#34;&gt;https://bitbucket.org/jzonta/artigo_atualizacao_arquivos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vamos Come√ßar, e vamos usar um dos termos da metodologia XP &amp;#8211; Extremme Programing, &amp;#8220;Baby Steps&amp;#8221;, vamos executar todo o processo em pequenos passos, eu vou atualizar o reposit√≥rio no GIT com todos os passos, voc√™ pode acessar e ver todos os commits &amp;#8211; inclusive os errados üôÇ &amp;#8211; √© bacana pra ver a evolu√ß√£o do c√≥digo.&lt;/p&gt;

&lt;p&gt;Vou criar uma pasta chamada deploy e dentro um arquivo chamado index.php, quando executado pelo navegador ele atualiza nosso servidor executando o comando git pull no servidor e imprimindo na tela o resultado do commnado.&lt;/p&gt;

&lt;p&gt;A pasta deploy deve ficar dentro da pasta do seu projeto, voc√™ pode ver a estrutura que usei no reposit√≥rio desse artigo no Bitbucket.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;* Note que no final do comando git pull eu adicionei &amp;#8220;2&amp;gt;&amp;amp;1&amp;#8221; isso quer dizer que alem das sa√≠das normais eu quero exibir as sa√≠das de erro do nosso comando no servidor.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;index.php&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&#34;utf-8&#34;/&amp;gt;
&amp;lt;title&amp;gt;Usando GIT para atualizar arquivos no servidor de hospedagem&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;pre&amp;gt;
    &amp;lt;?php
        $exec = shell_exec(&#34;git pull origin master 2&amp;gt;&amp;1&#34;);
        echo $exec;
    ?&amp;gt;
    &amp;lt;/pre&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;A sa√≠da na tela √© a mesma que aparece quando executamos o comando l√° no servidor, veja o exemplo da sa√≠da no servidor e no navegador:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/10/comando_shell_navegador.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-51941&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/10/comando_shell_navegador.jpg&#34; alt=&#34;comando_shell_navegador&#34; width=&#34;657&#34; height=&#34;210&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;* Lembre-se que para enviar esse arquivo ao servidor voc√™ n√£o deve usar o ftp, fa√ßa isso utilizando o comando |git pull|, j√° fizemos isso na primeira parte do artigo.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;J√° estamos atualizando nosso servidor apenas acessando uma url em nosso navegador \o/, mas n√£o √© s√≥ isso que queremos, eu quero que essa url seja chamada sempre que eu enviar um push para o reposit√≥rio, ent√£o acesse sua conta no Bitbucket e vamos configurar isso.&lt;/p&gt;

&lt;p&gt;Acesse seu reposit√≥rio, no menu lateral esquerdo, clique em &amp;#8220;Configura√ß√µes&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Na tela configura√ß√µes clique em &amp;#8220;Webhooks&amp;#8221; e depois em &amp;#8220;Add Webhook&amp;#8221;&lt;/p&gt;

&lt;p&gt;No campo &amp;#8220;Title&amp;#8221; adicione um nome de sua prefer√™ncia e no campo &amp;#8220;URL&amp;#8221; adicione o endere√ßo para a sua url que executa o comando de atualiza√ß√£o, no meu caso a URL √© &amp;#8220;&lt;a href=&#34;http://joaozonta.com.br/artigo_atualizacao_arquivos/deploy/index.php&amp;amp;#8221&#34;&gt;http://joaozonta.com.br/artigo_atualizacao_arquivos/deploy/index.php&amp;amp;#8221&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;Mas n√£o podemos deixar essa URL aberta, porque qualquer um poderia acessar e isso iria executar o comando git pull em nosso servidor, ent√£o vamos criar um token de autentica√ß√£o, junto com a URL eu passo um token que mais tarde vamos validar l√° no nosso c√≥digo, ent√£o a URL ficaria assim: &lt;a href=&#34;http://joaozonta.com.br/artigo_atualizacao_arquivos/deploy/index.php?token=d41d8cd98f00b204e9800998ecf8427e&#34;&gt;http://joaozonta.com.br/artigo_atualizacao_arquivos/deploy/index.php?token=d41d8cd98f00b204e9800998ecf8427e&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;* Use este site para gerar seu token: &lt;a href=&#34;http://www.miraclesalad.com/webtools/md5.php&#34;&gt;http://www.miraclesalad.com/webtools/md5.php&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/10/adicionar_webhook.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-51940&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/10/adicionar_webhook.jpg&#34; alt=&#34;adicionar_webhook&#34; width=&#34;850&#34; height=&#34;439&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feito isso, toda vez que enviar um push para o Bitbucket ele vai acessar a URL, e nossa url vai disparar o comando |git pull| no servidor e os arquivos ser√£o atualizados. Nosso deploy j√° esta funcionando, mas eu tamb√©m quero visualizar os logs, para ter maior controle sobre oque esta acontecendo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/10/local_git_servidor.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-51943&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/10/local_git_servidor.jpg&#34; alt=&#34;local_git_servidor&#34; width=&#34;444&#34; height=&#34;352&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*No seu reposit√≥rio no Bitbucket, vc pode ver os requests que foram feitos entrando em &amp;#8220;Configura√ß√µes&amp;#8221;, &amp;#8220;Web Hooks&amp;#8221;, ao lado do Title do seu webhook voc√™ clica em &amp;#8220;View Requests&amp;#8221; e pode ver todas as requisi√ß√µes que o Bitbucket fez para a sua URL.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;gravando-log&#34;&gt;Gravando Log&lt;/h4&gt;

&lt;p&gt;Primeiro vamos gerar o texto que queremos gravar no nosso arquivo de log, poder√≠amos apenas colocar a sa√≠da do comando shell_exec, mas vamos adicionar a data, hora e algumas quebras de linha para deixar o nosso log mais leg√≠vel, veja como ficou o c√≥digo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&#34;utf-8&#34;/&amp;gt;
&amp;lt;title&amp;gt;Usando GIT para atualizar arquivos no servidor de hospedagem&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;pre&amp;gt;
    &amp;lt;?php
        $exec = shell_exec(&#34;git pull origin master 2&amp;gt;&amp;1&#34;);
        echo $exec;

        $textoLog = PHP_EOL.&#34;Data: &#34;.date(d.&#34;/&#34;.m.&#34;/&#34;.Y.&#34; - &#34;.H.&#34;:&#34;.i.&#34;:&#34;.s);
        $textoLog .= PHP_EOL.$exec;

        $arquivoLog = fopen(&#39;log.txt&#39;, &#39;a+&#39;);
        fwrite($arquivoLog, $textoLog);
        fclose($arquivoLog);
    ?&amp;gt;
    &amp;lt;/pre&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;p&gt;N√£o precisa explicar muito o c√≥digo php porque √© bem simples, se algu√©m tem d√∫vida dobre alguma das fun√ß√µes usadas √© s√≥ dar uma procurada no site do php (&lt;php.net&gt;) ou no google, tem bastante material.&lt;/p&gt;

&lt;p&gt;Se tudo est√° ocorrendo como planejado, quando voc√™ executar novamente seu endere√ßo URL ele vai criar um arquivo chamado log.txt na mesma pasta, e gravar os logs neste arquivo.&lt;/p&gt;

&lt;h4 id=&#34;adicionando-token-de-valida√ß√£o&#34;&gt;Adicionando Token de Valida√ß√£o&lt;/h4&gt;

&lt;p&gt;Vamos deixar nosso deploy um pouco mais seguro. Lembra que na URL que adicionamos l√° no webhook do Bitbucket colocamos um token? Ent√£o, agora vamos validar esse token.&lt;/p&gt;

&lt;p&gt;Criei uma variavel chamada $token e adicionei a nossa string MD5&lt;/p&gt;

&lt;p&gt;Depois a variavel $tokenValido recebe true se o token enviado via post ou get for igual ao token que configuramos na variavel $token, caso contr√°rio recebe false.&lt;/p&gt;

&lt;p&gt;Depois verificamos se $tokenValido for igual a true executa o deploy se n√£o exibe o log e um bot√£o para atualizar manualmente.&lt;/p&gt;

&lt;pre&gt;&amp;lt;?php
$token = &#34;d41d8cd98f00b204e9800998ecf8427e&#34;;
if($_REQUEST[&#39;token&#39;] == $token)
    $tokenValido = true;
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&#34;utf-8&#34;/&amp;gt;
&amp;lt;title&amp;gt;Usando GIT para atualizar arquivos no servidor de hospedagem&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;pre&amp;gt;
    &amp;lt;?php
        if($tokenValido) {
            $exec = shell_exec(&#34;git pull origin master 2&amp;gt;&amp;1&#34;);
            echo $exec;

            $textoLog = PHP_EOL.&#34;Data: &#34;.date(d.&#34;/&#34;.m.&#34;/&#34;.Y.&#34; - &#34;.H.&#34;:&#34;.i.&#34;:&#34;.s);
            $textoLog .= PHP_EOL.$exec;

            $arquivoLog = fopen(&#39;log.txt&#39;, &#39;a+&#39;);
            fwrite($arquivoLog, $textoLog);
            fclose($arquivoLog);
        } else {
            //Deve exibir o log e um bot√£o para para executar a atualiza√ß√£o
        }
    ?&amp;gt;
&amp;lt;/pre&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;h4 id=&#34;implementando-a-leitura-do-log-e-bot√£o-para-atualizar&#34;&gt;Implementando a Leitura do Log e Bot√£o Para Atualizar&lt;/h4&gt;

&lt;p&gt;No c√≥digo abaixo foi adiciona a implementa√ß√£o que l√™ o arquivo de log atrav√©s do comando file() e depois exibe na tela, tamb√©m foi adicionado um formul√°rio com o bot√£o &amp;#8220;Atualizar&amp;#8221;, caso ocorra alguma falha na atualiza√ß√£o autom√°tica atrav√©s do webhook esse bot√£o pode ser utilizado para for√ßar essa atualiza√ß√£o e executar o nosso deploy.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
$token = &#34;d41d8cd98f00b204e9800998ecf8427e&#34;;
if($_REQUEST[&#39;token&#39;] == $token)
    $tokenValido = true;
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&#34;utf-8&#34;/&amp;gt;
&amp;lt;title&amp;gt;Usando GIT para atualizar arquivos no servidor de hospedagem&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;pre&amp;gt;
        &amp;lt;?php
        if($tokenValido) {
            $exec = shell_exec(&#34;git pull origin master 2&amp;gt;&amp;1&#34;);
            echo $exec;

            $textoLog = PHP_EOL.&#34;Data: &#34;.date(d.&#34;/&#34;.m.&#34;/&#34;.Y.&#34; - &#34;.H.&#34;:&#34;.i.&#34;:&#34;.s);
            $textoLog .= PHP_EOL.$exec;

            $arquivoLog = fopen(&#39;log.txt&#39;, &#39;a+&#39;);
            fwrite($arquivoLog, $textoLog);
            fclose($arquivoLog);
        } else {
        ?&amp;gt;
            &amp;lt;form action=&#34;index.php&#34; method=&#34;post&#34;&amp;gt;
                &amp;lt;input type=&#34;hidden&#34; name=&#34;token&#34; value=&#34;d41d8cd98f00b204e9800998ecf8427e&#34;&amp;gt;
                &amp;lt;input type=&#34;submit&#34; value=&#34;Atualizar&#34;&amp;gt;
            &amp;lt;/form&amp;gt;
        &amp;lt;?php
        $texto = file(&#39;log.txt&#39;);
        foreach ($texto as $linha) {
            echo $linha;
        }
        }
        ?&amp;gt;
    &amp;lt;/pre&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;h4 id=&#34;adicionando-autentica√ß√£o&#34;&gt;Adicionando Autentica√ß√£o&lt;/h4&gt;

&lt;p&gt;Tudo funcionando, mas qualquer um pode entrar na nossa URL, visualizar os logs e clicar no bot√£o para atualizar o servidor.&lt;/p&gt;

&lt;p&gt;Ent√£o vou implementar uma autentica√ß√£o simples, iniciando uma sess√£o e usando a vari√°vel $senhaAcesso, ent√£o nossas regras seriam as seguintes:&lt;/p&gt;

&lt;p&gt;Se receber o token, faz a valida√ß√£o, se estiver correto, atualiza o nosso servidor&lt;/p&gt;

&lt;p&gt;Se receber a senhaAcesso, faz a valida√ß√£o se estiver correto, mostra o log e o bot√£o para atualizar&lt;/p&gt;

&lt;p&gt;Se n√£o receber o token e nem a senhaAcesso mostra um form solicitando a senha&lt;/p&gt;

&lt;p&gt;Nosso c√≥digo tem apenas 3 condi√ß√µes no if, eu preferi deixar assim pra ficar mais f√°cil de entender, as condi√ß√µes separadas para ficar mais f√°cil de entender:&lt;/p&gt;

&lt;pre&gt;if($tokenValido) {
            // Se o toquem for v√°lido
            // Executa o comando git pull para atualizar o servidor e grava o log
        } else if($_SESSION[&#39;usuarioValido&#39;]) {
            // Se o usu√°rio estiver logado mostra o log e o bot√£o para atualizar
        } else {
            //Se o usu√°rio n√£o estiver logado mostra o formul√°rio para logar
        }
&lt;/pre&gt;

&lt;p&gt;Abaixo o c√≥digo completo desta etapa:&lt;/p&gt;

&lt;pre&gt;&amp;lt;?php
session_start();
$token = &#34;d41d8cd98f00b204e9800998ecf8427e&#34;;
$senhaAcesso = &#39;joaozonta&#39;;

if($_REQUEST[&#39;token&#39;] == $token)
    $tokenValido = true;

if($_REQUEST[&#39;senhaAcesso&#39;] == $senhaAcesso &amp;&amp; empty($_SESSION[&#39;usuarioValido&#39;]))
    $_SESSION[&#39;usuarioValido&#39;] = true;

if($_REQUEST[&#39;sair&#39;])
    unset($_SESSION[&#39;usuarioValido&#39;]);
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&#34;utf-8&#34;/&amp;gt;
&amp;lt;title&amp;gt;Usando GIT para atualizar arquivos no servidor de hospedagem&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;pre&amp;gt;
    &amp;lt;?php
        if($tokenValido) {
            $exec = shell_exec(&#34;git pull origin master 2&amp;gt;&amp;1&#34;);
            echo $exec;

            $textoLog = PHP_EOL.&#34;Data: &#34;.date(d.&#34;/&#34;.m.&#34;/&#34;.Y.&#34; - &#34;.H.&#34;:&#34;.i.&#34;:&#34;.s);
            $textoLog .= PHP_EOL.$exec;

            $arquivoLog = fopen(&#39;log.txt&#39;, &#39;a+&#39;);
            fwrite($arquivoLog, $textoLog);
            fclose($arquivoLog);
        } else if($_SESSION[&#39;usuarioValido&#39;]) {
        ?&amp;gt;
        &amp;lt;form action=&#34;index.php&#34; method=&#34;post&#34;&amp;gt;
            &amp;lt;input type=&#34;hidden&#34; name=&#34;token&#34; value=&#34;d41d8cd98f00b204e9800998ecf8427e&#34;&amp;gt;
            &amp;lt;input type=&#34;submit&#34; value=&#34;Atualizar&#34;&amp;gt;
        &amp;lt;/form&amp;gt;
        &amp;lt;?php
        if($_SESSION[&#39;usuarioValido&#39;])
            echo &#39;&amp;lt;p&amp;gt;&amp;lt;a href=&#34;index.php?sair=true&#34;&amp;gt;Sair&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&#39;;
            $texto = file(&#39;log.txt&#39;);
            foreach ($texto as $linha) {
                echo $linha;
            }
        } else {
        ?&amp;gt;
        &amp;lt;form action=&#34;index.php&#34; method=&#34;post&#34;&amp;gt;
            &amp;lt;div&amp;gt;
                &amp;lt;input type=&#34;text&#34; placeholder=&#34;Senha&#34; name=&#34;senhaAcesso&#34;&amp;gt; 
            &amp;lt;/div&amp;gt;
            &amp;lt;input type=&#34;submit&#34; value=&#34;Acessar Sistema&#34;&amp;gt;
        &amp;lt;/form&amp;gt;
        &amp;lt;?php
        }
    ?&amp;gt;
&amp;lt;/pre&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;h4 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h4&gt;

&lt;p&gt;De uma maneira muito simples voc√™ pode atualizar seu servidor sem depender de um sistema complexo de deploy e sem muitas configura√ß√µes.&lt;/p&gt;

&lt;p&gt;Voc√™ pode implementar muitas outras op√ß√µes para deixar o seu sistema cada vez mais completo, pode adicionar um bot√£o para limpar o log ou adicionar o log em um banco de dados. J√° imaginou mostrar um combo com os √∫ltimos commits realizados e voc√™ escolher qual desses commits voc√™ quer atualizar no servidor, podendo assim voltar e avan√ßar vers√µes.&lt;/p&gt;

&lt;p&gt;N√£o falei sobre banco de dados nesse artigo, acho que isso pode ser tratado em outro t√≥pico.&lt;/p&gt;

&lt;p&gt;Voc√™ pode ver o exemplo funcionando em &lt;a href=&#34;http://joaozonta.com.br/artigo_atualizacao_arquivos/deploy/&#34;&gt;http://joaozonta.com.br/artigo_atualizacao_arquivos/deploy/&lt;/a&gt;, use a senha &amp;#8220;joaozonta&amp;#8221;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;No exemplo que esta no ar foram comentadas as linhas que fazem o deploy autom√°tico, est√° apenas simulando o funcionamento.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Fique √° vontade para entrar em contato para qualquer d√∫vida, sugest√£o, cr√≠tica ou erro que encontrar nesse artigo.&lt;/p&gt;

&lt;p&gt;Jo√£o A. Zonta&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.joaozonta.com.br&#34;&gt;joaozonta.com.br&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/joaozontaweb&#34;&gt;@joaozontaweb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;mailto:joao@joaozonta.com.br&#34;&gt;joao@joaozonta.com.br&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>