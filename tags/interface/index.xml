<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Interface on Tableless</title>
    <link>http://tableless.com.br/tags/interface/index.xml</link>
    <description>Recent content in Interface on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/interface/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>O futuro das interfaces: Chatbots</title>
      <link>http://tableless.com.br/o-futuro-das-interfaces-chatbots/</link>
      <pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/o-futuro-das-interfaces-chatbots/</guid>
      <description>

&lt;p&gt;Estamos acostumados a interagir diariamente com interfaces gráficas, seja no computador, celular, tablet, smart tv, etc. Naturalmente incorporamos a utilização dessas interfaces para obter nossos objetivos no dispositivo em questão, seja fazer uma busca no google, ver uma página no Facebook, ler um artigo em um portal de notícias ou escolher um filme no Netflix.&lt;/p&gt;

&lt;p&gt;Podemos não perceber, mas quando ligamos para um &lt;em&gt;call-center&lt;/em&gt; onde a máquina (&lt;strong&gt;&lt;em&gt;URA — Unidade de Resposta Audível&lt;/em&gt;&lt;/strong&gt;) nos pede para dizer em voz alta o que desejamos, ou o número correspondente ao que queremos, também estamos interagindo com uma interface de voz para atingir nosso propósito.&lt;/p&gt;

&lt;p&gt;Nesses dois casos, o ponto a se notar é que, não importa como, mas é preciso de uma interface para que nós humanos possamos utilizar sistemas e dispositivos digitais.&lt;/p&gt;

&lt;h2 id=&#34;legal-mas-onde-estão-os-chatbots-nessa-história&#34;&gt;Legal, mas onde estão os chatbots nessa história?&lt;/h2&gt;

&lt;p&gt;Simples. Chatbots podem ser interfaces no qual vamos interagir para atingir nossos objetivos obter !&lt;/p&gt;

&lt;p&gt;Para entender melhor, vamos a um exemplo clássico:&lt;/p&gt;

&lt;p&gt;Você está passeando no shopping, passa na frente do cinema, e descobre que aquele filme que você queria ver já está em cartaz, então decide assistí-lo.&lt;/p&gt;

&lt;p&gt;Porém a fila para comprar ingresso está enorme, você não quer perder todo esse tempo. Então você pega seu celular, entra na loja de aplicativos, procura o app de cinema, começa o download, após finalizar abre o app, seleciona sua cidade, shopping em que está, filme desejado, horário, quantidade de ingressos, e finaliza fazendo o pagamento. Você utilizou a interface gráfica do app de cinema do seu celular para atingir seu objetivo, ótimo, funcionou!&lt;/p&gt;

&lt;p&gt;Porém, não poderia ser mais simples? E se você pudesse interagir via chat com um bot do cinema para comprar seus ingressos?&lt;/p&gt;

&lt;p&gt;Vamos imaginar que o cinema tem um chatbot disponível no seu app de messenger favorito, o Facebook Messenger.&lt;/p&gt;

&lt;p&gt;Você acessa seu messenger clica no usuário do cinema e envia a seguinte mensagem: &amp;#8220;&lt;em&gt;Quero comprar dois ingressos para o filme Star Wars Rogue One, no shopping X, para a sessão das 21:45&lt;/em&gt;&amp;#8220;&lt;em&gt;.&lt;/em&gt; Sua mensagem rapidamente vai ser interpretada, e em mais algumas frases rápidas de conversa (talvez para pagamento), você terá alcançado sua meta de comprar ingresso.&lt;/p&gt;

&lt;p&gt;Você pode não ter percebido, mas assim como fazemos com interfaces gráficas, você interagiu com uma interface para manipular um sistema, e atingir seu objetivo! Você interagiu com uma interface de chatbot!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;uploads/2017/02/cb2.jpg&#34; alt=&#34;&#34; width=&#34;626&#34; height=&#34;782&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;porque-esse-tipo-de-interface-é-promissora&#34;&gt;&lt;strong&gt;Porque esse tipo de interface é promissora?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Falando especificamente sobre a era da internet, e das interfaces para os dispositivos atuais (desktop, celulares, tablets), há anos equipes inteiras (UI Designers, UX Designers, Developers, CEO, etc) discutem incansavelmente sobre qual a melhor forma de atingir seus usuários.&lt;/p&gt;

&lt;p&gt;Inúmeros fatores nas interfaces/interação podem ser relevantes em produtos e sistemas. Nas empresas e instituições, sempre existem discussões voltadas para esses e outros fatores:&lt;/p&gt;

&lt;p&gt;&amp;#8211; Cores, formas, fontes e fotos &amp;#8211; Performance e velocidade de páginas e procedimentos &amp;#8211; Quais conteúdos são mais relevantes para o usuário &amp;#8211; Qual o máximo de cliques que um usuário pode ter para alcançar o que deseja&lt;/p&gt;

&lt;p&gt;Portanto, o caminho para uma boa conversa com nosso usuário em questão não é tão simples como parece.&lt;/p&gt;

&lt;p&gt;Além desses pontos, temos uma discussão importantíssima sobre o negócio em si, sobre como o sistema lê, processa e devolve dados e informações, sobre como o sistema irá se comportar diante do usuário.&lt;/p&gt;

&lt;p&gt;E se pudéssemos &amp;#8220;&lt;em&gt;pular uma etapa&lt;/em&gt;&amp;#8221; e focar mais tempo para o que importa? Se pudéssemos focar no objetivo do usuário, e buscar a forma melhor e mais rápida de concluir processos?&lt;/p&gt;

&lt;p&gt;Partindo do pressuposto de que a maioria dos usuários de internet sabem utilizar um chat, os chatbots excluem a curva de aprendizado das interfaces gráficas, facilitando para os desenvolvedores do produto, e para o usuário, que poderá interagir utilizando um processo que se assemelha com a comunicação com outros humanos via internet.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“_Nós pensamos que você deve enviar uma mensagem para uma empresa da mesma maneira que você envia a um amigo_” — Mark Zuckerberg na Facebook F8 Conference&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;E ainda não falamos dos detalhes mais técnicos: conexão, rede de dados, apps, espaço disponível no dispositivo…&lt;/p&gt;

&lt;p&gt;Para interagir com um chatbot, sua conexão não precisa ser tão rápida quanto para baixar um app, ou carregar um site. Você não precisa trafegar muitos dados a ponto de acabar com seu pacote diário de internet para conversar num chat. E se o bot está no app que você utilizar para conversar com seus amigos, não será necessário ocupar mais espaço no seu dispositivo.&lt;/p&gt;

&lt;p&gt;São muitas vantagens, não?!&lt;/p&gt;

&lt;h2 id=&#34;as-interfaces-gráficas-vão-morrer&#34;&gt;As interfaces gráficas vão morrer?&lt;/h2&gt;

&lt;p&gt;Não há nenhuma resposta certa, para essa pergunta. É uma questão que só poderá ser respondida com o passar dos anos.&lt;/p&gt;

&lt;p&gt;Na minha opinião, as interfaces podem perder muito espaço, mas não vão morrer completamente. Mesmo num futuro, imagino que sempre haverá algum caso em que pode uma interface gráfica pode ser útil, mesmo que para pequenas interações.&lt;/p&gt;

&lt;p&gt;Também não conseguimos prever com certeza o futuro dos chats. O próprio chatbot do Facebook Messenger tem a capacidade de enviar &lt;a href=&#34;https://developers.facebook.com/docs/messenger-platform/product-overview&#34; target=&#34;_blank&#34; rel=&#34;nofollow noopener&#34;&gt;botões, imagens e outros elementos gráfico&lt;/a&gt;s.&lt;/p&gt;

&lt;h2 id=&#34;concluindo&#34;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;A intenção desse post foi refletir um pouco sobre interfaces, e sobre vantagens e o poder dos chatbots.&lt;/p&gt;

&lt;p&gt;Obviamente, isso é só a ponta do iceberg das discussões sobre chatbots e seu futuro. Mas em pouco tempo de reflexão podemos enxergar um futuro promissor!&lt;/p&gt;

&lt;p&gt;Originalmente postado em: &lt;a href=&#34;https://medium.com/botsbrasil/o-futuro-das-interfaces-chatbots-b222c638bdb1&#34;&gt;https://medium.com/botsbrasil/o-futuro-das-interfaces-chatbots-b222c638bdb1&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hierarquia no design</title>
      <link>http://tableless.com.br/hierarquia-no-design/</link>
      <pubDate>Thu, 30 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/hierarquia-no-design/</guid>
      <description>&lt;p&gt;Hierarquia, segundo o dicionário Michaelis, é a categoria atribuída às pessoas ou às coisas, classificadas de acordo com a ordem de importância, crescente ou decrescente. Dessa forma, organizar hierarquicamente é o mesmo que definir graus de importância à alguém ou à alguma coisa.&lt;/p&gt;

&lt;p&gt;A hierarquia no design tem o mesmo objetivo da definição acima citada. Hierarquizar no design é controlar a transmissão e o impacto da mensagem. O designer sabe disso e faz uso da escala, cor, tonalidade, peso, inclinação, espacejamento, intervalos e inúmeras outras técnicas para atingir o objetivo de organizar a informação. Um exemplo clássico da importância da hierarquização no design é o sumário de um livro. Ali o leitor deverá encontrar as informações hierarquizadas e organizadas para que o conteúdo não fique confuso e que a navegação flua de tal forma que o leitor posso ter uma noção geral, porém real, do conteúdo do livro.&lt;/p&gt;

&lt;p&gt;A hierarquia guia o usuário na interface do dispositivo. Um site bem projetado é, entre outras coisas, ter as suas seções e estruturas dispostas em uma hierarquia coerente, que facilite a navegação do usuário no encontro das informações que deseja. Por exemplo, o título de uma seção recebe uma tipografia no tamanho de 48 pixels e um corpo pesado (bold), e o slogan que está posicionado logo abaixo recebe uma tipografia no tamanho de 24 pixels e um corpo normal. Bem, nesse caso o designer comunicou ao usuário que o título é mais importante que o slogan, e que deve ser lido primeiro e o slogan em seguida.&lt;/p&gt;

&lt;p&gt;De acordo com as designers Ellen Lupton e Jennifer Cole Phillips, autoras do livro &amp;#8220;Novos Fundamentos do Design&amp;#8221;, &amp;#8220;expressar hierarquias é um processo ativo, investigativo e capaz de gerar resultados visuais dinâmicos.&amp;#8221;. Hierarquizar não precisa ser a mesma coisa sempre. O designer pode ser inventivo, criativo na solução de problemas de hierarquia, toda a vez que o projeto permitir, para sempre romper a barreira do &amp;#8220;mais do mesmo&amp;#8221;. Essa inovação renova o interesse do usuário no conteúdo.&lt;/p&gt;

&lt;p&gt;Abaixo alguns exemplos onde a hierarquia é aplicada:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-54066&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/05/Parcel.png&#34; alt=&#34;Parcel&#34; width=&#34;1351&#34; height=&#34;642&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;No site de entregas &lt;a href=&#34;https://www.fromparcel.com/&#34;&gt;Parcel&lt;/a&gt;, a home foi pensada e construída de forma que as atenções iniciais se voltem para a marca da empresa escrita no tamanho de 54 pixels. Após esse impacto inicial o usuário é conduzido a ler o slogan da empresa, que está escrito no tamanho de 19 pixels. Essa diferença entre os tamanhos indica claramente quem é mais importante, e quem deve ser lido primeiro. Isso é hierarquizar as informações.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-54067&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/05/webField.png&#34; alt=&#34;webField&#34; width=&#34;1348&#34; height=&#34;642&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Nesse caso o impacto não é tão gritante quanto o anterior. No site Web Field Manual os títulos estão no tamanho de 16 pixels, com um corpo pesado (bold), em caixa-alta (caps lock) e na cor vermelha. Já a descrição que vem logo abaixo de cada título está no tamanho de 13 pixels, porém com um corpo normal (regular). Bem, o contraste causado nesse caso também comunica ao usuário que ele deve ler o título primeiro, para após ler a descrição.&lt;/p&gt;

&lt;p&gt;Esses exemplos deixam claro que existem muitas possibilidades de trabalhar a hierarquia em um projeto gráfico ou para web. O importante é que o designer tenha os conhecimentos necessários de hierarquia, um bom senso crítico e muita criatividade, pois o sucesso é garantido.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4 PASSOS DA HIERARQUIA&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Guiar o usuário &amp;#8211;&lt;/strong&gt; A hierarquia guia a navegação do usuário na plataforma, seja ela on-line ou off-line. A hierarquia mostra o que o usuário deve ler primeiro.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Destacar o mais importante &amp;#8211;&lt;/strong&gt; Em um site de notícias, por exemplo, os títulos das notícias recebem um destaque maior. Dessa forma, se houver interesse pelo título, o usuário vai clicar e ler a notícia.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;O usuário escaneia o conteúdo &amp;#8211;&lt;/strong&gt; Isso está relacionado aos conceitos UI e UX, pois o usuário faz um escaneamento geral da interface, diferentemente de uma máquina que escaneia item por item de forma individual. Esse escaneamento feito pelo usuário faz com que ele tenha uma noção real do que se trata o conteúdo, e dessa forma vai buscar os itens com maior destaque na interface para saber se vai continuar lendo ou não.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tudo influencia a hierarquia &amp;#8211;&lt;/strong&gt; Inclinação, cor, peso, tonalidade, espaçamento, contraste entre a tipografia, alinhamento, entre outros.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crie layouts simples. SEMPRE!</title>
      <link>http://tableless.com.br/crie-layouts-simples-sempre/</link>
      <pubDate>Mon, 23 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/crie-layouts-simples-sempre/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;Sempre que você tiver duas alternativas para explicar alguma coisa, a explicação mais simples é provavelmente a mais correta&amp;#8221;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Essa citação é a famosa teoria&lt;em&gt; &amp;#8216;Navalha de Occam&lt;/em&gt;&amp;#8216; de Guilherme Occam, um frade franciscano inglês, também teólogo, filósofo e lógico.&lt;/p&gt;

&lt;p&gt;Podemos dizer que o conceito desse pensamento é irmão do título desse artigo. Quanto mais simples for a mensagem, maior a chance dela atingir as pessoas. A questão que eu trago aqui é que &lt;strong&gt;o simples não é sinônimo de fácil&lt;/strong&gt; como muitos pensam.&lt;/p&gt;

&lt;h3 id=&#34;quanto-custa-um-site-simples&#34;&gt;Quanto custa um site simples?&lt;/h3&gt;

&lt;p&gt;É muito comum chegar na minha caixa de e-mail pedidos de orçamentos genéricos com a recorrente pergunta: &amp;#8220;&lt;em&gt;&lt;strong&gt;Quanto custa um site simples?&lt;/strong&gt;&lt;/em&gt;&amp;#8221; Como se o fato de pedir algo &amp;#8216;simples&amp;#8217; estivesse diretamente ligado a &amp;#8216;orçamento barato&amp;#8217;! Já são quase 7 anos trabalhando como freelancer para perceber que isso é uma regra! Todos que usam essa frase querem desconto, não algo realmente simples porque querem passar uma mensagem simples para os usuários do seu site. Preço eu discuto num outro artigo, prometo. O que eu quero discutir aqui hoje &lt;strong&gt;é o conceito do simples e como ele é poderoso na comunicação&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;antes-do-layout-o-conteúdo&#34;&gt;Antes do layout, o conteúdo&lt;/h3&gt;

&lt;p&gt;Como princípio básico, eu construo os meus layouts o mais simples possível para os usuários. Mas para chegar numa interface simples é preciso muito convencimento e poder de argumentação com os clientes. 100% dos que eu atendi nesses anos, jamais criou o seu próprio conteúdo de comunicação sem que eu brigasse pelo usuário!&lt;/p&gt;

&lt;div id=&#34;attachment_47659&#34; style=&#34;width: 791px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img class=&#34;wp-image-47659&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/03/crie-layouts-simples-sempre-001.jpg&#34; alt=&#34;&amp;quot;Don&#39;t be evil&amp;quot; - Frase conceito do Google usada como norte em todos os projetos.&#34; width=&#34;781&#34; height=&#34;368&#34; srcset=&#34;uploads/2015/03/crie-layouts-simples-sempre-001.jpg 800w, uploads/2015/03/crie-layouts-simples-sempre-001-265x125.jpg 265w, uploads/2015/03/crie-layouts-simples-sempre-001-400x189.jpg 400w&#34; sizes=&#34;(max-width: 781px) 100vw, 781px&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    &amp;#8220;Don&amp;#8217;t be evil&amp;#8221; &amp;#8211; Frase conceito do Google usada como norte em todos os projetos.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Claro, que eu sou um tipo de profissional que se posicionou no mercado para atender pequenas e médias empresas. Estruturas que não possuem departamento de comunicação. Normalmente eu falo diretamente com o dono da empresa e é aí que mora o problema, porque a maioria das vezes ele não tem capacidade para gerar essa comunicação e pior, ainda acha a contratação de um profissional de planejamento e criação de conteúdo, caro e desnecessário, uma vez que ninguém melhor do que ele entende do próprio negócio.&lt;/p&gt;

&lt;p&gt;Por mais que eu concorde com esse último argumento, isso não significa que ele sabe como se comunicar com o seu consumidor para falar sobre a sua empresa, marca, serviço ou produto. E sem a comunicação adequada, não há arquitetura de informação bem feita e consequentemente o &amp;#8216;site simples&amp;#8217; contratado lá atrás no formulário, vira algo &amp;#8216;simplista&amp;#8217;, inadequado, capenga!&lt;/p&gt;

&lt;h3 id=&#34;antes-de-rabiscar-o-layout-é-preciso-muita-pesquisa-e-planejamento&#34;&gt;Antes de rabiscar o layout, é preciso muita pesquisa e planejamento&lt;/h3&gt;

&lt;p&gt;A prova disso é que se você pedir para um empresário responder junto com ele uma simples matriz de &lt;a title=&#34;Análise SWOT | Esse link abre numa nova janela&#34; href=&#34;http://pt.wikipedia.org/wiki/An%C3%A1lise_SWOT&#34; target=&#34;_blank&#34;&gt;Análise SWOT&lt;/a&gt; sobre a sua empresa, ele será incapaz de responder de forma equilibrada a maioria dos tópicos. Ora vai superestimar alguns pontos, como subestimar outros. O resultado dessa estratégia é criar uma interface que efetivamente não comunica, não atrai, e não interage com o consumidor/usuário.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter wp-image-47658&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/03/crie-layouts-simples-sempre-002.jpg&#34; alt=&#34;crie-layouts-simples-sempre-002&#34; width=&#34;350&#34; height=&#34;328&#34; srcset=&#34;uploads/2015/03/crie-layouts-simples-sempre-002.jpg 800w, uploads/2015/03/crie-layouts-simples-sempre-002-148x139.jpg 148w, uploads/2015/03/crie-layouts-simples-sempre-002-400x375.jpg 400w&#34; sizes=&#34;(max-width: 350px) 100vw, 350px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Aliás, interagir é um verbo que dificilmente os pequenos e médios empresários gostam de conjugar. O foco mesmo é a concorrência em todas as análises e tomadas de decisões. Para quase todas as perguntas a resposta é sempre a mesma. &amp;#8220;&lt;em&gt;&lt;strong&gt;Deixa eu ver como o meu concorrente está fazendo no site dele.&lt;/strong&gt;&lt;/em&gt;&amp;#8221; E assim, adeus diferencial.&lt;/p&gt;

&lt;h3 id=&#34;mas-e-o-conceito-do-simples&#34;&gt;Mas e o conceito do simples?&lt;/h3&gt;

&lt;div id=&#34;attachment_47660&#34; style=&#34;width: 800px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img class=&#34;wp-image-47660&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/03/crie-layouts-simples-sempre-003.jpg&#34; alt=&#34;&amp;quot;Design é função, não forma&amp;quot; (Steve Jobs)&#34; width=&#34;790&#34; height=&#34;411&#34; srcset=&#34;uploads/2015/03/crie-layouts-simples-sempre-003.jpg 800w, uploads/2015/03/crie-layouts-simples-sempre-003-265x139.jpg 265w, uploads/2015/03/crie-layouts-simples-sempre-003-400x208.jpg 400w&#34; sizes=&#34;(max-width: 790px) 100vw, 790px&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    &amp;#8220;Design é função, não forma&amp;#8221; (Steve Jobs)
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Bom, segundo Steve Jobs, &amp;#8220;&lt;em&gt;&lt;strong&gt;Design é função, não forma&lt;/strong&gt;&lt;/em&gt;&amp;#8220;. Ou seja, se um site não possui uma utilidade, deixa de ser necessário, e óbvio que o layout será inútil para o usuário. Cabe ao empresário pensar antes de contratar um profissional, e fazer as seguintes perguntas para sim mesmo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Porque a minha empresa precisa de um site?&lt;/li&gt;
&lt;li&gt;Como eu posso melhorar a relação dos nossos consumidores com a minha empresa?&lt;/li&gt;
&lt;li&gt;Quanto eu estou disposto a ouvir e interagir com os nossos consumidores?&lt;/li&gt;
&lt;li&gt;Como eu posso agregar mais valor dos meus serviços/produtos?&lt;/li&gt;
&lt;li&gt;Entre outras tantas!&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Baseado nas respostas desse empresário, certamente ele terá um perfil desse projeto bem mais adequado à realidade. E de posse do conceito desse projeto, de preferência documentado, ele terá condições de selecionar o tipo de profissional que tem condições técnicas de atendê-lo, e tenho certeza, &lt;strong&gt;que só assim, o design simples será criado, pois será focado no usuário e não no preço.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Caso contrário, será apenas mais um site inútil na web e teremos um empresário que vai continuar achando que a Internet não serve para o seu negócio.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Não sou artista, sou designer</title>
      <link>http://tableless.com.br/nao-sou-artista-sou-designer/</link>
      <pubDate>Wed, 04 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/nao-sou-artista-sou-designer/</guid>
      <description>

&lt;p&gt;Hello World, eu sou cristianoweb, e esse é o meu 1º artigo no Tableless! Olá amigos leitores, esse será um texto de estreia!&lt;/p&gt;

&lt;p&gt;Para começar, nada melhor do que eu me apresentar, certo? Meu nome é &lt;strong&gt;Cristiano Santos&lt;/strong&gt;, mais conhecido na Internet como &lt;strong&gt;cristianoweb&lt;/strong&gt; e trabalho com criação desde 2001. Na época eu era designer gráfico e diagramador no setor de criação de uma grande escola/curso aqui do Rio de Janeiro. Trabalhei nessa função por 5 anos e depois fui promovido à supervisor de criação, quando resolvi sair para me lançar como designer web freelancer em 2008.&lt;/p&gt;

&lt;p&gt;Desde que eu sou moleque, eu sempre quis ser desenhista. Meu pai é desenhista projetista de elevadores e lá em casa nunca faltou lápis e papel. Sim, meu pai desenhava elevadores &amp;#8220;na mão&amp;#8221;, pois ainda não existia Autocad na época. Apesar dos nossos estilos de desenho serem totalmente diferentes, certamente ver o meu pai na sua mesa no quarto dos fundos da nossa casa, influenciou quem eu viria a ser anos mais tarde.&lt;/p&gt;

&lt;p&gt;O velho virava noite para entregar projetos da sua empresa e isso claramente me chamou atenção. Mas antes de eu conseguir trabalhar com criação eu já fiz de tudo um pouco sem ser desenhar. Fui vendedor de sapatos e roupas masculinas, promotor de brinquedos e alimentos e até operador de telemarketing. Toda essa experiência me deu bagagem para o meu trabalho hoje!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Verdade!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Trabalhar diretamente com o público me deu uma enorme flexibilidade para tantos comportamentos e opiniões diferentes. No comércio, quanto mais você entende as pessoas, maior a chance de você vender. Não bastava conhecer bem um produto, era preciso conhecer as pessoas! E conversar com os meus clientes, saber das suas necessidades, ouvir os seus desejos, suas inspirações, sempre me ajudou a vender mais.&lt;/p&gt;

&lt;h3 id=&#34;mas-o-que-isso-tem-a-ver-com-criação&#34;&gt;Mas o que isso tem a ver com criação?&lt;/h3&gt;

&lt;p&gt;Tudo!&lt;/p&gt;

&lt;p&gt;Trabalhar com criação é mais do que saber sobre cores, formas, grids, ícones, texturas ou fontes. Ser criativo é saber focar nas pessoas. É entender as necessidades das pessoas, mesmo que elas próprias não saibam ainda.&lt;/p&gt;

&lt;div id=&#34;attachment_47487&#34; style=&#34;width: 790px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img class=&#34;wp-image-47487&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/03/thumb-hello-world-eu-sou-cristianoweb-e-esse-e-o-meu-1o-artigo-no-tableless-001.png&#34; alt=&#34;Trabalhar com criação é mais do que saber sobre cores, formas, grids, ícones, texturas ou fontes.&#34; width=&#34;780&#34; height=&#34;585&#34; srcset=&#34;uploads/2015/03/thumb-hello-world-eu-sou-cristianoweb-e-esse-e-o-meu-1o-artigo-no-tableless-001.png 800w, uploads/2015/03/thumb-hello-world-eu-sou-cristianoweb-e-esse-e-o-meu-1o-artigo-no-tableless-001-185x139.png 185w, uploads/2015/03/thumb-hello-world-eu-sou-cristianoweb-e-esse-e-o-meu-1o-artigo-no-tableless-001-400x300.png 400w&#34; sizes=&#34;(max-width: 780px) 100vw, 780px&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Trabalhar com criação é mais do que saber sobre cores, formas, grids, ícones, texturas ou fontes.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Quando o &lt;strong&gt;Diego Eis&lt;/strong&gt; me convidou para escrever no &lt;strong&gt;Tableless&lt;/strong&gt;, eu pensei muito na minha editoria. Além da honra de estar num dos sites que influenciaram a minha carreira quando eu decidi trabalhar como designer web, há também a responsabilidade de falar para o público que está acostumado a grandes debates por aqui. Então decidi que meus artigos serão pautados no &lt;strong&gt;foco do usuário&lt;/strong&gt;. Não só na questão das interfaces, mas também em tudo que influencia ANTES de criarmos os layouts. Todo o universo que rege os profissionais de criação e desenvolvimento e que nos faz tomar um caminho ou outro na criação.&lt;/p&gt;

&lt;p&gt;Como meta, deixo aqui uma frase que eu sempre uso antes de começar todos os projetos:&lt;/p&gt;

&lt;h3 id=&#34;não-sou-artista-sou-designer&#34;&gt;Não sou artista, sou designer.&lt;/h3&gt;

&lt;p&gt;Falo isso para estar sempre focado no usuário que entrará no site que eu criei em conjunto com outros profissionais. O site não é meu, é desse usuário. É preciso deixar o ego de lado da prancheta de trabalho e focar nas pessoas como diz &lt;strong&gt;Steve Krug&lt;/strong&gt; no seu livro &amp;#8220;&lt;em&gt;&lt;strong&gt;Não me faça pensar&lt;/strong&gt;&lt;/em&gt;&amp;#8220;.&lt;/p&gt;

&lt;p&gt;Devemos criar sites úteis, e ao pensar dessa forma chegamos à conclusão de que isso não é uma decisão individual. Criar sites focado no usuário é preciso um esforço de vários tipos de profissionais e aqui é o ponto que eu gostaria de chegar nesse artigo.&lt;/p&gt;

&lt;h3 id=&#34;a-coautoria-é-fundamental&#34;&gt;A coautoria é fundamental.&lt;/h3&gt;

&lt;p&gt;Como eu costumo dizer: &amp;#8220;&lt;em&gt;&lt;strong&gt;o desenvolvedor é um criativo, um redator web é um criativo, um arquiteto de informação é um criativo, não só o designer web&lt;/strong&gt;&lt;/em&gt;&amp;#8220;. Precisamos nos unir para criarmos uma boa experiência de usuário. Somos pessoas criando sites para pessoas. Nada melhor que um time multidisciplinar integrado e com muita sinergia para criar interfaces realmente úteis.&lt;/p&gt;

&lt;h3 id=&#34;não-sou-dono-do-site&#34;&gt;Não sou dono do site&lt;/h3&gt;

&lt;p&gt;Nem sempre as pessoas usam o site do jeito que projetamos. Por mais testes que se façam (e é sempre recomendável essa prática), sempre existirá um ou vários usuários que pensarão num jeito completamente diferente de acessar o seu site. &lt;strong&gt;Steve Krug&lt;/strong&gt; diz que &amp;#8220;&lt;em&gt;&lt;strong&gt;usuários gostam de escolhas impensadas&lt;/strong&gt;&lt;/em&gt;&amp;#8220;, portanto, estejam preparados para abrir mão de ótimas soluções caso os usuários pensem de forma contrária a sua. Basta ver o comportamento estranho das pessoas usando o campo de comentário do Facebook fazendo uma menção apenas marcando o nome de um amigo sem NENHUM texto, em vez de clicar no link &amp;#8220;compartilhar&amp;#8221; para enviar uma mensagem.&lt;/p&gt;

&lt;p&gt;Há nesse caso um erro na interface? Não, claro que não! Mas é preciso estar preparado para abrir mão de certas convenções por conta dos usuários. Além disso, sugiro que você guarde também um espaço para a coautoria de criação do seu cliente. Afinal, é ele quem paga o projeto e todos nós estamos sujeitos à essas concessões.&lt;/p&gt;

&lt;p&gt;E para finalizar, deixo a célebre frase de &lt;strong&gt;Fernando Pessoa&lt;/strong&gt; para inserir um pensamento simples e ao mesmo tempo forte, impactante e que ela nos represente em todos os nossos projetos:&lt;/p&gt;

&lt;p&gt;&amp;#8220;&lt;em&gt;&lt;strong&gt;Sê plural como o Universo.&lt;/strong&gt;&lt;/em&gt;&amp;#8221;&lt;/p&gt;

&lt;p&gt;Até o próximo artigo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Elementos de interface utilizando apenas CSS3</title>
      <link>http://tableless.com.br/elementos-de-interface-utilizando-apenas-css3/</link>
      <pubDate>Thu, 09 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/elementos-de-interface-utilizando-apenas-css3/</guid>
      <description>

&lt;p&gt;Se por um lado está na hora de você &lt;a href=&#34;http://tableless.com.br/criando-um-plugin-javascript-sem-jquery/&#34;&gt;parar de usar jQuery para tudo e investir mais em códigos JavaScript&lt;/a&gt;, por outro já é possível criar elementos animados e interativos utilizando apenas CSS3.&lt;/p&gt;

&lt;p&gt;É claro que você vai precisar abrir mão de efeitos em navegadores antigos (ou, na maioria dos casos, da implementação inteira). É claro também que as implementações são até certo ponto limitadas em comparação a plugins e bibliotecas JavaScript, mas dão um show em performance e otimização.&lt;/p&gt;

&lt;p&gt;Botões, galerias/slides, tabs e até mesmo o famoso efeito de lightbox já podem ser implementados sem nenhuma linha de JavaScript. Confira alguns exemplos.&lt;/p&gt;

&lt;h2 id=&#34;galeria&#34;&gt;Galeria&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://benschwarz.github.io/gallery-css/&#34; title=&#34;http://benschwarz.github.io/gallery-css/&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/05/gallery-css.jpg&#34; alt=&#34;gallery-css&#34; width=&#34;660&#34; height=&#34;342&#34; class=&#34;alignnone size-full wp-image-37344&#34; srcset=&#34;uploads/2013/05/gallery-css.jpg 660w, uploads/2013/05/gallery-css-324x168.jpg 324w, uploads/2013/05/gallery-css-588x304.jpg 588w, uploads/2013/05/gallery-css-598x310.jpg 598w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://benschwarz.github.io/gallery-css/&#34; title=&#34;http://benschwarz.github.io/gallery-css/&#34;&gt;http://benschwarz.github.io/gallery-css/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ben Schwarz caprichou e lançou recentemente uma galeria utilizando apenas CSS3. A galeria permite controles personalizados e vem com uma animação para autoplay.&lt;/p&gt;

&lt;p&gt;Os slides podem conter qualquer conteúdo em HTML e o grande segredo por trás dessa galeria é o uso de âncoras (#) aliado a elementos com position:absolute e o pseudo-atributo &lt;a href=&#34;http://www.w3.org/TR/css3-selectors/#target-pseudo&#34; title=&#34;http://www.w3.org/TR/css3-selectors/#target-pseudo&#34;&gt;:target&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O pseudo atributo target é aplicado em elementos referenciados por uma âncora. Por exemplo, sua página tem um elemento section com o id &amp;#8220;section-1&amp;#8221; e um link para a âncora #section-1. Quando o usuário clicar nesse link, o CSS definido na regra section:target será aplicado no elemento #section-1.&lt;/p&gt;

&lt;h2 id=&#34;lightbox&#34;&gt;Lightbox&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://tympanus.net/codrops/2011/12/26/css3-lightbox/&#34; title=&#34;http://tympanus.net/codrops/2011/12/26/css3-lightbox/&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/05/lightbox-css.jpg&#34; alt=&#34;lightbox-css&#34; width=&#34;660&#34; height=&#34;342&#34; class=&#34;alignnone size-full wp-image-37345&#34; srcset=&#34;uploads/2013/05/lightbox-css.jpg 660w, uploads/2013/05/lightbox-css-324x168.jpg 324w, uploads/2013/05/lightbox-css-588x304.jpg 588w, uploads/2013/05/lightbox-css-598x310.jpg 598w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tympanus.net/codrops/2011/12/26/css3-lightbox/&#34; title=&#34;http://tympanus.net/codrops/2011/12/26/css3-lightbox/&#34;&gt;http://tympanus.net/codrops/2011/12/26/css3-lightbox/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O efeito Lightbox é um dos grandes responsáveis pela popularização do JavaScript e suas bibliotecas. Hoje já existem centenas de clones do original, com diferentes configurações e a versão CSS supera muitas dessas implementações em JavaScript.&lt;/p&gt;

&lt;h2 id=&#34;menu-dropdown&#34;&gt;Menu Dropdown&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://line25.com/tutorials/how-to-create-a-pure-css-dropdown-menu&#34; title=&#34;http://line25.com/tutorials/how-to-create-a-pure-css-dropdown-menu&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/05/dropdown-css.jpg&#34; alt=&#34;dropdown-css&#34; width=&#34;660&#34; height=&#34;342&#34; class=&#34;alignnone size-full wp-image-37343&#34; srcset=&#34;uploads/2013/05/dropdown-css.jpg 660w, uploads/2013/05/dropdown-css-324x168.jpg 324w, uploads/2013/05/dropdown-css-588x304.jpg 588w, uploads/2013/05/dropdown-css-598x310.jpg 598w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://line25.com/tutorials/how-to-create-a-pure-css-dropdown-menu&#34; title=&#34;http://line25.com/tutorials/how-to-create-a-pure-css-dropdown-menu&#34;&gt;http://line25.com/tutorials/how-to-create-a-pure-css-dropdown-menu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Outro elemento bastante popular em JavaScript é o menu dropdown. Sua versão CSS usa apenas o atributo :hover dos links para exibir e esconder os múltiplos níveis de submenus.&lt;/p&gt;

&lt;p&gt;Ainda dá para usar algum tipo de transition ou animation para deixar o menu mais atraente. Quem se habilita? 🙂&lt;/p&gt;

&lt;h2 id=&#34;abas&#34;&gt;Abas&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sitepoint.com/css3-tabs-using-target-selector/&#34; title=&#34;http://www.sitepoint.com/css3-tabs-using-target-selector/&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/05/tabs-css.jpg&#34; alt=&#34;tabs-css&#34; width=&#34;660&#34; height=&#34;342&#34; class=&#34;alignnone size-full wp-image-37346&#34; srcset=&#34;uploads/2013/05/tabs-css.jpg 660w, uploads/2013/05/tabs-css-324x168.jpg 324w, uploads/2013/05/tabs-css-588x304.jpg 588w, uploads/2013/05/tabs-css-598x310.jpg 598w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sitepoint.com/css3-tabs-using-target-selector/&#34; title=&#34;http://www.sitepoint.com/css3-tabs-using-target-selector/&#34;&gt;http://www.sitepoint.com/css3-tabs-using-target-selector/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E que tal uma interface separada por abas sem usar JavaScript? É isso que este tutorial do Sitepoint oferece, mais uma vez fazendo uso do atributo target.&lt;/p&gt;

&lt;h2 id=&#34;tooltip&#34;&gt;Tooltip&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://kushagragour.in/lab/hint/&#34; title=&#34;http://kushagragour.in/lab/hint/&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/05/tooltip-css.jpg&#34; alt=&#34;tooltip-css&#34; width=&#34;660&#34; height=&#34;342&#34; class=&#34;alignnone size-full wp-image-37347&#34; srcset=&#34;uploads/2013/05/tooltip-css.jpg 660w, uploads/2013/05/tooltip-css-324x168.jpg 324w, uploads/2013/05/tooltip-css-588x304.jpg 588w, uploads/2013/05/tooltip-css-598x310.jpg 598w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://kushagragour.in/lab/hint/&#34; title=&#34;http://kushagragour.in/lab/hint/&#34;&gt;http://kushagragour.in/lab/hint/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tooltips possuem dezenas de implementações utilizando JavaScript. Sua versão CSS3 usa e abusa dos pseudo atributos &lt;a href=&#34;http://www.w3.org/TR/css3-selectors/#gen-content&#34;&gt;:after e :before&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Uma nota importante: as transições nos atributos after e before só foram implementadas recentemente no Chrome (versão 26). Nada que impeça a tooltip de funcionar &amp;#8211; ela apenas será renderizada sem animações.&lt;/p&gt;

&lt;h2 id=&#34;botões&#34;&gt;Botões&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://hellohappy.org/css3-buttons/&#34; title=&#34;http://hellohappy.org/css3-buttons/&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2013/05/buttons-css.jpg&#34; alt=&#34;buttons-css&#34; width=&#34;660&#34; height=&#34;342&#34; class=&#34;alignnone size-full wp-image-37342&#34; srcset=&#34;uploads/2013/05/buttons-css.jpg 660w, uploads/2013/05/buttons-css-324x168.jpg 324w, uploads/2013/05/buttons-css-588x304.jpg 588w, uploads/2013/05/buttons-css-598x310.jpg 598w&#34; sizes=&#34;(max-width: 660px) 100vw, 660px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://hellohappy.org/css3-buttons/&#34; title=&#34;http://hellohappy.org/css3-buttons/&#34;&gt;http://hellohappy.org/css3-buttons/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Não é só JavaScript que pode ser cortado &amp;#8211; também podemos parar de utilizar sprites para botões. Hoje em dia já é possível criar botões consistentes e interativos utilizando apenas CSS3.&lt;/p&gt;

&lt;p&gt;O designer Chad Mazzola mantém um repositório de botões &amp;#8220;que utilizam o markup mais simples possível&amp;#8221;. Este é um bom ponto de partida, mas os exemplos de botões utilizando apenas CSS são os mais fáceis de encontrar.&lt;/p&gt;

&lt;h2 id=&#34;evento-de-clique&#34;&gt;Evento de clique&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.ryancollins.me/?p=1041&#34; title=&#34;http://www.ryancollins.me/?p=1041&#34;&gt;http://www.ryancollins.me/?p=1041&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Esse último exemplo não é bem um elemento, mas sim uma aplicação do evento de clique utilizando o atributo active de um elemento. Com poucas linhas de código é possível exibir/esconder um menu ao clicar em um botão.&lt;/p&gt;

&lt;p&gt;E você, já deixou de fazer alguma coisa em JavaScript para implementar utilizando apenas CSS? Diz aí nos comentários!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Habilitando tags em fotos com jQuery</title>
      <link>http://tableless.com.br/habilitando-tags-em-fotos-com-jquery/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/habilitando-tags-em-fotos-com-jquery/</guid>
      <description>

&lt;p&gt;Marcar seus amigos nas fotos publicadas é um dos recursos mais populares do Facebook. Neste artigo você confere como implementar uma interface semelhante utilizando o plugin &lt;em&gt;imgAreaSelect&lt;/em&gt;. Veremos apenas a parte client-side, sem armazenar as informações das tags, portanto, sem nenhuma programação server-side.&lt;/p&gt;

&lt;h3 id=&#34;nosso-html-css&#34;&gt;Nosso HTML/CSS&lt;/h3&gt;

&lt;p&gt;O primeiro passo é criar um HTML com a foto de exemplo. Começamos adicionando ao &lt;em&gt;head&lt;/em&gt; chamadas para os scripts e as folhas de estilo.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;script type=&#34;text/javascript&#34; src=&#34;js/jquery.min.js&#34;&amp;gt;
&amp;lt;script type=&#34;text/javascript&#34; src=&#34;js/jquery-ui-1.8.13.custom.min.js&#34;&amp;gt;
&amp;lt;script type=&#34;text/javascript&#34; src=&#34;js/jquery.imgareaselect-0.9.6/scripts/jquery.imgareaselect.min.js&#34;&amp;gt;
&amp;lt;link href=&#34;css/ui-lightness/jquery-ui-1.8.13.custom.css&#34; rel=&#34;stylesheet&#34; /&amp;gt;
&amp;lt;link href=&#34;js/jquery.imgareaselect-0.9.6/css/imgareaselect-default.css&#34; rel=&#34;stylesheet&#34; /&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Além do &lt;em&gt;imgAreaSelect&lt;/em&gt;, também utilizamos a biblioteca de componentes para interface jQueryUI. Ela será responsável por mover (&lt;em&gt;draggable&lt;/em&gt;) e redimensionar (&lt;em&gt;resizable&lt;/em&gt;) as tags nas fotos.&lt;/p&gt;

&lt;p&gt;A marcação HTML é bem simples, apenas com a imagem e um link para exibir/ocultar as tags. O formulário para adicionar uma tag será adicionado &lt;em&gt;on the fly&lt;/em&gt;, após selecionarmos uma área. E como o formulário terá posição absoluta, é importante definir, no CSS, o atributo &amp;#8220;position:relative&amp;#8221; para o container da imagem, no nosso caso o elemento &lt;em&gt;p&lt;/em&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;p&amp;gt;&amp;lt;img src=&#34;img/ramones.jpg&#34; /&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a href=&#34;#&#34; class=&#34;toggle-tags&#34;&amp;gt;ocultar tags&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p{
  position:relative
}
div.form-tag{
  position:absolute;
  top:0;
  left:0;
  z-index:1000;
}
span.tag{
  position:absolute;
  border:1px solid #df0d32;
  background-color:rgba(255, 255, 255, 0.2);
  display:inline-block;
  color:#df0d32;
}
&lt;/pre&gt;

&lt;h3 id=&#34;selecionando-áreas-na-foto&#34;&gt;Selecionando áreas na foto&lt;/h3&gt;

&lt;p&gt;Passo a passo, esse será o fluxo da nossa interação:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Com o mouse, o usuário seleciona uma área da foto para marcação;&lt;/li&gt;
&lt;li&gt;Feita a seleção, o script exibe uma caixa de texto para digitação do conteúdo da tag;&lt;/li&gt;
&lt;li&gt;Ao pressionar a tecla enter, o script cria, visualmente, a tag.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Abaixo temos a chamada para o plugin &lt;em&gt;imgAreaSelect&lt;/em&gt;. Precisamos armazená-lo em uma variável global, chamada aqui de &amp;#8220;ias&amp;#8221;, porque posteriormente vamos alterar/limpar áreas de seleções de acordo com a interação do usuário (pressionado a tecla ESC). Por isso também utilizamos a opção &amp;#8220;instance: true&amp;#8221;.&lt;/p&gt;

&lt;pre class=&#34;lang-jquery&#34;&gt;ias = $(&#39;img#foto&#39;).imgAreaSelect({
  handles: true,
  instance: true,
  onSelectEnd: formTag,
  onSelectStart: function(){
    $(&#39;.form-tag&#39;).remove();
  }
});
&lt;/pre&gt;

&lt;p&gt;O evento &amp;#8220;onSelectEnd&amp;#8221; representa o momento em que o usuário termina de marcar uma área &amp;#8211; e é nele que executamos a função &amp;#8220;formTag&amp;#8221; para exibir o campo de texto para preenchimento. Já o &amp;#8220;onSelectStart&amp;#8221; representa o início do movimento de seleção e, nesse caso, precisamos eliminar qualquer outro form presente para evitar confusão.&lt;/p&gt;

&lt;h3 id=&#34;salvando-as-tags&#34;&gt;Salvando as tags&lt;/h3&gt;

&lt;p&gt;Ok, hora de exibir o formulário para o usuário adicionar uma tag. Qualquer função no evento &amp;#8220;onSelectEnd&amp;#8221; pode (e deve) receber dois parâmetros: &lt;em&gt;img&lt;/em&gt; e &lt;em&gt;selection&lt;/em&gt;. O primeiro é um objeto que representa a imagem onde foi aplicada a seleção e o segundo contém todas as informações de tamanho e posicionamento. Os vértices X e Y, necessários para posicionar o formulário logo abaixo da marcação, são representados por &lt;em&gt;selection.x1&lt;/em&gt; e &lt;em&gt;selection.y1&lt;/em&gt;, respectivamente.&lt;/p&gt;

&lt;pre class=&#34;lang-jquery&#34;&gt;var formTag = function(img, selection){
  $(&#39;.form-tag&#39;).remove();
  if(selection.width &amp;gt; 0 &amp;&amp; selection.height &amp;gt; 0){
    $(&#39;&amp;lt;div class=&#34;form-tag&#34;&amp;gt;&amp;lt;input type=&#34;text&#34; size=&#34;20&#34; class=&#34;tag-name&#34; /&amp;gt;&amp;lt;/div&amp;gt;&#39;).insertAfter(img);
    $(&#39;.form-tag&#39;)
      .css({
        top : (selection.y1 + selection.height),
        left : selection.x1
      })
      .find(&#39;input.tag-name&#39;)
        .focus()
        .data(&#39;selection&#39;, selection);
  }
};
&lt;/pre&gt;

&lt;p&gt;Notem que, antes de exibir o formulário verificamos com &lt;code class=&#34;lang-jquery&#34;&gt;if(selection.width &amp;gt; 0 &amp;amp;&amp;amp; selection.height &amp;gt; 0)&lt;/code&gt; se de fato a seleção existe ou se o usuário apenas clicou na área da foto (acredito ser uma falha do plugin, já que nenhuma seleção foi criada). E, ao adicionar o formulário, jogamos o foco do cursor para o campo de texto e armazenamos as posições, para usarmos mais tarde, no atributo data do input.&lt;/p&gt;

&lt;p&gt;Agora precisamos identificar quando o usuário pressionar enter ou ESC no input. Pressionando enter, nosso script deve salvar e exibir a tag na foto, enquanto a tecla ESC representa o cancelamento da ação, ou seja, remove o formulário. Utilizamos o evento keyup no input com uma função recebendo o parâmetro &amp;#8220;e&amp;#8221; (o próprio evento keyup). Os atributos &amp;#8220;keyCode&amp;#8221; e &amp;#8220;which&amp;#8221; equivalem à tecla pressionada pelo usuário, onde 13 é o enter e 27 ESC. Precisamos utilizar ambos porque alguns navegadores utilizam keyCode e outros which.&lt;/p&gt;

&lt;pre class=&#34;lang-jquery&#34;&gt;$(&#39;input.tag-name&#39;).live(&#39;keyup&#39;, function(e){
  if(e.keyCode == 13 || e.which == 13){ // enter
    if($(this).val() != &#34;&#34;){
      var selection = $(this).data(&#39;selection&#39;);
      $(&#39;&amp;lt;span class=&#34;tag&#34;&amp;gt;&#39;+$(this).val()+&#39;&amp;lt;/span&amp;gt;&#39;).appendTo($(this).parent().parent());
      $(&#39;.tag:last&#39;)
        .css({
          height: selection.height,
          width: selection.width,
          top: selection.y1,
          left:selection.x1
        })
        .draggable({ containment: &#39;#foto&#39; })
        .resizable({ containment: &#39;#foto&#39;, ghost: true });
      limpaFormTag();
    }
  }else if(e.keyCode == 27 || e.which == 27){ // esc
    limpaFormTag();
  }
});
&lt;/pre&gt;

&lt;p&gt;Primeiro validamos o conteúdo do input &amp;#8211; não pode ser vazio. Caso o usuário tenha informado o conteúdo da tag, adicionamos o elemento span com a classe tag ao parágrafo da imagem. Com a tag recém adicionada, buscamos as dimensões e posicionamento armazenadas no atributo data-selection do input e definimos o css do span. Para dar um toque especial à nossa interface, conforme mencionado anteriormente, a tag ainda recebe os efeitos &lt;em&gt;draggable&lt;/em&gt; e &lt;em&gt;resizable&lt;/em&gt;, da jQueryUI, permitindo assim mover ou alterar seu tamanho depois de criada.&lt;/p&gt;

&lt;p&gt;A função &amp;#8220;limpaFormTag&amp;#8221; esconde o formulário e atualiza nossa instânce do plugin imgAreaSelect, removendo qualquer seleção em andamento.&lt;/p&gt;

&lt;pre class=&#34;lang-jquery&#34;&gt;var limpaFormTag = function(){
  $(&#39;.form-tag&#39;).remove();
  ias.setOptions({hide:true});
  ias.update();
};
&lt;/pre&gt;

&lt;p&gt;Com tudo pronto, falta definir a ação do link que exibe/oculta as tags. O método &amp;#8220;toggle&amp;#8221; automaticamente identifica se o seletor, nossas tags, estão visíveis ou não e executa a ação (exibir/ocultar) de acordo com o estado atual do elemento.&lt;/p&gt;

&lt;pre class=&#34;lang-jquery&#34;&gt;$(&#39;.toggle-tags&#39;).click(function(e){
  $(&#39;.tag&#39;).toggle();
  if($(&#39;.tag:visible&#39;).length &amp;gt; 0) {
    $(this).text(&#39;ocultar tags&#39;);
  } else {
    $(this).text(&#39;exibir tags&#39;);
  }
  e.preventDefault();
});
&lt;/pre&gt;

&lt;h3 id=&#34;e-agora-para-onde-ir&#34;&gt;E agora, para onde ir?&lt;/h3&gt;

&lt;p&gt;É claro que, para essa interface de fato funcionar, seria necessário armazenar as informações das tags em banco de dados. No nosso exemplo, ao atualizar a página, todas as essas informações serão perdidas. Logo, um dos próximos passos seria um script server-side executado quando o usuário pressionar a tecla enter no input.&lt;/p&gt;

&lt;p&gt;Também seria legal desenvolver opções para edição do conteúdo e exclusão das tags.&lt;/p&gt;

&lt;p&gt;E que tal &lt;a href=&#34;http://tableless.com.br/anatomia-de-um-plugin-jquery&#34; target=&#34;_blank&#34;&gt;transformar tudo em um plugin&lt;/a&gt;? Só não esqueça de compartilhá-lo com a gente!&lt;/p&gt;

&lt;h3 id=&#34;downloads-referências&#34;&gt;Downloads &amp;amp; referências&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jqueryui.com/&#34; target=&#34;_blank&#34;&gt;jQuery UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://odyniec.net/projects/imgareaselect/&#34; target=&#34;_blank&#34;&gt;plugin imgAreaSelect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.github.io/exemplos/habilitando-tags-em-fotos-com-jquery/&#34; target=&#34;_blank&#34;&gt;Visualizar exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tableless/exemplos/tree/gh-pages/habilitando-tags-em-fotos-com-jquery&#34; target=&#34;_blank&#34;&gt;Download do código fonte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cambiaresearch.com/c4/702b8cd1-e5b0-42e6-83ac-25f0306e3e25/javascript-char-codes-key-codes.aspx&#34; target=&#34;_blank&#34;&gt;Tabela com KeyCodes para JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Interface Guide para Apps Mobiles</title>
      <link>http://tableless.com.br/interface-guide-para-apps-mobiles/</link>
      <pubDate>Thu, 26 May 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/interface-guide-para-apps-mobiles/</guid>
      <description>&lt;p&gt;Um dos sucessos dos Apps da Apple, tanto para mobiles quanto para desktops é a fidelidade e respeito que os desenvolvedores e designers tem ao seguir os padrões de interface que a Apple dispõe. São guias com informações importantes para que o App tenha um layout mais adequado e homogêneo com o sistema operacional. Dessa maneira o usuário final não se sente em um ambiente hostil e desconhecido.&lt;/p&gt;

&lt;p&gt;Separei 3 guias para que você, independente da sua área de atuação, leia e compreenda mais os padrões dos três principais sistemas operacionais para mobiles existentes: Android, iOS e Windows Phone. Entenda que isso não são guias para criação de websites otimizados para estes aparelhos. São guidelines de interface para que você crie aplicativos offline ou online para estes sistemas. Diversas informações só farão sentido para aplicativos offline, instalados no aparelho. Mas toda a essência e diversas dicas podem ser utilizadas no desenvolvimento web.&lt;/p&gt;

&lt;p&gt;Baixe abaixo os guias:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;Windows Phone&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ff402535(v=vs.92).aspx&#34;&gt;Website com informações&lt;/a&gt;.&lt;br /&gt;
[Download do guia de interface para Windows Phone][2].&lt;/dd&gt;
&lt;dt&gt;Android&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;http://developer.android.com/guide/practices/ui_guidelines/index.html&#34;&gt;Website com informações&lt;/a&gt;.&lt;br /&gt;
&lt;a href=&#34;http://tableless.github.com/exemplos/pdf/guidelines-interface-mobiles/AndroidHIG.pdf&#34;&gt;Download do guia de interface para Android&lt;/a&gt;.&lt;/dd&gt;
&lt;dt&gt;iOS&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;http://developer.apple.com/library/ios/#documentation/userexperience/conceptual/mobilehig/Introduction/Introduction.html&#34;&gt;Website com informações&lt;/a&gt;.&lt;br /&gt;
&lt;a href=&#34;http://tableless.github.com/exemplos/pdf/guidelines-interface-mobiles/MobileHIG.pdf&#34;&gt;Download guia de interface iOS&lt;/a&gt;.&lt;br /&gt;
&lt;a href=&#34;http://tableless.github.com/exemplos/pdf/guidelines-interface-mobiles/OSXHIGuidelines.pdf&#34;&gt;De brinde: guia de interface para MAC OS X&lt;/a&gt;. 😉&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;[2]: &lt;a href=&#34;http://tableless.github.com/exemplos/pdf/guidelines-interface-mobiles/UI&#34;&gt;http://tableless.github.com/exemplos/pdf/guidelines-interface-mobiles/UI&lt;/a&gt; Design and Interaction Guide for Windows Phone 7 v2.0.pdf&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Carrinho de compras com drag and drop</title>
      <link>http://tableless.com.br/carrinho-de-compras-com-drag-and-drop/</link>
      <pubDate>Thu, 13 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/carrinho-de-compras-com-drag-and-drop/</guid>
      <description>

&lt;p&gt;Se você comprou alguma coisa recentemente no Submarino deve ter notado uma nova opção na interface do site: agora é possível arrastar os produtos exibidos na página para o seu carrinho, que fica exibido de forma permanente no topo do site.&lt;/p&gt;

&lt;p&gt;De uma forma simples, vou tentar mostrar pra vocês como implementar uma solução parecida utilizando jQuery e sua biblioteca para interfaces, a &lt;a href=&#34;http://jqueryui.com/&#34; target=&#34;_blank&#34;&gt;jQuery UI&lt;/a&gt; &amp;#8211; é nela que encontramos os plugins draggable() e droppable(), responsáveis, como os nomes sugerem, por toda nossa operação de arrastar e soltar produtos.&lt;/p&gt;

&lt;p&gt;Também veremos um pouco sobre o vasto universo de animações com jQuery através do método animate(). Diferente do Submarino, onde a barra superior é um novo elemento e não o próprio carrinho original, a nossa irá acompanhar de forma fluida o movimento do usuário na página.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2011/01/exemplo.zip&#34;&gt;Download do código-fonte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.github.com/exemplos/carrinho-compras/&#34; target=&#34;_blank&#34;&gt;Visualizar o exemplo no navegador&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;estrutura-básica&#34;&gt;Estrutura básica&lt;/h2&gt;

&lt;p&gt;Vamos começar com um pouco de HTML/CSS para apresentar nossa loja. A página terá os seguintes elementos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Barra localizada no topo (#carrinho-top) &amp;#8211; essa barra, no carregamento inicial, estará relativa ao corpo do site. Assim que o usuário mover o mouse abaixo da metade da altura da barra, ela será &amp;#8220;fixada&amp;#8221; e acompanhará a navegação.&lt;/li&gt;
&lt;li&gt;Box do mini-carrinho (#carrinho-container) &amp;#8211; ficará dentro da barra no topo e é a área onde o usuário pode &amp;#8220;soltar&amp;#8221; os produtos.&lt;/li&gt;
&lt;li&gt;Lista de produtos (#produtos) &amp;#8211; a listagem de produtos, contendo os elementos que podem ser arrastados para o carrinho.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;p&amp;gt;Arraste produtos para esta área&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li class=&#34;adicione&#34;&amp;gt;Arraste produtos para esta área&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

...

&amp;lt;ul&amp;gt;
     &amp;lt;li class=&#34;produto-dd&#34;&amp;gt;&amp;lt;h3&amp;gt;Livro 1&amp;lt;/h3&amp;gt;&amp;lt;p&amp;gt;&amp;lt;img src=&#39;_img/twa.jpg&#39; width=&#39;75&#39; height=&#39;90&#39; /&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p class=&#39;preco-de&#39;&amp;gt;De: R$31,00&amp;lt;/p&amp;gt;&amp;lt;p class=&#39;preco-por&#39;&amp;gt;Por: R$13,00&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
    ...
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div#carrinho-top{background-color:#C92D21;width:960px;color:#fff;border-bottom:1px dashed #fff;opacity:.8;position:relative;}
div#carrinho-info{padding:10px;}
div#carrinho-container{height:240px;position:absolute;width:240px;background-color:#fff;border:2px solid #c92d21;display:none;}
div#carrinho-container ul{overflow:auto;height:200px;list-style:none;margin:10px;}
div#carrinho-container ul li{color:#333;font-size:12px;border-bottom:1px dotted #ccc;text-align:center;margin:10px;}
ul#produtos li{float:left;background-color:#fff;-moz-box-shadow:5px 5px 5px #ccc;-webkit-box-shadow:5px 5px 5px #ccc;box-shadow:5px 5px 5px #ccc;width:270px;text-align:center;margin:15px;padding:10px;}
&lt;/pre&gt;

&lt;h2 id=&#34;animando-a-barra-superior&#34;&gt;Animando a barra superior&lt;/h2&gt;

&lt;p&gt;O primeiro passo da nossa implementação é fazer com que a barra superior acompanhe os movimentos do usuário, fazendo com que a área de &lt;em&gt;drop&lt;/em&gt; dos produtos fique sempre visível. Para tornar isso possível associaremos uma função ao evento scroll da janela (window).&lt;/p&gt;

&lt;p&gt;Toda vez que a a distância do scroll para o topo for maior do que a metade da altura da barra, o CSS será alterado para que a barra fique sempre visível e uma leve animação levará a barra para onde for o scroll.&lt;/p&gt;

&lt;pre class=&#34;lang-jquery&#34;&gt;// associando uma função ao evento scroll da janela
$(window).scroll(function(){
    // valor do scroll - distância entre a barrinha menor e o início do scroll
    var wtop        = $(this).scrollTop();
    // objeto da barra superior
    var carrinho    = $(&#39;#carrinho-top&#39;);
    // objeto container do site
    var container   = $(&#39;#container&#39;);
    // altura do carrinho
    var cheight     = $(carrinho).height();
    // distância do scroll é maior do que a altura da barra / 2 ?
    if( wtop &amp;gt; ( cheight / 2 ) )
    {
        // adiciona uma margem ao container para evitar quebra do lay-out
        $(container).css(&#39;margin-top&#39;, cheight+&#39;px&#39;);
        // transforma a position da barra em absolute
        $(carrinho)
            .css({
                position: &#39;absolute&#39;
            })
            // anima utilizando a propriedade marginTop, com velocidade de 100ms
            .animate({
                marginTop: ( wtop - cheight ) + &#39;px&#39;
            }, 100);
    }
});
&lt;/pre&gt;

&lt;p&gt;O funcionamento básico do método animate() segue o formato acima. O primeiro parâmetro é composto por um ou vários atributos CSS que farão a animação do elemento. No nosso caso, a barra será animada do valor original da sua margem superior até a especificada na função (a distância do scroll subtraída da altura da barra). Já o segundo parâmetro recebe um valor em milissegundos para efetuar a transição.&lt;/p&gt;

&lt;p&gt;Precisamos agora de uma outra condição: quando o usuário voltar para o topo da página, nossa barra precisa recuperar o estado inicial, &amp;#8220;fixado&amp;#8221; no corpo:&lt;/p&gt;

&lt;pre class=&#34;lang-jquery&#34;&gt;// distância do scroll é menor do que a metade da altura da barra
else
{
    $(container).css(&#39;margin-top&#39;, 0);
    $(carrinho)
        .stop(true, true)
        .css({
            position: &#39;relative&#39;,
            marginTop: 0
        });
}
&lt;/pre&gt;

&lt;h2 id=&#34;definindo-as-áreas-de-drag-and-drop&#34;&gt;Definindo as áreas de drag and drop&lt;/h2&gt;

&lt;p&gt;Utilizando a biblioteca jQuery UI vamos definir os elementos que podem ser arrastados (qualquer li dentro da lista #produtos) e a área que vai recebê-los, no nosso caso o div #carrinho-container.&lt;/p&gt;

&lt;pre class=&#34;lang-jquery&#34;&gt;$(&#39;#produtos li&#39;).draggable({
    helper: &#39;clone&#39;,
    start: function()
    {
        $(&#39;#carrinho-container&#39;).show();
    }
});
&lt;/pre&gt;

&lt;p&gt;Os produtos, que podem ser arrastados, recebem o método &lt;strong&gt;draggable&lt;/strong&gt;. Já ao box do carrinho é aplicado o método &lt;strong&gt;droppable&lt;/strong&gt;. A chamada dos ítens recebe apenas o parâmetro helper e o evento start. O parâmetro helper pode receber os valores &amp;#8216;original&amp;#8217;, &amp;#8216;clone&amp;#8217; ou uma função. Utilizaremos &amp;#8216;clone&amp;#8217; que, como o nome sugere, clona o elemento original na ação de arrastar.&lt;/p&gt;

&lt;p&gt;Já evento &lt;em&gt;start&lt;/em&gt; acontece assim que o elemento começa a ser arrastado. Quando um produto sofre a ação de arrastar, precisamos exibir o carrinho, que é nossa área de drop.&lt;/p&gt;

&lt;pre class=&#34;lang-jquery&#34;&gt;$(&#39;#carrinho-produtos&#39;).droppable({
    hoverClass: &#39;ui-state-hover&#39;,
    drop: function( event, ui )
    {
        // remove a marcação &#34;arraste produtos para esta área&#34;
        $(this).find(&#39;.adicione&#39;).remove();
        // busca o ID do produto no campo hidden
        var cod = ui.draggable.find(&#39;.produto-id&#39;).val();
        // verifica se o produto existe
        if( $(this).find(&#39;#clone-&#39;+cod).length == 0 )
        {
            // adiciona o elemento li à lista de produtos do carrinho
            $(&#39;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&#39;).html(ui.draggable.html()).prependTo( this );
            // animação para indicar que o produto foi adicionado
            $(this).find(&#39;li:first&#39;).slideDown();
            // atualiza total de produtos do carrinho
            var total_produtos = $(this).find(&#39;li&#39;).length;
            $(&#39;#carrinho-info&#39;).html(&#39;&amp;lt;p&amp;gt;&#39; + total_produtos + &#39; produto&#39; + ( total_produtos &amp;gt; 1 ? &#39;s&#39; : &#39;&#39; ) + &#39;&amp;lt;/p&amp;gt;&#39; );
        }
    }
});
&lt;/pre&gt;

&lt;p&gt;No método &lt;strong&gt;droppable&lt;/strong&gt; utilizaremos também um parâmetro e um evento. O parâmetro é o hoverClass, que especifica uma classe que será aplicada a àrea de drop quando um ítem estiver sendo arrastado (vamos utilizar o padrão da jQuery UI). E o evento drop é acionado toda vez que um elemento for &amp;#8220;solto&amp;#8221; no carrinho. Nossa função primeiro verifica se o produto já existe no carrinho. Caso não exista, cria um novo elemento li na lista com os dados do produto.&lt;/p&gt;

&lt;p&gt;Para uma lista completa dos parâmetros e eventos visite &lt;a href=&#34;http://jqueryui.com/demos/draggable&#34; target=&#34;_blank&#34;&gt;jqueryui.com/demos/draggable&lt;/a&gt; e &lt;a href=&#34;http://jqueryui.com/demos/droppable&#34; target=&#34;_blank&#34;&gt;jqueryui.com/demos/droppable&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;melhorando-a-exibição-do-carrinho&#34;&gt;Melhorando a exibição do carrinho&lt;/h2&gt;

&lt;p&gt;O código mostrado até agora tem um problema básico. Toda vez que o produto é adicionado o carrinho &amp;#8220;some&amp;#8221;. Seria legal que ele ficasse visível por uma certa quantidade detempo e só depois de um período de inatividade fosse escondido. Para isso vamos implementar um timer global na variável timerCarrinho.&lt;/p&gt;

&lt;p&gt;Toda vez que o mouse estiver sobre o carrinho o timer é zerado. E, quando o mouse deixar a área, depois de 5 segundos, o carrinho é escondido.&lt;/p&gt;

&lt;pre class=&#34;lang-jquery&#34;&gt;var timerCarrinho = &#39;&#39;;
$(&#39;#produtos li&#39;).draggable({
    helper: &#39;clone&#39;,
    start: function()
    {
        clearTimeout( timerCarrinho );
        $(&#39;#carrinho-container&#39;).show();
    }
});
$(&#39;#carrinho-container&#39;).mouseenter(function(){
    clearTimeout( timerCarrinho );
});

$(&#39;#carrinho-container&#39;).mouseleave(function(){
    var carrinho = $(this);
    timerCarrinho = setTimeout( function(){
        $(carrinho).slideUp();
    }, 5000 );
});
&lt;/pre&gt;

&lt;h2 id=&#34;dever-de-casa&#34;&gt;Dever de casa&lt;/h2&gt;

&lt;p&gt;Essa é uma versão básica de um carrinho drag and drop que pode sofrer diversas melhorias. Segue abaixo uma lista de implementações e funcionalidades novas pra vocês praticarem um pouco:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remover animação da barra, fazendo todo o posicionamento via CSS;&lt;/li&gt;
&lt;li&gt;Ao adicionar um produto que já exista no carrinho, aumentar a quantidade ao invés de ignorar;&lt;/li&gt;
&lt;li&gt;Adicionar funcionalidade para excluir produtos do carrinho;&lt;/li&gt;
&lt;li&gt;Salvar em cookie o carrinho do usuário, ou via AJAX, ou com o &lt;a href=&#34;http://plugins.jquery.com/project/Cookie&#34; target=&#34;_blank&#34;&gt;plugin de cookies&lt;/a&gt; do jQuery.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>