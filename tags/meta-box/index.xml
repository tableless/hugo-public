<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Meta Box on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/meta-box/index.xml</link>
    <description>Recent content in Meta Box on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/meta-box/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Usando Meta Box em seu tema WordPress</title>
      <link>https://tableless.github.io/hugo-public/usando-meta-box-em-seu-tema-wordpress/</link>
      <pubDate>Tue, 20 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/usando-meta-box-em-seu-tema-wordpress/</guid>
      <description>

&lt;h2 id=&#34;o-que-s√£o-meta-boxes&#34;&gt;O que s√£o Meta Boxes?&lt;/h2&gt;

&lt;p&gt;Os Meta Boxes (Caixas de informa√ß√µes) foi implementado a partir da vers√£o 2.5 do CMS, os Meta Boxes s√£o aquelas caixas arrast√°veis que est√£o presente na Dashboard, edi√ß√£o de um post, p√°ginas, al√©m de outros locais na √°rea administrativa do WordPress.&lt;/p&gt;

&lt;p&gt;Os Meta Boxes √© uma maneira atraente para a tela do editor de post e evita for√ßar os usu√°rios a confiar em &lt;a title=&#34;Custom Post Type&#34; href=&#34;http://tableless.com.br/custom-post-types-wordpress/&#34; target=&#34;_blank&#34;&gt;campos personalizados&lt;/a&gt;. Se voc√™ j√° criou algum tipo de campo personalizado no WordPress, voc√™ provavelmente gostaria de adicionar algum campo.&lt;/p&gt;

&lt;p&gt;Com os Meta Box e mais f√°cil. Imagine que voc√™ esteja criando um tema para um cliente que precise catalogar sua cole√ß√£o de vinil. Voc√™ come√ßa imediatamente olhar para o WordPress para ver como isso pode ser feito. Cada Post representa um Vinil, que √© perfeito para adicionar imagem, titulo e descri√ß√£o. Podemos usar tamb√©m as categorias e marcar dentro do WordPress para que os organize. Mas vamos supor que o cara queira acrescentar mais um dado para cataloga√ß√£o? O WordPress n√£o te dar essa op√ß√£o por padr√£o a n√£o ser que usemos o grande Meta Box.&lt;/p&gt;

&lt;h2 id=&#34;usando-o-meta-boxes&#34;&gt;Usando o Meta boxes&lt;/h2&gt;

&lt;p&gt;Neste tutorial n√£o iremos trabalhar em um arquivo functions.php. Que n√£o √© o lugar correto para ele. Se voc√™ est√° adicionando dados a uma mensagem, √© prov√°vel que voc√™ quer que ele exista independentemente do seu projeto de front end. Como tal, voc√™ deve colocar esse c√≥digo em algum lugar que n√£o √© dependente do seu design. Ex: Um arquivo de plugin.&lt;/p&gt;

&lt;p&gt;Convenientemente o WordPress oferece uma fun√ß√£o para adicionar os Meta Boxes a uma tela de administra√ß√£o, usando o seguinte &amp;#8220;add_meta_box&amp;#8221;. Abaixo um exemplo.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php add_meta_box( $id, $title, $callback, $page, $context, $priority, $callback_args ); ?&amp;gt;

&lt;/pre&gt;

&lt;h3 id=&#34;par√¢metros&#34;&gt;Par√¢metros&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;$id &amp;#8211; (&lt;a title=&#34;String&#34; href=&#34;http://codex.wordpress.org/How_to_Pass_Tag_Parameters#String&#34; target=&#34;_blank&#34;&gt;String&lt;/a&gt;) Identificador √∫nico (Obrigat√≥rio)&lt;/li&gt;
&lt;li&gt;$title &amp;#8211; (&lt;a title=&#34;String&#34; href=&#34;http://codex.wordpress.org/How_to_Pass_Tag_Parameters#String&#34; target=&#34;_blank&#34;&gt;String&lt;/a&gt;) Titulo a ser exibido (Obrigat√≥rio)&lt;/li&gt;
&lt;li&gt;$callback &amp;#8211; (&lt;a title=&#34;Callback&#34; href=&#34;http://codex.wordpress.org/How_to_Pass_Tag_Parameters#Callback&#34; target=&#34;_blank&#34;&gt;Callback&lt;/a&gt;) Fun√ß√£o para exibir o conte√∫do do Meta Boxes (Obrigat√≥rio) &lt;a title=&#34;Exemplo Callback&#34; href=&#34;http://codex.wordpress.org/Function_Reference/add_meta_box#Example&#34; target=&#34;_blank&#34;&gt;Exemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;$page &amp;#8211; (&lt;a title=&#34;String&#34; href=&#34;http://codex.wordpress.org/How_to_Pass_Tag_Parameters#String&#34; target=&#34;_blank&#34;&gt;String&lt;/a&gt;) Onde ser√° exibido o Meta Boxes. Exemplos (&lt;tt&gt;&amp;lsquo;post&amp;rsquo;&lt;/tt&gt;, &lt;tt&gt;&amp;lsquo;page&amp;rsquo;&lt;/tt&gt;, &lt;tt&gt;&amp;lsquo;link&amp;rsquo;&lt;/tt&gt;, or&lt;tt&gt;&amp;lsquo;custom_post_type&amp;rsquo; )&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;$context (&lt;a title=&#34;String&#34; href=&#34;http://codex.wordpress.org/How_to_Pass_Tag_Parameters#String&#34; target=&#34;_blank&#34;&gt;String&lt;/a&gt;) Tela onde o box vai ser inserido.&lt;/li&gt;
&lt;li&gt;$priority (&lt;a title=&#34;String&#34; href=&#34;http://codex.wordpress.org/How_to_Pass_Tag_Parameters#String&#34; target=&#34;_blank&#34;&gt;String&lt;/a&gt;) Prioridade de inser√ß√£o da caixa em rela√ß√£o as demais.&lt;/li&gt;
&lt;li&gt;$callback_args (&lt;a title=&#34;Array&#34; href=&#34;http://codex.wordpress.org/How_to_Pass_Tag_Parameters#Array&#34; target=&#34;_blank&#34;&gt;array&lt;/a&gt;) Determina a passagem de par√¢metros a fun√ß√£o callback.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ent√£o, nosso &lt;strong&gt;add_meta_box&lt;/strong&gt; ser√° parecido com esse.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php add_meta_box ( &#39;my-meta-box-id&#39;, &#39;Meu primeiro Meta Box&#39;, &#39;vinil_meta_box_vinil&#39;, &#39;post&#39;, &#39;normal&#39;, &#39;high&#39; ); ?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;N√£o podemos simplesmente colocar em nosso arquivo plugin sozinho, se n√£o vamos acabar na tela branca da morte ou o erro fatal PHP. Chamada para a fun√ß√£o indefinida, por qu√™? Porque chamamos a fun√ß√£o add_meta_box antes do WordPress ser carregado. Com isso precisamos fazer um gancho no WordPress, que faz parte da api de um plugin. Basicamente, as fun√ß√µes come√ßam enganchando em uma a√ß√£o do WordPress. Ent√£o vamos fazer nosso gancho add_meta_box em uma fun√ß√£o, ent√£o conectar essa fun√ß√£o ao add_meta_boxes, evitando o erro fatal. Nosso c√≥digo para o Meta Boxes para tela de postagem ficar√° assim:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php add_action( &#39;add_meta_boxes&#39;, &#39;vinil_meta_box_add&#39; );

function vinil_meta_box_add() {

add_meta_box( &#39;my-meta-box-id&#39;, &#39;Meu primeiro Meta Box&#39;, &#39;vinil_meta_box_vinil&#39;, &#39;post&#39;, &#39;normal&#39;, &#39;high&#39; ); }

?&amp;gt;

&lt;/pre&gt;

&lt;h2 id=&#34;renderizando-o-meta-box&#34;&gt;Renderizando o Meta Box&lt;/h2&gt;

&lt;p&gt;O c√≥digo acima √© o suficiente para adicionar o Meta Box, mas agora temos que tornar a coisa mais legal. Vamos adicionar campos, apenas um formul√°rio HTML misturado com um pouco de PHP para exibir os dados salvos. N√£o precisamos incluir as tags de formul√°rio pois o WordPress j√° faz isso para a gente. üôÇ Lembre que a string passada como o $callback em add_meta_box? Agora vamos criar um fun√ß√£o com o mesmo nome.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php function vinil_meta_box_vinil() {

echo &#39;Conte√∫do do meu primeiro Meta Box.&#39;; }

?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;Agora vamos fazer o formul√°rio, vamos adicionar v√°rios campos para este Meta Box, 1 input, 1 select, 1 checkbox. Vamos come√ßar com o input.&lt;/p&gt;

&lt;p&gt;Na fun√ß√£o&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;function vinil_meta_box_vinil() {

echo &#39;Conte√∫do do meu primeiro Meta Box.&#39;; }

?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;Vamos retirar o&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;echo &#39;Conte√∫do do meu primeiro Meta Box&#39;;

&lt;/pre&gt;

&lt;p&gt;Para come√ßar a fazer o formulario do Meta Box, ficando da seguinte forma:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;function vinil_meta_box_vinil()
{
?&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;label for=&#34;texto_meta_box&#34;&amp;gt;Text Label&amp;lt;/label&amp;gt;
&amp;lt;input type=&#34;text&#34; name=&#34;texto_meta_box&#34; id=&#34;texto_meta_box&#34; /&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;?php
}

?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;Mas e quanto a exibir os dados? Bem voc√™ ver√° a seguinte, vamos armazenar esses dados na tabela usando a fun√ß√£o wp_postmeta update_post_meta. Essas fun√ß√µes tem duas irm√£s chamada get_post_meta e get_post_custom, que pega os dados de wp_postmeta. O get_post_meta s√≥ peega dados de uma chave, enquanto get_post_custom pega tudo. Como estamos usando realmente apenas um campo, neste ponto, vamos usar o get_post_meta.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;function vinil_meta_box_vinil()
{
$values = get_post_custom( $post-&amp;gt;ID );
$text = isset( $values[&#39;texto_meta_box&#39;] ) ? esc_attr( $values[&#39;texto_meta_box&#39;][0] ) : &#39;&#39;;
$selected = isset( $values[&#39;meta_box_select&#39;] ) ? esc_attr( $values[&#39;meta_box_select&#39;][0] ) : &#39;&#39;;
$check = isset( $values[&#39;meta_box_check&#39;] ) ? esc_attr( $values[&#39;meta_box_check&#39;][0] ) : &#39;&#39;;
wp_nonce_field( &#39;my_meta_box_nonce&#39;, &#39;meta_box_nonce&#39; );
?&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;label for=&#34;texto_meta_box&#34;&amp;gt;Text Label&amp;lt;/label&amp;gt;
&amp;lt;input type=&#34;text&#34; name=&#34;texto_meta_box&#34; id=&#34;texto_meta_box&#34; /&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;?php
}

?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;Agora vamos adicionar o DropDow em nosso Meta Box.&lt;/p&gt;

&lt;p&gt;No drop-dow iremos usar uma das fun√ß√µes mais √∫teis no WordPress, o selected(). Ele compara o primeiro valor, os dados que salva, com o segundo atributo de valor, &lt;option&gt;. Se eles s√£o os mesmos a fun√ß√£o selected=&amp;#8221;selected&amp;#8221; que faz com o que o valor do drop down seja gravado. Mas voc√™ tamb√©m pode usar o selected com bot√µes de radio.&lt;/p&gt;

&lt;p&gt;Ficando da seguinte forma:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;function vinil_meta_box_vinil()
{
$values = get_post_custom( $post-&amp;gt;ID );
$text = isset( $values[&#39;texto_meta_box&#39;] ) ? esc_attr( $values[&#39;texto_meta_box&#39;][0] ) : &#39;&#39;;
$selected = isset( $values[&#39;meta_box_select&#39;] ) ? esc_attr( $values[&#39;meta_box_select&#39;][0] ) : &#39;&#39;;
$check = isset( $values[&#39;meta_box_check&#39;] ) ? esc_attr( $values[&#39;meta_box_check&#39;][0] ) : &#39;&#39;;
wp_nonce_field( &#39;my_meta_box_nonce&#39;, &#39;meta_box_nonce&#39; );
?&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;label for=&#34;texto_meta_box&#34;&amp;gt;Text Label&amp;lt;/label&amp;gt;
&amp;lt;input type=&#34;text&#34; name=&#34;texto_meta_box&#34; id=&#34;texto_meta_box&#34; /&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;label for=&#34;meta_box_select&#34;&amp;gt;Color&amp;lt;/label&amp;gt;
&amp;lt;select name=&#34;meta_box_select&#34; id=&#34;meta_box_select&#34;&amp;gt;
&amp;lt;option value=&#34;red&#34; &amp;lt;?php selected( $selected, &#39;red&#39; ); ?&amp;gt;&amp;gt;Vermelho&amp;lt;/option&amp;gt;
&amp;lt;option value=&#34;blue&#34; &amp;lt;?php selected( $selected, &#39;blue&#39; ); ?&amp;gt;&amp;gt;Azul&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;?php
}

?&amp;gt;

&lt;/pre&gt;

&lt;h3 id=&#34;adicionando-o-check-box&#34;&gt;Adicionando o Check box&lt;/h3&gt;

&lt;pre class=&#34;lang-php&#34;&gt;function vinil_meta_box_vinil()
{
$values = get_post_custom( $post-&amp;gt;ID );
$text = isset( $values[&#39;texto_meta_box&#39;] ) ? esc_attr( $values[&#39;texto_meta_box&#39;][0] ) : &#39;&#39;;
$selected = isset( $values[&#39;meta_box_select&#39;] ) ? esc_attr( $values[&#39;meta_box_select&#39;][0] ) : &#39;&#39;;
$check = isset( $values[&#39;meta_box_check&#39;] ) ? esc_attr( $values[&#39;meta_box_check&#39;][0] ) : &#39;&#39;;
wp_nonce_field( &#39;my_meta_box_nonce&#39;, &#39;meta_box_nonce&#39; );
?&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;label for=&#34;texto_meta_box&#34;&amp;gt;Text Label&amp;lt;/label&amp;gt;
&amp;lt;input type=&#34;text&#34; name=&#34;texto_meta_box&#34; id=&#34;texto_meta_box&#34; /&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;label for=&#34;meta_box_select&#34;&amp;gt;Color&amp;lt;/label&amp;gt;
&amp;lt;select name=&#34;meta_box_select&#34; id=&#34;meta_box_select&#34;&amp;gt;
&amp;lt;option value=&#34;red&#34; &amp;lt;?php selected( $selected, &#39;red&#39; ); ?&amp;gt;&amp;gt;Vermelho&amp;lt;/option&amp;gt;
&amp;lt;option value=&#34;blue&#34; &amp;lt;?php selected( $selected, &#39;blue&#39; ); ?&amp;gt;&amp;gt;Azul&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;input type=&#34;checkbox&#34; name=&#34;meta_box_check&#34; id=&#34;meta_box_check&#34; &amp;lt;?php checked( $check, &#39;on&#39; ); ?&amp;gt; /&amp;gt;
&amp;lt;label for=&#34;meta_box_check&#34;&amp;gt;Don&#39;t Check This.&amp;lt;/label&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;?php
}

?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;Novamente o WordPress fornece a fun√ß√£o checked(). Ela funciona exatamente como selected() comparando o primeiro valor com o segundo valor e repetindo para checked=&amp;#8221;checked&amp;#8221; se eles s√£o o mesmo.&lt;/p&gt;

&lt;h2 id=&#34;para-finalizar-vamos-salvar-nosso-meta-box&#34;&gt;Para finalizar vamos salvar nosso Meta Box&lt;/h2&gt;

&lt;p&gt;Para salvar nossos dados, vamos confiar em outro gancho: save_post. Isso funciona como o nosso gancho na a√ß√£o acima:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php add_action( &#39;save_post&#39;, &#39;vinil_meta_box_save&#39; ); ?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;A fun√ß√£o vinil_meta_box receber√° um argumento, a ID do Post, e vai cuidar da limpeza e salvar todos os nossos dados.&lt;/p&gt;

&lt;p&gt;Antes de podermos fazer qualquer coisa, no entanto, que temos que fazer 3 coisas: verificar se o Post esta auto salvando, verificar o valor √∫nico que criamos anteriormente, e verificar se o usu√°rio atual pode realmente editar o post.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;add_action( &#39;save_post&#39;, &#39;vinil_meta_box_save&#39; );
function vinil_meta_box_save( $post_id )
{
if( defined( &#39;DOING_AUTOSAVE&#39; ) &amp;&amp; DOING_AUTOSAVE ) return;

if( !isset( $_POST[&#39;meta_box_nonce&#39;] ) || !wp_verify_nonce( $_POST[&#39;meta_box_nonce&#39;], &#39;my_meta_box_nonce&#39; ) ) return;

if( !current_user_can( &#39;edit_post&#39; ) ) return;

}

&lt;/pre&gt;

&lt;p&gt;Agora as coisas divertidas: na verdade, salvar nossos dados. A regra n√∫mero um, ao colocar qualquer coisa em seu banco de dados ou em seu site √© n√£o confiar no usu√°rio. Mesmo se esse usu√°rio √© voc√™. Para o efeito, antes de salvar os dados, queremos ter certeza de que n√£o h√° nada malicioso l√°. Felizmente WordPress fornece um monte de fun√ß√µes para valida√ß√£o de dados. Para isso vamos utilizar o esc_attr(). E tamb√©m vamos usar a fun√ß√£o update_post_meta para salvar os nossos dados. Leva tr√™s argumentos: a ID post, a chave de meta, e o valor.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;add_action( &#39;save_post&#39;, &#39;vinil_meta_box_save&#39; );
function vinil_meta_box_save( $post_id )
{
if( defined( &#39;DOING_AUTOSAVE&#39; ) &amp;&amp; DOING_AUTOSAVE ) return;

if( !isset( $_POST[&#39;meta_box_nonce&#39;] ) || !wp_verify_nonce( $_POST[&#39;meta_box_nonce&#39;], &#39;my_meta_box_nonce&#39; ) ) return;

if( !current_user_can( &#39;edit_post&#39; ) ) return;

$allowed = array(
&#39;a&#39; =&amp;gt; array(
&#39;href&#39; =&amp;gt; array()
)
);

if( isset( $_POST[&#39;texto_meta_box&#39;] ) )
update_post_meta( $post_id, &#39;texto_meta_box&#39;, wp_kses( $_POST[&#39;texto_meta_box&#39;], $allowed ) );

if( isset( $_POST[&#39;meta_box_select&#39;] ) )
update_post_meta( $post_id, &#39;meta_box_select&#39;, esc_attr( $_POST[&#39;meta_box_select&#39;] ) );

$chk = ( isset( $_POST[&#39;meta_box_check&#39;] ) &amp;&amp; $_POST[&#39;meta_box_check&#39;] ) ? &#39;on&#39; : &#39;off&#39;;
update_post_meta( $post_id, &#39;meta_box_check&#39;, $chk );
}

?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;√â isso, agora voc√™ deve ter um Meta Boxes funcionando em seu WordPress.&lt;/p&gt;

&lt;h2 id=&#34;nosso-arquivo-fica-assim&#34;&gt;Nosso arquivo fica assim:&lt;/h2&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php
/*
Plugin Name: Meta Box
Plugin URI: http://bygiovanni.com.br
Description:
Version: 1.0
Author: Giovanni - Tableless
Author URI: http://bygiovanni.com.br
*/

//ADICIONANDO O META BOX
add_action( &#39;add_meta_boxes&#39;, &#39;vinil_meta_box_add&#39; );
function vinil_meta_box_add()
{
add_meta_box( &#39;my-meta-box-id&#39;, &#39;Meu primeiro Meta Box&#39;, &#39;vinil_meta_box_vinil&#39;, &#39;post&#39;, &#39;normal&#39;, &#39;high&#39; );
}

//FORMULARIO PARA SALVAS OS DADOS
function vinil_meta_box_vinil()
{
$values = get_post_custom( $post-&amp;gt;ID );
$text = isset( $values[&#39;texto_meta_box&#39;] ) ? esc_attr( $values[&#39;texto_meta_box&#39;][0] ) : &#39;&#39;;
$selected = isset( $values[&#39;meta_box_select&#39;] ) ? esc_attr( $values[&#39;meta_box_select&#39;][0] ) : &#39;&#39;;
$check = isset( $values[&#39;meta_box_check&#39;] ) ? esc_attr( $values[&#39;meta_box_check&#39;][0] ) : &#39;&#39;;
wp_nonce_field( &#39;my_meta_box_nonce&#39;, &#39;meta_box_nonce&#39; );
?&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;label for=&#34;texto_meta_box&#34;&amp;gt;Text Label&amp;lt;/label&amp;gt;
&amp;lt;input type=&#34;text&#34; name=&#34;texto_meta_box&#34; id=&#34;texto_meta_box&#34; /&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;label for=&#34;meta_box_select&#34;&amp;gt;Color&amp;lt;/label&amp;gt;
&amp;lt;select name=&#34;meta_box_select&#34; id=&#34;meta_box_select&#34;&amp;gt;
&amp;lt;option value=&#34;red&#34; &amp;lt;?php selected( $selected, &#39;red&#39; ); ?&amp;gt;&amp;gt;Vermelho&amp;lt;/option&amp;gt;
&amp;lt;option value=&#34;blue&#34; &amp;lt;?php selected( $selected, &#39;blue&#39; ); ?&amp;gt;&amp;gt;Azul&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;input type=&#34;checkbox&#34; name=&#34;meta_box_check&#34; id=&#34;meta_box_check&#34; &amp;lt;?php checked( $check, &#39;on&#39; ); ?&amp;gt; /&amp;gt;
&amp;lt;label for=&#34;meta_box_check&#34;&amp;gt;Don&#39;t Check This.&amp;lt;/label&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;?php
}

add_action( &#39;save_post&#39;, &#39;vinil_meta_box_save&#39; );
function vinil_meta_box_save( $post_id )
{
if( defined( &#39;DOING_AUTOSAVE&#39; ) &amp;&amp; DOING_AUTOSAVE ) return;

if( !isset( $_POST[&#39;meta_box_nonce&#39;] ) || !wp_verify_nonce( $_POST[&#39;meta_box_nonce&#39;], &#39;my_meta_box_nonce&#39; ) ) return;

if( !current_user_can( &#39;edit_post&#39; ) ) return;

$allowed = array(
&#39;a&#39; =&amp;gt; array(
&#39;href&#39; =&amp;gt; array()
)
);

if( isset( $_POST[&#39;texto_meta_box&#39;] ) )
update_post_meta( $post_id, &#39;texto_meta_box&#39;, wp_kses( $_POST[&#39;texto_meta_box&#39;], $allowed ) );

if( isset( $_POST[&#39;meta_box_select&#39;] ) )
update_post_meta( $post_id, &#39;meta_box_select&#39;, esc_attr( $_POST[&#39;meta_box_select&#39;] ) );

$chk = ( isset( $_POST[&#39;meta_box_check&#39;] ) &amp;&amp; $_POST[&#39;meta_box_check&#39;] ) ? &#39;on&#39; : &#39;off&#39;;
update_post_meta( $post_id, &#39;meta_box_check&#39;, $chk );
}

?&amp;gt;

&lt;/pre&gt;

&lt;p&gt;Para saber mais sobre os Meta Box podem ver no Codex que tamb√©m √© uma √≥tima fonte de estudo para o WP. &lt;a href=&#34;http://codex.wordpress.org/Function_Reference/add_meta_box&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://codex.wordpress.org/Function_Reference/add_meta_box&#34;&gt;http://codex.wordpress.org/Function_Reference/add_meta_box&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>