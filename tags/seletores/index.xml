<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Seletores on Tableless</title>
    <link>http://tableless.com.br/tags/seletores/index.xml</link>
    <description>Recent content in Seletores on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/seletores/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Seletores CSS Nível 4 – O que vem por aí</title>
      <link>http://tableless.com.br/seletores-css-nivel-4-o-que-vem-por-ai/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/seletores-css-nivel-4-o-que-vem-por-ai/</guid>
      <description>

&lt;p&gt;Os seletores do CSS são a coisa mais importante da linguagem. As propriedades você consegue decorar e aprender de acordo com necessidade. Mas os seletores são a sua ferramenta de trabalho. A falta de um seletor adequado é determinante quando você decide fazer aquela gambiarra nojenta para conseguir formatar um elemento específico. Com seletores mais inteligentes, você também previne a chuva de classes que tem sido comum em projetos alheios. Por isso é importante que você conheça os novos seletores de nível 4 do CSS. Eles trazem uma série de novidades importantes para resolver aqueles problema recorrentes principalmente em projetos complexos. Abaixo, veja alguns exemplos.&lt;/p&gt;

&lt;p&gt;Para os mais puristas: quase nenhum destes seletores podem ser usados. A maioria apenas com a ajuda de prefixos e outros com a nomenclatura diferente da do padrão estabelecido. Por isso, não fique esperando que tudo isso poderá ser usado agora. Este é apenas um vislumbre do que você terá como ferramenta nos próximos anos (ou meses?).&lt;/p&gt;

&lt;h2 id=&#34;matcher&#34;&gt;:matcher&lt;/h2&gt;

&lt;p&gt;É uma pseudo-classe que seleciona como argumento uma lista de elementos. Nesse caso, não é possível fazer um seletor com combinadores. Muito útil, veja o exemplo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;section h1, header h1, article h1 {
  color: blue;
}
&lt;/pre&gt;

&lt;p&gt;Seria o mesmo que escrever:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;:matches(section, header, article) h1 {
  color: blue;
}
&lt;/pre&gt;

&lt;p&gt;Para você testar aí no Firefox ou no WebKit, note que eles estão usando um seletor prefixado chamado &lt;strong&gt;any&lt;/strong&gt;. É usado assim: &lt;strong&gt;-moz-any()&lt;/strong&gt; e &lt;strong&gt;-webkit-any()&lt;/strong&gt;. Alguma hora eles irão mudar para o nome definido pelo W3C.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;:-moz-any(section, article, header) h1,
:-webkit-any(section, article, header) h1 {
  color: red;
}
&lt;/pre&gt;

&lt;h2 id=&#34;not&#34;&gt;:not&lt;/h2&gt;

&lt;p&gt;O &lt;strong&gt;:not&lt;/strong&gt; foi apresentado no nível 3 do CSS, mas na versão 4 ele ganha um novo improvement, sendo utilizado assim:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p:not(.active, .visible) {
   color: red;
}
&lt;/pre&gt;

&lt;p&gt;Esse código seleciona todos os parágrafos que não tem a classe ACTIVE ou VISIBLE aplicadas.&lt;/p&gt;

&lt;h2 id=&#34;any-link&#34;&gt;:any-link&lt;/h2&gt;

&lt;p&gt;Esse é uma pequena adição, mas que ajuda bastante. Veja o exemplo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;a:link,
a:visited,
a:actived {
  color: green;
}
&lt;/pre&gt;

&lt;p&gt;É substituído por:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;a:any-link {
  color: green;
}
&lt;/pre&gt;

&lt;h2 id=&#34;case-sensitivity&#34;&gt;Case-sensitivity&lt;/h2&gt;

&lt;p&gt;Atributos e Valores geralmente são minúsculos, mas alguns linguagens ou devs desavisados podem colocar letras maiúsculas nos valores dos atributos do HTML. Isto se torna um problema quando fazemos a seleção dos elementos via atributo e valor, como no exemplo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;a[href$=&#34;PDF&#34;] {
  color: green;
}
&lt;/pre&gt;

&lt;p&gt;Para prevenir isso, basta adicionar uma flag &lt;strong&gt;i&lt;/strong&gt; ainda dentro dos colchetes para que o browser ignore o case-sensitivity dos valores:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;a[href$=&#34;pdf&#34; i] {
  color: green;
}
&lt;/pre&gt;

&lt;h2 id=&#34;dir&#34;&gt;:dir()&lt;/h2&gt;

&lt;p&gt;Seleciona elementos com uma direção de leitura específica. Veja o exemplo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;// Parágrafos com direção de leitura da esquerda para direita
p:dir(ltr) {
  color: green;
}

// Parágrafos com direção de leitura da direita para esquerda
p:dir(rtl) {
  color: red;
}
&lt;/pre&gt;

&lt;h2 id=&#34;read-only-e-read-write&#34;&gt;:read-only e :read-write&lt;/h2&gt;

&lt;p&gt;Outra adição bastante simples. Com essas pseudo-classes nós podemos selecionar e formatar os elementos que são read-only ou read-write na página. Geralmente todos os elementos são apenas read-only. Você não interage ou muda um parágrafo, por exemplo. Você vê um exemplo bastante simples pelos formulários:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;input:-moz-read-only {
  border: 1px solid red;
}

input:-moz-read-write {
  border: 1px solid blue;
}
&lt;/pre&gt;

&lt;h2 id=&#34;subject-seletor&#34;&gt;Subject Seletor&lt;/h2&gt;

&lt;p&gt;Agora você tem a possibilidade de inverter a ordem do seletor. Calma, eu explico: o seletor é lido sempre da direita para a esquerda. Mas agora você pode inverter essa ordem usando a flag &lt;strong&gt;!&lt;/strong&gt; no começo do seletor. Assim:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;!ul &gt; li {
  border: 1px solid blue;
}
&lt;/pre&gt;

&lt;p&gt;No caso acima, a &lt;strong&gt;UL&lt;/strong&gt; ficará com a borda. Bem interessante! Coisa lindíssima.&lt;/p&gt;

&lt;h2 id=&#34;entre-outros&#34;&gt;Entre outros&lt;/h2&gt;

&lt;p&gt;Existem uma &lt;a href=&#34;http://dev.w3.org/csswg/selectors-4/#overview&#34;&gt;listagem completa na documentação do W3C&lt;/a&gt; que mostra não apenas os seletores de nível 4, mas também os seletores que entraram nas versões anteriores. Vale a pena dar uma lida na documentação.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://css4-selectors.com/selectors/&#34;&gt;Neste link&lt;/a&gt; você encontra uma listagem com exemplos de sintaxe&lt;/p&gt;

&lt;p&gt;Alguns seletores eu queria muito ver funcionando, como é o caso das time-pseudos &lt;a href=&#34;http://dev.w3.org/csswg/selectors-4/#time-pseudos&#34;&gt;:current, :past e :future&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Propriedade do CSS: nth-child</title>
      <link>http://tableless.com.br/nth-child/</link>
      <pubDate>Thu, 16 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/nth-child/</guid>
      <description>

&lt;p&gt;Se você é um cara muito técnico, que adora matemática e números, prefiro que você &lt;a href=&#34;http://www.w3.org/TR/css3-selectors/#nth-child-pseudo&#34;&gt;leia a documentação do W3C&lt;/a&gt; sobre &lt;code&gt;nth-child&lt;/code&gt;. Ela é mais rica em detalhes sobre o cálculo que essa pseudo-classe faz. Este artigo é para os pobres mortais.&lt;/p&gt;

&lt;p&gt;Você já precisou de criar uma tabela zebrada? Eu já, muitas vezes. Provavelmente se você não sabe programar, você precisa chamar um programador para escrever duas ou três linhas de código Javascript ou até mesmo usando JQuery, para fazer a mágica para você. A idéia do CSS, é que nós, designers, possamos controlar a aparência dos elementos HTML. Isso inclui conseguirmos fazer uma maldita tabela zebrada também. Para isso e para outros problemas parecidos, podemos utilizar a pseudo-classe &lt;code&gt;nth-child&lt;/code&gt;. Com esta pseudo-classe é possível selecionar um determinado elemento dentro de uma árvore de elementos. Por exemplo, podemos selecionar todas as linhas ímpares das tabela. Legal, hein?&lt;/p&gt;

&lt;h4 id=&#34;cálculo-básico&#34;&gt;Cálculo básico&lt;/h4&gt;

&lt;p&gt;O cálculo utilizado pelo &lt;code&gt;nth-child&lt;/code&gt; é bastante simples. Você vai usar na maioria das vezes soma. Lembra? A fómula será a seguinte: &lt;em&gt;an+b&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;table tbody tr:nth-child(2n+1) {&lt;/p&gt;

&lt;p&gt;background:lightgray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;O funcionamento é o seguinte: o browser aplica o estilo a cada 2 &lt;code&gt;tr&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;O código abaixo, aplica o estilo a cada 3 &lt;code&gt;tr&lt;/code&gt;. E assim por diante.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;table tbody tr:nth-child(3n+1) {&lt;/p&gt;

&lt;p&gt;background:lightgray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Você pode facilitar, utilizando as palavras &lt;em&gt;odd&lt;/em&gt; ou &lt;em&gt;even&lt;/em&gt;, para selecionar os elementos ímpares ou pares da árvore.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;table tbody tr:nth-child(odd) {&lt;/p&gt;

&lt;p&gt;background:lightgray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Caso você queira pegar 9º, 19º, 29º e assim por diante:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;table tbody tr:nth-child(10n-1) {&lt;/p&gt;

&lt;p&gt;background:lightgray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Se o valor de &lt;em&gt;a&lt;/em&gt; (an+b) é igual 0, você não precisa colocar a fórmula, apenas o número referente a ordem do elemento. Exemplo:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;table tbody tr:nth-child(1) {&lt;/p&gt;

&lt;p&gt;background:lightgray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Neste código, o browser iá colorir o background apenas do primeiro &lt;code&gt;tr&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/07/nth-child-ex1.html&#34;&gt;Veja o exemplo.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A propriedade &lt;code&gt;nth-child&lt;/code&gt; faz parte dos seletores do CSS 3 e já pode ser utilizado em browsers atuais.&lt;/p&gt;

&lt;p&gt;Se você ainda não leu sobre seletores do CSS, leia estes artigos abaixo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/seletores-agrupados-e-encadeados&#34;&gt;Seletores encadeados e agrupados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/pseudo-classes-css&#34;&gt;Seletores do CSS &amp;#8211; Pseudo-classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/seletores-complexos-do-css&#34;&gt;Seletores Complexos do CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Seletores do CSS: Pseudo-classes</title>
      <link>http://tableless.com.br/pseudo-classes-css/</link>
      <pubDate>Mon, 23 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/pseudo-classes-css/</guid>
      <description>&lt;p&gt;Existem vários tipos de &lt;strong&gt;pseudo-classes&lt;/strong&gt;. Podemos separá-las em dois grandes grupos: &lt;strong&gt;Estruturais&lt;/strong&gt; e &lt;strong&gt;Dinâmicas&lt;/strong&gt;. Existem outras pseudo-classes que não se encaixam nestes dois grupos principais, que controlam a interface do usuário, elementos de URLs e etc. Não irei me alongar em todos os grupos, entenda melhor sobre todos os grupos e pseudo-classes diretamente da fonte:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.w3.org/TR/css3-selectors/&#34; title=&#34;Seletores do CSS3&#34;&gt;CSS3 Selectors&lt;/a&gt; ou se quiser, temos uma &lt;a href=&#34;http://tableless.com.br/compatibilidadecss/&#34; title=&#34;Tabela para ver a compatibilidade de propriedades CSS entre os browsers&#34;&gt;tabela de compatibilidade de CSS&lt;/a&gt; para que você possa conferir o que funciona em cada browser.&lt;/p&gt;

&lt;h3 id=&#34;pseudo-classes-dinâmicas&#34;&gt;Pseudo-classes Dinâmicas&lt;/h3&gt;

&lt;p&gt;As pseudo-classes dinâmicas controlam os estados dos elementos. Abaixo, vão alguns deles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:hover&lt;/strong&gt; &amp;#8211; quando passamos o mouse em cima do elemento.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:active&lt;/strong&gt; &amp;#8211; quando ativamos o elemento. Por exemplo, quando clicamos em um link e não soltamos o botão do mouse. Nesse momento, estamos ativando a ação do elemento. Esse estado é ativado também quando navegamos pelos links pelo teclado utilizando o TAB. Este estado não há em todos os elementos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:visited&lt;/strong&gt; &amp;#8211; quando o link é visitado.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:focus&lt;/strong&gt; &amp;#8211; quando um elemento recebe foco. Muito utilizado em campos de texto. Quando clicamos em cima um campo de texto para escrever, o elemento está ganhando foco.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Teoricamente, todos os elementos tem estes estados. Partindo dessa premissa, podemos fazer, por exemplo, um menu com submenu sem utilizar Javascript. Basta fazer com que ao passar em cima de uma LI, a UL que ela contém, apareça, ou seja, ganhe display: block;. Complicado? Claro que não. Veja o HTML abaixo:&lt;/p&gt;

&lt;pre lang=&#34;HTML&#34; line=&#34;1&#34;&gt;&lt;ul&gt;
  &lt;li&gt;
    &lt;a href=&#34;#&#34;&gt;Home&lt;/a&gt;
  &lt;/li&gt;
     
  
  &lt;li&gt;
    &lt;a href=&#34;#&#34;&gt;Produtos&lt;/a&gt;
          &lt;ul&gt;
      &lt;li&gt;
        &lt;a href=&#34;#&#34;&gt;Carros&lt;/a&gt;
      &lt;/li&gt;
              
      
      &lt;li&gt;
        &lt;a href=&#34;#&#34;&gt;Motos&lt;/a&gt;
      &lt;/li&gt;
              
      
      &lt;li&gt;
        &lt;a href=&#34;#&#34;&gt;Charretes&lt;/a&gt;
      &lt;/li&gt;
              
      
      &lt;li&gt;
        &lt;a href=&#34;#&#34;&gt;Skates&lt;/a&gt;
      &lt;/li&gt;
            
    &lt;/ul&gt;
       
  &lt;/li&gt;
     
  
  &lt;li&gt;
    &lt;a href=&#34;#&#34;&gt;Sobre&lt;/a&gt;
  &lt;/li&gt;
     
  
  &lt;li&gt;
    &lt;a href=&#34;#&#34;&gt;Contato&lt;/a&gt;
  &lt;/li&gt;
  
&lt;/ul&gt;
&lt;/pre&gt;

&lt;p&gt;Largue de ser preguiçoso, copie o código acima em um HTML com Doctype STRICT e veja o resultado no browser. Agora, defina o seguinte CSS:&lt;/p&gt;

&lt;pre lang=&#34;CSS&#34; line=&#34;1&#34;&gt;ul li ul {
   display: none;
}

ul li:hover ul {
   display: block; 
}
&lt;/pre&gt;

&lt;p&gt;No seletor &lt;strong&gt;UL LI UL&lt;/strong&gt;, você selecionou a UL que está dentro da LI, e definiu para que ela não aparecesse com a propriedade &lt;strong&gt;display: none;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No seletor &lt;strong&gt;UL LI:HOVER UL&lt;/strong&gt;, como no seletor acima, você selecionou a UL que está dentro da LI. Mas com uma diferença: você colocou logo após a LI a pseudo-classe :hover, o seja, você definiou a UL que está dentro da LI, mas só quando o mouse é passado em cima dessa LI. Complicado? Que nada. Veja aí no seu exemplo como ficou, ou &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/03/submenu.html&#34; title=&#34;Submenu sem javascript&#34;&gt;veja aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Eu não preciso dizer que isso não funciona no IE6. Esse artigo faz parte daquela série: o que podemos fazer sem o IE6.&lt;/p&gt;

&lt;p&gt;Abriu um pouco a cabeça para várias possibilidades, não é? Pois é. Essa é a idéia.&lt;/p&gt;

&lt;h3 id=&#34;pseudo-classes-estruturais&#34;&gt;Pseudo-classes Estruturais&lt;/h3&gt;

&lt;p&gt;As pseudo-classes estruturais servem para selecionarmos um elemento da estrutura do código. Existem várias, por exemplo:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;:first-child&lt;/strong&gt; &amp;#8211; seleciona o primeiro filho de um outro elemento.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;:last-child&lt;/strong&gt; &amp;#8211; seleciona o último filho de um elemento.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;:root&lt;/strong&gt; &amp;#8211; representa um elemento que é a raiz do documento. No HTML 4, é sempre a tag HTML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;:nth-child()&lt;/strong&gt; &amp;#8211; permite que selecionemos qualquer elemento no meio de um grupo de elementos. Por exemplo, você pode selecionar linhas de uma tabela. Assim, podemos fazer uma tabela zebrada, sem a ajuda de javascript. Há variações dessa pseudo-classe para podermos pegar os elementos de baixo para cima (:nth-last-child) e assim por diante. Testei aqui e isso não funcionou no meu FF3 (mac).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;:lang()&lt;/strong&gt; &amp;#8211; seleciona elementos que tem o atributo lang com um valor específico. &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/03/lang.html&#34;&gt;Veja um exemplo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Um exemplo básico.&lt;/p&gt;

&lt;p&gt;Imagine que você tem o seguinte HTML:&lt;/p&gt;

&lt;pre lang=&#34;HTML&#34; line=&#34;1&#34;&gt;&lt;div id=&#34;destaques&#34;&gt;
  &amp;lt;div 
        
  
  &lt;h3&gt;
    Título do Destaque
  &lt;/h3&gt;
        
  
  &lt;p&gt;
    Nullam cursus, dui vitae rhoncus imperdiet, nibh justo fermentum lectus, ac faucibus est ipsum id mauris. Phasellus auctor pede sed sem. Proin metus diam, ullamcorper ac, aliquet sit amet, semper in, ipsum. Nullam turpis dui, tristique quis, cursus non, tristique ac, mauris. Nunc mauris. Sed adipiscing. Aliquam ultricies egestas eros. Etiam nec ipsum id justo vestibulum condimentum. Aenean rhoncus, erat at luctus tincidunt, dolor dolor pharetra sem, ac iaculis lacus neque ut lectus. Quisque elementum bibendum diam. 
            
  &lt;/p&gt;
    
&lt;/div&gt;
    &amp;lt;div 
        

&lt;h3&gt;
  Título do Destaque
&lt;/h3&gt;
        

&lt;p&gt;
  Nullam cursus, dui vitae rhoncus imperdiet, nibh justo fermentum lectus, ac faucibus est ipsum id mauris. Phasellus auctor pede sed sem. Proin metus diam, ullamcorper ac, aliquet sit amet, semper in, ipsum. Nullam turpis dui, tristique quis, cursus non, tristique ac, mauris. Nunc mauris. Sed adipiscing. Aliquam ultricies egestas eros. Etiam nec ipsum id justo vestibulum condimentum. Aenean rhoncus, erat at luctus tincidunt, dolor dolor pharetra sem, ac iaculis lacus neque ut lectus. Quisque elementum bibendum diam. 
        
&lt;/p&gt;
    &amp;lt;/div&gt;

    &amp;lt;div 
        

&lt;h3&gt;
  Título do Destaque
&lt;/h3&gt;
        

&lt;p&gt;
  Nullam cursus, dui vitae rhoncus imperdiet, nibh justo fermentum lectus, ac faucibus est ipsum id mauris. Phasellus auctor pede sed sem. Proin metus diam, ullamcorper ac, aliquet sit amet, semper in, ipsum. Nullam turpis dui, tristique quis, cursus non, tristique ac, mauris. Nunc mauris. Sed adipiscing. Aliquam ultricies egestas eros. Etiam nec ipsum id justo vestibulum condimentum. Aenean rhoncus, erat at luctus tincidunt, dolor dolor pharetra sem, ac iaculis lacus neque ut lectus. Quisque elementum bibendum diam. 
        
&lt;/p&gt;
    &amp;lt;/div&gt;
&amp;lt;/div&gt;
&lt;/pre&gt;

&lt;p&gt;E agora, defina a formatação abaixo para este HTML:&lt;/p&gt;

&lt;pre lang=&#34;CSS&#34; line=&#34;1&#34;&gt;div#destaques div{
    width: 300px;
    float: left;
    padding: 10px 30px;
    border-right: 1px solid black;
}
&lt;/pre&gt;

&lt;p&gt;Ao aplicar esse código, você vai perceber que o último destaque também tem uma borda do lado direito. Normalmente, queremos as bordas apenas entre os elementos do meio. Para fazer isso por meios não muito inteligentes, nós teríamos que marcar algum dos divs das laterais para tirar a borda, ou marcar o div do meio para definir uma borda para os seus dois lados.&lt;/p&gt;

&lt;p&gt;Mas considere que você não pode modificar o HTML por algum motivo, e apenas é liberado modificações pelo CSS, como fazer?&lt;/p&gt;

&lt;p&gt;A pseudo-classe :last-child pode ajudar. Você quer retirar a borda do último filho do div &lt;strong&gt;#DESTAQUES&lt;/strong&gt;. Você iria inserir uma linha de CSS assim:&lt;/p&gt;

&lt;pre lang=&#34;CSS&#34; line=&#34;7&#34;&gt;div#destaques div:last-child {border-right:none;}
&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/03/lastchild.html&#34; title=&#34;Selecionando o último filho&#34;&gt;Veja o resultado final&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Você selecionou o DIV que é o último filho do &lt;strong&gt;div#destaques&lt;/strong&gt; e retirou a borda da direita que havíamos dado logo anteriormente. Sem modificar o HTML, colocando novas tags ou novas classes apenas para retirar uma borda.&lt;/p&gt;

&lt;p&gt;Há outras pseudo-classes como a :disabled ou :enabled, que modificam elementos com os atributos DISABLED ou ENABLED, como por exemplo, campos de texto, checkbox, radios etc.&lt;/p&gt;

&lt;p&gt;O CSS pode fazer muito por nós, basta os navegadores implementarem essas possibilidades. É por isso toda essa campanha contra o Internet Explorer 6. Esse artigo e &lt;a href=&#34;http://tableless.com.br/seletores-complexos-do-css&#34;&gt;outros&lt;/a&gt; &lt;a href=&#34;http://tableless.com.br/seletores-agrupados-e-encadeados&#34;&gt;artigos&lt;/a&gt; fazem parte dessa campanha. É uma forma de mostrar o quanto perdemos de produtividade em nosso dia a dia.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Seletores Agrupados e Encadeados</title>
      <link>http://tableless.com.br/seletores-agrupados-e-encadeados/</link>
      <pubDate>Mon, 09 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/seletores-agrupados-e-encadeados/</guid>
      <description>&lt;p&gt;O CSS é responsável por formatar e manipular toda informação exibida pelo HTML, de forma que o layout fique fiel ao que o designer desenhou. Essa é a explicação básica e resumida sobre a função do CSS.&lt;/p&gt;

&lt;p&gt;A idéia principal é não misturar o código de Formatação com a Informação do site. Elas devem ser independentes, para que as modificações em cada uma não influeciem o funcionamento da outra. Para isso, você precisa conseguir selecionar qualquer elemento do HTML pelo CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aviso: Este primeiro post terá como objetivo contextualizar o assunto. Faremos uma série de artigos sobre seletores, e é importante entendermos como eles funcionam.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O &amp;#8220;seletor&amp;#8221; é o responsável por essa função de selecionar o elemento, a estrutura da sintaxe é exatamente essa:&lt;/p&gt;

&lt;pre lang=&#34;CSS&#34; line=&#34;1&#34;&gt;seletor {
   propriedade: valor;
}
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Propriedade e valor&lt;/strong&gt; são as características que você gostaria de modificar no elemento.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seletor&lt;/strong&gt; é o elemento que você irá selecionar no código HTML.&lt;/p&gt;

&lt;p&gt;Nesta série de artigos, iremos mostrar como os seletores funcionam e seus tipos. Começaremos desde o básico até o manipulação de filhos e seletores complexos.&lt;/p&gt;

&lt;p&gt;Aviso aos navegantes: Farei essa série nivelando as possibilidades por cima. Ou seja, ignorarei solenemente browsers antigos ou que não suportam algumas possibilidades.&lt;/p&gt;

&lt;h3 id=&#34;seletores-agrupados&#34;&gt;Seletores Agrupados&lt;/h3&gt;

&lt;p&gt;Quando você deseja fazer com que vários elementos tenham as mesmas características, você irá agrupá-los em um mesmo seletor. A separação dos elementos é feita por vírgulas. Veja um exemplo:&lt;/p&gt;

&lt;pre lang=&#34;CSS&#34; line=&#34;1&#34;&gt;strong, em, span {
 color: red;
}
&lt;/pre&gt;

&lt;p&gt;Os elementos STRONG, EM e SPAN terão a mesma cor.&lt;/p&gt;

&lt;h3 id=&#34;seletores-encadeados&#34;&gt;Seletores Encadeados&lt;/h3&gt;

&lt;p&gt;O CSS trabalha com especificidade. Suponhamos que você queira que o EM tenha cor de letra vermelha, você irá fazer assim:&lt;/p&gt;

&lt;pre lang=&#34;CSS&#34; line=&#34;1&#34;&gt;em {
 color: red;
}
&lt;/pre&gt;

&lt;p&gt;Mas você tem uma série de EMs na página, e talvez você queira que apenas o EM que está dentro de STRONG fique com a cor vermelha. Você terá que especificar isso no seu seletor:&lt;/p&gt;

&lt;pre lang=&#34;CSS&#34; line=&#34;1&#34;&gt;strong em {
 color: red;
}
&lt;/pre&gt;

&lt;p&gt;No seletor acima estou dizendo que o EM que está dentro do STRONG terá cor vermelha. Lê-se da direita para esquerda, por que é a ordem do HTML. O código HTML seria mais ou menos assim:&lt;/p&gt;

&lt;pre lang=&#34;html&#34; line=&#34;1&#34;&gt;&lt;p&gt;
  A idéia do Tableless é sem dúvida &lt;strong&gt;melhorar o &lt;em&gt;nosso mercado&lt;/em&gt;&lt;/strong&gt;. 
  
&lt;/p&gt;
&lt;/pre&gt;

&lt;p&gt;Um seletor encadeado um pouco mais longo:&lt;/p&gt;

&lt;pre lang=&#34;CSS&#34; line=&#34;1&#34;&gt;.content .post-text p strong em {
 color: red;
}
&lt;/pre&gt;

&lt;p&gt;O HTML deste seletor seria este:&lt;/p&gt;

&lt;pre lang=&#34;html&#34; line=&#34;1&#34;&gt;&lt;div class=&#34;content&#34;&gt;
  &lt;div class=&#34;post-text&#34;&gt;
    &lt;p&gt;
      A idéia do Tableless é sem dúvida &lt;strong&gt;melhorar o &lt;em&gt;nosso mercado&lt;/em&gt;&lt;/strong&gt;. 
            
    &lt;/p&gt;
        
  &lt;/div&gt;
  
&lt;/div&gt;
&lt;/pre&gt;

&lt;p&gt;Juntando os &lt;strong&gt;seletores agrupados&lt;/strong&gt; e o &lt;strong&gt;seletores encadeados&lt;/strong&gt;, ficaria mais ou menos assim:&lt;/p&gt;

&lt;pre lang=&#34;CSS&#34; line=&#34;1&#34;&gt;.content .post-text p strong em, .content .post-text p strong a {
 color: red;
}
&lt;/pre&gt;

&lt;p&gt;Note que a vírgula separa os elementos. Logo após da vírgula é iniciado um novo seletor para modificar um outro elemento no HTML.&lt;/p&gt;

&lt;p&gt;Se você quer acompanhar essa pequena campanha, veja no Twitter o que nós podemos fazer sem o IE6. Siga o hash &lt;a href=&#34;http://search.twitter.com/search?q=%23semie6&#34;&gt;#semie6&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>