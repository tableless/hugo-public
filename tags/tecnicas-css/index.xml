<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tecnicas Css on Tableless</title>
    <link>http://tableless.com.br/tags/tecnicas-css/index.xml</link>
    <description>Recent content in Tecnicas Css on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/tecnicas-css/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>HTTP2 para Desenvolvedores de Web</title>
      <link>http://tableless.com.br/http2-para-desenvolvedores-de-web/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/http2-para-desenvolvedores-de-web/</guid>
      <description>

&lt;p&gt;HTTP2 significa uma mudança na forma como construímos websites. As boas práticas de HTTP1 são prejudiciais no mundo do HTTP2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HTTP1 é lento e ineficiente para a maioria dos casos de uso de hoje na web.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;HTTP1.x é a versão do HTTP que nós já conhecemos quando entramos o endereço de um site. É um protocolo antigo que foi concebido antes mesmo de sabermos o que essa imensa rede mundial de computadores se tornaria. Apesar desse protocolo continuar funcionando como esperado, simplesmente não é tão eficiente como no início, porque ultimamente estamos exigindo algo muito mais complexo do que este protocolo foi projetado originalmente.&lt;/p&gt;

&lt;h2 id=&#34;nós-estamos-hackeando-o-http1&#34;&gt;Nós estamos hackeando o HTTP1&lt;/h2&gt;

&lt;p&gt;Para que os sites carreguem em tempo aceitável usando HTTP1, desenvolvemos uma série de técnicas; hacks na verdade; para conseguirmos extrair um bom desempenho deste protocolo antigo. São eles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Usando CSS Sprites&lt;/strong&gt;: Combine várias imagens em uma só imagem e utilizando CSS para mostrar apenas uma parte dessa imagem num devido lugar da página.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concatenando o Código&lt;/strong&gt;: Tornando vários arquivos de CSS ou JS e consolidá-los em um único arquivo maior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cookieless&lt;/strong&gt; &amp;#8211; Servindo arquivos de um domínio sem o uso de cookies, através de servidores estáticos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Usando Partições de Shard&lt;/strong&gt;: Criando registros de Alias no DNS de diferentes domínios ou sub-domínios para hospedagem dos arquivos de imagens.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As duas primeiras técnicas visam evitar várias solicitações HTTP. Em HTTP1 um pedido é uma coisa muito cara e leva muito tempo, cada pedido pode ser baixados com os cookies que devem ser enviados como parte do pedido, e nada disso é compactado. É mais rápido agrupar um monte de coisas e fazer tudo de uma só vez no lado do cliente do que continuar enviando pedidos para o servidor cada momento que o código precisa de um arquivo.&lt;/p&gt;

&lt;p&gt;A terceira técnica é usada para minimizar o tempo necessário para obter os arquivos; cookies, se estiver definido, deve ser enviado para o domínio solicitado junto com cada pedido &amp;#8211; que acrescenta-se a um monte de espaço &amp;#8216;desperdiçado&amp;#8217; na linha. Se os seus arquivos estão em um domínio diferente (exemplo: imagens.meusite.com) que não usa cookies, então o pedido desses arquivos não precisará enviar cookies com eles, o que será um pouco mais rápido.&lt;/p&gt;

&lt;p&gt;A última técnica, sharding, é porque os navegadores costumavam permitir apenas duas solicitações HTTP simultâneas fossem feitas por domínio. Se você criar um novo domínio para alguns de seus arquivos, então você dobra a quantidade de conexões simultâneas o navegador irá permitir a fim de obter seus arquivos. Assim, você pode baixar o conteúdo do site mais rapidamente. Na realidade, sharding não tem sido muito útil nos últimos anos, pois os fabricantes de navegadores decidiram eliminar essa restrição das duas conexões &amp;#8216;era tonto, e eles ignoraram.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;o-que-esperar-do-http2&#34;&gt;O que esperar do HTTP2?&lt;/h2&gt;

&lt;blockquote style=&#34;font-size: 200%&#34;&gt;
  &lt;p&gt;
    &lt;em&gt;Não use as boas práticas do HTTP1 como base para um site que está sendo hospedado em HTTP2.&lt;/em&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O protocolo HTTP2 está quase aqui, ele é baseado no SPDY®, e isso torna tudo muito mais eficiente. Significa também que todas as técnicas de desempenho HTTP1 são prejudiciais. Eles irão fazer um site HTTP2 mais lento, e não mais rápido. Portanto, não use as boas práticas do HTTP1 como base para um site que está sendo hospedado em HTTP2.&lt;/p&gt;

&lt;p&gt;HTTP2 faz com que o custo de múltiplos pedidos diminua por causa de um número de técnicas já incluídas:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
  &lt;li&gt;
    HTTP2 pode deixar a conexão em aberta para reutilização por um longo de tempo, para que não haja a necessidade daquela negociação cara que HTTP1 faz com o servidor em cada solicitação.
  &lt;/li&gt;
  &lt;li&gt;
    Ao contrário do HTTP1, o novo protocolo usa compactação de arquivos e assim o tamanho da solicitação é significativamente menor &amp;#8211; e, como resultado, mais rápida.
  &lt;/li&gt;
  &lt;li&gt;
    HTTP2 é multiplex, ou seja, pode enviar e receber várias coisas ao mesmo tempo através de uma única conexão.
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O que tudo isso significa, é que não só as técnicas que usamos no HTTP1 estão obsoletas, mas como também, farão as coisas ficarem mais lentas. Você poderá estar baixando arquivos desnecessários para a página a ser servida (concatenação de código e CSS sprites são suscetíveis à isso), e a técnica de sharding invoca pesquisas de DNS que irão retardar as coisas, na verdade, no HTTP2 voce não precisar de usar shard de forma alguma.&lt;/p&gt;

&lt;p&gt;Resumindo, quando você desenvolver o front-end (html/css/js) para um site que será servido através do HTTP2, tenha a certeza de que você não está usando velhas técnicas de desempenho do HTTP1, o que irão prejudicar o seu HTTP2 site.&lt;/p&gt;

&lt;h3 id=&#34;aprendendo-mais-sobre-o-http2&#34;&gt;Aprendendo mais sobre o HTTP2&lt;/h3&gt;

&lt;p&gt;Aqui está &lt;a href=&#34;http://daniel.haxx.se/http2/&#34;&gt;um excelente artigo (em inglês)&lt;/a&gt;, escrito por Daniel Stenberg, no qual ele detalha mais profundamente esse assunto.&lt;/p&gt;

&lt;h3 id=&#34;tradução&#34;&gt;Tradução&lt;/h3&gt;

&lt;p&gt;A tradução deste artigo para o Português foi devidamente autorizada pelo autor, &lt;a href=&#34;https://mattwilcox.net/web-development/http2-for-front-end-web-developers&#34;&gt;Matt Wilcox&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como fazer triângulos (setas ou arrows) com CSS</title>
      <link>http://tableless.com.br/fazendo-triangulos-triangle-arrows-com-css/</link>
      <pubDate>Fri, 18 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/fazendo-triangulos-triangle-arrows-com-css/</guid>
      <description>&lt;p&gt;Muitas vezes usamos triângulos em links, botões ou qualquer outro elemento que precise de alguma indicação de clique. Esses triângulos, por serem muito simples, é bem possível criarmos inteiramente usando CSS. Esse truque vale muito a pena para evitar que o browser tenha que baixar pequenas imagens, quem mesmo tendo um peso bem leve, elas atrapalham a performance do carregamento do site.&lt;/p&gt;

&lt;p&gt;Para esse truque você usará os &lt;a href=&#34;http://tableless.com.br/como-usar-before-after/&#34;&gt;pseudo elementos :after ou :before&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Abaixo, segue o código:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;a href=&#34;#&#34; class=&#34;seta-cima&#34;&amp;gt;Seta para cima&amp;lt;/a&amp;gt;
&amp;lt;span class=&#34;seta-baixo&#34;&amp;gt;Seta para baixo&amp;lt;/span&amp;gt;
&amp;lt;i class=&#34;seta-esquerda&#34;&amp;gt;Seta para esquerda&amp;lt;/i&amp;gt;
&amp;lt;div class=&#34;seta-direita&#34;&amp;gt;Seta para direita&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/**
*** Seta para ESQUERDA
**/
.seta-esquerda:before {
  content: &#34;&#34;;
  display: inline-block;
  vertical-align: middle;
  margin-right: 10px;
  width: 0; 
  height: 0; 

  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent; 
  border-right: 5px solid blue; 
}

/**
*** Seta para DIREITA
**/
.seta-direita:before {
  content: &#34;&#34;;
  display: inline-block;
  vertical-align: middle;
  margin-right: 10px;
  width: 0; 
  height: 0; 

  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-left: 5px solid green;
}

/**
*** Seta para CIMA
**/
.seta-cima:before {
  content: &#34;&#34;;
  display: inline-block;
  vertical-align: middle;
  margin-right: 10px;
  width: 0; 
  height: 0; 

  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom: 5px solid black;
}

/**
*** Seta para BAIXO
**/
.seta-baixo:before {
  content: &#34;&#34;;
  display: inline-block;
  vertical-align: middle;
  margin-right: 10px;
  width: 0; 
  height: 0; 

  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 5px solid #f00;
}
&lt;/pre&gt;

&lt;p&gt;Perceba que o que define o tamanho da seta é o tamanho das bordas. A cor também é definida pela borda. Eu usei em um pseudo-elemento, mas você pode muito bem fazer em um span ou qualquer outro elemento vazio. Eu ainda assim sugiro fazer em um pseudo-elemento para evitar elementos inúteis.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quando utilizar (ou não) frameworks CSS</title>
      <link>http://tableless.com.br/quando-utilizar-ou-nao-frameworks-css/</link>
      <pubDate>Thu, 01 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/quando-utilizar-ou-nao-frameworks-css/</guid>
      <description>

&lt;p&gt;Framework é um conjunto de componentes que provêm uma estrutura básica de elementos reutilizáveis, tendo uma arquitetura consistente de funcionalidade genérica sob a qual a aplicação será construída.&lt;/p&gt;

&lt;p&gt;No caso de CSS, os frameworks constituem bibliotecas que visam permitir a codificação do CSS de modo mais fácil e compatível com padrões de estilos, agregando uma série de opções já prontas para projetar uma página web, como se fosse um esqueleto, reduzindo o tempo gasto com o desenvolvimento.&lt;/p&gt;

&lt;p&gt;Os frameworks CSS geralmente apresentam definições de formatação os elementos mais comuns de uma página: formulários, cabeçalhos, estilos de textos e imagens. Alguns apresentar opções para a estruturação do conteúdo baseado em &lt;em&gt;grids&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A utilização de frameworks HTML e/ou CSS ainda é um assunto que divide a opinião dos desenvolvedores, pois muitos consideram o framework como uma &lt;strong&gt;solução pronta&lt;/strong&gt; e acreditam que ele tira o trabalho das mãos do designer/desenvolvedor e faz com que ele não aprimore os seus conhecimentos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Será que você, sem perceber, nunca criou o seu próprio framework?&lt;/strong&gt; Pense em um arquivo CSS padrão (além do &lt;em&gt;reset&lt;/em&gt;) que você criou para melhorar a produtividade de seus projetos.&lt;/p&gt;

&lt;p&gt;É importante esclarecer que o uso de frameworks &lt;strong&gt;não substitui&lt;/strong&gt; a necessidade do designer/ desenvolvedor de desenvolver o CSS do site. Ele apenas fornece uma base para a formatação de elementos comuns e otimiza o trabalho repetitivo.&lt;/p&gt;

&lt;h2 id=&#34;para-quem-os-frameworks-são-recomendados&#34;&gt;Para quem os frameworks são recomendados&lt;/h2&gt;

&lt;p&gt;Utilizar um framework CSS não é uma prática recomendada para quem está começando, principalmente por privar a pessoa da prática e do conhecimento sobre o funcionamento do CSS. Além disso, se ela não compreender bem CSS, poderá ter problemas para resolver problemas de layout causados por incompatibilidade entre o framework e um código CSS específico que ela inseriu.&lt;/p&gt;

&lt;p&gt;Portanto, é recomendável que frameworks sejam utilizados por quem possui um nível razoável de conhecimento e compreensão do código, mas tem a intenção de otimizar parte do trabalho com o uso de um framework. E isto serve não apenas para quem pretende utilizar um framework CSS, mas também qualquer tipo de framework.&lt;/p&gt;

&lt;h2 id=&#34;quando-é-interessante-utilizar&#34;&gt;Quando é interessante utilizar?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Prototipação rápida em HTML&lt;/li&gt;
&lt;li&gt;Sites de larga escala e com estruturas similares (como portais, blog/sites no estilo magazine)&lt;/li&gt;
&lt;li&gt;Sites construídos através de plataformas de CMS&lt;/li&gt;
&lt;li&gt;Projetos que tenham prazos curtos&lt;/li&gt;
&lt;li&gt;Projetos realizados em equipe onde há diversas pessoas trabalhando no mesmo CSS, podendo ter um conjunto consistente de padrões de codificação&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;vantagens&#34;&gt;Vantagens&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Padronização de código entre a equipe de desenvolvimento;&lt;/li&gt;
&lt;li&gt;Arquivos modularizados;&lt;/li&gt;
&lt;li&gt;Flexibilidade de estilos, classes genéricas que podem ser combinadas de diversas formas nos elementos da página;&lt;/li&gt;
&lt;li&gt;Geralmente já possuem uma documentação, que pode ser consultada pela equipe em caso de dúvida ou necessidade de solucionar algum problema;&lt;/li&gt;
&lt;li&gt;Compatibilidade cross-browser (na maioria dos casos);&lt;/li&gt;
&lt;li&gt;Você pode melhorar suas habilidades estudando o framework;&lt;/li&gt;
&lt;li&gt;Redução de tempo: o desenvolvedor/designer pode se concentrar mais nos aspectos particulares do site desenvolvido, pois a base está assegurada e não precisa desenvolvê-la do zero;&lt;/li&gt;
&lt;li&gt;Reduz futuros esforços de manutenção caso seja necessário resposicionar elementos ou alterar características de renderização (fonte, margens, etc) em diversos elementos.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;desvantagens&#34;&gt;Desvantagens&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Quantidade excessiva de modificações que devem ser feitas para adaptar o framework;&lt;/li&gt;
&lt;li&gt;O framework pode conter códigos irrelevantes que nunca serão utilizados no projeto e serão carregados sem necessidade, podendo diminuir o desempenho da página;&lt;/li&gt;
&lt;li&gt;Nem sempre o código é bem organizado;&lt;/li&gt;
&lt;li&gt;Muitos frameworks apresentam classes pouco semânticas (ex.: span-5).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;algumas-dicas-para-melhorar-o-uso-do-framework&#34;&gt;Algumas dicas para melhorar o uso do framework&lt;/h2&gt;

&lt;p&gt;Como as classes geralmente não apresentam muita semântica, procure colocar IDs significativos nos elementos da página, quando possível.&lt;/p&gt;

&lt;p&gt;Você também pode optar por utilizar somente uma parte do framework. Em projetos em que utilizei o &lt;a title=&#34;Blueprint CSS&#34; href=&#34;http://www.blueprintcss.org/&#34; target=&#34;_blank&#34;&gt;Blueprint CSS&lt;/a&gt;, muitas vezes utilizava apenas algumas folhas de estilos do framework que se adequavam ao que eu necessitava.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dica:&lt;/strong&gt; evite usar vários frameworks CSS em um mesmo projeto. Isto quebra a ideia de consistência, uma vez que cada framework tem o seu padrão de estruturação.&lt;/p&gt;

&lt;h2 id=&#34;como-escolher-o-framework&#34;&gt;Como escolher o framework?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Verificar se é realmente necessário o uso de um framework CSS no projeto;&lt;/li&gt;
&lt;li&gt;Avaliar se o código do framework escolhido tem uma estrutura e organização;&lt;/li&gt;
&lt;li&gt;Avaliar se há código excessivo que nunca será utilizado;&lt;/li&gt;
&lt;li&gt;Conferir se há uma boa documentação;&lt;/li&gt;
&lt;li&gt;Verificar se os recursos do framework são adequados ao que você necessita para o projeto. Não adianta utilizar um framework CSS focado em renderização quando seria mais útil um framework de grid.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Frameworks CSS, se bem utilizados, podem trazer muitos benefícios para seus projetos, basta saber como explorar o potencial que eles possuem 😉&lt;/p&gt;

&lt;h3 id=&#34;referências&#34;&gt;Referências&lt;/h3&gt;

&lt;p&gt;Why you should NOT use a web framework &amp;#8211; &lt;a href=&#34;http://checkedexception.blogspot.com/2010/04/why-you-should-not-use-web-framework.html&#34;&gt;http://checkedexception.blogspot.com/2010/04/why-you-should-not-use-web-framework.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To use a framework, or not to: that is the question &amp;#8211; &lt;a href=&#34;http://www.phparch.com/2010/04/to-use-a-framework-or-not-to-that-is-the-question/&#34;&gt;http://www.phparch.com/2010/04/to-use-a-framework-or-not-to-that-is-the-question/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please do not Use CSS Frameworks &amp;#8211; &lt;a href=&#34;http://mondaybynoon.com/2007/08/27/please-do-not-use-css-frameworks/&#34;&gt;http://mondaybynoon.com/2007/08/27/please-do-not-use-css-frameworks/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which CSS Grid Framework Should You Use for Web Design? &amp;#8211; &lt;a href=&#34;http://net.tutsplus.com/tutorials/html-css-techniques/which-css-grid-framework-should-you-use-for-web-design/&#34;&gt;http://net.tutsplus.com/tutorials/html-css-techniques/which-css-grid-framework-should-you-use-for-web-design/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When to use CSS framework? &amp;#8211; &lt;a href=&#34;http://www.vcarrer.com/2008/08/when-to-use-css-framework.html&#34;&gt;http://www.vcarrer.com/2008/08/when-to-use-css-framework.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WHAT’S NOT TO LOVE ABOUT CSS FRAMEWORKS? &amp;#8211; &lt;a href=&#34;http://jeffcroft.com/blog/2007/nov/17/whats-not-love-about-css-frameworks/&#34;&gt;http://jeffcroft.com/blog/2007/nov/17/whats-not-love-about-css-frameworks/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Frameworks for Designers &amp;#8211; &lt;a href=&#34;http://www.alistapart.com/articles/frameworksfordesigners&#34;&gt;http://www.alistapart.com/articles/frameworksfordesigners&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando um Menu Horizontal com CSS</title>
      <link>http://tableless.com.br/criando-um-menu-horizontal-com-css/</link>
      <pubDate>Thu, 06 Dec 2007 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/criando-um-menu-horizontal-com-css/</guid>
      <description>

&lt;p&gt;Se você não quiser ler, mas ver como fazer, &lt;a href=&#34;http://tableless.com.br/video-menu-horizontal-em-5-minutos&#34;&gt;assista um vídeo&lt;/a&gt;. Neste vídeo é mostrado &lt;a href=&#34;http://tableless.com.br/video-menu-horizontal-em-5-minutos&#34;&gt;como fazer um menu horizontal com CSS&lt;/a&gt;. E se quiser aprender mais, &lt;a href=&#34;http://campus.tableless.com.br/&#34;&gt;visite o Campus Online e cadastre-se grátis&lt;/a&gt; para ver vídeos sobre desenvolvimento web.&lt;/p&gt;

&lt;p&gt;Quer fazer um &lt;strong&gt;menu horizontal&lt;/strong&gt; que seja fácil de personalizar e de fazer manutenção?&lt;/p&gt;

&lt;p&gt;Siga os passos abaixo e descubra como é fácil.&lt;/p&gt;

&lt;h3 id=&#34;estrutura&#34;&gt;Estrutura:&lt;/h3&gt;

&lt;p&gt;Primeiramente faça um elemento NAV (antigamente usaríamos a tag DIV) e atribua um ID. Neste exemplo nossa NAV se chamará &amp;#8220;menu&amp;#8221;. Dentro desta NAV, faça uma lista com as opções do menu.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;nav id=&#34;menu&#34;&amp;gt;
    &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&#34;#&#34;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&#34;#&#34;&amp;gt;Produtos&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&#34;#&#34;&amp;gt;Missão&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&#34;#&#34;&amp;gt;Links&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&#34;#&#34;&amp;gt;Contato&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Há também a possibilidade de utilizar o elemento &lt;strong&gt;&lt;menu&gt;&lt;/strong&gt;, mas ainda está em rascunho no W3C.&lt;/p&gt;

&lt;h3 id=&#34;começando-a-formatação&#34;&gt;Começando a formatação:&lt;/h3&gt;

&lt;p&gt;Agora que já fizemos a estrutura do menu, vamos formatá-lo com CSS.&lt;/p&gt;

&lt;p&gt;Primeiro, para podermos trabalhar melhor, vamos tirar o margin (margin:0px;), o padding (padding:0px;) e os Bullets das opções (list-style:none;) da tag UL. Queremos que o UL seja uma barra de navegação certo? Então vamos fazer ele flutuar à esquerda (float:left), depois damos a ele a largura de 100% (width:100%;), isso fará com que ele vire uma bloco. Veja o código css atribuído à tag UL:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;#menu ul {
    padding:0px;
    margin:0px;
    background-color:#EDEDED;
    list-style:none;
}
&lt;/pre&gt;

&lt;h3 id=&#34;terceiro&#34;&gt;Terceiro:&lt;/h3&gt;

&lt;p&gt;Para o nosso menu ficar horizontal, temos que fazer as suas opções ficarem uma ao lado da outra&amp;#8230; para isso, basta atribuir um display:inline; para a tag LI&amp;#8230; Isso fará todas as opções ficarem em uma linha horizontal:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;#menu ul li { display: inline; }
&lt;/pre&gt;

&lt;p&gt;Pronto, as opções já estão na horizontal, mas ainda podemos melhorar adicionando um visual melhor para os links, melhorando a área do click.&lt;/p&gt;

&lt;h3 id=&#34;deixando-o-menu-na-horizontal&#34;&gt;Deixando o menu na horizontal:&lt;/h3&gt;

&lt;p&gt;Ótimo. Estamos quase acabando nosso menu horizontal, agora falta pouco.&lt;/p&gt;

&lt;p&gt;Precisamos apenas formatar os links do menu para que eles não fiquem tão próximos um do outro. No css, faça que todos os links que estão dentro da tag LI (#menu ul li a) tenham características de elementos de bloco, mas não quebrem linha, dessa forma conseguimos formatar características como largura, altura, margin, padding como se os links fossem blocos. Agora, dê um espaço entre a borda do menu e o texto, para isso use o padding (padding: 2px 10px;).&lt;/p&gt;

&lt;p&gt;Você pode aproveitar para definir o &amp;#8220;visual&amp;#8221; que deverá ter o link: cor de fundo, letra, etc&amp;#8230;&lt;/p&gt;

&lt;p&gt;Veja o código css que escrevemos neste passo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;#menu ul li a {
    padding: 2px 10px;
    display: inline-block;

    /* visual do link */
    background-color:#EDEDED;
    color: #333;
    text-decoration: none;
    border-bottom:3px solid #EDEDED;
}
&lt;/pre&gt;

&lt;h3 id=&#34;vamos-ver-no-que-deu&#34;&gt;Vamos ver no que deu!&lt;/h3&gt;

&lt;p&gt;Para finalizar, vamos apenas definir o que deverá acontecer com o link quando o usuário passar o mouse. Este passo dispensa explicações.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;#menu ul li a:hover {
    background-color:#D6D6D6;
    color: #6D6D6D;
    border-bottom:3px solid #EA0000;
}
&lt;/pre&gt;

&lt;p&gt;Essa é a forma resumida e simples sobre como fazemos todos os menus horizontais da face da terra.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>