<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zepto on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/zepto/index.xml</link>
    <description>Recent content in Zepto on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/zepto/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Zepto.js: JavaScript peso-leve</title>
      <link>https://tableless.github.io/hugo-public/zepto-js-biblioteca-javascript-peso-leve/</link>
      <pubDate>Wed, 20 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/zepto-js-biblioteca-javascript-peso-leve/</guid>
      <description>

&lt;p&gt;Em tempos em que performance é muito valorizada, a escolha de bibliotecas e plugins extras influencia diretamente no peso do seu site ou aplicativo.&lt;/p&gt;

&lt;p&gt;Com aproximadamente 10kb em sua versão minificada (jQuery, por exemplo, tem 94kb), o framework &lt;strong&gt;Zepto.js&lt;/strong&gt; pode ser o mais indicado para quem deseja melhorar a performance e manter a compatibilidade com a API do jQuery.&lt;/p&gt;

&lt;h2 id=&#34;se-você-sabe-jquery-você-já-sabe-zepto&#34;&gt;Se você sabe jQuery, você já sabe Zepto&lt;/h2&gt;

&lt;p&gt;Além de ser leve, o Zepto.js é também compatível com a maioria dos métodos jQuery. Todos os seletores e métodos para manipulação de CSS/HTML são praticamente idênticos.&lt;/p&gt;

&lt;p&gt;No entanto, é importante frisar que o framework Zepto.js não é 100% compatível (e nem pretende ser) com a API do jQuery. Alguns métodos, inclusive, possuem assinaturas diferentes.&lt;/p&gt;

&lt;h2 id=&#34;funciona-apenas-em-browsers-modernos&#34;&gt;Funciona apenas em browsers modernos&lt;/h2&gt;

&lt;p&gt;Para ser leve, o código do Zepto.js precisou abdicar de &lt;em&gt;hacks&lt;/em&gt; e &lt;em&gt;workarounds&lt;/em&gt; para navegadores mais antigos. Seu foco é funcionar em browsers modernos, tanto em suas versões desktop como mobile.&lt;/p&gt;

&lt;p&gt;O &lt;em&gt;fallback&lt;/em&gt; para fazer uso do framework nos navegadores mais antigos é aplicar o seguinte trecho de código:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&amp;lt;script&amp;gt;
document.write(&#39;&amp;lt;script src=&#39; +
(&#39;__proto__&#39; in {} ? &#39;zepto&#39; : &#39;jquery&#39;) +
&#39;.js&amp;gt;&amp;lt;\/script&amp;gt;&#39;)
&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Caso o navegador não dê suporte à propriedade &lt;strong&gt;proto&lt;/strong&gt; em objetos JavaScript, o framework carregado será o jQuery.&lt;/p&gt;

&lt;h2 id=&#34;base&#34;&gt;Base&lt;/h2&gt;

&lt;p&gt;Os métodos do core do Zepto são muito parecidos com os métodos do core do jQuery. Por exemplo, para alterar o html de um elemento, utilizamos o seguinte código:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(&#39;#home&#39;).html(&#39;&amp;lt;a href=&#34;index.html&#34;&amp;gt;home&amp;lt;/a&amp;gt;&#39;);&lt;/pre&gt;

&lt;p&gt;Para alterar o CSS de um ou mais elementos com a classe &lt;em&gt;item-menu&lt;/em&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(&#39;.item-menu&#39;).css(&#39;background-color&#39;, &#39;red&#39;);&lt;/pre&gt;

&lt;p&gt;Ou ainda:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(&#39;.item-menu&#39;).css({backgroundColor: &#39;red&#39;, color: &#39;#fff&#39;});&lt;/pre&gt;

&lt;p&gt;Para adicionar um novo elemento a um elemento existente:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(&#39;&amp;lt;a href=&#34;index.html&#34;&amp;gt;home&amp;lt;/a&amp;gt;&#39;).appendTo(&#39;nav&#39;);&lt;/pre&gt;

&lt;p&gt;Notaram a semelhança com jQuery? Esse é um dos pontos fortes do Zepto.js, uma curva de aprendizado quase nula para quem já desenvolve com jQuery.&lt;/p&gt;

&lt;h2 id=&#34;eventos-efeitos&#34;&gt;Eventos &amp;amp; Efeitos&lt;/h2&gt;

&lt;p&gt;A associação de eventos também segue a API do jQuery:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(&#39;a&#39;).on(&#39;click&#39;, function(e){ console.log(&#39;clique&#39;); });
$(&#39;#home&#39;).click(function(e){ e.preventDefault(); });&lt;/pre&gt;

&lt;p&gt;A parte de efeitos é composta do objeto &lt;strong&gt;$.fx&lt;/strong&gt;, responsável pelas configurações globais de animação e do método &lt;em&gt;animate&lt;/em&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(&#34;#top-nav&#34;).animate({
  marginTop: &#39;30px&#39;,
  backgroundColor: &#39;#000&#39;,
  rotateX: &#39;10deg&#39;
}, 300, &#39;linear&#39;)&lt;/pre&gt;

&lt;p&gt;A diferença principal é que as animações do framework Zepto.js são todas feitas utilizando transições e transformações CSS3.&lt;/p&gt;

&lt;h2 id=&#34;ajax&#34;&gt;Ajax&lt;/h2&gt;

&lt;p&gt;Assim como o módulo de efeitos, as configurações globais para Ajax também ficam armazenadas em um objeto, o &lt;strong&gt;$.ajaxSettings&lt;/strong&gt;. É possível alterar o tipo padrão de requisição (o default é GET), o timeout, o tipo de dados entre outros.&lt;/p&gt;

&lt;p&gt;Também é possível configurar os callbacks para as seguintes operações: &lt;em&gt;beforeSend&lt;/em&gt;, &lt;em&gt;success&lt;/em&gt;, &lt;em&gt;error&lt;/em&gt; e &lt;em&gt;complete&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Chamadas Ajax são realizadas utilizando o método &lt;strong&gt;$.ajax&lt;/strong&gt; ou seus atalhos &lt;strong&gt;$.get&lt;/strong&gt;, &lt;strong&gt;$.post&lt;/strong&gt; e &lt;strong&gt;$.getJSON&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$.post(&#39;/projeto/novo&#39;, {titulo: &#39;Novo projeto&#39;}, function(response){
  console.log(&#39;Projeto criado com sucesso&#39;);
});&lt;/pre&gt;

&lt;p&gt;As operações Ajax também disparam eventos que podem ser utilizados por elementos da sua aplicação, entre eles &lt;em&gt;ajaxStart&lt;/em&gt;, &lt;em&gt;ajaxError&lt;/em&gt; e &lt;em&gt;ajaxComplete&lt;/em&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(document).on(&#39;ajaxError&#39;, function(e, xhr, options, error){
  console.log(&#39;;Erro: &#39;; + error);
});&lt;/pre&gt;

&lt;p&gt;O trecho de código acima captura qualquer evento de erro disparado por uma chamada Ajax e exibe o motivo do erro no console.&lt;/p&gt;

&lt;h2 id=&#34;touch-mobile&#34;&gt;Touch &amp;amp; Mobile&lt;/h2&gt;

&lt;p&gt;Originalmente criado para atender especificamente dispositivos mobile, o framework Zepto.js oferece suporte aos seguintes eventos de dispositivos de toque:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tap, singleTap, doubleTap e longTap&lt;/li&gt;
&lt;li&gt;swipe, swipeLeft, swipeRight, swipeUp, swipeDown&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Os eventos são associados como qualquer outro tipo de evento:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(&#39;#home&#39;).tap(function() {
  $(&#39;;.home-nav&#39;;).toggle();
});

$(&#39;#galeria&#39;).swipe(function() {
  $(this).animate({marginLeft: &#34;-100px&#34;}, 300, &#34;ease-out&#34;);
});&lt;/pre&gt;

&lt;p&gt;O módulo touch é opcional e não acompanha o build default do Zepto.js.&lt;/p&gt;

&lt;h2 id=&#34;plugins&#34;&gt;Plugins&lt;/h2&gt;

&lt;p&gt;Como era de se esperar, o desenvolvimento de plugins para Zepto.js segue o padrão jQuery de estender o objeto $.fn:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$.extend($.fn, {
  meuPlugin: function(){&amp;lt;/p&gt;
  // this é a coleção obtida no seletor
  return this;
});&lt;/pre&gt;

&lt;p&gt;A base de plugins ainda é infinitamente menor do que a base de plugins jQuery. O desenvolvedor brasileiro Jean Carlo Emer possui dois plugins interessantes que podem servir de base para você criar os seus próprios plugins:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jcemer.com/zepto-carousel/&#34;&gt;Zepto Carousel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jcemer.com/zepto-range/&#34;&gt;Zepto Range&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;referências&#34;&gt;Referências&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Site oficial:&lt;/em&gt; &lt;a href=&#34;http://zeptojs.com/&#34;&gt;zeptojs.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Código-fonte:&lt;/em&gt; &lt;a href=&#34;https://github.com/madrobby/zepto&#34;&gt;github.com/madrobby/zepto&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>