<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open Source on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/open-source/index.xml</link>
    <description>Recent content in Open Source on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/open-source/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Por que Python?</title>
      <link>https://tableless.github.io/hugo-public/por-que-python/</link>
      <pubDate>Tue, 29 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/por-que-python/</guid>
      <description>

&lt;p&gt;Eu sou apaixonado por &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;. Muito. Daquele tipo que fala de Python sempre que pode. E uma pergunta que sempre me fazem é: por quê? Vou tentar fazer uma lista dos motivos mais relevantes:&lt;/p&gt;

&lt;h2 id=&#34;1-é-muito-bom-escrever-código-python&#34;&gt;1. É muito bom escrever código Python&lt;/h2&gt;

&lt;p&gt;Geralmente, quando alguém cria uma linguagem de programação, tem em vista um objetivo. Por exemplo, Lisp foi escrita para programação funcional. Java foi escrita para que o mesmo código pudesse rodar em qualquer lugar. PHP foi criada para construir páginas web. E Python foi criada para ser produtiva e fácil de escrever.&lt;/p&gt;

&lt;p&gt;Um programador experiente aprende a sintaxe do Python em algumas poucas horas. O jeito de escrever faz sentido.&lt;/p&gt;

&lt;p&gt;Veja, por exemplo, essa função para calcular um número de &lt;a href=&#34;https://pt.wikipedia.org/wiki/Sequ%C3%AAncia_de_Fibonacci&#34;&gt;Fibonacci&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;def fib(n):
    if n&amp;lt;3:
        return n
    return fib(n-1) + fib(n-2)&lt;/pre&gt;

&lt;p&gt;Note como a sintaxe é simples. Mesmo nas decisões de design que são &amp;#8220;pouco ortodoxas&amp;#8221;, como os blocos baseados na indentação, a decisão foi tomada pensando em produtividade. O modelo de blocos do Python faz com que você precise digitar menos. Além disso, é impossível escrever código não indentado em Python.&lt;/p&gt;

&lt;p&gt;Veja nesse outro exemplo, a função de Fibonacci em uma versão &lt;a href=&#34;https://en.wikipedia.org/wiki/Memoization&#34;&gt;memoized&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;memo = {0:0, 1:1}

def fib(n):
    if not n in memo:
        memo[n] = fib(n-1) + fib(n-2)
    return memo[n]&lt;/pre&gt;

&lt;p&gt;Reparou como é simples? Ao trabalhar com Python, a linguagem nunca está entre você e seu problema. Você pode gastar seu tempo com a lógica de programação, que é o que realmente importa, e não com especificidades da linguagem que você está usando.&lt;/p&gt;

&lt;h2 id=&#34;2-organizar-um-projeto-python-é-muito-fácil&#34;&gt;2. Organizar um projeto Python é muito fácil&lt;/h2&gt;

&lt;p&gt;Vamos colocar nossa função de Fibonacci e salvar num arquivo, fib.py, incluindo um pouquinho de documentação. Chamamos cada arquivo Python de módulo:&lt;/p&gt;

&lt;pre&gt;&#39;&#39;&#39;Fibonacci function, memoized for better performance.&#39;&#39;&#39;
memo = {0:0, 1:1}

def fib(n):
    &#39;&#39;&#39;Returns the nth Fibonacci number.&#39;&#39;&#39;
    if not n in memo:
        memo[n] = fib(n-1) + fib(n-2)
    return memo[n]&lt;/pre&gt;

&lt;p&gt;Agora vamos importar esse arquivo no console do Python, e veja o que dá para fazer:&lt;/p&gt;

&lt;div style=&#34;width: 490px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;img class=&#34;&#34; src=&#34;http://elcio.com.br/wp-content/uploads/2015/09/fib.gif&#34; alt=&#34;&#34; width=&#34;480&#34; height=&#34;267&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Executando fib.py e ajuda.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;É como PHPDoc ou Javadoc, mas completamente nativo, e com uma sintaxe muito simples. E tudo o que você precisa para ler a documentação é o próprio Python.&lt;/p&gt;

&lt;h2 id=&#34;3-o-ecossistema-python-é-fantástico&#34;&gt;3. O ecossistema Python é fantástico&lt;/h2&gt;

&lt;p&gt;Começando pela própria linguagem, que vem com uma excelente &lt;a href=&#34;https://docs.python.org/3/library/&#34;&gt;biblioteca padrão&lt;/a&gt;. Essa biblioteca é bastante extensa e possui excelentes módulos, bem documentados e fáceis de usar. Por exemplo, digamos que você queira baixar o código fonte desse artigo e gerar um arquivo GZip com ele, veja como é fácil:&lt;/p&gt;

&lt;pre&gt;import urllib
import gzip
html=urllib.urlopen(&#39;http://tableless.com.br/por-que-python/&#39;).read()
gzfile=gzip.open(&#39;por-que-python.html.gz&#39;,&#39;w&#39;)
gzfile.write(html)&lt;/pre&gt;

&lt;p&gt;Usamos os módulos urllib e gzip. Entre os recursos fornecidos pelos módulos que já vem com o Python, posso citar o controle de threads e processamento paralelo, a criação de webservices, bibliotecas para sockets, http, ftp, e-mail, a leitura e escrita de XML, JSON, CSV, o acesso a recursos do sistema operacional, matemática e estatística, criptografia, manipulação de arquivos de áudio, testes automatizados, etc.&lt;/p&gt;

&lt;p&gt;Como é fácil escrever código bom e bem documentado, a comunidade Python tem feito um excelente em fornecer módulos para praticamente tudo o que você precisar fazer. Você pode encontrar, no &lt;a href=&#34;https://pypi.python.org/pypi&#34;&gt;Python Package Index&lt;/a&gt;, milhares de módulos prontos para coisas como ler e escrever arquivos Excel, trabalhar com imagens, acessar bancos de dados os mais diversos, trabalhar com automação residencial, enviar SMS, integrar seu software ao Gmail, falar com serviços de VoIP, conectar-se a redes sociais, criar um servidor de e-mails, desenvolver jogos 3D, e uma infinidade de outros recursos.&lt;/p&gt;

&lt;h3 id=&#34;e-tem-mais-8230&#34;&gt;E tem mais&amp;#8230;&lt;/h3&gt;

&lt;p&gt;Se você não programa em Python, espero tê-lo deixado pelo menos um pouquinho curioso. No próximo artigo, vamos falar um pouco mais da linguagem, mostrando algumas características da sintaxe e dos tipos de dados que a tornam tão interessante. Até lá, fique à vontade nos comentários. Sugestões, dúvidas, críticas e opiniões são muito bem vindas e vão me ajudar a preparar os próximos artigos.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>O editor de textos Open Source da Adobe, o Brackets!</title>
      <link>https://tableless.github.io/hugo-public/o-editor-de-textos-open-source-da-adobe-o-brackets/</link>
      <pubDate>Sat, 17 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/o-editor-de-textos-open-source-da-adobe-o-brackets/</guid>
      <description>

&lt;p&gt;Um editor de textos Open Source que vem crescendo com uma grande velocidade, alcançando, e, diria eu, ultrapassando alguns editores de texto já consolidados no mercado, prefiro não citar nomes.&lt;/p&gt;

&lt;h2 id=&#34;principais-recursos&#34;&gt;Principais recursos&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Extract, abra um PSD dentro do editor de textos:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Basicamente essa feature consiste na abertura de um PSD dentro do editor de textos, através do plugin Extract (padrão do Brackets). Mas para que abrir um PSD dentro do editor de textos ? Bem, uma imagem vale mais do que mil palavras:&lt;/p&gt;

&lt;p&gt;Mas, palavras também valem muito:&lt;/p&gt;

&lt;p&gt;Sim, isso é mágico! Podemos perceber no vídeo que quando ele clica em uma layer do PSD e vai para o arquivo CSS digitar, ele recebe opções de autocomplete referente a layer que ele clicou, se ele clicou em uma imagem e começar a digitar “background”, ele vai receber uma sugestão de salvar como imagem a layer selecionada (ele cria a pasta images e salva dentro delas) e já inserir o restante do código automaticamente, que no caso seria “url(caminho/para-imagem.jpg);”.&lt;/p&gt;

&lt;p&gt;Uma das coisas que mais gosto nisso tudo é que quando eu seleciono uma layer de texto, ele me dá a opção de colocar automaticamente o font-family, o font-size, o line-height etc, ele me dá a opção de inserir automaticamente todas as configurações que foram setadas no Photoshop, sem que eu precise ficar alternando entre as janelas do editor e do Photoshop para verificar qual fonte, qual tamanho, qual cor, ele pega tudo automaticamente e disponibiliza em forma de autocomplete. Uma mão na roda!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Live Preview: digite e veja o resultado, sem reload&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ok, isso não é nada de inovador. O Live Preview já existe em outros editores e também existe um ou mais softwares dedicados a fazer isso, mas todos que eu conheço fazem isso da mesma forma, eles dão reload na página. O Brackets não, conforme eu vou editando o código ele vai me dando o resultado do meu código sem dar reload na página, em tempo real, como se eu tivesse editando o código no inspect do browser, isso funciona quando a alteração é feita em um arquivo HTML ou CSS, já em arquivos JS ele dá reload na página. Para quem trabalha com dois monitores isso é do c@$#&amp;amp;%$!&lt;/p&gt;

&lt;p&gt;Porém esse recurso só funciona com o navegador Google Chrome, mas isso é por enquanto, pois eles já estão trabalhando para que isso funcione em outros browsers, inclusive na ultima versão eles já liberaram para a gente poder testar isso, eu ainda não testei, mas em breve conseguirei um tempo para fazer isso e quem sabe em um próximo artigo conto para vocês, junto com outras novidades, já que a evolução é bem rápida.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Split mode: vertical ou horizontal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Divida o seu editor em duas telas, divida na horizontal ou na vertical, eu prefiro ficar com a divisão vertical, nunca consegui usar a divisão de horizontal. Gosto de usar com o html na esquerda e o css na direita.&lt;/p&gt;

&lt;h2 id=&#34;atalhos-do-teclado&#34;&gt;Atalhos do teclado:&lt;/h2&gt;

&lt;p&gt;O Brackets assim como outros editores e softwares tem seus atalhos para agilizar o dia-a-dia de quem trabalha com tais ferramentas. Destaco abaixo algumas que achei interessante.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+Shift+A:&lt;/strong&gt; Abre um input para você digitar uma tag e teclar enter, fazendo isso, ele irá inserir a tag completa com seu fechamento e seus atributos no html. Ex.: Digite link e tecle enter, ele vai retornar &lt;link rel=&amp;#8221;stylesheet&amp;#8221; href=&amp;#8221;&amp;#8221;&gt;. E quando você dá enter o “ponteiro” do mouse vai parar dentro das aspas do atributo href, dai basta você começar a digitar o endereço que ele vai mostrando as opções em forma de codehint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+D:&lt;/strong&gt; Esse atalho de grande utilidade também está presente no Brackets. Serve para duplicar uma linha.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+Shift+D:&lt;/strong&gt; E esse para deletar uma linha.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+E:&lt;/strong&gt; Uma grande novidade do Brackets. Basicamente você pode editar o CSS sem ter que abrir o arquivo .css. Basta ir em um arquivo .html ou .php clicar sobre o elemento que deseja alterar as propriedades e pressionar Ctrl+E para abrir a tela de edição!&lt;/p&gt;

&lt;p&gt;Se tiver uma div com um id ou uma class e você clicar em cima de “div” e usar o atalho, ele vai buscar nas folhas de estilo associadas ao documento (.html ou .php) por um seletor que altere “div”, mas se você clicar sobre o id ou sobre a class e apertar Ctrl+E ele irá buscar por um seletor que atinja aquele id ou aquela class clicada. Se você tiver duas ou mais classes você pode clicar em cima da class que você quer editar e usar o atalho que ele vai fazer a buscar por seletores referentes a class que você clicou. Muito legal, né ?&lt;/p&gt;

&lt;p&gt;Segue uma tela, mostrando o atalho em funcionamento:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png&#34;&gt;&lt;img class=&#34;aligncenter wp-image-46570 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png&#34; alt=&#34;1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g&#34; width=&#34;638&#34; height=&#34;300&#34; srcset=&#34;uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png 638w, uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g-265x125.png 265w, uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g-400x188.png 400w&#34; sizes=&#34;(max-width: 638px) 100vw, 638px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Caso não exista um seletor, você pode criar ele nesse dropdown “New Rule”, ao clicar nele, você vai poder escolher em que arquivo quer criar a regra (caso tenha mais de um);&lt;/li&gt;
&lt;li&gt;Local onde você vai editar a regra e simplesmente dar um Ctrl+S e pronto.&lt;/li&gt;
&lt;li&gt;Resultado da busca que ele fez em todos os arquivos .css associados ao documento atual.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Achou muito bom ? Pois é! Ainda tem mais, se você clicar em uma cor e usar o atalho, ele irá abrir um seletor de cor bem completo, se liga na tela:&lt;/p&gt;

&lt;p&gt;[Um editor de textos Open Source que vem crescendo com uma grande velocidade, alcançando, e, diria eu, ultrapassando alguns editores de texto já consolidados no mercado, prefiro não citar nomes.&lt;/p&gt;

&lt;h2 id=&#34;principais-recursos-1&#34;&gt;Principais recursos&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Extract, abra um PSD dentro do editor de textos:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Basicamente essa feature consiste na abertura de um PSD dentro do editor de textos, através do plugin Extract (padrão do Brackets). Mas para que abrir um PSD dentro do editor de textos ? Bem, uma imagem vale mais do que mil palavras:&lt;/p&gt;

&lt;p&gt;Mas, palavras também valem muito:&lt;/p&gt;

&lt;p&gt;Sim, isso é mágico! Podemos perceber no vídeo que quando ele clica em uma layer do PSD e vai para o arquivo CSS digitar, ele recebe opções de autocomplete referente a layer que ele clicou, se ele clicou em uma imagem e começar a digitar “background”, ele vai receber uma sugestão de salvar como imagem a layer selecionada (ele cria a pasta images e salva dentro delas) e já inserir o restante do código automaticamente, que no caso seria “url(caminho/para-imagem.jpg);”.&lt;/p&gt;

&lt;p&gt;Uma das coisas que mais gosto nisso tudo é que quando eu seleciono uma layer de texto, ele me dá a opção de colocar automaticamente o font-family, o font-size, o line-height etc, ele me dá a opção de inserir automaticamente todas as configurações que foram setadas no Photoshop, sem que eu precise ficar alternando entre as janelas do editor e do Photoshop para verificar qual fonte, qual tamanho, qual cor, ele pega tudo automaticamente e disponibiliza em forma de autocomplete. Uma mão na roda!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Live Preview: digite e veja o resultado, sem reload&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ok, isso não é nada de inovador. O Live Preview já existe em outros editores e também existe um ou mais softwares dedicados a fazer isso, mas todos que eu conheço fazem isso da mesma forma, eles dão reload na página. O Brackets não, conforme eu vou editando o código ele vai me dando o resultado do meu código sem dar reload na página, em tempo real, como se eu tivesse editando o código no inspect do browser, isso funciona quando a alteração é feita em um arquivo HTML ou CSS, já em arquivos JS ele dá reload na página. Para quem trabalha com dois monitores isso é do c@$#&amp;amp;%$!&lt;/p&gt;

&lt;p&gt;Porém esse recurso só funciona com o navegador Google Chrome, mas isso é por enquanto, pois eles já estão trabalhando para que isso funcione em outros browsers, inclusive na ultima versão eles já liberaram para a gente poder testar isso, eu ainda não testei, mas em breve conseguirei um tempo para fazer isso e quem sabe em um próximo artigo conto para vocês, junto com outras novidades, já que a evolução é bem rápida.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Split mode: vertical ou horizontal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Divida o seu editor em duas telas, divida na horizontal ou na vertical, eu prefiro ficar com a divisão vertical, nunca consegui usar a divisão de horizontal. Gosto de usar com o html na esquerda e o css na direita.&lt;/p&gt;

&lt;h2 id=&#34;atalhos-do-teclado-1&#34;&gt;Atalhos do teclado:&lt;/h2&gt;

&lt;p&gt;O Brackets assim como outros editores e softwares tem seus atalhos para agilizar o dia-a-dia de quem trabalha com tais ferramentas. Destaco abaixo algumas que achei interessante.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+Shift+A:&lt;/strong&gt; Abre um input para você digitar uma tag e teclar enter, fazendo isso, ele irá inserir a tag completa com seu fechamento e seus atributos no html. Ex.: Digite link e tecle enter, ele vai retornar &lt;link rel=&amp;#8221;stylesheet&amp;#8221; href=&amp;#8221;&amp;#8221;&gt;. E quando você dá enter o “ponteiro” do mouse vai parar dentro das aspas do atributo href, dai basta você começar a digitar o endereço que ele vai mostrando as opções em forma de codehint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+D:&lt;/strong&gt; Esse atalho de grande utilidade também está presente no Brackets. Serve para duplicar uma linha.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+Shift+D:&lt;/strong&gt; E esse para deletar uma linha.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+E:&lt;/strong&gt; Uma grande novidade do Brackets. Basicamente você pode editar o CSS sem ter que abrir o arquivo .css. Basta ir em um arquivo .html ou .php clicar sobre o elemento que deseja alterar as propriedades e pressionar Ctrl+E para abrir a tela de edição!&lt;/p&gt;

&lt;p&gt;Se tiver uma div com um id ou uma class e você clicar em cima de “div” e usar o atalho, ele vai buscar nas folhas de estilo associadas ao documento (.html ou .php) por um seletor que altere “div”, mas se você clicar sobre o id ou sobre a class e apertar Ctrl+E ele irá buscar por um seletor que atinja aquele id ou aquela class clicada. Se você tiver duas ou mais classes você pode clicar em cima da class que você quer editar e usar o atalho que ele vai fazer a buscar por seletores referentes a class que você clicou. Muito legal, né ?&lt;/p&gt;

&lt;p&gt;Segue uma tela, mostrando o atalho em funcionamento:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png&#34;&gt;&lt;img class=&#34;aligncenter wp-image-46570 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png&#34; alt=&#34;1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g&#34; width=&#34;638&#34; height=&#34;300&#34; srcset=&#34;uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png 638w, uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g-265x125.png 265w, uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g-400x188.png 400w&#34; sizes=&#34;(max-width: 638px) 100vw, 638px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Caso não exista um seletor, você pode criar ele nesse dropdown “New Rule”, ao clicar nele, você vai poder escolher em que arquivo quer criar a regra (caso tenha mais de um);&lt;/li&gt;
&lt;li&gt;Local onde você vai editar a regra e simplesmente dar um Ctrl+S e pronto.&lt;/li&gt;
&lt;li&gt;Resultado da busca que ele fez em todos os arquivos .css associados ao documento atual.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Achou muito bom ? Pois é! Ainda tem mais, se você clicar em uma cor e usar o atalho, ele irá abrir um seletor de cor bem completo, se liga na tela:&lt;/p&gt;

&lt;p&gt;]&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/01/1lhZwadIKR8PR2gXXQrNu8nJCPW_PhW_NhqpHdA.png&#34;&gt;2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Veja a lista completa de atalhos &lt;a href=&#34;https://github.com/adobe/brackets/wiki/Brackets-Shortcuts&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;extensões&#34;&gt;Extensões:&lt;/h2&gt;

&lt;p&gt;Apesar de ser um editor com pouco tempo no mercado já conta com um grande quantidade de plugins para dar aquela incrementada no nosso workflow! Segue alguns deles que eu testei e já estou utilizando:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brackets Git:&lt;/strong&gt; bastante completo, disponibiliza uma interface para você usar o controle de versões mais queridinho de todos. Para aqueles que não gostam de usar o git através de interfaces, tranquilo cara, não precisa me xingar, ele te dá, de fácil acesso, um botão que leva diretamente para o terminal, aberto já na pasta do projeto, sem ter que navegar até o projeto pelo terminal (eu acho isso um saco).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Emmet:&lt;/strong&gt; provavelmente você deve conhecer esse plugin que basicamente disponibiliza abreviações para agilizar o desenvolvimento de HTML e CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Folding:&lt;/strong&gt; esse plugin agiliza a organização do seu código. Ele disponibiliza a função de comprimir um determinado bloco de código em uma linha (e, claro, posteriormente você pode expandir novamente), deixando assim o código mais curto para se navegar entre o arquivo com mais legibilidade. Quem vem do DreamWeaver deve sentir falta desse recurso.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Indent Guide:&lt;/strong&gt; muito bom para facilitar a leitura do código e evitar que você deixe tags HTML abertas sem querer. Ele cria uma linha guia ligando a tag de abertura e a tag de fechamento de determinado elemento, assim você pode verificar se tá tudo indentado certinho e ver se está fechando corretamente.&lt;/p&gt;

&lt;p&gt;Entre outras milhares de extensões e recursos, isso é só um resumo.&lt;/p&gt;

&lt;p&gt;Se você se interessou, você pode fazer o download no &lt;a href=&#34;http://brackets.io/&#34; target=&#34;_blank&#34;&gt;site oficial&lt;/a&gt;, tem versões para Windows, MAC OS X e Linux, funciona muito bem nos três sistemas. Teste, é de graça!&lt;/p&gt;

&lt;p&gt;Se você já usa o Brackets e quer fazer um adendo ou uma correção, por favor, colabore, tenho interesse em saber o que você descobriu sobre ele.&lt;/p&gt;

&lt;p&gt;E se você tem alguma dúvida ou quer mais artigos sobre ele, só deixar também seu comentário.&lt;/p&gt;

&lt;p&gt;Até a próxima!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contribuindo em projetos open source com o github</title>
      <link>https://tableless.github.io/hugo-public/contribuindo-em-projetos-open-source-com-o-github/</link>
      <pubDate>Fri, 21 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/contribuindo-em-projetos-open-source-com-o-github/</guid>
      <description>

&lt;p&gt;Projetos open source são o que há de mais legal no mundo do desenvolvimento quando se quer aprender novas tecnologias e envolver-se em projetos, seja codificando, documentando, testando ou realizando qualquer tipo de atividade que envolve um projeto.&lt;/p&gt;

&lt;p&gt;Uma das principais ferramentas para o envolvimento em projetos open source é o &lt;a href=&#34;http://www.github.com&#34; target=&#34;_blank&#34;&gt;github&lt;/a&gt;. Este artigo explica como utilizar essa ferramenta para envolver-se em projetos, visando realizar contribuições em projetos.&lt;/p&gt;

&lt;h2 id=&#34;primeiros-passos&#34;&gt;Primeiros passos&lt;/h2&gt;

&lt;p&gt;Antes de tudo é necessário conhecer minimamente a ferramenta e o seu fluxo de trabalho, portanto, é recomendada a leitura de dois artigos:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/iniciando-no-git-parte-1/&#34;&gt;http://tableless.com.br/iniciando-no-git-parte-1/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/iniciando-no-git-parte-2/&#34;&gt;http://tableless.com.br/iniciando-no-git-parte-2/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;let-8217-s-go&#34;&gt;Let&amp;#8217;s go&lt;/h2&gt;

&lt;p&gt;O primeiro passo é a criação de uma conta no site do github, assim, basta entrar em &lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt; e preencher o formulário de cadastro.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/06/formulário-de-registro-github.png&#34;&gt;&lt;img class=&#34;size-medium wp-image-37719 aligncenter&#34; alt=&#34;Formulário de cadastro - github&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/06/formulário-de-registro-github-552x310.png&#34; width=&#34;552&#34; height=&#34;310&#34; srcset=&#34;uploads/2013/06/formulário-de-registro-github-552x310.png 552w, uploads/2013/06/formulário-de-registro-github-299x168.png 299w, uploads/2013/06/formulário-de-registro-github.png 677w&#34; sizes=&#34;(max-width: 552px) 100vw, 552px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O segundo passo consiste em baixar a aplicação ‘git’, esta será a responsável por toda a manipulação que realizaremos nos repositórios aos quais desejamos contribuir. Recomendo que seja lido primeiramente o artigo elaborado pelo Diego Eis, na seção ‘Instalando o git’, disponível em &lt;a href=&#34;http://tableless.com.br/iniciando-no-git-parte-1/&#34;&gt;http://tableless.com.br/iniciando-no-git-parte-1/&lt;/a&gt;, ou então, se preferir, o próprio pessoal do github disponibiliza uma série de instruções para instalar e configurar o git, estas estão disponíveis em &lt;a href=&#34;https://help.github.com/articles/set-up-git&#34;&gt;https://help.github.com/articles/set-up-git&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;conceitos-básicos&#34;&gt;Conceitos básicos&lt;/h1&gt;

&lt;p&gt;Para começar a trabalhar com o git de forma colaborativa é necessário conhecer dois conceitos básicos relacionados ao uso da ferramenta. Esses conceitos são o conceito de fork e de pull request.&lt;/p&gt;

&lt;h2 id=&#34;fork&#34;&gt;Fork&lt;/h2&gt;

&lt;p&gt;O fork consiste em realizar a cópia de um repositório de alguém, adicionando esse repositório aos nossos repositórios. Em linhas gerais, nos tornamos os ‘donos’ do repositório o qual estamos realizando o fork (mas o original se mantém intacto).&lt;/p&gt;

&lt;p&gt;O fork é o primeiro passo para colaborar em um projeto. Por exemplo, percebemos que existe um problema em um arquivo nos exemplos para iniciantes disponíveis no tableless (&lt;a href=&#34;http://tableless.com.br/para-iniciantes/&#34;&gt;http://tableless.com.br/para-iniciantes/&lt;/a&gt;) e queremos realizar a correção. Como o projeto está no github, podemos colaborar! Para isso, navegamos até o repositório (&lt;a href=&#34;https://github.com/tableless/iniciantes&#34;&gt;https://github.com/tableless/iniciantes&lt;/a&gt;) e clicamos na opção fork, localizada no canto direito da página.&lt;/p&gt;

&lt;p style=&#34;text-align: center&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/06/opções-do-repositório-github.png&#34;&gt;&lt;img class=&#34;size-full wp-image-37722 aligncenter&#34; alt=&#34;Opções disponíveis no repositório&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/06/opções-do-repositório-github.png&#34; width=&#34;413&#34; height=&#34;56&#34; srcset=&#34;uploads/2013/06/opções-do-repositório-github.png 413w, uploads/2013/06/opções-do-repositório-github-329x44.png 329w&#34; sizes=&#34;(max-width: 413px) 100vw, 413px&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Ao clicar em fork, o repositório em questão é copiado para a nossa base de repositórios e então viramos donos do repositório o qual copiamos, ficando este inclusive disponível na listagem dos nossos repositórios. Notem o símbolo &amp;#8216;Y&amp;#8217; indicando que o repositório foi criado a partir de um fork.&lt;/p&gt;

&lt;p style=&#34;text-align: center&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/06/lista-de-repositórios-atualizada.png&#34;&gt;&lt;img class=&#34;size-full wp-image-37720 aligncenter&#34; alt=&#34;Lista de repositórios atualizada&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/06/lista-de-repositórios-atualizada.png&#34; width=&#34;251&#34; height=&#34;32&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Agora podemos trabalhar no repositório criado normalmente, executar commits e pushs sem problemas, como se fosse um repositório novo que criamos do zero. Quando terminarmos de realizar as modificações e tivermos realizado os commits e push’s necessários podemos solicitar que o dono do repositório integre o que fizemos com o repositório original através de um pull request (explicado a seguir).&lt;/p&gt;

&lt;h2 id=&#34;pull-request&#34;&gt;Pull request&lt;/h2&gt;

&lt;p&gt;O pull request consiste em uma solicitação de integração das nossas modificações com o repositório que realizamos um fork.&lt;/p&gt;

&lt;p&gt;Para realizar um pull request devemos ir até o repositório gerado pela operação de fork (na nossa base de repositórios). Lá, encontraremos um botão chamado ‘pull request’:&lt;/p&gt;

&lt;p style=&#34;text-align: center&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/06/opções-pull-request.png&#34;&gt;&lt;img class=&#34;size-full wp-image-37721 aligncenter&#34; alt=&#34;Opção de pull request&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/06/opções-pull-request.png&#34; width=&#34;497&#34; height=&#34;55&#34; srcset=&#34;uploads/2013/06/opções-pull-request.png 497w, uploads/2013/06/opções-pull-request-329x36.png 329w&#34; sizes=&#34;(max-width: 497px) 100vw, 497px&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Clicando em pull request, podemos escolher a origem e o destino do nosso pull request:&lt;/p&gt;

&lt;p style=&#34;text-align: center&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/06/realizando-pull-request.png&#34;&gt;&lt;img class=&#34;size-medium wp-image-37723 aligncenter&#34; alt=&#34;Origem e destino do pull request&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/06/realizando-pull-request-588x52.png&#34; width=&#34;588&#34; height=&#34;52&#34; srcset=&#34;uploads/2013/06/realizando-pull-request-588x52.png 588w, uploads/2013/06/realizando-pull-request-329x29.png 329w, uploads/2013/06/realizando-pull-request-660x59.png 660w, uploads/2013/06/realizando-pull-request.png 913w&#34; sizes=&#34;(max-width: 588px) 100vw, 588px&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Também podemos escrever um título e comentários sobre o nosso pull request:&lt;/p&gt;

&lt;p style=&#34;text-align: center&#34;&gt;
  &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2013/06/comentários-e-descrição-pull-request.png&#34;&gt;&lt;img class=&#34;size-medium wp-image-37718 aligncenter&#34; alt=&#34;Comentários e descrição do pull request&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2013/06/comentários-e-descrição-pull-request-520x310.png&#34; width=&#34;520&#34; height=&#34;310&#34; srcset=&#34;uploads/2013/06/comentários-e-descrição-pull-request-520x310.png 520w, uploads/2013/06/comentários-e-descrição-pull-request-282x168.png 282w, uploads/2013/06/comentários-e-descrição-pull-request.png 685w&#34; sizes=&#34;(max-width: 520px) 100vw, 520px&#34; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Clicando em ‘Send pull request’, enviamos as nossas modificações para que as mesmas sejam validadas pela comunidade. Isso permite que seja feita uma avaliação sobre o que foi feito. Dessa forma, o dono do repositório poderá integrar as mudanças realizadas ao código do projeto.&lt;/p&gt;

&lt;h1 id=&#34;e-agora-como-posso-contribuir&#34;&gt;E agora, como posso contribuir?&lt;/h1&gt;

&lt;p&gt;Uma vez feitas as configurações necessárias e conhecendo os conceitos de fork e pull request, basta realizarmos as seguintes ações para contribuirmos para um projeto:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Realiza-se um fork do projeto para o qual se quer contribuir.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Clona-se o repositório criado através do fork para o nosso ambiente de trabalho (como explicado em &lt;a href=&#34;http://tableless.com.br/iniciando-no-git-parte-1/&#34;&gt;http://tableless.com.br/iniciando-no-git-parte-1/&lt;/a&gt; na seção ‘Clonando um projeto’).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Realizam-se as modificações /correções / novas implementações desejadas.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Realiza-se o commit de nossas modificações.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Faz-se o push para o nosso repositório (que criamos através de um fork no passo 1).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Nesse exato momento, nosso repositório criado no passo 1 estará a frente do repositório original (o qual fizemos um fork). Agora já estamos aptos a submeter nossas modificações usando o recurso de pull request.&lt;/p&gt;

&lt;p&gt;Assim, basta irmos até o nosso repositório (que criamos fazendo um fork no passo 1) e clicarmos em ‘pull request’. Seleciona-se então o repositório e o branch de destino e o repositório e o branch de origem. Nesse momento, podemos escrever um título para o nosso pull request e também adicionar comentários sobre o que estamos fazendo. Finalizado o preenchimento dos campos, basta clicar em ‘send pull request’.&lt;/p&gt;

&lt;p&gt;A partir de agora, é necessário esperar para ver se a comunidade e os donos do repositório aprovam a mudança realizada. Se a mesma for aprovada, o dono do repositório pode realizar um merge do que fizemos com o projeto em questão, unificando assim o código.&lt;/p&gt;

&lt;h1 id=&#34;vamos-por-a-mão-na-massa&#34;&gt;Vamos por a mão na massa? 🙂&lt;/h1&gt;

&lt;p&gt;A melhor forma de aprender é praticar, dessa forma, criei um repositório chamado ‘learning-to-contribute’, o qual tem a intenção de receber os pull requests de quem quiser aprender a contribuir para projetos open-source antes de tentar fazer isso com projetos ‘reais’.&lt;/p&gt;

&lt;p&gt;Para tal, é só entrar no link &lt;a href=&#34;https://github.com/wmartins/learning-to-contribute&#34;&gt;https://github.com/wmartins/learning-to-contribute&lt;/a&gt; e clicar em fork, a partir daí é só seguir os passos explicados nesse artigo e enviar um pull request para mim.&lt;/p&gt;

&lt;p&gt;Sempre que possível vou aceitar os requests realizados para vocês verem o que foi explicado em ação!&lt;/p&gt;

&lt;p&gt;Mandem seus requests!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>