<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Null Coalesce on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/null-coalesce/index.xml</link>
    <description>Recent content in Null Coalesce on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/null-coalesce/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Novidade PHP 7 – Operador Null Coalesce</title>
      <link>https://tableless.github.io/hugo-public/novidade-php-7-operador-null-coalesce/</link>
      <pubDate>Fri, 19 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/novidade-php-7-operador-null-coalesce/</guid>
      <description>&lt;p&gt;Estou começando a estudar as &lt;em&gt;features&lt;/em&gt; do PHP 7 e paralelamente irei escrever sobre elas. A primeira &lt;em&gt;feature&lt;/em&gt; que vou falar é sobre o operador &lt;strong&gt;Null Coalescing&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Este operador já existia em outras linguagens, como C# e Pearl. Eu achei muito interessante como ele melhora a legibilidade do código na checagem de variáveis.&lt;/p&gt;

&lt;p&gt;A lógica do operador é a seguinte: retornar o primeiro valor que exista e não seja nulo dentre os valores passados. Em alguns casos, para pegar o valor de GET, por exemplo, utilizamos a seguinte sintaxe:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;$valor = (isset($_GET[&#39;id&#39;]))? $_GET[&#39;id&#39;] : 1;
&lt;/pre&gt;

&lt;p&gt;O trecho acima verifica se o índice ‘id’ está setado em GET, e caso esteja, ele seta na variável $valor, caso contrário, é informado o valor 1.&lt;/p&gt;

&lt;p&gt;Já com o operador &lt;em&gt;null coalesce&lt;/em&gt;, este trecho fica muito mais claro e fácil de entender.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;$valor = $_GET[&#39;id&#39;] ?? 1;
&lt;/pre&gt;

&lt;p&gt;O operador &lt;strong&gt;??&lt;/strong&gt; (&lt;em&gt;null coalesce&lt;/em&gt;) ficará responsável por retornar o primeiro valor que existe e não nulo. Então, se caso não seja passado um ‘id’ via GET, o valor 1 será setado em $valor.&lt;/p&gt;

&lt;p&gt;Agora, vamos imaginar que temos o seguinte cenário: precisamos setar um valor na variável $valor, só que este valor pode vir de diversos lugares e há uma ordem a ser seguida de verificação. Como você faria?&lt;/p&gt;

&lt;p&gt;Com o &lt;em&gt;null coalesce&lt;/em&gt; isso torna-se muito simples:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;$valor = $_GET[&#39;id&#39;]  ?? $_POST[&#39;id&#39;] ?? 1;
&lt;/pre&gt;

&lt;p&gt;Primeiro, o operador verifica GET, caso não exista ou seja nulo, ele irá verificar POST. Caso também não exista ou seja nulo, ele irá retornar 1.&lt;/p&gt;

&lt;p&gt;É isso galera. Qualquer dúvida, sugestão ou crítica é só comentar. Regards!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>