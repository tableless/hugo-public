<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Browserify on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/browserify/index.xml</link>
    <description>Recent content in Browserify on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/browserify/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ES2015 – Babel 6 com Browserify e Babelify</title>
      <link>https://tableless.github.io/hugo-public/es2015-babel-6-com-browserify-e-babelify/</link>
      <pubDate>Mon, 23 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/es2015-babel-6-com-browserify-e-babelify/</guid>
      <description>

&lt;p&gt;Vivemos um momento de transição no mundo Javascript com a aprovação do ES2015 ou ES6, porém, este novo padrão ainda não é suportado totalmente por todos os navegadores, para administrar este problema foi criado o Babel, um compiler Javascript, que além de suas muitas funções, nesta versão 6, pode transformar ES2015 em ES5.&lt;/p&gt;

&lt;h2 id=&#34;instalando&#34;&gt;Instalando&lt;/h2&gt;

&lt;p&gt;Para este tutorial, iremos utilizar o &lt;a href=&#34;https://github.com/babel/babelify&#34; target=&#34;_blank&#34;&gt;Babelify&lt;/a&gt;, um módulo &lt;a href=&#34;https://www.npmjs.com/&#34; target=&#34;_blank&#34;&gt;npm&lt;/a&gt; feito para funcionar juntamente com o &lt;a href=&#34;http://browserify.org/&#34; target=&#34;_blank&#34;&gt;Browserify&lt;/a&gt;, outro módulo que empacota todos os seus requires para serem usados no browser.&lt;/p&gt;

&lt;p&gt;Para instalar ambos, é necessário ter instalado em seu computador o &lt;a href=&#34;https://nodejs.org/&#34; target=&#34;_blank&#34;&gt;Node.js&lt;/a&gt;, que juntamente instala o npm (Node Package Manager) ou Gerenciador de Pacotes Node.&lt;/p&gt;

&lt;p&gt;Navegue via terminal até a raiz do seu projeto e digite o comando abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-bsh&#34;&gt;npm install --save-dev browserify babelify babel-preset-es2015
&lt;/pre&gt;

&lt;p&gt;O comando irá instalar o Browserify, Babelify e o plugin es2015 do Babel, responsável por cuidar da conversão de ES2015 para ES5, além de salvá-los na lista de devDependencies do seu &lt;a href=&#34;https://docs.npmjs.com/files/package.json&#34; target=&#34;_blank&#34;&gt;package.json&lt;/a&gt;. Nesta versão do Babel (6) nenhum plugin é instalado por padrão, por isso precisamos instalar ele à parte, você pode encontrar a lista completa de plugins &lt;a href=&#34;http://babeljs.io/docs/plugins/&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;configurando&#34;&gt;Configurando&lt;/h2&gt;

&lt;h3 id=&#34;script&#34;&gt;Script&lt;/h3&gt;

&lt;p&gt;Para configurarmos via script, abra o seu arquivo &lt;a href=&#34;https://docs.npmjs.com/files/package.json&#34; target=&#34;_blank&#34;&gt;package.json&lt;/a&gt;, crie a sessão &lt;a href=&#34;https://docs.npmjs.com/misc/scripts&#34; target=&#34;_blank&#34;&gt;scripts&lt;/a&gt; e nela vamos adicionar o código que irá transformar seu código ES2015 para ES5:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;&#34;build-browserify&#34;: &#34;browserify ./src/meuarquivo.js -t [ babelify --presets [ es2015 ] ] -o ./dist/meunovoarquivo.js&#34;
&lt;/pre&gt;

&lt;p&gt;Explicando um pouco mais sobre o código acima:&lt;/p&gt;

&lt;p&gt;./src/meuarquivo.js &amp;#8211; Este é o local do seu arquivo JS escrito nos padrões ES2015.&lt;/p&gt;

&lt;p&gt;-t [ babelify &amp;#8211;presets [ es2015 ] ] &amp;#8211; A option -t se refere à transform, que utiliza de módulos de transformação terceiros, neste caso o &lt;a href=&#34;https://github.com/babel/babelify&#34; target=&#34;_blank&#34;&gt;Babelify&lt;/a&gt;. Passamos o módulo que iremos utilizar e passamos uma option para o módulo (&amp;#8211;presets), nesta option listamos os &lt;a href=&#34;http://babeljs.io/docs/plugins/&#34; target=&#34;_blank&#34;&gt;plugins&lt;/a&gt; que iremos utilizar do Babel, que será o es2015.&lt;/p&gt;

&lt;p&gt;-o ./dist/meunovoarquivo.js &amp;#8211; A option -o se refere à output, aqui passamos o destino do nosso arquivo, que será gerado após a transformação.&lt;/p&gt;

&lt;h3 id=&#34;grunt&#34;&gt;Grunt&lt;/h3&gt;

&lt;p&gt;Podemos utilizar também o &lt;a href=&#34;http://gruntjs.com/&#34; target=&#34;_blank&#34;&gt;Grunt&lt;/a&gt;, um Task Runner de Javascript, para realizarmos a transformação do arquivo. Para isso é necessário instalarmos mais um módulo npm, o &lt;a href=&#34;https://www.npmjs.com/package/grunt-browserify&#34; target=&#34;_blank&#34;&gt;grunt-browserify&lt;/a&gt; (contando que você já tenha instalado em seu projeto os módulos &lt;a href=&#34;https://www.npmjs.com/package/grunt&#34; target=&#34;_blank&#34;&gt;grunt&lt;/a&gt; e &lt;a href=&#34;https://www.npmjs.com/package/grunt-cli&#34; target=&#34;_blank&#34;&gt;grunt-cli&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Novamente na raiz do seu projeto via terminal, digite o comando abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-bsh&#34;&gt;npm install --save-dev grunt-browserify
&lt;/pre&gt;

&lt;p&gt;Após a instalação, vá em seu arquivo &lt;a href=&#34;http://gruntjs.com/sample-gruntfile&#34; target=&#34;_blank&#34;&gt;Gruntfile.js&lt;/a&gt; e adicione no config:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;browserify: {
    dist: {
        options: {
            &#34;transform&#34;: [ [&#34;babelify&#34;, { &#34;presets&#34;: [&#34;es2015&#34;] }] ]
        },
        files: {
            &#39;./dist/meunovoarquivo.js&#39;: [&#39;./src/meuarquivo.js&#39;]
        }
    }
}
&lt;/pre&gt;

&lt;p&gt;Depois, carregue o módulo e registre uma task:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;grunt.loadNpmTasks(&#39;grunt-browserify&#39;);
grunt.registerTask(&#39;default&#39;, [&#39;browserify&#39;]);
&lt;/pre&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Ainda estamos iniciando essa nova fase de ES2015, porém já podemos perceber que o futuro espera muitas novidades e um crescimento maravilhoso do Javascript.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>