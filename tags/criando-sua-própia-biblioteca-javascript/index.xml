<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Criando Sua Própia Biblioteca Javascript on Tableless</title>
    <link>http://tableless.com.br/tags/criando-sua-pr%C3%B3pia-biblioteca-javascript/index.xml</link>
    <description>Recent content in Criando Sua Própia Biblioteca Javascript on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/criando-sua-pr%C3%B3pia-biblioteca-javascript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Construindo sua própria biblioteca javascript</title>
      <link>http://tableless.com.br/construindo-sua-propria-biblioteca-javascript/</link>
      <pubDate>Mon, 07 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/construindo-sua-propria-biblioteca-javascript/</guid>
      <description>

&lt;p&gt;Pois bem, meu amigo ninja, está na hora de melhorar um pouco mais seus conhecimentos e quem sabe embarcar em uma nova ideia: a criação da sua própria biblioteca javascript!&lt;/p&gt;

&lt;h1 id=&#34;introdução&#34;&gt;Introdução&lt;/h1&gt;

&lt;p&gt;Antes de você pensar: “Ah, mas eu já sei como é. Basta estender o objeto HTMLElement por meio da prototype…”. Digo-lhes que felizmente não é assim. Imagine o peso que seria colocar um novo método em todos os elementos HTML. Impraticável.&lt;/p&gt;

&lt;p&gt;Bem, meu amigo, se você não compreende minhas palavras, segue um exemplo de como podemos anexar um novo método aos elementos HTML por meio do prototype:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;HTMLElement.prototype.esconde = function(){
 this.setAttribute(“style”,”display:none”)
}
&lt;/pre&gt;

&lt;p&gt;Logo poderíamos esconder qualquer elemento HTML através da chamada:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;document.querySelector(“div”).esconde();&lt;/pre&gt;

&lt;p&gt;Então vamos fazer isto da maneira correta, usando um alias ($) para selecionar nossos elementos mais ou menos igual ao jQuery, o resultado final será este:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(“div”).esconde();&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Note que a sintaxe ficará igual a biblioteca jQuery. Veremos como obter este resultado passo-a-passo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;passo-1-8211-a-função-imediata&#34;&gt;Passo 1 &amp;#8211; A função imediata&lt;/h1&gt;

&lt;p&gt;Criaremos uma função imediata, incrivelmente versátil e que tornará a linguagem javascript mais poderosa. Esta função imediata, que veremos aqui, criará um escopo temporário e algumas váriaveis “particulares”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listagem 1 — Começando com uma função imediata&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;(function(){ var blJs= function(arg){ }
})();
&lt;/pre&gt;

&lt;p&gt;Note que criei uma função anônima, cujo o nome é: &lt;strong&gt;blJs&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Este será o nome da nossa biblioteca&lt;/p&gt;

&lt;h1 id=&#34;passo-2-8211-entendendo-a-bljs&#34;&gt;Passo 2 &amp;#8211; Entendendo a blJs&lt;/h1&gt;

&lt;p&gt;Agora que a brincadeira começa a ficar boa. Primeiro iremos programar nossa função anônima (blJs), para que, sempre que ela for chamada, retorne ela mesmo como um construtor, para podermos ter acesso ao tão poderoso “&lt;strong&gt;this&lt;/strong&gt;”:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listagem 2 — A função blJs&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var blJs= function(arg){ 
 if(!(this instanceof blJs)){ 
  return new blJs(arg); 
 }
 this.myArg = arg;
}
&lt;/pre&gt;

&lt;p&gt;Note que verifiquei se o nosso objeto foi declarado como um construtor. Claro que na chamada inicial ele não será. Por isso invocamos novamente nossa função &lt;strong&gt;blJs&lt;/strong&gt;, mas desta vez como um construtor, para podermos utilizar o &amp;#8216;&lt;strong&gt;this&lt;/strong&gt;&amp;#8216;. Observe que salvei o argumento da função blJs no objeto &lt;strong&gt;myArg&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Lembra desta linha de código: $(“div”)…? Isto é o mesmo que: blJs(“div”). Podemos perceber que estamos passando o “&lt;strong&gt;div&lt;/strong&gt;” como parâmetro da nossa função. Logo: &lt;strong&gt;this.myArg = “div”&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;passo-3-8211-estendendo-nossa-biblioteca-inserindo-métodos&#34;&gt;Passo 3 &amp;#8211; Estendendo nossa biblioteca: inserindo métodos☺&lt;/h1&gt;

&lt;p&gt;Se prepare, amigo ninja, pois a mágica funciona justamente nas próximas linhas de códigos a seguir.&lt;/p&gt;

&lt;p&gt;Iremos estender nossa função ( blJs ), por meio da propriedade prototype e fn. Veja a seguir:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;blJs.fn = blJs.prototype = { 
 esconde: function(){ 
  document.querySelector(this.myArg).setAttribute(“style”,”display:none”); 
 }
}
window.blJs= blJs, window.$ = blJs;
&lt;/pre&gt;

&lt;p&gt;Logo definimos que &lt;strong&gt;blJs.fn&lt;/strong&gt; é igual a &lt;strong&gt;blJs.prototype&lt;/strong&gt;, onde declaramos nosso novo método. O método esconde, que seleciona a div por meio de querySelector(this.myArg) e esconde o elemento alvo por meio de um display:none.&lt;/p&gt;

&lt;p&gt;Ao final da nossa função imediata, definimos que window.blJs será igual a nossa função “blJs”, para podermos chamar nossa biblioteca fora do escopo da função imediata. Veja como é simples definir um alias para nossa biblioteca: é só referenciar o window.$ à nossa função blJs.&lt;/p&gt;

&lt;h1 id=&#34;finalizando&#34;&gt;Finalizando&lt;/h1&gt;

&lt;p&gt;Agora é só sorrir e correr para o abraço ☺. Sua biblioteca javascript já está pronta para ser usada. É só utilizar a chamada do inicio:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(“div”).esconde() ou blJs(“div”).esconde()&lt;/pre&gt;

&lt;p&gt;Visualize o código completo no &lt;a title=&#34;clique para visualizar o código completo&#34; href=&#34;https://github.com/clovisdasilvaneto/blJs&#34; target=&#34;_blank&#34;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bem, amigos ninjas, por hoje é só. Caso tenha alguma dúvida, deixem seu comentário.&lt;/p&gt;

&lt;p&gt;Espero que tenham curtido o artigo. Compartilhem e até a próxima!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>