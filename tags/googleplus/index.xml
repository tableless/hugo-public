<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Googleplus on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/googleplus/index.xml</link>
    <description>Recent content in Googleplus on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/googleplus/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Login com a API do GooglePlus no Android.</title>
      <link>https://tableless.github.io/hugo-public/login-com-api-do-googleplus-no-android/</link>
      <pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/login-com-api-do-googleplus-no-android/</guid>
      <description>

&lt;p&gt;Temos uma opção bastante útil hoje em dia no Android, que é usar a sincronização da conta de e-mail do Google.&lt;/p&gt;

&lt;p&gt;Não vou alongar muito a introdução, vamos partir para a codificação e configuração da API.&lt;/p&gt;

&lt;h2 id=&#34;criando-um-novo-projeto-no-androidstudio&#34;&gt;Criando um novo Projeto no AndroidStudio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/1.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52732&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/1.png&#34; alt=&#34;1&#34; width=&#34;472&#34; height=&#34;326&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Digite o &lt;strong&gt;nome&lt;/strong&gt; da aplicação e escolha também um nome do &lt;strong&gt;package&lt;/strong&gt;, vamos precisar para ativar a API do GooglePlus no &lt;strong&gt;Console do Google.&lt;/strong&gt; Continuei a criação e escolha uma &lt;strong&gt;Empty&lt;/strong&gt; &lt;strong&gt;Activity&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;configuração-no-console-do-google-e-ativação-da-api&#34;&gt;Configuração no Console do Google e Ativação da API&lt;/h2&gt;

&lt;p&gt;Tenho que informar que essa é a parte mais chata do tutorial, mas enfim com pouco de paciência e atenção vamos conseguir.&lt;/p&gt;

&lt;p&gt;Acesse o link para configurar &lt;a href=&#34;https://developers.google.com/mobile/add?platform=android&amp;cntapi=signin&amp;cnturl=https:%2F%2Fdevelopers.google.com%2Fidentity%2Fsign-in%2Fandroid%2Fsign-in%3Fconfigured%3Dtrue&amp;cntlbl=Continue%20Adding%20Sign-In&#34; target=&#34;_blank&#34;&gt;Console Configuração&lt;/a&gt;. Você irá ver algo parecido com isso:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/c1.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52724&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/c1.png&#34; alt=&#34;c1&#34; width=&#34;600&#34; height=&#34;337&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Adicione o &lt;strong&gt;nome&lt;/strong&gt; para a sua aplicação (Sugiro que seja o mesmo nome que Adicionou no seu App).&lt;/li&gt;
&lt;li&gt;Adicione o nome do &lt;strong&gt;package&lt;/strong&gt; (Você pode encontrar esse nome no seu &lt;strong&gt;AndroidManisfest.xml&lt;/strong&gt; ou no seu &lt;strong&gt;Gradle app-level&lt;/strong&gt; escrito &lt;strong&gt;applicationId&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;Escolha sua Região.&lt;/li&gt;
&lt;li&gt;Continue (Choose and configure services).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Feito, vai ser redirecionado a uma página e irar visualizar um campo vazio, lá você vai digitar o seu &lt;strong&gt;SHA-1&lt;/strong&gt;. Porém como obter meu SHA-1? Você vai ter que acessar via linha de comando a pasta (&lt;strong&gt;.android&lt;/strong&gt;) normalmente ela fica localizada na raiz  (&lt;strong&gt;C:\Users\NomeUsuario.android&lt;/strong&gt;)  dentro você vai perceber um arquivo (chave chamada &lt;strong&gt;debug.keystore&lt;/strong&gt; ),&lt;strong&gt; &lt;/strong&gt;quando achar digite o seguinte comando na pasta:&lt;/p&gt;

&lt;pre&gt;keytool -list -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/cmd.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52729&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/cmd.png&#34; alt=&#34;cmd&#34; width=&#34;956&#34; height=&#34;537&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Caso você não consiga acesse o link para mais informações &lt;a href=&#34;https://developers.google.com/android/guides/client-auth&#34; target=&#34;_blank&#34;&gt;obter SHA-1&lt;/a&gt;. Agora copie e cole o SHA-1 no Console do Google e você terá algo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/c3.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52730&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/c3.png&#34; alt=&#34;c3&#34; width=&#34;700&#34; height=&#34;361&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora continue (Continue to Generate configuration files). Gere o arquivo, faça o download depois copie e cole na raiz do seu projeto exemplo (C:\Users\Alessandro\AndroidstudioProjects\GoogleSign-In\app).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/Sem-títulooo.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52731&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/Sem-títulooo.png&#34; alt=&#34;Sem títulooo&#34; width=&#34;600&#34; height=&#34;337&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;voltando-para-nosso-projeto-no-androidstudio&#34;&gt;Voltando para nosso Projeto no AndroidStudio&lt;/h2&gt;

&lt;p&gt;Feito as devidas configurações no &lt;strong&gt;Console do Google&lt;/strong&gt;, vamos configurar o Build Gradle o suporte &lt;strong&gt;Play Services&lt;/strong&gt; na nossa aplicação.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Adicione a dependência no &lt;strong&gt;project-level&lt;/strong&gt; build.gradle:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;classpath &#39;com.google.gms:google-services:1.5.0-beta2&#39;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Adicione o plugin e dependência no &lt;strong&gt;app-level&lt;/strong&gt; build.gradle e o Play services Auth:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;apply plugin: &#39;com.google.gms.google-services&#39;&lt;/pre&gt;

&lt;pre&gt;compile &#39;com.google.android.gms:play-services-auth:8.3.0&#39;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/teste.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52733&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/teste.png&#34; alt=&#34;teste&#34; width=&#34;956&#34; height=&#34;538&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;arquivo-de-layout&#34;&gt;Arquivo de Layout&lt;/h2&gt;

&lt;p&gt;No arquivo de layout &lt;strong&gt;activity_main.xml &lt;/strong&gt;adicione:&lt;/p&gt;

&lt;pre class=&#34;lang-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt;
&amp;lt;LinearLayout
    xmlns:android=&#34;http://schemas.android.com/apk/res/android&#34;
    xmlns:tools=&#34;http://schemas.android.com/tools&#34;
    android:layout_width=&#34;match_parent&#34;
    android:layout_height=&#34;match_parent&#34;
    tools:context=&#34;barreto.alessandro.googlesign_in.MainActivity&#34;
    android:orientation=&#34;vertical&#34;&amp;gt;

    &amp;lt;RelativeLayout
        android:padding=&#34;10dp&#34;
        android:background=&#34;#1f737373&#34;
        android:layout_width=&#34;match_parent&#34;
        android:layout_height=&#34;wrap_content&#34;&amp;gt;

        &amp;lt;ImageView
            android:src=&#34;@mipmap/ic_launcher&#34;
            android:id=&#34;@+id/ivUsuario&#34;
            android:layout_width=&#34;100dp&#34;
            android:layout_height=&#34;100dp&#34;
            android:layout_centerHorizontal=&#34;true&#34; /&amp;gt;

        &amp;lt;TextView
            android:layout_marginTop=&#34;8dp&#34;
            android:text=&#34;Android Teste&#34;
            android:layout_centerHorizontal=&#34;true&#34;
            android:textAppearance=&#34;?android:attr/textAppearanceLarge&#34;
            android:layout_below=&#34;@+id/ivUsuario&#34;
            android:id=&#34;@+id/tvNome&#34;
            android:layout_width=&#34;wrap_content&#34;
            android:layout_height=&#34;wrap_content&#34; /&amp;gt;

        &amp;lt;TextView
            android:layout_marginTop=&#34;5dp&#34;
            android:layout_centerHorizontal=&#34;true&#34;
            android:layout_below=&#34;@+id/tvNome&#34;
            android:text=&#34;androidteste@gmail.com&#34;
            android:id=&#34;@+id/tvEmail&#34;
            android:layout_width=&#34;wrap_content&#34;
            android:layout_height=&#34;wrap_content&#34;
            android:textAppearance=&#34;?android:attr/textAppearanceMedium&#34;/&amp;gt;

    &amp;lt;/RelativeLayout&amp;gt;

    &amp;lt;LinearLayout
        android:orientation=&#34;vertical&#34;
        android:layout_marginTop=&#34;16dp&#34;
        android:layout_gravity=&#34;center_horizontal&#34;
        android:padding=&#34;16dp&#34;
        android:layout_width=&#34;match_parent&#34;
        android:layout_height=&#34;wrap_content&#34;&amp;gt;

        &amp;lt;com.google.android.gms.common.SignInButton
            android:id=&#34;@+id/sign_in_button&#34;
            android:layout_width=&#34;match_parent&#34;
            android:layout_height=&#34;wrap_content&#34; /&amp;gt;

        &amp;lt;Button
            android:id=&#34;@+id/btnDesconectar&#34;
            android:layout_marginTop=&#34;10dp&#34;
            android:text=&#34;Desconectar&#34;
            android:layout_width=&#34;match_parent&#34;
            android:layout_height=&#34;wrap_content&#34; /&amp;gt;

        &amp;lt;Button
            android:id=&#34;@+id/btnRevogar&#34;
            android:layout_marginTop=&#34;10dp&#34;
            android:text=&#34;Revogar acesso&#34;
            android:layout_width=&#34;match_parent&#34;
            android:layout_height=&#34;wrap_content&#34; /&amp;gt;

    &amp;lt;/LinearLayout&amp;gt;
&amp;lt;/LinearLayout&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Sem muito comentário sobre o código acima, ele possui:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Um &lt;strong&gt;ImageView&lt;/strong&gt; para imagem do usuário.&lt;/li&gt;
&lt;li&gt;Dois &lt;strong&gt;TextView&lt;/strong&gt; para nome e e-mail.&lt;/li&gt;
&lt;li&gt;Três &lt;strong&gt;Buttons&lt;/strong&gt; sendo que um customizado, vão servir para Login, Desconectar, Revogar o Acesso do usuário&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;a-class-principal&#34;&gt;A Class Principal&lt;/h2&gt;

&lt;p&gt;Agora vamos fazer o vinculo entre o XML e Java API (&lt;strong&gt;bindViews&lt;/strong&gt;). Crie um método chamado &lt;strong&gt;bindViews&lt;/strong&gt; e adicione:&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;/**
     * Metodo para fazer o vinculo entre o xml e java api
     */
    private void bindViews(){
        ivUsuario       = (ImageView)findViewById(R.id.ivUsuario);
        tvNome          = (TextView)findViewById(R.id.tvNome);
        tvEmail         = (TextView)findViewById(R.id.tvEmail);
        btnDesconectar  = (Button)findViewById(R.id.btnDesconectar);
        btnRevogar      = (Button)findViewById(R.id.btnRevogar);
        signInButton    = (SignInButton) findViewById(R.id.sign_in_button);
        // litener de clicks
        signInButton.setOnClickListener(this);
        btnDesconectar.setOnClickListener(this);
        btnRevogar.setOnClickListener(this);
    }
&lt;/pre&gt;

&lt;p&gt;Vamos solicitar da API informações simples de um login como nome, e-mail, foto e id, no momento é o que necessitamos para esse exemplo.&lt;/p&gt;

&lt;p&gt;Temos que utilizar o objeto &lt;strong&gt;GoogleSignOptions &lt;/strong&gt;e passar como parâmetro &lt;strong&gt;GoogleSignOptions.DEFAULT_SIGN_IN&lt;/strong&gt; nele contem a opção &lt;strong&gt;requestEmail()&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestEmail()
                .build();
&lt;/pre&gt;

&lt;p&gt;Agora que já temos configurado nossa solicitação, iremos criar um objeto GoogleApiClient com acesso ao login do Google API e as opções especificadas. Colocando tudo em um método que chamei de obterConfiguracoesPadraoLogin() .&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;/**
     * Metodo para fazer as primeiras requisições da API para login simples
     */
    private void obterConfiguracoesPadraoLogin(){
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestEmail()
                .build();

        mGoogleApiClient = new GoogleApiClient.Builder(this)
                .enableAutoManage(this,this)
                .addApi(Auth.GOOGLE_SIGN_IN_API, gso)
                .build();

    }
&lt;/pre&gt;

&lt;p&gt;Agora a &lt;strong&gt;intenção&lt;/strong&gt; de login usando uma &lt;strong&gt;Intent do Android&lt;/strong&gt; com o método getSignInIntent e passando para o &lt;strong&gt;startActivityForResult&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;/**
     * metodo para inicar o login
     */
    private void signIn() {
        Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);
        startActivityForResult(signInIntent, SIGN_IN);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.sign_in_button:
                signIn();
                break;
            // ...
        }
    }
&lt;/pre&gt;

&lt;p&gt;Apos isso o método &lt;strong&gt;onActivityResult &lt;/strong&gt;será chamado com nossos resultados e para recuperar utilizamos o &lt;strong&gt;getSignInResultFromIntent&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;@Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == SIGN_IN) {
            GoogleSignInResult resultado = Auth.GoogleSignInApi.getSignInResultFromIntent(data);
            if (resultado.isSuccess()){
                GoogleSignInAccount acct = resultado.getSignInAccount();
                obterInfoGoogle(acct);
            }
        }
    }
&lt;/pre&gt;

&lt;p&gt;Depois de recuperar o resultado, você pode verificar se a solicitação  deu certo com o método &lt;strong&gt;isSuccess&lt;/strong&gt; . Se bem-sucedido, você pode chamar o método &lt;strong&gt;getSignInAccount&lt;/strong&gt; para obter um objeto &lt;strong&gt;GoogleSignInAccount&lt;/strong&gt; que contém informações sobre o usuário.&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;private void obterInfoGoogle(GoogleSignInAccount acct){
        String nome = acct.getDisplayName();
        tvNome.setText(nome);
        String email = acct.getEmail();
        tvEmail.setText(email);
        String id = acct.getId();
        Log.i(TAG,&#34;ID do usuário no GooglePlus &#34;+id);
        String urlFoto = acct.getPhotoUrl().toString();
        Picasso.with(MainActivity.this).load(urlFoto).resize(100,100).into(ivUsuario);
    }
&lt;/pre&gt;

&lt;p&gt;Utilizei a lib &lt;a href=&#34;http://square.github.io/picasso/&#34; target=&#34;_blank&#34;&gt;Picasso&lt;/a&gt; para o carregamento eficiente de imagem, adicione no seu &lt;strong&gt;Gradle app-level&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;compile &#39;com.squareup.picasso:picasso:2.5.2&#39;
&lt;/pre&gt;

&lt;p&gt;No &lt;strong&gt;AndroidManifest.xml&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&amp;lt;uses-permission android:name=&#34;android.permission.INTERNET&#34;/&amp;gt;
&lt;/pre&gt;

&lt;p&gt;.Agora segue toda a Class &lt;strong&gt;MainActivity&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-java&#34;&gt;package barreto.alessandro.googlesign_in;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import com.google.android.gms.auth.api.Auth;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.auth.api.signin.GoogleSignInResult;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.SignInButton;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.common.api.Status;
import com.squareup.picasso.Picasso;

public class MainActivity extends AppCompatActivity implements GoogleApiClient.OnConnectionFailedListener, View.OnClickListener {

    private static final String TAG = &#34;TAG&#34;;
    private static final int SIGN_IN = 10;

    private ImageView ivUsuario;
    private TextView tvNome,tvEmail;
    private Button btnDesconectar,btnRevogar;
    private SignInButton signInButton;

    private GoogleApiClient mGoogleApiClient;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        bindViews();
        obterConfiguracoesPadraoLogin();

    }

    /**
     * Metodo para fazer o vinculo entre o xml e java api
     */
    private void bindViews(){
        ivUsuario       = (ImageView)findViewById(R.id.ivUsuario);
        tvNome          = (TextView)findViewById(R.id.tvNome);
        tvEmail         = (TextView)findViewById(R.id.tvEmail);
        btnDesconectar  = (Button)findViewById(R.id.btnDesconectar);
        btnRevogar      = (Button)findViewById(R.id.btnRevogar);
        signInButton    = (SignInButton) findViewById(R.id.sign_in_button);
        // litener de clicks
        signInButton.setOnClickListener(this);
        btnDesconectar.setOnClickListener(this);
        btnRevogar.setOnClickListener(this);
    }

    /**
     * Metodo para fazer as primeiras requisições da API para login simples
     */
    private void obterConfiguracoesPadraoLogin(){
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestEmail()
                .build();

        mGoogleApiClient = new GoogleApiClient.Builder(this)
                .enableAutoManage(this,this)
                .addApi(Auth.GOOGLE_SIGN_IN_API, gso)
                .build();

    }

    /**
     * metodo para inicar o login
     */
    private void signIn() {
        Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);
        startActivityForResult(signInIntent, SIGN_IN);
    }
    

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == SIGN_IN) {
            GoogleSignInResult resultado = Auth.GoogleSignInApi.getSignInResultFromIntent(data);
            if (resultado.isSuccess()){
                GoogleSignInAccount acct = resultado.getSignInAccount();
                obterInfoGoogle(acct);
            }
        }
    }

    private void obterInfoGoogle(GoogleSignInAccount acct){
        String nome = acct.getDisplayName();
        tvNome.setText(nome);
        String email = acct.getEmail();
        tvEmail.setText(email);
        String id = acct.getId();
        Log.i(TAG,&#34;ID do usuário no GooglePlus &#34;+id);
        String urlFoto = acct.getPhotoUrl().toString();
        Picasso.with(MainActivity.this).load(urlFoto).resize(100,100).into(ivUsuario);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.sign_in_button:
                signIn();
                break;
            case R.id.btnDesconectar:
                break;
            case R.id.btnRevogar:
                break;
        }
    }

    @Override
    public void onConnectionFailed(ConnectionResult connectionResult) {
        Log.e(TAG,&#34;onConnectionFailed &#34;+connectionResult.getErrorMessage());
    }

}
&lt;/pre&gt;

&lt;p&gt;Falta ainda fazer o &lt;strong&gt;desconectar&lt;/strong&gt; e &lt;strong&gt;revogar&lt;/strong&gt; acesso, estou deixando para próxima parte, até lá.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>