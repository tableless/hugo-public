<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programadores on Tableless</title>
    <link>http://tableless.com.br/tags/programadores/index.xml</link>
    <description>Recent content in Programadores on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/programadores/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Por que Desenvolvedores/Programadores usam Twitter?</title>
      <link>http://tableless.com.br/por-que-desenvolvedoresprogramadores-usam-twitter/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/por-que-desenvolvedoresprogramadores-usam-twitter/</guid>
      <description>

&lt;h3 id=&#34;graf-graf-h3&#34;&gt;{.graf.graf&amp;ndash;h3}&lt;/h3&gt;

&lt;p class=&#34;graf graf--p graf--hasDropCapModel graf--hasDropCap&#34;&gt;
  &lt;span class=&#34;graf-dropCap&#34;&gt;N&lt;/span&gt;os últimos 4 meses a comunidade &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;https://twitter.com/javabahia&#34; target=&#34;_blank&#34;&gt;Java Bahia&lt;/a&gt; me fez andar por varias universidades/faculdades e em todas elas perguntamos (não andei sozinho por aí) durante as palestras quem tinha costume de usar o Twitter. Infelizmente não tive o insight de fazer uma estatística disso, mas deu para notar que poucos desenvolvedores/programadores possuem o costume de frequentar a rede social.
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  Muito provavelmente essa galera passou pela mesma experiência que eu tive nas minhas duas primeiras tentativas. Acredito que você assim como eu, criou uma conta no Twitter seguindo o tutorial padrão que lá no finalzinho te faz aquela pergunta marota pedindo autorização para que ele possa selecionar pessoas que você vai acabar seguindo com base na sua lista de e-mail.
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  Se você tá começando na área ou tem pouco contato com desenvolvedores por meio da internet, será mesmo que você conhece pessoas interessantes na área que vão lhe trazer novidades no lugar daquelas piadinhas que conseguimos visualizar internet a fora?
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  Essa é uma pergunta que você tem que si responder. Mas pela experiência e conversas que tive acredito que não, aí chegamos na segunda resposta mais falada nesses 4 meses — “Já tentei usar o Twitter, não consegui ver coisa útil nele e larguei de mão”.
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  Infelizmente muita gente está por fora dos benefícios que conseguimos em nossas carreiras por simplesmente usar um pouco do Twitter no nosso dia a dia. E com esse post espero conseguir te guiar a dar os primeiros passos.
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Por que Desenvolvedores/Programadores usam Twitter?&lt;/strong&gt;
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  Essa é uma pergunta que na minha visão tem uma resposta muito simples. Usamos o Twitter para nos conectar com gente que até nunca vimos na vida e que possuem conhecimento de alguma tecnologia que gostamos, assim passamos a trocar feedbacks de projetos e ficamos por dentro do que está valendo a pena olhar no momento. Só de seguir as pessoas que possuem influência na sua área de estudo isso já lhe faz poupar um tempo absurdo pulando assuntos irrelevantes.
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  Mas a parte mais legal do Twitter é que você consegue se sentir dentro de um grupo quando aquele brodinho que parece inalcançável te responde uma dúvida, que muitas vezes na sua cabeça é tão boba, daí você não quer perguntar e fica impedido de ir adiante porque você não fez a maldita pergunta. Mas de uma maneira você vai lá e faz a pergunta, passa um tempo a pessoa te responde de um jeito que você consegue entender e se não entender, não precisa ficar acanhado basta perguntar de novo!
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  Muitas vezes lanço perguntas sem uma direção específica somente com algumas #hashtags e quando menos espero &lt;em class=&#34;markup--em markup--p-em&#34;&gt;BOOM! &lt;/em&gt;alguém me responde. Imediatamente começo a trocar algumas ideias e questionamentos com essa pessoa, pronto criei mais um network com alguém que sei lá… está no Japão.
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  Tenho usado o Twitter desde 2013 e agora mais do que nunca estou buscando criar conexões com as pessoas para saber como elas “codam”, que tipo de projetos elas curtem e com o que elas andam mexendo. Para que assim eu possa ter ideias e vislumbrar novidades para me atualizar.
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Mas e aí… Quem eu posso começar seguindo?&lt;/strong&gt;
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  Tenho muitas indicações para dar e infelizmente não tenho como falar um pouco sobre cada um, tenham um pouco de curiosidade e visitem os perfis dessas pessoas e analisam o que elas publicam. Lembrando que a ordem aqui não significa nada, eu só tinha que começar de alguma maneira
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Povão do Front-end:&lt;/strong&gt;&lt;br /&gt; Maria Clara — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @olarclara&#34; href=&#34;http://twitter.com/olarclara&#34; target=&#34;_blank&#34;&gt;@olarclara&lt;/a&gt;&lt;br /&gt; Beto Muniz — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @obetomuniz&#34; href=&#34;http://twitter.com/obetomuniz&#34; target=&#34;_blank&#34;&gt;@obetomuniz&lt;/a&gt;&lt;br /&gt; Wilson Mendes — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @willmendesneto&#34; href=&#34;http://twitter.com/willmendesneto&#34; target=&#34;_blank&#34;&gt;@willmendesneto&lt;/a&gt;&lt;br /&gt; Felipe Fialho — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @LFeh&#34; href=&#34;http://twitter.com/LFeh&#34; target=&#34;_blank&#34;&gt;@LFeh&lt;/a&gt;&lt;br /&gt; Joselito Junior — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @joselitojunior1&#34; href=&#34;http://twitter.com/joselitojunior1&#34; target=&#34;_blank&#34;&gt;@joselitojunior1&lt;/a&gt;&lt;br /&gt; Willian Justen — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @Willian_justen&#34; href=&#34;http://twitter.com/Willian_justen&#34; target=&#34;_blank&#34;&gt;@Willian_justen&lt;/a&gt;&lt;br /&gt; Felipe Nascimento — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @felipenmoura&#34; href=&#34;http://twitter.com/felipenmoura&#34; target=&#34;_blank&#34;&gt;@felipenmoura&lt;/a&gt;&lt;br /&gt; Elvis Detona — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @elvisdetona&#34; href=&#34;http://twitter.com/elvisdetona&#34; target=&#34;_blank&#34;&gt;@elvisdetona&lt;/a&gt;&lt;br /&gt; Diego Eis — &lt;a href=&#34;https://twitter.com/diegoeis&#34;&gt;@diegoeis&lt;/a&gt;&lt;br /&gt; Fábio Vedovelli &amp;#8211; &lt;strong&gt;&lt;a class=&#34;ProfileHeaderCard-screennameLink u-linkComplex js-nav&#34; href=&#34;https://twitter.com/vedovelli&#34;&gt;@&lt;span class=&#34;u-linkComplex-target&#34;&gt;vedovelli&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Povão do Android:&lt;/strong&gt;&lt;br /&gt; Marcello Galhardo — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @MarcelloGalhard&#34; href=&#34;http://twitter.com/MarcelloGalhard&#34; target=&#34;_blank&#34;&gt;@MarcelloGalhard&lt;/a&gt;&lt;br /&gt; Paula Rosa — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @_paulacr&#34; href=&#34;http://twitter.com/_paulacr&#34; target=&#34;_blank&#34;&gt;@_paulacr&lt;/a&gt;&lt;br /&gt; Juliana Chahoud — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @jchahoud&#34; href=&#34;http://twitter.com/jchahoud&#34; target=&#34;_blank&#34;&gt;@jchahoud&lt;/a&gt;&lt;br /&gt; Nelson Glauber — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @nglauber&#34; href=&#34;http://twitter.com/nglauber&#34; target=&#34;_blank&#34;&gt;@nglauber&lt;/a&gt;&lt;br /&gt; Walmyr Carvalho — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @walmyrcarvalho&#34; href=&#34;http://twitter.com/walmyrcarvalho&#34; target=&#34;_blank&#34;&gt;@walmyrcarvalho&lt;/a&gt;&lt;br /&gt; Marcelo Quinta — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @mrquinta&#34; href=&#34;http://twitter.com/mrquinta&#34; target=&#34;_blank&#34;&gt;@mrquinta&lt;/a&gt;&lt;br /&gt; Rodrigo Sicarelli — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @rsicarelli&#34; href=&#34;http://twitter.com/rsicarelli&#34; target=&#34;_blank&#34;&gt;@rsicarelli&lt;/a&gt;&lt;br /&gt; Ubiratan Soares — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @ubiratanfsoares&#34; href=&#34;http://twitter.com/ubiratanfsoares&#34; target=&#34;_blank&#34;&gt;@ubiratanfsoares&lt;/a&gt;&lt;br /&gt; Eduardo Cucharro — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @eduardocucharro&#34; href=&#34;http://twitter.com/eduardocucharro&#34; target=&#34;_blank&#34;&gt;@eduardocucharro&lt;/a&gt;&lt;br /&gt; Lucio Maciel — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @luciofm&#34; href=&#34;http://twitter.com/luciofm&#34; target=&#34;_blank&#34;&gt;@luciofm&lt;/a&gt;&lt;br /&gt; Neto Marin — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @netomarin&#34; href=&#34;http://twitter.com/netomarin&#34; target=&#34;_blank&#34;&gt;@netomarin&lt;/a&gt;
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Povão do Java:&lt;/strong&gt;&lt;br /&gt; Daniel Cunha — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @dvlc_&#34; href=&#34;http://twitter.com/dvlc_&#34; target=&#34;_blank&#34;&gt;@dvlc_&lt;/a&gt;&lt;br /&gt; Eder Ignatowicz — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @ederign&#34; href=&#34;http://twitter.com/ederign&#34; target=&#34;_blank&#34;&gt;@ederign&lt;/a&gt;&lt;br /&gt; Otávio Santana — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @otaviojava&#34; href=&#34;http://twitter.com/otaviojava&#34; target=&#34;_blank&#34;&gt;@otaviojava&lt;/a&gt;&lt;br /&gt; Leonardo Rocha Lima — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @leomrlima&#34; href=&#34;http://twitter.com/leomrlima&#34; target=&#34;_blank&#34;&gt;@leomrlima&lt;/a&gt;&lt;br /&gt; Java — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @java&#34; href=&#34;http://twitter.com/java&#34; target=&#34;_blank&#34;&gt;@java&lt;/a&gt;&lt;br /&gt; Vinicius Senger — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @vsenger&#34; href=&#34;http://twitter.com/vsenger&#34; target=&#34;_blank&#34;&gt;@vsenger&lt;/a&gt;&lt;br /&gt; Fabio Velloso — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @fabiovelloso&#34; href=&#34;http://twitter.com/fabiovelloso&#34; target=&#34;_blank&#34;&gt;@fabiovelloso&lt;/a&gt;&lt;br /&gt; Michael Nascimento — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @mr__m&#34; href=&#34;http://twitter.com/mr__m&#34; target=&#34;_blank&#34;&gt;@mr__m&lt;/a&gt;&lt;br /&gt; Michel Graciano — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @mgraciano&#34; href=&#34;http://twitter.com/mgraciano&#34; target=&#34;_blank&#34;&gt;@mgraciano&lt;/a&gt;&lt;br /&gt; Edson Yanaga — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @yanaga&#34; href=&#34;http://twitter.com/yanaga&#34; target=&#34;_blank&#34;&gt;@yanaga&lt;/a&gt;&lt;br /&gt; Marcelo de Castro — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @mcastroinfo&#34; href=&#34;http://twitter.com/mcastroinfo&#34; target=&#34;_blank&#34;&gt;@mcastroinfo&lt;/a&gt;&lt;br /&gt; Yara M H Senger — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @yarasenger&#34; href=&#34;http://twitter.com/yarasenger&#34; target=&#34;_blank&#34;&gt;@yarasenger&lt;/a&gt;&lt;br /&gt; Mauricio Leal — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @maltron&#34; href=&#34;http://twitter.com/maltron&#34; target=&#34;_blank&#34;&gt;@maltron&lt;/a&gt;&lt;br /&gt; Loiane Groner — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @loiane&#34; href=&#34;http://twitter.com/loiane&#34; target=&#34;_blank&#34;&gt;@loiane&lt;/a&gt;&lt;br /&gt; Bruno Souza — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @brjavaman&#34; href=&#34;http://twitter.com/brjavaman&#34; target=&#34;_blank&#34;&gt;@brjavaman&lt;/a&gt;&lt;br /&gt; Bruno Borges — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @brunoborges&#34; href=&#34;http://twitter.com/brunoborges&#34; target=&#34;_blank&#34;&gt;@brunoborges&lt;/a&gt;&lt;br /&gt; Rafael Ponte — &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;Twitter profile for @rponte&#34; href=&#34;http://twitter.com/rponte&#34; target=&#34;_blank&#34;&gt;@rponte&lt;/a&gt;
&lt;/p&gt;

&lt;p class=&#34;graf graf--p&#34;&gt;
  Então até pra escrever esse post fui solicitando ajuda no Twitter e aí nasceu essa lista bem recheada para vocês. E como dica final tentem criar lista no Twitter para organizar melhor os assuntos (vou montar um outro texto explicando como tirar proveito disso) e também uma ferramenta muito bacana chamada &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;https://tweetdeck.twitter.com/&#34; target=&#34;_blank&#34;&gt;Tweetdeck &lt;/a&gt;que tem me ajudado bastante.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Por que Python?</title>
      <link>http://tableless.com.br/por-que-python/</link>
      <pubDate>Tue, 29 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/por-que-python/</guid>
      <description>

&lt;p&gt;Eu sou apaixonado por &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;. Muito. Daquele tipo que fala de Python sempre que pode. E uma pergunta que sempre me fazem é: por quê? Vou tentar fazer uma lista dos motivos mais relevantes:&lt;/p&gt;

&lt;h2 id=&#34;1-é-muito-bom-escrever-código-python&#34;&gt;1. É muito bom escrever código Python&lt;/h2&gt;

&lt;p&gt;Geralmente, quando alguém cria uma linguagem de programação, tem em vista um objetivo. Por exemplo, Lisp foi escrita para programação funcional. Java foi escrita para que o mesmo código pudesse rodar em qualquer lugar. PHP foi criada para construir páginas web. E Python foi criada para ser produtiva e fácil de escrever.&lt;/p&gt;

&lt;p&gt;Um programador experiente aprende a sintaxe do Python em algumas poucas horas. O jeito de escrever faz sentido.&lt;/p&gt;

&lt;p&gt;Veja, por exemplo, essa função para calcular um número de &lt;a href=&#34;https://pt.wikipedia.org/wiki/Sequ%C3%AAncia_de_Fibonacci&#34;&gt;Fibonacci&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;def fib(n):
    if n&amp;lt;3:
        return n
    return fib(n-1) + fib(n-2)&lt;/pre&gt;

&lt;p&gt;Note como a sintaxe é simples. Mesmo nas decisões de design que são &amp;#8220;pouco ortodoxas&amp;#8221;, como os blocos baseados na indentação, a decisão foi tomada pensando em produtividade. O modelo de blocos do Python faz com que você precise digitar menos. Além disso, é impossível escrever código não indentado em Python.&lt;/p&gt;

&lt;p&gt;Veja nesse outro exemplo, a função de Fibonacci em uma versão &lt;a href=&#34;https://en.wikipedia.org/wiki/Memoization&#34;&gt;memoized&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;memo = {0:0, 1:1}

def fib(n):
    if not n in memo:
        memo[n] = fib(n-1) + fib(n-2)
    return memo[n]&lt;/pre&gt;

&lt;p&gt;Reparou como é simples? Ao trabalhar com Python, a linguagem nunca está entre você e seu problema. Você pode gastar seu tempo com a lógica de programação, que é o que realmente importa, e não com especificidades da linguagem que você está usando.&lt;/p&gt;

&lt;h2 id=&#34;2-organizar-um-projeto-python-é-muito-fácil&#34;&gt;2. Organizar um projeto Python é muito fácil&lt;/h2&gt;

&lt;p&gt;Vamos colocar nossa função de Fibonacci e salvar num arquivo, fib.py, incluindo um pouquinho de documentação. Chamamos cada arquivo Python de módulo:&lt;/p&gt;

&lt;pre&gt;&#39;&#39;&#39;Fibonacci function, memoized for better performance.&#39;&#39;&#39;
memo = {0:0, 1:1}

def fib(n):
    &#39;&#39;&#39;Returns the nth Fibonacci number.&#39;&#39;&#39;
    if not n in memo:
        memo[n] = fib(n-1) + fib(n-2)
    return memo[n]&lt;/pre&gt;

&lt;p&gt;Agora vamos importar esse arquivo no console do Python, e veja o que dá para fazer:&lt;/p&gt;

&lt;div style=&#34;width: 490px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;img class=&#34;&#34; src=&#34;http://elcio.com.br/wp-content/uploads/2015/09/fib.gif&#34; alt=&#34;&#34; width=&#34;480&#34; height=&#34;267&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Executando fib.py e ajuda.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;É como PHPDoc ou Javadoc, mas completamente nativo, e com uma sintaxe muito simples. E tudo o que você precisa para ler a documentação é o próprio Python.&lt;/p&gt;

&lt;h2 id=&#34;3-o-ecossistema-python-é-fantástico&#34;&gt;3. O ecossistema Python é fantástico&lt;/h2&gt;

&lt;p&gt;Começando pela própria linguagem, que vem com uma excelente &lt;a href=&#34;https://docs.python.org/3/library/&#34;&gt;biblioteca padrão&lt;/a&gt;. Essa biblioteca é bastante extensa e possui excelentes módulos, bem documentados e fáceis de usar. Por exemplo, digamos que você queira baixar o código fonte desse artigo e gerar um arquivo GZip com ele, veja como é fácil:&lt;/p&gt;

&lt;pre&gt;import urllib
import gzip
html=urllib.urlopen(&#39;http://tableless.com.br/por-que-python/&#39;).read()
gzfile=gzip.open(&#39;por-que-python.html.gz&#39;,&#39;w&#39;)
gzfile.write(html)&lt;/pre&gt;

&lt;p&gt;Usamos os módulos urllib e gzip. Entre os recursos fornecidos pelos módulos que já vem com o Python, posso citar o controle de threads e processamento paralelo, a criação de webservices, bibliotecas para sockets, http, ftp, e-mail, a leitura e escrita de XML, JSON, CSV, o acesso a recursos do sistema operacional, matemática e estatística, criptografia, manipulação de arquivos de áudio, testes automatizados, etc.&lt;/p&gt;

&lt;p&gt;Como é fácil escrever código bom e bem documentado, a comunidade Python tem feito um excelente em fornecer módulos para praticamente tudo o que você precisar fazer. Você pode encontrar, no &lt;a href=&#34;https://pypi.python.org/pypi&#34;&gt;Python Package Index&lt;/a&gt;, milhares de módulos prontos para coisas como ler e escrever arquivos Excel, trabalhar com imagens, acessar bancos de dados os mais diversos, trabalhar com automação residencial, enviar SMS, integrar seu software ao Gmail, falar com serviços de VoIP, conectar-se a redes sociais, criar um servidor de e-mails, desenvolver jogos 3D, e uma infinidade de outros recursos.&lt;/p&gt;

&lt;h3 id=&#34;e-tem-mais-8230&#34;&gt;E tem mais&amp;#8230;&lt;/h3&gt;

&lt;p&gt;Se você não programa em Python, espero tê-lo deixado pelo menos um pouquinho curioso. No próximo artigo, vamos falar um pouco mais da linguagem, mostrando algumas características da sintaxe e dos tipos de dados que a tornam tão interessante. Até lá, fique à vontade nos comentários. Sugestões, dúvidas, críticas e opiniões são muito bem vindas e vão me ajudar a preparar os próximos artigos.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Front-end, UX e Back-end</title>
      <link>http://tableless.com.br/front-end-ux-e-back-end/</link>
      <pubDate>Wed, 16 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/front-end-ux-e-back-end/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“One of the reasons for poor design execution is that UX teams need to own more than just design. We need to own front-end development.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Frase sensacional &lt;a href=&#34;http://www.uxmatters.com/mt/archives/2012/04/great-user-experiences-require-great-front-end-development.php&#34;&gt;em um artigo do site UXMatters&lt;/a&gt;, um dos melhores sites sobre experiência do usuário e arquitetura de informação que tenho nas minhas leituras regulares.&lt;/p&gt;

&lt;p&gt;Os designers para web precisam muito aprender a linguagem com que seus layouts serão codificados. Na minha opinião é estranho um designer para web não entender HTML e CSS, pelo menos o básico, o suficiente. Mesmo que ele não vá digitar código todos os dias. Conhecer essas linguagens é tão necessário quanto Photoshop ou Illustrator.&lt;/p&gt;

&lt;p&gt;Os melhores desenvolvedores front-end, que prezam pelo layout bonito e bem afinado pensam e falam usando linguagens de design e UX. Claro que HTML, CSS e Javascript são linguagens técnicas, mas elas estão muito mais perto do lado de Design e experiência do usuário do que programação pesada de back. O Javascript, talvez, é o que se aproxima da área mais hardcore do back-end, mas isso só quando falamos em consumir APIs, usar JS no lado do servidor e etc. Javascript é o tempo inteiro usado também para tratar experiências e comportamentos para o usuário.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;O front-end faz a integração do projeto, fazendo as amarrações necessárias para que o sistema seja funcional e usável.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A maioria dos programadores back-end não conhecem front-end por não enxergarem isso como uma forma de melhorar suas skills. Normalmente alguns programadores não gostam de front por acharem muito próximo de UX. Coisa designer, sabe? Enquanto isso o pessoal da área de UX não se aproxima de front-end por acharem que é coisa de programador. É simples, mas é uma verdade. Ambos acabam atrofiando as possibilidades de melhorarem muito seus conhecimentos dentro das suas áreas.&lt;/p&gt;

&lt;p&gt;Os desenvolvedores front-end trabalham no meio desses dois profissionais completamente diferentes e muitos se arriscam em um dos dois lados. Há os front-ends designers, que sabem o que é bonito e feio, entendem de grid, alinhamento, cores e etc. Podem não arriscar a criar um layout, mas entendem do assunto. Há também o front-end programador, que talvez até conheça uma linguagem back-end e manja o básico de algumas outras. Não faz um sistema complexo todos os dias, mas é um contribuir fervoroso nos projetos em que trabalha. Ambos são especialistas em front-end, com focos totalmente diferentes. Outro ponto que os destacam é que eles não ignoram as skills de cada área, mesmo não fazendo parte do seu core. E nem podem deixar que isso aconteça, eles perderiam muitos pontos de experiência.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Quando os times de UX entendem a importância do front-end, eles entregam não apenas representações visuais dos projetos, mas também experiências que realmente valham a pena.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Os front-ends trabalham muito melhor suas skills quando eles entendem em qual dos lados eles tem mais facilidade. Se você é front-end e acha design interessante, busque mais conhecimento nessa área. Se puder, sente-se ao lado dos designers na sua equipe. Se você acha que programação server-side é sua praia, sente-se ao lado dos programadores. Entenda como eles fazem a integração da linguagem server-side no código client-side gerado por você. Estude maneiras de como o client pode consumir informação do back.&lt;/p&gt;

&lt;p&gt;Apenas assim front-ends irão produzir códigos mais robustos e escaláveis, pensando na experiência do usuário e em formas de consumir e reutilizar informações mais eficientemente.&lt;/p&gt;

&lt;p&gt;Quando os times de UX entendem a importância do front-end, eles entregam não apenas representações visuais dos projetos, mas podem entregar experiências que realmente valham a pena. Isso é ultrapassar aquela barreira do “é possível ou não é possível de fazer”. Isso diminui custos. Todo o resultado é mais correto. Um UX que entrega um protótipo funcional em HTML e CSS vale seu peso em ouro. É importante por que esse tipo de atitude concretiza ideias enquanto o projeto ainda é imaturo.&lt;/p&gt;

&lt;p&gt;Entender sobre os processos é importante para qualquer um dentro da equipe. Entender as limitações e saber quais os impactos que cada decisão, por mínima que seja, desencadeia no projeto é algo que só se conhece quando você procura saber mais do que acontece ao seu redor. E eu não estou dizendo para você ser um profissional canivete, longe disso. Mas trabalhar em equipe envolve muito mais do que conversas nos dailys da vida.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Animando com jQuery</title>
      <link>http://tableless.com.br/animando-com-jquery/</link>
      <pubDate>Mon, 05 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/animando-com-jquery/</guid>
      <description>

&lt;p&gt;Um dos recursos mais procurados pelos designers (e programadores) em bibliotecas é animação. Existem bibliotecas e mais bibliotecas que fazem animações de diversas formas. Em prototype por exemplo, deve-se anexar a biblioteca scriptaculous para que seja possivel realizar animações. Já em mootools existem várias formas de resolver o mesmo problema, sendo assim um pouco mais complicado de lembrar de tudo isso. Por jQuery ser uma biblioteca simples com somente o funcional, o trabalho se torna mais simples, logo mais rápido de desenvolver as soluções.&lt;/p&gt;

&lt;p&gt;Em jQuery &amp;#8211; como já vimos aqui e aqui, temos animações que podemos usar nos projetos: slideUp, slideDown, slideToggle, fadeIn, fadeOut e fadeTo, além de show e hide. São efeitos simples que você pode utilizar em qualquer lugar, e suas nomenclaturas também sao simples a ponto de serem intuitivas na hora do serviço de fato.&lt;/p&gt;

&lt;h3 id=&#34;slide&#34;&gt;Slide&lt;/h3&gt;

&lt;p&gt;Que tal experimentar fazer uma área onde o usuário clica em um botão de mostrar/ocultar menu? Com apenas duas tags, a jQuery consegue executar essa tarefa.&lt;/p&gt;

&lt;p&gt;Tomemos a seguinte marcação:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;html&amp;#8221;]&lt;/p&gt;

&lt;div&gt;
  &lt;!--
Aqui vem a área, que você pode manipulá-la como quiser,
experimente um formulário de login ou um menu inline ou uma
bela imagem.
--&gt;
&lt;/div&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Apenas com HTML e CSS fazemos a &lt;a href=&#34;http://dgmike.com.br/tableless/jquery/caixa-de-ferramentas-simples.html&#34;&gt;versão que funcionará sem javascript&lt;/a&gt;. Pense sempre dessa forma, assim você não corre o risco de fazer javascript obstrusivo. É por isso que não foi colocado o link onde o usuário clicará para aparecer e sumir com a área. Veja como ficará este &lt;a href=&#34;http://dgmike.com.br/tableless/jquery/caixa-de-ferramentas.html&#34;&gt;exemplo estilizado&lt;/a&gt; com apenas com algumas linhas de código de CSS.&lt;/p&gt;

&lt;p&gt;Feita a primeira e a segunda camada (conteúdo feito no HTML e apresentação feita no CSS) partimos para a interação, que quem comanda é a jQuery. Primeiro, precisamos adicionar o link onde o usuário poderá clicar para fazer a área sumir e reaparecer, faremos isso dinamicamente com a ajuda do nosso Framework preferido. Com o método after (depois em inglês) adicionamos facilmente o nosso link.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;javascript]$(&amp;#8216;#area&amp;#8217;).after(&amp;#8216;&lt;a href=&#34;#area&#34; title=&#34;Mostrar/Esconder Área&#34;&gt;Mostrar/Esconder Área&lt;/a&gt;{#mostra-esconde-area}&amp;#8216;)[/cc]&lt;/p&gt;

&lt;p&gt;Após isto, só precisamos adicionar a animação ao nosso botão, fazendo ele animar a área desejada. Com o comando toggle, nem precisamos nos preocupar com o estado no qual a área se encontra, afinal, ele vai aparecer e desaparecer conforme o necessário.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;javascript]$(&amp;#8216;#mostra-esconde-area&amp;#8217;).click(function(){&lt;/p&gt;

&lt;p&gt;$(&amp;#8216;#area&amp;#8217;).slideToggle()&lt;/p&gt;

&lt;p&gt;})[/cc]&lt;/p&gt;

&lt;p&gt;Não esqueça que estes comandos devem estar dentro da função de inicialização da jQuery. Então o script final ficará assim.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;javascript]$(function(){&lt;/p&gt;

&lt;p&gt;$(&amp;#8216;#area&amp;#8217;).after(&amp;#8216;&lt;a href=&#34;#area&#34; title=&#34;Mostrar/Esconder Área&#34;&gt;Mostrar/Esconder Área&lt;/a&gt;{#mostra-esconde-area}&amp;#8216;)&lt;/p&gt;

&lt;p&gt;$(&amp;#8216;#mostra-esconde-area&amp;#8217;).click(function(){ $(&amp;#8216;#area&amp;#8217;).slideToggle() })&lt;/p&gt;

&lt;p&gt;})[/cc]&lt;/p&gt;

&lt;p&gt;Ao todo para fazermos a animação e a interação, não gastamos mais que cinco linhas de código javascript. Veja no &lt;a href=&#34;http://dgmike.com.br/tableless/jquery/caixa-de-ferramentas-animado.html&#34;&gt;exemplo final&lt;/a&gt; (&lt;a href=&#34;http://dgmike.com.br/tableless/jquery/caixa-de-ferramentas-simples-animado.html&#34;&gt;ou com pouco CSS&lt;/a&gt;), como esse tipo de interação pode dar um gás na sua aplicação.&lt;/p&gt;

&lt;h3 id=&#34;opacidade&#34;&gt;Opacidade&lt;/h3&gt;

&lt;p&gt;Uma outra propriedade que a jQuery trabalha e que pode resultar em ótimas melhorias na usabilidade do usuário é a propriedade &lt;em&gt;opacity&lt;/em&gt;. Ou seja, a transparencia dos elementos, e graças aos métodos &lt;em&gt;fadeIn&lt;/em&gt;, &lt;em&gt;fadeOut&lt;/em&gt; podemos fazer um &lt;em&gt;tooltip&lt;/em&gt; com poucas linhas de código.&lt;/p&gt;

&lt;p&gt;Primeiro, escrevemos o HTML necessário. Sempre pensando de forma não obstrusiva, ou seja, se o navegador do usuário não tiver javascript habilitado, ele não deve ter sua navegabilidade atrapalhada.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;html&amp;#8221;]&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;google.com&#34; title=&#34;Encontre o que você procura&#34;&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;tableless.com.br&#34; title=&#34;Webstandards com Feijão e Farofa&#34;&gt;Tableless&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Com algumas linhas de CSS aplicamos uma &lt;a href=&#34;http://dgmike.com.br/tableless/jquery/tooltip-simples.html&#34;&gt;interface interessante&lt;/a&gt; para nosso menu. Para a construção usamos o atributo &lt;em&gt;title&lt;/em&gt;, assim o usuário que não estiver com o javascript habilitado poderá navegar no site vendo todos os recursos que ele teria se o javascript estivesse habilitado.&lt;/p&gt;

&lt;p&gt;A primeira tarefa da jQuery é criar um span onde vamos colocar o mesmo texto do atributo. Não podemos manipular o atributo title, ele fica com o padrão do sistema operacional do usuário, já um span podemos implementar o que nossa imaginação mandar, até mesmo criar balões colocando backgrounds, se necessário.&lt;/p&gt;

&lt;p&gt;Para fazer isso, precisamos usar o método &lt;em&gt;each&lt;/em&gt;, que percorre todos os elementos chamados aplicando a cada um uma diretiva específica.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;javascript]$(&amp;#8216;#menu li a&amp;#8217;).each(function(){&lt;/p&gt;

&lt;p&gt;$(this).append(&amp;#8216;&lt;span&gt;&amp;#8216;+this.title+&amp;#8217;&lt;/span&gt;&amp;#8216;)&lt;/p&gt;

&lt;p&gt;this.title=&amp;#8221;&lt;/p&gt;

&lt;p&gt;})[/cc]&lt;/p&gt;

&lt;p&gt;No método each nós passamos uma função, nessa função, a palavra-chave &amp;#8220;this&amp;#8221; indica o item que está sendo tratado pelo each (um de cada vez), ou seja, cada link específico. A cada link &lt;em&gt;appendamos&lt;/em&gt;, ou seja, adicionamos ao fim de seu conteúdo o valor de seu atributo title dentro de uma tag span. Depois, limpamos o valor de seu title. Assim, removemos o tooltip original, deixando apenas o que será aplicado nos próximos passos.&lt;/p&gt;

&lt;p&gt;Agora, a mágica. Adicionamos aos links a ação de hover que irá exibir seus filhos (o span que acabamos de adicionar) e ao mesmo tempo adicionamos a ação de sumir quando ele sair, fazemos isso com o próprio hover. Poderiamos fazer isso com os métodos &lt;em&gt;show&lt;/em&gt;, &lt;em&gt;hide&lt;/em&gt; ou mesmo o &lt;em&gt;toggle&lt;/em&gt;, mas para ficar mais interessante para o usuário, resolvi usar &lt;em&gt;fadeIn&lt;/em&gt; e &lt;em&gt;fadeOut&lt;/em&gt;. Veja que mesmo assim, o código não fica tão impossível de entender.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;javascript]$(&amp;#8216;#menu li a&amp;#8217;).hover(function() {&lt;/p&gt;

&lt;p&gt;$(this).children().show()&lt;/p&gt;

&lt;p&gt;},function(){&lt;/p&gt;

&lt;p&gt;$(this).children().hide()&lt;/p&gt;

&lt;p&gt;})[/cc]&lt;/p&gt;

&lt;p&gt;Enfim, aplicamos estes dois trechos de script ao nosso &amp;#8220;inicializator-jquery&amp;#8221; que fará com que esse script seja executado apenas após carregar a página, ou seja, quando todos os elementos já tiverem sido carregados. Também adicionamos ao CSS algumas linhas de código para deixar o tooltip amigável. &lt;a href=&#34;http://dgmike.com.br/tableless/jquery/tooltip-simples-animado.html&#34; title=&#34;Tooltip simples animado com JQuery&#34;&gt;Veja como é muito&lt;/a&gt; interessante esse efeito, agora com o nosso novo tooltip.&lt;/p&gt;

&lt;p&gt;A jQuery manipula muito bem efeitos simples (mas que resolvem a esmagadora quantidade de problemas) que muitas bibliotecas insistem em deixar confuso demais ou complexo demais por adicionar mais e mais configurações para cada efeito. Por isso jQuery é uma ferramenta muito poderosa.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>