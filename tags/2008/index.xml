<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2008 on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/2008/index.xml</link>
    <description>Recent content in 2008 on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/2008/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Web Standards Project – WaSP</title>
      <link>https://tableless.github.io/hugo-public/web-standards-project-wasp/</link>
      <pubDate>Mon, 23 Jun 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/web-standards-project-wasp/</guid>
      <description>&lt;p&gt;No início, fabricantes de browsers, W3C e desenvolvedores começaram quase que ao mesmo tempo.&lt;/p&gt;

&lt;p&gt;Neste começo não brotaram desenvolvedores web do chão. Essa profissão não existia. Os primeiros que trabalharam nessa área, migraram de profissões parecidas: quem era programador desktop naquele tempo, começou a programar para web. Quem era designer de impresso, começou a fazer design para web.&lt;/p&gt;

&lt;h3 id=&#34;os-desenvolvedores&#34;&gt;Os desenvolvedores&lt;/h3&gt;

&lt;p&gt;Os programadores estavam se acostumando com a maneira nova de criar sistemas e sites para web. E designers estavam se habiatuando às diferenças que existiam no design para web e impresso. Haviam muitas coisas para se acostumar, começando pelos erros de compatibilidade.&lt;/p&gt;

&lt;h3 id=&#34;o-w3c&#34;&gt;O W3C&lt;/h3&gt;

&lt;p&gt;O W3C foi criado para regulamentar e criar padrões para a publicação de conteúdo na web. Quando ele começou, não haviam documentos completos, com listas e regulamentos explicando cada um dos padrões. Esses documentos eram rascunhos, muitas vezes incompletos e com apenas uma descrição do que seria aquele padrão.&lt;/p&gt;

&lt;p&gt;Com a falta de documentação completa e detalhada, os browsers aproveitavam para criar códigos proprietários, dificultando o desenvolvimento.&lt;/p&gt;

&lt;h3 id=&#34;os-browsers&#34;&gt;Os browsers&lt;/h3&gt;

&lt;p&gt;O Netscape (antigo Mosaic), era o browser com a maior base de usuários. Para ser sincero, não haviam muitos browsers concorrentes naquela época. A Microsoft, aproveitou o poder que ganhara com a distribuição do Windows com a IBM, e criou o Internet Explorer para concorrer com o Netscape. Foi aí que a Guerra dos Browsers começou.&lt;/p&gt;

&lt;p&gt;A guerra por usuários somada com a falta de padrões resultou em códigos proprietários. Conquiste os desenvolvedores e conquistará a web.&lt;/p&gt;

&lt;p&gt;Todo esse tumulto no começo da web fez com que o desenvolvimento de sites se tornasse mais complicado, confuso. Em conseqüência a mão de obra se tornava mais cara e o custo de desenvolvimento também. Era caro comprar um site e era mais caro ainda manter esse site.&lt;/p&gt;

&lt;p&gt;Era preciso fazer duas versões de sites: uma para Internet Explorer e outra para Netscape. Qualquer atualização ou alteração de layout, era necessário modificar as duas versões. Isso significava trabalho em dobro, logo o custo aumentava.&lt;/p&gt;

&lt;h3 id=&#34;a-cavalaria-8211-wasp&#34;&gt;A Cavalaria &amp;#8211; WaSP&lt;/h3&gt;

&lt;p&gt;Um grupo de desenvolvedores, na maioria designers, formaram um movimento chamado Web Standards Project – WaSP. Um grupo cuja missão seria divulgar os Padrões Web como guias para o desenvolvimento web. O projeto era encabeçado por profissionais como &lt;a href=&#34;http://zeldman.com&#34;&gt;Jeffrey Zeldman&lt;/a&gt;, inconformados com o caminho que o desenvolvimento web estava caminhando. E eles tinham toda a razão.&lt;/p&gt;

&lt;p&gt;A primeira grande coisa que fizeram foi convencer a Netscape a doar para a comunidade o engine do Netscape. Um grande feito que se não fosse alcançado, hoje não teríamos a fundação Mozilla com seu browser Firefox.&lt;/p&gt;

&lt;p&gt;A segunda missão foi fazer com que os fabricantes de browsers seguissem as idéias e recomendações do W3C.&lt;/p&gt;

&lt;p&gt;O diferencial naquele tempo dos browsers era apenas o número de usuários. Não haviam add-ons, interface interligada com serviços sociais, leitores de feeds, nem nada do gênero. Seguir o W3C era dizer adeus ao código proprietário e abrir oportunidades para os desenvolvedores a criarem sites para o browser concorrente.&lt;/p&gt;

&lt;p&gt;Outro objetivo do grupo era fazer com que os desenvolvedores também adotassem os Padrões do W3C. E esse objetivo está sendo cumprido até hoje.&lt;/p&gt;

&lt;p&gt;A resitência de hoje, não é nada com a resistência encontrada há 5 anos atrás. Os desenvolvedores estão mais aberto às novas propostas e os novos profissionais já começam aprendendo da maneira correta.&lt;/p&gt;

&lt;p&gt;Hoje as coisas estão bem mais fáceis. Browsers e desenvolvedores lutam a favor dos padrões. W3C e entusiastas estudam novos padrões e pedem sugestão dos profissionais.&lt;/p&gt;

&lt;p&gt;Com o amadurecimento das partes, o conhecimento se renova e desenvolver para web fica mais divertido.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Charsets e Encodes – Tabelas de caracteres</title>
      <link>https://tableless.github.io/hugo-public/charsets-e-encodes-tabelas-de-caracteres/</link>
      <pubDate>Mon, 31 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/charsets-e-encodes-tabelas-de-caracteres/</guid>
      <description>&lt;p&gt;Quando você escreve um documento HTML (ou qualquer outra linguagem baseada em SGML) é necessário que especifiquemos o Charset utilizado. O &lt;strong&gt;Charset é o conjunto de caracteres utilizados para escrever o documento&lt;/strong&gt;. Um jogo de caracteres consiste em ter 1) repertório com caracteres e 2) uma posição de referência para cada um dos caracteres no repertório. Cada caractere é identificado e localizado por este código de posição. Por exemplo, na tabela ASCII, as posições 65, 66 e 67 se referem às letras A, B e C respectivamente. Abaixo, veja a tabela de caracteres ASCII:&lt;/p&gt;

&lt;table summary=&#34;tabela ASCII&#34; width=&#34;100%&#34;&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul&gt;
        &lt;li&gt;
          00 &amp;#8211; (NUL)
        &lt;/li&gt;
        &lt;li&gt;
          01 &amp;#8211; (SOH)
        &lt;/li&gt;
        &lt;li&gt;
          02 &amp;#8211; (STX)
        &lt;/li&gt;
        &lt;li&gt;
          03 &amp;#8211; (ETX)
        &lt;/li&gt;
        &lt;li&gt;
          04 &amp;#8211; (EOT)
        &lt;/li&gt;
        &lt;li&gt;
          05 &amp;#8211; (ENQ)
        &lt;/li&gt;
        &lt;li&gt;
          06 &amp;#8211; (ACK)
        &lt;/li&gt;
        &lt;li&gt;
          07 &amp;#8211; (BEL)
        &lt;/li&gt;
        &lt;li&gt;
          08 &amp;#8211; (BS)
        &lt;/li&gt;
        &lt;li&gt;
          09 &amp;#8211; (HT)
        &lt;/li&gt;
        &lt;li&gt;
          10 &amp;#8211; (LF)
        &lt;/li&gt;
        &lt;li&gt;
          11 &amp;#8211; (VT)
        &lt;/li&gt;
        &lt;li&gt;
          12 &amp;#8211; (FF)
        &lt;/li&gt;
        &lt;li&gt;
          13 &amp;#8211; (CR)
        &lt;/li&gt;
        &lt;li&gt;
          14 &amp;#8211; (SO)
        &lt;/li&gt;
        &lt;li&gt;
          15 &amp;#8211; (SI)
        &lt;/li&gt;
        &lt;li&gt;
          16 &amp;#8211; (DLE)
        &lt;/li&gt;
        &lt;li&gt;
          17 &amp;#8211; (D1)
        &lt;/li&gt;
        &lt;li&gt;
          18 &amp;#8211; (D2)
        &lt;/li&gt;
        &lt;li&gt;
          19 &amp;#8211; (D3)
        &lt;/li&gt;
        &lt;li&gt;
          20 &amp;#8211; (D4)
        &lt;/li&gt;
        &lt;li&gt;
          21 &amp;#8211; (NAK)
        &lt;/li&gt;
        &lt;li&gt;
          22 &amp;#8211; (SYN)
        &lt;/li&gt;
        &lt;li&gt;
          23 &amp;#8211; (ETB)
        &lt;/li&gt;
        &lt;li&gt;
          24 &amp;#8211; (CAN)
        &lt;/li&gt;
        &lt;li&gt;
          25 &amp;#8211; (EM)
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;ul&gt;
        &lt;li&gt;
          26 &amp;#8211; (SUB)
        &lt;/li&gt;
        &lt;li&gt;
          27 &amp;#8211; (ESC)
        &lt;/li&gt;
        &lt;li&gt;
          28 &amp;#8211; (FS)
        &lt;/li&gt;
        &lt;li&gt;
          29 &amp;#8211; (GS)
        &lt;/li&gt;
        &lt;li&gt;
          30 &amp;#8211; (RS)
        &lt;/li&gt;
        &lt;li&gt;
          31 &amp;#8211; (US)
        &lt;/li&gt;
        &lt;li&gt;
          32 &amp;#8211; (Espaço)
        &lt;/li&gt;
        &lt;li&gt;
          33 &amp;#8211; !
        &lt;/li&gt;
        &lt;li&gt;
          34 &amp;#8211; &amp;#8220;
        &lt;/li&gt;
        &lt;li&gt;
          35 &amp;#8211; #
        &lt;/li&gt;
        &lt;li&gt;
          36 &amp;#8211; $
        &lt;/li&gt;
        &lt;li&gt;
          37 &amp;#8211; %
        &lt;/li&gt;
        &lt;li&gt;
          38 &amp;#8211; &amp;
        &lt;/li&gt;
        &lt;li&gt;
          39 &amp;#8211; &amp;#8216;
        &lt;/li&gt;
        &lt;li&gt;
          40 &amp;#8211; (
        &lt;/li&gt;
        &lt;li&gt;
          41 &amp;#8211; )
        &lt;/li&gt;
        &lt;li&gt;
          42 &amp;#8211; *
        &lt;/li&gt;
        &lt;li&gt;
          43 &amp;#8211; +
        &lt;/li&gt;
        &lt;li&gt;
          44 &amp;#8211; ,
        &lt;/li&gt;
        &lt;li&gt;
          45 &amp;#8211; &amp;#8211;
        &lt;/li&gt;
        &lt;li&gt;
          46 &amp;#8211; .
        &lt;/li&gt;
        &lt;li&gt;
          47 &amp;#8211; /
        &lt;/li&gt;
        &lt;li&gt;
          48 &amp;#8211; 0
        &lt;/li&gt;
        &lt;li&gt;
          49 &amp;#8211; 1
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;ul&gt;
        &lt;li&gt;
          50 &amp;#8211; 2
        &lt;/li&gt;
        &lt;li&gt;
          51 &amp;#8211; 3
        &lt;/li&gt;
        &lt;li&gt;
          52 &amp;#8211; 4
        &lt;/li&gt;
        &lt;li&gt;
          53 &amp;#8211; 5
        &lt;/li&gt;
        &lt;li&gt;
          54 &amp;#8211; 6
        &lt;/li&gt;
        &lt;li&gt;
          55 &amp;#8211; 7
        &lt;/li&gt;
        &lt;li&gt;
          56 &amp;#8211; 8
        &lt;/li&gt;
        &lt;li&gt;
          57 &amp;#8211; 9
        &lt;/li&gt;
        &lt;li&gt;
          58 &amp;#8211; :
        &lt;/li&gt;
        &lt;li&gt;
          59 &amp;#8211; ;
        &lt;/li&gt;
        &lt;li&gt;
          60 &amp;#8211; &lt;
        &lt;/li&gt;
        &lt;li&gt;
          61 &amp;#8211; =
        &lt;/li&gt;
        &lt;li&gt;
          62 &amp;#8211; &amp;gt/
        &lt;/li&gt;
        &lt;li&gt;
          63 &amp;#8211; ?
        &lt;/li&gt;
        &lt;li&gt;
          64 &amp;#8211; @
        &lt;/li&gt;
        &lt;li&gt;
          65 &amp;#8211; A
        &lt;/li&gt;
        &lt;li&gt;
          66 &amp;#8211; B
        &lt;/li&gt;
        &lt;li&gt;
          67 &amp;#8211; C
        &lt;/li&gt;
        &lt;li&gt;
          68 &amp;#8211; D
        &lt;/li&gt;
        &lt;li&gt;
          69 &amp;#8211; E
        &lt;/li&gt;
        &lt;li&gt;
          70 &amp;#8211; F
        &lt;/li&gt;
        &lt;li&gt;
          71 &amp;#8211; G
        &lt;/li&gt;
        &lt;li&gt;
          72 &amp;#8211; H
        &lt;/li&gt;
        &lt;li&gt;
          73 &amp;#8211; I
        &lt;/li&gt;
        &lt;li&gt;
          74 &amp;#8211; J
        &lt;/li&gt;
        &lt;li&gt;
          75 &amp;#8211; K
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;ul&gt;
        &lt;li&gt;
          76 &amp;#8211; L
        &lt;/li&gt;
        &lt;li&gt;
          77 &amp;#8211; M
        &lt;/li&gt;
        &lt;li&gt;
          78 &amp;#8211; N
        &lt;/li&gt;
        &lt;li&gt;
          79 &amp;#8211; O
        &lt;/li&gt;
        &lt;li&gt;
          80 &amp;#8211; P
        &lt;/li&gt;
        &lt;li&gt;
          81 &amp;#8211; Q
        &lt;/li&gt;
        &lt;li&gt;
          82 &amp;#8211; R
        &lt;/li&gt;
        &lt;li&gt;
          83 &amp;#8211; S
        &lt;/li&gt;
        &lt;li&gt;
          84 &amp;#8211; T
        &lt;/li&gt;
        &lt;li&gt;
          85 &amp;#8211; U
        &lt;/li&gt;
        &lt;li&gt;
          86 &amp;#8211; V
        &lt;/li&gt;
        &lt;li&gt;
          87 &amp;#8211; W
        &lt;/li&gt;
        &lt;li&gt;
          88 &amp;#8211; X
        &lt;/li&gt;
        &lt;li&gt;
          89 &amp;#8211; Y
        &lt;/li&gt;
        &lt;li&gt;
          90 &amp;#8211; Z
        &lt;/li&gt;
        &lt;li&gt;
          91 &amp;#8211; [
        &lt;/li&gt;
        &lt;li&gt;
          92 &amp;#8211; \
        &lt;/li&gt;
        &lt;li&gt;
          93 &amp;#8211; ]
        &lt;/li&gt;
        &lt;li&gt;
          94 &amp;#8211; ^
        &lt;/li&gt;
        &lt;li&gt;
          95 &amp;#8211; _
        &lt;/li&gt;
        &lt;li&gt;
          96 &amp;#8211; `
        &lt;/li&gt;
        &lt;li&gt;
          97 &amp;#8211; a
        &lt;/li&gt;
        &lt;li&gt;
          98 &amp;#8211; b
        &lt;/li&gt;
        &lt;li&gt;
          99 &amp;#8211; c
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;ul&gt;
        &lt;li&gt;
          100 &amp;#8211; d
        &lt;/li&gt;
        &lt;li&gt;
          101 &amp;#8211; e
        &lt;/li&gt;
        &lt;li&gt;
          102 &amp;#8211; f
        &lt;/li&gt;
        &lt;li&gt;
          103 &amp;#8211; g
        &lt;/li&gt;
        &lt;li&gt;
          104 &amp;#8211; h
        &lt;/li&gt;
        &lt;li&gt;
          105 &amp;#8211; i
        &lt;/li&gt;
        &lt;li&gt;
          106 &amp;#8211; j
        &lt;/li&gt;
        &lt;li&gt;
          107 &amp;#8211; k
        &lt;/li&gt;
        &lt;li&gt;
          108 &amp;#8211; l
        &lt;/li&gt;
        &lt;li&gt;
          109 &amp;#8211; m
        &lt;/li&gt;
        &lt;li&gt;
          110 &amp;#8211; n
        &lt;/li&gt;
        &lt;li&gt;
          111 &amp;#8211; o
        &lt;/li&gt;
        &lt;li&gt;
          112 &amp;#8211; p
        &lt;/li&gt;
        &lt;li&gt;
          113 &amp;#8211; q
        &lt;/li&gt;
        &lt;li&gt;
          114 &amp;#8211; r
        &lt;/li&gt;
        &lt;li&gt;
          115 &amp;#8211; s
        &lt;/li&gt;
        &lt;li&gt;
          116 &amp;#8211; t
        &lt;/li&gt;
        &lt;li&gt;
          117 &amp;#8211; u
        &lt;/li&gt;
        &lt;li&gt;
          118 &amp;#8211; v
        &lt;/li&gt;
        &lt;li&gt;
          119 &amp;#8211; w
        &lt;/li&gt;
        &lt;li&gt;
          120 &amp;#8211; x
        &lt;/li&gt;
        &lt;li&gt;
          121 &amp;#8211; y
        &lt;/li&gt;
        &lt;li&gt;
          122 &amp;#8211; z
        &lt;/li&gt;
        &lt;li&gt;
          123 &amp;#8211; {
        &lt;/li&gt;
        &lt;li&gt;
          124 &amp;#8211; |
        &lt;/li&gt;
        &lt;li&gt;
          125 &amp;#8211; }
        &lt;/li&gt;
        &lt;li&gt;
          126 &amp;#8211; ~
        &lt;/li&gt;
        &lt;li&gt;
          127 &amp;#8211; (DELETE)
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;A tabela de caracteres ASCII (Código Padrão Americano para Intercâmbio de Informações) foi a primeira tabela utilizada em larga escala. O computador foi desenvolvido nos Estados Unidos. No vocabulário americano, não existem acentos, além disso, era um código de 7 bits, e não 8. Ou seja, ao invés de 256 posições, a tabela ASCII tinha apenas 128 posições &amp;#8211; como você sabe, tudo nos computadores são um grupo de zeros (0) e uns (1) chamados de bits. Esses zeros e uns formam grupos de oito em oito que chamados de bytes e representam um número entre 0 e 255. Como as imagens, áudio, vídeos, programas e tudo o que temos nos sistemas de hoje, os caracteres que aparecem na sua tela são grupos de zeros e uns.&lt;/p&gt;

&lt;p&gt;O computador se popularizou e a necessidade de utilizar acentos e outros tipos de caracteres (Chineses, por exemplo) tornou-se um problema.&lt;/p&gt;

&lt;p&gt;Hoje, a maioria das tabelas utilizadas foram criadas suprindo as necessidades de um idioma específico, por este motivo elas se tornaram muito limitadas.&lt;/p&gt;

&lt;p&gt;Por exemplo, se você estiver escrevendo um documento utilizando a tabela de caracteres chinesa, você não poderá escrever algo em hebraico neste documento.&lt;/p&gt;

&lt;p&gt;Por conta disso muitos problemas podem surgir, por exemplo, seria impossível criar um curso online de hebraico para chineses. Será também um problema se você tiver que fazer um site ou sistema com suporte a diversos idiomas. Por exemplo, um sistema de blog projetado para uso internacional. Isso por que a posição dos caracteres varia de tabela para tabela. Dois codificadores podem usar o mesmo número para dois caracteres diferentes ou usar números diferentes para o mesmo caractere.&lt;/p&gt;

&lt;h3 id=&#34;a-tabela-de-caractéres-unicode-8211-utf-8&#34;&gt;A tabela de caractéres Unicode &amp;#8211; UTF-8&lt;/h3&gt;

&lt;p&gt;A Web é acessada por pessoas do mundo inteiro. Ter um sistema ou um site que limite o acesso e pessoas de outros países é algo que vai contra a tradição e os ideais da internet. Por isso, foi criado uma tabela que suprisse essas necessidades, essa tabela se chama Unicode. A tabela Unicode suporta algo em torno de um milhão de caracteres. Ao invés de cada região ter sua tabela de caracteres, é muito mais sensato haver uma tabela padrão com o maior número de caracteres possível. Atualmente a maioria dos sistemas e browsers utilizados por usuários suportam plenamente Unicode. Por isso, fazendo seu sistema Unicode você garante que ele será bem visualizado aqui, na China ou em qualquer outro lugar do mundo.&lt;/p&gt;

&lt;p&gt;O que o Unicode faz é fornecer um único número para cada caractere, não importa a plataforma, nem o programa, nem a língua.&lt;/p&gt;

&lt;h3 id=&#34;antes-de-começar-você-precisa-saber&#34;&gt;Antes de começar, você precisa saber&lt;/h3&gt;

&lt;p&gt;Há algumas recomendações que você precisa saber antes de começar a mudar seu site para Unicode.&lt;/p&gt;

&lt;p&gt;Existem três principais maneiras para você indicar a seu site qual tabela de caractere você está utilizando:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Cabeçalho HTTP Content-type&lt;/strong&gt; &amp;#8211; Desta forma é necessário configurar o servidor web, algo que não é fácil nem para qualquer um. Dependendo de onde você trabalha, se for em um lugar grande, com vários sites neste mesmo servidor, pode ser a melhor maneira porque você terá que fazer isso uma vez. Caso for vários projetos com servidores diferentes isso pode ser uma dor de cabeça.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Metatag Content-type&lt;/strong&gt; &amp;#8211; Colocando este código no HEAD de seu documento, ele avisará para o browser localmente e na hora da renderização do site qual Charset ele deve utilizar para exibir os caracteres. Esta é uma ótima escolha caso você não tenha acesso aos servidores. Certamente é a maneira mais simples de ser utilizada. ``Quando você escreve um documento HTML (ou qualquer outra linguagem baseada em SGML) é necessário que especifiquemos o Charset utilizado. O &lt;strong&gt;Charset é o conjunto de caracteres utilizados para escrever o documento&lt;/strong&gt;. Um jogo de caracteres consiste em ter 1) repertório com caracteres e 2) uma posição de referência para cada um dos caracteres no repertório. Cada caractere é identificado e localizado por este código de posição. Por exemplo, na tabela ASCII, as posições 65, 66 e 67 se referem às letras A, B e C respectivamente.HUGOMORE42 Abaixo, veja a tabela de caracteres ASCII:&lt;/li&gt;
&lt;/ol&gt;

&lt;table summary=&#34;tabela ASCII&#34; width=&#34;100%&#34;&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul&gt;
        &lt;li&gt;
          00 &amp;#8211; (NUL)
        &lt;/li&gt;
        &lt;li&gt;
          01 &amp;#8211; (SOH)
        &lt;/li&gt;
        &lt;li&gt;
          02 &amp;#8211; (STX)
        &lt;/li&gt;
        &lt;li&gt;
          03 &amp;#8211; (ETX)
        &lt;/li&gt;
        &lt;li&gt;
          04 &amp;#8211; (EOT)
        &lt;/li&gt;
        &lt;li&gt;
          05 &amp;#8211; (ENQ)
        &lt;/li&gt;
        &lt;li&gt;
          06 &amp;#8211; (ACK)
        &lt;/li&gt;
        &lt;li&gt;
          07 &amp;#8211; (BEL)
        &lt;/li&gt;
        &lt;li&gt;
          08 &amp;#8211; (BS)
        &lt;/li&gt;
        &lt;li&gt;
          09 &amp;#8211; (HT)
        &lt;/li&gt;
        &lt;li&gt;
          10 &amp;#8211; (LF)
        &lt;/li&gt;
        &lt;li&gt;
          11 &amp;#8211; (VT)
        &lt;/li&gt;
        &lt;li&gt;
          12 &amp;#8211; (FF)
        &lt;/li&gt;
        &lt;li&gt;
          13 &amp;#8211; (CR)
        &lt;/li&gt;
        &lt;li&gt;
          14 &amp;#8211; (SO)
        &lt;/li&gt;
        &lt;li&gt;
          15 &amp;#8211; (SI)
        &lt;/li&gt;
        &lt;li&gt;
          16 &amp;#8211; (DLE)
        &lt;/li&gt;
        &lt;li&gt;
          17 &amp;#8211; (D1)
        &lt;/li&gt;
        &lt;li&gt;
          18 &amp;#8211; (D2)
        &lt;/li&gt;
        &lt;li&gt;
          19 &amp;#8211; (D3)
        &lt;/li&gt;
        &lt;li&gt;
          20 &amp;#8211; (D4)
        &lt;/li&gt;
        &lt;li&gt;
          21 &amp;#8211; (NAK)
        &lt;/li&gt;
        &lt;li&gt;
          22 &amp;#8211; (SYN)
        &lt;/li&gt;
        &lt;li&gt;
          23 &amp;#8211; (ETB)
        &lt;/li&gt;
        &lt;li&gt;
          24 &amp;#8211; (CAN)
        &lt;/li&gt;
        &lt;li&gt;
          25 &amp;#8211; (EM)
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;ul&gt;
        &lt;li&gt;
          26 &amp;#8211; (SUB)
        &lt;/li&gt;
        &lt;li&gt;
          27 &amp;#8211; (ESC)
        &lt;/li&gt;
        &lt;li&gt;
          28 &amp;#8211; (FS)
        &lt;/li&gt;
        &lt;li&gt;
          29 &amp;#8211; (GS)
        &lt;/li&gt;
        &lt;li&gt;
          30 &amp;#8211; (RS)
        &lt;/li&gt;
        &lt;li&gt;
          31 &amp;#8211; (US)
        &lt;/li&gt;
        &lt;li&gt;
          32 &amp;#8211; (Espaço)
        &lt;/li&gt;
        &lt;li&gt;
          33 &amp;#8211; !
        &lt;/li&gt;
        &lt;li&gt;
          34 &amp;#8211; &amp;#8220;
        &lt;/li&gt;
        &lt;li&gt;
          35 &amp;#8211; #
        &lt;/li&gt;
        &lt;li&gt;
          36 &amp;#8211; $
        &lt;/li&gt;
        &lt;li&gt;
          37 &amp;#8211; %
        &lt;/li&gt;
        &lt;li&gt;
          38 &amp;#8211; &amp;
        &lt;/li&gt;
        &lt;li&gt;
          39 &amp;#8211; &amp;#8216;
        &lt;/li&gt;
        &lt;li&gt;
          40 &amp;#8211; (
        &lt;/li&gt;
        &lt;li&gt;
          41 &amp;#8211; )
        &lt;/li&gt;
        &lt;li&gt;
          42 &amp;#8211; *
        &lt;/li&gt;
        &lt;li&gt;
          43 &amp;#8211; +
        &lt;/li&gt;
        &lt;li&gt;
          44 &amp;#8211; ,
        &lt;/li&gt;
        &lt;li&gt;
          45 &amp;#8211; &amp;#8211;
        &lt;/li&gt;
        &lt;li&gt;
          46 &amp;#8211; .
        &lt;/li&gt;
        &lt;li&gt;
          47 &amp;#8211; /
        &lt;/li&gt;
        &lt;li&gt;
          48 &amp;#8211; 0
        &lt;/li&gt;
        &lt;li&gt;
          49 &amp;#8211; 1
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;ul&gt;
        &lt;li&gt;
          50 &amp;#8211; 2
        &lt;/li&gt;
        &lt;li&gt;
          51 &amp;#8211; 3
        &lt;/li&gt;
        &lt;li&gt;
          52 &amp;#8211; 4
        &lt;/li&gt;
        &lt;li&gt;
          53 &amp;#8211; 5
        &lt;/li&gt;
        &lt;li&gt;
          54 &amp;#8211; 6
        &lt;/li&gt;
        &lt;li&gt;
          55 &amp;#8211; 7
        &lt;/li&gt;
        &lt;li&gt;
          56 &amp;#8211; 8
        &lt;/li&gt;
        &lt;li&gt;
          57 &amp;#8211; 9
        &lt;/li&gt;
        &lt;li&gt;
          58 &amp;#8211; :
        &lt;/li&gt;
        &lt;li&gt;
          59 &amp;#8211; ;
        &lt;/li&gt;
        &lt;li&gt;
          60 &amp;#8211; &lt;
        &lt;/li&gt;
        &lt;li&gt;
          61 &amp;#8211; =
        &lt;/li&gt;
        &lt;li&gt;
          62 &amp;#8211; &amp;gt/
        &lt;/li&gt;
        &lt;li&gt;
          63 &amp;#8211; ?
        &lt;/li&gt;
        &lt;li&gt;
          64 &amp;#8211; @
        &lt;/li&gt;
        &lt;li&gt;
          65 &amp;#8211; A
        &lt;/li&gt;
        &lt;li&gt;
          66 &amp;#8211; B
        &lt;/li&gt;
        &lt;li&gt;
          67 &amp;#8211; C
        &lt;/li&gt;
        &lt;li&gt;
          68 &amp;#8211; D
        &lt;/li&gt;
        &lt;li&gt;
          69 &amp;#8211; E
        &lt;/li&gt;
        &lt;li&gt;
          70 &amp;#8211; F
        &lt;/li&gt;
        &lt;li&gt;
          71 &amp;#8211; G
        &lt;/li&gt;
        &lt;li&gt;
          72 &amp;#8211; H
        &lt;/li&gt;
        &lt;li&gt;
          73 &amp;#8211; I
        &lt;/li&gt;
        &lt;li&gt;
          74 &amp;#8211; J
        &lt;/li&gt;
        &lt;li&gt;
          75 &amp;#8211; K
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;ul&gt;
        &lt;li&gt;
          76 &amp;#8211; L
        &lt;/li&gt;
        &lt;li&gt;
          77 &amp;#8211; M
        &lt;/li&gt;
        &lt;li&gt;
          78 &amp;#8211; N
        &lt;/li&gt;
        &lt;li&gt;
          79 &amp;#8211; O
        &lt;/li&gt;
        &lt;li&gt;
          80 &amp;#8211; P
        &lt;/li&gt;
        &lt;li&gt;
          81 &amp;#8211; Q
        &lt;/li&gt;
        &lt;li&gt;
          82 &amp;#8211; R
        &lt;/li&gt;
        &lt;li&gt;
          83 &amp;#8211; S
        &lt;/li&gt;
        &lt;li&gt;
          84 &amp;#8211; T
        &lt;/li&gt;
        &lt;li&gt;
          85 &amp;#8211; U
        &lt;/li&gt;
        &lt;li&gt;
          86 &amp;#8211; V
        &lt;/li&gt;
        &lt;li&gt;
          87 &amp;#8211; W
        &lt;/li&gt;
        &lt;li&gt;
          88 &amp;#8211; X
        &lt;/li&gt;
        &lt;li&gt;
          89 &amp;#8211; Y
        &lt;/li&gt;
        &lt;li&gt;
          90 &amp;#8211; Z
        &lt;/li&gt;
        &lt;li&gt;
          91 &amp;#8211; [
        &lt;/li&gt;
        &lt;li&gt;
          92 &amp;#8211; \
        &lt;/li&gt;
        &lt;li&gt;
          93 &amp;#8211; ]
        &lt;/li&gt;
        &lt;li&gt;
          94 &amp;#8211; ^
        &lt;/li&gt;
        &lt;li&gt;
          95 &amp;#8211; _
        &lt;/li&gt;
        &lt;li&gt;
          96 &amp;#8211; `
        &lt;/li&gt;
        &lt;li&gt;
          97 &amp;#8211; a
        &lt;/li&gt;
        &lt;li&gt;
          98 &amp;#8211; b
        &lt;/li&gt;
        &lt;li&gt;
          99 &amp;#8211; c
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      &lt;ul&gt;
        &lt;li&gt;
          100 &amp;#8211; d
        &lt;/li&gt;
        &lt;li&gt;
          101 &amp;#8211; e
        &lt;/li&gt;
        &lt;li&gt;
          102 &amp;#8211; f
        &lt;/li&gt;
        &lt;li&gt;
          103 &amp;#8211; g
        &lt;/li&gt;
        &lt;li&gt;
          104 &amp;#8211; h
        &lt;/li&gt;
        &lt;li&gt;
          105 &amp;#8211; i
        &lt;/li&gt;
        &lt;li&gt;
          106 &amp;#8211; j
        &lt;/li&gt;
        &lt;li&gt;
          107 &amp;#8211; k
        &lt;/li&gt;
        &lt;li&gt;
          108 &amp;#8211; l
        &lt;/li&gt;
        &lt;li&gt;
          109 &amp;#8211; m
        &lt;/li&gt;
        &lt;li&gt;
          110 &amp;#8211; n
        &lt;/li&gt;
        &lt;li&gt;
          111 &amp;#8211; o
        &lt;/li&gt;
        &lt;li&gt;
          112 &amp;#8211; p
        &lt;/li&gt;
        &lt;li&gt;
          113 &amp;#8211; q
        &lt;/li&gt;
        &lt;li&gt;
          114 &amp;#8211; r
        &lt;/li&gt;
        &lt;li&gt;
          115 &amp;#8211; s
        &lt;/li&gt;
        &lt;li&gt;
          116 &amp;#8211; t
        &lt;/li&gt;
        &lt;li&gt;
          117 &amp;#8211; u
        &lt;/li&gt;
        &lt;li&gt;
          118 &amp;#8211; v
        &lt;/li&gt;
        &lt;li&gt;
          119 &amp;#8211; w
        &lt;/li&gt;
        &lt;li&gt;
          120 &amp;#8211; x
        &lt;/li&gt;
        &lt;li&gt;
          121 &amp;#8211; y
        &lt;/li&gt;
        &lt;li&gt;
          122 &amp;#8211; z
        &lt;/li&gt;
        &lt;li&gt;
          123 &amp;#8211; {
        &lt;/li&gt;
        &lt;li&gt;
          124 &amp;#8211; |
        &lt;/li&gt;
        &lt;li&gt;
          125 &amp;#8211; }
        &lt;/li&gt;
        &lt;li&gt;
          126 &amp;#8211; ~
        &lt;/li&gt;
        &lt;li&gt;
          127 &amp;#8211; (DELETE)
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;A tabela de caracteres ASCII (Código Padrão Americano para Intercâmbio de Informações) foi a primeira tabela utilizada em larga escala. O computador foi desenvolvido nos Estados Unidos. No vocabulário americano, não existem acentos, além disso, era um código de 7 bits, e não 8. Ou seja, ao invés de 256 posições, a tabela ASCII tinha apenas 128 posições &amp;#8211; como você sabe, tudo nos computadores são um grupo de zeros (0) e uns (1) chamados de bits. Esses zeros e uns formam grupos de oito em oito que chamados de bytes e representam um número entre 0 e 255. Como as imagens, áudio, vídeos, programas e tudo o que temos nos sistemas de hoje, os caracteres que aparecem na sua tela são grupos de zeros e uns.&lt;/p&gt;

&lt;p&gt;O computador se popularizou e a necessidade de utilizar acentos e outros tipos de caracteres (Chineses, por exemplo) tornou-se um problema.&lt;/p&gt;

&lt;p&gt;Hoje, a maioria das tabelas utilizadas foram criadas suprindo as necessidades de um idioma específico, por este motivo elas se tornaram muito limitadas.&lt;/p&gt;

&lt;p&gt;Por exemplo, se você estiver escrevendo um documento utilizando a tabela de caracteres chinesa, você não poderá escrever algo em hebraico neste documento.&lt;/p&gt;

&lt;p&gt;Por conta disso muitos problemas podem surgir, por exemplo, seria impossível criar um curso online de hebraico para chineses. Será também um problema se você tiver que fazer um site ou sistema com suporte a diversos idiomas. Por exemplo, um sistema de blog projetado para uso internacional. Isso por que a posição dos caracteres varia de tabela para tabela. Dois codificadores podem usar o mesmo número para dois caracteres diferentes ou usar números diferentes para o mesmo caractere.&lt;/p&gt;

&lt;h3 id=&#34;a-tabela-de-caractéres-unicode-8211-utf-8-1&#34;&gt;A tabela de caractéres Unicode &amp;#8211; UTF-8&lt;/h3&gt;

&lt;p&gt;A Web é acessada por pessoas do mundo inteiro. Ter um sistema ou um site que limite o acesso e pessoas de outros países é algo que vai contra a tradição e os ideais da internet. Por isso, foi criado uma tabela que suprisse essas necessidades, essa tabela se chama Unicode. A tabela Unicode suporta algo em torno de um milhão de caracteres. Ao invés de cada região ter sua tabela de caracteres, é muito mais sensato haver uma tabela padrão com o maior número de caracteres possível. Atualmente a maioria dos sistemas e browsers utilizados por usuários suportam plenamente Unicode. Por isso, fazendo seu sistema Unicode você garante que ele será bem visualizado aqui, na China ou em qualquer outro lugar do mundo.&lt;/p&gt;

&lt;p&gt;O que o Unicode faz é fornecer um único número para cada caractere, não importa a plataforma, nem o programa, nem a língua.&lt;/p&gt;

&lt;h3 id=&#34;antes-de-começar-você-precisa-saber-1&#34;&gt;Antes de começar, você precisa saber&lt;/h3&gt;

&lt;p&gt;Há algumas recomendações que você precisa saber antes de começar a mudar seu site para Unicode.&lt;/p&gt;

&lt;p&gt;Existem três principais maneiras para você indicar a seu site qual tabela de caractere você está utilizando:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Cabeçalho HTTP Content-type&lt;/strong&gt; &amp;#8211; Desta forma é necessário configurar o servidor web, algo que não é fácil nem para qualquer um. Dependendo de onde você trabalha, se for em um lugar grande, com vários sites neste mesmo servidor, pode ser a melhor maneira porque você terá que fazer isso uma vez. Caso for vários projetos com servidores diferentes isso pode ser uma dor de cabeça.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Metatag Content-type&lt;/strong&gt; &amp;#8211; Colocando este código no HEAD de seu documento, ele avisará para o browser localmente e na hora da renderização do site qual Charset ele deve utilizar para exibir os caracteres. Esta é uma ótima escolha caso você não tenha acesso aos servidores. Certamente é a maneira mais simples de ser utilizada.``&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Através do prolog xml&lt;/strong&gt; &amp;#8211; O prolog XML é utilizado em documentos XML ou XHTML para indicar a versão e a tabela de caracteres daquele documento. &lt;code&gt;&amp;lt;? xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;&lt;/code&gt; Não é uma boa utilizar este prolog por conta do chaveamento do Internet Explorer 6 para Quirks Mode. Quando o prolog é utilizado, o Internet Explorer 6 renderiza os sites como o Internet Explorer 5, trazendo muitos problemas de compatibilidade. Não recomendo.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Outro ponto importante é não esquecer de salvar seu documento no formato da tabela que você indicou. Não adianta nada indicar que código que está utilizando a tabela de caracteres UTF-8 e seu editor salvar seus documentos com a tabela ISO-8859-1. Isso fará com que os caracteres de seu documento apareçam corrompidos. Por isso, ao definir qual será a tabela utilizada no projeto (recomendo sempre UTF-8), defina como seu editor irá salvar seus documentos. Todos os editores de código hoje em dia tem essa opção, basta procurar. Não adianta também você salvar seus arquivos em UTF-8 e o resto da equipe continuar utilizando ISO-8859-1. Os arquivos irão corromper da mesma maneira. É uma decisão que a equipe inteira deve tomar para não haver retrabalho e dor de cabeça.&lt;/p&gt;

&lt;p&gt;Se um projeto já está no ar, é bom fazer uma análise para ter certeza se vale a pena ou não mudar a tabela de um projeto que já está no ar e funcionando. Recomendo que esse novo padrão sempre comece a ser utilizado em novos projetos. Mesmo assim, um bom programador pode fazer um script que converta a tabela de caracteres de um diretório inteiro.&lt;/p&gt;

&lt;p&gt;O importante é garantir que seu site aqui seja visto da maneira correta em outros lugares do mundo. Isso é importante para você e seu cliente.&lt;/p&gt;

&lt;!--object width=&#34;425&#34; height=&#34;355&#34;&gt;&lt;embed src=&#34;http://www.youtube.com/v/SX5bCCtHYXo&amp;hl=en&#34; type=&#34;application/x-shockwave-flash&#34; wmode=&#34;transparent&#34; width=&#34;425&#34; height=&#34;355&#34;&gt;&lt;/embed&gt;&lt;/object--&gt;</description>
    </item>
    
    <item>
      <title>Browsers – Guerra Fria</title>
      <link>https://tableless.github.io/hugo-public/browsers-guerra-fria/</link>
      <pubDate>Tue, 18 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/browsers-guerra-fria/</guid>
      <description>&lt;p&gt;Quando o Netscape e o Internet Explorer faziam a Guerra dos Browsers o principal objetivo era conquistar usuários. As formas que os dois utilizavam para adquirir adeptos eram prejudiciais para o desenvolvimento web. Basicamente o que os browsers faziam era criar códigos proprietários. Isso gerava um retrabalho terrível para os desenvolvedores. Se você tivesse 10 sites para gerenciar, na verdade seriam 20, por conta de ter a necessidade de haver uma versão para Netscape e outra para Internet Explorer. Isso gerava trabalho em dobro. Se houvesse alguma modificação no layout, texto ou programação, o desenvolvedor teria que atualizar as duas versões dos sites. &lt;/p&gt;

&lt;p&gt;Era normal que o visitante ao entrar nos sites via dois logos: um do Netscape e outro logo do Internet Explorer e a seguinte frase: &amp;#8220;Qual browser você utiliza?&amp;#8221; Então o usuário escolhia qual browser ele utilizava e clicava no link que o levava para um site desenvolvido especialmente para aquele browser.&lt;/p&gt;

&lt;p&gt;A idéia era simples: se a grande maioria dos usuários utilizassem o Netscape, por exemplo, os desenvolvedores seriam obrigados a desenvolver em primeiro lugar para o Netscape e deixar o Internet Explorer em segundo plano.&lt;/p&gt;

&lt;p&gt;O problema é que essa guerra estava ficando insuportável para os desenvolvedores. Desenvolver para web estava ficando muito caro. Ter um site simples publicado custava caro e o desenvolvimento era demorado e confuso.&lt;/p&gt;

&lt;p&gt;Felizmente essa guerra acabou. Hoje os fabricantes de browsers estão com outro pensamento. A guerra de hoje é mais silenciosa e agrega muito mais valor ao desenvolvimento web. Os métodos para conquistar usuários é direcionada em serviços. Sim, ainda é mais difícil conseguir os usuários mais leigos, mas essa massa está se renovando e novos usuários de internet já sabem qual browser escolher e os motivos para escolhê-lo.&lt;/p&gt;

&lt;p&gt;Internet Explorer 8, Safari 3.1 e Firefox 3 estão se esforçando para alcançar o nível máximo de suporte aos Padrões. Isso conquista o desenvolvedor que por sua vez vai evangelizar o usuário leigo a utilizar o browser mais interessante e útil para as necessidades dele.&lt;/p&gt;

&lt;p&gt;Agora, o objetivo mais difícil ainda precisa ser cumprido: convencer os desenvolvedores a utilizar os Padrões Web. Com certeza este é o caminho mais complicado. Pelo menos, se não for por bem, vai por livre e espontânea pressão. A seleção natural infalível do mercado cuidará desses.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PDF sobre Produtividade</title>
      <link>https://tableless.github.io/hugo-public/pdf-sobre-produtividade/</link>
      <pubDate>Mon, 03 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/pdf-sobre-produtividade/</guid>
      <description>&lt;p&gt;&lt;strong&gt;JABÁ&lt;/strong&gt;: Há algum tempo trabalhando com treinamento, tive a oportunidade de conhecer desenvolvedores das mais diversas empresas, em vários estados. E percebi que há diferenças muito grandes no nível de conhecimento. De um lado, os twitters, bloggers, antenados leitores de feeds sempre ligados na última novidade. De outro, os programadores que migraram com dificuldade de Win32 para a Web, e estão usando praticamente a mesma tecnologia há seis ou sete anos.&lt;/p&gt;

&lt;p&gt;Não é incomum encontrar, por exemplo, equipes inteiras de desenvolvedores que não trabalham com controle de versão. Ou gente que nunca ouviu falar em testes unitários. Ou quem ainda acredita que simplesmente aprender UML vai resolver todos os seus problemas.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Pior do que isso, ainda há por aí, acreditem, uma multidão de desenvolvedores que ainda constrói layout com tabelas, usa muito pouco CSS e apenas edição visual.&lt;/p&gt;

&lt;p&gt;É pensando nisso que escrevi o documento &amp;#8220;&lt;a href=&#34;http://visie.com.br/treinamento/pdf/cadastro.pt&#34;&gt;Produtividade Web 2.0&lt;/a&gt;&amp;#8220;, de 68 páginas, que estamos agora disponibilizando por apenas R$ 19,90. Parte do material do Workshop de Produtividade da Visie, ele não foi escrito para lhe dar as respostas e ensinar como fazer cada coisa, mas para lhe dar as perguntas certas.&lt;/p&gt;

&lt;p&gt;Nosso objetivo é colocar minhocas na sua cabeça, na de sua equipe, e na de seu chefe. Bom proveito!&lt;/p&gt;

&lt;p&gt;PS.: Você também pode baixar de graça &lt;a href=&#34;http://visie.com.br/treinamento/pdf/&#34;&gt;nossa apostila de XSLT&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sobre hipertextos</title>
      <link>https://tableless.github.io/hugo-public/sobre-hipertextos/</link>
      <pubDate>Mon, 18 Feb 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/sobre-hipertextos/</guid>
      <description>&lt;p&gt;A linguagem básica de desenvolvimento para web é a HTML. O nome completo seria “Linguagem de Marcação de Hipertexto” &amp;#8211; HyperText Marckup Language, que é o termo em inglês de onde se origina a abreviação HTML.&lt;/p&gt;

&lt;p&gt;Durante muito tempo, nós desenvolvedores, ignoramos a importância da HTML. É ela que dá significado para a informação exibida e consumida na web. Por isso, é importante que saibamos suas características e em quais conceitos a HTML é baseada. Para começar a HTML é uma maneira de escrever &lt;strong&gt;hipertextos&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;conceito-de-hipertexto&#34;&gt;Conceito de Hipertexto&lt;/h3&gt;

&lt;p&gt;A HTML é baseada no conceito de Hipertexto. Hipertexto são conjuntos de elementos &amp;#8211; que muitos chamam de nós – ligados por conexões. Estes elementos podem ser palavras, imagens, vídeos, áudio, documentos, etc.&lt;/p&gt;

&lt;p&gt;Estes elementos conectados formam uma grande rede de informação. Eles não estão conectados linearmente, como se fosse um texto de um livro, por exemplo, que um assunto é ligado ao outro seguidamente. A conexão feita em um hipertexto é algo imprevisto.&lt;/p&gt;

&lt;p&gt;O hipertexto permite a comunicação de dados, organizando conhecimentos e guardando informações relacionadas.&lt;/p&gt;

&lt;h3 id=&#34;meios-de-escrita&#34;&gt;Meios de escrita&lt;/h3&gt;

&lt;p&gt;O Hipertexto é algo diferente dos meios de escrita convencionais. Ela mudou a forma da leitura e escrita tradicional. A impressão, por exemlo, que é um meio no qual estamos acostumados em nosso dia-a-dia, tem um método original para que você absorva a informação ali exibida. Algumas características do texto impresso: Titulos, Sub-títulos, parágrafo de introdução (olho de texto), numeração de páginas, índice, etc. Essas características não servem e nem combinam com o conceito utilizado no manuscrito, que foi feito para leitura rápida e não linear. No manuscrito há uma série de conexões que indicam caminhos para outros livros e notas de rodapé.&lt;/p&gt;

&lt;p&gt;São objetivos e maneiras diferentes para tratar formas de leituras diferentes. O hipertexto também modifica a forma com que a pessoa lê e absorve a informação escrita. O hipertexto dá acesso rápido e abundante a informações diretamente ligadas a assuntos e elementos localizados em diversos pontos do texto. É uma forma de leitura diferenciada, não linear e dependente de vários elementos formando uma rede de informação complexa.&lt;/p&gt;

&lt;p&gt;Enquanto em um livro você página por página, linearmente, para formar uma rede de pontos que compõe o assunto tratado do livro, em um hipertexto você tem vários assuntos em volta de um único elemento. São elementos interligados, formando uma rede complexa. Cada elemento particular tem por sua vez outros elementos formando outro universo de conexões.&lt;/p&gt;

&lt;p&gt;A HTML foi feita baseado neste conceito, que é fácil de ser entendido quando navegamos pela web. No início da internet, os elementos usados para formar um hipertexto eram basicamente o texto e imagens. Esses por sua vez recebem links que levam o usuário para outro ponto, com links relacionados a outros assuntos. Com a internet ficando cada vez mais veloz, hoje é possível utilizar vídeos e áudio como partes destes elementos. Utilizamos ainda muito basicamente o potencial destes dois elementos.&lt;/p&gt;

&lt;p&gt;Pesquisadores passados já tentaram criar e adaptar aparelhos e métodos que funcionassem dentro do conceito de hipertexto. Isso era discutido para melhorar a capacidade de estudo e pesquisa de assuntos complexos. Mesmo assim a internet tem se mostrado a melhor forma de utilização do conceito de hipertexto. É uma base onde há contribuição de conteúdo do mundo inteiro, diariamente, com informações ricas e abundantes.&lt;/p&gt;

&lt;p&gt;O interessante é que a web ainda é nova e imprevisível.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WordPress – Uma pequena introdução</title>
      <link>https://tableless.github.io/hugo-public/wordpress-uma-pequena-introducao/</link>
      <pubDate>Sun, 10 Feb 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/wordpress-uma-pequena-introducao/</guid>
      <description>

&lt;p&gt;O WordPress não foi feito para ser um CMS. Ele foi criado primeiramente para suprir necessidades de criação de blogs. Por acaso, talvez como se fosse um acidente, começamos a utilizá-lo para criar websites, desde os mais simples até os mais complicados. O pessoal do WordPress curtiu a ideia e agora está melhorando cada vez mais o sistema para que ele se torne um CMS de verdade, mesmo assim mantendo toda a simplicidade do WordPress original. E o melhor, é tudo de graça.&lt;/p&gt;

&lt;p&gt;Quero mostrar aqui o caminho das pedras. O que você precisa aprender para não ficar batendo cabeça no começo. É coisa simples.&lt;/p&gt;

&lt;h3 id=&#34;criando-o-index-php-e-o-style-css&#34;&gt;Criando o index.php e o style.css&lt;/h3&gt;

&lt;p&gt;Para fazer um tema de WordPress, você precisa apenas de dois arquivos: &lt;strong&gt;index.php&lt;/strong&gt; e o &lt;strong&gt;style.css&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;style.css&lt;/strong&gt; tem uma pequena sintaxe no começo do arquivo com informações do autor do Template. Essas informações serão utilizadas pelo WordPress na tela de Templates.&lt;/p&gt;

&lt;p&gt;A sintaxe que está escrita no meu &lt;strong&gt;style.css&lt;/strong&gt; é este:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/*  
Theme Name: Oficina WordPress da Tableless
Theme URI: http://tableless.com.br/
Description: O layout do Tableless
Version: 1.0
Author: Diego Eis
Author URI: http://tableless.com.br/

     http://tableless.com.br

    This theme was designed and built by Diego Eis,
    whose blog you will find at http://tableless.com.br/

*/
&lt;/pre&gt;

&lt;p&gt;Você pode utilizar esse código e modificar para ficar com suas informações. Não precisa decorar, isso é coisa de maluco. 😉&lt;/p&gt;

&lt;p&gt;Crie um &lt;strong&gt;style.css&lt;/strong&gt; com este código dentro. Não iremos utilizar o CSS neste artigo.&lt;/p&gt;

&lt;p&gt;Crie também um &lt;strong&gt;index.php&lt;/strong&gt; com a estrutura básica de HTML. Eu utilizo sempre assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;

&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=utf-8&#34; /&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Daqui para frente, irei colocar apenas o código que irá dentro do BODY do documento. Portanto, tudo que iremos ver agora, insira dentro do BODY do seu documento.&lt;/p&gt;

&lt;h3 id=&#34;as-template-tags&#34;&gt;As Template Tags&lt;/h3&gt;

&lt;p&gt;O segredo do WordPress são as Template Tags. Você pode conferir todas aqui: &lt;a href=&#34;http://codex.wordpress.org/Template_Tags&#34;&gt;http://codex.wordpress.org/Template_Tags&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Os templates do wordpress são escritos em PHP. Isso torna pro designer um pouco complicado, mas não muito. Se você souber um pouco de PHP, fazer um template é muito fácil, porque PHP é uma linguagem que todo mundo usa. Para facilitar, o WordPress chama as funções do PHP que são utilizadas pelo seu sistema de Template Tags. As Template Tags não passam de funções PHP que recuperam do banco, informações que você precisará para compor o conteúdo do site. Para o programador isso não muda nada. Mas para o pessoal que não é tão íntimo assim com a linguagem PHP, a forma que usamos essas &amp;#8220;funções&amp;#8221; (Template Tags) facilita demais.&lt;/p&gt;

&lt;h3 id=&#34;o-loop-8211-listando-os-posts-na-página&#34;&gt;O Loop &amp;#8211; Listando os posts na página&lt;/h3&gt;

&lt;p&gt;O Loop é o responsável pelo trecho de código que será repetido para cada post impresso na tela.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php while ( have_posts() ) : the_post (); ?&amp;gt;

&amp;lt;?php endwhile; ?&amp;gt;
&amp;lt;/pre&amp;gt;
Pra voc&amp;ecirc; chamar os posts do blog &amp;eacute; muito simples. Voc&amp;ecirc; come&amp;ccedil;ar&amp;aacute; utilizando duas Template Tags dentro deste c&amp;oacute;digo de Loop.
&amp;lt;pre class=&#34;lang-php&#34;&amp;gt;
&amp;lt;?php while ( have_posts() ) : the_post (); ?&amp;gt;
&amp;lt;h2&amp;gt;&amp;lt;? the_title(); ?&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;? the_content(); ?&amp;gt;
&amp;lt;?php endwhile; ?&amp;gt;
&lt;/pre&gt;

&lt;p&gt;A primeira Template Tag que coloquei foi a the_title(). Ela chama os títulos dos posts do site.&lt;/p&gt;

&lt;p&gt;A segunda, the_content() chama o conteúdo dos posts. O Conteúdo vem escrito da forma que você criou no WordPress.&lt;/p&gt;

&lt;p&gt;Apenas com esse código acima, você não faz um blog completo. Um blog tem outras características importantes. E são elas que iremos ver agora.&lt;/p&gt;

&lt;h3 id=&#34;características-de-um-blog&#34;&gt;Características de um Blog&lt;/h3&gt;

&lt;p&gt;Há algumas características que compõem um blog. Essas características são encontradas geralmente em blogs, isso não quer dizer que em sites de notícias não podem contem essas características:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Comentários&lt;/li&gt;
&lt;li&gt;Categorias&lt;/li&gt;
&lt;li&gt;Data, autor&lt;/li&gt;
&lt;li&gt;Feed&lt;/li&gt;
&lt;li&gt;Arquivo (histórico)&lt;/li&gt;
&lt;li&gt;Busca&lt;/li&gt;
&lt;li&gt;Permalink&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Não iremos mostrar em nosso código como se faz Comentários nem Categorias. O Artigo iria ficar muito mais complicado. Portanto, se estiver interessado, faça a &lt;a href=&#34;http://visie.com.br/wordpress/&#34; title=&#34;Oficina de WordPress da Visie&#34;&gt;Oficina de WordPress da Visie&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vamos agora melhorar um bocado esse código para que o site se pareça mais com um blog.&lt;/p&gt;

&lt;p&gt;Primeiro, vamos colocar Permalinks nos títulos dos posts.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php while ( have_posts() ) : the_post (); ?&amp;gt;

&amp;lt;h2&amp;gt;&amp;lt;a href=&#34;&amp;lt;? the_permalink(); ?&amp;gt;&#34;&amp;gt;&amp;lt;? the_title(); ?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;? the_content(); ?&amp;gt;

&amp;lt;?php endwhile; ?&amp;gt;
&lt;/pre&gt;

&lt;h3 id=&#34;autor-e-data&#34;&gt;Autor e Data&lt;/h3&gt;

&lt;p&gt;A Template Tag que iremos utilizar é a the_author_posts_link() para Autor, que colocará a o nome do Autor com o link para seus posts. E a the_time() para colocar a data.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php while ( have_posts() ) : the_post (); ?&amp;gt;

&amp;lt;p&amp;gt;por &amp;lt;? the_author_posts_link(); ?&amp;gt; em &amp;lt;? the_time(); ?&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;h2&amp;gt;&amp;lt;a href=&#34;&amp;lt;? the_permalink(); ?&amp;gt;&#34;&amp;gt;&amp;lt;? the_title(); ?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;? the_content(); ?&amp;gt;

&amp;lt;?php endwhile; ?&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Você pode deixar a Template Tag the_time do jeito que você quiser. Ela usa aquela tabela de formatação padrão de data do PHP, você pode encontrar essa tabela aqui: &lt;a href=&#34;http://php.net/date/&#34;&gt;http://php.net/date/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Iremos formatar nossa data aqui:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;?php while ( have_posts() ) : the_post (); ?&amp;gt;

&amp;lt;p&amp;gt;por &amp;lt;? the_author_posts_link(); ?&amp;gt; em &amp;lt;? the_time(d/m/Y); ?&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;h2&amp;gt;&amp;lt;a href=&#34;&amp;lt;? the_permalink(); ?&amp;gt;&#34;&amp;gt;&amp;lt;? the_title(); ?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;? the_content(); ?&amp;gt;

&amp;lt;?php endwhile; ?&amp;gt;
&lt;/pre&gt;

&lt;h3 id=&#34;busca&#34;&gt;BUSCA&lt;/h3&gt;

&lt;p&gt;Para colocar um formulário de busca é muito simples. O código do formulário será:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;form action=&#34;&amp;lt;? bloginfo(&#39;home&#39;); ?&amp;gt;&#34;&amp;gt;
&amp;lt;input name=&#34;s&#34; type=&#34;text&#34; id=&#34;busca&#34; value=&#34;&amp;lt;? =$_GET[&#39;s&#39;] ?&amp;gt;&#34; /&amp;gt;
&amp;lt;input type=&#34;submit&#34; value=&#34;Procurar&#34; /&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/pre&gt;

&lt;p&gt;A Template Tag bloginfo() tráz do banco informações sobre o site. Neste caso, ele vai trazer a URL da home do site.&lt;/p&gt;

&lt;p&gt;Os inputs do formulário de busca do WordPress já vem com nomes pré-definidos, o input de busca, por exemplo, chama-se &lt;strong&gt;s&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Nosso código está assim agora.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;form action=&#34;&amp;lt;? bloginfo(&#39;home&#39;); ?&amp;gt;&#34;&amp;gt;
&amp;lt;input name=&#34;s&#34; type=&#34;text&#34; id=&#34;busca&#34; value=&#34;&amp;lt;? =$_GET[&#39;s&#39;] ?&amp;gt;&#34; /&amp;gt;
&amp;lt;input type=&#34;submit&#34; value=&#34;Procurar&#34; /&amp;gt;
&amp;lt;/form&amp;gt;

&amp;lt;?php while ( have_posts() ) : the_post (); ?&amp;gt;

&amp;lt;p&amp;gt;por &amp;lt;? the_author_posts_link(); ?&amp;gt; em &amp;lt;? the_time(d/m/Y); ?&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;h2&amp;gt;&amp;lt;a href=&#34;&amp;lt;? the_permalink(); ?&amp;gt;&#34;&amp;gt;&amp;lt;? the_title(); ?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;? the_content(); ?&amp;gt;

&amp;lt;?php endwhile; ?&amp;gt;
&lt;/pre&gt;

&lt;h3 id=&#34;arquivo-e-histórico&#34;&gt;Arquivo e Histórico&lt;/h3&gt;

&lt;p&gt;Para criar os arquivos, ou histórico, iremos utilizar a Template Tag: wp_get_archives().&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;? wp_get_archives(); ?&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Por padrão, essa Template Tag irá gerar uma lista de links dos meses que há posts. Preste bem atenção no código HTML que ele retorna. Ele cria uma lista de LI sem UL ou OL envolta.&lt;/p&gt;

&lt;p&gt;Por tanto, temos que escrever dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;ul&amp;gt;
&amp;lt;? wp_get_archives(); ?&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Ele faz deste modo caso você queira colocar uma CLASS ou ID para nomear a lista.&lt;/p&gt;

&lt;h3 id=&#34;linkando-o-feed-o-arquivo-css&#34;&gt;Linkando o FEED o arquivo CSS&lt;/h3&gt;

&lt;p&gt;O WordPress já cria os Feeds automaticamente. O trabalho que temos é colocar um link para o que o visitante consiga copiar o endereço do RSS e cadastrar no leitor de Feeds preferido dele. Podemos oferecer em RSS, RSS 2 ou ATOM. Existem pessoas que oferecem os três formatos. Vamos oferecer apenas um formato: o RSS2.&lt;/p&gt;

&lt;p&gt;A tag link tem um atributo &amp;#8216;rel&amp;#8217;. O atributo rel é mandatório, ele vai dizer qual será o resto da tag. Se você por exemplo colocar o valor rel=&amp;#8221;stylesheet&amp;#8221;, você está dizendo ao navegador que essa tag link é relativo a uma folha de estilo.&lt;/p&gt;

&lt;p&gt;O valor &amp;#8216;alternate&amp;#8217; diz ao navegador que estamos diponibilizando o conteúdo de nosso site em um meio alternativo:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;link rel=&#34;alternate&#34; ...
&amp;lt;link rel=&#34;stylesheet&#34; ...
&lt;/pre&gt;

&lt;p&gt;A tag type serve para indicar o tipo de arquivo que será carregada. No caso da folha de estillo, existem dois tipos que são utilizados hoje: o XSLT, que é utilizado para formatar código XML. E o tipo CSS, que é para formatar código HTML.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;&amp;lt;link rel=&#34;alternate&#34; type=&#34;application/rss+xml&#34; href=&#34;&amp;lt;? bloginfo(&#39;rss_url&#39;); ?&amp;gt;&#34; /&amp;gt;
&amp;lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;&amp;lt;? bloginfo(&#39;stylesheet_url&#39;); ?&amp;gt;&#34; /&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Novamente iremos utilizar a tag boginfo(). Agora ela irá buscar o endereço do RSS e do CSS.&lt;/p&gt;

&lt;p&gt;Perceba que utilizamos neste exemplo apenas um arquivo, o &lt;strong&gt;index.php&lt;/strong&gt; para listar o conteúdo. O WordPress tem uma maneira eficaz de hierarquia de arquivos. Por exemplo: nós precisamos de um arquivo chamado archives.php para criar a lista de histórico. Na falta deste arquivo, o WordPress utiliza o &lt;strong&gt;index.php&lt;/strong&gt; para criar a lista. Se tivéssemos feito o archives.php e colocado o código que utlizamos acima que cria a lista de histórico, o WordPress não utilizará o &lt;strong&gt;index.php&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PDF grátis sobre XSLT</title>
      <link>https://tableless.github.io/hugo-public/pdf-gratis-sobre-xslt/</link>
      <pubDate>Mon, 28 Jan 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/pdf-gratis-sobre-xslt/</guid>
      <description>&lt;p&gt;A &lt;a href=&#34;http://visie.com.br/&#34;&gt;Visie&lt;/a&gt; está disponibilizando um &lt;a href=&#34;http://visie.com.br/treinamento/cursosrapidos/&#34;&gt;PDF grátis sobre XSLT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A linguagem XSLT é utilizada para transformar dados de um formato XML em vários outros formatos. Há implementações de XSLT para praticamente qualquer linguagem de programação disponível hoje, incluindo PHP, JSP, ASP, ColdFusion, Python, Visual Basic, .NET e Delphi. No PDF estudamos os fundamentos e principais comandos da linguagem, permitindo a transformação de conteúdo baseado em XML em formatos como TXT, CSV, HTML e o próprio XML. Entre os exemplos realizados estão a transformação em HTML de um arquivo XML com dados de previsão do tempo atualizados em tempo real, e a criação de um sistema de clipping de notícias baseado em RSS ou ATOM.&lt;/p&gt;

&lt;p&gt;O conteúdo do PDF era usado para ministrar cursos aqui na Visie sobre XSLT. Se quiser sugerir alguma alteração, por favor, me diga. E claro, divulgue para outros desenvolvedores.&lt;/p&gt;

&lt;p&gt;Aproveite!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Metatags – Breve introdução de uso e teoria</title>
      <link>https://tableless.github.io/hugo-public/metatags/</link>
      <pubDate>Fri, 11 Jan 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/metatags/</guid>
      <description>&lt;p&gt;Metadados são dados sobre dados. Informações sobre a própria informação. Metadados são estruturas de informações que descrevem características de uma fonte de informação.&lt;/p&gt;

&lt;p&gt;Metadados servem para ajudar seres humanos ou máquinas a localizar e descrever informações, melhorando o gerenciamento e uso destas informações.&lt;/p&gt;

&lt;p&gt;Existem uma série de padrões para se criar Metadados, mas por você ser um possível profissional que trabalha com web, a que vai te interessar mais são as Metatags. Metatags são tags do HTML que lhe permitem inserir informações sobre o website. Você às utiliza para informar seres humanos e aplicações, embora sejam as aplicações que fazem melhor uso destas informações.&lt;/p&gt;

&lt;p&gt;As metatags são colocadas dentro da tag HEAD do seu documento HTML. Abaixo veja um exemplo de sintaxe:&lt;/p&gt;

&lt;pre&gt;&amp;lt;meta name=&#34;description&#34; content=&#34;Tableless.com.br - Site sobre melhores práticas de desenvolvimento utilizando Padrões Web.&#34; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;Sistemas de buscas como Google utilizam as metatags para mostrar informações sobre o site nos resultados de busca.O Google especificamente ignora as metatags de Keywords, mas utiliza muito a metatag Description para exibir a descrição dos sites nos resultados de busca.&lt;/p&gt;

&lt;h3 id=&#34;diferença-entre-metatags-http-equiv-e-name&#34;&gt;Diferença entre metatags HTTP-EQUIV e NAME&lt;/h3&gt;

&lt;p&gt;Quando o usuário clica em algum link na página, o servidor recebe uma requisição do browser via protocolo HTTP (uma série de regras que definem um diálogo entre o cliente e o servidor &amp;#8211; &lt;a href=&#34;http://www.obasicodaweb.com/introducao-ao-http&#34;&gt;mais aqui&lt;/a&gt;). O servidor dá uma série de repostas ao browser, que por sua vez mostrará na tela o que o servidor mandar.&lt;/p&gt;

&lt;p&gt;Quando você utiliza o uma metatag HTTP-EQUIV, você controla alguns destes comandos, como por exemplo o cacheamento da página ou redirecionamento para outro endereço.&lt;/p&gt;

&lt;p&gt;Já os metatags NAME não utilizam este tipo de conversa. Eles são responsáveis apenas em passar informações sobre o website para sistemas ou aplicações &amp;#8211; como sistemas de busca.&lt;/p&gt;

&lt;h3 id=&#34;metatags-importantes-para-uso&#34;&gt;Metatags importantes para uso&lt;/h3&gt;

&lt;h4 id=&#34;description&#34;&gt;Description&lt;/h4&gt;

&lt;pre&gt;&amp;lt;meta name=&#34;description&#34; content=&#34;Tableless.com.br - Site sobre melhores práticas de desenvolvimento utilizando Padrões Web.&#34; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;A metatag description serve para informar uma descrição sobre o site. Nesta metatag você vai dizer para que serve o site, qual o assunto principal. É importante saber que os sistemas de busca indexam em média 250 caracteres desta metatag. Cuidade com este limite, pode ser que a descrição do site saia pela metade nos resultados de pesquisa.&lt;/p&gt;

&lt;h4 id=&#34;keywords&#34;&gt;Keywords&lt;/h4&gt;

&lt;pre&gt;&amp;lt;meta name=&#34;keywords&#34; content=&#34;xhtml, ajax, javascript, padroes web, tableless, desenvolvimento web&#34;&amp;gt;&lt;/pre&gt;

&lt;p&gt;Nesta metatag você colocará as palavras chaves relativas ao assunto do site. Se você utilizar algum CMS ou sistema de blogging &amp;#8211; como o wordpress &amp;#8211; é interessante que seja feito um estudo para inserir as tags das postas nestas metatags.&lt;/p&gt;

&lt;h4 id=&#34;robots&#34;&gt;Robots&lt;/h4&gt;

&lt;pre&gt;&amp;lt;meta name=&#34;robots&#34; content=&#34;valor, valor, valor&#34; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;Você pode controlar o que os robôs de busca irão indexar ou não indexar em sua página. Normalmente esta metatag é utilizada em alguma página que você não queira que o sistema de busca indexe.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;none&lt;/strong&gt;: os robôs ignoram a página. É equivalente ao noindex e ao nofollow.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;noindex&lt;/strong&gt;: a página não será indexada por um sistema de busca.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nofollow&lt;/strong&gt;: impede que os robôs de busca sigam os links da página.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;noimageindex&lt;/strong&gt;: impede que as imagem sejam indexadas. Isso não inclui os textos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;noimageclick&lt;/strong&gt;: ignora links colocados diretamente em imagens.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;all&lt;/strong&gt;: sem restrições de indexação&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;: robôs são permitidos para incluir esta página nas buscas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;follow&lt;/strong&gt;: robôs podem seguir os links da página para encontrar outras páginas.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;language&#34;&gt;Language&lt;/h4&gt;

&lt;pre&gt;&amp;lt;meta name=&#34;language&#34; content=&#34;pt-br&#34; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;Você define qual a linguagem da página.&lt;/p&gt;

&lt;h4 id=&#34;author&#34;&gt;Author&lt;/h4&gt;

&lt;pre&gt;&amp;lt;meta name=&#34;author&#34; content=&#34;Diego Eis, Elcio Luiz Ferreira&#34; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;Informa qual são os autores ou o autor da página.&lt;/p&gt;

&lt;h4 id=&#34;pragma&#34;&gt;Pragma&lt;/h4&gt;

&lt;pre&gt;&amp;lt;meta http-equiv=&#34;pragma&#34; content=&#34;no-cache&#34; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;Informa que o navegador não deverá cachear a página.&lt;/p&gt;

&lt;p&gt;É importante notar que não é necessário colocar muitas metatags em suas páginas. Apenas utilize aquelas que realmente serão úteis. Se você utiliza algo como o WordPress, é interessante encontrar plugins que ajudem na publicação de metatags nas páginas. Aqui no &lt;a href=&#34;http://tableless.com.br/&#34;&gt;Tableless&lt;/a&gt; eu utilizo o Plugin para WordPress chamada &lt;a href=&#34;http://www.g-loaded.eu/2006/01/05/add-meta-tags-wordpress-plugin/&#34;&gt;AddMetaTags&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Uma lista maior de metatags você pode encontrar aqui: &lt;a href=&#34;http://vancouver-webpages.com/META/&#34;&gt;http://vancouver-webpages.com/META/&lt;/a&gt;. Há bastante informação também &lt;a href=&#34;http://www.library.uq.edu.au/iad/ctmeta4.html&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>