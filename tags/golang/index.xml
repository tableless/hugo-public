<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/golang/index.xml</link>
    <description>Recent content in Golang on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Por que utilizar Go/Golang no seu backend?</title>
      <link>https://tableless.github.io/hugo-public/por-que-utilizar-gogolang-no-seu-backend/</link>
      <pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/por-que-utilizar-gogolang-no-seu-backend/</guid>
      <description>

&lt;p&gt;O tempo passa e quando você é viciado no que faz, no meu caso, codar, a busca por se aprimorar ou descobrir novas maneiras de resolver os problemas da sua área nunca param, assim sendo, um belo dia, cheguei até o &lt;strong&gt;Go&lt;/strong&gt; e desde então não parei mais de aprender sobre a linguagem. A ideia é a cada semana fazer um post sobre, iniciando agora com uma simples introdução e sugestões de artigos para se animar.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;http://synflood.at/tmp/golang-slides/images/gophercolor.png&#34; alt=&#34;Imagem do gopher&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;o-que--gogolang&#34;&gt;O que é Go/Golang?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Go&lt;/strong&gt; ou &lt;strong&gt;Golang&lt;/strong&gt; &amp;#8211; termo que facilita buscas no google &amp;#8211; é uma linguagem &lt;em&gt;open source&lt;/em&gt; criada em 2009 pelo &lt;strong&gt;Google&lt;/strong&gt;, mais especificamente por caras como &lt;em&gt;Rob Pike&lt;/em&gt; e &lt;em&gt;Ken Thompson&lt;/em&gt;. Caso você não conheça, são engenheiros renomados, que tiveram grande influência na história da computação e em projetos &lt;em&gt;open source&lt;/em&gt; de grande escala, pra citar um bem &amp;#8220;simples&amp;#8221;: &lt;strong&gt;Unix&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Só por esta constatação, você já poderia largar tudo e seguir os passos deles cegamente, afinal, Rob e Ken provavelmente não estariam trabalhando em algo meia boca. Brincadeiras à parte, a Go foi criada com objetivos simples, dentre os principais, ter a rapidez do C, mas ser um pouco mais legível e/ou fácil de programar. Inclusive, nos meus primeiros passos com a linguagem, pude sentir exatemente isso. &lt;a href=&#34;https://www.youtube.com/watch?v=FTl0tl9BGdc&#34; target=&#34;_blank&#34;&gt;Aqui&lt;/a&gt; tem um vídeo bem massa do Rob dizendo o porquê você deve aprender Go.&lt;/p&gt;

&lt;h3 id=&#34;por-que-eu-usaria-go&#34;&gt;Por que eu usaria Go?&lt;/h3&gt;

&lt;p&gt;Acima, eu disse algumas vantagens de utilizar a linguagem, porém, a lista é bem mais vasta. Tentarei compilar os pontos que mais me chamam atenção e que possivelmente seriam casos de uso para você utilizá-la:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go é incrivelmente ‘leve’ em termos de uso de memória. Existe &lt;a href=&#34;http://www.iron.io/how-we-went-from-30-servers-to-2-go/&#34; target=&#34;_blank&#34;&gt;um caso conhecido&lt;/a&gt; de uma companhia que rodava um serviço em Ruby utilizando 50 servidores e foram para 2 com Go.&lt;/li&gt;
&lt;li&gt;Concorrência é um dos pontos fortes da linguagem, se você precisar sobrecarregar um backend com diversos processamentos simultâneos, as &lt;code&gt;goroutines&lt;/code&gt; e &lt;code&gt;channels&lt;/code&gt; &lt;a href=&#34;https://matt.aimonetti.net/posts/2012/11/27/real-life-concurrency-in-go/&#34; target=&#34;_blank&#34;&gt;vão te ajudar bastante&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Compila muito rápido.&lt;/li&gt;
&lt;li&gt;Tem &lt;em&gt;garbage collector&lt;/em&gt;, você não precisa se preocupar tanto com memória como nos seus dias de C.&lt;/li&gt;
&lt;li&gt;É fortemente tipada. (eu pelo menos acho isso bom, phpeiros)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;quem-est-usando-go&#34;&gt;Quem está usando Go?&lt;/h3&gt;

&lt;p&gt;Existe uma infinidade de empresas que ao descobrirem os poderes mágicos de Go, foram migrando seus serviços/backend. Abaixo algumas grandes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Uber &amp;#8211; &lt;a href=&#34;https://eng.uber.com/go-geofence/&#34; target=&#34;_blank&#34;&gt;How we built uber engineering’s highest query per second service using Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Docker &amp;#8211; &lt;a href=&#34;http://pt.slideshare.net/jpetazzo/docker-and-go-why-did-we-decide-to-write-docker-in-go&#34; target=&#34;_blank&#34;&gt;Why did we decide to write Docker in Go?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dropbox &amp;#8211; &lt;a href=&#34;https://blogs.dropbox.com/tech/2014/07/open-sourcing-our-go-libraries/&#34; target=&#34;_blank&#34;&gt;Open sourcing our Go libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenShift &amp;#8211; &lt;a href=&#34;https://blog.gopheracademy.com/birthday-bash-2014/openshift-3-old-dogs-new-tricks/&#34; target=&#34;_blank&#34;&gt;OpenShift3 and Go &amp;#8211; Teaching Old Dogs New Tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter &amp;#8211; &lt;a href=&#34;https://blog.twitter.com/2015/handling-five-billion-sessions-a-day-in-real-time&#34; target=&#34;_blank&#34;&gt;Handling five billion sessions a day – in real time&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enfim, existem muito mais empresas que se importam e/ou tem necessidade de melhorar a performance de seus serviços e grande parte delas estão olhando para Go e outras linguagens com poderes maiores do que as ‘enterprise languages’ que vemos há anos por aí nas grandes empresas do país.&lt;/p&gt;

&lt;p&gt;Espero que o post tenha sido informativo e inspirador para você descobrir mais sobre a linguagem Go.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>