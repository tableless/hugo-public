<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ember on Tableless</title>
    <link>http://tableless.com.br/tags/ember/index.xml</link>
    <description>Recent content in Ember on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/ember/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>EmberJS para iniciantes – Parte 1</title>
      <link>http://tableless.com.br/serie-emberjs-iniciante-parte1/</link>
      <pubDate>Wed, 29 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/serie-emberjs-iniciante-parte1/</guid>
      <description>

&lt;p&gt;É com muito prazer que começo a escrever aqui no Tableless para ajudá-lo a utilizar um dos melhores frameworks (IMHO) JavaScript atualmente: o EmberJS.&lt;/p&gt;

&lt;p&gt;A ideia é ter uma série de artigos sobre EmberJS, visando atender aos que estão começando agora. Por isso, se você já é um cara avançado, não se empolgue, quero fazer algo bem light, certo? Vamos lá então!&lt;/p&gt;

&lt;p&gt;Nesta primeira parte começaremos uma aplicação. Faremos com que o resultado seja mostrar uma mensagem de boas vindas ao usuário.&lt;/p&gt;

&lt;p&gt;Lápis e caneta na mão&amp;#8230; Oops, melhor: teclados a postos, vamos codar.&lt;/p&gt;

&lt;h2 id=&#34;1-o-download&#34;&gt;1. O Download&lt;/h2&gt;

&lt;p&gt;Primeiramente, vá até o site do nosso querido framework Ember (www.emberjs.com) e faça seu download. Esse passo é simples: basta apenas clicar no link &amp;#8220;Download Starter Kit&amp;#8221; e pronto.&lt;/p&gt;

&lt;h2 id=&#34;2-descompactar-o-arquivo&#34;&gt;2. Descompactar o Arquivo&lt;/h2&gt;

&lt;p&gt;Parece óbvio, mas como dito no início, vamos devagar: vá até onde você salvou o arquivo do Ember e descompacte-o. Depois disso, caso prefira, mude o nome da pasta para um nome mais sugestivo. Feito isso abra a pasta e veja seus diretórios e arquivos responsáveis pelo funcionamento do framework. Não vou me ater a isso aqui pois você pode encontrar detalhes &lt;a title=&#34;Ember JS ... Do Zero!&#34; href=&#34;http://emberjs.com.br/blog/?p=14&#34; target=&#34;_blank&#34;&gt;aqui neste post&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;3-abrindo-os-arquivos&#34;&gt;3. Abrindo os arquivos!&lt;/h2&gt;

&lt;p&gt;Os arquivos que você trabalhará para alcançar nosso objetivo (neste artigo) serão o &lt;strong&gt;index.html &lt;/strong&gt;e o &lt;strong&gt;app.js. &lt;/strong&gt;Este último localizado na pasta &amp;#8220;&lt;strong&gt;js&lt;/strong&gt;&amp;#8220;. Então, usando seu editor favorito (o meu é o Sublime!) abra estes dois arquivos para manipulá-los.&lt;/p&gt;

&lt;h2 id=&#34;4-criar-a-aplicação&#34;&gt;4. Criar a aplicação&lt;/h2&gt;

&lt;p&gt;No Ember, para que uma aplicação possa existir e funcionar, é necessário que se declare uma variável que crie uma Application. O arquivo &lt;strong&gt;app.js&lt;/strong&gt; é o responsável por ter esta chamada. O código é simples e ocupa 1 linha apenas:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var App = Ember.Application.create();&lt;/pre&gt;

&lt;p&gt;Sugiro que você não apenas mantenha o código que já vem escrito, mas apague e faça do zero mesmo. Assim poderá entender como as coisas vão acontecendo ao longo desta série.&lt;/p&gt;

&lt;h2 id=&#34;5-criar-a-rota&#34;&gt;5. Criar a Rota &lt;/h2&gt;

&lt;p&gt;A próxima coisa que temos a fazer é criar uma rota no nosso arquivo &lt;strong&gt;app.js.&lt;/strong&gt; As rotas são muito importantes, pois são por onde chamaremos a aplicação (pela URL) e ela nos dirá quais dados carregar e em qual template. Todas as rotas ficarão mapeadas dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;App.Router.map(function(){

this.route(&#39;index&#39;);

this.route(&#39;hello&#39;,{path : &#39;/bem-vindo&#39;});

});
&lt;/pre&gt;

&lt;p&gt;Note que temos 2 rotas mapeadas: uma chamada &lt;strong&gt;index&lt;/strong&gt; e outra &lt;strong&gt;hello.&lt;/strong&gt; A conclusão é de que se digitarmos no URL, por exemplo, &lt;em&gt;www.meuapp.com/index&lt;/em&gt; então a rota index chamará o template de mesmo nome para ser carregado para o usuário. Uma atenção para o segundo parâmetro do route é um objeto que contem a propriedade &amp;#8220;&lt;strong&gt;path&lt;/strong&gt;&amp;#8220;. Neste caso, o que está escrito como valor de path pode ser digitado pelo usuário no URL e o template acionado será o &lt;strong&gt;hello. &lt;/strong&gt;Maneiro, né?&lt;/p&gt;

&lt;h2 id=&#34;6-criar-os-templates&#34;&gt;6. Criar os templates&lt;/h2&gt;

&lt;p&gt;Agora que temos as rotas devidamente criadas e configuradas, podemos criar no arquivo &lt;strong&gt;index.html&lt;/strong&gt; os nossos templates. Aqui vale lembrar que você verá um monte de coisas entre tags &lt;script&gt;, certo? Pois bem. O Ember utiliza como engine de template padrão o &lt;a title=&#34;Handlebars&#34; href=&#34;http://handlebarsjs.com&#34; target=&#34;_blank&#34;&gt;Handlebars&lt;/a&gt;, e então essas tags são necessárias para que tudo rode nos conformes!&lt;/p&gt;

&lt;p&gt;Pode apagar tudo (ou quase tudo). Tenha atenção na chamada dos scripts, pois há uma ordem devido as suas dependências. Jquery vem primeiro, depois Handlebars e por fim o EmberJS. Daí sim, você pode chamar seu app.js (aquele que estava mexendo até agorinha, não esqueceu né?!).&lt;/p&gt;

&lt;p&gt;Para criar um novo template é simples, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;script type=&#34;&lt;strong&gt;text/x-handlebars&lt;/strong&gt;&#34; id=&#34;&lt;strong&gt;nomedotemplate&lt;/strong&gt;&#34;&amp;gt;

// aqui o conteúdo do meu template!

&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Como queremos o template &lt;strong&gt;hello&lt;/strong&gt;, basta colocar o nome dele ali na propriedade &lt;strong&gt;id &lt;/strong&gt;da tag script, certo? E mais uma coisa, note que o atributo &lt;strong&gt;type&lt;/strong&gt; não é &lt;em&gt;text/script,&lt;/em&gt; mas sim &lt;strong&gt;text/x-handlebars, &lt;/strong&gt;por causa da engine que estamos usando.&lt;/p&gt;

&lt;p&gt;Adicione algum conteúdo dentro do template, como por exemplo o tão clichê &amp;#8220;Olá Mundo!&amp;#8221;, para que seja visto na tela.&lt;/p&gt;

&lt;h2 id=&#34;7-testando-8230&#34;&gt;7. Testando&amp;#8230;&lt;/h2&gt;

&lt;p&gt;Bem, por fim criamos os 2 templates que queríamos e a aplicação já pode ser vista, no navegador!&lt;/p&gt;

&lt;p&gt;Sua URL será algo parecido com isso: &lt;strong&gt;&lt;a href=&#34;http://localdasuaaplicacao/#bem-vindo&#34;&gt;http://localdasuaaplicacao/#bem-vindo&lt;/a&gt;&lt;/strong&gt; e &lt;strong&gt;&lt;a href=&#34;http://localdasuaaplicacao/#index&#34;&gt;http://localdasuaaplicacao/#index&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Missão cumprida por aqui, bons estudos e até o próximo!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>