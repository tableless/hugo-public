<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xhtml on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/xhtml/index.xml</link>
    <description>Recent content in Xhtml on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/xhtml/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Navegabilidade em Dispositivos Móveis</title>
      <link>https://tableless.github.io/hugo-public/navegabilidade-em-dispositivos-moveis/</link>
      <pubDate>Wed, 17 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/navegabilidade-em-dispositivos-moveis/</guid>
      <description>&lt;p&gt;Um dos principais desafios ao projetar um site ou um sistema web para mobile é o tamanho em KB do conteúdo. Internet pelo celular ainda é cobrada por KB utilizados por muitas operadoras e o custo ainda é muito elevado no Brasil. Além disso, temos um espaço muito pequeno para mostrar o conteúdo. Mesmo os melhores &lt;em&gt;smartphones touch-screen&lt;/em&gt; têm telas relativamente pequenas se compararmos com um monitor convencional ou notebook, o que cria um esforço de interação maior.&lt;/p&gt;

&lt;p&gt;O princípio de acessibilidade para sites visualizados em dispositivos móveis é a apresentação sucinta de informações e para isso uma diretriz fundamental é utilizar corretamente as tags do HTML e fazer uma marcação adequada e semântica. Por exemplo, utilizar corretamente as tags de cabeçalho para estruturar títulos, &lt;em&gt;P&lt;/em&gt; para parágrafos e outras recomendações que são comuns também aos sites convencionais.&lt;/p&gt;

&lt;p&gt;Porém, deve ser minimizado o uso de tags, utilizando apenas as que forem necessárias. Por termos um conteúdo resumido e mais verticalizado, não há necessidade de muitas tags para estruturação e posicionamento do conteúdo. E, nesse ponto, entra outra questão: muitos sites disponibilizam o mesmo layout para web e para mobile, apenas acrescentando uma folha de estilo com atributo &lt;em&gt;mediatype=”handheld”&lt;/em&gt; para adaptar a apresentação do conteúdo aos dispositivos móveis.&lt;/p&gt;

&lt;p&gt;O mais adequado é prover uma página alternativa, com HTML e CSS próprios para a visualização neste tipo de dispositivo. Existem verificações server-side (depende da linguagem utilizada) que permitem identificar se o usuário está acessando o site a partir de um dispositivo móvel e então fazer o redirecionamento para a versão mobile.&lt;/p&gt;

&lt;p&gt;Desenvolver uma versão mobile de seu website implica também em reduzir as informações que são apresentadas, disponibilizando apenas textos, links e imagens que sejam mais relevantes. Fazendo isto, reduzimos a densidade informacional e possibilitamos que os usuários encontrem mais facilmente as informações. Além disso, conseguimos reduzir o tráfego de conteúdo por diminuir o tamanho da página.&lt;/p&gt;

&lt;p&gt;Outras dicas importantes sobre acessibilidade (e também usabilidade) para dispositivos móveis:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Evite o uso de javascript e flash, ainda há dispositivos que não suportam corretamente estes elementos. Mesmo para dispositivos que suportem scripts, eles devem ser utilizados apenas caso não haja outra forma de realizar uma determinada função. Scripts aumentam o consumo de energia.&lt;/li&gt;
&lt;li&gt;O título das páginas deve ser curto e descritivo, para que o usuário identifique a página que ele está;&lt;/li&gt;
&lt;li&gt;Prover, sempre que possível, pré-seleção para valores em campos de formulário, pois isto minimiza a quantidade de entrada de dados que o usuário deve fazer.&lt;/li&gt;
&lt;li&gt;Quando possível, utilizar também listas de seleção, radio buttons e outros controles que não requerem digitação.&lt;/li&gt;
&lt;li&gt;Garantir que cada formulário presente tenha um botão submit, evitando submissões por de javascript através de um evento no campo de formulário.&lt;/li&gt;
&lt;li&gt;Reduza a quantidade de seletores e propriedades em seu CSS e, se possível, coloque declarações em uma única linha para reduzir o tamanho dos arquivos. Você também pode optar por utilizar script server-side para a compressão das folhas de estilo.&lt;/li&gt;
&lt;li&gt;Para os textos, evite medidas absolutas e em pixels, permitindo que os navegadores ajustem o conteúdo à tela.  No CSS, utilize porcentagens e medidas relativas como &lt;em&gt;em&lt;/em&gt;, &lt;em&gt;ex&lt;/em&gt;, &lt;em&gt;bolder&lt;/em&gt;, &lt;em&gt;larger&lt;/em&gt; e &lt;em&gt;thick&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Especificar as dimensões exatas da imagem em pixels ajuda o navegador a continuar o carregamento da página e evitar o recarregamento depois da página ter sido exibida por completo. Os dispositivos podem perceber melhor as intenções do desenvolvedor se as margens, bordas e espaçamentos forem especificados em pixels.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algumas destas recomendações foram obtidas no site &lt;a title=&#34;Ready.mobi&#34; href=&#34;http://ready.mobi/&#34; target=&#34;_blank&#34;&gt;ready.mobi&lt;/a&gt; com base em diretrizes do W3C.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTML5 Diff</title>
      <link>https://tableless.github.io/hugo-public/html5-diff/</link>
      <pubDate>Tue, 13 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/html5-diff/</guid>
      <description>&lt;p&gt;O &lt;a href=&#34;http://w3c.org/&#34;&gt;W3C&lt;/a&gt; mantém um documento que compara o HTML4 com as novidades do HTML5. São inúmeras mudanças em elementos mais conhecidos e também em outros elementos mais específicos, utilizados em aplicações e sistemas mais complexos. Sugiro que você leia &lt;a href=&#34;http://www.w3.org/TR/2010/WD-html5-diff-20100624&#34; title=&#34;mundanças no html5&#34;&gt;este documento&lt;/a&gt; e o guarde como referência.&lt;/p&gt;

&lt;p&gt;O HTML5 ainda é um rascunho. Ele está sendo discutido entre o WHATWG e o W3C. Diversos pontos podem ser modificados ainda, por isso é interessante que você entenda e fique por dentro das discussões para que você atualize seu código quando necessário.&lt;/p&gt;

&lt;p&gt;Um dos grandes objetivos do HTML5 é que ele seja retrocompatível. Isso evita o retrabalho de código e faz com que a web retome o rumo da semântica e do código enxuto. Vamos às mudanças:&lt;/p&gt;

&lt;p&gt;O elemento B passa a ter o mesmo nível semântico que um SPAN, mas ainda mantém o estilo de negrito no texto. Contudo, ele não dá nenhuma importância para o text marcado com ele.&lt;/p&gt;

&lt;p&gt;O elemento I também passa a ser um SPAN. O texto continua sendo itálico e para usuários de leitores de tela, a voz utilizada é modificada para indicar ênfase. Isso pode ser útil para marcar frases em outros idiomas, termos técnicos e etc.&lt;/p&gt;

&lt;p&gt;O interessante é que nestes dois casos houve apenas uma mudança semântica. Provavelmente você não precisará modificar códigos onde estes dois elementos são utilizados.&lt;/p&gt;

&lt;p&gt;Voce utilizará o SMALL para fazer literalmente os &amp;#8220;letras miúdas&amp;#8221; de um documento legal, comentários gerais ou até mesmo aqueles pequenos comentários e dicas que colocamos em campos de formulários e etc.&lt;/p&gt;

&lt;p&gt;O HR virou um parágrafo de quebra. Ou seja, ele passa a ter a mesma importância do parágrafo, mas em um nível temático para quebra de linha.&lt;/p&gt;

&lt;p&gt;Os elementos abaixo foram descontinuados por que seus efeitos são apenas visuais:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;basefont&lt;/li&gt;
&lt;li&gt;big&lt;/li&gt;
&lt;li&gt;center&lt;/li&gt;
&lt;li&gt;font&lt;/li&gt;
&lt;li&gt;s&lt;/li&gt;
&lt;li&gt;strike&lt;/li&gt;
&lt;li&gt;tt&lt;/li&gt;
&lt;li&gt;u&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como já era conhecido por alguns, os inputs ganharam novos valores no atributo TYPE. Estes novos valores permitem que browsers e outros user-agents melhorem a experiência do usuário, mostrando calendários e permitindo integração com agenda de contatos e etc. Permite também que os dados possam ser submetidos para o servidor com um formato específico. Valores como TEL, URL e EMAIL já tem efeitos em smartphones como iPhone:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tel&lt;/li&gt;
&lt;li&gt;search&lt;/li&gt;
&lt;li&gt;url&lt;/li&gt;
&lt;li&gt;email&lt;/li&gt;
&lt;li&gt;datetime&lt;/li&gt;
&lt;li&gt;date&lt;/li&gt;
&lt;li&gt;month&lt;/li&gt;
&lt;li&gt;week&lt;/li&gt;
&lt;li&gt;time&lt;/li&gt;
&lt;li&gt;datetime-local&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;range&lt;/li&gt;
&lt;li&gt;color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Os elementos abaixo não foram incluídos na especificação porque não tiveram uso entre os desenvolvedores ou porque sua função foi substituída por outro elemento:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;acronym&lt;/code&gt; não foi incluído porque criou um bocado de confusão entre os desenvolvedores que preferiram utilizar a tag &lt;code&gt;abbr&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;applet&lt;/code&gt; ficou obsoleto em favor da tag &lt;code&gt;object&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;isindex&lt;/code&gt; foi substituído pelo uso de form controls.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;dir&lt;/code&gt; ficou obsoleto em favor da tag &lt;code&gt;ul&lt;/code&gt;. &lt;/ul&gt;
Este atributos foram descontinuados porque modificam a formatação do elemento e suas funções são melhores controladas pelo CSS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;align&lt;/code&gt; como atributo da tag &lt;code&gt;caption&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;iframe&lt;/code&gt;, &lt;code&gt;img&lt;/code&gt;, &lt;code&gt;input&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;object&lt;/code&gt;, &lt;code&gt;legend&lt;/code&gt;, &lt;code&gt;table&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hr&lt;/code&gt;, &lt;code&gt;div&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h2&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;h3&lt;/code&gt;, &lt;code&gt;h4&lt;/code&gt;, &lt;code&gt;h5&lt;/code&gt;, &lt;code&gt;h6&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;p&lt;/code&gt;, &lt;code&gt;col&lt;/code&gt;, &lt;code&gt;colgroup&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tbody&lt;/code&gt;, &lt;code&gt;td&lt;/code&gt;, &lt;code&gt;tfoot&lt;/code&gt;, &lt;code&gt;th&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;thead&lt;/code&gt; e &lt;code&gt;tr&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;alink&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt; e&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vlink&lt;/code&gt; como atributos da tag &lt;code&gt;body&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;background&lt;/code&gt; como atributo da tag &lt;code&gt;body&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;bgcolor&lt;/code&gt; como atributo da tag &lt;code&gt;table&lt;/code&gt;, &lt;code&gt;tr&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;td&lt;/code&gt;, &lt;code&gt;th&lt;/code&gt; e &lt;code&gt;body&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;border&lt;/code&gt; como atributo da tag &lt;code&gt;table&lt;/code&gt; e&lt;/p&gt;

&lt;p&gt;&lt;code&gt;object&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;cellpadding&lt;/code&gt; e &lt;code&gt;cellspacing&lt;/code&gt; como atributos da tag&lt;/p&gt;

&lt;p&gt;&lt;code&gt;table&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;char&lt;/code&gt; e &lt;code&gt;charoff&lt;/code&gt; como atributos da tag&lt;/p&gt;

&lt;p&gt;&lt;code&gt;col&lt;/code&gt;, &lt;code&gt;colgroup&lt;/code&gt;, &lt;code&gt;tbody&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;td&lt;/code&gt;, &lt;code&gt;tfoot&lt;/code&gt;, &lt;code&gt;th&lt;/code&gt;, &lt;code&gt;thead&lt;/code&gt;&lt;/p&gt;
e &lt;code&gt;tr&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;clear&lt;/code&gt; como atributo da tag &lt;code&gt;br&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;compact&lt;/code&gt; como atributo da tag &lt;code&gt;dl&lt;/code&gt;, &lt;code&gt;menu&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ol&lt;/code&gt; e &lt;code&gt;ul&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;frame&lt;/code&gt; como atributo da tag &lt;code&gt;table&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;frameborder&lt;/code&gt; como atributo da tag &lt;code&gt;iframe&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;height&lt;/code&gt; como atributo da tag &lt;code&gt;td&lt;/code&gt; e &lt;code&gt;th&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;hspace&lt;/code&gt; e &lt;code&gt;vspace&lt;/code&gt; como atributos da tag&lt;/p&gt;

&lt;p&gt;&lt;code&gt;img&lt;/code&gt; e &lt;code&gt;object&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;marginheight&lt;/code&gt; e &lt;code&gt;marginwidth&lt;/code&gt; como atributos da tag&lt;/p&gt;

&lt;p&gt;&lt;code&gt;iframe&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;noshade&lt;/code&gt; como atributo da tag &lt;code&gt;hr&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;nowrap&lt;/code&gt; como atributo da tag &lt;code&gt;td&lt;/code&gt; e &lt;code&gt;th&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;rules&lt;/code&gt; como atributo da tag &lt;code&gt;table&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;scrolling&lt;/code&gt; como atributo da tag &lt;code&gt;iframe&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;size&lt;/code&gt; como atributo da tag &lt;code&gt;hr&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;type&lt;/code&gt; como atributo da tag &lt;code&gt;li&lt;/code&gt;, &lt;code&gt;ol&lt;/code&gt; e&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ul&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;valign&lt;/code&gt; como atributo da tag &lt;code&gt;col&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;colgroup&lt;/code&gt;, &lt;code&gt;tbody&lt;/code&gt;, &lt;code&gt;td&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tfoot&lt;/code&gt;, &lt;code&gt;th&lt;/code&gt;, &lt;code&gt;thead&lt;/code&gt; e&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tr&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;width&lt;/code&gt; como atributo da tag &lt;code&gt;hr&lt;/code&gt;, &lt;code&gt;table&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;td&lt;/code&gt;, &lt;code&gt;th&lt;/code&gt;, &lt;code&gt;col&lt;/code&gt;, &lt;code&gt;colgroup&lt;/code&gt;&lt;/p&gt;
e &lt;code&gt;pre&lt;/code&gt;. &lt;/li&gt; &lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;Alguns atributos do HTML4 não são mais permitidos no HTML5. Se eles tiverem algum impacto negativo na compatibilidade de algum user-agent eles serão discutidos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;rev&lt;/code&gt; e &lt;code&gt;charset&lt;/code&gt; como atributos da tag&lt;/p&gt;

&lt;p&gt;&lt;code&gt;link&lt;/code&gt; e &lt;code&gt;a&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;shape&lt;/code&gt; e &lt;code&gt;coords&lt;/code&gt; como atributos da tag&lt;/p&gt;

&lt;p&gt;&lt;code&gt;a&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;longdesc&lt;/code&gt; como atributo da tag &lt;code&gt;img&lt;/code&gt; and&lt;/p&gt;

&lt;p&gt;&lt;code&gt;iframe&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;target&lt;/code&gt; como atributo da tag &lt;code&gt;link&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;nohref&lt;/code&gt; como atributo da tag &lt;code&gt;area&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;profile&lt;/code&gt; como atributo da tag &lt;code&gt;head&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;version&lt;/code&gt; como atributo da tag &lt;code&gt;html&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;name&lt;/code&gt; como atributo da tag &lt;code&gt;img&lt;/code&gt; (use &lt;code&gt;id&lt;/code&gt;
instead).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;scheme&lt;/code&gt; como atributo da tag &lt;code&gt;meta&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;archive&lt;/code&gt;, &lt;code&gt;classid&lt;/code&gt;, &lt;code&gt;codebase&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;codetype&lt;/code&gt;, &lt;code&gt;declare&lt;/code&gt; e &lt;code&gt;standby&lt;/code&gt;&lt;/p&gt;
como atributos da tag &lt;code&gt;object&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;valuetype&lt;/code&gt; e &lt;code&gt;type&lt;/code&gt; como atributos da tag&lt;/p&gt;

&lt;p&gt;&lt;code&gt;param&lt;/code&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;axis&lt;/code&gt; e &lt;code&gt;abbr&lt;/code&gt; como atributos da tag &lt;code&gt;td&lt;/code&gt;
e &lt;code&gt;th&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;scope&lt;/code&gt; como atributo da tag &lt;code&gt;td&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Há outras mudanças mais profundas, por isso sugiro que você leia esse documento inteiro: &lt;a href=&#34;http://www.w3.org/TR/2010/WD-html5-diff-20100624&#34; title=&#34;mundanças no html5&#34;&gt;W3C HTML5 Diff&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Estes artigos também podem ajudar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/contedo-flash-e-html&#34;&gt;Conteúdo, Flash e HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/processos-adocao-padroes&#34;&gt;Processos de Adoção e Padrões&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/html5-estrutura-semantica&#34;&gt;HTML5 &amp;#8211; Mudanças na estrutura e Semântica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/ah-o-maravilhoso-mundo-real&#34;&gt;Ah! O maravilhoso mundo real&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Colocar Rodapé fixo no fim da página</title>
      <link>https://tableless.github.io/hugo-public/colocar-rodape-fixo-no-bottom/</link>
      <pubDate>Tue, 12 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/colocar-rodape-fixo-no-bottom/</guid>
      <description>&lt;p&gt;Você já precisou ter o rodapé fixo no fim da página algum dia. Normalmente os clientes chatos acham feio aquele rodapé terminando no meio da página quando há pouco conteúdo. Há uma técnica no CSS que resolve isso. Não funciona no IE6, já aviso agora. Na verdade, tem um jeito de funcionar, mas não quero te acostumar mal. 🙂&lt;/p&gt;

&lt;p&gt;Lembrando que você pode fazer isso facilmente com JQuery.&lt;/p&gt;

&lt;p&gt;Suponha que você tenha o código HTML:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html PUBLIC &#34;-//W3C//DTD XHTML 1.0 Strict//EN&#34;
    &#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&#34;&amp;gt;

&amp;lt;html xmlns=&#34;http://www.w3.org/1999/xhtml&#34; xml:lang=&#34;en&#34; lang=&#34;en&#34;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=utf-8&#34;/&amp;gt;

    &amp;lt;title&amp;gt;Tableless.com.br&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    
&amp;lt;div class=&#34;geral&#34;&amp;gt;
    &amp;lt;div class=&#34;header&#34;&amp;gt;
        HEADER
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;aside fleft&#34;&amp;gt;
        ESQUERDA
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;aside fright&#34;&amp;gt;
        DIREITA
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;content&#34;&amp;gt;
        &amp;lt;p&amp;gt;
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin augue erat, ullamcorper pulvinar malesuada ultricies, mollis non magna. Curabitur quis nisi ut ligula ultricies gravida. Suspendisse elit justo, vulputate in facilisis sed, tristique id nisi. Maecenas risus quam, suscipit eu vehicula ut, ultricies in neque. Donec gravida tristique turpis ut interdum. Donec lacinia nisi id enim lacinia sit amet facilisis est ullamcorper. Curabitur ipsum libero, sollicitudin nec rhoncus quis, congue non ipsum. Etiam at eros dolor. Mauris non erat vitae leo faucibus fermentum. In consectetur, diam eget faucibus dignissim, urna justo pretium dui, nec eleifend neque velit vitae odio. Nam et tristique turpis. In dictum commodo sem ut dignissim. In convallis quam non tortor posuere sed ornare nulla pulvinar. Suspendisse placerat turpis in tortor rutrum nec mollis nulla posuere. Integer tellus est, rhoncus ut sagittis eget, mattis a velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque gravida posuere orci nec ornare. Donec elit nulla, aliquam eget cursus a, commodo sed odio.
        &amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;
        Duis id metus enim, sed dignissim magna. Quisque dapibus pulvinar diam eget adipiscing. Ut aliquet ipsum quis lorem elementum lacinia. Vestibulum feugiat ultrices orci, vel sollicitudin nibh rutrum eu. In gravida tincidunt ornare. Aenean vestibulum leo eu orci egestas semper. Proin euismod dapibus tempor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Suspendisse rutrum purus eget lectus ultricies a consectetur ante laoreet. Phasellus ullamcorper gravida risus vitae convallis. Curabitur ante lorem, faucibus in tincidunt quis, ullamcorper at lectus. Fusce fermentum blandit varius. Donec a quam id massa bibendum commodo sit amet vel felis. Sed magna nibh, convallis nec dignissim non, vestibulum adipiscing ipsum. Mauris cursus fringilla tortor eu feugiat. Vivamus vestibulum dapibus justo, porttitor luctus nisi posuere at. Nunc mi elit, suscipit id venenatis at, suscipit nec purus. Donec malesuada fringilla tempor. Pellentesque vehicula diam a magna commodo sagittis. Nulla facilisi. 
        &amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;footer&#34;&amp;gt;
        FOOTER
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/pre&gt;

&lt;p&gt;E o seguinte CSS:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;*  {
    margin:0;
    padding:0;
}

html, body {height:100%;}

.geral {
    min-height:100%;
    position:relative;
    width:800px;
}

.footer {
    position:absolute;
    bottom:0;
    width:100%;
}

.content {overflow:hidden;}
.aside {width:200px;}
.fleft {float:left;}
.fright {float:right;}
&lt;/pre&gt;

&lt;p&gt;Na linha 6, você faz com que as tags body e html tenham 100% de altura. Isso fará com que o rodapé entenda que o limite dos dois elementos seja o final da janela do navegador.&lt;/p&gt;

&lt;p&gt;Na linha 8, defino que a largura mínima do div GERAL, que é o div que envolve todo o site, seja de 100%. E defino um position: relative; para que o footer seja referenciado por ele.&lt;/p&gt;

&lt;p&gt;Na linha 14, eu defino um position: absolute; e bottom:0; para footer, forçando sempre para o final do div.&lt;/p&gt;

&lt;p&gt;Se houver pouco conteúdo o Rodapé fica lá embaixo, se houver muito, o rodapé desce junto com o conteúdo.&lt;/p&gt;

&lt;p&gt;Funciona em IE7+ e em bons browsers.&lt;/p&gt;

&lt;p&gt;Link para o arquivo de exemplo: &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2010/01/footer.html&#34;&gt;Footer fixo no Rodapé&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Convertido – Menu (Livraria Cultura)</title>
      <link>https://tableless.github.io/hugo-public/convertido-menu-livraria-cultura/</link>
      <pubDate>Tue, 12 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/convertido-menu-livraria-cultura/</guid>
      <description>&lt;p&gt;Fazer menus com CSS é relativamente simples. Não precisamos de muitas linhas de código para fazer um menu totalmente personalizado. O Menu da &lt;a href=&#34;http://www.livrariacultura.com.br/&#34;&gt;Livraria Cultura&lt;/a&gt; é feito com Tabela. Na verdade, todo o site deles é feito com Tabelas, mas esse é outro assunto.&lt;/p&gt;

&lt;p&gt;Você pode ver o &lt;a href=&#34;http://tableless.com.br/convertidos/livraria-cultura/menu/original/&#34;&gt;menu deles aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O Código HTML do menu deles é:&lt;/p&gt;

&lt;pre lang=&#34;html&#34; line=&#34;1&#34;&gt;&lt;table border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34; width=&#34;100%&#34;&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul id=&#34;jsddm&#34;&gt;
        &lt;li id=&#34;mainmenu-livro&#34; style=&#34;height: 22px; width: 79px;&#34;&gt;
          &lt;a href=&#34;https://tableless.github.io/hugo-public/scripts/cultura/index.asp?sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;&lt;img src=&#34;imagem/_topo/abas/novo_livros.gif&#34; alt=&#34;Livros&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;
                    &lt;ul id=&#34;mainmenu-livro-sub&#34; style=&#34;padding: 5px; background: rgb(11, 161, 176) none repeat scroll 0% 0%; -moz-background-clip: border; -moz-background-origin: padding; -moz-background-inline-policy: continuous; position: absolute; width: 69px; z-index: 350; margin-top: -2px; list-style-type: inherit; list-style-image: inherit; list-style-position: inherit; visibility: hidden;&#34;&gt;
            &lt;li&gt;
              &lt;a style=&#34;color: rgb(255, 255, 255);&#34; href=&#34;https://tableless.github.io/hugo-public/scripts/cultura/index.asp?lingua=POR&amp;sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;Português&lt;/a&gt;
              &lt;a style=&#34;color: rgb(255, 255, 255);&#34; href=&#34;https://tableless.github.io/hugo-public/scripts/cultura/index.asp?lingua=ING&amp;sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;Inglês&lt;/a&gt;
              &lt;a style=&#34;color: rgb(255, 255, 255);&#34; href=&#34;https://tableless.github.io/hugo-public/scripts/cultura/index.asp?lingua=ESP&amp;sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;Espanhol&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a style=&#34;color: rgb(255, 255, 255);&#34; href=&#34;https://tableless.github.io/hugo-public/scripts/cultura/index.asp?lingua=FRA&amp;sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;Francês&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a style=&#34;color: rgb(255, 255, 255);&#34; href=&#34;https://tableless.github.io/hugo-public/scripts/cultura/index.asp?lingua=ITA&amp;sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;Italiano&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a style=&#34;color: rgb(255, 255, 255);&#34; href=&#34;https://tableless.github.io/hugo-public/scripts/cultura/index.asp?lingua=ALE&amp;sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;Alemão&lt;/a&gt;
              
              
            &lt;/li&gt;
                        
          &lt;/ul&gt;
                
        &lt;/li&gt;
            
      &lt;/ul&gt;
            
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#34;https://tableless.github.io/hugo-public/scripts/videos/index.asp?sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;&lt;img src=&#34;imagem/_topo/abas/b_dvds2.gif&#34; alt=&#34;DVDs&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#34;https://tableless.github.io/hugo-public/scripts/musica/index.asp?sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;&lt;img src=&#34;imagem/_topo/abas/b_cds2.gif&#34; alt=&#34;CDs&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#34;https://tableless.github.io/hugo-public/scripts/games/index.asp?sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;&lt;img src=&#34;imagem/_topo/abas/b_games2.gif&#34; alt=&#34;Games&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;
    &lt;/td&gt;
                                   
    
    &lt;td&gt;
      &lt;a href=&#34;https://tableless.github.io/hugo-public/scripts/hotsites/index.asp?sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;&lt;img src=&#34;imagem/_topo/abas/novo_sitesesp.gif&#34; alt=&#34;Hotsites&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;
    &lt;/td&gt;
    
        
    
    &lt;td&gt;
      &lt;a href=&#34;https://tableless.github.io/hugo-public/scripts/eventos/index.asp?sid=89120138612112390515516911&amp;k5=2FEC93B&amp;uid=&#34;&gt;&lt;img src=&#34;imagem/_topo/abas/novo_eventos.gif&#34; alt=&#34;Eventos&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;
    &lt;/td&gt;
        
    
    &lt;td width=&#34;100%&#34;&gt;
      
    &lt;/td&gt;
    
  &lt;/tr&gt;
  
&lt;/table&gt;
&lt;/pre&gt;

&lt;p&gt;Eu não encontrei qual seria o pedaço do CSS referente ao menu, por isso eu não vou colar aqui.&lt;/p&gt;

&lt;p&gt;O problema da versão do menu deles é que é todo feito com imagens e usa muita tabela. Há também código CSS inline. Isso prejudica leitores de tela, prejudica Google, e manutenção.&lt;/p&gt;

&lt;p&gt;A versão que sugerimos é feita utilizando a técnica &lt;a href=&#34;http://tableless.com.br/image-replacement-x-imagens&#34;&gt;Image-Replacement&lt;/a&gt;. Segue abaixo o código HTML:&lt;/p&gt;

&lt;pre lang=&#34;html&#34; line=&#34;1&#34;&gt;&lt;div class=&#34;nav&#34;&gt;
  &lt;ul&gt;
    &lt;li class=&#34;navlivros&#34;&gt;
      &lt;a href=&#34;#&#34;&gt;Livros&lt;/a&gt;
                &lt;ul&gt;
        &lt;li&gt;
          &lt;a href=&#34;#&#34;&gt;Português&lt;/a&gt;
        &lt;/li&gt;
                        
        
        &lt;li&gt;
          &lt;a href=&#34;#&#34;&gt;Inglês&lt;/a&gt;
        &lt;/li&gt;
                        
        
        &lt;li&gt;
          &lt;a href=&#34;#&#34;&gt;Espanhol&lt;/a&gt;
        &lt;/li&gt;
                        
        
        &lt;li&gt;
          &lt;a href=&#34;#&#34;&gt;Francês&lt;/a&gt;
        &lt;/li&gt;
                        
        
        &lt;li&gt;
          &lt;a href=&#34;#&#34;&gt;Italiano&lt;/a&gt;
        &lt;/li&gt;
                        
        
        &lt;li&gt;
          &lt;a href=&#34;#&#34;&gt;Alemão&lt;/a&gt;
        &lt;/li&gt;
                    
      &lt;/ul&gt;
            
    &lt;/li&gt;
            
    
    &lt;li class=&#34;navdvd&#34;&gt;
      &lt;a href=&#34;#&#34;&gt;DVDs&lt;/a&gt;
    &lt;/li&gt;
            
    
    &lt;li class=&#34;navcd&#34;&gt;
      &lt;a href=&#34;#&#34;&gt;CDs&lt;/a&gt;
    &lt;/li&gt;
            
    
    &lt;li class=&#34;navgames&#34;&gt;
      &lt;a href=&#34;#&#34;&gt;Games&lt;/a&gt;
    &lt;/li&gt;
            
    
    &lt;li class=&#34;navsitesesp&#34;&gt;
      &lt;a href=&#34;#&#34;&gt;Sites especiais&lt;/a&gt;
    &lt;/li&gt;
            
    
    &lt;li class=&#34;naveventos&#34;&gt;
      &lt;a href=&#34;#&#34;&gt;Eventos&lt;/a&gt;
    &lt;/li&gt;
        
  &lt;/ul&gt;
  
&lt;/div&gt;
&lt;/pre&gt;

&lt;p&gt;Abaixo o Código CSS:&lt;/p&gt;

&lt;pre lang=&#34;CSS&#34; line=&#34;1&#34;&gt;* {
    margin:0;
    padding:0;
    list-style:none;
}

.nav {padding:10px;}

.nav ul li {float:left; position:relative;}

/* Define que todos os submenus aparecem quando passarmos o mouse no LI &#34;pai&#34; */
.nav ul li:hover ul {display:block;}

/* Define o estilo dos links */
.nav ul li a {
    float:left;
    height:22px;
    text-indent:-9999px;
    overflow:hidden;
    background-position:center center;
    background-repeat:no-repeat;
}

/* Adiciona o background e a largura nos elementos do menu */
.nav ul li.navlivros a {width:79px; background-image:url(imagem/_topo/abas/novo_livros.gif);}
.nav ul li.navdvd a {width:79px; background-image:url(imagem/_topo/abas/b_dvds2.gif);}
.nav ul li.navcd a {width:79px; background-image:url(imagem/_topo/abas/b_cds2.gif);}
.nav ul li.navgames a {width:79px; background-image:url(imagem/_topo/abas/b_games2.gif);}
.nav ul li.navsitesesp a {width:149px; background-image:url(imagem/_topo/abas/novo_sitesesp.gif);}
.nav ul li.naveventos a {width:109px; background-image:url(imagem/_topo/abas/novo_eventos.gif);}

/** Define que a UL do submenu está escondida por default. E define o visual do submenu */
.nav ul li ul {
    display:none;
    background:#00A2B0;
    width:70px;
    position:absolute; top:22px; left:0px;
    padding:4px;
}

/* Resetamos todo o estilo dos links do submenu. Isso poderia ser evitado se o IE7 conhecesse seletores complexos ou com JQuery */
.nav ul li ul li a {
    font:13px verdana, arial, tahoma, sans-serif;
    background-image:none !important;
    text-indent:0;
    float:none;
    color:white;
}

.nav ul li ul li a:hover {text-decoration:none;}
&lt;/pre&gt;

&lt;p&gt;Veja o resultado do &lt;a href=&#34;http://tableless.com.br/convertidos/livraria-cultura/menu/correto/&#34;&gt;menu reconstruído aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O Submenu na versão original, eu fiz utilizando apenas CSS. Testei em Firefox e IE7/8. Funciona que é uma beleza. Sem Javascript, sem JQuery, nem nada.&lt;/p&gt;

&lt;p&gt;Se o IE7 já conhecesse seletores complexos, não precisaríamos resetar todos os links dos submenus como fizemos na linha 35.&lt;/p&gt;

&lt;p&gt;O Código CSS, embora pareça longo, ele está organizado para ser fácil de adicionar outros elementos.&lt;/p&gt;

&lt;p&gt;Sempre que escrever um CSS, pense sempre no futuro. Um CSS para resolver um problema imediato, normalmente tem menos código. Mas ele resolve apenas aquele problema específico. Se você fizer um CSS abrangente e pensando no futuro, seu código fatalmente vai ficar maior. Mas você terá menos retrabalho ao fazer as alterações futuras. Eu prefiro.&lt;/p&gt;

&lt;p&gt;Pegue aqui os dois códigos para estudar: &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2010/01/livraria-cultura.zip&#34;&gt;Reconstrução Menu Livraria Cultura&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ah, o maravilhoso mundo real</title>
      <link>https://tableless.github.io/hugo-public/ah-o-maravilhoso-mundo-real/</link>
      <pubDate>Thu, 10 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/ah-o-maravilhoso-mundo-real/</guid>
      <description>&lt;p&gt;O Diego publicou, há mais de uma semana, um &lt;a href=&#34;http://tableless.com.br/se-prepare-para-a-revolucao&#34;&gt;artigo sobre o impacto da mudança de estratégia do W3C&lt;/a&gt; em relação ao ciclo de vida de seus padrões. O artigo gerou algumas opiniões contrárias nos comentários, em relação ao fato de ele ter dito que bordas arredondadas são mais importantes que a web semântica e em relação à estratégia de especificações modulares do W3C. Vou compartilhar minha opinião sobre os dois pontos.&lt;/p&gt;

&lt;p&gt;Em primeiro lugar, é importante distinguir o ideal daquilo que é possível fazer. Li um bocado sobre RDF e ontologias há uns dez anos. Li &amp;#8220;A Revolução Inacabada&amp;#8221;, vi o RSS nascer e se tornar popular, vi as primeiras aplicações entenderem o formato. RDF falhou. Dez anos se passaram e continuamos escrevendo HTML para ser lido por navegadores e só. Há poucos exemplos de aplicações semânticas na vida real, e a maioria seria desenvolvida de uma forma ou de outra.&lt;/p&gt;

&lt;p&gt;Há muita gente, por exemplo, definindo seu próprio padrão de XML para trocar dados com sistemas parceiros. Quantos desses estão usando RDF, com uma ontologia interpretada automaticamente por sistemas que &amp;#8220;descobrem&amp;#8221; os serviços um do outro? Ou seja, não há novidades nisso nos últimos dez anos.&lt;/p&gt;

&lt;p&gt;Escrever HTML bom é importante, porque vai ajudar o Google a indexar seu site e vai facilitar a vida de quem tentar HTML parsing nele. Mas, seja sincero, você tem mesmo esperanças de que alguém vá lê-lo como XML? Vê alguma vantagem real em validar seu código como XHTML, além de provar a si próprio que fez tudo direito? E onde está a promessa dos microformats? Microformats só fazem diferença se forem usados por muita gente. Ninguém vai fazer um parser de um formato usado em apenas um site. Você consegue citar, de cabeça, cinco sites que usem microformats e não foram feitos por você? Ah, claro, não vale incluir na lista o microformats.org.&lt;/p&gt;

&lt;p&gt;Nem RSS é um bom exemplo de aplicação de semântica XML. Existem pelo menos dois formatos populares do padrão, além do padrão Atom, que serve para a mesma coisa. E não sei de nenhum leitor de RSS de sucesso que faça parsing dos feeds como XML. O que todos fazem é ler e interpretar a string. É isso mesmo que você entendeu, quase tão bom quanto um CSV! Outro exemplo digno de nota é o SOAP, que foi criado para fornecer aos webservices a capacidade de &amp;#8220;autodescoberta&amp;#8221;. Você conhece alguém que use isso de verdade? Já viu algum robô que varre a web em busca de serviços e entende sozinho como usá-los? SOAP só tem a vantagem de oferecer tooltips para ajudar os programadores .Net que usam Visual Studio. Enquanto isso, lá fora, XMLRPC e REST (com JSON) estão mudando o mundo.&lt;/p&gt;

&lt;p&gt;Por que essas tecnologias falharam, embora pareçam todas boas idéias? Meu palpite é que elas exigiam um raciocínio de longo prazo, um tipo de aposta, que é muito difícil de conseguir. Embora XHTML, Microformats ou SOAP sejam idéias muito boas, aplicá-las em seu site só vai ter valor se muito mais gente o fizer. Se você aplicar o formato sozinho vai perder seu tempo.&lt;/p&gt;

&lt;p&gt;O que é muito diferente de, por exemplo, deixar de usar tabelas para layout, escrever bom HTML ou usar jQuery. Essas coisas lhe devolvem um benefício imediato. Se deixar de usar tabelas para layout vai ter um site mais leve e vai perder muito menos tempo quando tiver que mudar o layout, se escrever HTML bom vai ter menos trabalho para escrever CSS, para fazer o CSS mobile e o de impressão, e se usar jQuery vai escrever javascript em um terço do tempo.&lt;/p&gt;

&lt;p&gt;Note que esses três exemplos também tiram benefícios do fato de muita gente estar usando. Há muitos bons lugares para se aprender HTML e CSS, há muitos sistemas Open Source que já trabalham gerando código bom e os buscadores entendem a semântica do bom HTML. Mas você não depende desses benefícios para tomar a decisão de uso. Quando começamos, há dez anos, a fazer layouts tableless, não aparecíamos melhor no Google e praticamente não havia sistemas gerando HTML direito. Mas o fizemos assim mesmo porque os benefícios imediatos compensavam o esforço.&lt;/p&gt;

&lt;p&gt;É por isso que eu temo que nunca teremos uma web semântica de verdade, e estamos condenados a fazer HTML parsing para sempre.&lt;/p&gt;

&lt;p&gt;Há exceções. RSS, por exemplo. RSS é uma sombra do que poderia, mas é um padrão de sucesso, amplamente adotado. E não pode ser explicado com minha teoria do benefício individual imediato. Se você estiver usando RSS sozinho no mundo, não terá nenhum benefício. Talvez o sucesso do RSS se deva ao fato de precisar de uma pequena rede de usuários para oferecer um grande benefício.&lt;/p&gt;

&lt;p&gt;Você já se perguntou como foram vendidos os primeiros aparelhos de FAX? Ter um FAX só faz sentido se mais gente tiver. Foram vendidos aos pares. As empresas o compravam para trocar documentos entre a matriz e as filiais. O fato de poder trocar documentos com o resto do mundo era, no início, um &amp;#8220;benefício adicional&amp;#8221;. Se você precisa trocar conteúdo com um site parceiro e vocês forem os únicos usuários de RSS no mundo, terá valido a pena. Conforme a comunidade de usuários aumentava, o valor de ter RSS crescia. Muita gente começou a usar Bloglines e todo mundo queria entrar na festa.&lt;/p&gt;

&lt;p&gt;Há alguns anos eu percorri o país com o pessoal da Locaweb comparando o modelo de adoção do RSS com o que eu imaginava que seriam os microformats. Eu estava errado. Pense um segundo no formato de reviews dos microformats. Qual o real benefício de usá-lo? Há alguma aplicação indispensável, onde você realmente quer estar, baseada em hReview? Para que você vai perder seu tempo?&lt;/p&gt;

&lt;p&gt;Será que não estamos resolvendo o problema errado? Quando o Diego diz que bordas arredondadas são mais importantes que RDF, será que ele não tem razão? Para meus clientes, hoje, bordas arredondadas com CSS significam um site mais rápido, mais barato (menos tempo gasto recortando imagens) e, para os sites muito visitados, economia de banda. É uma diferença pequena, mas é uma vantagem. E RDF? Além de oferecer RSS, que nem vai ser lido como XML, o que eu posso fazer de real hoje com RDF para meus clientes?&lt;/p&gt;

&lt;p&gt;Desculpe se meu raciocínio parece mesquinho. Ele é. Estou tentando ser realista. Uma das principais influências sobre as decisões humanas é a inércia, e não acredito que o mundo vá, num futuro próximo, adotar de maneira revolucionária o RDF ou mesmo o XHTML. Ainda acho essas idéias fantásticas, só não sei se são possíveis.&lt;/p&gt;

&lt;p&gt;O realismo também me faz crer que a nova estratégia de especificações modulares do W3C é uma coisa boa. Sofremos décadas com implementações parciais do HTML 4 e do CSS 2. Agora vamos assumir a realidade inevitável. Os desenvolvedores de navegador se sentirão mais à vontade para dizer a você o que funciona ou não. E não precisamos esperar anos para a definição de um padrão. Podemos usar os recursos com os quais o consórcio já concordou hoje. Leva mesmo alguns anos para o W3C bater o martelo sobre determinado padrão, e as especificações modulares representam um ciclo de releases muito mais dinâmico.&lt;/p&gt;

&lt;p&gt;Já temos um acordo sobre CSS Transform, bordas arredondadas, múltiplos backgrounds, repetição no DOM, validadores de formulários, SVG, DOM Storage, querySelectors e uma série de outros recursos legais. Por que esperar até a próxima Olimpíada para dizer aos desenvolvedores de browsers: &amp;#8220;Ok, pessoal, fechamos tudo, HTML 5 e CSS 3 já são padrões, podem implementar&amp;#8221;? De qualquer maneira, a adoção modular das especificações do W3C é inevitável. Embora a especificação tenha saído inteira, a adoção foi modular no HTML 3, no HTML 4, no CSS 2. Sabendo que não vai ser diferente mesmo, não é melhor que tenhamos bonitas tabelas de compatibilidade entre o que existe e o que cada navegador suporta?&lt;/p&gt;

&lt;p&gt;Dá uma olhada na &lt;a href=&#34;http://www.w3.org/Style/CSS/current-work&#34;&gt;lista de módulos do CSS3&lt;/a&gt;. Você não quer esperar isso tudo ficar pronto para ter bordas arredondadas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introdução ao CSS Animation</title>
      <link>https://tableless.github.io/hugo-public/introducao-ao-css-animation/</link>
      <pubDate>Mon, 29 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/introducao-ao-css-animation/</guid>
      <description>

&lt;p&gt;Tudo o que eu falarei aqui sobre &lt;strong&gt;CSS Animation&lt;/strong&gt; e &lt;strong&gt;CSS Transforms&lt;/strong&gt; só podem ser testados no Safari ou em qualquer outro browser que utilize as últimas versões do Webkit. Há algumas aplicações que modificam muito o Webkit para usá-lo, pode ser que nestes, não funcione direito. Mesmo assim, infelizmente, o &lt;a href=&#34;http://webkit.org/&#34;&gt;Webkit&lt;/a&gt; (por enquanto) é o único motor que suporta esse tipo de característica.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSS Animation&lt;/strong&gt; permite que modifiquemos propriedades do CSS e tenhamos o resultado ali, na hora.&lt;/p&gt;

&lt;p&gt;Para isso, usaremos uma propriedade chamada &lt;strong&gt;transition&lt;/strong&gt;. Essa propriedade é divida em 3 propriedades: &lt;strong&gt;transition-property&lt;/strong&gt; que é a propriedade que deverá ser animada, &lt;strong&gt;transition-duration&lt;/strong&gt; é quanto tempo a transição irá durar, e &lt;strong&gt;transition-timing-function&lt;/strong&gt; é o tipo de transição.&lt;/p&gt;

&lt;p&gt;Imagine o seguinte código:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;div {&lt;/p&gt;

&lt;p&gt;border: 10px solid black;&lt;/p&gt;

&lt;p&gt;width: 300px;&lt;/p&gt;

&lt;p&gt;height:300px;&lt;/p&gt;

&lt;p&gt;background:gray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;div:hover {&lt;/p&gt;

&lt;p&gt;background:red;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;O código acima faz com que quando o usuário passe o mouse em cima do DIV, o background mude de cor.&lt;/p&gt;

&lt;p&gt;Vamos adicionar a propriedade transition agora. Note o código abaixo:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;div {&lt;/p&gt;

&lt;p&gt;border: 10px solid black;&lt;/p&gt;

&lt;p&gt;width: 300px;&lt;/p&gt;

&lt;p&gt;height:300px;&lt;/p&gt;

&lt;p&gt;background:gray;&lt;/p&gt;

&lt;p&gt;-webkit-transition: background 1s linear;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;div:hover {&lt;/p&gt;

&lt;p&gt;background:red;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;O CSS Animation entrará em ação com a propriedade &lt;strong&gt;transition&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Note que a propriedade tem o prefixo do Webkit, indicando que isso só funciona em browsers com este motor.&lt;/p&gt;

&lt;p&gt;A propriedade &lt;strong&gt;transition&lt;/strong&gt; tem 3 valores: o primeiro valor é a propriedade que você quer alterar. O segundo valor é o tempo que essa animação durará. O terceiro valor é tipo de transição.&lt;/p&gt;

&lt;p&gt;Você pode fazer várias transições em, separando os valores por &lt;em&gt;vírgulas&lt;/em&gt;. Veja o exemplo:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;div {&lt;/p&gt;

&lt;p&gt;border: 10px solid black;&lt;/p&gt;

&lt;p&gt;width: 300px;&lt;/p&gt;

&lt;p&gt;height:300px;&lt;/p&gt;

&lt;p&gt;background:gray;&lt;/p&gt;

&lt;p&gt;-webkit-transition: background 1s linear, width 1s linear;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;div:hover {&lt;/p&gt;

&lt;p&gt;background:red;&lt;/p&gt;

&lt;p&gt;width: 400px;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Neste caso, iremos animar a largura do DIV e ao mesmo tempo, mudaremos a cor de background.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/06/cssanimation.html&#34; title=&#34;Exemplo de CSS Animation&#34;&gt;Exemplo de CSS Animation&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;css-transform&#34;&gt;CSS Transform&lt;/h4&gt;

&lt;p&gt;Tudo isso fica mais interessante se utilizarmos algumas propriedades do CSS Transform.&lt;/p&gt;

&lt;p&gt;O CSS Transform é uma das características do CSS que tranformam a forma original dos elementos do HTML. Por exemplo, inclinação. Veja abaixo:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;div {&lt;/p&gt;

&lt;p&gt;border: 10px solid black;&lt;/p&gt;

&lt;p&gt;width: 300px;&lt;/p&gt;

&lt;p&gt;height:300px;&lt;/p&gt;

&lt;p&gt;background:gray;&lt;/p&gt;

&lt;p&gt;-webkit-transition: background 1s linear, width 1s linear;&lt;/p&gt;

&lt;p&gt;-webkit-transform: rotate(3deg);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;No código acima, utilizei a propriedade &lt;strong&gt;transform&lt;/strong&gt; com o valor &lt;strong&gt;rotate&lt;/strong&gt;. Este valor rotaciona o elemento em sentido horário para um determinado grau. No caso acima, ele está inclinando o elemento com o valor de 3 graus.&lt;/p&gt;

&lt;p&gt;Podemos fazer uma animação interessante utilizando o &lt;strong&gt;transform: rotate&lt;/strong&gt;. Teste o código CSS abaixo:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;div {&lt;/p&gt;

&lt;p&gt;border: 10px solid black;&lt;/p&gt;

&lt;p&gt;width: 300px;&lt;/p&gt;

&lt;p&gt;height:300px;&lt;/p&gt;

&lt;p&gt;background:gray;&lt;/p&gt;

&lt;p&gt;-webkit-transform: rotate(0deg);&lt;/p&gt;

&lt;p&gt;-webkit-transition: background 1s linear, width 0.5s linear, -webkit-transform 1s linear;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;div:hover {&lt;/p&gt;

&lt;p&gt;background: red;&lt;/p&gt;

&lt;p&gt;width: 400px;&lt;/p&gt;

&lt;p&gt;-webkit-transform: rotate(360deg);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;O código acima fará com que o elemento gire 360 graus.&lt;/p&gt;

&lt;h4 id=&#34;testei-no-iphone&#34;&gt;Testei no iPhone&lt;/h4&gt;

&lt;p&gt;Fiz um teste rápido no iPhone. No iPhone, a função de HOVER é acionada quando o elemento é clicado. As animações funcionam perfeitamente, com exceção do giro de 360 graus que pára no meio e o elemento volta a posição normal.&lt;/p&gt;

&lt;p&gt;Quem tiver algum celular Nokia com browser baseado em Webkit, faça uns testes e comenta com a galera os resultados.&lt;/p&gt;

&lt;h4 id=&#34;ainda-é-um-rascunho-no-w3c&#34;&gt;Ainda é um rascunho no W3C&lt;/h4&gt;

&lt;p&gt;Tudo isso ainda é um &lt;a href=&#34;http://www.w3.org/TR/css3-animations/#introduction&#34;&gt;rascunho lá no W3C&lt;/a&gt;. Mas a Apple já propôs sua idéia de como poderia ser o funcionamento do CSS Transformations aqui:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.nabble.com/Apple%27s-Proposal-for-CSS-Transformations-to13615345.html&#34;&gt;Apple&amp;#8217;s Proposal for CSS Transformations&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O interessante é que os browsers hoje em dia estão andando com as próprias pernas. Na verdade não apenas os browsers, mas todos os desenvolvedores. Ninguém está esperando o W3C para implementar e inventar coisas. Todos estão ajudando a pensar como pode ser o desenvolvimento web de amanhã. O trabalho do W3C está se resumindo em estudar, incluir e modificar as idéias da comunidade e de suas equipes &amp;#8211; que por sinal, estão em mais espertas e rápidas agora.&lt;/p&gt;

&lt;p&gt;A documentação do rascunho do W3C está disponível aqui:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.w3.org/TR/css3-animations/&#34; title=&#34;Documentação do W3C para CSS Animation&#34;&gt;http://www.w3.org/TR/css3-animations/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Há bastante coisa para se ler aqui:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://webkit.org/blog/138/css-animation/&#34;&gt;Webkit Blog: CSS Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://webkit.org/blog/130/css-transforms/&#34;&gt;Webkit Blog: CSS Transforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.the-art-of-web.com/css/timing-function/&#34;&gt;CSS: Transition Timing Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HTML 5 – Mudanças na estrutura e semântica</title>
      <link>https://tableless.github.io/hugo-public/html5-estrutura-semantica/</link>
      <pubDate>Mon, 16 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/html5-estrutura-semantica/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;Semântica&lt;/strong&gt; sempre um dos pontos mais importantes do &lt;strong&gt;desenvolvimento com Padrões Web&lt;/strong&gt;. Algumas iniciativas com o &lt;strong&gt;&lt;a href=&#34;http://tableless.com.br/microformatos-internet-movel-e-quem-ainda-nao-entendeu-nada&#34;&gt;Microformats&lt;/a&gt;&lt;/strong&gt; vieram na tentativa de trazer mais semântica ainda para nossos códigos, com o intuito de novas aplicações e oportunidades pudessem utilizar melhor a informação distribuída na web. Acontece que o resto do HTML não foi a bastante tempo modificado. Por exemplo, como você consegue distinguir de forma automática as informações do &amp;#8220;header&amp;#8221; (cabeçalho) dos sites? Não consegue. Você não consegue por exemplo, de maneira automatizada, identificar o que é um rodapé ou a parte do layout que está exibindo um artigo, por exemplo.&lt;/p&gt;

&lt;p&gt;Todos os dias sites e mais sites são publicados na internet e nenhum deles com um padrão de nomenclatura de classes e ids que possamos utilizar para extrair informação de maneira inteligente. O &lt;strong&gt;HTML 4.01&lt;/strong&gt; é a versão atual da linguagem básica da Web, e não é atualizado a alguns anos. Esses detalhes de semântica não podem ser supridos para sempre por tecnologias como o Microformats. A versão 5 do HTML tende a suprimir essas necessidades e também atualizar pontos antigos do HTML 4, por exemplo, formulários.&lt;/p&gt;

&lt;p&gt;Como disse no começo deste post, a estrutura de um site não é óbvia para as máquinas. Não existe nenhum padrão de construção dos elementos para indicar o que é o cabeçalho e o que é o rodapé, por exemplo. No &lt;a href=&#34;http://tableless.com.br/html-5-semantica-e-o-que-e-importante-na-web&#34;&gt;HTML 5&lt;/a&gt;, iremos utilizar um padrão de tags que nos ajudará a marcar estas estruturas. Uma estrutura conhecida é mais ou menos assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;body&amp;gt;
  &amp;lt;div id=&#34;header&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div id=&#34;menu&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div class=&#34;post&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div id=&#34;sidebar&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div id=&#34;rodape&#34;&amp;gt;...&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Na estrutura acima, utilizei alguns nomes de classes e ids que costumamos utilizar no dia-a-dia. eu mesmo não utilizo a classe POST, uso mais CONTENT ou algo parecido. A estrutura do HTML acabará com isso. A idéia é substituir esse amontoado de DIVS por elementos que se encarreguem dessas funções, um exemplo da estrutura serial esse:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;body&amp;gt;
  &amp;lt;header&amp;gt;...&amp;lt;/header&amp;gt;
  &amp;lt;nav&amp;gt;...&amp;lt;/nav&amp;gt;
&amp;lt;section&amp;gt;
  &amp;lt;article&amp;gt;
      ...
  &amp;lt;/article&amp;gt;
&amp;lt;/section&amp;gt;
  &amp;lt;aside&amp;gt;...&amp;lt;/aside&amp;gt;
  &amp;lt;footer&amp;gt;...&amp;lt;/footer&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;O elemento &lt;strong&gt;header&lt;/strong&gt; define o cabeçalho. Nav define o menu ou a navegação do site.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Article&lt;/strong&gt; define uma parte da página que tem uma composição de formulários, textos etc. Por exemplo, pode ser um post de forum, blog, comentários etc.&lt;/li&gt;
&lt;li&gt;O elemento &lt;strong&gt;Section&lt;/strong&gt; define uma seção do layout em um determinado element. Ele pode conter um &lt;strong&gt;header&lt;/strong&gt; e também um &lt;strong&gt;footer&lt;/strong&gt; se preciso.&lt;/li&gt;
&lt;li&gt;O elemento &lt;strong&gt;aside&lt;/strong&gt; consiste em envolver informações que tem algo a ver com o conteúdo principal do site. Pode ser um menu lateral, um sidebar padrão com menu, banner, busca etc&amp;#8230;&lt;/li&gt;
&lt;li&gt;Footer define o rodapé do elemento ou do layout.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entenda que agora, qualquer elemento pode ter seu conteúdo separado por seções com o elemento &lt;strong&gt;section&lt;/strong&gt;. Note também que os elementos podem ter também um &lt;strong&gt;header&lt;/strong&gt; e um &lt;strong&gt;footer&lt;/strong&gt; independentes do resto do layout. Como na imagem.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/1999/11/printtableless.gif&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/1999/11/printtableless-300x167.gif&#34; alt=&#34;Exemplo Elemento HEADER&#34; title=&#34;Exemplo Elemento HEADER&#34; width=&#34;300&#34; height=&#34;167&#34; class=&#34;alignnone size-medium wp-image-1178&#34; srcset=&#34;uploads/1999/11/printtableless-300x167.gif 300w, uploads/1999/11/printtableless.gif 603w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uma dúvida comum entre os desenvolvedores é como fazer a estruturação e distribuição das tags de títulos (h1 até h6). Por exemplo, se eu utilizei já a tag H1 no logo do site, poderei utilizar para o título do artigo? Se repetirmos muitas vezes as mesmas tags de títulos, a importância que cada título tem sobre o outro se perderá. O Google poderá indexar de forma diferente e etc.&lt;/p&gt;

&lt;p&gt;No HTML 5 esse problema ser resolverá, porque cada section que você inicia, você poderá começar novamente uma nova ordem de títulos. Por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;header&amp;gt;
  &amp;lt;h1&amp;gt;Logo&amp;lt;/h1&amp;gt;
&amp;lt;/header&amp;gt;
&amp;lt;article&amp;gt;
    &amp;lt;h1&amp;gt;T&amp;iacute;tulo do artigo&amp;lt;/h1&amp;gt;
    &amp;lt;p&amp;gt;texto&amp;lt;/p&amp;gt;
    &amp;lt;h2&amp;gt;Subtitulo&amp;lt;/h2&amp;gt;
    &amp;lt;p&amp;gt;Mais texto&amp;lt;/p&amp;gt;
&amp;lt;/article&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Dessa forma você conseguirá definir exatamente qual a importância de cada título e os leitores de tela, sistemas de busca e outras aplicações conseguirão fazer uma separação mais eficaz dos elementos textuais.&lt;/p&gt;

&lt;p&gt;Entenda que os divs não irão deixar de existir. Você os usará em casos muito específicos, por exemplo, para fazer caixas de destaque:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;section&amp;gt;
    &amp;lt;div class=&#34;destaque&#34;&amp;gt;
       &amp;lt;h1&amp;gt;Destaque 1&amp;lt;/h1&amp;gt;
       &amp;lt;p&amp;gt;Texto&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;destaque&#34;&amp;gt;
       &amp;lt;h1&amp;gt;Destaque 1&amp;lt;/h1&amp;gt;
       &amp;lt;p&amp;gt;Texto&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/section&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Nesse caso estou usando os DIVs apenas por motivos de formatação. Ali não caberia um article, porque o conteúdo não é uma redação de um post, artigo e etc&amp;#8230; Também não caberia uma section porque eu já agrupei este conteúdo dentro de uma section pai.&lt;/p&gt;

&lt;p&gt;Para saber mais sobre isso, leia: &lt;a href=&#34;http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html&#34;&gt;The Elements Of HTML 5&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Irei escrever outros artigos sobre a inserção de vídeo e audio no código e uma série de outros assuntos interessantes sobre HTML 5. E o que você acha disso tudo? Deixe seu comentário!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HTML 5 – Semântica e o que é importante na web</title>
      <link>https://tableless.github.io/hugo-public/html-5-semantica-e-o-que-e-importante-na-web/</link>
      <pubDate>Mon, 26 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/html-5-semantica-e-o-que-e-importante-na-web/</guid>
      <description>&lt;p&gt;O HTML é a primeira camada do desenvolvimento client-side. Como você sabe, existem 3: a primeira que é a informação, que é o HTML que vai exibi-la na página. A segunda é o CSS, que vai formatar esse HTML de forma que fique legível, usável, bonito. E a terceira que vai definir o comportamento desses elementos, que é o Javascript e Ajax.&lt;/p&gt;

&lt;p&gt;Deles o HTML é mais importante. É o HTML que cuida da exibição da formatação. É ele que serve os buscadores e leitores de tela. É ele que serve a informação para aplicações e te dão toda a informação que você busca na web todos os dias.&lt;/p&gt;

&lt;p&gt;Hoje em dia, a maioria dessa informação tem significado. Leitores de tela e o Google conseguem distinguir o que é um título, parágrafo, ênfase, listas, etc&amp;#8230; Mas como eles sabem o que é um telefone? Ah, sim, fazendo microformatos. Mas microformatos é uma tecnologia que veio para tapar um buraco de semântica do HTML. E esse é um assunto interessante.&lt;/p&gt;

&lt;p&gt;Na nova versão do HTML, a 5, o pessoal do W3C está estudando novas formas de inserir significado no HTML. Hoje, só o básico é feito. Você define o que é título, parágrafo, links, endereços, e só. Com algum microformato, você consegue definir um contato, localização e outras informações.&lt;/p&gt;

&lt;p&gt;Abaixo, segue uma lista de alguns elementos que podemos utilizar no nosso dia-a-dia para trazer mais significado para a informação dos seus sites:&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/links.html#edef-A&#34;&gt;a&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Define a ancora de um elemento.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-ABBR&#34;&gt;abbr&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Define uma abreviação.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-ACRONYM&#34;&gt;acronym&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Indica um acrônimo.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/global.html#edef-ADDRESS&#34;&gt;address&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A tag address é utilizada para conter informações de endereço e contatos.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-BLOCKQUOTE&#34;&gt;blockquote&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Blockquote define longos blocos de citação.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-CITE&#34;&gt;cite&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Define uma citação ou referência a outra fonte&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-CODE&#34;&gt;code&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Define que aquele texto é um código.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-DFN&#34;&gt;dfn&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Define que certo texto é a definição de um termo.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/global.html#edef-SPAN&#34;&gt;div, span&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Div e Span definem a estrutura dos elementos. Div é um elemento de bloco e Span um elemento de linha.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/lists.html#edef-DL&#34;&gt;dl, dd, dt&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Listas de definição são feitas para criar um grupo de termos e definições. Muito usada para fazer glossários, dicionários ou entrevistas textuais.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-ins&#34;&gt;del, ins&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;INS é utilizado para mostrar que certo texto foi inserido e DEL define o texto que foi deletado da redação. Isso é bastante utilizado para corrigir artigos, textos e etc.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-EM&#34;&gt;em&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Como o strong, indica uma ênfase no texto.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/global.html#edef-H1&#34;&gt;h1 .. h6&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Grupo de títulos definidos por importância, onde o H1 é o mais importante e o H6 o menos importante.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/lists.html#edef-LI&#34;&gt;ul, ol, li&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Listas ordenadas (OL) e listas não ordenadas (UL) são utilizadas para definir e criar listas de itens.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-P&#34;&gt;p&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Define um parágrafo.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-Q&#34;&gt;q&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Define uma citação ou reposta que não necessita de quebra de linha ou marcação de um parágrafo.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-STRONG&#34;&gt;strong&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Define uma ênfase, como o EM.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://www.w3.org/TR/html4/struct/text.html#edef-VAR&#34;&gt;var&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Indica uma instância de uma variavel ou argumento de programa.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Além dessas tags, podemos também trabalhar com a semântica com atributos. Alguns deles: Alt, Title, classe, cite, id, lang, longdesc, rev, rel.&lt;/p&gt;

&lt;p&gt;Tudo isso traz mais significado ao HTML. Mas ainda não é o bastante.&lt;/p&gt;

&lt;p&gt;Como o &lt;a href=&#34;http://www.alistapart.com/authors/a/johnallsopp&#34; title=&#34;John Allsopp&#34;&gt;John Allsopp&lt;/a&gt; disse em seu &lt;a href=&#34;http://www.alistapart.com/articles/semanticsinhtml5&#34; title=&#34;Sematics in HTML 5&#34;&gt;artigo no A List a Part&lt;/a&gt;. Nós precisamos de tipos de mecanismos no HTML, que solucionem a necessidade dos desenvolvedores de enriquecer as informações exibidas no HTML dando significado inteligentes para os elementos. Essa é a verdadeira meta do HTML 5.&lt;/p&gt;

&lt;p&gt;Infelizmente a adoção do HTML 5 não é tão simples assim. Temos que lembrar da regra Don´t Break the Web. Esse suporte deve ser leve, caso contrários, browsers como o Internet Explorer 6 ou 7 podem sofrer com a falta de compatibilidade com as novas características.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implementar XHTML/CSS é grátis</title>
      <link>https://tableless.github.io/hugo-public/implementar-xhtmlcss-e-gratis/</link>
      <pubDate>Mon, 08 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/implementar-xhtmlcss-e-gratis/</guid>
      <description>&lt;p&gt;Muita gente conhece a história do Tableless. Eu iniciei o Tableless quando estava aprendendo e me aprofundando nos Padrões Web. Meus estudos consistiam em dois momentos: ler e aplicar. Eu lia muito material de fora – quase não haviam fontes sobre Padrões Web aqui no Brasil &amp;#8211; e depois tentava colocar na prática tudo aquilo que eu havia estudado.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;No começo isso tudo foi muito fácil. Mas chegou uma hora que eu precisava fazer um layout inteiro. Eu não podia aplicar meus estudos nos layouts de clientes e também não tinha tempo para desenhar um layout modelo.&lt;/p&gt;

&lt;p&gt;Por isso tive uma idéia: a maioria dos grandes sites ainda não eram desenvolvidos com Padrões. Tinham códigos horríveis e mal tratados. Pensei então em pegar estes grandes sites e reescrevê-los utilizando XHTML e CSS. Despreocupadamente eu fazia uma versão da home do site utilizando XHTML e CSS. Tentando aplicar os principios de semântica, tentando diminuir cada vez mais o código e deixando apenas o necessário. Quando percebi já tinha &amp;#8220;convertido&amp;#8221; sites da Microsoft, IBM, Apple, HP, Nokia, Samsung, etc&amp;#8230; E o resto da história vocês já sabem.&lt;/p&gt;

&lt;p&gt;Essa minha iniciativa me gerou um conhecimento terrível sobre o assunto. Eu sabia muito bem o que funcionava e o que deixava de funcionar em diversos tipos de layouts. Eu descobri que TUDO é possível com CSS, em uma época que todo mundo falava que ele era limitado.&lt;/p&gt;

&lt;p&gt;A maior parte dos problemas que eu enfrentei de compatibilidades de browsers em layouts em projetos de clientes, eu já tinha solucionado nos layouts que implementei nos estudos. E isso foi ótimo. Eu me valorizei como profissional, e depois até me chamavam de especialista&amp;#8230; Veja só que honra. Tudo isso, porque eu não fiquei de nhê nhê nhê como alguns por aí.&lt;/p&gt;

&lt;p&gt;Como &lt;a href=&#34;http://marcogomes.com/blog/2008/campanha-programar-e-gratis&#34; title=&#34;Programar é de graça&#34;&gt;programar&lt;/a&gt;, implementar XHTML/CSS também é de graça! Não tem desculpa.&lt;/p&gt;

&lt;p&gt;Não há nada que te impeça de sentar o bundão na cadeira e escrever código. Nada.&lt;/p&gt;

&lt;p&gt;Mas aí você pode dar a desculpa de: &amp;#8220;- Naquele tempo nenhum site era escrito nos padrões, hoje todos são Tableless!&amp;#8221; E eu digo: &amp;#8220;- E daí?&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Será que são escritos de forma semântica? Será que não tem muito código? Não há solução melhor?&lt;/p&gt;

&lt;p&gt;A minha revolta aqui é contra aqueles profissionais que não fazem questão de aprender mais. Que simplesmente fazem apenas o que mandam e não tem o desejo de mudar o mundo em nenhum sentido.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Não “otimize” seu código</title>
      <link>https://tableless.github.io/hugo-public/nao-otimize-seu-codigo/</link>
      <pubDate>Sun, 09 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/nao-otimize-seu-codigo/</guid>
      <description>&lt;p&gt;Quando fazíamos sites com tabelas, o grande problema era a quantidade de código que escrevíamos. Naquele tempo – 1996, 97, 98 – tínhamos outros pontos que precisavam de uma atenção maior. A conexão era lerda para todo mundo e isso dificultava um bocado as coisas. Por isso, fazer um site pesado era fora de cogitação. Ficávamos “mendigando” cada byte para que o site ficasse milésimos de segundo mais rápido.&lt;/p&gt;

&lt;p&gt;O código era o grande problema. A quantidade de código interferia diretamente na performance do site. E isso fez com que os desenvolvedores encontrassem saídas não muito agradáveis.&lt;/p&gt;

&lt;p&gt;Era comum fazer códigos como o de baixo:&lt;/p&gt;

&lt;pre lang=&#34;html&#34; line=&#34;1&#34;&gt;&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;
      Produto
    &lt;/th&gt;
       
    
    &lt;th&gt;
      Preço
    &lt;/th&gt;
     
  &lt;/tr&gt;
   
  
  &lt;tr&gt;
    &lt;td&gt;
      Tênis
    &lt;/td&gt;
       
    
    &lt;td&gt;
      R$230
    &lt;/td&gt;
     
  &lt;/tr&gt;
  
&lt;/table&gt;
&lt;/pre&gt;

&lt;p&gt;Se transformarem em verdadeiros monstros:&lt;/p&gt;

&lt;pre lang=&#34;1&#34;&gt;&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;
      Produto
    &lt;/th&gt;
    
    &lt;th&gt;
      Preço
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      Tênis
    &lt;/td&gt;
    
    &lt;td&gt;
      R$230
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;/pre&gt;

&lt;p&gt;Isso tudo para economizar alguns bytes, que dependendo do site, significavam teras e teras de banda por mês. Naquele tempo, fazer isso era totalmente justificável. Precisávamos de alguma forma diminuir esse código para que o site ficasse mais rápido para o usuário e as requisições não sobrecarregassem o servidor.&lt;/p&gt;

&lt;p&gt;Hoje isso é totalmente dispensável.&lt;/p&gt;

&lt;p&gt;Aprendemos a utilizar o CSS e sabemos escrever HTML semântico.&lt;/p&gt;

&lt;p&gt;A utilização dos Padrões trazem uma série de vantagens, e uma grande parte dessas vantagens são por causa da diminuição do código. Com o desenvolvimento de camadas e principalmente por causa do uso do CSS, não precisamos mais “otimizar” o código.&lt;/p&gt;

&lt;p&gt;Mas parece que os desenvolvedores gostam de coisas complicadas. Esse mal costume de otimização de código ainda existe, e hoje querem otimizar o CSS. Eu acho totalmente inútil. O CSS foi feito para controlar o visual do site inteiro. Ele tirou a responsabilidade de formatação que colocávamos no HTML. Seu trabalho é exclusivamente esse: controlar o visual e diagramação do site.&lt;/p&gt;

&lt;p&gt;É normal ele ficar grande, enorme, bizarro! Sim, haverão alguns casos que o tamanho superará mais de 1000, 2000, 3000, 4000 linhas.&lt;/p&gt;

&lt;p&gt;Dá para evitar? Claro que dá! Pense simples. &lt;a href=&#34;http://tableless.com.br/modulando-o-css&#34; title=&#34;Modulação de CSS&#34;&gt;Module os arquivos&lt;/a&gt;. Faça um planejamento. Mas NUNCA faça com que um CSS escrito assim:&lt;/p&gt;

&lt;pre lang=&#34;css&#34; line=&#34;1&#34;&gt;div {
 padding: 10px;
 border: 1px solid #CCC;
 width: 485px;
 height: 37px;
 background: #EEE;
}
&lt;/pre&gt;

&lt;p&gt;Fique assim:&lt;/p&gt;

&lt;pre lang=&#34;css&#34; line=&#34;1&#34;&gt;div{padding:10px;border:1px solid #CCC;width:485px;height:37px;background:#EEE}
&lt;/pre&gt;

&lt;p&gt;Tenha dó do seu próximo e tenha dó de você mesmo.&lt;/p&gt;

&lt;p&gt;Se você escreve o código de acordo com os Padrões, já economizou código suficiente. Não prejudique a manutenção do site por conta dessa neura. Escreva código legível!&lt;/p&gt;

&lt;p&gt;Há outro ponto que devemos levar em consideração: imagine que o site pese 40Kb. Estes 40Kb são compostos por 20Kb de CSS e 20Kb de HTML. O CSS tem uma característica interessante: ele é cacheado pelo browser quando visitante entra no site.&lt;/p&gt;

&lt;p&gt;Na primeira visita do usuário ele baixará 40Kb de uma vez. Já na segunda visita ele baixará apenas 20Kb relativos ao HTML. Ele não precisará baixar os 20Kb de CSS porque o arquivo já está cacheado pelo browser.&lt;/p&gt;

&lt;p&gt;Não “otimize” seu código CSS, nem seu código HTML. Faça apenas com Padrões Web e siga categoricamente a semântica. É a melhor otimização que você pode conseguir.&lt;/p&gt;

&lt;p&gt;O Leonardo Caineli &lt;a href=&#34;http://leonardocaineli.com.br/dicas-para-otimizar-seu-css/&#34;&gt;escreveu um artigo sobre isso&lt;/a&gt;. Claro, discordo da opinião dele.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[update]&lt;/strong&gt;Depois do post o pessoal chamou a atenção para essa prática em empresas grandes. Notei que no post eu não falei nada sobre isso. Sim, concordo que essa prática, só nessa hipótese, é totalmente considerável.&lt;/p&gt;

&lt;p&gt;Quando treinei a primeira equipe do Terra &amp;#8211; da época do site laranjão, lembra-se? &amp;#8211; a primeira coisa que eles fizeram foi converter a home, e eles ainda sim queriam colocar todo o CSS em apenas uma linha.&lt;/p&gt;

&lt;p&gt;Realmente 1Kb multiplicado por milhões é coisa para caramba e não há banda que agüente. Por isso, é totalmente aceitável que sites com um porte muito grande, &amp;#8220;otimizem&amp;#8221; seu código. &lt;strong&gt;[/update]&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exercício Básico</title>
      <link>https://tableless.github.io/hugo-public/exercicio-basico/</link>
      <pubDate>Mon, 20 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/exercicio-basico/</guid>
      <description>&lt;p&gt;Costumo dar esse exercício para alguns dos alunos aqui da &lt;a href=&#34;http://visie.com.br/treinamento/&#34;&gt;Visie&lt;/a&gt;. Ele é um exercício básico e utiliza as propriedades mais importantes para se construir um site. A idéia é mostrar para o desenvolvedor que está abrindo os olhos agora, como é fácil, em algumas horas de treinamento (tipo 3 horas), o desenvolvimento com CSS e XHTML é produtivo.&lt;/p&gt;

&lt;p&gt;Esse exercício está &lt;strong&gt;disponível gratuitamente&lt;/strong&gt; no &lt;a href=&#34;http://visie.com.br/campus/&#34; title=&#34;Videos tutoriais sobre Tableless&#34;&gt;Campus Online&lt;/a&gt; também, em texto e em vídeo na &lt;a href=&#34;http://visie.com.br/campus/assunto/1&#34; title=&#34;Videos tutoriais sobre Tableless&#34;&gt;parte de Tableless&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://visie.com.br/campus/&#34;&gt;http://visie.com.br/campus/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://visie.com.br/campus/static/media/exemplos/tableless/layout-tableless/layout-tableless.jpg&#34;&gt;&lt;img class=&#34;alignleft size-thumbnail wp-image-1026&#34; title=&#34;Layout Básico de Tableless&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2008/10/layout-tableless-150x150.jpg&#34; alt=&#34;Exercício de Tableless do Campus Online&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A idéia é implementar esse layout utilizando CSS e XHTML. O layout, como já disse, é bem básico, indicado para o pessoal que está começando agora na área ou que migrou de desenvolvimento com tabelas para desenvolvimento CSS/XHTML.&lt;/p&gt;

&lt;p&gt;Nesse exercício o camarada vai utilizar as propriedades: margin, padding, line-height, background, colocar, font, clear e float. Além de fazer menu horizontal e e formulários.&lt;/p&gt;

&lt;p&gt;Tem um vídeo, para os assinantes pagantes, com a implementação do HTML e outro vídeo com a implementaçãodo CSS em cima deste HTML. Assim o camarada pode comparar o seu exercício com o do vídeo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>O Safari para iPhone – Desenvolvimento web para iPhone</title>
      <link>https://tableless.github.io/hugo-public/o-safari-para-iphone/</link>
      <pubDate>Mon, 13 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/o-safari-para-iphone/</guid>
      <description>&lt;p&gt;Esse texto e muitos outros fazem parte do &lt;a href=&#34;http://visie.com.br/campus/&#34; title=&#34;Vídeos tutoriais sobre Tableless&#34;&gt;Campus Online&lt;/a&gt;. Visite e &lt;a href=&#34;http://visie.com.br/campus/cadastrese&#34;&gt;cadastre-se grátis&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://visie.com.br/campus/iphone&#34; title=&#34;Desenvolvimento web para iPhone&#34;&gt;Sessão exclusiva sobre Desenvolvimento web para iPhone&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;um-pouco-de-história&#34;&gt;Um pouco de História&lt;/h3&gt;

&lt;p&gt;Por volta de 1997, os computadores da Apple traziam por padrão o Netscape. Naquele tempo o mercado de browsers não era tão acirrado como hoje e os concorrentes eram poucos. O Internet Explorer estava em sua versão &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt;. Mesmo assim, o Internet Explorer para Mac era também distribuído com o MacOS durante os 5 anos de acordo entre Apple e Microsoft. A Microsoft laçou 3 versões principais do seu navegador para o Mac, parando na versão 5 em março de 2000.&lt;/p&gt;

&lt;p&gt;Em 2003, a Apple anunciou que eles estavam desenvolvendo seu próprio browser baseado no motor de renderização KHTML. A versão 1.0 foi lançado como browser padrão do MacOS por volta de Junho de 2003. O Internet Explorer ainda era distribuido no sistema, mas agora como um navegador alternativo, até Abril de 2005.&lt;/p&gt;

&lt;h3 id=&#34;motor-de-renderização-webkit&#34;&gt;Motor de Renderização WebKit&lt;/h3&gt;

&lt;p&gt;O Safari utiliza um motor de renderização chamado WebKit. O WebKit tem dois motores de renderização: o WebCore, que é o motor de renderização baseado no KTHML do Konqueror. E o JavaScriptCore, baseado no motor de javascript KDE chamado KJS. Esses motores estão sob Licensa GNU.&lt;/p&gt;

&lt;p&gt;A Apple, ao fazer o Safari fez muitas atualizações e modificações no motor KHTML, deixando-o mais maduro e robusto. Essas modificações foram devolvidas para a comunidade e incorporadas no Konqueror.&lt;/p&gt;

&lt;h3 id=&#34;mobilesafari-e-safari-para-desktop&#34;&gt;MobileSafari e Safari para Desktop&lt;/h3&gt;

&lt;p&gt;A idéia é que o usuário tenha uma experiência muito próxima a experiência que ele tem no desktop. Por isso o Safari para iPhone (MobileSafari) foi feito sob o mesmo motor de renderização WebKit do Safari para Windows e Mac. Diferenças: 1) Se o site não foi feito para iPhone, ele renderiza a página da mesma forma como renderiza em um Safari para desktop, mas miniaturizada. 2) A interação do usuário.&lt;/p&gt;

&lt;h3 id=&#34;padrões-suportados&#34;&gt;Padrões Suportados&lt;/h3&gt;

&lt;p&gt;Para que a renderização do MobileSafari seja fiel ao Safari para desktop, ele tem grande suporte aos Padrões Web.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HMTML 4.01&lt;/li&gt;
&lt;li&gt;HTML 5&lt;/li&gt;
&lt;li&gt;XHTML 1.0&lt;/li&gt;
&lt;li&gt;CSS 2.1&lt;/li&gt;
&lt;li&gt;Parte do CSS 3&lt;/li&gt;
&lt;li&gt;Javascript 1.4&lt;/li&gt;
&lt;li&gt;Ajax&lt;/li&gt;
&lt;li&gt;DOM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;É interessante notar que temos uma certa liberdade de desenvolvimento web no iPhone. Há facilidades como cantos arredondados que não podemos contar no desenvolvimento focado para desktops. Isso tráz vantagens pra você, desenvolvedor, porque facilitará seu trabalho, e para o usuário porque ele terá uma experiência mais rica.&lt;/p&gt;

&lt;h3 id=&#34;limites-dos-recursos&#34;&gt;Limites dos recursos&lt;/h3&gt;

&lt;p&gt;Embora o iPhone suporte as tecnologias mais atuais de desenvolvimento web, não podemos esquecer de que ele é um dispositivo móvel, com capacidade de processamento muito menor que a de um desktop. Por isso, há algumas limitações de recursos que devemos nos atentar.&lt;/p&gt;

&lt;p&gt;Para códigos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;10Mb para arquivos Javascripts e XML&lt;/li&gt;
&lt;li&gt;O tempo de execução de um Javascript é limitado a 10 segundos. Se passar de 10 segundos, o Safari pára a execução em algum lugar aleatório do seu código.&lt;/li&gt;
&lt;li&gt;Javascripts alocados limitados a 10Mb&lt;/li&gt;
&lt;li&gt;Máximo de 8 documentos abertos de uma vez&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para imagens:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Limite máximo do tamanho de GIF, PNG e TIFF são 2 Megapixels&lt;/li&gt;
&lt;li&gt;A decodificação máxima dos tamanhos de JPGs são 32 Megapixels. Utilizando SubSampling&lt;/li&gt;
&lt;li&gt;O tamanho máximo de GIFs animados deve ser menor que 2MB. Para arquivos animados maiores, só é mostrado o primeiro frame.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Verifique sempre o tamanho final de sua página. Normalmente o sites com 30Mb para menos funcionam muito bem no iPhone.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bloginfo Template Tag</title>
      <link>https://tableless.github.io/hugo-public/bloginfo-template-tag/</link>
      <pubDate>Thu, 21 Aug 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/bloginfo-template-tag/</guid>
      <description>&lt;p&gt;A &lt;a href=&#34;http://tableless.com.br/bloginfo-template-tag/&#34;&gt;Template Tag Bloginfo&lt;/a&gt; mostra informações sobre o blog. A maioria dessas informações são modificadas diretamente no painel de controle da sua instalação do WordPress. Isso pode ser utilizado em qualquer lugar do seu site. A Template Tag é a &lt;strong&gt;get_bloginfo()&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Por exempo, se você precisa do nome do site para colocar em algum lugar do site, como o Logo, a sintaxe seria:&lt;/p&gt;

&lt;pre lang=&#34;php&#34; line=&#34;1&#34;&gt;&lt;h1&gt;
  &lt;?php bloginfo(&#39;name&#39;); ?&gt;
&lt;/h1&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Os valores possíveis:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;name&amp;#8217;&lt;/strong&gt; &amp;#8211; Nome do site. Valor padrão.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;description&amp;#8217;&lt;/strong&gt; &amp;#8211; Descrição do site.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;url&amp;#8217;&lt;/strong&gt; &amp;#8211; O endereço do site.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;rdf_url&amp;#8217;&lt;/strong&gt; &amp;#8211; Endereço do RDF/RSS 1.0.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;rss_url&amp;#8217;&lt;/strong&gt; &amp;#8211; Endereço do RSS 0.92.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;rss2_url&amp;#8217;&lt;/strong&gt; &amp;#8211; Endereço para RSS 2.0.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;atom_url&amp;#8217;&lt;/strong&gt; &amp;#8211; URL Feed Atom.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;comments_rss2_url&amp;#8217;&lt;/strong&gt; &amp;#8211; Url para acesso do RSS 2.0 dos comentários.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;pingback_url&amp;#8217;&lt;/strong&gt; &amp;#8211; Url dos Pingbacks Pingback (XML-RPC file).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;admin_email&amp;#8217;&lt;/strong&gt; &amp;#8211; Endereço de email do administrador do WordPress.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;charset&amp;#8217;&lt;/strong&gt; &amp;#8211; Tabela de caractéres utilizada no Worpdress; Você define isso na Opções de Leitura no Admin.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;version&amp;#8217;&lt;/strong&gt; &amp;#8211; Mostra a versão do WordPress que você utiliza..&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#8216;text_direction&amp;#8217;&lt;/strong&gt; &amp;#8211; Retorna &amp;#8216;rtl&amp;#8217; leitura da direita para esquerda ou &amp;#8216;ltr&amp;#8217; para leitura da esquerda para direita, que é o padrão.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se você quer ler mais sobre WordPress, experimente visitar a &lt;a href=&#34;http://tableless.com.br/wordpress/&#34;&gt;parte exclusiva sobre WordPress no Tableless&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://codex.wordpress.org/Template_Tags/bloginfo&#34;&gt;Mais sobre Bloginfo no site do WordPress&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Palestra: Implementação de Layout com CSS</title>
      <link>https://tableless.github.io/hugo-public/palestra-implementacao-de-layout-com-css/</link>
      <pubDate>Mon, 21 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/palestra-implementacao-de-layout-com-css/</guid>
      <description>&lt;p&gt;Essa semana, dia 23, quarta-feira, irei fazer uma palestra de 2 horas exclusivamente sobre Implementação de Layout com CSS. Irei implementar um layout, desde o HTML até o CSS, tudo explicado nos mínimos detalhes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://visie.com.br/eventos/&#34;&gt;http://visie.com.br/eventos/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O valor da palestra é de R$29 e será em São Paulo.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Este post se auto-destruirá no dia 24.&lt;/small&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WordPress Include Tags</title>
      <link>https://tableless.github.io/hugo-public/wordpress-include-tags/</link>
      <pubDate>Sun, 06 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/wordpress-include-tags/</guid>
      <description>&lt;p&gt;O &lt;a href=&#34;http://wordpress.org/&#34;&gt;WordPress&lt;/a&gt; tem 3 TemplatesTags para incluir elementos básicos de Cabeçalho, Coluna lateral (sidebar) e Rodapé, são eles: get_header(), get_sidebar() e get_footer(). Essas TemplateTags não aceitam qualquer tipo de parâmetro, portanto são simples de se aplicar. Em todos os themes do WordPress, essas 3 TemplateTags estão sempre presentes, mesmo assim, você pode modificar isso incluindo outro arquivo que não seja o padrão que o WP estabeleceu.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-header&#34;&gt;get_header()&lt;/h3&gt;

&lt;p&gt;O &lt;strong&gt;&amp;lt;?php get_header(); ?&amp;gt;&lt;/strong&gt;inclui em seu template o arquivo header.php, que é onde vai o cabeçalho do seu site. É lá onde vai o começo da estrutura básica do HTML &amp;#8211; Doctype, html, head, title, metatags e body.&lt;/p&gt;

&lt;h3 id=&#34;get-sidebar&#34;&gt;get_sidebar()&lt;/h3&gt;

&lt;p&gt;O &lt;strong&gt;&amp;lt;?php get_sidebar(); ?&amp;gt;&lt;/strong&gt; é a função que incluirá em seu template a sua coluna lateral. Menu lateral, banners, informações e tudo o que normalmente vai em um sidebar.&lt;/p&gt;

&lt;h3 id=&#34;get-footer&#34;&gt;get_footer()&lt;/h3&gt;

&lt;p&gt;O &lt;strong&gt;&amp;lt;?php get_footer(); ?&amp;gt;&lt;/strong&gt; inclui em seu template o arquivo footer.php. É lá onde você normalmente termina seu . É neste arquivo que você terá o código do rodapé e de elementos que sempre seguirão o final da página.&lt;/p&gt;

&lt;p&gt;Se o WordPress não encontrar, por exemplo o arquivo footer.php, ele irá incluir o arquivo relacionado do theme default: wp-content/themes/default/footer.php. O mesmo acontece para o sidebar.php, o header.php e o comments_template().&lt;/p&gt;

&lt;h3 id=&#34;incluindo-qualquer-arquivo&#34;&gt;Incluindo qualquer arquivo&lt;/h3&gt;

&lt;p&gt;Claro que você vai querer incluir outros arquivos. Por exemplo, caso seu site tiver duas colunas, ou o seu cabeçalho for muito grande e você quiser inserir os elementos em arquivos separados. Nestes casos você pode utilizar esse código:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;?php include (TEMPLATEPATH . &#39;/header2.php&#39;); ?&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;O WordPress vai inserir o arquivo pedido como um include PHP normal.&lt;/p&gt;

&lt;p&gt;Quer saber mais sobre WordPress? &lt;a href=&#34;http://tableless.com.br/wordpress&#34;&gt;Fique antenado aqui&lt;/a&gt;!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>