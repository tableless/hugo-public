<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Float on Tableless</title>
    <link>http://tableless.com.br/tags/float/index.xml</link>
    <description>Recent content in Float on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/float/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Flexbox ‚Äì Organizando seu layout</title>
      <link>http://tableless.com.br/flexbox-organizando-seu-layout/</link>
      <pubDate>Mon, 01 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/flexbox-organizando-seu-layout/</guid>
      <description>

&lt;p&gt;O CSS Flexible Box Layout Model ou simplesmente &lt;strong&gt;Flexbox&lt;/strong&gt; faz parte da especifica√ß√£o do CSS3 que promete organizar elementos na p√°gina previsivelmente quando o layout precisa ser visualizado em diversos tamanhos de tela e em diversos dispositivos.&lt;/p&gt;

&lt;p&gt;O Flexbox nos ajuda a organizar esses elementos sem a ajuda do float e tamb√©m nos ajudam a sanar problemas de &lt;a href=&#34;http://tableless.com.br/css_box_model/&#34;&gt;Box Model&lt;/a&gt; que normalmente acontecem quando acrescentamos, padding, margin e border al√©m da largura do elemento.&lt;/p&gt;

&lt;p&gt;A ideia √© simples: os filhos de um elemento com flexbox pode se posicionar em qualquer dire√ß√£o e pode ter dimens√µes flex√≠veis para se adaptar. Voc√™ pode posicionar os diversos elementos independente da sua posi√ß√£o na estrutura do HTML, o que √© muito bom. Um dos problemas do float a sua depend√™ncia com os elementos na estrutura do HTML. Estes elementos precisam estar em uma ordem espec√≠fica, se n√£o o layout n√£o d√° certo. Com o Flexbox essa ordem n√£o importa, isso quer dizer que voc√™ pode organizar a informa√ß√£o do seu HTML de beneficiando o SEO e Acessibilidade. O c√≥digo da estrutura√ß√£o destes elementos fica mais simples e f√°cil de manter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aten√ß√£o:&lt;/strong&gt; O Flexbox ainda √© uma especifica√ß√£o e ainda deve ser usada com prefixos como -webkit-, -moz-, -ms-, -o-.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.github.com/exemplos/flexbox.html&#34;&gt;Veja o exemplo completo no nosso GITHUB.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;elementos-e-vocabul√°rio&#34;&gt;Elementos e Vocabul√°rio&lt;/h3&gt;

&lt;p&gt;Voc√™ precisa entender que o Flexbox √© uma nova maneira de posicionar elementos do seu layout e por isso precisamos de novos nomes para identificar os elementos da estrutura.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flex container&lt;/strong&gt; √© o elemento que envolve sua estrutura. Voc√™ define que um elemento √© um Flex Container com a propriedade &lt;em&gt;display&lt;/em&gt; com os valores &lt;em&gt;flex&lt;/em&gt; ou &lt;em&gt;inline-flex&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flex Item&lt;/strong&gt; s√£o os elementos filho do &lt;strong&gt;flex container&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eixos ou Axes&lt;/strong&gt; s√£o as duas dire√ß√µes b√°sicas que existem em um Flex Container: &lt;em&gt;main axis&lt;/em&gt;, que seria o eixo horizontal ou o eixo principal e o &lt;em&gt;cross axis&lt;/em&gt; que seria o eixo vertical.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Directions&lt;/strong&gt; determina a origem e o t√©rmino do fluxo dos √≠tens. Eles seguem o vetor estabelecido pelo modo traidicional de escrita: esquerda para direita, direita para esquerda etc.&lt;/p&gt;

&lt;p&gt;A propriedade &lt;em&gt;order&lt;/em&gt; determina o lugar que os elementos aparecer√£o.&lt;/p&gt;

&lt;p&gt;A propriedade &lt;em&gt;flex-flow&lt;/em&gt; determina a ordem do fluxo em que os elementos aparecer√£o.&lt;/p&gt;

&lt;p&gt;Voc√™ pode definir se os elementos ser√£o for√ßados a ficar em uma mesma linha ou se eles ir√£o quebrar em v√°rias linhas com a propriedade &lt;strong&gt;flex-wrap&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;definindo-uma-estrutura-flexbox&#34;&gt;Definindo uma estrutura Flexbox&lt;/h3&gt;

&lt;p&gt;Para iniciarmos, segue o HTML b√°sico abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Exemplo Flexbox&amp;lt;/title&amp;gt;
    &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div class=&#34;main&#34;&amp;gt;
    &amp;lt;div&amp;gt;Um div&amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;Segundo div&amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;Terceiro Div&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Agora vamos para o CSS. Primeiro definimos para o div MAIN virar um Flex Container. Para isso definimos a propriedade display com os valores &lt;em&gt;flex&lt;/em&gt; ou &lt;em&gt;inline-flex&lt;/em&gt;. O valor FLEX faz o elemento ser um BLOCO, com o valor inline-flex, o elemento vira um inline-block com as propriedades de Flex Container.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.main {
    display: -webkit-flex;
    display: flex;
}

/** Para deixar uma corzinha de fundo nos divs filhos **/
.main div {
    background:#CCC;
    margin-right:10px;
}
&lt;/pre&gt;

&lt;p&gt;Se fizermos isso automaticamente os divs dentro do nosso &lt;strong&gt;.main&lt;/strong&gt; j√° ficar√£o um ao lado do outro.&lt;/p&gt;

&lt;p&gt;Para voc√™ fazer com que os &lt;strong&gt;flex items&lt;/strong&gt; (filhos do Flex Container) comecem a ter uma largura distribu√≠da, basta definir para eles a propriedade &lt;em&gt;flex&lt;/em&gt;, como abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.main {
    width:500px;
    background:#EFEFEF;
    height:500px;
    display: -webkit-flex;
    display: flex;
}

.main div {
    background:#CCC;
    margin-right:10px;

    -webkit-flex:1 1 auto;
    flex:1 1 auto;
}
&lt;/pre&gt;

&lt;p&gt;At√© agora est√° ficando assim:&lt;/p&gt;

&lt;p&gt;A propriedade &lt;strong&gt;flex&lt;/strong&gt; √© um atalho para as propriedades &lt;em&gt;flex-grow, flex-shrink e flex-basis&lt;/em&gt;. O flex-basis define a largura dos flex items. Deixemos eles quietinhos por enquanto.&lt;/p&gt;

&lt;p&gt;Suponha agora que voc√™ queira modificar a ordem com que os elementos apare√ßam. Simples, use a propriedade &lt;strong&gt;order&lt;/strong&gt; e modifique a ordem das colunas:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.main div.primeiroDiv {-webkit-order:2;}
.main div.segundoDiv {-webkit-order:3;}
.main div.terceiroDiv {-webkit-order:1;}
&lt;/pre&gt;

&lt;p&gt;Nada de float para l√° e float para c√°. S√≥ uma mudan√ßa de n√∫meros e pronto. Simple like that.&lt;/p&gt;

&lt;p&gt;Vamos pular para o &lt;strong&gt;.main&lt;/strong&gt; novamente.&lt;/p&gt;

&lt;h3 id=&#34;flex-flow-8211-definindo-colunas-ou-linhas&#34;&gt;Flex-flow &amp;#8211; definindo colunas ou linhas&lt;/h3&gt;

&lt;p&gt;Agora suponha que voc√™ queira linhas em vez de colunas. Tipo, voc√™ quer fazer uma vers√£o para mobiles, em mobiles ter colunas √© ruim, ent√£o voc√™ quer colocar uma coluna em cima da outra, coisa b√°sica. Fazemos isso toda hora retirando os floats e as larguras das colunas. Aqui voc√™ define apenas a propriedade &lt;strong&gt;flex-flow&lt;/strong&gt; com o valor &lt;strong&gt;column&lt;/strong&gt; e pronto!&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.main {
    width:500px;
    background:gray;
    height:500px;
    display: -webkit-flex;
    display: flex;

    -webkit-flex-flow: column;
    flex-flow: column;
}
&lt;/pre&gt;

&lt;p&gt;Os outros valores da propriedade &lt;strong&gt;flex-flow&lt;/strong&gt; s√£o row, row-reverse e column-reserve. O row-reverse e o column-reserve invertem a ordem dos elementos automaticamente sem a obriga√ß√£o de modificar novamente a propriedade order definido em cada elemento. Coisa linda, fala a√≠.&lt;/p&gt;

&lt;h3 id=&#34;conclus√£o-e-refer√™ncias&#34;&gt;Conclus√£o e refer√™ncias&lt;/h3&gt;

&lt;p&gt;O Flexbox hoje roda em Chrome. Fiz testes no Safari 6 e n√£o funcionou. No IE10 dizem que funciona com o -ms- aplicado. Acho que n√£o ficaremos muito tempo sem utilizar essa recomenda√ß√£o. Ano que vem, talvez? üòâ&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.github.com/exemplos/flexbox.html&#34;&gt;Veja o exemplo completo no nosso GITHUB.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ser√° recomendado que o flexbox seja utilizado para layouts simples e organiza√ß√£o de elementos internos. Para layouts mais complexos e maiores, a sugest√£o √© que o m√©todo de Grid Layout seja utilizado. Temos um exemplo aqui de como funcionaria mais ou menos o &lt;a href=&#34;http://tableless.com.br/css3-modulo-template-layout/&#34;&gt;Grid Layout&lt;/a&gt; &amp;#8211; na verdade seria o Template Layout.&lt;/p&gt;

&lt;p&gt;Isso √© um grande avan√ßo para a Arquitetura de Layouts. N√£o vamos mais depender da estrutura do HTML para fazermos nossos layouts. Fazer layouts responsivos ficar√° muito mais f√°cil e aplica√ß√µes que precisam ter suas estruturas totalmente mudadas nos diversos dispositivos ser√£o simples de manter. Reutilizaremos totalmente nosso HTML j√° programado e o CSS controlar√° de fato a camada visual das nossas aplica√ß√µes e sites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3.org/TR/css3-flexbox/&#34;&gt;Link para a documenta√ß√£o&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://demo.agektmr.com/flexbox/&#34;&gt;Flexbox Playground &amp;#8211; veja um exemplo modificando seus valores&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Propriedade Float do CSS</title>
      <link>http://tableless.com.br/propriedade-float-do-css/</link>
      <pubDate>Fri, 13 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/propriedade-float-do-css/</guid>
      <description>&lt;p&gt;Se o Internet Explorer n√£o soubesse como funciona a propriedade float do CSS, o advento dos Padr√µes Web n√£o vingaria t√£o cedo. A propriedade float √© a propriedade respons√°vel por &amp;#8220;administrar&amp;#8221; a diagrama√ß√£o do site. √â com ela que voc√™ ir√° organizar as caixas e deix√°-las exatamente onde devem ficar. A propriedade float d√° mais consist√™ncia ao Layout. Diferentemente da propriedade position, que pode trazer uma s√©rie de inflexibilidades, deixando o layout mais engessado.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Neste v√≠deo, mostramos um pouco como funciona a propriedade float e sua parceira, clear.&lt;/p&gt;

&lt;p&gt;Se quiser, voc√™ pode ver &lt;a href=&#34;http://visie.com.br/campus/texto/107&#34;&gt;uma vers√£o em textual aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;embed src=&#34;http://visie.com.br/campus/static/mediaplayer.swf&#34; width=&#34;570&#34; height=&#34;434&#34; allowscriptaccess=&#34;always&#34; allowfullscreen=&#34;true&#34; flashvars=&#34;height=434&amp;#038;width=570&amp;#038;file=http://visie.com.br/campus/flv/36.flv&amp;#038;image=http://visie.com.br/campus/static/visie.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Este v√≠deo e muitos outros podem ser encontrados no &lt;a href=&#34;http://visie.com.br/campus/&#34;&gt;Campus Online&lt;/a&gt;. Visite e &lt;a href=&#34;http://visie.com.br/campus/cadastrese/&#34;&gt;cadastre-se gr√°tis&lt;/a&gt; para ter acesso a v√°rios v√≠deos e conte√∫dos sobre Padr√µes Web, Javascript, Ajax, Python e outras coisas.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>