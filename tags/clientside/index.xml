<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clientside on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/clientside/index.xml</link>
    <description>Recent content in Clientside on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/clientside/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Usabilidade para desenvolvedores front-end</title>
      <link>https://tableless.github.io/hugo-public/usabilidade-para-desenvolvedores-front-end/</link>
      <pubDate>Wed, 13 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/usabilidade-para-desenvolvedores-front-end/</guid>
      <description>

&lt;p&gt;A usabilidade é uma qualidade das interfaces que caracteriza a facilidade de uso. Várias diretrizes sobre usabilidade de interfaces web foram desenvolvidas ao longo dos últimos 15 anos e o interesse em proporcionar interfaces de fácil utilização tem crescido entre designers e desenvolvedores.&lt;/p&gt;

&lt;p&gt;Entre as várias diretrizes de usabilidade, os princípios convergem para a seguinte tríade:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fácil de usar:&lt;/strong&gt; o uso da interface deve ser intuitivo, com recursos de fácil reconhecimento e elementos que não dificultem a navegação, leitura, interpretação, clique, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fácil de aprender:&lt;/strong&gt; uso de termos, ícones, padrões de interface e recursos de ajuda que possibilitem novos usuários reconhecer e facilmente aprender como utilizar a interface. Consistência é fundamental neste quesito.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fazer com que o usuário não cometa erros:&lt;/strong&gt; neste quesito entram entram dicas, ajuda, validação, boas mensagens de erro e outros recursos que possam prevenir a ocorrência de erros e ajudar o usuário na correção dos mesmos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mas, na prática, como podemos implementar estes princípios? Neste artigo apresento algumas dicas simples de usabilidade que podemos praticar efetivamente durante o rotina de desenvolvimento do HTML e do CSS.&lt;/p&gt;

&lt;h3 id=&#34;facilitando-a-leitura-com-line-height&#34;&gt;Facilitando a leitura com line-height&lt;/h3&gt;

&lt;p&gt;Um espaçamento adequado entre linhas permite que as pessoas possam ler um texto com maior facilidade e mais rapidamente. O espaçamento não pode ser muito reduzido, pois pode deixar o texto &amp;#8220;amontoado&amp;#8221;, nem muito extenso, caso contrário as pessoas terão dificuldade de encontrar a próxima linha.&lt;/p&gt;

&lt;p&gt;Particularmente recomendo utilizar espaçamento de 1.5 relativo ao tamanho da fonte, ou seja, se você utilizar fonte de 12px, o espaçamento entre as linhas será de 18px. No CSS, controlamos o espaçamento entre linhas com o &lt;code&gt;line-height&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;utilize-margins-e-paddings-para-distinguir-itens&#34;&gt;Utilize margins e paddings para distinguir itens&lt;/h3&gt;

&lt;p&gt;Espaços em branco entre os elementos da página podem ser usado a favor da usabilidade e também da arquitetura de informação do seu site. Creio que muitos já devem ter passado pela situação de alguém falar o seguinte a respeito de um site que você fez: &amp;#8220;Ah, mas esse conteúdo X não tem a ver com o Y? É porque estava tudo junto então achei que tinha a ver&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Os espaços entre itens permite identificar quais elementos estão relacionados e quais são distintos. Portanto, utilize &lt;code&gt;margin&lt;/code&gt; e/ou &lt;code&gt;padding&lt;/code&gt; mais generosas para afastar elementos que sejam distintos e aproxime os elementos que estejam relacionados, evitando erros de interpretação e mesmo de utilização de alguns recursos presentes na página. Isto serve principalmente para:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Estabelecer relação entre títulos e texto&lt;/li&gt;
&lt;li&gt;Identificar rótulo de formulário e o campo a qual ele se refere&lt;/li&gt;
&lt;li&gt;Imagens e o respectivo conteúdo textual&lt;/li&gt;
&lt;li&gt;Páginas que tenham múltiplos formulários ou outros recursos com botões de ação que possam fazer com que o usuário clique em um determinado botão pensando ser relativo a outro recurso&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;o-logo-deve-ser-clicável&#34;&gt;O logo deve ser clicável&lt;/h3&gt;

&lt;p&gt;Por uma convenção que foi sendo consolidada ao longo do anos, os usuários tendem a clicar no logotipo para retornar à página inicial e é frustrante quando isso não ocorre, pois já é uma ação que o usuário espera ao clicar no logo. Independente do logo ser uma imagem ou um background dentro de uma outra tag, deve-se colocar um link para a página inicial do site.&lt;/p&gt;

&lt;h3 id=&#34;textos-que-não-são-links-não-devem-ser-sublinhados&#34;&gt;Textos que não são links não devem ser sublinhados&lt;/h3&gt;

&lt;p&gt;Atualmente, nem todo link precisa estar sublinhado para transmitir a ideia de link, mas todo texto sublinhado ainda transmite a ideia de link. É intuitivo o usuário clicar em uma palavra sublinhada esperando acessar uma página (imagine então se, além de sublinhado, o texto estiver em azul, como já vi em alguns lugares). Portanto, é aconselhável que, para dar ênfase em palavras nos textos, sejam utilizadas as tags &lt;code&gt;strong&lt;/code&gt;, &lt;code&gt;em&lt;/code&gt; que já têm essa função.&lt;/p&gt;

&lt;h3 id=&#34;atributos-8220-alt-8221-e-8220-title-8221-para-imagens&#34;&gt;Atributos &amp;#8220;alt&amp;#8221; e &amp;#8220;title&amp;#8221; para imagens&lt;/h3&gt;

&lt;p&gt;O atributo &lt;code&gt;alt&lt;/code&gt; para a tag &lt;code&gt;img&lt;/code&gt; tem a função de fornececer um texto alternativo caso a imagem não seja carregada ou caso um browser leitor de tela esteja analisando o conteúdo da página. Por isso, é importante que este texto tenha uma boa descrição sobre o conteúdo da imagem. Mas em algumas imagens é interessante que ela não somente tenha um texto alternativo, mas que também exiba uma dica descritiva da imagem ao passar o mouse sobre ela. Isto é muito útil, por exemplo, ao utilizar ícones que indiquem ações, status ou representem link para algum conteúdo sem o uso de um texto descritivo junto à imagem. Para isso, podemos utilizar o atributo &lt;code&gt;title&lt;/code&gt; do HTML.&lt;/p&gt;

&lt;h3 id=&#34;associando-label-à-campos-de-formulário&#34;&gt;Associando label à campos de formulário&lt;/h3&gt;

&lt;p&gt;A tag &lt;code&gt;label&lt;/code&gt; serve para associar um rótulo a um campo de formulário. Mas muitos desenvolvedores esquecem de realizar essa associação através do atributo &lt;code&gt;for&lt;/code&gt;, que deve remeter ao &lt;code&gt;id&lt;/code&gt; do campo de formulário.&lt;/p&gt;

&lt;p&gt;A principal vantagem dessa associação é permitir que o usuário selecione o campo do formulário ao clicar no &lt;code&gt;label&lt;/code&gt;, o que facilita muito especialmente no caso de campos do tipo &lt;code&gt;checkbox&lt;/code&gt; ou &lt;code&gt;radio&lt;/code&gt;, pois aumenta a região clicável, ajuda diminuir o tempo e a chance de erros para selecionar estes campos.&lt;/p&gt;

&lt;h3 id=&#34;destaque-o-campo-ativo-do-formulário-com-focus&#34;&gt;Destaque o campo ativo do formulário com :focus&lt;/h3&gt;

&lt;p&gt;Quando um usuário estiver preenchendo um formulário, ele deve perceber claramente em qual campo está inserindo os dados, pois somente mostrar o cursor dentro do campo pode não ser suficiente.&lt;/p&gt;

&lt;p&gt;Para isso, pode-se utilizar a pseudo-classe &lt;code&gt;:focus&lt;/code&gt; no CSS para o seletor de &lt;code&gt;input&lt;/code&gt;, que possibilita aplicar um estilo ao elemento quando ele recebe foco para receber dados do teclado, como uma borda mais espessa ou de outra cor e um background diferenciado, como no exemplo abaixo:&lt;/p&gt;

&lt;pre lang=&#34;css&#34;&gt;/* Campos no estado normal possuem um background neutro e uma borda clara */
input.text, select, textarea
{ background: #FFF; border: 1px solid #999; }

/* Campos no estado :focus possuem um background diferenciado e uma borda de maior destaque */
input.text:focus, select:focus, textarea:focus
{ background: #FFC; border: 2px solid #D8A561; }&lt;/pre&gt;

&lt;p&gt;A usabilidade possui muitos outros critérios a serem trabalhados durante todo o processo de desenvolvimento de uma interface para a web, mas no dia-a-dia podemos melhorar a experiência do usuário através de pequenos detalhes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introdução: diversidade dos meios acesso</title>
      <link>https://tableless.github.io/hugo-public/diversidade-dos-meios-acesso/</link>
      <pubDate>Mon, 28 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/diversidade-dos-meios-acesso/</guid>
      <description>

&lt;p&gt;Estive no mês de Setembro/2009 fazendo uma &lt;a href=&#34;http://visie.com.br/treinamento/treinamento-in-company/&#34;&gt;consultoria&lt;/a&gt; para a Globo.com. Nesta consultoria, dentre muitas coisas, conversamos sobre a diversidade de aparelhos móveis utilizados para acessar os sites da Globo. Este problema está se tornando cada vez mais recorrente em grandes e pequenos sites. A quantidade de aparelhos que são lançados, não apenas celulares e smartphones, mas também outros aparelhos que permitem o usuário acessar a internet, cresce a cada ano. Isso faz com que tenhamos uma preocupação excessiva em como poderemos apresentar o conteúdo da melhor forma os diversos dispositivos. Mesmo assim, o problema não é tão grande. O desenvolvimento web para os dispositivos móveis, hoje, é o melhor dos mundos. Temos browsers com suporte total dos Padrões Web, rápidos e que fornecem uma experiência excelente de uso e navegação.&lt;/p&gt;

&lt;h3 id=&#34;graceful-degradation-e-progressive-enhanced&#34;&gt;Graceful Degradation e Progressive Enhanced&lt;/h3&gt;

&lt;p&gt;Procurar querer dar uma boa experiência para todos os dispositivos utilizados pode se tornar um problema, já que a variação de aparelhos e hardware é muito maior quando comparado com o mundo dos desktops.&lt;/p&gt;

&lt;p&gt;Sabemos que, para um site normal, é seguro ter uma largura de 990px. Sabemos que com essa largura, o site vai ficar bem diagramado em diversas resoluções, começando em 1024.&lt;/p&gt;

&lt;p&gt;Mas nos aparelhos móveis não temos essa métrica. A variação dos tamanhos das telas é muito maior. Os aparelhos e a forma de uso de cada um são muito diferentes.&lt;/p&gt;

&lt;p&gt;Eu não gosto de nivelar os sites por baixo. Pelo menos não hoje. Há muitas possibilidades de fazermos um bom trabalho de user experience, mas não o fazemos, porque há alguns perfis de usuário, que infelizmente temos que prever no escopo. Por isso sou a favor do &lt;a href=&#34;http://tableless.com.br/graceful-degradation-e-tudo-sobre-acessibilidade&#34;&gt;Graceful Degradation&lt;/a&gt; e do Progressive Enhanced.&lt;/p&gt;

&lt;p&gt;Fornecer a melhor experiência possível para todas as camadas de usuários. Esse é o alvo para a utilização do Graceful Degradation e do Progressive Enhanced.  Se nivelarmos o visual e as funcionalidades do site/sistema por baixo, iremos prejudicar demais os usuário “de alto escalão”. Para entender melhor, imagine um usuário de Safari Mobile acessando um site customizado para Internet Explorer Mobile.&lt;/p&gt;

&lt;h3 id=&#34;versionamento-especifico&#34;&gt;Versionamento Especifico&lt;/h3&gt;

&lt;p&gt;Já é prática antiga criar versões dos sites para um sistema, aplicação ou dispositivo específico. Fazíamos isso na guerra dos browsers e fazemos isso hoje para alguns browsers antigos. Versionar um site é uma das saídas mais simples para resolver um grande problema. Como a quantidade de dispositivos de acesso está crescendo, a necessidade de haver uma versão do site para estes dispositivos é mais que normal. O HTML é uma linguagem feita para que seja acessada por diversos meios. Hoje, os meios de acesso são bem escassos, consigo pensar apenas em Desktops e Aparelhos de mão (celulares e smartphones). Você consegue pensar em mais alguns outros?&lt;/p&gt;

&lt;p&gt;Embora não sejam maioria, os consoles estão aumentando sua presença online. Aparelhos como XBOX e Playstation estão se tornando cada vez menos restritos para jogos, e estão indo muito além do que poderíamos imaginar um dia. O XBOX já anunciou sua integração com &lt;a href=&#34;http://facebook.com/&#34;&gt;Facebook&lt;/a&gt; e &lt;a href=&#34;http://twitter.com/tableless/&#34;&gt;Twitter&lt;/a&gt;. Embora este tipo de acesso seja ainda muito limitado e controlado pelas fabricantes dos consoles, imagine, como seria a experiência de acessar a internet que temos hoje por um Playstation ou XBOX. Eu acharia sem graça. É uma interface totalmente diferente da comum. Mesmo se tentássemos levar a mesma experiência atual com os desktops para estes dispositivos, na minha opinião, estaríamos subutilizando-os.&lt;/p&gt;

&lt;p&gt;A mesma coisa pode acontecer com aparelhos como o Surface da Microsft. Eu não imagino um usuário abrindo um navegador como o Firefox, IE ou Opera no Surface e utilizando-o para navegar na internet como fazemos hoje. Não encaixa. É algo diferente, mais interativo, divertido. E atenção aqui: quando digo interativo, não estou querendo dizer que tudo deverá ser feito com Silverlight ou Flash, pelo contrário. O &lt;a href=&#34;http://tableless.com.br/html-5-semantica-e-o-que-e-importante-na-web&#34;&gt;HTML 5&lt;/a&gt; e o &lt;a href=&#34;http://tableless.com.br/efeito-cascata-e-especificidade-do-css&#34;&gt;CSS 3&lt;/a&gt; estão vindo para acabar com esse mito.&lt;/p&gt;

&lt;p&gt;Também não estou dizendo que talvez você fará uma versão dos seus sites para cada novo dispositivo que aparecer. Pelo contrário. Estou dizendo que eles serão necessários de acordo com o público de cada site, e de cada negócio.&lt;/p&gt;

&lt;p&gt;Até hoje os desenvolvedores e também os donos de sites, tem uma dificuldade muito grande em criar ou decidir se é útil ou não desenvolver uma versão dos sites para mobiles. Imagine quando a cartilha de meios de acesso aumentar.&lt;/p&gt;

&lt;p&gt;A &lt;a href=&#34;http://globo.com&#34;&gt;Globo.com&lt;/a&gt; e também outros grandes sites enfrentam o mesmo problema: decidir quem vai e quem fica. Decidir qual aparelho será priorizado e qual receberá apenas uma versão de texto. Claro que com o tempo, as limitações de cada aparelho serão mínimas e as características de cada um serão bem parecidas. Isso diminuiria muito o trabalho de desenvolvimento e aumentaríamos a quantidade de acesso, pelo simples fato de que estaríamos dando quase que a mesma experiência para uma quantidade maior de dispositivos.&lt;/p&gt;

&lt;p&gt;Outro ponto importante, mas consolador, é que há motores de renderização muito bons hoje em dia. Vide Gecko e Webkit. Ambos de código livre e que recebem sugestões e modificações do mundo inteiro. Por exemplo, os aparelhos da Nokia e também o Chrome utilizam o Webkit como base para seus softwares de acesso. Isso faz com que consigamos manter o controle de nosso desenvolvimento e nos dá uma visão melhor de todo o horizonte de possibilidades.&lt;/p&gt;

&lt;p&gt;Você, como desenvolvedor, tem a obrigação de viver um pouco mais além. Não pense que iremos escrever HTML e CSS para todo o sempre. E mesmo que for, serão linguagens totalmente diferentes de como as conhecemos hoje.&lt;/p&gt;

&lt;h3 id=&#34;conhecendo-os-browsers-e-seus-motores&#34;&gt;Conhecendo os browsers e seus motores&lt;/h3&gt;

&lt;p&gt;Os browsers estão ainda muito longe de melhorar a forma com que lidamos e navegamos com a web. Nenhum deles trouxe nos últimos anos uma inovação capaz de fazer com que melhoremos nossa experiência online. Eles ainda estão engatinhando muito e parte da culpa não é deles. O W3C se mostrou muito lerdo nos últimos 11 anos. Eles acordaram muito tarde para as reais necessidades dos desenvolvedores. A comunidade por sua vez, sacudiu todo o W3C, tomando a iniciativa e começando um novo evanlegismo em pról do HTML 5 e do CSS 3. Isso fez com que o W3C entendesse melhor o que os desenvolvedores precisavam para que a web inteira fosse privilegiada.&lt;/p&gt;

&lt;p&gt;Os browsers por sua vez, aproveitaram toda essa mudança, e começaram uma nova guerra, em silêncio. O suporte aos Padrões dos principais browsers do mercado está invejavelmente avançada. Há browsers como o Internet Explorer que sempre serão atrasados, mas que felizmente estão acordados também para as novas atualizações do mercado.&lt;/p&gt;

&lt;p&gt;Mesmo assim, acho que o foco não se deve dar em browsers específicos, acho que nossa atenção deve ser voltada para os Motores de Renderização. Hoje, os principais são:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Gecko&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Motor com código aberto. É utilizado nas aplicações da Mozilla: SeaMonkey, Camino, Firefox, Thunderbird etc. Gecko é um motor herdado do antigo Netscape, baseado no Mosaic. Depois da Guerra dos Browsers, a Netscape doou o motor de renderização para a comunidade, que culminou na criação da Mozilla.&lt;/p&gt;

&lt;hr /&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Presto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Motor proprietário da Opera Software. A Opera é uma das empresas que mais inovam no mercado de browsers. Embora eles tenham tecnicamente um dos melhores browsers para desktops, a versão mobile é a mais utilizada. Eles tem duas versões: Opera Mobile, para smartphones e Opera Mini, para celulares mais básicos. A Opera também está muito presentes em outros mercados fora da web.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Webkit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Motor com código aberto, é utilizado hoje em aplicações como Safari, Safari Mobile e Chrome, browser do Google. É o mais novo motor de renderização do mercado. Foi criado pela Apple, baseando-se no motor de renderização KHTML, que estava só presente em browsers para Linux, como o Konqueror. Aproveitando que o KHTML é um sistema OpenSource, a Apple modificou todo o seu código, fazendo melhorias e aperfeiçoando-o para criar seu browser o Safari.  A Apple fez várias outras modificações posteriores em cima desta primeira versão. Deu o nome de Webkit, e hoje, conduz o desenvolvimento dessa plataforma.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Trident&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;É o motor proprietário da Microsoft. É utilizado em aplicações como Outlook e claro, no Internet Explorer. Eles estão criando um novo motor, que é utilizado no Internet Explorer 8 e posteriores. Embora o Trident fora o primeiro a suportar completamente a primeira versão do CSS, atualmente ele é o motor de renderização mais atrasado. A Microsoft vem fazendo um bom trabalho para tentar recuperar essa má fama, mas mesmo assim, os outros motores do mercado estão muito além.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quando conhecemos o motor de renderização dos browsers, e sabemos quais suas limitações, não precisamos nos preocupar com a quantidade de browsers criados. O Google lançou o seu browser chamado Chrome, baseado em Webkit. Embora fosse um novo browser, isso não deveria assustar os desenvolvedores, já que é o mesmo motor utilizado no Safari. Logo, a renderização dos dois é muito parecida. Não é uma preocupação a mais, pelo contrário.&lt;/p&gt;

&lt;p&gt;A mesma coisa se aplica aos browsers para mobiles dos sistemas da Nokia e também do iPhone. Ambos utilizam Webkit para renderizar as páginas. Isso dá liberdade para a criação de interfaces mais elaboradas, tornando a experiência de usuário mais interessante em dispositivos móveis.&lt;/p&gt;

&lt;p&gt;Já o Internet Explorer, com seu motor de renderização se mostra um inimigo dos desenvolvedores. Embora a Microsoft esteja trabalhando arduamente em um novo código, as versões antigas deste motor ainda assombra a muitos desenvolvedores. E infelizemente, em alguns projetos, precisamos dar um passo para trás por conta da massa de acessos feitos por este motor.&lt;/p&gt;

&lt;p&gt;A mesma história se aplica para a versão do Internet Explorer Mobile. O suporte crítico aos Padrões Web faz com que os aparelhos com este sistema se tornem obsoletos quando se trata de experiência online.&lt;/p&gt;

&lt;p&gt;Entenda a importância dos motores de renderização. Eles tem um papel fundamental no comportamento do mercado e faz com que avancemos no desenvolvimento web.&lt;/p&gt;

&lt;h3 id=&#34;no-final-tudo-dá-certo-ou-não&#34;&gt;No final tudo dá certo. Ou não.&lt;/h3&gt;

&lt;p&gt;A web está passando por uma transação infinita. A cada dia ela ganha mais foco na mídia, mais atenção das empresas, tanto grandes, quanto pequenas. Sempre que um novo dispositivo é criado, um novo nicho de usuários surge, com novas maneiras e costumes de navegação. É impossível agradar a todos. Por isso é importante estabelecer prioridades. Um bom caminho é ajudar no desenvolvimento e compartilhamento de sistemas que ajudam a web a avançar. “Muda, porque quando a gente muda, o mundo muda com a gente.” Gabriel O Pensador.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Graceful degradation é tudo sobre Acessibilidade</title>
      <link>https://tableless.github.io/hugo-public/graceful-degradation-e-tudo-sobre-acessibilidade/</link>
      <pubDate>Sun, 12 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/graceful-degradation-e-tudo-sobre-acessibilidade/</guid>
      <description>

&lt;p&gt;Não há uma tradução literal para Graceful Degradation. O mais próximo seria Degradação Harmoniosa. Não é um termo muito bonito de ficar dizendo por aí. Por isso, vamos utilizar o termo original inglês durante todo o artigo.&lt;/p&gt;

&lt;p&gt;Graceful Degradation é algo que vemos todos os dias. Trata-se de um método comum em dias onde a Internet é muito mais que um simples computador ligado no telefone. Acho que resumidamente, podemos dizer o que exatamente é Graceful Degradation com a frase:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Graceful degradation means that your Web site continues to operate even when viewed with less-than-optimal software in which advanced effects don’t work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;cite&gt;&lt;a href=&#34;http://www.digital-web.com/about/contributors/peterpaul_koch&#34;&gt;Peter-Paul Koch&lt;/a&gt; em &lt;a href=&#34;http://www.digital-web.com/articles/fluid_thinking/&#34;&gt;Fluid Thinking&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;Esse assunto é bastante velho, mas que volta à tona nestes dias de &lt;a href=&#34;http://tableless.com.br/a-internet-tem-que-avancar-sem-o-ie6&#34;&gt;campanhas contra o IE6&lt;/a&gt; e outros browsers antigos. Eu mesmo já falei para ignorar totalmente o Internet Explorer 6, mas não é tão fácil assim. Eu posso ignorar aqui no Tableless, onde os usuários são de um nicho específico, mas eu não posso ignorar esse público quando se trata de um produto que é feito para o meu cliente. O cliente do meu cliente utiliza IE6. E ignorá-los significa fazer meu cliente perder dinheiro. Isso está fora de questão.&lt;/p&gt;

&lt;p&gt;Então, se seguirmos este raciocínio, pense bem: podemos cometer este erro com outros tipos de usuários. Por exemplo, se seu site não pode ser bem visto em dispositivos móveis ou se não é bem acessado por leitores de tela.&lt;/p&gt;

&lt;h3 id=&#34;é-tudo-sobre-acessibilidade&#34;&gt;É tudo sobre acessibilidade&lt;/h3&gt;

&lt;p&gt;Engana-se aquele que acha que acessibilidade é apenas sobre cegos e outras pessoas com alguma necessidade fisica. É claro que esse público merece uma atenção especial, que muitas vezes é tristemente ignorada. Mas quando falamos sobre acessibilidade, temos que entender que há outros grupos que se encaixam nesse assunto.&lt;/p&gt;

&lt;p&gt;Quando um visitante não consegue acessar seu site por causa da resolução, ou por meio de algum dispositvo, ou por algum sistema de voz etc, estamos falando de acessibilidade.&lt;/p&gt;

&lt;p&gt;Temos que prever visitantes com necessidades diversas. Há pessoas que passam a maior parte do tempo viajando. Por isso é muito difícil ler emails ou trabalhar conectado por notebook ou computador decente. Por isso ela passa a maior parte do tempo utilizando aparelhos móveis. Não por que ela queira, mas por causa da sua necessidade.&lt;/p&gt;

&lt;p&gt;Se negligenciarmos o acesso desse tipo de público, cometemos um erro grave de acessibilidade. O mesmo para um simples visitante que não consegue acessar seu website por causa da sua resolução. Ele usa 800&amp;#215;600 porque precisa e não porque quer. Embora haja alguns que nem sabem o que é resolução.&lt;/p&gt;

&lt;p&gt;Necessidade. Acessibilidade é tudo sobre a necessidade das pessoas.&lt;/p&gt;

&lt;h3 id=&#34;meios-de-acesso-a-internet&#34;&gt;Meios de acesso a Internet&lt;/h3&gt;

&lt;p&gt;Se as pessoas acessam a Internet, elas acessam por meio de um dispositivo especifico. Se ela é cega ou tem algum ou outro problema de visão, ela acessa o site por um leitor de tela. Se ela viaja muito ou fica muito tempo presa no trânsito, utililza dispositivos móveis.&lt;/p&gt;

&lt;p&gt;Hoje em dia não existem muitos meios de acesso a Web. Se não acessamos por um computador ou um dispositivo móvel, acessamos com o que?&lt;/p&gt;

&lt;p&gt;Outros meios de acesso a Internet estão nascendo. Na verdade novos usos para o acesso a Internet estamos surgindo e com estes novos usos, surgem novos meios de acesso. Vide o Surface da Microsof. É um meio totalmente diferente de interagir com a Web. Mas é um novo meio.&lt;/p&gt;

&lt;h3 id=&#34;mas-e-o-graceful-degradation&#34;&gt;Mas e o Graceful Degradation?&lt;/h3&gt;

&lt;p&gt;Problemas com compatibilidades sempre existiram e creio que nunca deixarão de existir. Pelo contrário. Esses problemas serão mais comuns embora fiquem mais fáceis de resolver. Não serão apenas probleminhas entre browsers (os browsers existirão em tempos futuros?), mas também entre dispositivos.&lt;/p&gt;

&lt;p&gt;Acontece muito hoje: tentamos acessar um serviço por um determinado browser, e somos aconselhados a utilizar outro browser porque o serviço não é compativel ou não funciona bem no nosso browser predileto.&lt;/p&gt;

&lt;p&gt;Isso tira qualquer um do sério. O site deveria funcionar em qualquer browser. Para exemplificar: se em um meio de acesso eu não consigo utilizar bordas arredondadas nos elementos, os elementos apareceriam sem as bordas arredondadas. Isso não deveria prejudicar minha experiência de uso. Eu perderia um pouco no Design, mas conseguiria utilizar o serviço sem problemas.&lt;/p&gt;

&lt;p&gt;A idéia do Graceful Degradation é exatamente essa: dar a melhor experiência possível ao dispositivo/meio que o usuário estiver utilizando sem prejudicar a acessibilidade.&lt;/p&gt;

&lt;p&gt;Os usuários do IE6 por exemplo podem ficar sem bordas arredondas, position fixed, sombras e pngs semi-transparentes, mas eles precisam acessar e utilizar perfeitamente o site, com a melhor experiência que é possivel dar a este browser.&lt;/p&gt;

&lt;p&gt;Mesma coisa é aplicada aos dispositivos móveis. Estes dispositivos normalmente não tem os mesmos recursos de um desktop. É tudo diferente, desde o poder de processamente até o tamanho das coisas. Então imaginar que o uso do sistema/site será parecido como se fosse acessado por PC, é um erro.&lt;/p&gt;

&lt;p&gt;É um erro também se fizermos um site pensando em dispositivos menos capazes mas não nós lembrarmos do grupo de usuarios que acessam seu site com dispositivos mais completos e modernos. É engraçado porque pensamos sempre no usuário que está no pior cenário. Mas aquele usuário que não seria um problema pra nós, pode se tornar o pior deles.&lt;/p&gt;

&lt;p&gt;Um exemplo disso é quando usuários de iphone acessam sites inteiros feitos em Flash. Sabemos que é uma limitação do aparelho. Mas estes usuários estão crescendo e seu cliente pode estar ali. Normalmente ninuem coloca uma versão diferente da do Flash. Logo, estes usuários simplesmente são ignorados. Imagine a frustação.&lt;/p&gt;

&lt;p&gt;Resumidamente, Graceful Degradation é dar a melhor experiência que você conseguir para o usuário.&lt;/p&gt;

&lt;p&gt;Se ele utiliza o último lançamento da Apple ou se ele utiliza um Nokia 6111 com Opera Mini. Ele precisa ter a melhor experiência que é possível dar dentro dos limites de cada dispositivo.&lt;/p&gt;

&lt;p&gt;Obviamente que vice não vai prever todos os tipos de usuário. Mesmo porque seria impossível fazer isso. Novamente eu digo o óbvio: faça um estudo de público-alvo é importante.&lt;/p&gt;

&lt;p&gt;Para complementar seu estudo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Fault-tolerant_system&#34;&gt;Fault-tolerant System&lt;/a&gt;[Não há uma tradução literal para Graceful Degradation. O mais próximo seria Degradação Harmoniosa. Não é um termo muito bonito de ficar dizendo por aí. Por isso, vamos utilizar o termo original inglês durante todo o artigo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Graceful Degradation é algo que vemos todos os dias. Trata-se de um método comum em dias onde a Internet é muito mais que um simples computador ligado no telefone. Acho que resumidamente, podemos dizer o que exatamente é Graceful Degradation com a frase:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Graceful degradation means that your Web site continues to operate even when viewed with less-than-optimal software in which advanced effects don’t work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;cite&gt;&lt;a href=&#34;http://www.digital-web.com/about/contributors/peterpaul_koch&#34;&gt;Peter-Paul Koch&lt;/a&gt; em &lt;a href=&#34;http://www.digital-web.com/articles/fluid_thinking/&#34;&gt;Fluid Thinking&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;Esse assunto é bastante velho, mas que volta à tona nestes dias de &lt;a href=&#34;http://tableless.com.br/a-internet-tem-que-avancar-sem-o-ie6&#34;&gt;campanhas contra o IE6&lt;/a&gt; e outros browsers antigos. Eu mesmo já falei para ignorar totalmente o Internet Explorer 6, mas não é tão fácil assim. Eu posso ignorar aqui no Tableless, onde os usuários são de um nicho específico, mas eu não posso ignorar esse público quando se trata de um produto que é feito para o meu cliente. O cliente do meu cliente utiliza IE6. E ignorá-los significa fazer meu cliente perder dinheiro. Isso está fora de questão.&lt;/p&gt;

&lt;p&gt;Então, se seguirmos este raciocínio, pense bem: podemos cometer este erro com outros tipos de usuários. Por exemplo, se seu site não pode ser bem visto em dispositivos móveis ou se não é bem acessado por leitores de tela.&lt;/p&gt;

&lt;h3 id=&#34;é-tudo-sobre-acessibilidade-1&#34;&gt;É tudo sobre acessibilidade&lt;/h3&gt;

&lt;p&gt;Engana-se aquele que acha que acessibilidade é apenas sobre cegos e outras pessoas com alguma necessidade fisica. É claro que esse público merece uma atenção especial, que muitas vezes é tristemente ignorada. Mas quando falamos sobre acessibilidade, temos que entender que há outros grupos que se encaixam nesse assunto.&lt;/p&gt;

&lt;p&gt;Quando um visitante não consegue acessar seu site por causa da resolução, ou por meio de algum dispositvo, ou por algum sistema de voz etc, estamos falando de acessibilidade.&lt;/p&gt;

&lt;p&gt;Temos que prever visitantes com necessidades diversas. Há pessoas que passam a maior parte do tempo viajando. Por isso é muito difícil ler emails ou trabalhar conectado por notebook ou computador decente. Por isso ela passa a maior parte do tempo utilizando aparelhos móveis. Não por que ela queira, mas por causa da sua necessidade.&lt;/p&gt;

&lt;p&gt;Se negligenciarmos o acesso desse tipo de público, cometemos um erro grave de acessibilidade. O mesmo para um simples visitante que não consegue acessar seu website por causa da sua resolução. Ele usa 800&amp;#215;600 porque precisa e não porque quer. Embora haja alguns que nem sabem o que é resolução.&lt;/p&gt;

&lt;p&gt;Necessidade. Acessibilidade é tudo sobre a necessidade das pessoas.&lt;/p&gt;

&lt;h3 id=&#34;meios-de-acesso-a-internet-1&#34;&gt;Meios de acesso a Internet&lt;/h3&gt;

&lt;p&gt;Se as pessoas acessam a Internet, elas acessam por meio de um dispositivo especifico. Se ela é cega ou tem algum ou outro problema de visão, ela acessa o site por um leitor de tela. Se ela viaja muito ou fica muito tempo presa no trânsito, utililza dispositivos móveis.&lt;/p&gt;

&lt;p&gt;Hoje em dia não existem muitos meios de acesso a Web. Se não acessamos por um computador ou um dispositivo móvel, acessamos com o que?&lt;/p&gt;

&lt;p&gt;Outros meios de acesso a Internet estão nascendo. Na verdade novos usos para o acesso a Internet estamos surgindo e com estes novos usos, surgem novos meios de acesso. Vide o Surface da Microsof. É um meio totalmente diferente de interagir com a Web. Mas é um novo meio.&lt;/p&gt;

&lt;h3 id=&#34;mas-e-o-graceful-degradation-1&#34;&gt;Mas e o Graceful Degradation?&lt;/h3&gt;

&lt;p&gt;Problemas com compatibilidades sempre existiram e creio que nunca deixarão de existir. Pelo contrário. Esses problemas serão mais comuns embora fiquem mais fáceis de resolver. Não serão apenas probleminhas entre browsers (os browsers existirão em tempos futuros?), mas também entre dispositivos.&lt;/p&gt;

&lt;p&gt;Acontece muito hoje: tentamos acessar um serviço por um determinado browser, e somos aconselhados a utilizar outro browser porque o serviço não é compativel ou não funciona bem no nosso browser predileto.&lt;/p&gt;

&lt;p&gt;Isso tira qualquer um do sério. O site deveria funcionar em qualquer browser. Para exemplificar: se em um meio de acesso eu não consigo utilizar bordas arredondadas nos elementos, os elementos apareceriam sem as bordas arredondadas. Isso não deveria prejudicar minha experiência de uso. Eu perderia um pouco no Design, mas conseguiria utilizar o serviço sem problemas.&lt;/p&gt;

&lt;p&gt;A idéia do Graceful Degradation é exatamente essa: dar a melhor experiência possível ao dispositivo/meio que o usuário estiver utilizando sem prejudicar a acessibilidade.&lt;/p&gt;

&lt;p&gt;Os usuários do IE6 por exemplo podem ficar sem bordas arredondas, position fixed, sombras e pngs semi-transparentes, mas eles precisam acessar e utilizar perfeitamente o site, com a melhor experiência que é possivel dar a este browser.&lt;/p&gt;

&lt;p&gt;Mesma coisa é aplicada aos dispositivos móveis. Estes dispositivos normalmente não tem os mesmos recursos de um desktop. É tudo diferente, desde o poder de processamente até o tamanho das coisas. Então imaginar que o uso do sistema/site será parecido como se fosse acessado por PC, é um erro.&lt;/p&gt;

&lt;p&gt;É um erro também se fizermos um site pensando em dispositivos menos capazes mas não nós lembrarmos do grupo de usuarios que acessam seu site com dispositivos mais completos e modernos. É engraçado porque pensamos sempre no usuário que está no pior cenário. Mas aquele usuário que não seria um problema pra nós, pode se tornar o pior deles.&lt;/p&gt;

&lt;p&gt;Um exemplo disso é quando usuários de iphone acessam sites inteiros feitos em Flash. Sabemos que é uma limitação do aparelho. Mas estes usuários estão crescendo e seu cliente pode estar ali. Normalmente ninuem coloca uma versão diferente da do Flash. Logo, estes usuários simplesmente são ignorados. Imagine a frustação.&lt;/p&gt;

&lt;p&gt;Resumidamente, Graceful Degradation é dar a melhor experiência que você conseguir para o usuário.&lt;/p&gt;

&lt;p&gt;Se ele utiliza o último lançamento da Apple ou se ele utiliza um Nokia 6111 com Opera Mini. Ele precisa ter a melhor experiência que é possível dar dentro dos limites de cada dispositivo.&lt;/p&gt;

&lt;p&gt;Obviamente que vice não vai prever todos os tipos de usuário. Mesmo porque seria impossível fazer isso. Novamente eu digo o óbvio: faça um estudo de público-alvo é importante.&lt;/p&gt;

&lt;p&gt;Para complementar seu estudo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Fault-tolerant_system&#34;&gt;Fault-tolerant System&lt;/a&gt;]&lt;a href=&#34;http://en.wikipedia.org/wiki/Fault-tolerant_system&#34;&gt;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://webtips.dan.info/graceful.html&#34;&gt;Graceful Degradation Dan&amp;#8217;s Web Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.css3.info/graceful-degradation/&#34;&gt;Graceful Degradation &amp;#8211; CSS3.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://accessites.org/site/2007/02/graceful-degradation-progressive-enhancement/&#34;&gt;Graceful Degradation Progressive Enhancement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HTML 5 – Mudanças na estrutura e semântica</title>
      <link>https://tableless.github.io/hugo-public/html5-estrutura-semantica/</link>
      <pubDate>Mon, 16 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/html5-estrutura-semantica/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;Semântica&lt;/strong&gt; sempre um dos pontos mais importantes do &lt;strong&gt;desenvolvimento com Padrões Web&lt;/strong&gt;. Algumas iniciativas com o &lt;strong&gt;&lt;a href=&#34;http://tableless.com.br/microformatos-internet-movel-e-quem-ainda-nao-entendeu-nada&#34;&gt;Microformats&lt;/a&gt;&lt;/strong&gt; vieram na tentativa de trazer mais semântica ainda para nossos códigos, com o intuito de novas aplicações e oportunidades pudessem utilizar melhor a informação distribuída na web. Acontece que o resto do HTML não foi a bastante tempo modificado. Por exemplo, como você consegue distinguir de forma automática as informações do &amp;#8220;header&amp;#8221; (cabeçalho) dos sites? Não consegue. Você não consegue por exemplo, de maneira automatizada, identificar o que é um rodapé ou a parte do layout que está exibindo um artigo, por exemplo.&lt;/p&gt;

&lt;p&gt;Todos os dias sites e mais sites são publicados na internet e nenhum deles com um padrão de nomenclatura de classes e ids que possamos utilizar para extrair informação de maneira inteligente. O &lt;strong&gt;HTML 4.01&lt;/strong&gt; é a versão atual da linguagem básica da Web, e não é atualizado a alguns anos. Esses detalhes de semântica não podem ser supridos para sempre por tecnologias como o Microformats. A versão 5 do HTML tende a suprimir essas necessidades e também atualizar pontos antigos do HTML 4, por exemplo, formulários.&lt;/p&gt;

&lt;p&gt;Como disse no começo deste post, a estrutura de um site não é óbvia para as máquinas. Não existe nenhum padrão de construção dos elementos para indicar o que é o cabeçalho e o que é o rodapé, por exemplo. No &lt;a href=&#34;http://tableless.com.br/html-5-semantica-e-o-que-e-importante-na-web&#34;&gt;HTML 5&lt;/a&gt;, iremos utilizar um padrão de tags que nos ajudará a marcar estas estruturas. Uma estrutura conhecida é mais ou menos assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;body&amp;gt;
  &amp;lt;div id=&#34;header&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div id=&#34;menu&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div class=&#34;post&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div id=&#34;sidebar&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div id=&#34;rodape&#34;&amp;gt;...&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Na estrutura acima, utilizei alguns nomes de classes e ids que costumamos utilizar no dia-a-dia. eu mesmo não utilizo a classe POST, uso mais CONTENT ou algo parecido. A estrutura do HTML acabará com isso. A idéia é substituir esse amontoado de DIVS por elementos que se encarreguem dessas funções, um exemplo da estrutura serial esse:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;body&amp;gt;
  &amp;lt;header&amp;gt;...&amp;lt;/header&amp;gt;
  &amp;lt;nav&amp;gt;...&amp;lt;/nav&amp;gt;
&amp;lt;section&amp;gt;
  &amp;lt;article&amp;gt;
      ...
  &amp;lt;/article&amp;gt;
&amp;lt;/section&amp;gt;
  &amp;lt;aside&amp;gt;...&amp;lt;/aside&amp;gt;
  &amp;lt;footer&amp;gt;...&amp;lt;/footer&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;O elemento &lt;strong&gt;header&lt;/strong&gt; define o cabeçalho. Nav define o menu ou a navegação do site.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Article&lt;/strong&gt; define uma parte da página que tem uma composição de formulários, textos etc. Por exemplo, pode ser um post de forum, blog, comentários etc.&lt;/li&gt;
&lt;li&gt;O elemento &lt;strong&gt;Section&lt;/strong&gt; define uma seção do layout em um determinado element. Ele pode conter um &lt;strong&gt;header&lt;/strong&gt; e também um &lt;strong&gt;footer&lt;/strong&gt; se preciso.&lt;/li&gt;
&lt;li&gt;O elemento &lt;strong&gt;aside&lt;/strong&gt; consiste em envolver informações que tem algo a ver com o conteúdo principal do site. Pode ser um menu lateral, um sidebar padrão com menu, banner, busca etc&amp;#8230;&lt;/li&gt;
&lt;li&gt;Footer define o rodapé do elemento ou do layout.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entenda que agora, qualquer elemento pode ter seu conteúdo separado por seções com o elemento &lt;strong&gt;section&lt;/strong&gt;. Note também que os elementos podem ter também um &lt;strong&gt;header&lt;/strong&gt; e um &lt;strong&gt;footer&lt;/strong&gt; independentes do resto do layout. Como na imagem.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/1999/11/printtableless.gif&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/1999/11/printtableless-300x167.gif&#34; alt=&#34;Exemplo Elemento HEADER&#34; title=&#34;Exemplo Elemento HEADER&#34; width=&#34;300&#34; height=&#34;167&#34; class=&#34;alignnone size-medium wp-image-1178&#34; srcset=&#34;uploads/1999/11/printtableless-300x167.gif 300w, uploads/1999/11/printtableless.gif 603w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uma dúvida comum entre os desenvolvedores é como fazer a estruturação e distribuição das tags de títulos (h1 até h6). Por exemplo, se eu utilizei já a tag H1 no logo do site, poderei utilizar para o título do artigo? Se repetirmos muitas vezes as mesmas tags de títulos, a importância que cada título tem sobre o outro se perderá. O Google poderá indexar de forma diferente e etc.&lt;/p&gt;

&lt;p&gt;No HTML 5 esse problema ser resolverá, porque cada section que você inicia, você poderá começar novamente uma nova ordem de títulos. Por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;header&amp;gt;
  &amp;lt;h1&amp;gt;Logo&amp;lt;/h1&amp;gt;
&amp;lt;/header&amp;gt;
&amp;lt;article&amp;gt;
    &amp;lt;h1&amp;gt;T&amp;iacute;tulo do artigo&amp;lt;/h1&amp;gt;
    &amp;lt;p&amp;gt;texto&amp;lt;/p&amp;gt;
    &amp;lt;h2&amp;gt;Subtitulo&amp;lt;/h2&amp;gt;
    &amp;lt;p&amp;gt;Mais texto&amp;lt;/p&amp;gt;
&amp;lt;/article&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Dessa forma você conseguirá definir exatamente qual a importância de cada título e os leitores de tela, sistemas de busca e outras aplicações conseguirão fazer uma separação mais eficaz dos elementos textuais.&lt;/p&gt;

&lt;p&gt;Entenda que os divs não irão deixar de existir. Você os usará em casos muito específicos, por exemplo, para fazer caixas de destaque:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;section&amp;gt;
    &amp;lt;div class=&#34;destaque&#34;&amp;gt;
       &amp;lt;h1&amp;gt;Destaque 1&amp;lt;/h1&amp;gt;
       &amp;lt;p&amp;gt;Texto&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;destaque&#34;&amp;gt;
       &amp;lt;h1&amp;gt;Destaque 1&amp;lt;/h1&amp;gt;
       &amp;lt;p&amp;gt;Texto&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/section&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Nesse caso estou usando os DIVs apenas por motivos de formatação. Ali não caberia um article, porque o conteúdo não é uma redação de um post, artigo e etc&amp;#8230; Também não caberia uma section porque eu já agrupei este conteúdo dentro de uma section pai.&lt;/p&gt;

&lt;p&gt;Para saber mais sobre isso, leia: &lt;a href=&#34;http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html&#34;&gt;The Elements Of HTML 5&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Irei escrever outros artigos sobre a inserção de vídeo e audio no código e uma série de outros assuntos interessantes sobre HTML 5. E o que você acha disso tudo? Deixe seu comentário!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>