<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Selectors on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/selectors/index.xml</link>
    <description>Recent content in Selectors on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/selectors/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Seletores CSS Nível 4 – O que vem por aí</title>
      <link>https://tableless.github.io/hugo-public/seletores-css-nivel-4-o-que-vem-por-ai/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/seletores-css-nivel-4-o-que-vem-por-ai/</guid>
      <description>

&lt;p&gt;Os seletores do CSS são a coisa mais importante da linguagem. As propriedades você consegue decorar e aprender de acordo com necessidade. Mas os seletores são a sua ferramenta de trabalho. A falta de um seletor adequado é determinante quando você decide fazer aquela gambiarra nojenta para conseguir formatar um elemento específico. Com seletores mais inteligentes, você também previne a chuva de classes que tem sido comum em projetos alheios. Por isso é importante que você conheça os novos seletores de nível 4 do CSS. Eles trazem uma série de novidades importantes para resolver aqueles problema recorrentes principalmente em projetos complexos. Abaixo, veja alguns exemplos.&lt;/p&gt;

&lt;p&gt;Para os mais puristas: quase nenhum destes seletores podem ser usados. A maioria apenas com a ajuda de prefixos e outros com a nomenclatura diferente da do padrão estabelecido. Por isso, não fique esperando que tudo isso poderá ser usado agora. Este é apenas um vislumbre do que você terá como ferramenta nos próximos anos (ou meses?).&lt;/p&gt;

&lt;h2 id=&#34;matcher&#34;&gt;:matcher&lt;/h2&gt;

&lt;p&gt;É uma pseudo-classe que seleciona como argumento uma lista de elementos. Nesse caso, não é possível fazer um seletor com combinadores. Muito útil, veja o exemplo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;section h1, header h1, article h1 {
  color: blue;
}
&lt;/pre&gt;

&lt;p&gt;Seria o mesmo que escrever:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;:matches(section, header, article) h1 {
  color: blue;
}
&lt;/pre&gt;

&lt;p&gt;Para você testar aí no Firefox ou no WebKit, note que eles estão usando um seletor prefixado chamado &lt;strong&gt;any&lt;/strong&gt;. É usado assim: &lt;strong&gt;-moz-any()&lt;/strong&gt; e &lt;strong&gt;-webkit-any()&lt;/strong&gt;. Alguma hora eles irão mudar para o nome definido pelo W3C.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;:-moz-any(section, article, header) h1,
:-webkit-any(section, article, header) h1 {
  color: red;
}
&lt;/pre&gt;

&lt;h2 id=&#34;not&#34;&gt;:not&lt;/h2&gt;

&lt;p&gt;O &lt;strong&gt;:not&lt;/strong&gt; foi apresentado no nível 3 do CSS, mas na versão 4 ele ganha um novo improvement, sendo utilizado assim:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p:not(.active, .visible) {
   color: red;
}
&lt;/pre&gt;

&lt;p&gt;Esse código seleciona todos os parágrafos que não tem a classe ACTIVE ou VISIBLE aplicadas.&lt;/p&gt;

&lt;h2 id=&#34;any-link&#34;&gt;:any-link&lt;/h2&gt;

&lt;p&gt;Esse é uma pequena adição, mas que ajuda bastante. Veja o exemplo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;a:link,
a:visited,
a:actived {
  color: green;
}
&lt;/pre&gt;

&lt;p&gt;É substituído por:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;a:any-link {
  color: green;
}
&lt;/pre&gt;

&lt;h2 id=&#34;case-sensitivity&#34;&gt;Case-sensitivity&lt;/h2&gt;

&lt;p&gt;Atributos e Valores geralmente são minúsculos, mas alguns linguagens ou devs desavisados podem colocar letras maiúsculas nos valores dos atributos do HTML. Isto se torna um problema quando fazemos a seleção dos elementos via atributo e valor, como no exemplo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;a[href$=&#34;PDF&#34;] {
  color: green;
}
&lt;/pre&gt;

&lt;p&gt;Para prevenir isso, basta adicionar uma flag &lt;strong&gt;i&lt;/strong&gt; ainda dentro dos colchetes para que o browser ignore o case-sensitivity dos valores:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;a[href$=&#34;pdf&#34; i] {
  color: green;
}
&lt;/pre&gt;

&lt;h2 id=&#34;dir&#34;&gt;:dir()&lt;/h2&gt;

&lt;p&gt;Seleciona elementos com uma direção de leitura específica. Veja o exemplo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;// Parágrafos com direção de leitura da esquerda para direita
p:dir(ltr) {
  color: green;
}

// Parágrafos com direção de leitura da direita para esquerda
p:dir(rtl) {
  color: red;
}
&lt;/pre&gt;

&lt;h2 id=&#34;read-only-e-read-write&#34;&gt;:read-only e :read-write&lt;/h2&gt;

&lt;p&gt;Outra adição bastante simples. Com essas pseudo-classes nós podemos selecionar e formatar os elementos que são read-only ou read-write na página. Geralmente todos os elementos são apenas read-only. Você não interage ou muda um parágrafo, por exemplo. Você vê um exemplo bastante simples pelos formulários:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;input:-moz-read-only {
  border: 1px solid red;
}

input:-moz-read-write {
  border: 1px solid blue;
}
&lt;/pre&gt;

&lt;h2 id=&#34;subject-seletor&#34;&gt;Subject Seletor&lt;/h2&gt;

&lt;p&gt;Agora você tem a possibilidade de inverter a ordem do seletor. Calma, eu explico: o seletor é lido sempre da direita para a esquerda. Mas agora você pode inverter essa ordem usando a flag &lt;strong&gt;!&lt;/strong&gt; no começo do seletor. Assim:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;!ul &gt; li {
  border: 1px solid blue;
}
&lt;/pre&gt;

&lt;p&gt;No caso acima, a &lt;strong&gt;UL&lt;/strong&gt; ficará com a borda. Bem interessante! Coisa lindíssima.&lt;/p&gt;

&lt;h2 id=&#34;entre-outros&#34;&gt;Entre outros&lt;/h2&gt;

&lt;p&gt;Existem uma &lt;a href=&#34;http://dev.w3.org/csswg/selectors-4/#overview&#34;&gt;listagem completa na documentação do W3C&lt;/a&gt; que mostra não apenas os seletores de nível 4, mas também os seletores que entraram nas versões anteriores. Vale a pena dar uma lida na documentação.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://css4-selectors.com/selectors/&#34;&gt;Neste link&lt;/a&gt; você encontra uma listagem com exemplos de sintaxe&lt;/p&gt;

&lt;p&gt;Alguns seletores eu queria muito ver funcionando, como é o caso das time-pseudos &lt;a href=&#34;http://dev.w3.org/csswg/selectors-4/#time-pseudos&#34;&gt;:current, :past e :future&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>