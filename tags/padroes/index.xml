<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Padroes on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/padroes/index.xml</link>
    <description>Recent content in Padroes on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/padroes/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Processos e Ado√ß√£o de Padr√µes</title>
      <link>https://tableless.github.io/hugo-public/processos-adocao-padroes/</link>
      <pubDate>Wed, 03 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/processos-adocao-padroes/</guid>
      <description>

&lt;p&gt;HTML 5 ou CSS 3 j√° podem ser usados? Quando o HTML 5 ser√° lan√ßado?&lt;/p&gt;

&lt;p&gt;Estou ouvindo demais essas perguntas. A resposta que darei, vai servir para as duas perguntas e para perguntas futuras sobre outras recomenda√ß√µes do W3C.&lt;/p&gt;

&lt;p&gt;Para termos uma vis√£o melhor, voc√™ precisa entender como o W3C funciona.&lt;/p&gt;

&lt;h3 id=&#34;padr√µes-e-recomenda√ß√µes&#34;&gt;Padr√µes e Recomenda√ß√µes&lt;/h3&gt;

&lt;p&gt;O W3C √© um √≥rg√£o que regulamenta, cria e desenvolve linguagens para publica√ß√£o de conte√∫do na internet. H√° uma diferen√ßa muito grande entre padr√£o e recomenda√ß√£o. O W3C n√£o faz padr√µes, ele recomenda m√©todos e linguagens. Uma recomenda√ß√£o se torna padr√£o porque h√° a ader√™ncia da comunidade. Normalmente uma recomenda√ß√£o do W3C vira padr√£o, porque o W3C est√° l√° para isso, eles trabalham para que seja assim. Entretanto, voc√™ pode criar uma linguagem como o HTML, e submeter para a aprova√ß√£o do W3C ou fazer o &amp;#8220;marketing&amp;#8221; dela sozinho e torcer para que a comunidade de desenvolvedores e fabricantes de browsers o ap√≥iem. Isso √© dif√≠cil de fazer, mas n√£o imposs√≠vel. Aconteceu com o pessoal do WHATWG com o HTML 5. Um grupo de desenvolvedores estavam descontentes com o caminho que o W3C estava tomando em rela√ß√£o ao XHTML 2 e ao HTML. Ent√£o resolveram criar um grupo para escrever um novo padr√£o da linguagem HTML. O W3C se convenceu e adotou o padr√£o do HTML 5 que eles estavam escrevendo.&lt;/p&gt;

&lt;p&gt;Claro que esse grupo foi inspirado por desenvolvedores da Apple, Mozilla e Opera, mas isso foi s√≥ um detalhe. üòâ&lt;/p&gt;

&lt;h3 id=&#34;processo-de-ado√ß√£o&#34;&gt;Processo de ado√ß√£o&lt;/h3&gt;

&lt;p&gt;O W3C recomenda m√©todos e linguagens, o mercado acata e vira um padr√£o. Uma id√©ia do W3C, assim que nasce, n√£o √© j√° indicada para uso. Para que isso aconte√ßa h√° um processo de aprova√ß√£o e testes. Esse processo √© dividido por passos:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Working Draft&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Last Call&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Candidate Recommendation (CR)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Proposed Recommendation (PR)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;W3C Recommendation (REC)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;No Working Draft o W3C publica um documento para a comunidade e grupos de membros do W3C. Trate isso como uma ideia rascunhada no papel, onde eles est√£o perguntando para todos os interessados se √© interessante e vale a pena continuar.&lt;/p&gt;

&lt;p&gt;No Last Call, o W3C publica os deadlines do projeto, e pede para que todos os grupos de trabalho que de alguma forma est√£o envolvidos naquele projeto, enviem seus reviews. H√° uma fase dentro do Last Call onde o W3C pede para o p√∫blico, que somos n√≥s, enviar reviews e id√©ias sobre o assunto.&lt;/p&gt;

&lt;p&gt;No Cadidate Recommendation, o W3C j√° acredita na tecnologia proposta. Ela foi largamente revista por t√©cnicos de dentro e fora do W3C e por todos os grupos de trabalho envolvidos no processo. Nesse ponto, h√° o come√ßo da experi√™ncia de implementa√ß√£o dessa nova tecnologia. Normalmente alguns browsers j√° implementam essa ideia para que possa ser utilizada por desenvolvedores mundo afora.&lt;/p&gt;

&lt;p&gt;Depois dessa fase, entramos na Proposed Recommendation. Nessa fase a recomenda√ß√£o √© enviada para o W3C Advisory Committee para que eles aprovem a ado√ß√£o final que ser√° um novo padr√£o no mercado. Entenda que nesse meio tempo, h√° um processo de testes, implementa√ß√£o e desenvolvimento muito criterioso. √â o mundo inteiro testando e sugerindo revis√µes para que a tecnologia seja realmente interessante e inteligente o suficiente para suprir as expectativas.&lt;/p&gt;

&lt;p&gt;Quando essa especifica√ß√£o √© aprovada, chegamos ao √∫ltimo est√°gio, onde a id√©ia inicial vira uma Recomenda√ß√£o. A√≠ sim os fabricantes de browsers e desenvolvedores poder√£o utilizar em seus projetos.&lt;/p&gt;

&lt;p&gt;Para ficar mais f√°cil imaginar, tente pensar em um calhama√ßo de papel. Nesse calhama√ßo cont√©m um manual de instru√ß√µes de uso, implementa√ß√£o e detalhes t√©cnicos de como os browsers devem renderizar as instru√ß√µes, instru√ß√µes de como os desenvolvedores devem aplicar e escrever o c√≥digo.&lt;/p&gt;

&lt;p&gt;Engra√ßado que tudo isso gira em torno de ideias escritas, revisadas e reescritas. Claro que eles fazem testes reais em browsers reais durante todo o processo. Por isso h√° integrantes de todos os browsers nas equipes para representar cada um dos browsers do mercado. √â um trabalho conjunto.&lt;/p&gt;

&lt;h3 id=&#34;mas-e-a√≠-podemos-ou-n√£o-usar&#34;&gt;Mas e a√≠, podemos ou n√£o usar?&lt;/h3&gt;

&lt;p&gt;Durante muito tempo o CSS foi lan√ßado em vers√µes. Hoje temos 2 vers√µes completas (CSS 1 e 2) e uma revis√£o (CSS 2.1). O time de desenvolvimento do W3C lan√ßavam atualiza√ß√µes fechadas, ou seja, para haver um lan√ßamento oficial, a especifica√ß√£o do CSS teria de ser totalmente desenvolvida, testada e aprovada. O CSS e o HTML passavam inteiros por todos os processos acima. Por isso, os lan√ßamentos de atualiza√ß√µes no HTML e no CSS eram t√£o demorados.&lt;/p&gt;

&lt;p&gt;Hoje, a aprova√ß√£o do CSS3 est√° sendo feito por m√≥dulos, assim como o HTML5. H√° uma equipe para cada uma das principais propriedades do CSS. Por exemplo, h√° uma equipe que trabalha exclusivamente para o desenvolvimento do background no CSS3. Quando essa equipe acha que j√° fez um bom avan√ßo, a propriedade de background, separada do resto da linguagem, passa por todo aquele processo que conhecemos no come√ßo do artigo. Isso facilita a ado√ß√£o dos browsers e dos desenvolvedores.&lt;/p&gt;

&lt;p&gt;Por isso que hoje, mais do que nunca, √© necess√°rio que os desenvolvedores pratiquem o Graceful Degradation e do Progressive Enhancement. Pode ser que um browser n√£o suporte uma determinada propriedade porque deu foco para outra propriedade. Isso faz com que a taxa de incompatibilidade de browsers aumente. Se levarmos em conta que os browsers est√£o mais espertos e suas atualiza√ß√µes est√£o sendo mais breves, isso n√£o ser√° grande problema. Nosso problema atual √© exatamente browsers antigos que n√£o recebem mais atualiza√ß√£o. O IE6 est√° deixando de ser esse caso. A taxa de utiliza√ß√£o do IE6 j√° est√° bem abaixo do IE7. Claro que em alguns casos isso n√£o √© motivador porque trata-se de p√∫blico espec√≠fico ou cliente interno. Mas a grande maioria do mercado j√° est√° sem essa sombra.&lt;/p&gt;

&lt;p&gt;Querendo ou n√£o, essa nova forma de o W3C lan√ßar atualiza√ß√µes em m√≥dulos, mexe com a din√¢mica do mercado. N√£o apenas os browsers precisam de atualiza√ß√µes r√°pidas, mas o desenvolvedor tamb√©m. Cada uma das atualiza√ß√µes lan√ßadas, minimizam o tempo de trabalho, melhoram o processo de desenvolvimento e priorizam a qualidade de c√≥digo. Outro passo importante para o desenvolvedor √© entender que o site que ele escreve, √© port√°vel para qualquer tipo de dispositivo. O desenvolvedor √© uma esp√©cie de mensageiro. O conte√∫do precisa entregue em diversos meios, e √© o desenvolvedor que possibilita isso.&lt;/p&gt;

&lt;p&gt;Alguns links para que voc√™ conhe√ßa mais sobre o processo est√£o abaixo. Isso tudo pode ser encontrado no site do W3C. Basta ler.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3.org/Consortium/&#34; title=&#34;Sobre o W3C&#34;&gt;About W3C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3.org/2005/10/Process-20051014/tr#maturity-levels&#34; title=&#34;N√≠veis de aprova√ß√£o&#34;&gt;N√≠veis de aprova√ß√£o&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3.org/Style/CSS/current-work#test&#34; title=&#34;Projeto actual do CSS&#34;&gt;Current Work do CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HTML 5 ‚Äì Mudan√ßas na estrutura e sem√¢ntica</title>
      <link>https://tableless.github.io/hugo-public/html5-estrutura-semantica/</link>
      <pubDate>Mon, 16 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/html5-estrutura-semantica/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;Sem√¢ntica&lt;/strong&gt; sempre um dos pontos mais importantes do &lt;strong&gt;desenvolvimento com Padr√µes Web&lt;/strong&gt;. Algumas iniciativas com o &lt;strong&gt;&lt;a href=&#34;http://tableless.com.br/microformatos-internet-movel-e-quem-ainda-nao-entendeu-nada&#34;&gt;Microformats&lt;/a&gt;&lt;/strong&gt; vieram na tentativa de trazer mais sem√¢ntica ainda para nossos c√≥digos, com o intuito de novas aplica√ß√µes e oportunidades pudessem utilizar melhor a informa√ß√£o distribu√≠da na web. Acontece que o resto do HTML n√£o foi a bastante tempo modificado. Por exemplo, como voc√™ consegue distinguir de forma autom√°tica as informa√ß√µes do &amp;#8220;header&amp;#8221; (cabe√ßalho) dos sites? N√£o consegue. Voc√™ n√£o consegue por exemplo, de maneira automatizada, identificar o que √© um rodap√© ou a parte do layout que est√° exibindo um artigo, por exemplo.&lt;/p&gt;

&lt;p&gt;Todos os dias sites e mais sites s√£o publicados na internet e nenhum deles com um padr√£o de nomenclatura de classes e ids que possamos utilizar para extrair informa√ß√£o de maneira inteligente. O &lt;strong&gt;HTML 4.01&lt;/strong&gt; √© a vers√£o atual da linguagem b√°sica da Web, e n√£o √© atualizado a alguns anos. Esses detalhes de sem√¢ntica n√£o podem ser supridos para sempre por tecnologias como o Microformats. A vers√£o 5 do HTML tende a suprimir essas necessidades e tamb√©m atualizar pontos antigos do HTML 4, por exemplo, formul√°rios.&lt;/p&gt;

&lt;p&gt;Como disse no come√ßo deste post, a estrutura de um site n√£o √© √≥bvia para as m√°quinas. N√£o existe nenhum padr√£o de constru√ß√£o dos elementos para indicar o que √© o cabe√ßalho e o que √© o rodap√©, por exemplo. No &lt;a href=&#34;http://tableless.com.br/html-5-semantica-e-o-que-e-importante-na-web&#34;&gt;HTML 5&lt;/a&gt;, iremos utilizar um padr√£o de tags que nos ajudar√° a marcar estas estruturas. Uma estrutura conhecida √© mais ou menos assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;body&amp;gt;
  &amp;lt;div id=&#34;header&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div id=&#34;menu&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div class=&#34;post&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div id=&#34;sidebar&#34;&amp;gt;...&amp;lt;/div&amp;gt;
   &amp;lt;div id=&#34;rodape&#34;&amp;gt;...&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Na estrutura acima, utilizei alguns nomes de classes e ids que costumamos utilizar no dia-a-dia. eu mesmo n√£o utilizo a classe POST, uso mais CONTENT ou algo parecido. A estrutura do HTML acabar√° com isso. A id√©ia √© substituir esse amontoado de DIVS por elementos que se encarreguem dessas fun√ß√µes, um exemplo da estrutura serial esse:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;body&amp;gt;
  &amp;lt;header&amp;gt;...&amp;lt;/header&amp;gt;
  &amp;lt;nav&amp;gt;...&amp;lt;/nav&amp;gt;
&amp;lt;section&amp;gt;
  &amp;lt;article&amp;gt;
      ...
  &amp;lt;/article&amp;gt;
&amp;lt;/section&amp;gt;
  &amp;lt;aside&amp;gt;...&amp;lt;/aside&amp;gt;
  &amp;lt;footer&amp;gt;...&amp;lt;/footer&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;O elemento &lt;strong&gt;header&lt;/strong&gt; define o cabe√ßalho. Nav define o menu ou a navega√ß√£o do site.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Article&lt;/strong&gt; define uma parte da p√°gina que tem uma composi√ß√£o de formul√°rios, textos etc. Por exemplo, pode ser um post de forum, blog, coment√°rios etc.&lt;/li&gt;
&lt;li&gt;O elemento &lt;strong&gt;Section&lt;/strong&gt; define uma se√ß√£o do layout em um determinado element. Ele pode conter um &lt;strong&gt;header&lt;/strong&gt; e tamb√©m um &lt;strong&gt;footer&lt;/strong&gt; se preciso.&lt;/li&gt;
&lt;li&gt;O elemento &lt;strong&gt;aside&lt;/strong&gt; consiste em envolver informa√ß√µes que tem algo a ver com o conte√∫do principal do site. Pode ser um menu lateral, um sidebar padr√£o com menu, banner, busca etc&amp;#8230;&lt;/li&gt;
&lt;li&gt;Footer define o rodap√© do elemento ou do layout.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entenda que agora, qualquer elemento pode ter seu conte√∫do separado por se√ß√µes com o elemento &lt;strong&gt;section&lt;/strong&gt;. Note tamb√©m que os elementos podem ter tamb√©m um &lt;strong&gt;header&lt;/strong&gt; e um &lt;strong&gt;footer&lt;/strong&gt; independentes do resto do layout. Como na imagem.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/1999/11/printtableless.gif&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/1999/11/printtableless-300x167.gif&#34; alt=&#34;Exemplo Elemento HEADER&#34; title=&#34;Exemplo Elemento HEADER&#34; width=&#34;300&#34; height=&#34;167&#34; class=&#34;alignnone size-medium wp-image-1178&#34; srcset=&#34;uploads/1999/11/printtableless-300x167.gif 300w, uploads/1999/11/printtableless.gif 603w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uma d√∫vida comum entre os desenvolvedores √© como fazer a estrutura√ß√£o e distribui√ß√£o das tags de t√≠tulos (h1 at√© h6). Por exemplo, se eu utilizei j√° a tag H1 no logo do site, poderei utilizar para o t√≠tulo do artigo? Se repetirmos muitas vezes as mesmas tags de t√≠tulos, a import√¢ncia que cada t√≠tulo tem sobre o outro se perder√°. O Google poder√° indexar de forma diferente e etc.&lt;/p&gt;

&lt;p&gt;No HTML 5 esse problema ser resolver√°, porque cada section que voc√™ inicia, voc√™ poder√° come√ßar novamente uma nova ordem de t√≠tulos. Por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;header&amp;gt;
  &amp;lt;h1&amp;gt;Logo&amp;lt;/h1&amp;gt;
&amp;lt;/header&amp;gt;
&amp;lt;article&amp;gt;
    &amp;lt;h1&amp;gt;T&amp;iacute;tulo do artigo&amp;lt;/h1&amp;gt;
    &amp;lt;p&amp;gt;texto&amp;lt;/p&amp;gt;
    &amp;lt;h2&amp;gt;Subtitulo&amp;lt;/h2&amp;gt;
    &amp;lt;p&amp;gt;Mais texto&amp;lt;/p&amp;gt;
&amp;lt;/article&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Dessa forma voc√™ conseguir√° definir exatamente qual a import√¢ncia de cada t√≠tulo e os leitores de tela, sistemas de busca e outras aplica√ß√µes conseguir√£o fazer uma separa√ß√£o mais eficaz dos elementos textuais.&lt;/p&gt;

&lt;p&gt;Entenda que os divs n√£o ir√£o deixar de existir. Voc√™ os usar√° em casos muito espec√≠ficos, por exemplo, para fazer caixas de destaque:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;section&amp;gt;
    &amp;lt;div class=&#34;destaque&#34;&amp;gt;
       &amp;lt;h1&amp;gt;Destaque 1&amp;lt;/h1&amp;gt;
       &amp;lt;p&amp;gt;Texto&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;destaque&#34;&amp;gt;
       &amp;lt;h1&amp;gt;Destaque 1&amp;lt;/h1&amp;gt;
       &amp;lt;p&amp;gt;Texto&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/section&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Nesse caso estou usando os DIVs apenas por motivos de formata√ß√£o. Ali n√£o caberia um article, porque o conte√∫do n√£o √© uma reda√ß√£o de um post, artigo e etc&amp;#8230; Tamb√©m n√£o caberia uma section porque eu j√° agrupei este conte√∫do dentro de uma section pai.&lt;/p&gt;

&lt;p&gt;Para saber mais sobre isso, leia: &lt;a href=&#34;http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html&#34;&gt;The Elements Of HTML 5&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Irei escrever outros artigos sobre a inser√ß√£o de v√≠deo e audio no c√≥digo e uma s√©rie de outros assuntos interessantes sobre HTML 5. E o que voc√™ acha disso tudo? Deixe seu coment√°rio!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jQuery √© bom para designers</title>
      <link>https://tableless.github.io/hugo-public/jquery-e-bom-para-designers/</link>
      <pubDate>Tue, 05 Aug 2008 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/jquery-e-bom-para-designers/</guid>
      <description>&lt;p&gt;No come√ßo da web JavaScript era considerado uma linguagem de programa√ß√£o completamente dif√≠cil e in√∫til. Afinal, depois de uma semana estudando a linguagem, o sujeito s√≥ conseguia escrever um script que validasse um formul√°rio de contato que muitas vezes dava erro em outros browsers que n√£o o Internet Explorer. Isso acontecia porque tanto o Netscape quanto o Browser azul tinha seus pr√≥rpios padr√µes de implementa√ß√µes de solu√ß√£o para o Javascript que era ainda estava engatinhando como linguagem.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Dessa forma, muitos c√≥digos propriet√°rios solucionavam problemas em determinado browser, que faziam o programador javascript (sim, isso j√° foi cargo) fazer muita volta para solucionar em outro browser. Isso acarretava em problemas imensos em manuten√ß√£o. O cliente, em um belo domingo de sol ligava e dizia que o formul√°rio estava &amp;#8220;pulando&amp;#8221;, muitas vezes acompanhado de um n√£o sei nem o que √© browser/navegador: &amp;#8220;eu dou dois cliques no √≠cone da internet e entro&amp;#8221;. Ent√£o l√° ia o programador e precisava revisar dois, tr√™s c√≥digos que faziam a mesma coisa em navegadores diferentes.&lt;/p&gt;

&lt;p&gt;Ainda bem que, assim como o HTML e o CSS, o JavaScript tamb√©m sofreu sua padroniza√ß√£o, facilitando a cria√ß√£o de &lt;a href=&#34;http://elcio.com.br/reusable/jquery/diretrizes.pt&#34;&gt;scripts que facilitam muito a vida do designer&lt;/a&gt;, deixando o designer cada vez mais feliz sem precisar consultar um programador. Uma dessas solu√ß√µes foi a biblioteca &lt;a href=&#34;http://jquery.com&#34;&gt;jQuery&lt;/a&gt;. Uma biblioteca t√£o simples que designers conseguem fazer √≥timos efeitos com apenas algumas linhas de comando.&lt;/p&gt;

&lt;p&gt;Vamos a um exemplo/tutorial pr√°tico: um menu com submenus. Quando a pessoa clicar no link o submenu deve aparecer, com um efeito de slide.&lt;/p&gt;

&lt;p&gt;Para o html usamos uma marca√ß√£o simples, indicando quem √© o menu e quem √© o submenu.&lt;/p&gt;

&lt;pre lang=&#34;html&#34; line=&#34;1&#34;&gt;&lt;ul class=&#34;menu&#34;&gt;
  &lt;li&gt;
    &lt;a href=&#34;#&#34;&gt;Item 1&lt;/a&gt;
  &lt;/li&gt;
  
  
  &lt;li class=&#34;itemPai&#34;&gt;
    Item 2
  &lt;/li&gt;
  
  
  &lt;ul class=&#34;subMenu&#34;&gt;
    &lt;li&gt;
      &lt;a href=&#34;#&#34;&gt;SubItem 1&lt;/a&gt;
    &lt;/li&gt;
    
    
    &lt;li&gt;
      &lt;a href=&#34;#&#34;&gt;SubItem 2&lt;/a&gt;
    &lt;/li&gt;
    
    
    &lt;li&gt;
      &lt;a href=&#34;#&#34;&gt;SubItem 3&lt;/a&gt;
    &lt;/li&gt;
    
  &lt;/ul&gt;
  
  
  &lt;li&gt;
    &lt;a href=&#34;#&#34;&gt;Item 3&lt;/a&gt;
  &lt;/li&gt;
  
  
  &lt;li&gt;
    &lt;a href=&#34;#&#34;&gt;Item 4&lt;/a&gt;
  &lt;/li&gt;
  
  
  &lt;li&gt;
    &lt;a href=&#34;#&#34;&gt;Item 5&lt;/a&gt;
  &lt;/li&gt;
  
&lt;/ul&gt;
&lt;/pre&gt;

&lt;p&gt;Para ativar o jQuery voc√™ precisa baix√°-la do site oficial (√© apenas um aquivo js pequenininho) e coloque-a de preferencia na pasta ou em uma subpasta de onde est√° seu aquivo html, precisamos colocar a seguinte linha (de preferencia entre as tags &lt;head&gt; e &lt;/head&gt; ):&lt;/p&gt;

&lt;pre&gt;&amp;lt;script type=&#34;text/javascript&#34; src=&#34;pasta/onde/est√°/a/jquery.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Ap√≥s a inclus√£o da jQuery podemos us√°-la sem problemas. Coloque seu c√≥digo entre as tags &lt;script&gt; e &lt;script&gt; depois da chamada da jQuery. Tenha em mente que todo o que voc√™ vai fazer √© chamado pela chave $ e interligamos os comandos com pontos. Ent√£o, para chamarmos o elemento que queremos colocar uma a√ß√£o, no caso clicar, usamos a chave $ e para referenciamos, usamos as mesmas chamadas que usamos para o css.&lt;/p&gt;

&lt;pre&gt;$(&#39;ul.menu li.itemPai&#39;)&lt;/pre&gt;

&lt;p&gt;Agora, linkamos esse objeto com a a√ß√£o click, ou seja quando a pessoa clicar no link propriamente dito.&lt;/p&gt;

&lt;pre&gt;$(&#39;ul.menu li.itemPai&#39;).click()&lt;/pre&gt;

&lt;p&gt;E passamos para ele uma fun√ß√£o que far√° nosso efeito de slide.&lt;/p&gt;

&lt;pre lang=&#34;javascript&#34; line=&#34;1&#34;&gt;$(&#39;ul.menu li.itemPai&#39;).click(function(){
// Aqui vir√° a fun√ß√£o
})
&lt;/pre&gt;

&lt;p&gt;Agora, a fun√ß√£o que far√° o efeito. Chamamos com a chave $ quem queremos animar e o linkamos com o tipo de anima√ß√£o. Para o efeito de slide (ou seja, encolher e esticar o elemento dando a ilus√£o de que ele est√° saindo de tr√°s do outro elemento para baixo) a jQuery tem dois efeitos prontos que s√£o: slideUp que recolhe o elemento e slideDown que expande o elemento. Ainda temos o slideToggle, que recolhe o elemento se estiver expandido ou vice-versa. Ent√£o iremos usar slideToggle para este efeito. Tamb√©m usamos o return false para fazer com que o link n√£o seja executado, retirando o usuario da nossa p√°gina.&lt;/p&gt;

&lt;pre lang=&#34;javascript&#34; line=&#34;1&#34;&gt;$(&#39;ul.menu li.itemPai&#39;).click(function(){
$(&#39;.menu .submenu&#39;).slideToggle()
return false
})&lt;/pre&gt;

&lt;p&gt;E voil√°, o efeito est√° pronto. Exceto por um problema&amp;#8230; Se voc√™ colocar este script antes do seu menu, ele n√£o vai funcionar porque voc√™ esta referenciando um elemento que ainda n√£o existe para o navegador, logo ele n√£o pode referenciar ningu√©m. Uma solu√ß√£o seria colocar o seu script ap√≥s o seu c√≥digo html, mas isso vai contra uma das pr√°ticas de &lt;a href=&#34;http://tableless.com.br/faq&#34;&gt;tableless&lt;/a&gt; que √© trabalhar com camadas e, assim como o CSS, n√£o √© interessante deixar ele entre o c√≥digo html por n raz√µes. A outra solu√ß√£o faz parte do escopo do jQuery que faz com que seu script s√≥ rode ap√≥s o carregamento completo do seu c√≥digo html. Para isso basta criar uma fun√ß√£o que englobe seu script dentro da chave $. Ficando assim:&lt;/p&gt;

&lt;pre lang=&#34;javascript&#34; line=&#34;1&#34;&gt;$(function(){
$(&#39;ul.menu li.itemPai&#39;).click(function(){
$(&#39;.menu .submenu&#39;).slideToggle()
return false
})
})&lt;/pre&gt;

&lt;p&gt;Isto resolve nosso problema. Agora, precisamos esconder nosso submenu quando a p√°gina carregar. Fazemos isso via javascript e n√£o via css porque n√£o queremos que o menu fique invisivel para pessoas que n√£o usam javascript. Para isso, a jQuery tem a fun√ß√£o hide que esconde um elemento (display:none). Se voc√™ quiser fazer o contrario, basta usar show no lugar de hide.&lt;/p&gt;

&lt;pre lang=&#34;javascript&#34; line=&#34;1&#34;&gt;&lt;/pre&gt;

&lt;p&gt;E esse √© o nosso script final que pode ser visto &lt;a href=&#34;http://dgmike.com.br/tableless/jquery/menu-simples.html&#34;&gt;aqui&lt;/a&gt; e &lt;a href=&#34;http://dgmike.com.br/tableless/jquery/menu-simples-arquivos-importados.html&#34;&gt;aqui com aplica√ß√£o de CSS b√°sico&lt;/a&gt;. O interessante da jQuery √© que ela √© bem inuitiva e tem muitas coisas que j√° vem no escopo dela que resolvem muitos problemas que os designers querem desenvolver, mas n√£o querem que um programador fa√ßa por ser uma coisa t√£o simples de fazer. jQuery √© a parte da programa√ß√£o que os designers sentiam falta e muitas vezes contornavam com um arquivo flash que destruia a semantica de √°rea como o menu que acabamos de construir.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSS Frameworks ou como desaprender CSS</title>
      <link>https://tableless.github.io/hugo-public/css-frameworks-ou-como-desaprender-css/</link>
      <pubDate>Tue, 09 Oct 2007 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/css-frameworks-ou-como-desaprender-css/</guid>
      <description>&lt;p&gt;O papo que agora est√° come√ßando a rolar entre os desenvolvedores √© sobre Frameworks para CSS.&lt;/p&gt;

&lt;p&gt;Sou totalmente contra a qualquer coisa que impe√ßa o contato do desenvolvedor com o c√≥digo. Sou avesso a qualquer tipo de interface que prometa facilitar o desenvolvimento, pelo menos de XHTML e CSS. Lembra daquele papo sobre o &lt;a href=&#34;http://tableless.com.br/desenvolvedor-analfabetico-sim-e-sobre-wysiwyg&#34;&gt;desenvolvedor &amp;#8220;analb√©tico&amp;#8221; de c√≥digo&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Ainda acho que utilizar editores que suportam Snippets &amp;#8211; ou Macros, dependendo do editor &amp;#8211; s√£o as melhores formas de se trabalhar se voc√™ quer agilidade. Voc√™ mant√©m o contato com o c√≥digo e agiliza seu trabalho ao mesmo tempo.&lt;/p&gt;

&lt;p&gt;Lembre-se de que estamos falando sobre frameworks de CSS e XHTML. Nada de Django ou qualquer outro tipo de framework para linguagens server side.&lt;/p&gt;

&lt;p&gt;Esses tipos de frameworks ajudam um bocado o programador. Boa parte do trabalho duro pode ser agilizado por causa destes frameworks. E at√© concordo que os desenvolvedores utilizem frameworks deste tipo para ajudar em seu trabalho.&lt;/p&gt;

&lt;p&gt;O problema √© um que eu j√° comentei com voc√™ e j√° falei bastante em palestras: o programador, muitas vezes √© um bicho mais antenado que o designer ou o camarada que cuida de interface. Ele precisa estudar, precisa procurar solu√ß√µes mais complexas para problemas mais espec√≠ficos. Por isso, √© bom que existam esse tipo de framework para que o trabalho dele seja mais √°gil. Ele n√£o vai desaprender a programar.&lt;/p&gt;

&lt;p&gt;√â importante que o desenvolvedor web saiba que o c√≥digo √© o mestre. Ler, compreender e escrever c√≥digo √© essencial para que tenhamos o controle sobre o projeto. √â importante tamb√©m para que a pessoa se torne um profissional decente e que tenha algum valor (desculpe aos mais fracos de est√¥mago).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://warpspire.com/features/css-frameworks/&#34;&gt;Why don&amp;#8217;t use CSS Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.smashingmagazine.com/2007/09/21/css-frameworks-css-reset-design-from-scratch/&#34;&gt;CSS Frameworks CSS Reset Design from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.contentwithstyle.co.uk/Articles/17/&#34;&gt;A CSS Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[O papo que agora est√° come√ßando a rolar entre os desenvolvedores √© sobre Frameworks para CSS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sou totalmente contra a qualquer coisa que impe√ßa o contato do desenvolvedor com o c√≥digo. Sou avesso a qualquer tipo de interface que prometa facilitar o desenvolvimento, pelo menos de XHTML e CSS. Lembra daquele papo sobre o &lt;a href=&#34;http://tableless.com.br/desenvolvedor-analfabetico-sim-e-sobre-wysiwyg&#34;&gt;desenvolvedor &amp;#8220;analb√©tico&amp;#8221; de c√≥digo&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Ainda acho que utilizar editores que suportam Snippets &amp;#8211; ou Macros, dependendo do editor &amp;#8211; s√£o as melhores formas de se trabalhar se voc√™ quer agilidade. Voc√™ mant√©m o contato com o c√≥digo e agiliza seu trabalho ao mesmo tempo.&lt;/p&gt;

&lt;p&gt;Lembre-se de que estamos falando sobre frameworks de CSS e XHTML. Nada de Django ou qualquer outro tipo de framework para linguagens server side.&lt;/p&gt;

&lt;p&gt;Esses tipos de frameworks ajudam um bocado o programador. Boa parte do trabalho duro pode ser agilizado por causa destes frameworks. E at√© concordo que os desenvolvedores utilizem frameworks deste tipo para ajudar em seu trabalho.&lt;/p&gt;

&lt;p&gt;O problema √© um que eu j√° comentei com voc√™ e j√° falei bastante em palestras: o programador, muitas vezes √© um bicho mais antenado que o designer ou o camarada que cuida de interface. Ele precisa estudar, precisa procurar solu√ß√µes mais complexas para problemas mais espec√≠ficos. Por isso, √© bom que existam esse tipo de framework para que o trabalho dele seja mais √°gil. Ele n√£o vai desaprender a programar.&lt;/p&gt;

&lt;p&gt;√â importante que o desenvolvedor web saiba que o c√≥digo √© o mestre. Ler, compreender e escrever c√≥digo √© essencial para que tenhamos o controle sobre o projeto. √â importante tamb√©m para que a pessoa se torne um profissional decente e que tenha algum valor (desculpe aos mais fracos de est√¥mago).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://warpspire.com/features/css-frameworks/&#34;&gt;Why don&amp;#8217;t use CSS Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.smashingmagazine.com/2007/09/21/css-frameworks-css-reset-design-from-scratch/&#34;&gt;CSS Frameworks CSS Reset Design from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.contentwithstyle.co.uk/Articles/17/&#34;&gt;A CSS Framework&lt;/a&gt;
*]&lt;a href=&#34;http://tableless.com.br/desenvolvedor-analfabetico-sim-e-sobre-wysiwyg&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>