<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Standards on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/web-standards/index.xml</link>
    <description>Recent content in Web Standards on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/web-standards/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Criando seu próprio servidor HTTP do zero (ou quase) – Parte III</title>
      <link>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-iii/</link>
      <pubDate>Mon, 05 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-iii/</guid>
      <description>

&lt;p&gt;Estamos entrando na terceira parte do tutorial, e quem está acompanhando até aqui já sabe então como funciona a comunicação entre cliente e servidor, envio de requisição pelo cliente e recebimento de resposta (na duvida só voltar e releia a &lt;a href=&#34;http://tableless.com.br/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-i/&#34; title=&#34;Criando seu próprio servidor HTTP do zero (ou quase) – Parte I&#34;&gt;Parte I&lt;/a&gt; e/ou &lt;a href=&#34;http://tableless.com.br/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-ii/&#34; title=&#34;Criando seu próprio servidor HTTP do zero (ou quase) – Parte II&#34;&gt;Parte II&lt;/a&gt;), porém o que a gente quer é criar o servidor, receber as requisições e enviar a resposta ao cliente.&lt;/p&gt;

&lt;h2 id=&#34;o-servidor&#34;&gt;O Servidor&lt;/h2&gt;

&lt;p&gt;A idéia do servidor é bem simples e estende a do cliente, como assim? Fácil, fácil. no post anterior vimos como criar um socket, no caso, nos criamos um socket já conectado ao site do google, mas o que internamente acontece é, criamos um socket, associamos esse socket a uma porta (lembrando que no caso do cliente a porta aberta é aleatória, so para que o servidor saiba onde deve retornar a resposta) e conectamos ao socket do servidor na porta especifica.&lt;/p&gt;

&lt;p style=&#34;text-align: justify&#34;&gt;
  Agora vamos pensar um pouco, no caso do servidor, temos que criar um socket, associar (bind) a uma porta especifica(para que todos os clientes saibam exatamente onde conectar) e ficamos aguardando alguém solicitar uma conexão (listen), se alguém solicitar conexão nós aceitamos (accept), resumindo o processo, temos como na imagem abaixo:
&lt;/p&gt;

&lt;div style=&#34;width: 369px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;http://3.bp.blogspot.com/_Gt5b2CU22sM/S4iS4lbeU5I/AAAAAAAAAUU/DBmariOce1o/s400/rzab6503.gif&#34;&gt;&lt;img src=&#34;http://3.bp.blogspot.com/_Gt5b2CU22sM/S4iS4lbeU5I/AAAAAAAAAUU/DBmariOce1o/s400/rzab6503.gif&#34; alt=&#34;&#34; width=&#34;359&#34; height=&#34;324&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Diagrama Cliente/Servidor
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Em Java já temos uma classe pronta que faz isso, que é o ServerSocket, que já cria um socket que está aguardando conexões, o que torna nossa vida bem mais simples, então vamos parar de teoria e ir pro código, para isso criamos uma classe chamada Servidor e nela faremos o seguinte:&lt;/p&gt;

&lt;pre&gt;import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class Servidor {

    public static void main(String[] args) throws IOException {
        /* cria um socket &#34;servidor&#34; associado a porta 8000
          já aguardando conexões
        */
        ServerSocket servidor = new ServerSocket(8000);
        //aceita a primeita conexao que vier
        Socket socket = servidor.accept();
        //verifica se esta conectado  
        if (socket.isConnected()) {
            //imprime na tela o IP do cliente
            System.out.println(&#34;O computador &#34;+ socket.getInetAddress() + &#34; se conectou ao servidor.&#34;);
        }
    }
}
&lt;/pre&gt;

&lt;p&gt;Veja que estamos abrindo a porta 8000 e não a 80, isso por que embora essa seja a porta &amp;#8220;destinada/utilizada&amp;#8221; para servidores HTTP, ela é gerenciada pelo sistema operacional então não poderemos abri-la por enquanto (o SO não permitiria até por que em alguns sistemas linux já existe um servidor HTTP utilizando essa porta, em outros a porta está bloqueada pelo firewall, e teremos que abri-la manualmente mas veremos isso em breve), por isso vamos utilizar outra porta para testes, vamos compilar esse código e coloca-lo em execução, veja que ele permanecerá em execução até que ele receba pelo menos uma solicitação de conexão, que é o que vamos fazer, assim basta abrir o navegador e digitar o endereço &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt; e ir para a página, veja que ao fazer isso sua linha de comando aparecerá a frase:&lt;/p&gt;

&lt;pre&gt;java Server
O computador /0:0:0:0:0:0:0:1 se conectou ao servidor.&lt;/pre&gt;

&lt;p&gt;Veja  que este é o endereço IP do seu computador já no formato IPv6.  Note  que logo em seguida o programa foi finalizado, isso porque nosso servidor não está configurado para múltiplas conexões/requisições, porém vamos fazer isso já já, agora vamos ver qual foi a requisição que nosso navegador fez ao servidor, e para ler a entrada o conceito é o mesmo de ontem, vamos usar o InputStream para ler os dados enviados pelo cliente, então vamos adicionar o seguinte código logo após imprimir o IP:&lt;/p&gt;

&lt;pre&gt;[...]
            //cria um BufferedReader a partir do InputStream do cliente
            BufferedReader buffer = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            System.out.println(&#34;Requisição: &#34;);
            //Lê a primeira linha
            String linha = buffer.readLine();
            //Enquanto a linha não for vazia
            while (!linha.isEmpty()) {
                //imprime a linha
                System.out.println(linha);
                //lê a proxima linha
                linha = buffer.readLine();
            }
[...]
&lt;/pre&gt;

&lt;p&gt;Veja que agora utilizamos um BufferedReader ao invés do Scanner, isto por que o Scanner mesmo após ter terminado de ler a requisição ele espera que a a conexão seja encerrada, a fim de aguardar novas entradas, mas como não é interessante para gente esperar,  vamos usar o Buffer pois podemos verificar se a linha for vazia, se for, simplesmente encerra o programa sem ter que aguardar que a conexão seja encerrada. (Caso seja necessário continuar lendo a entrada antes da conexão encerras é so pegar o InputReader novamente e continuar lendo. Agora ao executarmos nosso servidor,  e acessar a página localhost:8000 no navegador teremos a seguinte saída na linha de comando:&lt;/p&gt;

&lt;pre&gt;java Server
O computador /0:0:0:0:0:0:0:1 se conectou ao servidor.
Requisição: 
GET / HTTP/1.1
Host: localhost:8000
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:29.0) Gecko/20100101 Firefox/29.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
DNT: 1
Connection: keep-alive&lt;/pre&gt;

&lt;p&gt;Veja que minha requisição foi originada de um navegador Firefox e que o formato da requisição é muito semelhante do que vimos na primeira parte do tutorial =D. Agora é so fazer o servidor tratar essas informações e devolver uma resposta ao cliente, nesse caso vamos devolver uma página HTML que é o que o navegador espera. Vamos criar duas páginas uma chamada índex.html e outra 404.html, e vamos armazena-las na mesma pasta que está colocando o código fonte do servidor com os seguintes códigos:&lt;/p&gt;

&lt;p&gt;Arquivo index.html&lt;/p&gt;

&lt;h1 id=&#34;funcionou&#34;&gt;Funcionou!!!!&lt;/h1&gt;

&lt;p&gt;Arquivo 404.html&lt;/p&gt;

&lt;pre&gt;Erro 404&lt;/pre&gt;

&lt;h1 id=&#34;a-página-que-você-procura-não-foi-encontrada&#34;&gt;A página que você procura não foi encontrada&lt;/h1&gt;

&lt;p&gt;Por convenção quando alguém solicita o arquivo &amp;#8220;/&amp;#8221; está solicitando a pagina inicial que geralmente é o índex.html, dependendo da configuração do servidor, no nosso caso queremos que nosso servidor retorne o índex.html, se o usuário pedir por qualquer coisa no formato &amp;#8220;/{nome da pagina}.html&amp;#8221; retornaremos esse arquivo, caso o arquivo não exista, retornaremos o erro 404 e a página de erro correspondente.&lt;/p&gt;

&lt;p&gt;Sabemos que a primeira linha da requisição contem o método, o arquivo solicitado e o protocolo separados por um espaço em branco, para o nosso servidor o método não importa, então assumiremos sempre o GET, e o protocolo será sempre o HTTP/1.1, então o que nos importa é o arquivo solicitado. Vamos alterar o nosso código que deve ficar assim:&lt;/p&gt;

&lt;pre&gt;[...]
            /* Lê a primeira linha
             contem as informaçoes da requisição
             */
            String linha = buffer.readLine();
            //quebra a string pelo espaço em branco
            String[] dadosReq = linha.split(&#34; &#34;);
            //pega o metodo
            String metodo = dadosReq[0];
            //paga o caminho do arquivo
            String caminhoArquivo = dadosReq[1];
            //pega o protocolo
            String protocolo = dadosReq[2];
            //Enquanto a linha não for vazia
            while (!linha.isEmpty()) {
                //imprime a linha
                System.out.println(linha);
                //lê a proxima linha
                linha = buffer.readLine();
            }
            //se o caminho foi igual a / entao deve pegar o /index.html
            if (caminhoArquivo.equals(&#34;/&#34;)) {
                caminhoArquivo = &#34;/index.html&#34;;
            }
            //abre o arquivo pelo caminho
            File arquivo = new File(caminhoArquivo);
            byte[] conteudo;
            //status de sucesso - HTTP/1.1 200 OK
            String status = protocolo + &#34; 200 OK\r\n&#34;;
            //se o arquivo não existe então abrimos o arquivo de erro, e mudamos o status para 404
            if (!arquivo.exists()) {
                status = protocolo + &#34; 404 Not Found\r\n&#34;;
                arquivo = new File(&#34;/404.html&#34;);
            }
            conteudo = Files.readAllBytes(arquivo.toPath());
[...]
&lt;/pre&gt;

&lt;p&gt;Veja que ainda não respondemos ao navegados com os dados, apenas montamos uma parte da resposta, para enviar a resposta precisaremos do OutputStream e montar uma string com a estrutura básica da resposta, dai vamos escrever esses dados no stream, semelhante ao que fizemos na parte II do nosso tutorial:&lt;/p&gt;

&lt;pre&gt;//cria um formato para o GMT espeficicado pelo HTTP
            SimpleDateFormat formatador = new SimpleDateFormat(&#34;E, dd MMM yyyy hh:mm:ss&#34;, Locale.ENGLISH);
            formatador.setTimeZone(TimeZone.getTimeZone(&#34;GMT&#34;));
            Date data = new Date();
            //Formata a dara para o padrao
            String dataFormatada = formatador.format(data) + &#34; GMT&#34;;
            //cabeçalho padrão da resposta HTTP
            String header = status
                    + &#34;Location: http://localhost:8000/\r\n&#34;
                    + &#34;Date: &#34; + dataFormatada + &#34;\r\n&#34;
                    + &#34;Server: MeuServidor/1.0\r\n&#34;
                    + &#34;Content-Type: text/html\r\n&#34;
                    + &#34;Content-Length: &#34; + conteudo.length + &#34;\r\n&#34;
                    + &#34;Connection: close\r\n&#34;
                    + &#34;\r\n&#34;;
            //cria o canal de resposta utilizando o outputStream
            OutputStream resposta = socket.getOutputStream();
            //escreve o headers em bytes
            resposta.write(header.getBytes());
            //escreve o conteudo em bytes
            resposta.write(conteudo);
            //encerra a resposta
            resposta.flush();
&lt;/pre&gt;

&lt;p&gt;Agora é só compilar, rodar e ver o resultado =D&lt;/p&gt;

&lt;p&gt;No caso de sucesso deve aparecer como na figura abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/09/sucesso.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-51391&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/sucesso.png&#34; alt=&#34;200 - Sucesso&#34; width=&#34;1279&#34; height=&#34;707&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Caso a página não existe, deve aparecer assim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/09/erro404.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-51392&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/erro404.png&#34; alt=&#34;Erro 404&#34; width=&#34;1280&#34; height=&#34;709&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Temos um servidor funcional capaz de fornecer as páginas HTML para os clientes que solicitarem, mas perceba que nosso servidor atende a apenas uma requisição e se encerra logo em seguida, sem contar que nosso método main ficou gigante, mas fique tranquilo, isso será assunto para a próxima e ultima parte do tutorial, onde vamos organizar melhor nosso código, tratar alguns comandos do servidor importantes como manter a conexão viva e trabalhar com múltiplas requisições, conexões simultâneas e afins. Por hora fica o exercício, tente organizar o código a sua maneira, altere como desejar, crie mais páginas HTML e teste e veja se está sendo exibida corretamente, todo código feito até aqui está no final da página e está todo comentado para facilitar o entendimento.&lt;/p&gt;

&lt;p&gt;Espero que estejam gostando e por favor deixem comentários com seu feedback: o que achou, dúvidas, se funcionou ou não, se a abordagem não estiver adequada ou mesmo erros que posso ter cometido pelo caminho.&lt;/p&gt;

&lt;p&gt;Até o próximo post.&lt;/p&gt;

&lt;p&gt;Download do código fonte: &lt;a href=&#34;https://github.com/thiguetta/ServidorHTTP&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/thiguetta/ServidorHTTP&#34;&gt;https://github.com/thiguetta/ServidorHTTP&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando seu próprio servidor HTTP do zero (ou quase) – Parte II</title>
      <link>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-ii/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-ii/</guid>
      <description>

&lt;p&gt;Se chegou até aqui é por que você terminou de ler a primeira parte do tutorial (Caso não, leia a &lt;a href=&#34;http://tableless.com.br/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-i/&#34; title=&#34;Criando seu próprio servidor HTTP do zero (ou quase) – Parte I&#34;&gt;Parte I&lt;/a&gt; ), mas não desista, a parte legal vai chegar, mas antes de começar, falta mais um item de teoria &amp;#8211;  sim eu sei que é chato, mas juro que é importante &amp;#8211; os Sockets.&lt;/p&gt;

&lt;h2 id=&#34;sockets-e-portas&#34;&gt;Sockets e portas&lt;/h2&gt;

&lt;p&gt;Falamos muito de requisições e respostas no último post mas ainda não falamos de conexão e troca de informações. Bom, vamos lá, ligeiramente comentamos um pouco sobre os protocolos de rede, também disse que o protocolo web, o HTTP, está na camada mais alta do TCP/IP, a camada de aplicação, mas para este tutorial pouco importa o que acontece nas camadas inferiores  (se tiver curiosidade procure mais sobre), o que realmente importa é saber que esse tal de TCP/IP é responsável pela conexão entre dois pontos (dois computadores, ou no nosso caso, cliente e servidor).&lt;/p&gt;

&lt;p&gt;Tanto o servidor quanto o cliente são computadores com seus respectivos sistemas operacionais (Linux, Windows, etc) e neles estão em execução diversas aplicações inclusive o navegador e o próprio servidor HTTP, mas nesse monte de aplicações em execução, como vamos saber que estamos enviando e recebendo dados da aplicação certa? precisamos de um algo que identifique cada aplicação (ou pelo menos que identifique uma aplicação que use a rede). Esses pontos de identificação, por assim dizer, são chamados de Socket (ou em português, soquete, tomada, encaixe, enfim algo que tenha uma “abertura/encaixe&amp;#8221; para conexão), resumindo é um ponto que permite conectar alguma coisa, no nosso caso, um outro computador através da rede. Para receber uma conexão, o Socket precisa de uma abertura, essa abertura é o que chamamos de porta, sei que para alguns o conceito parece ser trivial, mas para outros, inclusive profissionais de TI, esses conceitos podem embaralhar a cabeça.&lt;/p&gt;

&lt;p&gt;Resumindo, um Socket é o ponto final da conexão, onde uma porta é aberta para que a aplicação possa enviar ou receber dados, cada porta é identificada por um número que é única no computador, sendo que se tentar abrir uma porta que já estiver sendo usado por outra aplicação, o sistema operacional irá barrar e retornar um erro de acesso negado ou informa que a porta está em uso.&lt;/p&gt;

&lt;p&gt;Existe uma lista de portas conhecidas  que são utilizadas por algumas aplicações, as mais comuns são:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;21 FTP &amp;#8211; Transferencia de arquivo&lt;/li&gt;
&lt;li&gt;22 SSH &amp;#8211;  Secure Shell&lt;/li&gt;
&lt;li&gt;25 SMTP &amp;#8211; Envio de Emails&lt;/li&gt;
&lt;li&gt;80 HTTP &amp;#8211; Web&lt;/li&gt;
&lt;li&gt;443 HTTPS &amp;#8211; Web “Segura&amp;#8221;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Uma porta ela é única por computador mas não é única na internet, quando você quer efetuar a conexão com uma determinada aplicação rodando em um computador remoto, a identificação do socket é composto pelo endereço de IP ou o nome canônico (domínio &amp;#8211; endereço do site) da máquina destino e a porta que essa aplicação usando, no seguinte formato {Endereço}:{Porta}.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;exemplo.com:80 ou
 192.168.1.224:1000     
&lt;/pre&gt;

&lt;p&gt;A maioria das aplicações que requerem conexão com algum serviço se conectam diretamente as portas especificas que cada uma delas usa, sendo necessário informar apenas o IP (ao menos que seja uma porta que a aplicação não conheça, o serviço está funcionando numa porta atípica ai será necessário informar, veremos mais na parte III). O que isso significa? isso significa que quando você digita o site &lt;a href=&#34;http://www.google.com.br&#34;&gt;http://www.google.com.br&lt;/a&gt; no seu navegador, ele sabe que os servidores HTTP estão executando na porta 80, então não é preciso identificar-la, pois o navegador irá &amp;#8220;converter&amp;#8221; para o formato correto, transparentemente, a mesma coisa acontece quando você acessa um site seguro utilizando &lt;a href=&#34;https://www.seubanco.com.br&#34;&gt;https://www.seubanco.com.br&lt;/a&gt; o navegador sabe que a porta de conexão segura no servidor é a 443, e tentará se conectar nela.&lt;/p&gt;

&lt;p&gt;O que acontece é seu navegador irá se conectar ao site, ele sabe que o servidor está respondendo na porta 80 no endereço tal, para isso é necessário que o navegador abre uma porta local aleatória, para que assim o servidor possa saber para quem responder:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.raywenderlich.com/wp-content/uploads/2011/06/sockets.jpg&#34;&gt;&lt;img src=&#34;http://www.raywenderlich.com/wp-content/uploads/2011/06/sockets.jpg&#34; alt=&#34;&#34; width=&#34;600&#34; height=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pronto agora que entendemos o conceito (ou pelo menos espero que tenham entendido =D) vamos colocar as mãos na massa.&lt;/p&gt;

&lt;p&gt;Vou partir do principio que já sabem criar uma classe e compilar um programa em Java (caso não lembre-se que o Google é nosso amigo =D). Se preferir, usando o mesmo conceito pode converter a ideia para a linguagem de sua preferência (só não esqueça de compartilhar com a galera =D).&lt;/p&gt;

&lt;p&gt;Vamos lá, vou criar uma classe em Java chamada Cliente, será uma classe simples que vai se conectar a um servidor (neste caso vamos conectar no &lt;a href=&#34;http://google.com.br&#34;&gt;google.com.br&lt;/a&gt;) e ver se ele está conectado, se sim ele imprimirá na tela o IP do servidor.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import java.io.IOException;
import java.net.Socket;

public class Cliente {
    public static void main(String[] args) throws IOException {
        //cria um socket com o google na porta 80
        Socket socket = new Socket(&#34;google.com.br&#34;, 80);
        //verifica se esta conectado
        if (socket.isConnected()) { 
            //imprime o endereço de IP do servidor
            System.out.println(&#34;Conectado a &#34; + socket.getInetAddress());
        }
    }
}
&lt;/pre&gt;

&lt;p&gt;Ao instanciar um novo objeto da classe Socket com os parâmetros domínio e porta, internamente a máquina virtual Java já abre uma porta aleatória em seu computador e em seguida conecta ao servidor google.com.br na porta 80. Veja que até então não sabemos o endereço de IP do servidor mas ao efetuar a conexão o socket já se atualiza com essa informação. Vamos compilar nossa classe e verificar o resultado que  deve ser algo desse tipo:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ javac Cliente.java
$ java Cliente
Conectado a google.com.br/173.194.118.151&lt;/pre&gt;

&lt;p&gt;Mas isso não é o suficiente queremos trocar informações com o servidor conectado, para isso nosso socket fornece 2 recursos  um para leitura dos dados recebidos (InputStream) do servidor e outro para enviar os dados que queremos para o servidor (OutputStream), é claro que para enviarmos algum dado para o servidor temos que saber como se comunicar com o servidor, como a gente já sabe, o servidor do google é um servidor HTTP que nos fornece as páginas de serviço do Google, certo? então sabemos que o servidor entende o protocolo HTTP. vamos enviar uma requisição HTTP simples a esse servidor e ver o que ele responde.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;/* veja que a requisição termina com \r\n que equivale a &amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;
       para encerar a requisição tem uma linha em branco */
    String requisicao = &#34;&#34;
        + &#34;GET / HTTP/1.1\r\n&#34;
        + &#34;Host: www.google.com.br\r\n&#34;
        + &#34;\r\n&#34;;
    //OutputStream para enviar a requisição
    OutputStream envioServ = socket.getOutputStream();
    //temos que mandar a requisição no formato de vetor de bytes
    byte[] b = requisicao.getBytes();
    //escreve o vetor de bytes no &#34;recurso&#34; de envio 
    envioServ.write(b);
    //marca a finalização da escrita
    envioServ.flush();
&lt;/pre&gt;

&lt;p&gt;É claro que apenas isso não basta pois somente estamos enviando a requisição certo?, então precisaremos ler o InputStream logo após enviar os dados para ver o que o servidor responde, vamos facilitar as coisas afinal isto não é C, para ler o que o servidor responde vamos utilizar um Scanner, que ja faz a conversão o Input de bytes para String, assim a gente não tem que tratar esses trecos.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;//cria um scanner a partir do InputStream que vem do servidor
    Scanner sc = new Scanner(socket.getInputStream());
    //enquanto houver algo para ler
    while (sc.hasNext()) {
        //imprime uma linha da resposta
        System.out.println(sc.nextLine());
    }
&lt;/pre&gt;

&lt;p&gt;Agora se executarmos o programa podemos ler o que o servidor nos devolve e exibir na tela, logo teremos um resultado parecido com isso&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ javac Cliente.java 
$ java Cliente
Conectado a google.com.br/173.194.118.151 
HTTP/1.1 200 OK
Date: Tue, 17 Jun 2014 23:29:57 GMT
Expires: -1
Cache-Control: private, max-age=0
Content-Type: text/html; charset=ISO-8859-1
Set-Cookie: PREF=ID=fee5bb44e3822528:FF=0:TM=1403047797:LM=1403047797:S=BpVMDbzBHKUgdlRS; expires=Thu, 16-Jun-2016 23:29:57 GMT; path=/; domain=.google.com.br
Set-Cookie: NID=67=CT9hDvtQnKCvGeox_lmn7IjB_gbZ6Z9m7YT2rM1LAw2hVDVbvas16qfTsH1Jc1TRhrynqE-j0fb3EPl_JvjttiV-kqVpJlYjmg7Qd_e8oHcnJM1L2xlHWtlKw2EcomUM; expires=Wed, 17-Dec-2014 23:29:57 GMT; path=/; domain=.google.com.br; HttpOnly
P3P: CP=&#34;This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&amp;answer=151657 for more info.&#34;
Server: gws
X-XSS-Protection: 1; mode=block
X-Frame-Options: SAMEORIGIN
Alternate-Protocol: 80:quic
Transfer-Encoding: chunked

8000
&amp;lt;!doctype html&amp;gt;&amp;lt;html[...]um monte de HTML[...]

0
&lt;/pre&gt;

&lt;p&gt;Veja que o resultado é semelhante ao que vimos anteriormente sobre na nossa teoria de requisição e resposta, também há algumas outras propriedade que não vimos mas não importa para nós ao menos que queira se aprofundar no assunto. Veja também que seu programa também continua em execução, isso acontece porque o servidor do google ainda não encerrou a conexão, isso acontece porque no HTTP/1.1 a propriedade &amp;#8220;Connection: keep-alive&amp;#8221; é padrão mesmo que não enviamos na requisição, quem define esse tempo é o próprio servidor, por experiência própria eu sei que a conexão com o google se mantém ativa por aproximadamente 3 minutos, isso para dar tempo suficiente para que você faça todas as pesquisas sem ter que criar uma nova conexão para cada pesquisa que você faz, isso é importante no caso do google já que ele recebe milhares de requisições por segundo, sendo que varias delas são feitas pela mesma pessoa, então não convém criar uma nova conexão para cada nova requisição.&lt;/p&gt;

&lt;p&gt;Você deve estar se perguntando, mas Thiago, isso não é o que o navegador faz?&lt;/p&gt;

&lt;p&gt;&amp;#8211; Sim, o que fizemos hoje foi implementar a parte mais básica de um navegados web.&lt;/p&gt;

&lt;p&gt;Mas a proposta é fazer um servidor e não um navegador, certo?&lt;/p&gt;

&lt;p&gt;&amp;#8211; Certo, mas antes de avançarmos é importante entender bem qual é o trabalho do navegador antes de criar o servidor que irá responder as requisições dele, mas isso será assunto para a parte III.&lt;/p&gt;

&lt;p&gt;Posso fazer em outra linguagem?&lt;/p&gt;

&lt;p&gt;&amp;#8211; Claro, socket é implementado em todas as linguagens, basta consultar a documentação da sua linguagem preferida para entender como replicar o conceito acima.&lt;/p&gt;

&lt;p&gt;Por hoje ficamos por aqui pessoal, espero que tenham aproveitado bem nossa parte prática, no próximo começaremos definitivamente a criar nosso servidor.&lt;/p&gt;

&lt;p&gt;Até Mais.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando seu próprio servidor HTTP do zero (ou quase) – Parte I</title>
      <link>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-i/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-i/</guid>
      <description>

&lt;p&gt;Sou apaixonado por tecnologias livres e como sou extremamente curioso, gosto de saber como as coisas funcionam. Como também sou cinestésico, não me contento em apenas em entender, tenho que criar, recriar, escrever, rescrever, inventar, reinventar, enfim sentir realmente como se faz. Nesse vai e vem de aprendizado, minha última curiosidade foi entender como os servidores HTTP funcionam e criar um do zero (ou pelo menos quase).&lt;/p&gt;

&lt;p&gt;É claro que para fazer isso eu não fui tão lá embaixo a ponto de utilizar C, utilizei da linguagem de programação da qual me sinto mais confortável e que já oferece algumas facilidades que em C teria que sangrar pra fazer o mesmo porém não impossível, mas enfim, optei por desenvolver em Java, os passos vou contar pra vocês aqui, mas utilizando os mesmo conceitos nada impede que utilize qualquer outra linguagem de programação.&lt;/p&gt;

&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;

&lt;p&gt;Vamos ao que interessa! A grosso modo, um servidor HTTP é uma aplicação (software) que fornece páginas web (geralmente escritas em HTML), ou seja, ao digitar o endereço da página (URL) e dar um ENTER no seu navegador, ele envia uma requisição no servidor destino, o servidor processa essa informação e retorna o documento HTML correspondente, por fim o navegador renderiza o documento e exibe aquela página bonita (nem sempre!).&lt;/p&gt;

&lt;div style=&#34;width: 510px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;http://www.tankonyvtar.hu/en/tartalom/tamop425/0027_ADW1/images/ADW100.png&#34;&gt;&lt;img src=&#34;http://www.tankonyvtar.hu/en/tartalom/tamop425/0027_ADW1/images/ADW100.png&#34; alt=&#34;Requisição HTTP&#34; width=&#34;500&#34; height=&#34;200&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Requisição HTTP
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Para isso vamos entender como a comunicação entre seu navegador e o servidor funciona, o protocolo, depois vamos entender como é feita a conexão, tratar e enviar documentos e por fim vamos deixar nosso servidor pronto para receber múltiplas conexões.&lt;/p&gt;

&lt;h2 id=&#34;o-protocolo-http&#34;&gt;O Protocolo HTTP&lt;/h2&gt;

&lt;p&gt;É claro que nem so de Web a Internet é feita, existem uma serie de recursos que estão sobre a Internet, a web é uma delas, mas para que esses serviços sejam tratados como devem é necessário ter um linguagem comum que permita que o servidor entenda o que o navegador quer, e que o navegador saiba se a resposta do pedido está correta ou não, para isso estabelecem-se os protocolos, que são padrões estipulados por um órgão competente afim de uniformizar o “trafego” de informações de diferentes serviços na internet. Quem define esses padrões é a IETF (Internet Engineering Task Force, ou melhor, Força Tarefa de Engenharia da Internet). Para saber mais quem são eles, acesse &lt;a href=&#34;http://www.ietf.org&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; (em Inglês)&lt;/p&gt;

&lt;p&gt;O protocolo HTTP, ou Hyper Text Transfer Protocol, ou melhor ainda, protocolo de transferencia de hiper texto, direto e reto é o cara que define a troca de paginas HTML, pronto falei!. A versão mais atual (que é a que vamos adotar nesse tutorial por assim dizer) é a 1.1 que na minha opinião é a mais difundida também (pode ser que encontre por ai alguns utilizando a versão 1.0 ou até mesmo a 0.9), enfim , essa versão e seus padrões foram propostos no documento &lt;a href=&#34;http://www.ietf.org/rfc/rfc2068.txt&#34; target=&#34;_blank&#34;&gt;RFC 2068&lt;/a&gt; e atualizado e alterado por diversos outros RFCs, que não convém a gente falar aqui, mas se tiver curiosidade procura lá no site da IEFT acima que tem todos.&lt;/p&gt;

&lt;p&gt;So para nos situar o HTTP está na camada mais alta do protocolo de comunicação de rede conhecido como TCP/IP (não vamos entrar em detalhes pois não é o foco), chamada camada de aplicação (Nada mais justo já que o servidor e o navegados são aplicações).&lt;/p&gt;

&lt;div style=&#34;width: 430px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;http://static.thegeekstuff.com/wp-content/uploads/2011/10/tcp-ip.png&#34;&gt;&lt;img src=&#34;http://static.thegeekstuff.com/wp-content/uploads/2011/10/tcp-ip.png&#34; alt=&#34;Camadas de Rede (TCP/IP)&#34; width=&#34;420&#34; height=&#34;470&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Camadas de Rede (TCP/IP)
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;No nosso escopo, o servidor é um software que fica aguardando solicitações, falando em nível de aplicação, o processo é simples, o navegador (vamos chamar de cliente) envia uma requisição (request), o servidor processa e devolve uma resposta(response).&lt;/p&gt;

&lt;h2 id=&#34;a-requisição&#34;&gt;A Requisição&lt;/h2&gt;

&lt;p&gt;A requisição é um “documento” em texto plano composto por um cabeçalho (que define  a comunicação, requerido) e os dados (opcional, depende da aplicação).&lt;/p&gt;

&lt;p&gt;O cabeçalho é bem simples, a primeira linha contém a informação principal da requisição, ou seja, qual a sua solicitação (método), o que está sendo solicitado (arquivo/página/recurso a ser acessado) e padrão de comunicação que no nosso caso é o HTTP/1.1, a segunda linha é o endereço de host do servidor que irá responder a sua solicitação, veja o exemplo:&lt;/p&gt;

&lt;pre&gt;GET /index.html HTTP/1.1
Host: &lt;a href=&#34;http://google.com&#34;&gt;google.com&lt;/a&gt;&lt;/pre&gt;

&lt;p&gt;As linhas seguintes são informações pertinentes a conexão e podem conter informações de quem está solicitando, o formato dessas informações é do tipo &lt;propriedade&gt; : &lt;valor&gt; o final de cada linha é encerrado por um &lt;CR&gt;&lt;LF&gt; (cuidado, pois muitos confundem este comando com o ENTER, embora para windows esse comando corresponde ao ENTER, não é verdade para Linux e afins), o final da requisição deve ser uma linha em branco (ou seja apenas um &lt;CR&gt;&lt;LF&gt;)veja o exemplo de uma requisição completa&lt;/p&gt;

&lt;pre&gt;GET /HTTP/1.1
Host: www.google.com.br
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:29.0) Gecko/20100101 Firefox/29.0
Accept: text/html,application/xhtml+xml,application/xml
Accept-Language: pt-BR,pt,en-US,en
Accept-Encoding: gzip, deflate
Connection: keep-alive&lt;/pre&gt;

&lt;p&gt;Traduzindo, queremos pegar (GET) a raiz ou página inicial ( / ) que está em “www.google.com.br”. Esta requisição está sendo enviada de um navegador (User-Agent) Firefox, que aceita (Accept) os seguintes formatos, html e xml de preferencia que estejam no idioma (Accept-Language) Português do Brasil (pt-BR) ou qualquer outro idioma a seguir (veja que é possível passar uma lista de idiomas na ordem em que gostaria que aparecessem, veja que caso o servidor não tenha nenhuma dessas páginas ou não trate essa propriedade, ele irá devolver a página no idioma padrão do html que ele encontrar correspondente a sua solicitação), o formato de compactação aceito pelo navegador  (Accept-Enconding) e por fim a persistência da conexão, ou seja se você quer que o servidor mantenha a conexão ativa, o que eu quero dizer é que para cada recurso dentro de uma pagina HTML, seja uma imagem, um estilo css, ou um javascript, que precisa ser carregado, o navegador faz uma nova requisição, não seria legal criar uma nova conexão para cada requisição ainda mais se elas acontecem em um curto espaço de tempo, então o keep-alive mantém a conexão “viva&amp;#8221; tempo pra que esses recursos sejam carregados. É claro que o protocolo define muito mais propriedades, como pode observar no documento RFC mencionado acima, porém cada servidor deve implementar essas funcionalidades, no nosso caso vamos implementar apenas as funcionalidades na requisição de exemplo e algumas mais que mencionaremos mais adiante.&lt;/p&gt;

&lt;h2 id=&#34;a-resposta&#34;&gt;A Resposta&lt;/h2&gt;

&lt;p&gt;A resposta segue um formato bem parecido da requisição, a primeira linha contem o protocolo, o código e mensagem de retorno como segue:&lt;/p&gt;

&lt;pre&gt;HTTP/1.1 200 OK&lt;/pre&gt;

&lt;p&gt;Esse código é esperado quando a pagina solicitada foi encontrada e seu conteúdo está enviada logo abaixo do cabeçalho (veremos a diante). Existem diversos códigos de retorno de sucesso, e de erro também, quem aqui nunca recebeu um 404 Not Found ao tentar acessar uma página que não existe?, esses e outros detalhes iremos tratar na parte de implementação. Por fim as linhas seguintes da resposta contem algumas informações pertinentes ao navegador e por fim a pagina html solicitada, veja que o conteúdo é concatenado com a resposta:&lt;/p&gt;

&lt;pre&gt;HTTP/1.1 200 OK
Date: Tue, 17 Jun 2014 01:20:13 GMT
Server: gws
Location: https://www.google.com.br/
Last-Modified: Tue, 17 Jun 2014 01:20:13 GMT
Content-Encoding: gzip
Content-Length: 234
Connection: closeContent-Type: text/html


&amp;lt;html&amp;gt;todo o html da página&amp;lt;/html&amp;gt; *&lt;/pre&gt;

&lt;p&gt;*este conteúdo pode estar compactado&lt;/p&gt;

&lt;p&gt;Nesta resposta o servidor retorna a data da resposta (Date), qual o nome/tipo/empresa que desenvolveu/sistema operacional do servidor que gerou a resposta, a localização atual (Location) importante caso seu site use caminho relativo em hiperlinks, imagens e outros (veremos com mais detalhes na implementação) ultima vez que o arquivo foi modificado (Last-Modified), importante caso o navegador permita cache de paginas, compactacao do conteúdo (Content-Enconding), para que o navegador saiba fazer a descompactacao se necessário, tamanho em bytes do  conteúdo,o estado da conexão, que neste caso o servidor informa que a conexão foi fechado, o tipo do conteúdo(Content-Type), que é um texto contendo html e por fim, é claro, o conteúdo da resposta, ou seja, aquilo que o navegador irá exibir pra gente.&lt;/p&gt;

&lt;p&gt;Quer testar? Então abra o navegador de sua preferência, melhor que seja o firefox =D, em seguida abra o modo de desenvolvedor (geralmente é so apertar F12), e por fim clique na aba Rede, pronto agora é so digitar um site na barra de endereço, e acompanhar as requisições pelo console, se quiser mais detalhes clique em uma requisição e peça para exibir detalhes, se estiver usando o firefox, ele aparece esses detalhes logo na lateral da lista de requisições. analise as propriedades enviadas na requisição e veja qual foi a resposta. você irá percebem que existem mais propriedades do que comentamos aqui, mas para nós neste tutorial não será necessário, se quiser pode pesquisar mais sobre eles ou ler o documento RFC que ja falamos sobre ele.&lt;/p&gt;

&lt;div id=&#34;attachment_17&#34; style=&#34;width: 310px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;http://euamoaweb.com.br.md-54.webhostbox.net/arquivolivre.com.br/wp-content/uploads/2014/06/Screen-Shot-2014-06-17-at-12.00.06-AM.png&#34;&gt;&lt;img class=&#34;wp-image-17 size-medium&#34; src=&#34;http://blog-tsg0.rhcloud.com/wp-content/uploads/2014/06/Screen-Shot-2014-06-17-at-12.00.06-AM-300x165.png&#34; alt=&#34;Requisicao&#34; width=&#34;300&#34; height=&#34;165&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Requisicao
  &lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;attachment_18&#34; style=&#34;width: 310px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;http://euamoaweb.com.br.md-54.webhostbox.net/arquivolivre.com.br/wp-content/uploads/2014/06/Screen-Shot-2014-06-17-at-12.00.34-AM.png&#34;&gt;&lt;img class=&#34;wp-image-18 size-medium&#34; src=&#34;http://blog-tsg0.rhcloud.com/wp-content/uploads/2014/06/Screen-Shot-2014-06-17-at-12.00.34-AM-300x166.png&#34; alt=&#34;Resposta&#34; width=&#34;300&#34; height=&#34;166&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Resposta
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Chegamos ao fim da primeira parte do nosso tutorial, sei que teoria é chato mas se faz necessário, mas prometo que na &lt;a href=&#34;http://tableless.com.br/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-ii/&#34; target=&#34;_blank&#34;&gt;Parte II&lt;/a&gt; colocaremos as mãos a obra.&lt;/p&gt;

&lt;p&gt;Então até a próxima.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Elevação ou JavaScript hoisting</title>
      <link>https://tableless.github.io/hugo-public/elevacao-ou-javascript-hoisting/</link>
      <pubDate>Wed, 04 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/elevacao-ou-javascript-hoisting/</guid>
      <description>

&lt;h2 id=&#34;um-pouco-de-teoria-antes-da-diversão&#34;&gt;Um pouco de Teoria antes da diversão.&lt;/h2&gt;

&lt;p&gt;Muitas vezes, um simples princípio não compreendido, pode confundir novatos ou especialistas em JavaScript. Neste artigo, vamos tentar entender melhor um problema comum, que é mais simples do que parece.&lt;/p&gt;

&lt;h2 id=&#34;declarações-na-frente&#34;&gt;Declarações na frente&lt;/h2&gt;

&lt;p&gt;Antigamente em linguagens como C, se usavam funções ou procedimentos para dividir um programa, mas havia um problema: as declarações deveriam ficar sempre na frente.&lt;/p&gt;

&lt;p&gt;Suponha que você queira usar uma função que junta palavras:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;juntarPalavras(&#39;Arco&#39;, &#39;íris&#39;);&lt;/pre&gt;

&lt;p&gt;Mas temos um problema aqui, não? Essa função não foi definida antes de ser chamada!&lt;/p&gt;

&lt;p&gt;O programa retornará um erro, pois &lt;strong&gt;juntarPalavras()&lt;/strong&gt; não foi criada, ou acha que a linguagem deve permitir que você use funções que são definidas no final do código?&lt;/p&gt;

&lt;p&gt;Declarar funções no início do programa resolveu o problema por um tempo, pois todas as funções e variáveis eram declaradas antes de serem usadas, sendo assim não se tinha erros de referência.&lt;/p&gt;

&lt;p&gt;Com o tempo os programadores pensaram: &amp;#8220;Mas por que cargas d&amp;#8217;água não fazemos isso mais amigável e fácil de ler?&amp;#8221;, &amp;#8220;por que ler o código de baixo para cima e, não de cima para baixo?&amp;#8221;. Agora podemos colocar as definições em qualquer lugar do código e usá-los, mesmo antes de realmente serem definidos, que maravilha não?&lt;/p&gt;

&lt;p&gt;O que acontece agora é que os compiladores ou até mesmo linguagens runtime leem todo o programa para saber que funções e variáveis você declarou no código. Após isso, a execução real acontece e ele já sabe onde está cada coisa. JavaScript faz exatamente isso, o que chamamos de Hoisting.&lt;/p&gt;

&lt;h2 id=&#34;hora-da-diversão&#34;&gt;Hora da diversão&lt;/h2&gt;

&lt;p&gt;Vamos começar com algo leve, para ir aquecendo os neurônios, veja o seguinte código:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;nome = &#39;Jonatan&#39;;
console.log(nome);
// Jonatan
&lt;/pre&gt;

&lt;p&gt;Até aqui nada de novo, apenas iniciamos a variável nome com o valor jonatan e mostramos na tela;&lt;/p&gt;

&lt;p&gt;Certo, e que tal tentarmos isso:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var nome = meunome;
console.log(nome);
// ReferenceError: meunome is not defined
&lt;/pre&gt;

&lt;p&gt;Recebemos um erro bem obvio não acha? Como vamos definir o &lt;strong&gt;nome&lt;/strong&gt; com o valor de &lt;strong&gt;meunome&lt;/strong&gt; se essa variável nem existe ainda?&lt;/p&gt;

&lt;p&gt;Agora, deste jeito:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var nome = meunome;
console.log(nome);
var meunome;
// undefined
&lt;/pre&gt;

&lt;p&gt;Opa! “undefined”, sacam a jogada?&lt;/p&gt;

&lt;p&gt;Isso acontece porque o JavaScript não obriga você a declarar variáveis, ​​permite que você defina as funções em qualquer lugar que você queira, o que lhe permite usar uma função antes de sua definição. O nome hoisting, elevação ou até mesmo içamento, é só um termo especificado, pois ele arranca as declarações até o topo do seu escopo.&lt;/p&gt;

&lt;p&gt;Beleza, agora qual a diferença entre declaração e inicialização? Simples:&lt;/p&gt;

&lt;p&gt;Aqui apenas declaramos a variável &lt;strong&gt;meunome&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var meunome;
//undefined
&lt;/pre&gt;

&lt;p&gt;Já nesta parte iniciamos seu conteúdo como &lt;strong&gt;Jonatan&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;meunome = &#39;Jonatan&#39;;
//Jonatan
&lt;/pre&gt;

&lt;p&gt;Este é o mesmo procedimento feito com as funções:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;console.log(multiplicaNumero(10,10));
var multiplicaNumero = function(a,b) {
  return a*b;
}
//TypeError: undefined is not a function
&lt;/pre&gt;

&lt;p&gt;Viram? Ele elevou a declaração var multiplicaNumero, mas como chamamos antes de ele ser iniciado recebemos um erro.&lt;/p&gt;

&lt;p&gt;Se mudarmos para:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;console.log(multiplicaNumero(10,10));
multiplicaNumero = function(a,b) {
  return a*b;
}
//ReferenceError: multiplicaNumero is not defined
&lt;/pre&gt;

&lt;p&gt;Recebemos o erro nos dizendo que &lt;strong&gt;multiplicaNumero&lt;/strong&gt; não foi declarado.&lt;/p&gt;

&lt;p&gt;Alteramos novamente:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;console.log(multiplicaNumero(10,10));
function multiplicaNumero (a,b) {
  return a*b;
}
// 100
&lt;/pre&gt;

&lt;p&gt;E agora o código executou sem erro porque toda declaração de função não anônima é elevada para o topo do escopo.&lt;/p&gt;

&lt;p&gt;Fácil não é? Com isso aprendemos que é uma boa prática declarar e/ou iniciar variáveis e funções no início do escopo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var a, foo = &#39;bar&#39;;
var bar = function(){
  var foo = &#39;foo&#39;;
  console.log(&#39;local: &#39;+foo);
};
bar();
console.log(&#39;global: &#39;+foo);
//local: foo
//global: bar 
&lt;/pre&gt;

&lt;p&gt;Boas práticas nos levam a caminhos melhores.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WebPlatform.org – Por uma Web documentada!</title>
      <link>https://tableless.github.io/hugo-public/webplatform-org-por-uma-web-documentada/</link>
      <pubDate>Tue, 09 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/webplatform-org-por-uma-web-documentada/</guid>
      <description>

&lt;p style=&#34;text-align: left&#34;&gt;
  &lt;img class=&#34;aligncenter&#34; style=&#34;border: 10px solid black&#34; src=&#34;http://cdn.thetechjournal.com/wp-content/uploads/2012/10/webplatform.org_.jpg&#34; alt=&#34;webpatform.org&#34; width=&#34;610&#34; height=&#34;342&#34; /&gt;&lt;br /&gt; É bem comum aos desenvolvedores Web, frequentemente recorrer a fontes de informações e referencias em sua rotina de trabalho. Além de o conteúdo ser extenso demais para ser decorado com precisão, ainda está em constante atualização. Muitas vezes as fontes de referencia são descentralizadas fazendo que recorramos a sites diferentes para consultar essas informações.
&lt;/p&gt;

&lt;h3 id=&#34;webplatform-org&#34;&gt;webplatform.org&lt;/h3&gt;

&lt;p&gt;Pensando em solucionar este problema a comunidade &lt;strong&gt;webplatform.org&lt;/strong&gt; trás a simples proposta de documentar a web. Um pouco pretencioso certo!? Nem tanto: Essa “biblioteca“ será alimentada por uma comunidade de desenvolvedores assim como você. Qualquer um pode contribuir, bem como em um Wiki. Dessa forma poderemos acompanhar as atualizações, normas para web (Web Standards), referencias, sintaxe e outras informações em um único lugar.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“We are an open community of developers building resources for a better web, regardless of brand, browser or platform. Anyone can contribute and each person who does makes us stronger. Together we can continue to drive innovation on the Web to serve the greater good. It starts here, with you.”&lt;/p&gt;

&lt;p align=&#34;right&#34;&gt;
  Fonte: &lt;a href=&#34;http://www1.webplatform.org/&#34; target=&#34;_blank&#34;&gt;webplatform.org&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Tradução:&lt;/strong&gt; “Nós somos uma comunidade aberta de desenvolvedores de recursos para uma web melhor, independentemente do navegador, da marca, ou plataforma. Qualquer um pode contribuir e cada pessoa que o faz, torna-nos mais fortes. Juntos, podemos continuar a impulsionar a inovação na Web para servir ao bem maior. Tudo começa aqui, com você.”&lt;/p&gt;

&lt;p&gt;Com essa definição ficou clara a proposta da comunidade &lt;strong&gt;webplatform.org&lt;/strong&gt; e a sua importância nesse processo. Nesse link: &lt;strong&gt;&lt;a href=&#34;http://docs.webplatform.org/wiki/WPD:Getting_Started&#34; target=&#34;_blank&#34;&gt;Getting_Started&lt;/a&gt;&lt;/strong&gt; você descobre como pode contribuir com a comunidade.&lt;/p&gt;

&lt;p&gt;A ferramenta é nova e está em fase Alpha, portanto ainda não conta com um vasto conteúdo, mas se você tem algum conhecimento pertinente faça a sua parte e contribua!&lt;/p&gt;

&lt;p&gt;Uma pergunta que deve estar lhe ocorrendo: “Como confiar totalmente no conteúdo uma vez que se trata de uma comunidade aberta?”. Por trás dessa ferramenta temos apenas: W3C, Adobe, Google, Microsoft, HP, Mozilla, Opera, Apple e outros&amp;#8230; E agora, se sente mais seguro?&lt;/p&gt;

&lt;h4 id=&#34;fontes&#34;&gt;Fontes:&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://thetechjournal.com/internet/big-players-join-hands-to-build-single-knowledge-repository-for-web-developers-and-designers.xhtml&#34;&gt;http://thetechjournal.com/internet/big-players-join-hands-to-build-single-knowledge-repository-for-web-developers-and-designers.xhtml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.webmonkey.com/2012/10/w3c-helps-you-build-a-better-web-with-web-platform-docs/&#34;&gt;http://www.webmonkey.com/2012/10/w3c-helps-you-build-a-better-web-with-web-platform-docs/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.webplatform.org/wiki/Main_Page&#34;&gt;http://docs.webplatform.org/wiki/Main_Page&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estruturação de front-end – Parte 1: Preprocessadores, Framewoks e Bibliotecas</title>
      <link>https://tableless.github.io/hugo-public/estruturacao-de-client-side-preprocessadores-framewoks-e-bibliotecas-parte-1/</link>
      <pubDate>Wed, 09 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/estruturacao-de-client-side-preprocessadores-framewoks-e-bibliotecas-parte-1/</guid>
      <description>

&lt;p&gt;Existem três categorias de &amp;#8220;ferramentas&amp;#8221; que nos ajudam a desenvolver um projeto client-side: Preprocessadores, Frameworks e Bibliotecas.&lt;/p&gt;

&lt;h3 id=&#34;preprocessadores&#34;&gt;Preprocessadores&lt;/h3&gt;

&lt;p&gt;Preprocessadores são ferramentas onde você escreve CSS de uma determinada forma, modificando sua sintaxe, fazendo com que na hora de sua utilização o código CSS precise ser préprocessado para que o código escrito seja transformado em código CSS puro e assim então os browsers consigam entender.&lt;/p&gt;

&lt;p&gt;Existem muitos preprocessadores no mercado como &lt;a href=&#34;http://lesscss.org/&#34;&gt;Less&lt;/a&gt;, &lt;a href=&#34;http://sass-lang.com/&#34;&gt;Sass&lt;/a&gt;, &lt;a href=&#34;http://turbine.peterkroener.de/index.php&#34;&gt;Turbine&lt;/a&gt;, &lt;a href=&#34;http://sourceforge.net/projects/switchcss/&#34;&gt;Switch CSS&lt;/a&gt; e outros.&lt;/p&gt;

&lt;p&gt;Particularmente eu não gosto de usar preprocessadores. Para começar é necessário que você aprenda a linguagem de cada um e a ideia de que seu CSS precisa ser compilado para poder funcionar não me agrada muito. O CSS é simples demais para complicarmos desse jeito. Entretanto, há uma série de coisas interessantes que podemos fazer com os preprocessadores como variáveis, funções, operações e etc que demorarão um pouco (ou não) para fazerem parte do core definitivo da linguagem. Mesmo assim, pessoalmente, para a maioria dos projetos, não vale a pena.&lt;/p&gt;

&lt;h3 id=&#34;frameworks&#34;&gt;Frameworks&lt;/h3&gt;

&lt;p&gt;Frameworks são diferentes de preprocessadores mas são muito parecidos com Bibliotecas. Um Framework disponibiliza para o dev um conjunto de estilos e estruturas prontas para a utilização em projetos de forma escalável e uniforme. Normalmente os frameworks te dão uma coleção de componentes para que sejam usadas por todo o projeto. Esses componentes na maioria das vezes já vem com estilos visuais aplicados, bem como a estrutura. Veja por exemplo o &lt;a href=&#34;http://twitter.github.com/bootstrap&#34;&gt;Bootstrap&lt;/a&gt; ou o &lt;a href=&#34;http://blueprintcss.org&#34;&gt;Blueprint&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Com o Bootstrap você consegue, rapidamente, fazer um protótipo simples ou uma estrutura básica de sistema. É o preferido dos programadores. Os elementos visuais já foram criados e desenhados. Talvez não seja uma boa ideia você utilizar um framework em um projeto cujo design já esteja aprovado. Você teria muito retrabalho para &amp;#8220;zerar&amp;#8221; o estilo visual de cada elemento para depois reconstruí-lo utilizando o seu design.&lt;/p&gt;

&lt;p&gt;É muito importante que o uso de um framework CSS/Javascript seja aprovado no início de um grande projeto. Mesmo que você planeje criar um framework do zero, específico para seu projeto. O que na maioria das vezes não vale a pena.&lt;/p&gt;

&lt;h3 id=&#34;bibliotecas&#34;&gt;Bibliotecas&lt;/h3&gt;

&lt;p&gt;Bibliotecas CSS geralmente não modificam o visual como os Frameworks fazem, mas eles disponibilizam uma coleção de classes, reutilizáveis e o melhor, combinatórias, para que se adeque a diversos cenários do seu projeto. Como essas classes não estão ligadas a nenhuma formatação visual, você consegue combinar sem grandes problemas com suas classes e IDs, modificando a hora que quiser a formatação visual dos elementos.&lt;/p&gt;

&lt;p&gt;As bibliotecas são indicadas para projetos mais simples, sem grandes apetrechos técnicos, como um site ou algo parecido. Para fazer um sistema, as bibliotecas irão reforçar os Frameworks, facilitando a organização e formatação da estrutura do site. A biblioteca também ajuda na manipulação dos elementos via Javascript se baseando por estas classes prontas.&lt;/p&gt;

&lt;p&gt;A verdade é que hoje é muito difícil diferenciar uma biblioteca de um framework.&lt;/p&gt;

&lt;h3 id=&#34;como-todos-eles-trabalham-juntos&#34;&gt;Como todos eles trabalham juntos?&lt;/h3&gt;

&lt;p&gt;Você pode usar todos os três ao mesmo tempo em um projeto. Mas não é muito inteligente, já que se você estiver utilizando um framework, muito provavelmente ele terá uma &amp;#8220;biblioteca&amp;#8221; em sua base. Imagine que a biblioteca pode ser específica de estrutura ou formatação visual. O Framework, basicamente, junta os dois. Obviamente há mais coisas envolvidas. Mas para simplificarmos a explicação, imagine que um Framework é a mistura dessas duas bibliotecas.&lt;/p&gt;

&lt;p&gt;O Preprocessador é independente do Framework e da Biblioteca. O seu ganho está ao escrever um código mais escalável, muitas vezes melhorando ou piorando a sintaxe do código. É pura sintaxe, não são classes prédefinidas. Mesmo assim você pode basear seu Framework/Biblioteca em um Préprocessador. O Bootstrap faz isso para facilitar features dinâmicas como grids, cores e etc.&lt;/p&gt;

&lt;p&gt;Como eu disse, eu não gosto de misturar as coisas. Prefiro utilizar o Bootstrap puro, sem a interferência de nenhum préprocessador. Mas, há gosto para tudo. 😉&lt;/p&gt;

&lt;h3 id=&#34;qual-deles-é-melhor-para-o-meu-projeto&#34;&gt;Qual deles é melhor para o meu projeto&lt;/h3&gt;

&lt;p&gt;Eu não sugiro que você utilize um framework para criar websites institucionais. Websites geralmente não usam os mesmos elementos, nem as mesmas estruturas, nem o mesmo design. Logo, se você utilizasse um framework como o Bootstrap, ou o JQuery UI, você acabaria gastando mais tempo reestilizando e brigando com o CSS já criado dos frameworks do que fazendo o que realmente importa: o seu trabalho.&lt;/p&gt;

&lt;p&gt;Logo, para projetos de pequeno porte eu sugiro que você utilize uma biblioteca simples. Sugiro ainda que essa biblioteca seja criada por você.&lt;/p&gt;

&lt;p&gt;Não precisa de muito. Em uma biblioteca você só precisa ter algumas propriedades que fazem tarefas básicas, como fazer o elemento flutuar para a esquerda, para direita, clear, retirar margens e etc. Normalmente eu utilizo um reset chamado &lt;a href=&#34;http://necolas.github.com/normalize.css/&#34;&gt;Normalize&lt;/a&gt;. Ele já reseta meu CSS inteiro e então eu me foco apenas nas propriedades que eu reutilizarei no resto do projeto.&lt;/p&gt;

&lt;p&gt;Se seu projeto for médio ou grande, você já pode pensar em utilizar um Framework. Principalmente se seu projeto for um sistema. Você já vai ter à disposição estilos para formulários (que são um saco pra fazer), botões, grids, reset CSS e outras coisas. O trabalho fica mais fácil por que você tem menos arestas para acertar. Ainda mais se o designer aceitar utilizar alguns dos estilos já prontos do Framework, assim você não precisa reconfigurar formatações visuais e etc.&lt;/p&gt;

&lt;p&gt;A utilização do Preprocessadores é totalmente opcional. Mas se você decidir utilizá-lo juntamente com algum Framework, procure saber se o Framework escolhido suporta algum tipo de préprocessador. O Bootstrap, por exemplo, tem uma versão para LESS.&lt;/p&gt;

&lt;p&gt;No próximo artigo vou contar como estamos fazendo aqui na Locaweb. Estamos criando uma grande biblioteca visual e de front-end que será utilizado por todos os serviços. Os programadores conseguem subir um sistema sem precisar esperar um código HTML definitivo, utilizando os módulos dessa biblioteca. A galera de design faz todos os layouts padronizados visualmente, garantindo a uniformidade de todos os sistemas. E o pessoal de front? Bom o pessoal de front cuida para que tudo isso funcione. 😉&lt;/p&gt;

&lt;p&gt;Veja a segunda parte deste artigo: &lt;a href=&#34;http://tableless.com.br/estruturacao-de-client-side-designers-e-programadores-parte-2/&#34; title=&#34;Estruturação de Client-side – Parte 2: Designers e Programadores&#34;&gt;Designers e Programadores&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GoMo – Teste seu site mobile</title>
      <link>https://tableless.github.io/hugo-public/gomo-teste-seu-site-mobile/</link>
      <pubDate>Thu, 16 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/gomo-teste-seu-site-mobile/</guid>
      <description>&lt;p&gt;Quer saber como seu site aparece nos smartphones por aí mas não nenhum aparelho para testar? O Google tem uma iniciativa chamada &lt;a href=&#34;http://bit.ly/Aj7XXh&#34;&gt;GoMo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O GoMo faz um teste rápido no seu site e mostra um screenshot de como seu site aparece em aparelhos móveis, aparentemente somente em aparelhos que rodam Android. Lembrando que muito provavelmente seu site aparecerá da mesma forma em dispositivos da Apple, que rodam WebKit, mesmo motor de renderização do browser do Android.&lt;/p&gt;

&lt;p&gt;Ao final do teste ele entrega o resultando indicando 4 pontos principais: velocidade, imagens quebradas, legibilidade de textos e navegação. Muito interessante para quem quer pelo menos ter um teste superficial de como seu site se comporta nestes dispositivos.&lt;/p&gt;

&lt;p&gt;Visite o &lt;a href=&#34;http://bit.ly/Aj7XXh&#34;&gt;GoMo&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Agora é a vez dos desenvolvedores</title>
      <link>https://tableless.github.io/hugo-public/agora-e-a-vez-dos-desenvolvedores/</link>
      <pubDate>Sun, 05 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/agora-e-a-vez-dos-desenvolvedores/</guid>
      <description>

&lt;p&gt;O desenvolvimento web depende de três personagens principais: &lt;strong&gt;W3C&lt;/strong&gt;, que regulamenta, cria e sanciona padrões para a web. Os &lt;strong&gt;browsers&lt;/strong&gt;, que importam essas regras e padrões de forma que a web seja mais homogênea e também podem criar padrões. E por fim os &lt;strong&gt;desenvolvedores&lt;/strong&gt;, que aplicam os padrões em projetos, produzindo e criando na web.&lt;/p&gt;

&lt;p&gt;Cada um destes personagens tem papéis importantes para que a web continue evoluindo com força, traçando novos caminhos, cobrindo as necessidades atuais dos usuários e prevendo necessidades e soluções futuras. Existe um ciclo que envolve estes três personagens para que tudo ande bem.&lt;/p&gt;

&lt;h2 id=&#34;o-w3c&#34;&gt;O W3C&lt;/h2&gt;

&lt;p&gt;O W3C cuida dos padrões. Ele tem ideias, ele prevê problemas e tenta solucioná-los. Ele incorpora boas ideias dos desenvolvedores e principalmente dos browsers. O W3C não aplica, ele apenas planeja. É um trabalho difícil por que é necessário uma visão muito apurada da web. Uma decisão errada pode acarretar problemas que levarão anos para serem solucionados. Por isso esse trabalho de planejamento deve ser meticuloso. Devo confessar que em muitos casos o W3C não supera as expectativas e faz com que iniciativas paralelas surjam e direcionem a Web para um caminha mais correto. Foi o que aconteceu com o HTML 5.&lt;/p&gt;

&lt;h2 id=&#34;os-browsers&#34;&gt;Os browsers&lt;/h2&gt;

&lt;p&gt;Os browsers, por sua vez, precisam entender e adotar as idéias do W3C, absorvendo as soluções e criando suporte nos seus softwares. Esse trabalho também tem seus perigos. Os browsers precisam pesquisar quais das necessidades dos desenvolvedores é mais importante e assim implementá-las. Não pode ser algo feito ao acaso. Os browsers precisam ouvir os desenvolvedores para implementar soluções que realmente ajudem na produção diária. Obviamente alguns decidem suportar aquelas soluções que darão mais pontos estratégicos contra o concorrente. Por que você acha que o Safari tem um bom suporte aos padrões desde o primeiro iPhone?&lt;/p&gt;

&lt;h2 id=&#34;os-desenvolvedores&#34;&gt;Os desenvolvedores&lt;/h2&gt;

&lt;p&gt;Finalizando o ciclo, os desenvolvedores aplicam tudo o W3C define, mas apenas aquilo que os browsers “querem” ou podem suportar. E isso, claro, faz com que o desenvolvedor tenha problemas na produção. Principalmente de compatibilidade. Nesse ponto, hoje está tudo muito mais tranquilo. Mas quem nunca quis usar uma determinada API do Javascript ou uma propriedade do CSS que estava disponível apenas em um navegador?&lt;/p&gt;

&lt;p&gt;Durante muito tempo, esse ciclo não era afinado. Havia uma certa confusão e um jogo de interesses próprios envolvendo principalmente os browsers. O W3C estava apenas pensando em como resolver problemas que talvez existiriam daqui longos anos. Os browsers estavam apenas interessados em criar uma massa de usuários suficiente para ser o primeiro no ranking. Os desenvolvedores, por sua vez, queriam ganhar seu dinheirinho, fazer o trabalho, entregar pro cliente e acabar com o problema.&lt;/p&gt;

&lt;p&gt;Ninguém deu atenção quando começamos a desenvolver com tabelas, fazendo com que os sites ficassem mais pesados, aumentando o tempo de desenvolvimento e o custo do projeto.&lt;/p&gt;

&lt;p&gt;Este ciclo defeituoso foi praticado durante muito tempo. Por incrível que pareça, foram os Desenvolvedores que começaram a fazer o ciclo funcionar como deveria. Eles acordaram os fabricantes de browsers e também o W3C. A revolução começou nas trincheiras.&lt;/p&gt;

&lt;p&gt;Por causa dessa revolução silenciosa dos desenvolvedores, o W3C passou a pensar mais em problemas presentes. Solucionou problemas iminentes e que entregavam valor para os projetos.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Os desenvolvedores fizeram duas revoluções: uma que foi liderada pelo pessoal da WaSP e outra quando um grupo começou o desenvolvimento do HTML 5, sem depender do W3C para planejar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Os browsers suportaram o mais rápido possível essas mudanças, atualizando seus engines, e fortalecendo as bases para novas soluções e flexibilizações posteriores.&lt;/p&gt;

&lt;p&gt;Já os desenvolvedores estagnaram. Desculpe-me, serei um pouco revoltado daqui para frente. Os desenvolvedores dormiram. Quando o W3C e os browsers apresentaram soluções para problemas como transparência, bordas arredondadas, backgrounds inteligentes, utilização de fonte remotas, apis de javascript decentes, novas tags e etc, os desenvolvedores resolveram que não era a hora dessas soluções por causa de coisas como o IE6. Na verdade estou sendo meio injusto aqui. Não foram todos os desenvolvedores que criaram caso com isso, foram somente os idiotas.&lt;/p&gt;

&lt;p&gt;Logo os idiotas, que reclamavam tanto da falta de recursos mais inteligentes para trabalhar. Que precisávamos de idéias realmente inovadoras que transformassem os projetos e facilitassem o desenvolvimento. Protestaram, escreveram manifestos, postaram em blogs, revoltados com a falta de visão do W3C e com a pobreza do suporte dos browsers. Mas quando chegou a hora, deram para trás. Amarelaram. Pediram arrego.&lt;/p&gt;

&lt;p&gt;Infelizmente, via-se muito mais disso aqui no Brasil do que no resto do mundo. Ouvi muitas desculpas como: &amp;#8211; &amp;#8220;Mas meu cliente usa IE6.&amp;#8221; ou &amp;#8220;Mas isso não funciona em IE6.&amp;#8221;&lt;/p&gt;

&lt;p&gt;Entenda uma coisa: você é desenvolvedor web. Você trata com seu cliente todos os dias. Você tem o poder de &lt;a href=&#34;http://tableless.com.br/convencimento-e-educacao-liberdade/&#34; title=&#34;Convencimento e educação = liberdade&#34;&gt;educar e convencer&lt;/a&gt;. Se você acha que não tem poder nenhum, por que ainda trabalha com web?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Talvez isso seja trauma do passado. Talvez não. O fato é que não podemos mais nivelar por baixo. Isso é atrasar uma &amp;#8220;evolução&amp;#8221; inteira.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Temos falado incansavelmente aqui no Tableless sobre &lt;a href=&#34;http://tableless.com.br/bem-vindo-a-xangrila-parte-1/&#34; title=&#34;Bem vindo a Xangri-lá – Parte 1&#34;&gt;Graceful Degradation, Enhanced Progressive&lt;/a&gt;, &lt;a href=&#34;http://tableless.com.br/categoria/client-side/html-css/html5-client-side/&#34;&gt;HTML 5&lt;/a&gt;, as &lt;a href=&#34;http://tableless.com.br/categoria/client-side/html-css/css3/&#34;&gt;maravilhas do CSS 3&lt;/a&gt; e etc, pois esse é o assunto que rola lá fora. Há desenvolvedores e empresas, que acham que devemos ter uma autorização especial dos gringos para utilizarmos novas tecnologias e principalmente &lt;a href=&#34;http://tableless.com.br/browsers-antigos-guerra-contra-o-terror/&#34;&gt;para deixar os browsers antigos no passado&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Esse assunto me faz pensar em outra pergunta: Estamos (você está?) preparados para o ritmo alucinante que será ditado daqui pra frente?&lt;/p&gt;

&lt;p&gt;Até a Microsoft está cumprindo com a palavra de ter um browser atualizado. Eles anunciam uma versão após a outra do Internet Explorer com mais inovações, suporte aos padrões e novidades&amp;#8230; Mas ainda há os bobalhões que preferem falar mal do Internet Explorer do que abrir os olhos e seguir em frente.&lt;/p&gt;

&lt;p&gt;O mercado de client-side se transformará rapidamente nos próximos anos. Muitas mudanças no HTML e no CSS serão publicadas com o intuito de tornar a web mais homogênea, flexível, portável. O HTML 5 não é só uma coleção de novas tags e APIs. O CSS 3 não ganhou só bordas arredondadas. E nem só de iPhone vive o homem. Existem milhares de Nokias, Windows Phones e Androids por aí.&lt;/p&gt;

&lt;p&gt;Os desenvolvedores precisam acordar.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Artigo originalmente publicado em Nov/2009 na revista TI Digital.&lt;/small&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ePub: Aprenda a criar um livro digital</title>
      <link>https://tableless.github.io/hugo-public/epub-aprenda-a-criar-um-livro-digital/</link>
      <pubDate>Wed, 01 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/epub-aprenda-a-criar-um-livro-digital/</guid>
      <description>

&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;

&lt;p&gt;Com a crescente popularização de tablets e leitores digitais não há dúvida de que os livros eletrônicos vieram para ficar. O formato ePub vem cada vez mais se consolidando como o padrão definitivo para eBooks. As editoras procuram profissionais especializados, mas, aqui no Brasil não existem muitos que de fato possuem o know-how necessário para desenvolver livros no padrão. Na verdade o que acontece é que as editoras estão alocando o tipo de profissional errado para a função. Um diagramador padrão, acostumado com editoração impressa via softwares visuais como Indesign vai ter problemas ao tentar lidar com linhas de código. Já um desenvolvedor front-end vai se sentir em casa já que criar e editar um livro digital é basicamente lidar com XHTML e folhas de estilo em CSS. Neste artigo vou comentar sobre as vantagens (e desvantagens) deste padrão e como com algumas poucas dicas você poderá editar um livro digital.&lt;/p&gt;

&lt;h2 id=&#34;por-que-não-usar-pdf&#34;&gt;Por que não usar PDF?&lt;/h2&gt;

&lt;p&gt;O PDF tem muitas vantagens. Até a sua tia que te liga toda semana para perguntar de novo como faz para ler o resultado da Megasena na internet sabe como abrir um PDF. E do ponto de vista do design é ótimo. Hey, você tem muito mais controle do layout! Você pode colocar imagens e textos como quiser sem se preocupar com nada. Exceto… Você já tentou ler um PDF em um smartphone? É simplesmente agonizante. É necessário dar zoom in e out a cada frase diferente. Ou tentar ler tudo em um tamanho de letra absurdamente pequeno…&lt;/p&gt;

&lt;p&gt;Isto acontece por que o PDF é baseado no suporte físico de uma folha, o que simplesmente não faz sentido no mundo digital. Vou explicar: um artista que pretende pintar uma nova obra de arte precisa saber o tamanho da tela. Da mesma maneira, ao editar um livro, ou qualquer outro tipo de documento para a impressão, é necessário saber o tamanho da folha para aí então fazermos toda a diagramação. O problema é que em um ambiente digital não existe uma folha. Existe um viewport (ou seja, área de visualização) que pode ser, bem, do tamanho que o usuário quiser! Se ele for ler o seu livro no browser pode aumentar e diminuir o tamanho da janela até a resolução máxima do monitor. Ou pode optar por ler em um tablet, smartphone, eReader… Enfim, a questão é que não temos como determinar a medida de altura e largura da mesma maneira que fazíamos com o papel. E o PDF, como foi pensado para ser impresso, precisa desta medida fixa.&lt;/p&gt;

&lt;h2 id=&#34;sobre-o-epub&#34;&gt;Sobre o ePub&lt;/h2&gt;

&lt;p&gt;ePub é abreviação de Eletronic Publication, ou seja, Publicação Eletrônica. É um formato de livro aberto e gratuito criado pelo &lt;a href=&#34;http://idpf.org/&#34; title=&#34;IDPF&#34;&gt;IDPF&lt;/a&gt;, um fórum internacional de publicação digital. Os livros deste formato são fluidos, o que permite que a experiência de leitura seja legal em qualquer tamanho da tela, sistema operacional ou dispositivo que você escolher. Desde que você tenha um app para isto, é claro. Mas isto não é muita preocupação. Existem leitores gratuitos para quase todos os aparelhos e sistemas operacionais (se você não conhece nenhum dê uma olhadinha no final do texto). Outro aspecto bacana do ePub é o controle que ele dá ao usuário. É possível realizar buscas, navegar através de links, aumentar e diminuir o tamanho da letra, trocar as fontes, a paleta de cores, etc. Sim, isto significa que se o cara quiser ler o livro inteiro em Comics Sans ele pode! Mas se isto deixar o usuário feliz quem somos nós para dizer não?&lt;/p&gt;

&lt;h2 id=&#34;como-editar&#34;&gt;Como editar&lt;/h2&gt;

&lt;p&gt;Bem, agora que você já sabe como ler e por que usar, vamos descobrir como é um livro digital por dentro! Criei um livro de exemplo para utilizar neste tutorial. &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/01/meulivro.epub_.zip&#34;&gt;Você pode baixa-lo aqui&lt;/a&gt;. Mas qualquer outro livro que você tiver neste formato vai servir para o nosso experimento.&lt;/p&gt;

&lt;p&gt;A extensão ePub é um formato de livros compactado. Faça um teste: renomeie o arquivo deste tutorial de meulivro.epub para meulivro.zip ou meulivro.rar que você poderá ver o conteúdo do pacote. No entanto, uma coisa importante de se ter em mente é que não são todos os softwares editores que estão preparados para salvar neste formato. Até dá para ler os arquivos XHTML separados, mas você teria que abrir manualmente, editar e recompactar a cada mudança de volta para ePub o que não seria nada prático. Felizmente existem alguns softwares como &lt;a href=&#34;http://code.google.com/p/sigil/&#34; title=&#34;Sigil&#34;&gt;Sigil&lt;/a&gt; que são específicos para a edição de código de ePubs. Eles não tem um visual muito bonito mas cumprem com a função direitinho. Bem, vamos explorar os arquivos…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obs.&lt;/strong&gt; Existem outras especificações opcionais, mas vou me manter dentro do fundamental.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obs.2&lt;/strong&gt; Os nomes dos arquivos são case sensitive.&lt;/p&gt;

&lt;h2 id=&#34;a-estrutura&#34;&gt;A Estrutura&lt;/h2&gt;

&lt;p&gt;Vamos voltar ao nosso ePub! Ao descompactar a pasta você vai ter o seguinte:&lt;/p&gt;

&lt;p&gt;arquivo mimetype&lt;/p&gt;

&lt;p&gt;pasta META-INF&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;container.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;pasta OEBPS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;content.opf&lt;/li&gt;
&lt;li&gt;toc.ncx&lt;/li&gt;
&lt;li&gt;style.css&lt;/li&gt;
&lt;li&gt;titulo.html&lt;/li&gt;
&lt;li&gt;capitulo1.html&lt;/li&gt;
&lt;li&gt;capitulo2.html&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;para-que-serve-tudo-isso-e-como-eu-crio-sozinho&#34;&gt;Para que serve tudo isso e como eu crio sozinho?&lt;/h2&gt;

&lt;h4 id=&#34;mimetype&#34;&gt;Mimetype&lt;/h4&gt;

&lt;p&gt;A função do mimetype é informar ao sistema operacional qual é o tipo do arquivo. O mimetype é um simples arquivo de texto ASCII.  Para criar um mimetype basta abrir qualquer editor (ou até mesmo o bloco de notas) e escrever esta linha de código:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;application/epub+zip&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Salve como mimetype (sem nenhuma extensão) e pronto. Está feito! O mimetype é igual para qualquer ePub. Então copiar de um outro ePub da certo também.&lt;/p&gt;

&lt;h4 id=&#34;container-xml&#34;&gt;Container.xml&lt;/h4&gt;

&lt;p&gt;Deve ficar dentro da pasta  META-INF. A função deste arquivo é agregar todos os outros. Bora criar um!&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;container xmlns=&amp;#8221;urn:oasis:names:tc:opendocument:xmlns:container&amp;#8221; version=&amp;#8221;1.0&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;rootfiles&gt;&lt;/p&gt;

&lt;p&gt;&lt;rootfile full-path=&amp;#8221;OEBPS/content.opf&amp;#8221; media-type=&amp;#8221;application/oebps-package+xml&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/rootfiles&gt;&lt;/p&gt;

&lt;p&gt;&lt;/container&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;content-opf&#34;&gt;Content.opf&lt;/h4&gt;

&lt;p&gt;Descreve o conteúdo de todos os arquivos. Apesar da extensão esquisita é só criar um xml e depois salvar como .opf É composto das seguintes partes: metadata, manifest e spine. O esqueleto dele é assim:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;package xmlns=&amp;#8221;http://www.idpf.org/2007/opf&amp;#8221; unique-identifier=&amp;#8221;EPB-UUID&amp;#8221; version=&amp;#8221;2.0&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; insira os parâmetros aqui &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;/package&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;metadata&#34;&gt;Metadata&lt;/h4&gt;

&lt;p&gt;Não tem muito segredo aqui. São as informações do seu livro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Itens obrigatórios:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;title&lt;/strong&gt; &amp;#8211; O título do seu livro.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;language&lt;/strong&gt; &amp;#8211; A Lingua utilizada. Como o livro está em português eu escolhi pt-br.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;identifier&lt;/strong&gt; &amp;#8211; Um código único para o seu livro. Pode ser o ISBN, por exemplo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Itens opcionais:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;creator&lt;/strong&gt; &amp;#8211; O criador. No caso, você.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;contributor&lt;/strong&gt; &amp;#8211; Contribuidor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;publisher&lt;/strong&gt; &amp;#8211; Editora&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;subject&lt;/strong&gt; &amp;#8211; Assunto&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;description&lt;/strong&gt; &amp;#8211; Descrição do livro&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;date&lt;/strong&gt; &amp;#8211; Data&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt; &amp;#8211; Tipo&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;format&lt;/strong&gt; &amp;#8211; Formato&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;source&lt;/strong&gt; &amp;#8211; Fonte&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;relation&lt;/strong&gt; &amp;#8211; Relação&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;coverage&lt;/strong&gt; &amp;#8211; Cobertura&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rights&lt;/strong&gt; &amp;#8211; O tipo de licença. Creative Commons, por exemplo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bem, vamos preencher nossas metadatas. Eu inseri o seguinte entre as tags package:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;metadata xmlns:opf=&amp;#8221;&lt;a href=&#34;http://www.idpf.org/2007/opf&amp;amp;#8221&#34;&gt;http://www.idpf.org/2007/opf&amp;amp;#8221&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;xmlns:dc=&amp;#8221;&lt;a href=&#34;http://purl.org/dc/elements/1.1/&amp;amp;#8221;&amp;gt;&#34;&gt;http://purl.org/dc/elements/1.1/&amp;amp;#8221;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:title&#34;&gt;dc:title&lt;/a&gt;Saga do primeiro ePub&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:title&#34;&gt;/dc:title&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:creator opf:role=&amp;#8221;aut&amp;#8221; opf:file-as=&amp;#8221;Dani&amp;#8221;&gt;Dani&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:creator&#34;&gt;/dc:creator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:date opf:event=&amp;#8221;original-publication&amp;#8221;&gt;2012&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:date&#34;&gt;/dc:date&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:publisher&#34;&gt;dc:publisher&lt;/a&gt;Tableless&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:publisher&#34;&gt;/dc:publisher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:date opf:event=&amp;#8221;epub-publication&amp;#8221;&gt;2012-01-30&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:date&#34;&gt;/dc:date&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:subject&#34;&gt;dc:subject&lt;/a&gt;Primeiro ePub&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:subject&#34;&gt;/dc:subject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:subject&#34;&gt;dc:subject&lt;/a&gt;Estudos&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:subject&#34;&gt;/dc:subject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:source&#34;&gt;dc:source&lt;/a&gt;Tableless&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:source&#34;&gt;/dc:source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:rights&#34;&gt;dc:rights&lt;/a&gt;Pode copiar galera!&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:rights&#34;&gt;/dc:rights&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:identifier id=&amp;#8221;EPB-UUID&amp;#8221;&gt;minhaid&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:identifier&#34;&gt;/dc:identifier&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:language&#34;&gt;dc:language&lt;/a&gt;pt-br&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:language&#34;&gt;/dc:language&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/metadata&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;manifest&#34;&gt;Manifest&lt;/h4&gt;

&lt;p&gt;É um manifesto mesmo. Deve conter (em qualquer ordem) a lista de todos os arquivos da sua publicação. Exceto mimetype, container.xml e content.opf É necessário especificar uma ID única para cada arquivo. Você pode nserir estas informações antes ou depois da metadata. O importante é que esteja também dentro da tag package. No caso do nosso livro-tutorial ficou assim:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;manifest&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; Documentos &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;titulo&amp;#8221; href=&amp;#8221;titulo.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;capitulo1&amp;#8243; href=&amp;#8221;capitulo1.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;capitulo2&amp;#8243; href=&amp;#8221;capitulo2.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; CSS Style Sheets &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;main-css&amp;#8221; href=&amp;#8221;style.css&amp;#8221; media-type=&amp;#8221;text/css&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; NCX &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;ncx&amp;#8221; href=&amp;#8221;toc.ncx&amp;#8221; media-type=&amp;#8221;application/x-dtbncx+xml&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/manifest&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;spine&#34;&gt;Spine&lt;/h4&gt;

&lt;p&gt;A espinha do livro, ou seja, a ordem de leitura. Aqui você deve colocar apenas os arquivos tipo HTML na ordem que você deseja que apareça no livro, chamando cada um pelo ID que você definiu no manifesto. Tome cuidado para não duplicar nenhum arquivo ou ID. Como você já adivinhou, deve ser inserido entre as tags package também.&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;spine toc=&amp;#8221;ncx&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;titulo&amp;#8221; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;capitulo1&amp;#8243; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;capitulo2&amp;#8243; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/spine&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;toc-ncx&#34;&gt;toc.ncx&lt;/h4&gt;

&lt;p&gt;TOC é uma sigla para Table of Contents, ou seja, o indice do livro. Também é um arquivo xml salvo com a terminação .ncx Possui a seguinte estrutura:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#head&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;uid — o identificador único em content.opf&lt;/li&gt;
&lt;li&gt;depth — níveis do sumário &amp;gt;= 1&lt;/li&gt;
&lt;li&gt;totalPageCount — to 0&lt;/li&gt;
&lt;li&gt;maxPageNumber — to 0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;#navMap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O sumário em si&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#navPoint&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;id — único do arquivo&lt;/li&gt;
&lt;li&gt;playOrder —ordem de navegação (iniciando em 1)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O nosso índice ficou assim então:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!DOCTYPE ncx&lt;/p&gt;

&lt;p&gt;PUBLIC &amp;#8220;-//NISO//DTD ncx 2005-1//EN&amp;#8221; &amp;#8220;&lt;a href=&#34;http://www.daisy.org/z3986/2005/ncx-2005-1.dtd&amp;amp;#8221;&amp;gt;&#34;&gt;http://www.daisy.org/z3986/2005/ncx-2005-1.dtd&amp;amp;#8221;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;ncx xmlns=&amp;#8221;http://www.daisy.org/z3986/2005/ncx/&amp;#8221; version=&amp;#8221;2005-1&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;head&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:uid&amp;#8221; content=&amp;#8221;idtest&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:depth&amp;#8221; content=&amp;#8221;3&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:totalPageCount&amp;#8221; content=&amp;#8221;0&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:maxPageNumber&amp;#8221; content=&amp;#8221;0&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/head&gt;&lt;/p&gt;

&lt;p&gt;&lt;docTitle&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Saga do primeiro ePub&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/docTitle&gt;&lt;/p&gt;

&lt;p&gt;&lt;docAuthor&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Dani&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/docAuthor&gt;&lt;/p&gt;

&lt;p&gt;&lt;navMap&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;titulo&amp;#8221; playOrder=&amp;#8221;1&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Titulo&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;titulo.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;capitulo1&amp;#8243; playOrder=&amp;#8221;2&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Capitulo 1&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;capitulo1.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;capitulo2&amp;#8243; playOrder=&amp;#8221;2&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Capitulo 2&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;capitulo2.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navMap&gt;&lt;/p&gt;

&lt;p&gt;&lt;/ncx&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h4 id=&#34;os-capítulos&#34;&gt;Os capítulos&lt;/h4&gt;

&lt;p&gt;É aqui que entra o livro em si. Cada capitulo deve ficar em um HTML separado. Estes arquivos não são nada diferentes de HTMLs comuns:&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;html xmlns=&amp;#8221;http://www.w3.org/1999/xhtml&amp;#8221; xml:lang=&amp;#8221;pt&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;&lt;head&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta http-equiv=&amp;#8221;Content-Type&amp;#8221; content=&amp;#8221;application/xhtml+xml; charset=utf-8&amp;#8243; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;title&gt;Capítulo 1&lt;/title&gt;&lt;/p&gt;

&lt;p&gt;&lt;link href=&amp;#8221;style.css&amp;#8221; rel=&amp;#8221;stylesheet&amp;#8221; type=&amp;#8221;text/css&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/head&gt;&lt;/p&gt;

&lt;p&gt;&lt;body&gt;&lt;/p&gt;

&lt;div&gt;
  
&lt;h3&gt;Capítulo 1&lt;/h3&gt;

&lt;p&gt;Hello World! Este é o primeiro capítulo do nosso livro. Yey!&lt;/p&gt;
  
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/p&gt;
  
&lt;/div&gt;
  

&lt;p&gt;&lt;/body&gt;&lt;/p&gt;

&lt;p&gt;&lt;/html&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;outros-tipos-de-arquivos&#34;&gt;Outros tipos de arquivos:&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; &amp;#8211; Uma folha de estilos normal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pasta images&lt;/strong&gt; &amp;#8211; Aqui devem ficar as imagens do livro. Formatos permitidos: jpeg, png, gif e svg+xml&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pasta fonts&lt;/strong&gt; &amp;#8211; Utilize esta pasta se você quiser embedar algum arquivo de fonte no seu documento. Lembre-se de utilizar sempre o formato Open Type pois alguns aplicativos de leitura não suportam True Type.&lt;/p&gt;

&lt;h4 id=&#34;e-agora-basta-compactar&#34;&gt;E agora basta compactar!&lt;/h4&gt;

&lt;p&gt;Selecione todos os arquivos e crie um arquivo compactado (pode ser .zip ou .rar). Depois é só renomear para .epub e ler no seu dispositivo favorito. Pronto! Você tem um livro digital! 🙂&lt;/p&gt;

&lt;h2 id=&#34;dicas-importantes-para-editar-um-epub&#34;&gt;Dicas importantes para editar um ePub&lt;/h2&gt;

&lt;h4 id=&#34;semântica-é-sua-amiga&#34;&gt;Semântica é sua amiga&lt;/h4&gt;

&lt;p&gt;Bem, se você é leitor do Tableless provavelmente não preciso dizer isso, mas vou dizer mesmo assim! É muito importante utilizar uma estrutura semântica aqui. Tags h1 a h6 para títulos, p para parágrafos… O que você já está mais do que cansado de saber a esta altura. Evite usar br para quebrar a linhas por que sem ter o tamanho de um container é difícil determinar quando de fato vai ser necessário quebrar a linha.&lt;/p&gt;

&lt;h4 id=&#34;evite-seletores-complexos&#34;&gt;Evite seletores complexos&lt;/h4&gt;

&lt;p&gt;Leitores digitais não são tão sofisticados quanto browsers. Mantenha o seu CSS o mais simples possível.&lt;/p&gt;

&lt;h4 id=&#34;use-tamanhos-relativos&#34;&gt;Use tamanhos relativos&lt;/h4&gt;

&lt;p&gt;Como as &amp;#8220;páginas&amp;#8221; do seu livro vão aumentar e diminuir de acordo com o tamanho da tela do dispositivo não utilize pixels como medida para nada. Lembre-se: EM para texto e margens, porcentagens para figura. Isto vai garantir que o seu livro continue proporcional e escalável. E o seu leitor feliz!&lt;/p&gt;

&lt;h4 id=&#34;tamanho-é-documento&#34;&gt;Tamanho é Documento&lt;/h4&gt;

&lt;p&gt;Não use apenas um documento XHTML para o livro todo. A recomendação é que os capítulos tenham menos de 300k cada. Mais do que isto pode deixar alguns leitores, como o iBooks por exemplo, muito lentos! A razão é que estes apps consideram cada capítulo como um bloco de texto diferente. Se você colocar tudo em um documento só o aplicativo vai carregar tudo de uma vez a cada acesso.&lt;/p&gt;

&lt;p&gt;Outra dica é tentar usar sempre imagens otimizadas para a web e com uma resolução não maior do que 1200 x 1600px.&lt;/p&gt;

&lt;h4 id=&#34;não-pire-muito-na-escolha-de-fontes&#34;&gt;Não pire muito na escolha de fontes&lt;/h4&gt;

&lt;p&gt;Evite usar fontes fora do padrão websafe. Você pode embedar fontes Open Type utilizando a propriedade @font-face mas isto não significa que voce deve. Para começar não são todos os leitores que aceitam isto e no final o seu arquivo pode ficar pesado demais e travar. E muitas vezes pode ser um trabalho extra inútil já que o seu usuário pode muito facilmente trocar de fonte. Se mesmo assim você quiser usar não escolha mais do que dois ou três tipos.&lt;/p&gt;

&lt;h2 id=&#34;edição-visual&#34;&gt;Edição visual&lt;/h2&gt;

&lt;p&gt;Sim. Existem alguns softwares que podem gerar o livro para você. O Adobe InDesign faz isto, o Pages do Mac… Mas falando sério: não vale a pena. O código vai ficar sujo e no final você vai ter que corrigir vários bugs. É como se você estivesse utilizando um editor &amp;#8220;What you see is what you get&amp;#8221; para fazer um site. Acho que vocês entendem o drama. Mas… se você for realmente caminhar por esta estrada escura tenha algumas coisas em mente:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Se você está acostumado com editoração nestes programas é preciso mudar alguns paradigmas. Esqueça páginas mestras, hifenização, numeração, pé de página… você não precisa se preocupar mais com estas coisas em um formato digital.&lt;/li&gt;
&lt;li&gt;Crie estilos específicos para o que é título, parágrafo, etc e não esqueça de importa-los na hora de salvar o arquivo.&lt;/li&gt;
&lt;li&gt;Cuidado ao gerar o TOC (table of contents, ou seja, o índice). Se você colocar mais de dois subniveis pode dar problemas de compatibilidade com alguns programas e o seu livro simplesmente não abrir.&lt;/li&gt;
&lt;li&gt;Lembre-se que todas as imagens precisam estar ancoradas para que fluam juntamente com o texto.&lt;/li&gt;
&lt;li&gt;Determine quebras de capítulos. No caso do InDesign, salve cada parte do livro em um arquivo diferente. Depois junte todos os arquivos em um formato &amp;#8220;book&amp;#8221;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;e-quanto-ao-formato-ibook-da-apple&#34;&gt;E quanto ao formato iBook da Apple?&lt;/h2&gt;

&lt;p&gt;A Apple lançou recentemente um software gratuito chamado iBooks Autor para a criação visual de livros digitais. Os livros no formato iBook são bem interativos, permitindo a implementação de elementos multimidia como videos (coisa que ainda está engatinhando no formato ePub). Com um &amp;#8220;pequeno&amp;#8221; porém. Sem muito alarde nos termos de serviço a Apple colocou uma clausula de exclusividade para livros comerciais. Ou seja, se você utilizar o software e vender o seu livro através da iBook Store não poderá vender em mais nenhum lugar. Sem contar que o programa é exclusivo para Mac.&lt;/p&gt;

&lt;h2 id=&#34;fique-longe-dos-conversores-automáticos&#34;&gt;Fique longe dos conversores automáticos!&lt;/h2&gt;

&lt;p&gt;Existem alguns softwares ainda que prometem converter de PDF para ePub. Fique longe deles! Sério. Eles são ainda piores que os editores visuais. Um software não consegue interpretar um livro da mesma maneira que um ser humano a menos que você diga a ele o que fazer. Se você não determinar &amp;#8220;ei, isto é um título&amp;#8221; ele não tem como fazer este tipo de decisão por você.&lt;/p&gt;

&lt;p&gt;Os PDFs estão presos a um tamanho fixo, lembra? O que significa que as palavras precisam ser hifenizadas. Se você converter automaticamente (além do seu código ser a coisa menos semântica desde os sites feitos em tabelas) os hífens vão continuar lá, criando divisões no me-io das pala-vras on-de não pre-cisava! Pense nos números das páginas… se o texto flui isso significa que um mesmo livro pode (e vai) ter uma numeração diferente de acordo com o aparelho utilizado. Mas no caso da conversão automática os números no pdf vão continuar lá. Os títulos provavelmente vão estar errados também. Fora que muitos deixam marcas como &amp;#8220;convertido pelo programa XYZ&amp;#8221; em todas as páginas do livro.&lt;/p&gt;

&lt;h2 id=&#34;links-úteis&#34;&gt;Links úteis&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;[## Introdução&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Com a crescente popularização de tablets e leitores digitais não há dúvida de que os livros eletrônicos vieram para ficar. O formato ePub vem cada vez mais se consolidando como o padrão definitivo para eBooks. As editoras procuram profissionais especializados, mas, aqui no Brasil não existem muitos que de fato possuem o know-how necessário para desenvolver livros no padrão. Na verdade o que acontece é que as editoras estão alocando o tipo de profissional errado para a função. Um diagramador padrão, acostumado com editoração impressa via softwares visuais como Indesign vai ter problemas ao tentar lidar com linhas de código. Já um desenvolvedor front-end vai se sentir em casa já que criar e editar um livro digital é basicamente lidar com XHTML e folhas de estilo em CSS. Neste artigo vou comentar sobre as vantagens (e desvantagens) deste padrão e como com algumas poucas dicas você poderá editar um livro digital.&lt;/p&gt;

&lt;h2 id=&#34;por-que-não-usar-pdf-1&#34;&gt;Por que não usar PDF?&lt;/h2&gt;

&lt;p&gt;O PDF tem muitas vantagens. Até a sua tia que te liga toda semana para perguntar de novo como faz para ler o resultado da Megasena na internet sabe como abrir um PDF. E do ponto de vista do design é ótimo. Hey, você tem muito mais controle do layout! Você pode colocar imagens e textos como quiser sem se preocupar com nada. Exceto… Você já tentou ler um PDF em um smartphone? É simplesmente agonizante. É necessário dar zoom in e out a cada frase diferente. Ou tentar ler tudo em um tamanho de letra absurdamente pequeno…&lt;/p&gt;

&lt;p&gt;Isto acontece por que o PDF é baseado no suporte físico de uma folha, o que simplesmente não faz sentido no mundo digital. Vou explicar: um artista que pretende pintar uma nova obra de arte precisa saber o tamanho da tela. Da mesma maneira, ao editar um livro, ou qualquer outro tipo de documento para a impressão, é necessário saber o tamanho da folha para aí então fazermos toda a diagramação. O problema é que em um ambiente digital não existe uma folha. Existe um viewport (ou seja, área de visualização) que pode ser, bem, do tamanho que o usuário quiser! Se ele for ler o seu livro no browser pode aumentar e diminuir o tamanho da janela até a resolução máxima do monitor. Ou pode optar por ler em um tablet, smartphone, eReader… Enfim, a questão é que não temos como determinar a medida de altura e largura da mesma maneira que fazíamos com o papel. E o PDF, como foi pensado para ser impresso, precisa desta medida fixa.&lt;/p&gt;

&lt;h2 id=&#34;sobre-o-epub-1&#34;&gt;Sobre o ePub&lt;/h2&gt;

&lt;p&gt;ePub é abreviação de Eletronic Publication, ou seja, Publicação Eletrônica. É um formato de livro aberto e gratuito criado pelo &lt;a href=&#34;http://idpf.org/&#34; title=&#34;IDPF&#34;&gt;IDPF&lt;/a&gt;, um fórum internacional de publicação digital. Os livros deste formato são fluidos, o que permite que a experiência de leitura seja legal em qualquer tamanho da tela, sistema operacional ou dispositivo que você escolher. Desde que você tenha um app para isto, é claro. Mas isto não é muita preocupação. Existem leitores gratuitos para quase todos os aparelhos e sistemas operacionais (se você não conhece nenhum dê uma olhadinha no final do texto). Outro aspecto bacana do ePub é o controle que ele dá ao usuário. É possível realizar buscas, navegar através de links, aumentar e diminuir o tamanho da letra, trocar as fontes, a paleta de cores, etc. Sim, isto significa que se o cara quiser ler o livro inteiro em Comics Sans ele pode! Mas se isto deixar o usuário feliz quem somos nós para dizer não?&lt;/p&gt;

&lt;h2 id=&#34;como-editar-1&#34;&gt;Como editar&lt;/h2&gt;

&lt;p&gt;Bem, agora que você já sabe como ler e por que usar, vamos descobrir como é um livro digital por dentro! Criei um livro de exemplo para utilizar neste tutorial. &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/01/meulivro.epub_.zip&#34;&gt;Você pode baixa-lo aqui&lt;/a&gt;. Mas qualquer outro livro que você tiver neste formato vai servir para o nosso experimento.&lt;/p&gt;

&lt;p&gt;A extensão ePub é um formato de livros compactado. Faça um teste: renomeie o arquivo deste tutorial de meulivro.epub para meulivro.zip ou meulivro.rar que você poderá ver o conteúdo do pacote. No entanto, uma coisa importante de se ter em mente é que não são todos os softwares editores que estão preparados para salvar neste formato. Até dá para ler os arquivos XHTML separados, mas você teria que abrir manualmente, editar e recompactar a cada mudança de volta para ePub o que não seria nada prático. Felizmente existem alguns softwares como &lt;a href=&#34;http://code.google.com/p/sigil/&#34; title=&#34;Sigil&#34;&gt;Sigil&lt;/a&gt; que são específicos para a edição de código de ePubs. Eles não tem um visual muito bonito mas cumprem com a função direitinho. Bem, vamos explorar os arquivos…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obs.&lt;/strong&gt; Existem outras especificações opcionais, mas vou me manter dentro do fundamental.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obs.2&lt;/strong&gt; Os nomes dos arquivos são case sensitive.&lt;/p&gt;

&lt;h2 id=&#34;a-estrutura-1&#34;&gt;A Estrutura&lt;/h2&gt;

&lt;p&gt;Vamos voltar ao nosso ePub! Ao descompactar a pasta você vai ter o seguinte:&lt;/p&gt;

&lt;p&gt;arquivo mimetype&lt;/p&gt;

&lt;p&gt;pasta META-INF&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;container.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;pasta OEBPS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;content.opf&lt;/li&gt;
&lt;li&gt;toc.ncx&lt;/li&gt;
&lt;li&gt;style.css&lt;/li&gt;
&lt;li&gt;titulo.html&lt;/li&gt;
&lt;li&gt;capitulo1.html&lt;/li&gt;
&lt;li&gt;capitulo2.html&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;para-que-serve-tudo-isso-e-como-eu-crio-sozinho-1&#34;&gt;Para que serve tudo isso e como eu crio sozinho?&lt;/h2&gt;

&lt;h4 id=&#34;mimetype-1&#34;&gt;Mimetype&lt;/h4&gt;

&lt;p&gt;A função do mimetype é informar ao sistema operacional qual é o tipo do arquivo. O mimetype é um simples arquivo de texto ASCII.  Para criar um mimetype basta abrir qualquer editor (ou até mesmo o bloco de notas) e escrever esta linha de código:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;application/epub+zip&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Salve como mimetype (sem nenhuma extensão) e pronto. Está feito! O mimetype é igual para qualquer ePub. Então copiar de um outro ePub da certo também.&lt;/p&gt;

&lt;h4 id=&#34;container-xml-1&#34;&gt;Container.xml&lt;/h4&gt;

&lt;p&gt;Deve ficar dentro da pasta  META-INF. A função deste arquivo é agregar todos os outros. Bora criar um!&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;container xmlns=&amp;#8221;urn:oasis:names:tc:opendocument:xmlns:container&amp;#8221; version=&amp;#8221;1.0&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;rootfiles&gt;&lt;/p&gt;

&lt;p&gt;&lt;rootfile full-path=&amp;#8221;OEBPS/content.opf&amp;#8221; media-type=&amp;#8221;application/oebps-package+xml&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/rootfiles&gt;&lt;/p&gt;

&lt;p&gt;&lt;/container&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;content-opf-1&#34;&gt;Content.opf&lt;/h4&gt;

&lt;p&gt;Descreve o conteúdo de todos os arquivos. Apesar da extensão esquisita é só criar um xml e depois salvar como .opf É composto das seguintes partes: metadata, manifest e spine. O esqueleto dele é assim:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;package xmlns=&amp;#8221;http://www.idpf.org/2007/opf&amp;#8221; unique-identifier=&amp;#8221;EPB-UUID&amp;#8221; version=&amp;#8221;2.0&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; insira os parâmetros aqui &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;/package&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;metadata-1&#34;&gt;Metadata&lt;/h4&gt;

&lt;p&gt;Não tem muito segredo aqui. São as informações do seu livro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Itens obrigatórios:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;title&lt;/strong&gt; &amp;#8211; O título do seu livro.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;language&lt;/strong&gt; &amp;#8211; A Lingua utilizada. Como o livro está em português eu escolhi pt-br.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;identifier&lt;/strong&gt; &amp;#8211; Um código único para o seu livro. Pode ser o ISBN, por exemplo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Itens opcionais:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;creator&lt;/strong&gt; &amp;#8211; O criador. No caso, você.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;contributor&lt;/strong&gt; &amp;#8211; Contribuidor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;publisher&lt;/strong&gt; &amp;#8211; Editora&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;subject&lt;/strong&gt; &amp;#8211; Assunto&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;description&lt;/strong&gt; &amp;#8211; Descrição do livro&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;date&lt;/strong&gt; &amp;#8211; Data&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt; &amp;#8211; Tipo&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;format&lt;/strong&gt; &amp;#8211; Formato&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;source&lt;/strong&gt; &amp;#8211; Fonte&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;relation&lt;/strong&gt; &amp;#8211; Relação&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;coverage&lt;/strong&gt; &amp;#8211; Cobertura&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rights&lt;/strong&gt; &amp;#8211; O tipo de licença. Creative Commons, por exemplo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bem, vamos preencher nossas metadatas. Eu inseri o seguinte entre as tags package:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;metadata xmlns:opf=&amp;#8221;&lt;a href=&#34;http://www.idpf.org/2007/opf&amp;amp;#8221&#34;&gt;http://www.idpf.org/2007/opf&amp;amp;#8221&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;xmlns:dc=&amp;#8221;&lt;a href=&#34;http://purl.org/dc/elements/1.1/&amp;amp;#8221;&amp;gt;&#34;&gt;http://purl.org/dc/elements/1.1/&amp;amp;#8221;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:title&#34;&gt;dc:title&lt;/a&gt;Saga do primeiro ePub&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:title&#34;&gt;/dc:title&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:creator opf:role=&amp;#8221;aut&amp;#8221; opf:file-as=&amp;#8221;Dani&amp;#8221;&gt;Dani&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:creator&#34;&gt;/dc:creator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:date opf:event=&amp;#8221;original-publication&amp;#8221;&gt;2012&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:date&#34;&gt;/dc:date&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:publisher&#34;&gt;dc:publisher&lt;/a&gt;Tableless&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:publisher&#34;&gt;/dc:publisher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:date opf:event=&amp;#8221;epub-publication&amp;#8221;&gt;2012-01-30&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:date&#34;&gt;/dc:date&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:subject&#34;&gt;dc:subject&lt;/a&gt;Primeiro ePub&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:subject&#34;&gt;/dc:subject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:subject&#34;&gt;dc:subject&lt;/a&gt;Estudos&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:subject&#34;&gt;/dc:subject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:source&#34;&gt;dc:source&lt;/a&gt;Tableless&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:source&#34;&gt;/dc:source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:rights&#34;&gt;dc:rights&lt;/a&gt;Pode copiar galera!&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:rights&#34;&gt;/dc:rights&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:identifier id=&amp;#8221;EPB-UUID&amp;#8221;&gt;minhaid&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:identifier&#34;&gt;/dc:identifier&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:language&#34;&gt;dc:language&lt;/a&gt;pt-br&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:language&#34;&gt;/dc:language&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/metadata&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;manifest-1&#34;&gt;Manifest&lt;/h4&gt;

&lt;p&gt;É um manifesto mesmo. Deve conter (em qualquer ordem) a lista de todos os arquivos da sua publicação. Exceto mimetype, container.xml e content.opf É necessário especificar uma ID única para cada arquivo. Você pode nserir estas informações antes ou depois da metadata. O importante é que esteja também dentro da tag package. No caso do nosso livro-tutorial ficou assim:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;manifest&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; Documentos &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;titulo&amp;#8221; href=&amp;#8221;titulo.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;capitulo1&amp;#8243; href=&amp;#8221;capitulo1.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;capitulo2&amp;#8243; href=&amp;#8221;capitulo2.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; CSS Style Sheets &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;main-css&amp;#8221; href=&amp;#8221;style.css&amp;#8221; media-type=&amp;#8221;text/css&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; NCX &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;ncx&amp;#8221; href=&amp;#8221;toc.ncx&amp;#8221; media-type=&amp;#8221;application/x-dtbncx+xml&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/manifest&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;spine-1&#34;&gt;Spine&lt;/h4&gt;

&lt;p&gt;A espinha do livro, ou seja, a ordem de leitura. Aqui você deve colocar apenas os arquivos tipo HTML na ordem que você deseja que apareça no livro, chamando cada um pelo ID que você definiu no manifesto. Tome cuidado para não duplicar nenhum arquivo ou ID. Como você já adivinhou, deve ser inserido entre as tags package também.&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;spine toc=&amp;#8221;ncx&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;titulo&amp;#8221; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;capitulo1&amp;#8243; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;capitulo2&amp;#8243; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/spine&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;toc-ncx-1&#34;&gt;toc.ncx&lt;/h4&gt;

&lt;p&gt;TOC é uma sigla para Table of Contents, ou seja, o indice do livro. Também é um arquivo xml salvo com a terminação .ncx Possui a seguinte estrutura:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#head&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;uid — o identificador único em content.opf&lt;/li&gt;
&lt;li&gt;depth — níveis do sumário &amp;gt;= 1&lt;/li&gt;
&lt;li&gt;totalPageCount — to 0&lt;/li&gt;
&lt;li&gt;maxPageNumber — to 0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;#navMap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O sumário em si&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#navPoint&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;id — único do arquivo&lt;/li&gt;
&lt;li&gt;playOrder —ordem de navegação (iniciando em 1)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O nosso índice ficou assim então:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!DOCTYPE ncx&lt;/p&gt;

&lt;p&gt;PUBLIC &amp;#8220;-//NISO//DTD ncx 2005-1//EN&amp;#8221; &amp;#8220;&lt;a href=&#34;http://www.daisy.org/z3986/2005/ncx-2005-1.dtd&amp;amp;#8221;&amp;gt;&#34;&gt;http://www.daisy.org/z3986/2005/ncx-2005-1.dtd&amp;amp;#8221;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;ncx xmlns=&amp;#8221;http://www.daisy.org/z3986/2005/ncx/&amp;#8221; version=&amp;#8221;2005-1&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;head&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:uid&amp;#8221; content=&amp;#8221;idtest&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:depth&amp;#8221; content=&amp;#8221;3&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:totalPageCount&amp;#8221; content=&amp;#8221;0&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:maxPageNumber&amp;#8221; content=&amp;#8221;0&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/head&gt;&lt;/p&gt;

&lt;p&gt;&lt;docTitle&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Saga do primeiro ePub&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/docTitle&gt;&lt;/p&gt;

&lt;p&gt;&lt;docAuthor&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Dani&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/docAuthor&gt;&lt;/p&gt;

&lt;p&gt;&lt;navMap&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;titulo&amp;#8221; playOrder=&amp;#8221;1&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Titulo&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;titulo.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;capitulo1&amp;#8243; playOrder=&amp;#8221;2&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Capitulo 1&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;capitulo1.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;capitulo2&amp;#8243; playOrder=&amp;#8221;2&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Capitulo 2&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;capitulo2.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navMap&gt;&lt;/p&gt;

&lt;p&gt;&lt;/ncx&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h4 id=&#34;os-capítulos-1&#34;&gt;Os capítulos&lt;/h4&gt;

&lt;p&gt;É aqui que entra o livro em si. Cada capitulo deve ficar em um HTML separado. Estes arquivos não são nada diferentes de HTMLs comuns:&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;html xmlns=&amp;#8221;http://www.w3.org/1999/xhtml&amp;#8221; xml:lang=&amp;#8221;pt&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;&lt;head&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta http-equiv=&amp;#8221;Content-Type&amp;#8221; content=&amp;#8221;application/xhtml+xml; charset=utf-8&amp;#8243; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;title&gt;Capítulo 1&lt;/title&gt;&lt;/p&gt;

&lt;p&gt;&lt;link href=&amp;#8221;style.css&amp;#8221; rel=&amp;#8221;stylesheet&amp;#8221; type=&amp;#8221;text/css&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/head&gt;&lt;/p&gt;

&lt;p&gt;&lt;body&gt;&lt;/p&gt;

&lt;div&gt;
  
&lt;h3&gt;Capítulo 1&lt;/h3&gt;

&lt;p&gt;Hello World! Este é o primeiro capítulo do nosso livro. Yey!&lt;/p&gt;
  
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/p&gt;
  
&lt;/div&gt;
  

&lt;p&gt;&lt;/body&gt;&lt;/p&gt;

&lt;p&gt;&lt;/html&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;outros-tipos-de-arquivos-1&#34;&gt;Outros tipos de arquivos:&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; &amp;#8211; Uma folha de estilos normal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pasta images&lt;/strong&gt; &amp;#8211; Aqui devem ficar as imagens do livro. Formatos permitidos: jpeg, png, gif e svg+xml&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pasta fonts&lt;/strong&gt; &amp;#8211; Utilize esta pasta se você quiser embedar algum arquivo de fonte no seu documento. Lembre-se de utilizar sempre o formato Open Type pois alguns aplicativos de leitura não suportam True Type.&lt;/p&gt;

&lt;h4 id=&#34;e-agora-basta-compactar-1&#34;&gt;E agora basta compactar!&lt;/h4&gt;

&lt;p&gt;Selecione todos os arquivos e crie um arquivo compactado (pode ser .zip ou .rar). Depois é só renomear para .epub e ler no seu dispositivo favorito. Pronto! Você tem um livro digital! 🙂&lt;/p&gt;

&lt;h2 id=&#34;dicas-importantes-para-editar-um-epub-1&#34;&gt;Dicas importantes para editar um ePub&lt;/h2&gt;

&lt;h4 id=&#34;semântica-é-sua-amiga-1&#34;&gt;Semântica é sua amiga&lt;/h4&gt;

&lt;p&gt;Bem, se você é leitor do Tableless provavelmente não preciso dizer isso, mas vou dizer mesmo assim! É muito importante utilizar uma estrutura semântica aqui. Tags h1 a h6 para títulos, p para parágrafos… O que você já está mais do que cansado de saber a esta altura. Evite usar br para quebrar a linhas por que sem ter o tamanho de um container é difícil determinar quando de fato vai ser necessário quebrar a linha.&lt;/p&gt;

&lt;h4 id=&#34;evite-seletores-complexos-1&#34;&gt;Evite seletores complexos&lt;/h4&gt;

&lt;p&gt;Leitores digitais não são tão sofisticados quanto browsers. Mantenha o seu CSS o mais simples possível.&lt;/p&gt;

&lt;h4 id=&#34;use-tamanhos-relativos-1&#34;&gt;Use tamanhos relativos&lt;/h4&gt;

&lt;p&gt;Como as &amp;#8220;páginas&amp;#8221; do seu livro vão aumentar e diminuir de acordo com o tamanho da tela do dispositivo não utilize pixels como medida para nada. Lembre-se: EM para texto e margens, porcentagens para figura. Isto vai garantir que o seu livro continue proporcional e escalável. E o seu leitor feliz!&lt;/p&gt;

&lt;h4 id=&#34;tamanho-é-documento-1&#34;&gt;Tamanho é Documento&lt;/h4&gt;

&lt;p&gt;Não use apenas um documento XHTML para o livro todo. A recomendação é que os capítulos tenham menos de 300k cada. Mais do que isto pode deixar alguns leitores, como o iBooks por exemplo, muito lentos! A razão é que estes apps consideram cada capítulo como um bloco de texto diferente. Se você colocar tudo em um documento só o aplicativo vai carregar tudo de uma vez a cada acesso.&lt;/p&gt;

&lt;p&gt;Outra dica é tentar usar sempre imagens otimizadas para a web e com uma resolução não maior do que 1200 x 1600px.&lt;/p&gt;

&lt;h4 id=&#34;não-pire-muito-na-escolha-de-fontes-1&#34;&gt;Não pire muito na escolha de fontes&lt;/h4&gt;

&lt;p&gt;Evite usar fontes fora do padrão websafe. Você pode embedar fontes Open Type utilizando a propriedade @font-face mas isto não significa que voce deve. Para começar não são todos os leitores que aceitam isto e no final o seu arquivo pode ficar pesado demais e travar. E muitas vezes pode ser um trabalho extra inútil já que o seu usuário pode muito facilmente trocar de fonte. Se mesmo assim você quiser usar não escolha mais do que dois ou três tipos.&lt;/p&gt;

&lt;h2 id=&#34;edição-visual-1&#34;&gt;Edição visual&lt;/h2&gt;

&lt;p&gt;Sim. Existem alguns softwares que podem gerar o livro para você. O Adobe InDesign faz isto, o Pages do Mac… Mas falando sério: não vale a pena. O código vai ficar sujo e no final você vai ter que corrigir vários bugs. É como se você estivesse utilizando um editor &amp;#8220;What you see is what you get&amp;#8221; para fazer um site. Acho que vocês entendem o drama. Mas… se você for realmente caminhar por esta estrada escura tenha algumas coisas em mente:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Se você está acostumado com editoração nestes programas é preciso mudar alguns paradigmas. Esqueça páginas mestras, hifenização, numeração, pé de página… você não precisa se preocupar mais com estas coisas em um formato digital.&lt;/li&gt;
&lt;li&gt;Crie estilos específicos para o que é título, parágrafo, etc e não esqueça de importa-los na hora de salvar o arquivo.&lt;/li&gt;
&lt;li&gt;Cuidado ao gerar o TOC (table of contents, ou seja, o índice). Se você colocar mais de dois subniveis pode dar problemas de compatibilidade com alguns programas e o seu livro simplesmente não abrir.&lt;/li&gt;
&lt;li&gt;Lembre-se que todas as imagens precisam estar ancoradas para que fluam juntamente com o texto.&lt;/li&gt;
&lt;li&gt;Determine quebras de capítulos. No caso do InDesign, salve cada parte do livro em um arquivo diferente. Depois junte todos os arquivos em um formato &amp;#8220;book&amp;#8221;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;e-quanto-ao-formato-ibook-da-apple-1&#34;&gt;E quanto ao formato iBook da Apple?&lt;/h2&gt;

&lt;p&gt;A Apple lançou recentemente um software gratuito chamado iBooks Autor para a criação visual de livros digitais. Os livros no formato iBook são bem interativos, permitindo a implementação de elementos multimidia como videos (coisa que ainda está engatinhando no formato ePub). Com um &amp;#8220;pequeno&amp;#8221; porém. Sem muito alarde nos termos de serviço a Apple colocou uma clausula de exclusividade para livros comerciais. Ou seja, se você utilizar o software e vender o seu livro através da iBook Store não poderá vender em mais nenhum lugar. Sem contar que o programa é exclusivo para Mac.&lt;/p&gt;

&lt;h2 id=&#34;fique-longe-dos-conversores-automáticos-1&#34;&gt;Fique longe dos conversores automáticos!&lt;/h2&gt;

&lt;p&gt;Existem alguns softwares ainda que prometem converter de PDF para ePub. Fique longe deles! Sério. Eles são ainda piores que os editores visuais. Um software não consegue interpretar um livro da mesma maneira que um ser humano a menos que você diga a ele o que fazer. Se você não determinar &amp;#8220;ei, isto é um título&amp;#8221; ele não tem como fazer este tipo de decisão por você.&lt;/p&gt;

&lt;p&gt;Os PDFs estão presos a um tamanho fixo, lembra? O que significa que as palavras precisam ser hifenizadas. Se você converter automaticamente (além do seu código ser a coisa menos semântica desde os sites feitos em tabelas) os hífens vão continuar lá, criando divisões no me-io das pala-vras on-de não pre-cisava! Pense nos números das páginas… se o texto flui isso significa que um mesmo livro pode (e vai) ter uma numeração diferente de acordo com o aparelho utilizado. Mas no caso da conversão automática os números no pdf vão continuar lá. Os títulos provavelmente vão estar errados também. Fora que muitos deixam marcas como &amp;#8220;convertido pelo programa XYZ&amp;#8221; em todas as páginas do livro.&lt;/p&gt;

&lt;h2 id=&#34;links-úteis-1&#34;&gt;Links úteis&lt;/h2&gt;

&lt;p&gt;*]&lt;a href=&#34;http://idpf.org/epub&#34; title=&#34;IDPF&#34;&gt;4&lt;/a&gt; &amp;#8211; A organização responsável pela criação do ePub. O site deles é meio confuso, mas contém bastante informação a respeito do formato.
  * &lt;a href=&#34;http://code.google.com/p/epubcheck/&#34; title=&#34;ePub Check&#34;&gt;ePub Chech&lt;/a&gt; &amp;#8211; Validação de ePub
  * &lt;a href=&#34;http://www.hxa.name/articles/content/epub-guide_hxa7241_2007.html&#34; title=&#34;Epub Format Construction Guide&#34;&gt;Epub Format Construction Guide&lt;/a&gt; &amp;#8211; Um meta-livro bem completo sobre o assunto.&lt;/p&gt;

&lt;h2 id=&#34;bibliotecas-gratuitas&#34;&gt;Bibliotecas gratuitas&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://books.google.com.br/&#34; title=&#34;Google Books&#34;&gt;Google Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.epubbud.com/&#34; title=&#34;ePub Bud&#34;&gt;ePub Bud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;aplicativos-para-a-leitura&#34;&gt;Aplicativos para a Leitura&lt;/h2&gt;

&lt;h4 id=&#34;mac-pc&#34;&gt;Mac &amp;amp; PC&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.adobe.com/products/digitaleditions/&#34; title=&#34;Adobe Digital Editions &#34;&gt;Adobe Digital Editions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.barnesandnoble.com/u/free-nook-apps/379002321/&#34; title=&#34;Nook&#34;&gt;Nook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;linux&#34;&gt;Linux&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.fbreader.org/&#34; title=&#34;FB Reader&#34;&gt;FB Reader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;ios&#34;&gt;iOS&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.apple.com/br/ipad/built-in-apps/ibooks.html&#34; title=&#34;iBooks&#34;&gt;iBooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://itunes.apple.com/br/app/stanza/id284956128?mt=8&#34; title=&#34;Stanza&#34;&gt;Stanza&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;android&#34;&gt;Android&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aldiko.com/&#34; title=&#34;Aldiko&#34;&gt;Aldiko&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;leitura-no-browser&#34;&gt;Leitura no Browser&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;[## Introdução&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Com a crescente popularização de tablets e leitores digitais não há dúvida de que os livros eletrônicos vieram para ficar. O formato ePub vem cada vez mais se consolidando como o padrão definitivo para eBooks. As editoras procuram profissionais especializados, mas, aqui no Brasil não existem muitos que de fato possuem o know-how necessário para desenvolver livros no padrão. Na verdade o que acontece é que as editoras estão alocando o tipo de profissional errado para a função. Um diagramador padrão, acostumado com editoração impressa via softwares visuais como Indesign vai ter problemas ao tentar lidar com linhas de código. Já um desenvolvedor front-end vai se sentir em casa já que criar e editar um livro digital é basicamente lidar com XHTML e folhas de estilo em CSS. Neste artigo vou comentar sobre as vantagens (e desvantagens) deste padrão e como com algumas poucas dicas você poderá editar um livro digital.&lt;/p&gt;

&lt;h2 id=&#34;por-que-não-usar-pdf-2&#34;&gt;Por que não usar PDF?&lt;/h2&gt;

&lt;p&gt;O PDF tem muitas vantagens. Até a sua tia que te liga toda semana para perguntar de novo como faz para ler o resultado da Megasena na internet sabe como abrir um PDF. E do ponto de vista do design é ótimo. Hey, você tem muito mais controle do layout! Você pode colocar imagens e textos como quiser sem se preocupar com nada. Exceto… Você já tentou ler um PDF em um smartphone? É simplesmente agonizante. É necessário dar zoom in e out a cada frase diferente. Ou tentar ler tudo em um tamanho de letra absurdamente pequeno…&lt;/p&gt;

&lt;p&gt;Isto acontece por que o PDF é baseado no suporte físico de uma folha, o que simplesmente não faz sentido no mundo digital. Vou explicar: um artista que pretende pintar uma nova obra de arte precisa saber o tamanho da tela. Da mesma maneira, ao editar um livro, ou qualquer outro tipo de documento para a impressão, é necessário saber o tamanho da folha para aí então fazermos toda a diagramação. O problema é que em um ambiente digital não existe uma folha. Existe um viewport (ou seja, área de visualização) que pode ser, bem, do tamanho que o usuário quiser! Se ele for ler o seu livro no browser pode aumentar e diminuir o tamanho da janela até a resolução máxima do monitor. Ou pode optar por ler em um tablet, smartphone, eReader… Enfim, a questão é que não temos como determinar a medida de altura e largura da mesma maneira que fazíamos com o papel. E o PDF, como foi pensado para ser impresso, precisa desta medida fixa.&lt;/p&gt;

&lt;h2 id=&#34;sobre-o-epub-2&#34;&gt;Sobre o ePub&lt;/h2&gt;

&lt;p&gt;ePub é abreviação de Eletronic Publication, ou seja, Publicação Eletrônica. É um formato de livro aberto e gratuito criado pelo &lt;a href=&#34;http://idpf.org/&#34; title=&#34;IDPF&#34;&gt;IDPF&lt;/a&gt;, um fórum internacional de publicação digital. Os livros deste formato são fluidos, o que permite que a experiência de leitura seja legal em qualquer tamanho da tela, sistema operacional ou dispositivo que você escolher. Desde que você tenha um app para isto, é claro. Mas isto não é muita preocupação. Existem leitores gratuitos para quase todos os aparelhos e sistemas operacionais (se você não conhece nenhum dê uma olhadinha no final do texto). Outro aspecto bacana do ePub é o controle que ele dá ao usuário. É possível realizar buscas, navegar através de links, aumentar e diminuir o tamanho da letra, trocar as fontes, a paleta de cores, etc. Sim, isto significa que se o cara quiser ler o livro inteiro em Comics Sans ele pode! Mas se isto deixar o usuário feliz quem somos nós para dizer não?&lt;/p&gt;

&lt;h2 id=&#34;como-editar-2&#34;&gt;Como editar&lt;/h2&gt;

&lt;p&gt;Bem, agora que você já sabe como ler e por que usar, vamos descobrir como é um livro digital por dentro! Criei um livro de exemplo para utilizar neste tutorial. &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/01/meulivro.epub_.zip&#34;&gt;Você pode baixa-lo aqui&lt;/a&gt;. Mas qualquer outro livro que você tiver neste formato vai servir para o nosso experimento.&lt;/p&gt;

&lt;p&gt;A extensão ePub é um formato de livros compactado. Faça um teste: renomeie o arquivo deste tutorial de meulivro.epub para meulivro.zip ou meulivro.rar que você poderá ver o conteúdo do pacote. No entanto, uma coisa importante de se ter em mente é que não são todos os softwares editores que estão preparados para salvar neste formato. Até dá para ler os arquivos XHTML separados, mas você teria que abrir manualmente, editar e recompactar a cada mudança de volta para ePub o que não seria nada prático. Felizmente existem alguns softwares como &lt;a href=&#34;http://code.google.com/p/sigil/&#34; title=&#34;Sigil&#34;&gt;Sigil&lt;/a&gt; que são específicos para a edição de código de ePubs. Eles não tem um visual muito bonito mas cumprem com a função direitinho. Bem, vamos explorar os arquivos…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obs.&lt;/strong&gt; Existem outras especificações opcionais, mas vou me manter dentro do fundamental.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obs.2&lt;/strong&gt; Os nomes dos arquivos são case sensitive.&lt;/p&gt;

&lt;h2 id=&#34;a-estrutura-2&#34;&gt;A Estrutura&lt;/h2&gt;

&lt;p&gt;Vamos voltar ao nosso ePub! Ao descompactar a pasta você vai ter o seguinte:&lt;/p&gt;

&lt;p&gt;arquivo mimetype&lt;/p&gt;

&lt;p&gt;pasta META-INF&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;container.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;pasta OEBPS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;content.opf&lt;/li&gt;
&lt;li&gt;toc.ncx&lt;/li&gt;
&lt;li&gt;style.css&lt;/li&gt;
&lt;li&gt;titulo.html&lt;/li&gt;
&lt;li&gt;capitulo1.html&lt;/li&gt;
&lt;li&gt;capitulo2.html&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;para-que-serve-tudo-isso-e-como-eu-crio-sozinho-2&#34;&gt;Para que serve tudo isso e como eu crio sozinho?&lt;/h2&gt;

&lt;h4 id=&#34;mimetype-2&#34;&gt;Mimetype&lt;/h4&gt;

&lt;p&gt;A função do mimetype é informar ao sistema operacional qual é o tipo do arquivo. O mimetype é um simples arquivo de texto ASCII.  Para criar um mimetype basta abrir qualquer editor (ou até mesmo o bloco de notas) e escrever esta linha de código:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;application/epub+zip&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Salve como mimetype (sem nenhuma extensão) e pronto. Está feito! O mimetype é igual para qualquer ePub. Então copiar de um outro ePub da certo também.&lt;/p&gt;

&lt;h4 id=&#34;container-xml-2&#34;&gt;Container.xml&lt;/h4&gt;

&lt;p&gt;Deve ficar dentro da pasta  META-INF. A função deste arquivo é agregar todos os outros. Bora criar um!&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;container xmlns=&amp;#8221;urn:oasis:names:tc:opendocument:xmlns:container&amp;#8221; version=&amp;#8221;1.0&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;rootfiles&gt;&lt;/p&gt;

&lt;p&gt;&lt;rootfile full-path=&amp;#8221;OEBPS/content.opf&amp;#8221; media-type=&amp;#8221;application/oebps-package+xml&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/rootfiles&gt;&lt;/p&gt;

&lt;p&gt;&lt;/container&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;content-opf-2&#34;&gt;Content.opf&lt;/h4&gt;

&lt;p&gt;Descreve o conteúdo de todos os arquivos. Apesar da extensão esquisita é só criar um xml e depois salvar como .opf É composto das seguintes partes: metadata, manifest e spine. O esqueleto dele é assim:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;package xmlns=&amp;#8221;http://www.idpf.org/2007/opf&amp;#8221; unique-identifier=&amp;#8221;EPB-UUID&amp;#8221; version=&amp;#8221;2.0&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; insira os parâmetros aqui &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;/package&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;metadata-2&#34;&gt;Metadata&lt;/h4&gt;

&lt;p&gt;Não tem muito segredo aqui. São as informações do seu livro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Itens obrigatórios:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;title&lt;/strong&gt; &amp;#8211; O título do seu livro.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;language&lt;/strong&gt; &amp;#8211; A Lingua utilizada. Como o livro está em português eu escolhi pt-br.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;identifier&lt;/strong&gt; &amp;#8211; Um código único para o seu livro. Pode ser o ISBN, por exemplo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Itens opcionais:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;creator&lt;/strong&gt; &amp;#8211; O criador. No caso, você.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;contributor&lt;/strong&gt; &amp;#8211; Contribuidor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;publisher&lt;/strong&gt; &amp;#8211; Editora&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;subject&lt;/strong&gt; &amp;#8211; Assunto&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;description&lt;/strong&gt; &amp;#8211; Descrição do livro&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;date&lt;/strong&gt; &amp;#8211; Data&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt; &amp;#8211; Tipo&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;format&lt;/strong&gt; &amp;#8211; Formato&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;source&lt;/strong&gt; &amp;#8211; Fonte&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;relation&lt;/strong&gt; &amp;#8211; Relação&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;coverage&lt;/strong&gt; &amp;#8211; Cobertura&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rights&lt;/strong&gt; &amp;#8211; O tipo de licença. Creative Commons, por exemplo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bem, vamos preencher nossas metadatas. Eu inseri o seguinte entre as tags package:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;metadata xmlns:opf=&amp;#8221;&lt;a href=&#34;http://www.idpf.org/2007/opf&amp;amp;#8221&#34;&gt;http://www.idpf.org/2007/opf&amp;amp;#8221&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;xmlns:dc=&amp;#8221;&lt;a href=&#34;http://purl.org/dc/elements/1.1/&amp;amp;#8221;&amp;gt;&#34;&gt;http://purl.org/dc/elements/1.1/&amp;amp;#8221;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:title&#34;&gt;dc:title&lt;/a&gt;Saga do primeiro ePub&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:title&#34;&gt;/dc:title&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:creator opf:role=&amp;#8221;aut&amp;#8221; opf:file-as=&amp;#8221;Dani&amp;#8221;&gt;Dani&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:creator&#34;&gt;/dc:creator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:date opf:event=&amp;#8221;original-publication&amp;#8221;&gt;2012&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:date&#34;&gt;/dc:date&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:publisher&#34;&gt;dc:publisher&lt;/a&gt;Tableless&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:publisher&#34;&gt;/dc:publisher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:date opf:event=&amp;#8221;epub-publication&amp;#8221;&gt;2012-01-30&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:date&#34;&gt;/dc:date&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:subject&#34;&gt;dc:subject&lt;/a&gt;Primeiro ePub&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:subject&#34;&gt;/dc:subject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:subject&#34;&gt;dc:subject&lt;/a&gt;Estudos&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:subject&#34;&gt;/dc:subject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:source&#34;&gt;dc:source&lt;/a&gt;Tableless&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:source&#34;&gt;/dc:source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:rights&#34;&gt;dc:rights&lt;/a&gt;Pode copiar galera!&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:rights&#34;&gt;/dc:rights&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:identifier id=&amp;#8221;EPB-UUID&amp;#8221;&gt;minhaid&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:identifier&#34;&gt;/dc:identifier&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:language&#34;&gt;dc:language&lt;/a&gt;pt-br&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:language&#34;&gt;/dc:language&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/metadata&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;manifest-2&#34;&gt;Manifest&lt;/h4&gt;

&lt;p&gt;É um manifesto mesmo. Deve conter (em qualquer ordem) a lista de todos os arquivos da sua publicação. Exceto mimetype, container.xml e content.opf É necessário especificar uma ID única para cada arquivo. Você pode nserir estas informações antes ou depois da metadata. O importante é que esteja também dentro da tag package. No caso do nosso livro-tutorial ficou assim:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;manifest&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; Documentos &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;titulo&amp;#8221; href=&amp;#8221;titulo.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;capitulo1&amp;#8243; href=&amp;#8221;capitulo1.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;capitulo2&amp;#8243; href=&amp;#8221;capitulo2.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; CSS Style Sheets &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;main-css&amp;#8221; href=&amp;#8221;style.css&amp;#8221; media-type=&amp;#8221;text/css&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; NCX &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;ncx&amp;#8221; href=&amp;#8221;toc.ncx&amp;#8221; media-type=&amp;#8221;application/x-dtbncx+xml&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/manifest&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;spine-2&#34;&gt;Spine&lt;/h4&gt;

&lt;p&gt;A espinha do livro, ou seja, a ordem de leitura. Aqui você deve colocar apenas os arquivos tipo HTML na ordem que você deseja que apareça no livro, chamando cada um pelo ID que você definiu no manifesto. Tome cuidado para não duplicar nenhum arquivo ou ID. Como você já adivinhou, deve ser inserido entre as tags package também.&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;spine toc=&amp;#8221;ncx&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;titulo&amp;#8221; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;capitulo1&amp;#8243; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;capitulo2&amp;#8243; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/spine&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;toc-ncx-2&#34;&gt;toc.ncx&lt;/h4&gt;

&lt;p&gt;TOC é uma sigla para Table of Contents, ou seja, o indice do livro. Também é um arquivo xml salvo com a terminação .ncx Possui a seguinte estrutura:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#head&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;uid — o identificador único em content.opf&lt;/li&gt;
&lt;li&gt;depth — níveis do sumário &amp;gt;= 1&lt;/li&gt;
&lt;li&gt;totalPageCount — to 0&lt;/li&gt;
&lt;li&gt;maxPageNumber — to 0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;#navMap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O sumário em si&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#navPoint&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;id — único do arquivo&lt;/li&gt;
&lt;li&gt;playOrder —ordem de navegação (iniciando em 1)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O nosso índice ficou assim então:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!DOCTYPE ncx&lt;/p&gt;

&lt;p&gt;PUBLIC &amp;#8220;-//NISO//DTD ncx 2005-1//EN&amp;#8221; &amp;#8220;&lt;a href=&#34;http://www.daisy.org/z3986/2005/ncx-2005-1.dtd&amp;amp;#8221;&amp;gt;&#34;&gt;http://www.daisy.org/z3986/2005/ncx-2005-1.dtd&amp;amp;#8221;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;ncx xmlns=&amp;#8221;http://www.daisy.org/z3986/2005/ncx/&amp;#8221; version=&amp;#8221;2005-1&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;head&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:uid&amp;#8221; content=&amp;#8221;idtest&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:depth&amp;#8221; content=&amp;#8221;3&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:totalPageCount&amp;#8221; content=&amp;#8221;0&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:maxPageNumber&amp;#8221; content=&amp;#8221;0&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/head&gt;&lt;/p&gt;

&lt;p&gt;&lt;docTitle&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Saga do primeiro ePub&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/docTitle&gt;&lt;/p&gt;

&lt;p&gt;&lt;docAuthor&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Dani&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/docAuthor&gt;&lt;/p&gt;

&lt;p&gt;&lt;navMap&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;titulo&amp;#8221; playOrder=&amp;#8221;1&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Titulo&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;titulo.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;capitulo1&amp;#8243; playOrder=&amp;#8221;2&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Capitulo 1&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;capitulo1.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;capitulo2&amp;#8243; playOrder=&amp;#8221;2&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Capitulo 2&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;capitulo2.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navMap&gt;&lt;/p&gt;

&lt;p&gt;&lt;/ncx&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h4 id=&#34;os-capítulos-2&#34;&gt;Os capítulos&lt;/h4&gt;

&lt;p&gt;É aqui que entra o livro em si. Cada capitulo deve ficar em um HTML separado. Estes arquivos não são nada diferentes de HTMLs comuns:&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;html xmlns=&amp;#8221;http://www.w3.org/1999/xhtml&amp;#8221; xml:lang=&amp;#8221;pt&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;&lt;head&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta http-equiv=&amp;#8221;Content-Type&amp;#8221; content=&amp;#8221;application/xhtml+xml; charset=utf-8&amp;#8243; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;title&gt;Capítulo 1&lt;/title&gt;&lt;/p&gt;

&lt;p&gt;&lt;link href=&amp;#8221;style.css&amp;#8221; rel=&amp;#8221;stylesheet&amp;#8221; type=&amp;#8221;text/css&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/head&gt;&lt;/p&gt;

&lt;p&gt;&lt;body&gt;&lt;/p&gt;

&lt;div&gt;
  
&lt;h3&gt;Capítulo 1&lt;/h3&gt;

&lt;p&gt;Hello World! Este é o primeiro capítulo do nosso livro. Yey!&lt;/p&gt;
  
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/p&gt;
  
&lt;/div&gt;
  

&lt;p&gt;&lt;/body&gt;&lt;/p&gt;

&lt;p&gt;&lt;/html&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;outros-tipos-de-arquivos-2&#34;&gt;Outros tipos de arquivos:&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; &amp;#8211; Uma folha de estilos normal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pasta images&lt;/strong&gt; &amp;#8211; Aqui devem ficar as imagens do livro. Formatos permitidos: jpeg, png, gif e svg+xml&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pasta fonts&lt;/strong&gt; &amp;#8211; Utilize esta pasta se você quiser embedar algum arquivo de fonte no seu documento. Lembre-se de utilizar sempre o formato Open Type pois alguns aplicativos de leitura não suportam True Type.&lt;/p&gt;

&lt;h4 id=&#34;e-agora-basta-compactar-2&#34;&gt;E agora basta compactar!&lt;/h4&gt;

&lt;p&gt;Selecione todos os arquivos e crie um arquivo compactado (pode ser .zip ou .rar). Depois é só renomear para .epub e ler no seu dispositivo favorito. Pronto! Você tem um livro digital! 🙂&lt;/p&gt;

&lt;h2 id=&#34;dicas-importantes-para-editar-um-epub-2&#34;&gt;Dicas importantes para editar um ePub&lt;/h2&gt;

&lt;h4 id=&#34;semântica-é-sua-amiga-2&#34;&gt;Semântica é sua amiga&lt;/h4&gt;

&lt;p&gt;Bem, se você é leitor do Tableless provavelmente não preciso dizer isso, mas vou dizer mesmo assim! É muito importante utilizar uma estrutura semântica aqui. Tags h1 a h6 para títulos, p para parágrafos… O que você já está mais do que cansado de saber a esta altura. Evite usar br para quebrar a linhas por que sem ter o tamanho de um container é difícil determinar quando de fato vai ser necessário quebrar a linha.&lt;/p&gt;

&lt;h4 id=&#34;evite-seletores-complexos-2&#34;&gt;Evite seletores complexos&lt;/h4&gt;

&lt;p&gt;Leitores digitais não são tão sofisticados quanto browsers. Mantenha o seu CSS o mais simples possível.&lt;/p&gt;

&lt;h4 id=&#34;use-tamanhos-relativos-2&#34;&gt;Use tamanhos relativos&lt;/h4&gt;

&lt;p&gt;Como as &amp;#8220;páginas&amp;#8221; do seu livro vão aumentar e diminuir de acordo com o tamanho da tela do dispositivo não utilize pixels como medida para nada. Lembre-se: EM para texto e margens, porcentagens para figura. Isto vai garantir que o seu livro continue proporcional e escalável. E o seu leitor feliz!&lt;/p&gt;

&lt;h4 id=&#34;tamanho-é-documento-2&#34;&gt;Tamanho é Documento&lt;/h4&gt;

&lt;p&gt;Não use apenas um documento XHTML para o livro todo. A recomendação é que os capítulos tenham menos de 300k cada. Mais do que isto pode deixar alguns leitores, como o iBooks por exemplo, muito lentos! A razão é que estes apps consideram cada capítulo como um bloco de texto diferente. Se você colocar tudo em um documento só o aplicativo vai carregar tudo de uma vez a cada acesso.&lt;/p&gt;

&lt;p&gt;Outra dica é tentar usar sempre imagens otimizadas para a web e com uma resolução não maior do que 1200 x 1600px.&lt;/p&gt;

&lt;h4 id=&#34;não-pire-muito-na-escolha-de-fontes-2&#34;&gt;Não pire muito na escolha de fontes&lt;/h4&gt;

&lt;p&gt;Evite usar fontes fora do padrão websafe. Você pode embedar fontes Open Type utilizando a propriedade @font-face mas isto não significa que voce deve. Para começar não são todos os leitores que aceitam isto e no final o seu arquivo pode ficar pesado demais e travar. E muitas vezes pode ser um trabalho extra inútil já que o seu usuário pode muito facilmente trocar de fonte. Se mesmo assim você quiser usar não escolha mais do que dois ou três tipos.&lt;/p&gt;

&lt;h2 id=&#34;edição-visual-2&#34;&gt;Edição visual&lt;/h2&gt;

&lt;p&gt;Sim. Existem alguns softwares que podem gerar o livro para você. O Adobe InDesign faz isto, o Pages do Mac… Mas falando sério: não vale a pena. O código vai ficar sujo e no final você vai ter que corrigir vários bugs. É como se você estivesse utilizando um editor &amp;#8220;What you see is what you get&amp;#8221; para fazer um site. Acho que vocês entendem o drama. Mas… se você for realmente caminhar por esta estrada escura tenha algumas coisas em mente:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Se você está acostumado com editoração nestes programas é preciso mudar alguns paradigmas. Esqueça páginas mestras, hifenização, numeração, pé de página… você não precisa se preocupar mais com estas coisas em um formato digital.&lt;/li&gt;
&lt;li&gt;Crie estilos específicos para o que é título, parágrafo, etc e não esqueça de importa-los na hora de salvar o arquivo.&lt;/li&gt;
&lt;li&gt;Cuidado ao gerar o TOC (table of contents, ou seja, o índice). Se você colocar mais de dois subniveis pode dar problemas de compatibilidade com alguns programas e o seu livro simplesmente não abrir.&lt;/li&gt;
&lt;li&gt;Lembre-se que todas as imagens precisam estar ancoradas para que fluam juntamente com o texto.&lt;/li&gt;
&lt;li&gt;Determine quebras de capítulos. No caso do InDesign, salve cada parte do livro em um arquivo diferente. Depois junte todos os arquivos em um formato &amp;#8220;book&amp;#8221;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;e-quanto-ao-formato-ibook-da-apple-2&#34;&gt;E quanto ao formato iBook da Apple?&lt;/h2&gt;

&lt;p&gt;A Apple lançou recentemente um software gratuito chamado iBooks Autor para a criação visual de livros digitais. Os livros no formato iBook são bem interativos, permitindo a implementação de elementos multimidia como videos (coisa que ainda está engatinhando no formato ePub). Com um &amp;#8220;pequeno&amp;#8221; porém. Sem muito alarde nos termos de serviço a Apple colocou uma clausula de exclusividade para livros comerciais. Ou seja, se você utilizar o software e vender o seu livro através da iBook Store não poderá vender em mais nenhum lugar. Sem contar que o programa é exclusivo para Mac.&lt;/p&gt;

&lt;h2 id=&#34;fique-longe-dos-conversores-automáticos-2&#34;&gt;Fique longe dos conversores automáticos!&lt;/h2&gt;

&lt;p&gt;Existem alguns softwares ainda que prometem converter de PDF para ePub. Fique longe deles! Sério. Eles são ainda piores que os editores visuais. Um software não consegue interpretar um livro da mesma maneira que um ser humano a menos que você diga a ele o que fazer. Se você não determinar &amp;#8220;ei, isto é um título&amp;#8221; ele não tem como fazer este tipo de decisão por você.&lt;/p&gt;

&lt;p&gt;Os PDFs estão presos a um tamanho fixo, lembra? O que significa que as palavras precisam ser hifenizadas. Se você converter automaticamente (além do seu código ser a coisa menos semântica desde os sites feitos em tabelas) os hífens vão continuar lá, criando divisões no me-io das pala-vras on-de não pre-cisava! Pense nos números das páginas… se o texto flui isso significa que um mesmo livro pode (e vai) ter uma numeração diferente de acordo com o aparelho utilizado. Mas no caso da conversão automática os números no pdf vão continuar lá. Os títulos provavelmente vão estar errados também. Fora que muitos deixam marcas como &amp;#8220;convertido pelo programa XYZ&amp;#8221; em todas as páginas do livro.&lt;/p&gt;

&lt;h2 id=&#34;links-úteis-2&#34;&gt;Links úteis&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;[## Introdução&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Com a crescente popularização de tablets e leitores digitais não há dúvida de que os livros eletrônicos vieram para ficar. O formato ePub vem cada vez mais se consolidando como o padrão definitivo para eBooks. As editoras procuram profissionais especializados, mas, aqui no Brasil não existem muitos que de fato possuem o know-how necessário para desenvolver livros no padrão. Na verdade o que acontece é que as editoras estão alocando o tipo de profissional errado para a função. Um diagramador padrão, acostumado com editoração impressa via softwares visuais como Indesign vai ter problemas ao tentar lidar com linhas de código. Já um desenvolvedor front-end vai se sentir em casa já que criar e editar um livro digital é basicamente lidar com XHTML e folhas de estilo em CSS. Neste artigo vou comentar sobre as vantagens (e desvantagens) deste padrão e como com algumas poucas dicas você poderá editar um livro digital.&lt;/p&gt;

&lt;h2 id=&#34;por-que-não-usar-pdf-3&#34;&gt;Por que não usar PDF?&lt;/h2&gt;

&lt;p&gt;O PDF tem muitas vantagens. Até a sua tia que te liga toda semana para perguntar de novo como faz para ler o resultado da Megasena na internet sabe como abrir um PDF. E do ponto de vista do design é ótimo. Hey, você tem muito mais controle do layout! Você pode colocar imagens e textos como quiser sem se preocupar com nada. Exceto… Você já tentou ler um PDF em um smartphone? É simplesmente agonizante. É necessário dar zoom in e out a cada frase diferente. Ou tentar ler tudo em um tamanho de letra absurdamente pequeno…&lt;/p&gt;

&lt;p&gt;Isto acontece por que o PDF é baseado no suporte físico de uma folha, o que simplesmente não faz sentido no mundo digital. Vou explicar: um artista que pretende pintar uma nova obra de arte precisa saber o tamanho da tela. Da mesma maneira, ao editar um livro, ou qualquer outro tipo de documento para a impressão, é necessário saber o tamanho da folha para aí então fazermos toda a diagramação. O problema é que em um ambiente digital não existe uma folha. Existe um viewport (ou seja, área de visualização) que pode ser, bem, do tamanho que o usuário quiser! Se ele for ler o seu livro no browser pode aumentar e diminuir o tamanho da janela até a resolução máxima do monitor. Ou pode optar por ler em um tablet, smartphone, eReader… Enfim, a questão é que não temos como determinar a medida de altura e largura da mesma maneira que fazíamos com o papel. E o PDF, como foi pensado para ser impresso, precisa desta medida fixa.&lt;/p&gt;

&lt;h2 id=&#34;sobre-o-epub-3&#34;&gt;Sobre o ePub&lt;/h2&gt;

&lt;p&gt;ePub é abreviação de Eletronic Publication, ou seja, Publicação Eletrônica. É um formato de livro aberto e gratuito criado pelo &lt;a href=&#34;http://idpf.org/&#34; title=&#34;IDPF&#34;&gt;IDPF&lt;/a&gt;, um fórum internacional de publicação digital. Os livros deste formato são fluidos, o que permite que a experiência de leitura seja legal em qualquer tamanho da tela, sistema operacional ou dispositivo que você escolher. Desde que você tenha um app para isto, é claro. Mas isto não é muita preocupação. Existem leitores gratuitos para quase todos os aparelhos e sistemas operacionais (se você não conhece nenhum dê uma olhadinha no final do texto). Outro aspecto bacana do ePub é o controle que ele dá ao usuário. É possível realizar buscas, navegar através de links, aumentar e diminuir o tamanho da letra, trocar as fontes, a paleta de cores, etc. Sim, isto significa que se o cara quiser ler o livro inteiro em Comics Sans ele pode! Mas se isto deixar o usuário feliz quem somos nós para dizer não?&lt;/p&gt;

&lt;h2 id=&#34;como-editar-3&#34;&gt;Como editar&lt;/h2&gt;

&lt;p&gt;Bem, agora que você já sabe como ler e por que usar, vamos descobrir como é um livro digital por dentro! Criei um livro de exemplo para utilizar neste tutorial. &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/01/meulivro.epub_.zip&#34;&gt;Você pode baixa-lo aqui&lt;/a&gt;. Mas qualquer outro livro que você tiver neste formato vai servir para o nosso experimento.&lt;/p&gt;

&lt;p&gt;A extensão ePub é um formato de livros compactado. Faça um teste: renomeie o arquivo deste tutorial de meulivro.epub para meulivro.zip ou meulivro.rar que você poderá ver o conteúdo do pacote. No entanto, uma coisa importante de se ter em mente é que não são todos os softwares editores que estão preparados para salvar neste formato. Até dá para ler os arquivos XHTML separados, mas você teria que abrir manualmente, editar e recompactar a cada mudança de volta para ePub o que não seria nada prático. Felizmente existem alguns softwares como &lt;a href=&#34;http://code.google.com/p/sigil/&#34; title=&#34;Sigil&#34;&gt;Sigil&lt;/a&gt; que são específicos para a edição de código de ePubs. Eles não tem um visual muito bonito mas cumprem com a função direitinho. Bem, vamos explorar os arquivos…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obs.&lt;/strong&gt; Existem outras especificações opcionais, mas vou me manter dentro do fundamental.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obs.2&lt;/strong&gt; Os nomes dos arquivos são case sensitive.&lt;/p&gt;

&lt;h2 id=&#34;a-estrutura-3&#34;&gt;A Estrutura&lt;/h2&gt;

&lt;p&gt;Vamos voltar ao nosso ePub! Ao descompactar a pasta você vai ter o seguinte:&lt;/p&gt;

&lt;p&gt;arquivo mimetype&lt;/p&gt;

&lt;p&gt;pasta META-INF&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;container.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;pasta OEBPS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;content.opf&lt;/li&gt;
&lt;li&gt;toc.ncx&lt;/li&gt;
&lt;li&gt;style.css&lt;/li&gt;
&lt;li&gt;titulo.html&lt;/li&gt;
&lt;li&gt;capitulo1.html&lt;/li&gt;
&lt;li&gt;capitulo2.html&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;para-que-serve-tudo-isso-e-como-eu-crio-sozinho-3&#34;&gt;Para que serve tudo isso e como eu crio sozinho?&lt;/h2&gt;

&lt;h4 id=&#34;mimetype-3&#34;&gt;Mimetype&lt;/h4&gt;

&lt;p&gt;A função do mimetype é informar ao sistema operacional qual é o tipo do arquivo. O mimetype é um simples arquivo de texto ASCII.  Para criar um mimetype basta abrir qualquer editor (ou até mesmo o bloco de notas) e escrever esta linha de código:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;application/epub+zip&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Salve como mimetype (sem nenhuma extensão) e pronto. Está feito! O mimetype é igual para qualquer ePub. Então copiar de um outro ePub da certo também.&lt;/p&gt;

&lt;h4 id=&#34;container-xml-3&#34;&gt;Container.xml&lt;/h4&gt;

&lt;p&gt;Deve ficar dentro da pasta  META-INF. A função deste arquivo é agregar todos os outros. Bora criar um!&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;container xmlns=&amp;#8221;urn:oasis:names:tc:opendocument:xmlns:container&amp;#8221; version=&amp;#8221;1.0&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;rootfiles&gt;&lt;/p&gt;

&lt;p&gt;&lt;rootfile full-path=&amp;#8221;OEBPS/content.opf&amp;#8221; media-type=&amp;#8221;application/oebps-package+xml&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/rootfiles&gt;&lt;/p&gt;

&lt;p&gt;&lt;/container&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;content-opf-3&#34;&gt;Content.opf&lt;/h4&gt;

&lt;p&gt;Descreve o conteúdo de todos os arquivos. Apesar da extensão esquisita é só criar um xml e depois salvar como .opf É composto das seguintes partes: metadata, manifest e spine. O esqueleto dele é assim:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;package xmlns=&amp;#8221;http://www.idpf.org/2007/opf&amp;#8221; unique-identifier=&amp;#8221;EPB-UUID&amp;#8221; version=&amp;#8221;2.0&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; insira os parâmetros aqui &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;/package&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;metadata-3&#34;&gt;Metadata&lt;/h4&gt;

&lt;p&gt;Não tem muito segredo aqui. São as informações do seu livro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Itens obrigatórios:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;title&lt;/strong&gt; &amp;#8211; O título do seu livro.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;language&lt;/strong&gt; &amp;#8211; A Lingua utilizada. Como o livro está em português eu escolhi pt-br.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;identifier&lt;/strong&gt; &amp;#8211; Um código único para o seu livro. Pode ser o ISBN, por exemplo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Itens opcionais:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;creator&lt;/strong&gt; &amp;#8211; O criador. No caso, você.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;contributor&lt;/strong&gt; &amp;#8211; Contribuidor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;publisher&lt;/strong&gt; &amp;#8211; Editora&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;subject&lt;/strong&gt; &amp;#8211; Assunto&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;description&lt;/strong&gt; &amp;#8211; Descrição do livro&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;date&lt;/strong&gt; &amp;#8211; Data&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt; &amp;#8211; Tipo&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;format&lt;/strong&gt; &amp;#8211; Formato&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;source&lt;/strong&gt; &amp;#8211; Fonte&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;relation&lt;/strong&gt; &amp;#8211; Relação&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;coverage&lt;/strong&gt; &amp;#8211; Cobertura&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rights&lt;/strong&gt; &amp;#8211; O tipo de licença. Creative Commons, por exemplo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bem, vamos preencher nossas metadatas. Eu inseri o seguinte entre as tags package:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;metadata xmlns:opf=&amp;#8221;&lt;a href=&#34;http://www.idpf.org/2007/opf&amp;amp;#8221&#34;&gt;http://www.idpf.org/2007/opf&amp;amp;#8221&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;xmlns:dc=&amp;#8221;&lt;a href=&#34;http://purl.org/dc/elements/1.1/&amp;amp;#8221;&amp;gt;&#34;&gt;http://purl.org/dc/elements/1.1/&amp;amp;#8221;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:title&#34;&gt;dc:title&lt;/a&gt;Saga do primeiro ePub&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:title&#34;&gt;/dc:title&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:creator opf:role=&amp;#8221;aut&amp;#8221; opf:file-as=&amp;#8221;Dani&amp;#8221;&gt;Dani&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:creator&#34;&gt;/dc:creator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:date opf:event=&amp;#8221;original-publication&amp;#8221;&gt;2012&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:date&#34;&gt;/dc:date&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:publisher&#34;&gt;dc:publisher&lt;/a&gt;Tableless&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:publisher&#34;&gt;/dc:publisher&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:date opf:event=&amp;#8221;epub-publication&amp;#8221;&gt;2012-01-30&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:date&#34;&gt;/dc:date&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:subject&#34;&gt;dc:subject&lt;/a&gt;Primeiro ePub&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:subject&#34;&gt;/dc:subject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:subject&#34;&gt;dc:subject&lt;/a&gt;Estudos&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:subject&#34;&gt;/dc:subject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:source&#34;&gt;dc:source&lt;/a&gt;Tableless&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:source&#34;&gt;/dc:source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:rights&#34;&gt;dc:rights&lt;/a&gt;Pode copiar galera!&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:rights&#34;&gt;/dc:rights&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;dc:identifier id=&amp;#8221;EPB-UUID&amp;#8221;&gt;minhaid&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:identifier&#34;&gt;/dc:identifier&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;dc:language&#34;&gt;dc:language&lt;/a&gt;pt-br&lt;a href=&#34;https://tableless.github.io/hugo-public/dc:language&#34;&gt;/dc:language&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/metadata&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;manifest-3&#34;&gt;Manifest&lt;/h4&gt;

&lt;p&gt;É um manifesto mesmo. Deve conter (em qualquer ordem) a lista de todos os arquivos da sua publicação. Exceto mimetype, container.xml e content.opf É necessário especificar uma ID única para cada arquivo. Você pode nserir estas informações antes ou depois da metadata. O importante é que esteja também dentro da tag package. No caso do nosso livro-tutorial ficou assim:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;manifest&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; Documentos &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;titulo&amp;#8221; href=&amp;#8221;titulo.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;capitulo1&amp;#8243; href=&amp;#8221;capitulo1.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;capitulo2&amp;#8243; href=&amp;#8221;capitulo2.html&amp;#8221; media-type=&amp;#8221;application/xhtml+xml&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; CSS Style Sheets &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;main-css&amp;#8221; href=&amp;#8221;style.css&amp;#8221; media-type=&amp;#8221;text/css&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!&amp;#8211; NCX &amp;#8211;&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;item id=&amp;#8221;ncx&amp;#8221; href=&amp;#8221;toc.ncx&amp;#8221; media-type=&amp;#8221;application/x-dtbncx+xml&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/manifest&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;spine-3&#34;&gt;Spine&lt;/h4&gt;

&lt;p&gt;A espinha do livro, ou seja, a ordem de leitura. Aqui você deve colocar apenas os arquivos tipo HTML na ordem que você deseja que apareça no livro, chamando cada um pelo ID que você definiu no manifesto. Tome cuidado para não duplicar nenhum arquivo ou ID. Como você já adivinhou, deve ser inserido entre as tags package também.&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;spine toc=&amp;#8221;ncx&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;titulo&amp;#8221; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;capitulo1&amp;#8243; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;itemref idref=&amp;#8221;capitulo2&amp;#8243; linear=&amp;#8221;yes&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/spine&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;toc-ncx-3&#34;&gt;toc.ncx&lt;/h4&gt;

&lt;p&gt;TOC é uma sigla para Table of Contents, ou seja, o indice do livro. Também é um arquivo xml salvo com a terminação .ncx Possui a seguinte estrutura:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#head&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;uid — o identificador único em content.opf&lt;/li&gt;
&lt;li&gt;depth — níveis do sumário &amp;gt;= 1&lt;/li&gt;
&lt;li&gt;totalPageCount — to 0&lt;/li&gt;
&lt;li&gt;maxPageNumber — to 0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;#navMap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O sumário em si&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#navPoint&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;id — único do arquivo&lt;/li&gt;
&lt;li&gt;playOrder —ordem de navegação (iniciando em 1)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O nosso índice ficou assim então:&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&amp;#8221;1.0&amp;#8243; encoding=&amp;#8221;UTF-8&amp;#8243;?&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!DOCTYPE ncx&lt;/p&gt;

&lt;p&gt;PUBLIC &amp;#8220;-//NISO//DTD ncx 2005-1//EN&amp;#8221; &amp;#8220;&lt;a href=&#34;http://www.daisy.org/z3986/2005/ncx-2005-1.dtd&amp;amp;#8221;&amp;gt;&#34;&gt;http://www.daisy.org/z3986/2005/ncx-2005-1.dtd&amp;amp;#8221;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;ncx xmlns=&amp;#8221;http://www.daisy.org/z3986/2005/ncx/&amp;#8221; version=&amp;#8221;2005-1&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;head&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:uid&amp;#8221; content=&amp;#8221;idtest&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:depth&amp;#8221; content=&amp;#8221;3&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:totalPageCount&amp;#8221; content=&amp;#8221;0&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&amp;#8221;dtb:maxPageNumber&amp;#8221; content=&amp;#8221;0&amp;#8243;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/head&gt;&lt;/p&gt;

&lt;p&gt;&lt;docTitle&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Saga do primeiro ePub&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/docTitle&gt;&lt;/p&gt;

&lt;p&gt;&lt;docAuthor&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Dani&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/docAuthor&gt;&lt;/p&gt;

&lt;p&gt;&lt;navMap&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;titulo&amp;#8221; playOrder=&amp;#8221;1&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Titulo&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;titulo.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;capitulo1&amp;#8243; playOrder=&amp;#8221;2&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Capitulo 1&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;capitulo1.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;navPoint id=&amp;#8221;capitulo2&amp;#8243; playOrder=&amp;#8221;2&amp;#8243;&gt;&lt;/p&gt;

&lt;p&gt;&lt;navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;text&gt;Capitulo 2&lt;/text&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navLabel&gt;&lt;/p&gt;

&lt;p&gt;&lt;content src=&amp;#8221;capitulo2.html&amp;#8221;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navPoint&gt;&lt;/p&gt;

&lt;p&gt;&lt;/navMap&gt;&lt;/p&gt;

&lt;p&gt;&lt;/ncx&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h4 id=&#34;os-capítulos-3&#34;&gt;Os capítulos&lt;/h4&gt;

&lt;p&gt;É aqui que entra o livro em si. Cada capitulo deve ficar em um HTML separado. Estes arquivos não são nada diferentes de HTMLs comuns:&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;[cc escaped=&amp;#8221;true&amp;#8221;  lang=&amp;#8221;xml&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;html xmlns=&amp;#8221;http://www.w3.org/1999/xhtml&amp;#8221; xml:lang=&amp;#8221;pt&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;&lt;head&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta http-equiv=&amp;#8221;Content-Type&amp;#8221; content=&amp;#8221;application/xhtml+xml; charset=utf-8&amp;#8243; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;title&gt;Capítulo 1&lt;/title&gt;&lt;/p&gt;

&lt;p&gt;&lt;link href=&amp;#8221;style.css&amp;#8221; rel=&amp;#8221;stylesheet&amp;#8221; type=&amp;#8221;text/css&amp;#8221; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/head&gt;&lt;/p&gt;

&lt;p&gt;&lt;body&gt;&lt;/p&gt;

&lt;div&gt;
  
&lt;h3&gt;Capítulo 1&lt;/h3&gt;

&lt;p&gt;Hello World! Este é o primeiro capítulo do nosso livro. Yey!&lt;/p&gt;
  
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/p&gt;
  
&lt;/div&gt;
  

&lt;p&gt;&lt;/body&gt;&lt;/p&gt;

&lt;p&gt;&lt;/html&gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;h4 id=&#34;outros-tipos-de-arquivos-3&#34;&gt;Outros tipos de arquivos:&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; &amp;#8211; Uma folha de estilos normal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pasta images&lt;/strong&gt; &amp;#8211; Aqui devem ficar as imagens do livro. Formatos permitidos: jpeg, png, gif e svg+xml&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pasta fonts&lt;/strong&gt; &amp;#8211; Utilize esta pasta se você quiser embedar algum arquivo de fonte no seu documento. Lembre-se de utilizar sempre o formato Open Type pois alguns aplicativos de leitura não suportam True Type.&lt;/p&gt;

&lt;h4 id=&#34;e-agora-basta-compactar-3&#34;&gt;E agora basta compactar!&lt;/h4&gt;

&lt;p&gt;Selecione todos os arquivos e crie um arquivo compactado (pode ser .zip ou .rar). Depois é só renomear para .epub e ler no seu dispositivo favorito. Pronto! Você tem um livro digital! 🙂&lt;/p&gt;

&lt;h2 id=&#34;dicas-importantes-para-editar-um-epub-3&#34;&gt;Dicas importantes para editar um ePub&lt;/h2&gt;

&lt;h4 id=&#34;semântica-é-sua-amiga-3&#34;&gt;Semântica é sua amiga&lt;/h4&gt;

&lt;p&gt;Bem, se você é leitor do Tableless provavelmente não preciso dizer isso, mas vou dizer mesmo assim! É muito importante utilizar uma estrutura semântica aqui. Tags h1 a h6 para títulos, p para parágrafos… O que você já está mais do que cansado de saber a esta altura. Evite usar br para quebrar a linhas por que sem ter o tamanho de um container é difícil determinar quando de fato vai ser necessário quebrar a linha.&lt;/p&gt;

&lt;h4 id=&#34;evite-seletores-complexos-3&#34;&gt;Evite seletores complexos&lt;/h4&gt;

&lt;p&gt;Leitores digitais não são tão sofisticados quanto browsers. Mantenha o seu CSS o mais simples possível.&lt;/p&gt;

&lt;h4 id=&#34;use-tamanhos-relativos-3&#34;&gt;Use tamanhos relativos&lt;/h4&gt;

&lt;p&gt;Como as &amp;#8220;páginas&amp;#8221; do seu livro vão aumentar e diminuir de acordo com o tamanho da tela do dispositivo não utilize pixels como medida para nada. Lembre-se: EM para texto e margens, porcentagens para figura. Isto vai garantir que o seu livro continue proporcional e escalável. E o seu leitor feliz!&lt;/p&gt;

&lt;h4 id=&#34;tamanho-é-documento-3&#34;&gt;Tamanho é Documento&lt;/h4&gt;

&lt;p&gt;Não use apenas um documento XHTML para o livro todo. A recomendação é que os capítulos tenham menos de 300k cada. Mais do que isto pode deixar alguns leitores, como o iBooks por exemplo, muito lentos! A razão é que estes apps consideram cada capítulo como um bloco de texto diferente. Se você colocar tudo em um documento só o aplicativo vai carregar tudo de uma vez a cada acesso.&lt;/p&gt;

&lt;p&gt;Outra dica é tentar usar sempre imagens otimizadas para a web e com uma resolução não maior do que 1200 x 1600px.&lt;/p&gt;

&lt;h4 id=&#34;não-pire-muito-na-escolha-de-fontes-3&#34;&gt;Não pire muito na escolha de fontes&lt;/h4&gt;

&lt;p&gt;Evite usar fontes fora do padrão websafe. Você pode embedar fontes Open Type utilizando a propriedade @font-face mas isto não significa que voce deve. Para começar não são todos os leitores que aceitam isto e no final o seu arquivo pode ficar pesado demais e travar. E muitas vezes pode ser um trabalho extra inútil já que o seu usuário pode muito facilmente trocar de fonte. Se mesmo assim você quiser usar não escolha mais do que dois ou três tipos.&lt;/p&gt;

&lt;h2 id=&#34;edição-visual-3&#34;&gt;Edição visual&lt;/h2&gt;

&lt;p&gt;Sim. Existem alguns softwares que podem gerar o livro para você. O Adobe InDesign faz isto, o Pages do Mac… Mas falando sério: não vale a pena. O código vai ficar sujo e no final você vai ter que corrigir vários bugs. É como se você estivesse utilizando um editor &amp;#8220;What you see is what you get&amp;#8221; para fazer um site. Acho que vocês entendem o drama. Mas… se você for realmente caminhar por esta estrada escura tenha algumas coisas em mente:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Se você está acostumado com editoração nestes programas é preciso mudar alguns paradigmas. Esqueça páginas mestras, hifenização, numeração, pé de página… você não precisa se preocupar mais com estas coisas em um formato digital.&lt;/li&gt;
&lt;li&gt;Crie estilos específicos para o que é título, parágrafo, etc e não esqueça de importa-los na hora de salvar o arquivo.&lt;/li&gt;
&lt;li&gt;Cuidado ao gerar o TOC (table of contents, ou seja, o índice). Se você colocar mais de dois subniveis pode dar problemas de compatibilidade com alguns programas e o seu livro simplesmente não abrir.&lt;/li&gt;
&lt;li&gt;Lembre-se que todas as imagens precisam estar ancoradas para que fluam juntamente com o texto.&lt;/li&gt;
&lt;li&gt;Determine quebras de capítulos. No caso do InDesign, salve cada parte do livro em um arquivo diferente. Depois junte todos os arquivos em um formato &amp;#8220;book&amp;#8221;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;e-quanto-ao-formato-ibook-da-apple-3&#34;&gt;E quanto ao formato iBook da Apple?&lt;/h2&gt;

&lt;p&gt;A Apple lançou recentemente um software gratuito chamado iBooks Autor para a criação visual de livros digitais. Os livros no formato iBook são bem interativos, permitindo a implementação de elementos multimidia como videos (coisa que ainda está engatinhando no formato ePub). Com um &amp;#8220;pequeno&amp;#8221; porém. Sem muito alarde nos termos de serviço a Apple colocou uma clausula de exclusividade para livros comerciais. Ou seja, se você utilizar o software e vender o seu livro através da iBook Store não poderá vender em mais nenhum lugar. Sem contar que o programa é exclusivo para Mac.&lt;/p&gt;

&lt;h2 id=&#34;fique-longe-dos-conversores-automáticos-3&#34;&gt;Fique longe dos conversores automáticos!&lt;/h2&gt;

&lt;p&gt;Existem alguns softwares ainda que prometem converter de PDF para ePub. Fique longe deles! Sério. Eles são ainda piores que os editores visuais. Um software não consegue interpretar um livro da mesma maneira que um ser humano a menos que você diga a ele o que fazer. Se você não determinar &amp;#8220;ei, isto é um título&amp;#8221; ele não tem como fazer este tipo de decisão por você.&lt;/p&gt;

&lt;p&gt;Os PDFs estão presos a um tamanho fixo, lembra? O que significa que as palavras precisam ser hifenizadas. Se você converter automaticamente (além do seu código ser a coisa menos semântica desde os sites feitos em tabelas) os hífens vão continuar lá, criando divisões no me-io das pala-vras on-de não pre-cisava! Pense nos números das páginas… se o texto flui isso significa que um mesmo livro pode (e vai) ter uma numeração diferente de acordo com o aparelho utilizado. Mas no caso da conversão automática os números no pdf vão continuar lá. Os títulos provavelmente vão estar errados também. Fora que muitos deixam marcas como &amp;#8220;convertido pelo programa XYZ&amp;#8221; em todas as páginas do livro.&lt;/p&gt;

&lt;h2 id=&#34;links-úteis-3&#34;&gt;Links úteis&lt;/h2&gt;

&lt;p&gt;*]&lt;a href=&#34;http://idpf.org/epub&#34; title=&#34;IDPF&#34;&gt;4&lt;/a&gt; &amp;#8211; A organização responsável pela criação do ePub. O site deles é meio confuso, mas contém bastante informação a respeito do formato.
  * &lt;a href=&#34;http://code.google.com/p/epubcheck/&#34; title=&#34;ePub Check&#34;&gt;ePub Chech&lt;/a&gt; &amp;#8211; Validação de ePub
  * &lt;a href=&#34;http://www.hxa.name/articles/content/epub-guide_hxa7241_2007.html&#34; title=&#34;Epub Format Construction Guide&#34;&gt;Epub Format Construction Guide&lt;/a&gt; &amp;#8211; Um meta-livro bem completo sobre o assunto.&lt;/p&gt;

&lt;h2 id=&#34;bibliotecas-gratuitas-1&#34;&gt;Bibliotecas gratuitas&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://books.google.com.br/&#34; title=&#34;Google Books&#34;&gt;Google Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.epubbud.com/&#34; title=&#34;ePub Bud&#34;&gt;ePub Bud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;aplicativos-para-a-leitura-1&#34;&gt;Aplicativos para a Leitura&lt;/h2&gt;

&lt;h4 id=&#34;mac-pc-1&#34;&gt;Mac &amp;amp; PC&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.adobe.com/products/digitaleditions/&#34; title=&#34;Adobe Digital Editions &#34;&gt;Adobe Digital Editions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.barnesandnoble.com/u/free-nook-apps/379002321/&#34; title=&#34;Nook&#34;&gt;Nook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;linux-1&#34;&gt;Linux&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.fbreader.org/&#34; title=&#34;FB Reader&#34;&gt;FB Reader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;ios-1&#34;&gt;iOS&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.apple.com/br/ipad/built-in-apps/ibooks.html&#34; title=&#34;iBooks&#34;&gt;iBooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://itunes.apple.com/br/app/stanza/id284956128?mt=8&#34; title=&#34;Stanza&#34;&gt;Stanza&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;android-1&#34;&gt;Android&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aldiko.com/&#34; title=&#34;Aldiko&#34;&gt;Aldiko&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;leitura-no-browser-1&#34;&gt;Leitura no Browser&lt;/h4&gt;

&lt;p&gt;*]&lt;a href=&#34;https://chrome.google.com/webstore/detail/ghgnmgfdoiplfmhgghbmlphanpfmjble&#34; title=&#34;Magic Scroll &#34;&gt;15&lt;/a&gt; &amp;#8211; Google Chrome
  * &lt;a href=&#34;http://www.epubread.com/&#34; title=&#34;ePub Read&#34;&gt;ePub Read&lt;/a&gt; &amp;#8211; Firefox&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introdução aos padrões de codificação</title>
      <link>https://tableless.github.io/hugo-public/introducao-a-padroes-de-codificacao/</link>
      <pubDate>Mon, 23 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/introducao-a-padroes-de-codificacao/</guid>
      <description>&lt;nav&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#identação&#34;&gt;Identação&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#espaços-em-brancos-whitespaces&#34;&gt;Espaços em brancos (Whitespaces)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nomenclatura&#34;&gt;Nomenclatura&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#comentários&#34;&gt;Comentários&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#arquivos&#34;&gt;Arquivos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#chaves-e-ponto-vírgula&#34;&gt;Chaves e ponto/vírgula&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;p&gt;Como os idiomas reais, cada linguagem de programação tem suas respectivas regras, individualidades, pontuações, pausas e pontos em comum com outras linguagens. Você precisa conhecer essas peculiaridades para falar fluentemente ou no mínimo ser entendido. Nas linguagens de para web ou qualquer outra linguagem de programação, precisamos seguir algumas regras básicas para que o código não vire uma língua estrangeira no meio do projeto.&lt;/p&gt;

&lt;p&gt;Definir padrões é normal para que a equipe inteira escreva o código da mesma maneira. Esse assunto é longo e muito importante para todas as equipes de desenvolvimento. Programadores já quiseram me matar várias vezes porque eu uso TABS em vez de ESPAÇOS em arquivos Python/PHP. Programadores gostam de espaços. Eu não. Mas não é o nosso gosto que vai definir quais os padrões de código que devemos seguir.&lt;/p&gt;

&lt;p&gt;Quando definimos padrões e boas práticas, garantimos que todos da equipe conseguirão ter o mínimo de entendimento do código daquele projeto que está na empresa a tempos. Se alguém da equipe adoecer ou precisar ir para o Canadá, outro integrante pode assumir o seu lugar sem precisar se preocupar em aprender novas regras, porque elas devem ser as mesmas do projeto anterior.&lt;/p&gt;

&lt;p&gt;É importante que os integrantes da equipe sejam sempre fiéis aos acordos firmados no momento em que combinam esses padrões. É importante também que, caso eles encontrem um integrante fora da lei, que eles forcem o meliante a seguir as regras. Já vi gente perdendo o trabalho de uma semana por que estava trabalhando diretamente pelo FTP e o projeto não estava no GIT. O programador simplesmente APAGOU o projeto da pessoa. Nunca mais ela resolveu editar os arquivos fora do controle de versão. Esse tipo de atitude é perigosa mas muito necessárias às vezes. Devemos forçar as regras num ambiente onde todos devem quem, quando e como as linhas de código do projeto foram escritas.&lt;/p&gt;

&lt;p&gt;Alguns pontos para se pensar e combinar:&lt;/p&gt;

&lt;h6 id=&#34;identação&#34;&gt;Identação&lt;/h6&gt;

&lt;p&gt;Como devemos identar o código? Com espaços ou tabs? Se for com espaços quantos?&lt;/p&gt;

&lt;h6 id=&#34;espaços-em-brancos-whitespaces&#34;&gt;Espaços em brancos (Whitespaces)&lt;/h6&gt;

&lt;p&gt;Espaços devem ser incluídos depois de uma operação condicional? Espaços devem ser colocados entre o seletor e as chaves? E no final de cada linha, precisa?&lt;/p&gt;

&lt;h6 id=&#34;nomenclatura&#34;&gt;Nomenclatura&lt;/h6&gt;

&lt;p&gt;Como as classes, ids e variáveis devem ser nomeadas? E as funções? Vamos usar &lt;a href=&#34;http://en.wikipedia.org/wiki/CamelCase&#34;&gt;CamelCase&lt;/a&gt;?&lt;/p&gt;

&lt;h6 id=&#34;comentários&#34;&gt;Comentários&lt;/h6&gt;

&lt;p&gt;Como faremos com os comentários? Como serão os delimitadores do comentário? O comentário deve ser completo ou precisa ser algo mais resumido?&lt;/p&gt;

&lt;h6 id=&#34;arquivos&#34;&gt;Arquivos&lt;/h6&gt;

&lt;p&gt;Como os arquivos, que não fazem parte da estrutura padrão do CMS, Framework e etc deverão ser chamados? E o nome das pastas? Como as páginas serão chamadas?&lt;/p&gt;

&lt;h6 id=&#34;chaves-e-ponto-vírgula&#34;&gt;Chaves e ponto/vírgula&lt;/h6&gt;

&lt;p&gt;As chaves deverão ser abertas na mesma linha ou devemos quebrar linhas? Vamos sempre usar ponto/vírgula? Vamos usar o padrão &lt;a href=&#34;http://en.wikipedia.org/wiki/Indent_style#K.26R_style&#34;&gt;K&amp;amp;R ou Allman&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Quando definimos estas pequenas coisas, diminuímos muitos percalços no meio do caminho. Já vi projetos atrasarem meses por que um palerma abriu e salvou arquivos com o charset diferente do que já tinha sido combinado no início.&lt;/p&gt;

&lt;p&gt;&amp;#8220;It&amp;#8217;s more important for people on a team to agree to a single coding style than it is to find the perfect style.&amp;#8221; &lt;a href=&#34;http://www.amazon.com/gp/product/0596102356/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=tableless-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0596102356&#34;&gt;Building Scalable Web Sites: Building, Scaling, and Optimizing the Next Generation of Web Applications&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Indico este livro sobre esse e outros assuntos sobre a construção, desenvolvimento e manutenção de websites&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introdução das premissas dos controles de versão</title>
      <link>https://tableless.github.io/hugo-public/introducao-das-premissas-dos-controles-de-versao/</link>
      <pubDate>Mon, 16 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/introducao-das-premissas-dos-controles-de-versao/</guid>
      <description>

&lt;p&gt;Parece ser óbvio, mas muitos desenvolvedores desdenham de ter controle total sobre o código gerado no desenvolvimento. Muitos, por trabalharem sozinhos, entendem que não precisam manter um certo nível de organização do seu código exatamente por que talvez, somente eles, o verão.&lt;/p&gt;

&lt;p&gt;Quem nunca ficou horas tentando debugar um código que você mesmo fez, mas não lembrava o que uma determinada função fazia&amp;#8230; Esse código pode ter sido por você de madrugada, quando você estava pingando de sono, ou pior, bêbado&amp;#8230; Vai saber&amp;#8230;&lt;/p&gt;

&lt;p&gt;Controlar seu código fonte deve ser uma premissa. Um princípio. Se você acha que o undo do seu editor predileto salva sua vida, imagina ter um undo do seu projeto inteiro. Imagine você ter a história de edição de cada um dos arquivos do seu projeto.&lt;/p&gt;

&lt;p&gt;Os princípios abaixo servem para qualquer tipo de controle de versão que conhecemos hoje: GIT, SVN, Mercurial etc.&lt;/p&gt;

&lt;h4 id=&#34;branchs-e-trunks&#34;&gt;Branchs e trunks&lt;/h4&gt;

&lt;p&gt;A última revisão, a mais atual, normalmente é chamada de &lt;em&gt;HEAD&lt;/em&gt;. Existem momentos onde teremos vários HEADs pois o projeto tem vários BRANCHES. Um branch é uma cópia do projeto. Cada branch pode ser editado e evoluído independentemente.&lt;/p&gt;

&lt;p&gt;Imagine que exista a &lt;strong&gt;versão de produção&lt;/strong&gt; que é aquela que está no ar. É a versão que o usuário está utilizando. É importante que nós não modifiquemos esta versão porque alguém pode commitar algo errado, quebrar tudo e o usuario reclamar. Por isso nós precisamos de outro ambiente para evoluir as features, resolver bugs e etc, sem afetar o branch principal. Essa forma é usado em projetos pequenos, mas algo parecido é feito em projetos grandes, onde aumentamos o número de servidores para termos mais segurança ao fazer os deploys.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/01/branch.jpg&#34; alt=&#34;&#34; title=&#34;branch&#34; width=&#34;770&#34; height=&#34;188&#34; class=&#34;alignnone size-full wp-image-5212&#34; srcset=&#34;uploads/2012/01/branch.jpg 770w, uploads/2012/01/branch-300x73.jpg 300w&#34; sizes=&#34;(max-width: 770px) 100vw, 770px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;É muito útil criarmos novos &lt;strong&gt;trunks&lt;/strong&gt; (tronco) quando precisamos fazer modificações drásticas de novas features, resolver bugs ou modificar layout.&lt;/p&gt;

&lt;p&gt;Exemplo: imagine que você esteja trabalhando em uma nova feature, em um branch específico. O cliente liga e diz que encontrou um bug, originado de uma modificação feita na semana passada. Você sai do branch da nova feature, entra no branch que tem o código que está em produção (que é o que o cliente está vendo) e cria um novo branch. Você resolve o bug neste novo branch. Feito isso, você pode mover as modificações deste branch para o branch de produção e aí entra o processo de deploy que pode mudar de empresa para empresa. Quando tudo estiver ok, você volta para o branch onde estava desenvolvendo a nova feature e pronto. Sem misturar códigos, sem subir nada para o FTP, tudo lindo e maravilhoso. A equipe tem o código atualizado à mão e todo mundo fica feliz.&lt;/p&gt;

&lt;h4 id=&#34;versionamento&#34;&gt;Versionamento&lt;/h4&gt;

&lt;p&gt;Versionamento é uma das características mais básicas do controle de código. Quando comecei a desenvolver, normalmente eu trabalhava guardando pastas com nomes do tipo &lt;strong&gt;nomeDoProjeto-v1&lt;/strong&gt;, &lt;strong&gt;nomeDoProjeto-v2&lt;/strong&gt; etc&amp;#8230; Estas pastas guardavam apenas as versões com grandes modificações de projeto&amp;#8230; algo como mudança geral de layout, uma feature importante ou algo do tipo. O problema são as pequenas edições&amp;#8230; Quando juntamos as pequenas modificações, temos uma grande modificação. É muito provável que se você perder essa versão, você não se lembre de todas as pequenas modificações feitas e isso é um problemão.&lt;/p&gt;

&lt;p&gt;Toda vez que o desenvolvedor termina uma determinada tarefa, em geral um commit que por sua vez gera um ponto de referência, uma versão, daqueles arquivos modificados. Cada commit gera uma versão do seu código. A graça é que se você tem versões do código, você tem praticamente um &lt;strong&gt;undo&lt;/strong&gt; gigante do seu projeto&amp;#8230; Se depois de uma determinada modificação seu projeto começou a dar pau, você consegue entender com a história do seu versionamento &amp;#8211; o famoso log &amp;#8211; a partir de onde exatamente o problema foi iniciado.&lt;/p&gt;

&lt;h4 id=&#34;logs&#34;&gt;Logs&lt;/h4&gt;

&lt;p&gt;Quando cada revisão é comitada, o desenvolvedor pode ou não adicionar uma mensagem explicando o que ele fez naquela tarefa. É importante que essa mensagem seja clara e rica em detalhes, mas não um texto gigante, apenas o suficiente para que você mesmo ou outras pessoas envolvidas entenda o que aquela submissão significa.&lt;/p&gt;

&lt;h4 id=&#34;diffs&#34;&gt;Diffs&lt;/h4&gt;

&lt;p&gt;Diffs são sensacionais. Imagine que você queira comparar duas versões de um mesmo arquivo para descobrir as linhas modificadas. Fazer um diff entre as versões do arquivo te possibilita encontrar exatamente onde está o erro e o melhor, quando juntamos com o Log, podemos saber exatamente o por que a pessoa incluiu aquela linha ou aquele código, e o melhor, quem fez aquela alteração.&lt;/p&gt;

&lt;h4 id=&#34;rollback&#34;&gt;Rollback&lt;/h4&gt;

&lt;p&gt;Mantendo uma história de commits, você tem &lt;strong&gt;pontos de volta&lt;/strong&gt; na história do arquivo, possibilitando a facilidade de voltarmos para antes de alguma modificação. Você pode voltar a partir de um commit, por exemplo. Se o sistema ou o arquivo passou a dar problema depois de uma determinada revisão, é simples de você voltar o arquivo para a versão daquele determinado commit.&lt;/p&gt;

&lt;h4 id=&#34;edição-multiusuário-e-merge&#34;&gt;Edição multiusuário e merge&lt;/h4&gt;

&lt;p&gt;Isso é uma maravilha. Me lembro de equipes inteiras perdendo arquivos e partes de código pois dois membros abriam o mesmo arquivo para editar. Obviamente nunca, mas nunca dava certo. Isso fazia com que grandes equipes criassem mecanismos da idade das pedras para avisar o resto do pessoal que determinado arquivo estava sendo usado. O trabalho remoto nunca era possível. Com um controle de versão isso muda. Qualquer um pode editar qualquer arquivo a qualquer hora.&lt;/p&gt;

&lt;p&gt;O sistema de controle de versão compara as modificações feitas no arquivo pelos desenvolvedores e junta os códigos automaticamente. Muito bonito, hein?&lt;/p&gt;

&lt;p&gt;E quando os desenvolvedores modificam a mesma linha de código? Aí o controle de versão gera um conflito, esse conflito deve ser resolvido pelo desenvolvedor que enviou as modificações por último. Funciona assim:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Dois desenvolvedores abrem o mesmo arquivo para editar.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Quando os desenvolvedores terminam, eles geram um commit. Se os desenvolvedores fizeram edições em partes diferentes do arquivo, por exemplo, um no começo do arquivo e o outro no final, o sistema junta os códigos fazendo um merge e criando um arquivo atualizado com as duas revisões. Indolor.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Se sistema percebe que os desenvolvedores fizeram as modificações na mesma linha, o sistema gera um conflito, por que o sistema não sabe qual dos dois códigos é o correto.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;O conflito é resolvido pelo desenvolvedor que comitar o código por último. Eu commitei minha versão de código e subi essa atualização para o servidor. Quando você commitar seu código, você é obrigado a baixar o que está no servidor aí o controle de versão avisará que há um conflito em uma parte do seu código. O conflito é resolvido mostrando algo mais ou menos assim:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p {
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD:style.css
   color: red;
=======
   color: blue;
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 77976da35a11db4580b80ae27e8d65caf5208086:estilo.css
}
&lt;/pre&gt;

&lt;p&gt;A primeira linha mostra a sua linha. A segunda linha mostra a modificação do outro dev. Aquele hash maluco no final é a identificação do commit do outro dev.&lt;/p&gt;

&lt;p&gt;Bom, nesses casos você precisa ver qual código é o correto, e algumas vezes isso significa perguntar para o outro brother que diachos é aquela coisa que ele fez.&lt;/p&gt;

&lt;h3 id=&#34;concluindo&#34;&gt;Concluindo&lt;/h3&gt;

&lt;p&gt;Estas são algumas premissas sobre os controles de versão utilizados hoje em dia. Os controles de versão mais usados hoje são o GIT, SVN e Mercurial. Cada um deles tem comandos diferentes para lidar com as premissas acima e cada um deles faz o controle de sua forma particular. Mesmo assim todos trazem as vantagens que citamos no artigo. Mesmo que você trabalhe sozinho, é recomendado que você trabalhe com controle de versão. Assim você guarda seu projeto de forma segura e tem um histórico das suas modificações durante o tempo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WebIntents – Framework para WebApps</title>
      <link>https://tableless.github.io/hugo-public/webintents-framework-para-webapps/</link>
      <pubDate>Fri, 06 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/webintents-framework-para-webapps/</guid>
      <description>&lt;p&gt;O Chrome e o Firefox estão trabalhando juntos em um framework open-source que fazem aplicações web trabalhem juntas sem que uma precise dar informações sobre seus respectivos sistemas. O nome deste framework é &lt;a href=&#34;http://www.webintents.com/?utm_source=TablelessComBr&amp;amp;utm_medium=postLink&amp;amp;utm_campaign=link&#34;&gt;WebIntents&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O problema a ser resolvido é que se quisermos criar um sistema que utilize algumas facilidades de outros sistemas, nós precisamos aprender a API deste determinado sistema. Acontece que as APIs não são iguais. Se você quer utilizar um sistema de localização como Foursquare ou Gowalla, você precisa aprender como a API de cada um funciona e então escolher entre um dos dois ou utilizar os dois no seu sistema. Nesse caso, você tem o dobro do trabalho para manter seu sistema. Os dois podem modificar partes da sua API e você tem que ficar atento para que seu sistema não quebre. O WebIntents faz com que você consiga usar um comando para os dois serviços.&lt;/p&gt;

&lt;p&gt;Web Intents, based on an existing capability in Google&amp;#8217;s Android mobile OS, will let Web apps express a simple call for an action, like &amp;#8216;share&amp;#8217; or &amp;#8216;edit,&amp;#8217; which receiving apps will be designed to use, without either app needing to have specific knowledge of the APIs of the other. This way, instead of having to code for each specific Web app one might want to access, developers can just use these simple requests, which will be built into the browser. The Chrome and Firefox teams are each building this functionality for their own browser, but they&amp;#8217;re combining their proposals to use a single API for Web app developers to reach both platforms.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://paul.kinlan.me/&#34;&gt;Paul Kinlan&lt;/a&gt;, o dono da ideia e desenvolvedor do Google, explica no em um &lt;a href=&#34;http://paul.kinlan.me/web-intents-a-fresh-look&#34;&gt;post no seu blog&lt;/a&gt; o que é o WebIntents:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;If I built an image gallery application and I wanted to let users edit an image so that they can remove red-eye from a photo I either have to build an application that edits the images, or integrate with a 3rd party solution. Doing this is hard and stops you from building an awesome image gallery; and what happens if the user has a favorite service that they already use to remove red-eye? Simple, you have a frustrated user.&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Não é de hoje que iniciativas de desenvolvedores e grandes empresas tomam forma para que o desenovlvimento web fique cada vez mais fácil e menos trabalhoso. Isso aconteceu com muitos grupos de desenvolvedores, como o pessoal da &lt;a href=&#34;http://webstandards.org/?utm_source=TablelessComBr&amp;amp;utm_medium=link&amp;amp;utm_campaign=postLink&#34;&gt;WaSP&lt;/a&gt;, o pessoal da &lt;a href=&#34;http://www.whatwg.org/?utm_source=TablelessComBr&amp;amp;utm_medium=link&amp;amp;utm_campaign=postLink&#34;&gt;WHATWG&lt;/a&gt; e mais uma vez agora com o pessoal do &lt;a href=&#34;http://www.webintents.com/?utm_source=TablelessComBr&amp;amp;utm_medium=link&amp;amp;utm_campaign=postLink&#34;&gt;WebIntents&lt;/a&gt;. Claro, existem outras iniciativas anônimas que nos fizeram chegar até aqui.&lt;/p&gt;

&lt;p&gt;Eu gosto muito muito de uma frase do pessoal da WaSP utiliza há tempos: &lt;strong&gt;If not now, when? If not you, who?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/PaulKinlan/WebIntents&#34;&gt;Veja aqui o GitHub do Framework.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Guia de Referência de HTML5</title>
      <link>https://tableless.github.io/hugo-public/guia-de-referencia-de-html5/</link>
      <pubDate>Mon, 02 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/guia-de-referencia-de-html5/</guid>
      <description>

&lt;p&gt;Ter sempre um guia de referência sobre qualquer tipo de linguagem é sempre bom. Ainda mais quando é completo e atual. O pessoal do WDL nos presenteou com &lt;a href=&#34;http://www.inmotionhosting.com/infographics/html5-cheat-sheet/&#34;&gt;uma série de Cheat Sheets&lt;/a&gt; sobre HTML5.&lt;/p&gt;

&lt;p&gt;Os guias são divididos em 3 gráficos: Um mostra as novas tags, o segundo mostra os eventos e atributos e o terceiro mostra o suporte dos browsers.&lt;/p&gt;

&lt;p&gt;Cada Cada um diferencia as características novas, existentes ou não suportadas do HTML5. O visual deles é bem simples e muito fácil de entender. O mais legal é que dá para imprimir e deixar à vista para quando você ou a equipe precisarem.&lt;/p&gt;

&lt;h3 id=&#34;html5-tags-cheat-sheet&#34;&gt;HTML5 Tags Cheat Sheet&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.inmotionhosting.com/infographics/html5-cheat-sheet/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://www.inmotionhosting.com/infographics/_img/html5_cheat_sheet_tags-670x460.png&#34; width=&#34;670&#34; height=&#34;460&#34; border=&#34;0&#34; alt=&#34;HTML5 Cheat Sheet - Tags&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML5 Cheat Sheet By InMotion Hosting &amp;#8211; A &lt;a href=&#34;http://www.inmotionhosting.com/vps_hosting.html&#34;&gt;Virtual Private Servers&lt;/a&gt; Provider&lt;/p&gt;

&lt;h3 id=&#34;html5-event-handler-content-attribute-cheat-sheet&#34;&gt;HTML5 Event Handler Content Attribute Cheat Sheet&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.inmotionhosting.com/infographics/html5-cheat-sheet/#eventhandler&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://www.inmotionhosting.com/infographics/_img/html5_cheat_sheet_event_attributes-670x460.png&#34; width=&#34;670&#34; height=&#34;460&#34; border=&#34;0&#34; alt=&#34;HTML5 Cheat Sheet - Event Handler Attributes&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML5 Cheat Sheet By InMotion Hosting &amp;#8211; A &lt;a href=&#34;http://www.inmotionhosting.com/&#34;&gt;Web Hosting&lt;/a&gt; Provider&lt;/p&gt;

&lt;h3 id=&#34;html5-browser-support-cheat-sheet&#34;&gt;HTML5 Browser Support Cheat Sheet&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.inmotionhosting.com/infographics/html5-cheat-sheet/#browsersupport&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://www.inmotionhosting.com/infographics/_img/html5_cheat_sheet_browser_support-670x460.png&#34; width=&#34;670&#34; height=&#34;460&#34; border=&#34;0&#34; alt=&#34;HTML5 Cheat Sheet - Browser Support&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML5 Cheat Sheet By InMotion Hosting &amp;#8211; A &lt;a href=&#34;http://www.inmotionhosting.com/dedicated_servers.html&#34;&gt;Dedicated Server&lt;/a&gt; Provider&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introdução ao CSS 3D – Flip Card</title>
      <link>https://tableless.github.io/hugo-public/introducao-ao-css-3d-flip-card/</link>
      <pubDate>Wed, 21 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/introducao-ao-css-3d-flip-card/</guid>
      <description>

&lt;p&gt;O CSS 3D é sem dúvida uma das features do CSS mais aguardadas por todas as crianças do Brasil. Fala a verdade! Fazer efeitozinhos com sombra, gradientes, transparências e etc já foi um dia na vida do desenvolvimento algo bacana. Hoje é muito fora de moda. Carne de vaca, sabe? Por isso o CSS 3D é tão esperado. Ele trará para a web efeitos visuais para layout que antes só viamos em sistemas que rodam em smartphones, tipo um iPhone ou nos sistemas operacionais mais populares como Linux e OSX.&lt;/p&gt;

&lt;p&gt;Mas não se anime muito. Eu sei que você está ansioso para sair por aí colocando efeitos 3D de CSS em tudo quanto é aplicação. Mas calma&amp;#8230; entenda que o CSS foi feito para estilizar documentos. Você o utiliza para melhorar a experiência dos usuários nos diversos dispositivos e não para enfeitar seu website como se fosse uma penteadeira. Lembra-se dos websites cheios de gifs animados? Pois é, cuidado para não cair no mesmo erro. Você estará utilizando o CSS 3D da maneira certa se seus efeitos passarem desapercebidos pelo usuário ao utilizar seu sistema. Encher seu sistema com efeitos a cada clique ou a cada ação pode fazer com que o usuário perca tempo e a paciência.&lt;/p&gt;

&lt;p&gt;Mas vamos ao que interessa.&lt;/p&gt;

&lt;h3 id=&#34;o-suporte&#34;&gt;O suporte&lt;/h3&gt;

&lt;p&gt;Infelizmente isso ainda está restrito para browsers. O Internet Explorer não tem suporte ainda e nem tem data para tal. Todos os exercícios que você ver neste post são feitos para browsers que tem WebKit como motor de renderização. Por isso teste em seu Chrome ou no seu Safari. Eu testei no Chrome porque o Safari mostrou algumas inconsistências. O Opera está esperando as especificações de CSS Transforms amadurecerem para adicionar este recurso. Testei no Firefox 8.0.1 e o exercício não funcionou.&lt;/p&gt;

&lt;p&gt;A degradação do CSS 3D para os browsers que não o suportam é um pouco infeliz. Sugiro que se você for utilizar essas features, tente fazê-lo em projetos restritos para que não haja problemas com usuários de browsers antigos. Se ainda assim você quiser arriscar, crie soluções especifica para seu projeto, fazendo com que a experiência do seu cliente não seja muito prejudicada.&lt;/p&gt;

&lt;p&gt;Sugiro que &lt;a href=&#34;http://tableless.com.br/utilizando-a-biblioteca-modernizr/&#34; title=&#34;Utilizando a Biblioteca Modernizr&#34;&gt;utilize a biblioteca Modernizr&lt;/a&gt; para identificar os browsers que não entendem o CSS 3D.&lt;/p&gt;

&lt;h3 id=&#34;tudo-é-uma-questão-de-perspectiva&#34;&gt;Tudo é uma questão de perspectiva&lt;/h3&gt;

&lt;p&gt;Para falar de 3D, precisamos falar sobre perspectiva. Para ativar uma área 3D o elemento precisará de perspectiva.&lt;/p&gt;

&lt;p&gt;Você pode aplicar a perspectiva ao elemento de duas formas: utilizando diretamente a propriedade &lt;strong&gt;perspective&lt;/strong&gt; ou adicionando um valor &lt;strong&gt;perspective()&lt;/strong&gt; na propriedade &lt;strong&gt;transform&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
  -webkit-perspective: 600;
}
&lt;/pre&gt;

&lt;p&gt;Ou:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
  -webkit-transform: perspective(600);
}
&lt;/pre&gt;

&lt;p&gt;Estes dois formatos são os gatilhos que ativam a área 3D onde o elemento irá trabalhar.&lt;/p&gt;

&lt;p&gt;O valor da perspectiva determina a intensidade do efeito. Imagine como se fosse a distância de onde vemos o objeto. Quanto maior o valor, mais perto o elemento estará, logo, menos intenso será o visual 3D. Logo, se colocarmos um valor de &lt;em&gt;2000&lt;/em&gt;, o objeto não terá tantas mudanças visuais e o efeito 3D será suave. Se colocarmos &lt;em&gt;100&lt;/em&gt;, o efeito 3D será muito visível, como se fosse um inseto olhando um objeto gigante.&lt;/p&gt;

&lt;p&gt;Você também precisa entender sobre o &lt;a href=&#34;http://pt.wikipedia.org/wiki/Perspectiva_(gráfica)&#34; title=&#34;Wikipedia: sobre ponto de fuga&#34;&gt;ponto de fuga&lt;/a&gt;. O ponto de fuga por padrão está posicionado no centro. Você pode modificar essa posição com a propriedade &lt;strong&gt;perspective-origin&lt;/strong&gt;, que é muito parecido com a propriedade &lt;strong&gt;transform-origin&lt;/strong&gt;, que define onde a ação de transformação do objeto acontecerá, nesse caso &lt;a href=&#34;http://tableless.github.com/exemplos/cssanimation.html&#34;&gt;quando falamos de ações 2D&lt;/a&gt;. A propriedade &lt;strong&gt;perspective-origin&lt;/strong&gt; afeta os eixos X e Y do elemento filho.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.github.com/exemplos/css3d/cardflip/propriedade-perspective.html&#34;&gt;Veja um exemplo com dois elementos&lt;/a&gt;: um com pouca perspectiva e outra com muita perspectiva.&lt;/p&gt;

&lt;h3 id=&#34;css-3d-transforms&#34;&gt;CSS 3D Transforms&lt;/h3&gt;

&lt;p&gt;Se você ainda não leu sobre CSS Transforms você pode &lt;a href=&#34;http://tableless.com.br/introducao-ao-css-animation/&#34; title=&#34;Introdução ao CSS Animation&#34;&gt;ler algo aqui&lt;/a&gt; e &lt;a href=&#34;http://tableless.github.com/exemplos/csstransforms/&#34;&gt;ver em ação aqui&lt;/a&gt;. As propriedades são praticamente iguais, mas aplicadas para os princípios de 3D e não 2D.&lt;/p&gt;

&lt;p&gt;Você deve estar acostumado a trabalhar com os eixos X e Y no CSS padrão. No CSS 3D podemos manipular também o eixo Z, que representa a profundidade.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.github.com/exemplos/css3d/cardflip/propriedade-transform.html&#34;&gt;Veja um exemplo utilizando os valores &lt;strong&gt;rotateY, rotateX e translateZ&lt;/strong&gt;&lt;/a&gt;. Perceba que no &lt;strong&gt;translateZ&lt;/strong&gt; eu utilizei valores negativos e positivos. Quando utilizo o valor negativo, o objeto fica &amp;#8220;mais longe&amp;#8221;, se coloco valores positivos, o objeto fica &amp;#8220;mais perto&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Abaixo segue uma imagem do resultado do exemplo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.github.com/exemplos/css3d/cardflip/propriedade-transform.html&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2011/12/img-transform3d.png&#34; alt=&#34;&#34; title=&#34;img-transform3d&#34; width=&#34;801&#34; height=&#34;706&#34; class=&#34;alignnone size-full wp-image-4795&#34; srcset=&#34;uploads/2011/12/img-transform3d.png 801w, uploads/2011/12/img-transform3d-300x264.png 300w&#34; sizes=&#34;(max-width: 801px) 100vw, 801px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nós podemos utilizar também alguns atalhos para estes valores onde podemos definir as três dimensões de uma vez:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;translate3d(x,y,z)&lt;/li&gt;
&lt;li&gt;scale3d(x,y,z)&lt;/li&gt;
&lt;li&gt;rotate3d(x,y,z,angle)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Muito importante: ao utilizar as propriedades resumidas, os browsers ativam automaticamente a aceleração por hardware no Safari para que as animações tenham uma melhor performance.&lt;/p&gt;

&lt;h2 id=&#34;fazendo-o-efeito-de-card-flip&#34;&gt;Fazendo o efeito de Card Flip&lt;/h2&gt;

&lt;p&gt;O efeito de Card Flip é muito conhecido entre os usuários de iPhone. Para ter ideia de como é o efeito &lt;a href=&#34;http://tableless.github.com/exemplos/css3d/cardflip/cardflip.html&#34; title=&#34;Exemplo de efeito card flip com CSS 3 3D&#34; target=&#34;_blank&#34;&gt;veja o exemplo final&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A estrutura HTML é esta:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;section class=&#34;geral&#34;&amp;gt;
  &amp;lt;div class=&#34;carta&#34;&amp;gt;
    &amp;lt;figure class=&#34;frente&#34;&amp;gt;&amp;lt;img src=&#34;card-front.jpg&#34;&amp;gt;&amp;lt;/figure&amp;gt;
    &amp;lt;figure class=&#34;atras&#34;&amp;gt;&amp;lt;img src=&#34;card-back.jpg&#34;&amp;gt;&amp;lt;/figure&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/pre&gt;

&lt;p&gt;O elemento &lt;em&gt;.geral&lt;/em&gt; é onde iniciaremos o ambiente 3D. O elemento &lt;em&gt;.carta&lt;/em&gt; age como container dos objetos 3D. Cada face da carta está separada por um elemento &lt;strong&gt;figure&lt;/strong&gt;, com uma imagem.&lt;/p&gt;

&lt;p&gt;Para começar, precisamos aplicar a perspectiva para o elemento &lt;em&gt;.geral&lt;/em&gt; iniciar o espaço 3D.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.geral { 
    width: 200px;
    height: 293px;
    position: relative;
    margin:10% auto 0;
    -webkit-perspective: 500;
}
&lt;/pre&gt;

&lt;p&gt;Defini uma largura e altura, coloquei um &lt;strong&gt;position: relative;&lt;/strong&gt; para que os elementos dentro dele sejam posicionados se referenciando por ele. Coloquei uma margem só para separá-lo do topo do body a fim de conseguirmos ver melhor os efeitos.&lt;/p&gt;

&lt;p&gt;Por fim, coloquei a propriedade &lt;strong&gt;-webkit-perspective: 500;&lt;/strong&gt; para aplicarmos o efeito 3D. O valor de 500 faz uma boa perspectiva.&lt;/p&gt;

&lt;p&gt;Agora definiremos as dimensões da carta e suas propriedades.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.carta {
  width: 100%;
  height: 100%;
  position: absolute;
  -webkit-transition: -webkit-transform 1s;
}
&lt;/pre&gt;

&lt;p&gt;Largura e altura precisam ser de 100% para definir a área que o 3D irá aplicar. O &lt;strong&gt;position: absolute;&lt;/strong&gt; é necessário para que as cartas fiquem relativas ao elemento &lt;em&gt;.geral&lt;/em&gt;. A propriedade &lt;strong&gt;-webkit-transition: -webkit-transform 1s;&lt;/strong&gt; define o tempo de transição do efeito, neste caso ele vai durar 1 segundo.&lt;/p&gt;

&lt;p&gt;Formatando as cartas:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.carta figure {
  margin:0;
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
}
&lt;/pre&gt;

&lt;p&gt;Vamos direto para a propriedade &lt;strong&gt;-webkit-backface-visibility: hidden;&lt;/strong&gt; já que as outras dispensam comentários. Essa propriedade faz com que a face de trás da carta não apareça e nem se sobreponha no momento do efeito.&lt;/p&gt;

&lt;p&gt;E finalmente, para fazer com que a parte de trás da carta apareça no verso correto, nós temos que rotacioná-la.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.atras{-webkit-transform: rotateY(180deg);}
&lt;/pre&gt;

&lt;p&gt;E feito se completa com o trigger para fazer a animação acontecer. Nesse caso farei com um hover no elemento &lt;em&gt;.carta&lt;/em&gt;, onde iremos rotacioná-lo em -180 graus.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.carta:hover {
  -webkit-transform: rotateY(-180deg);
}
&lt;/pre&gt;

&lt;p&gt;E Voilá! Se quiser brincar um pouco, modifique a origem da transformação com a propriedade &lt;strong&gt;-webkit-transform-origin&lt;/strong&gt;. Adicionando essa linha, a transformação acontece para a direita em vez de ser pelo centro, como é o padrão:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.carta:hover {
  -webkit-transform: rotateY(-180deg);
  -webkit-transform-origin: right center;
}
&lt;/pre&gt;

&lt;h3 id=&#34;3drollover-css&#34;&gt;3Drollover.css&lt;/h3&gt;

&lt;p&gt;Encontrei uma biblioteca muito interessante que nos permite fazer estes efeitos de forma fácil e de acordo com os princípios do OOCSS. É necessário apenas estruturar da forma correta e trocar as classes de acordo com o efeito que você quer fazer. Coisa muito simples.&lt;/p&gt;

&lt;p&gt;O nome da biblioteca é &lt;a href=&#34;https://github.com/codepo8/3drollovers.css&#34;&gt;3Drollover&lt;/a&gt;. Clone no seu computador e divirta-se. Dá para usar em projetos facilmente. Veja abaixo um vídeo que mostra os efeitos:&lt;/p&gt;

&lt;h3 id=&#34;para-ler-mais&#34;&gt;Para ler mais&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Leia a &lt;a href=&#34;http://dev.w3.org/csswg/css3-3d-transforms/&#34;&gt;documentação oficial do W3C sobre CSS 3D Transforms&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Pessoal do &lt;a href=&#34;http://www.webkit.org/blog/386/3d-transforms/&#34;&gt;WebKit explicando sobre outras propriedades do CSS 3D Transforms&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Você pode &lt;a href=&#34;http://desandro.github.com/3dtransforms/examples/perspective-03.html&#34;&gt;brincar um pouco com as propriedades do CSS 3D aqui&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Convencimento e educação = liberdade</title>
      <link>https://tableless.github.io/hugo-public/convencimento-e-educacao-liberdade/</link>
      <pubDate>Thu, 15 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/convencimento-e-educacao-liberdade/</guid>
      <description>&lt;p&gt;Os websites precisam parecer iguais em todos os browsers? &lt;a href=&#34;http://dowebsitesneedtolookexactlythesameineverybrowser.com/&#34;&gt;Claro que não&lt;/a&gt;. Aí você fala assim: &amp;#8220;Diz isso para meu chefe ou meu cliente.&amp;#8221; Eu até posso dizer, mas aí eu estaria fazendo o seu trabalho.&lt;/p&gt;

&lt;p&gt;Uma das obrigações atuais do desenvolvedor client-side é educar e convencer. Não venha me dizer que isso é quase impossível porque eu já sei disso. Mas ninguém disse que é totalmente impossível, correto? Você vai encontrar muitos obstáculos, tenha certeza disso, mas você vai conseguir mudar a web brasileira e a do mundo se fizer isso e fizer bem feito.&lt;/p&gt;

&lt;p&gt;Não estou dizendo para você chegar de supetão, colocar a mão na testa do seu chefe/cliente e dizer: &amp;#8220;Sai desse corpo, Internet Explorer, porque ele não te pertence!!&amp;#8221; Isso seria legal de assistir, mas você certamente seria demitido. Estou dizendo para você se armar. Se municie de números, estatísticas&amp;#8230; saiba quanto o pessoal da sua área está trabalhando mais para fazer o projeto funcionar em browsers antigos e quanto de dinheiro está provavelmente sendo perdido no processo.&lt;/p&gt;

&lt;p&gt;A conta é simples: calcule o seu valor hora e o valor hora dos seus colegas de projeto. Coloque impostos, coloque tempo extra etc&amp;#8230; Depois multiplique esse valor pela quantidade de horas que vocês gastaram para arrumar layouts em browsers antigos e por quanto tempo vocês gastaram para deixar tudo exatamente igual em todos os browsers. Inclue o tempo gasto para recortar imagens, procurar plugins em javascript milagrosos, o tempo que você passou solucionando os problemas de estruturação e etc, tudo isso deve contar no número final das horas. Faça um dossiê. Não precisa ser muito longo, mas precisa ser exato! Precisa conter todas as dificuldades que vocês tiveram que resolver para tentar deixar os browsers com os mesmos efeitos que os browsers novos. Depois disso tudo, em uma hora apropriada apresente para o seu chefe.&lt;/p&gt;

&lt;p&gt;Para ajudar fizemos &lt;a href=&#34;http://tableless.com.br/browsers-antigos-guerra-contra-o-terror/&#34; title=&#34;PDF – Browsers antigos: guerra contra o terror&#34;&gt;um PDF que explica&lt;/a&gt; exatamente quais as soluções vocês precisam adotar e alguns outros assuntos que seu chefe precisa saber para entender melhor esse conceito todo. Você precisa entender esse é um caminho longo. Você não (ou vai) convencer seu chefe/cliente de primeira. Isso depende muito do seu perfil e do perfil deles. Mas com certeza, se você levar informações relevantes e maduras as chances serão grandes, já que ninguém gosta de perder dinheiro.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>