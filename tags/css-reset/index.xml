<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css Reset on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/css-reset/index.xml</link>
    <description>Recent content in Css Reset on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/css-reset/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Repensando CSS Resets</title>
      <link>https://tableless.github.io/hugo-public/repensando-css-resets/</link>
      <pubDate>Mon, 04 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/repensando-css-resets/</guid>
      <description>

&lt;p&gt;Cada desenvolvedor possui um fluxo de trabalho diferente, mas uma prática mais do que comum é utilização de algum tipo de reset ou normatização para o CSS. Você provavelmente já sabe para que serve este tipo de arquivo. Como cada browser tem suas configurações padrões iniciais, esta boa prática garante a consistência do código e minimiza as diferenças visuais de um layout em diferentes navegadores. O objetivo é sempre criar um resultado mais homogêneo. Basicamente existem duas abordagens: resetar todos os elementos do browser ou criar um novo padrão básico. Mas, você já parou para repensar o seu CSS reset ou simplesmente utiliza um modelo pronto?&lt;/p&gt;

&lt;p&gt;Confesso que sou uma reset junkie. Ao longo da minha carreira como desenvolvedora eu cheguei a testar e utilizar diversos resets diferentes como o &amp;#8211; já velhinho porem ainda muito utilizado &amp;#8211; &lt;a href=&#34;http://meyerweb.com/eric/thoughts/2007/05/01/reset-reloaded/&#34; title=&#34;Eric Meyer&#39;s Reset&#34;&gt;Eric Meyer&amp;#8217;s Reset&lt;/a&gt;. Por final acabei ficando com um boilerplate customizado para HTML e CSS, baseado no &lt;a href=&#34;http://html5boilerplate.com/&#34; title=&#34;HTML Boilerplate&#34;&gt;HTML5 Boilerplate&lt;/a&gt;. Este boilerplate utiliza o &lt;a href=&#34;http://necolas.github.com/normalize.css/&#34;&gt;normalize.css&lt;/a&gt;, um reset muito completo e bem aceito. E, para poupar tempo, eu confiava cegamente no meu querido reset e continuava minha vida feliz e contente sem ao menos perceber quantas redundâncias haviam no meu código&amp;#8230;&lt;/p&gt;

&lt;h2 id=&#34;sobre-resets-cestas-básicas-e-cavalos&#34;&gt;Sobre resets, cestas básicas e cavalos&lt;/h2&gt;

&lt;p&gt;O erro é confiar em juizo de valor. O normalize, por exemplo, é utilizado pelo Twitter Bootsrap, iA, Soundcloud e até pela Nasa. Deve ser bom, certo? Sim e não. A triste verdade, meus amigos, é que só você mesmo pode dizer o que é bom para o seu projeto. Um reset é projetado pensando em necessidades gerais. É como uma cesta básica. Vai ter o arroz e feijão, mas não vai ter sua bolacha recheada de morango favorita. E se você tiver alergia a alguns dos alimentos não tem como reclamar. Você ganhou a cesta. Cavalo dado não se olha os dentes. Se quer algo bem feito faça você mesmo. Um bom reset é o SEU reset.&lt;/p&gt;

&lt;h2 id=&#34;você-precisa-de-tudo-isso&#34;&gt;Você precisa de tudo isso?&lt;/h2&gt;

&lt;p&gt;Sério. Isto é importante. Vou até perguntar de novo: Você precisa de tudo isso? Não quero deixar você paranóico, mas cada linha de código potencialmente aumenta o tamanho do seu CSS e o usuário vai ter que baixar tudinho em sabe-se lá que velocidade de banda&amp;#8230; Não estou falando que você deve jogar tudo fora. Mas é necessário fazer uma análise do público-alvo do seu projeto (e obviamente que tipo de combo dispositivo + browser ele utiliza). Alguns resets, contém, por exemplo, elementos de correções de bugs de browsers antigos como o IE6/7. Meio inútil se você não pretende dar suporte a estes navegadores, certo? Já parou para pensar como é desnecessário estilos específicos para impressão no caso de uma aplicação mobile? Tem que ver isto aí.&lt;/p&gt;

&lt;h2 id=&#34;algumas-coisas-fazem-falta-8230&#34;&gt;Algumas coisas fazem falta&amp;#8230;&lt;/h2&gt;

&lt;p&gt;Acrescentar elementos desnecessários pode ser um problema, mas o contrário também é verdadeiro. Muitas vezes um reset acaba retirando funcionalidades importantes, como por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;em,strong{
    font-style:normal;
    font-weight:normal;
}
&lt;/pre&gt;

&lt;p&gt;E isto da um pepino sério quando você esquece de corrigir. Um cliente veio me perguntar por que ele não conseguia deixar textos em negrito ou itálico através do WordPress&amp;#8230; A culpa era do reset. No final eu sempre acabava acrescentando:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;em{
    font-style:italic;
}
strong{
    font-weight:bold;
}&lt;/pre&gt;

&lt;p&gt;Completamente redundante. Outro elemento comum em resets que me faz ranger os dentes.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;ol, ul {
    list-style: none;
}
&lt;/pre&gt;

&lt;p&gt;Não faz sentido. Para que tirar os bullet points de TODAS as listas? No final o código fica muito mais longo pois é preciso acrescentar de volta as tais bolinhas. Seria muito mais prático retirar apenas quando necessário&amp;#8230; Outras coisas que costumam dar problemas são margens, espaçamentos e formulários.&lt;/p&gt;

&lt;h2 id=&#34;uma-questão-de-estilo-pessoal&#34;&gt;Uma questão de estilo pessoal&lt;/h2&gt;

&lt;p&gt;O normalize já traz alguns estilos padrões para texto, como por exemplo.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;h1 {
    font-size: 2em;
    margin: 0.67em 0;
}

h2 {
    font-size: 1.5em;
    margin: 0.83em 0;
}

h3 {
    font-size: 1.17em;
    margin: 1em 0;
}

h4 {
    font-size: 1em;
    margin: 1.33em 0;
}

h5 {
    font-size: 0.83em;
    margin: 1.67em 0;
}

h6 {
    font-size: 0.67em;
    margin: 2.33em 0;
}&lt;/pre&gt;

&lt;p&gt;O que é completamente desnecessário no meu caso. 100% dos meus designs contam com o tamanhos de texto customizados para títulos.&lt;/p&gt;

&lt;p&gt;Tudo isto é muito subjetivo. O reset utópico deve atender as suas necessidades e preferências pessoais como desenvolvedor. Por exemplo, alguns resets trabalham com font-size padrão em 100%. Ótimo para quem vai trabalhar com pixels ou porcentagem. Péssimo para quem gosta de utilizar EM. A não ser que você seja um pequeno gênio da matemática, o melhor é definir o font-size para 62.5% e trabalhar com casas decimais na hora de fazer a conversão de medidas.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;E você? Utiliza algum reset? Qual? Contruiu o seu do 0? Já parou para revisar todas as classes e verificar se existe alguma redundância no seu código?&lt;/p&gt;

&lt;p&gt;Vale a pena &amp;#8220;perder&amp;#8221; de 5 a 10 minutos do seu dia para conferir se o seu reset esta de acordo com o seu projeto, mesmo no caso de um código autoral. Os ganhos em velocidade, praticidade e organização são impressionantes. Os usuários agradecem.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>