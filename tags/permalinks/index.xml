<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Permalinks on Tableless</title>
    <link>http://tableless.com.br/tags/permalinks/index.xml</link>
    <description>Recent content in Permalinks on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/permalinks/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Utilizando a API do bit.ly para gerar links encurtados para seus posts WordPress</title>
      <link>http://tableless.com.br/utilizando-api-bit-ly-para-gerar-links-encurtados-para-seus-posts-wordpress/</link>
      <pubDate>Wed, 29 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/utilizando-api-bit-ly-para-gerar-links-encurtados-para-seus-posts-wordpress/</guid>
      <description>&lt;p&gt;Todo mundo sabe que é fundamental criar links de compartilhamento no seu artigo, só que no Twitter isso se restringe a 140 caracteres, e ao enviar o título do seu artigo, URL e seu usuário no Twitter pode faltar espaço. E para economizar espaço fazemos o quê? Uma das táticas é utilizar links curtos através de serviços como o &lt;a href=&#34;http://bit.ly&#34;&gt;bit.ly&lt;/a&gt;. Como tudo na programação, criamos uma maneira de automatizar nossas ações e para isso vamos ao código!&lt;/p&gt;

&lt;p&gt;Primeiramente precisamos entender como a API do bit.ly funciona. Podemos fazer uma requisição via URL e a mesma nos retornará um arquivo XML:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://api.bit.ly/shorten?version=**[VERSÃO]**&amp;amp;longUrl=**[URL]**&amp;amp;login=**[LOGIN]**&amp;amp;apiKey=**[API]**&amp;amp;format=**[FORMATO]**&#34;&gt;http://api.bit.ly/shorten?version=**[VERSÃO]**&amp;amp;longUrl=**[URL]**&amp;amp;login=**[LOGIN]**&amp;amp;apiKey=**[API]**&amp;amp;format=**[FORMATO]**&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[VERSÃO]&lt;/strong&gt; &amp;#8211; A versão do XML&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[URL]&lt;/strong&gt; &amp;#8211; A URL a ser encurtada&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[LOGIN]&lt;/strong&gt; &amp;#8211; Seu login no bit.ly&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[API]&lt;/strong&gt; &amp;#8211; Seu código de API no bit.ly&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[FORMATO]&lt;/strong&gt; &amp;#8211; O formato de retorno (no nosso caso vamos usar XML)&lt;/p&gt;

&lt;p&gt;Basta substituir os dados pelos seus e a requisição retornará um arquivo XML com as informações que precisamos. Veja um exemplo:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-50423 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/XML2.png&#34; alt=&#34;&#34; width=&#34;879&#34; height=&#34;288&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Bom, visto isso vamos aos códigos! Primeiramente criaremos uma função no &lt;strong&gt;functions.php&lt;/strong&gt; do seu tema, substituindo LOGIN e API por seus respectivos dados:&lt;/p&gt;

&lt;pre&gt;function make_bitly_url($url,$format = &#39;xml&#39;,$version = &#39;2.0.1&#39;)
{
  //Set up account info
  $bitly_login = &#39;LOGIN&#39;;
  $bitly_api = &#39;API&#39;;
  //create the URL
  $bitly = &#39;http://api.bit.ly/shorten?version=&#39;.$version.&#39;&amp;longUrl=&#39;.urlencode($url).&#39;&amp;login=&#39;.$bitly_login.&#39;&amp;apiKey=&#39;.$bitly_api.&#39;&amp;format=&#39;.$format;
  $xml = simplexml_load_file($bitly) -&amp;gt; results;
  foreach($xml -&amp;gt; nodeKeyVal as $nodeKeyVal) {
    return (string)$nodeKeyVal -&amp;gt; shortUrl;
  }
}&lt;/pre&gt;

&lt;p&gt;Vamos às explicações: o código acima é basicamente um leitor de XML, e informando os seus dados ele vai formar uma URL que vai fazer uma requisição ao serviço do bit.ly e retornar o &lt;strong&gt;XML&lt;/strong&gt; que será lido pela função &lt;strong&gt;simplexml_load&lt;/strong&gt; e armazenado como um vetor na variável&lt;strong&gt; $xml&lt;/strong&gt;. Depois fazemos um loop com o &lt;strong&gt;foreach&lt;/strong&gt; por todos os itens &lt;strong&gt;nodeKeyVal&lt;/strong&gt; e retornamos a tag &lt;strong&gt;shortUrl&lt;/strong&gt; para a função que vamos chamar depois. Repare que colocamos uma (string) antes de puxar o &lt;strong&gt;$nodeKeyVal -&amp;gt; shortUrl&lt;/strong&gt;; isso é pra transformá-la em um valor retornável.&lt;/p&gt;

&lt;p&gt;Como quase toda API, a do bit.ly tem limitação de requisições. Por isso precisamos armazenar as URLs encurtadas em nosso banco de dados. Vamos ao código de novo; dessa vez você vai colocar logo após iniciar o seu loop no &lt;strong&gt;single.php&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&amp;lt;?php
global $short_url;
// Checar se ja existe um URL encurtado armazenado no banco de dados
if(get_post_meta($post-&amp;gt;ID, &#34;short_url&#34;, true) != &#34;&#34;){
  //Short URL already exists, pull from post meta
  $short_url = get_post_meta($post-&amp;gt;ID, &#34;short_url&#34;, true);
}
else {
  // Caso não tenha, vamos criar uma
  $full_url = get_permalink();
  $short_url = make_bitly_url($full_url);
  // Salvar no port_meta
  add_post_meta($post-&amp;gt;ID, &#39;short_url&#39;, $short_url, true);
}
?&amp;gt;&lt;/pre&gt;

&lt;p&gt;O código já está comentado mas vale explicar algumas coisas: usamos um condicional para checar se no nosso &lt;strong&gt;post_meta&lt;/strong&gt; existe uma tag &lt;strong&gt;short_url&lt;/strong&gt; diferente de um valor nulo; caso já exista ele vai pegá-la e armazenar na variável &lt;strong&gt;$short_url&lt;/strong&gt;. Caso não exista, iremos criar uma chamando a função &lt;strong&gt;make_bitly_url,&lt;/strong&gt; armazenando na variável &lt;strong&gt;$short_url&lt;/strong&gt; e depois adicionando-a ao &lt;strong&gt;post_meta.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pronto! Isso é quase o fim, agora só precisamos imprimir a variável &lt;strong&gt;$short_url&lt;/strong&gt;. É importante dizer que se você tentar imprimi-la antes do código que cria a variável obviamente isso não vai dar certo. Basicamente a função abaixo deve ficar depois da função acima, veja:&lt;/p&gt;

&lt;pre&gt;&amp;lt;?php echo $short_url; ?&amp;gt;&lt;/pre&gt;

&lt;p&gt;Bom, agora você pode usar como quiser: imprimi-la no seu artigo, criar um botão de compartilhamento, etc. Recomendo que você, depois de testar, tente implementar outras APIs e ver o resultado. Caso dê algo errado, tente habilitar o error_reporting do PHP porque vai ajudar bastante você descobrir onde está o erro. Você pode usar os comentários para me perguntar algo, será um prazer responder.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Otimizando seu site em WordPress para SEO</title>
      <link>http://tableless.com.br/otimizando-site-wordpress-seo/</link>
      <pubDate>Thu, 17 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/otimizando-site-wordpress-seo/</guid>
      <description>

&lt;p&gt;Uma característica que defina o WordPress é a &lt;strong&gt;customização&lt;/strong&gt;. Em poucas linhas conseguimos soluções significantes. Seja trabalhando com suas funções ou com seus plugins, temos resultados objetivos para preparar um Blog e até mesmo um site de grande porte, como temos hoje, vários exemplos disso.&lt;/p&gt;

&lt;p&gt;Elogiam muito o WordPress por ele ter uma facilidade para &lt;a href=&#34;http://www.oitobitdigital.com.br/servico/otimizacao-de-sites-seo/&#34;&gt;otimização de sites&lt;/a&gt; (SEO). Antes de começarem a ler as dicas que vou citar, faça a seguinte reflexão: O que é um site hoje, sem ser bem indexado pelos mecanismos de busca?&lt;/p&gt;

&lt;h3 id=&#34;melhore-a-tag-title-do-seu-site&#34;&gt;Melhore a tag title do seu site&lt;/h3&gt;

&lt;p&gt;Você acha mesmo que a tag de título do seu site não tem importância? Espero que não, pois é com ela que os mecanismos de busca reconhecem uma das primeiras informações do seu site.&lt;/p&gt;

&lt;p&gt;Coloque o seu título da seguinte forma:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&lt;title&gt;
  &amp;lt;?php wp_title(“|”, true, ‘right’); ?&amp;gt;&amp;lt;?php bloginfo(‘name’); ?&amp;gt;
&lt;/title&gt;[/cce]&lt;/p&gt;

&lt;p&gt;A função &lt;strong&gt;wp_title&lt;/strong&gt; imprime vários resultados a depender da sua página.&lt;/p&gt;

&lt;h3 id=&#34;links-permanentes-permalinks&#34;&gt;Links permanentes (Permalinks)&lt;/h3&gt;

&lt;p&gt;Quem usa WordPress e não usa essa função básica, não sabe o que está perdendo. A URL também tem uma função importante para indexação de sites, pois também é reconhecido antes da página ser carregada. O seu site sairia na frente de diversas URL’s que usam aqueles parâmetros grandes e sem semântica.&lt;/p&gt;

&lt;p&gt;Dentro de seu painel de administração, procure por Settings (Configurações) e depois Links Permanentes (Permalinks). Selecione a opção Custom Structure (Estrutura Personalizada) e altere sua estrutura para:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;html&amp;#8221;]/%category%/%postname%/[/cce]&lt;/p&gt;

&lt;h3 id=&#34;otimizando-as-metas-do-seu-site&#34;&gt;Otimizando as metas do seu site&lt;/h3&gt;

&lt;p&gt;Para otimizar as metas, utilize o plug-in &lt;a href=&#34;http://wordpress.org/extend/plugins/all-in-one-seo-pack/&#34; title=&#34;Plug-in All in One SEO Pack&#34;&gt;All in One SEO Pack&lt;/a&gt;, com esse plug-in conseguimos facilmente manipular as metas e também títulos do site. Com ele, alteram-se as metas de descrição e keywords (palavras-chave) da página inicial e também dos posts, além dos títulos de cada página.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wordpress.org/extend/plugins/all-in-one-seo-pack/&#34; title=&#34;Plug-in All in One SEO Pack&#34;&gt;Baixe o plug-in&lt;/a&gt;, instale-o e ative.&lt;/p&gt;

&lt;h3 id=&#34;mecanismos-de-busca-odeiam-spam&#34;&gt;Mecanismos de busca odeiam SPAM&lt;/h3&gt;

&lt;p&gt;Os mecanismos de busca odeiam SPAM, ou seja, odeiam conteúdo ruim e/ou desnecessário. Existe um plug-in que modera spam no seu site, chama-se Akismet. Geralmente ele já é incluído quando você instala o WordPress, mas caso não encontre depois que instalar, &lt;a href=&#34;http://wordpress.org/extend/plugins/akismet/&#34; title=&#34;Akismet plug-in&#34;&gt;baixe-o&lt;/a&gt; e ative-o.&lt;/p&gt;

&lt;p&gt;Para usar do plug-in é necessário resgatar um código gerado pelo &lt;a href=&#34;http://akismet.com/&#34; title=&#34;Site Akismet&#34;&gt;site&lt;/a&gt; deles.&lt;/p&gt;

&lt;h3 id=&#34;use-semântica-no-seu-código&#34;&gt;Use semântica no seu código&lt;/h3&gt;

&lt;p&gt;Do que adianta ter todos esses aperfeiçoamentos no seu site e seu site não estiver com um código semântico? Por isso trabalhe com um código de qualidade para que não haja dificuldade para seu código ser lido pelos mecanismos de busca.&lt;/p&gt;

&lt;p&gt;Use alt e title para as imagens, não esqueçam, pois as imagens só podem ser lidas desta maneira. Trabalhe bem com as tags de título &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;h5&gt;, &lt;h6&gt;, e estabeleça uma hierarquia entre elas.&lt;/p&gt;

&lt;h3 id=&#34;utilize-sempre-um-plug-in-de-cache&#34;&gt;Utilize sempre um plug-in de cache&lt;/h3&gt;

&lt;p&gt;A partir da demanda do seu site e ele for crescendo em questão de conteúdo, é sempre bom ter um plug-in de cache para diminuir o carregamento da sua página, sendo assim os mecanismos de busca não terão dificuldades para carregar seu site.&lt;/p&gt;

&lt;p&gt;Indico &lt;a href=&#34;http://wordpress.org/extend/plugins/wp-super-cache/&#34; title=&#34;WP Super Cache&#34;&gt;WP Super Cache&lt;/a&gt;, &lt;a href=&#34;http://wordpress.org/extend/plugins/wp-super-cache/&#34; title=&#34;W3 Total Cache&#34;&gt;W3 Total Cache&lt;/a&gt;, &lt;a href=&#34;http://wordpress.org/extend/plugins/batcache/&#34; title=&#34;Batcache&#34;&gt;Batcache&lt;/a&gt; ou &lt;a href=&#34;http://wordpress.org/extend/plugins/hyper-cache/&#34; title=&#34;Hyper Cache&#34;&gt;Hyper Cache.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tenho certeza que com um deles, seu site estará em boas mãos em relação ao cache.&lt;/p&gt;

&lt;h3 id=&#34;sitemaps-mapa-do-site&#34;&gt;Sitemaps (mapa do site)&lt;/h3&gt;

&lt;p&gt;Para os mecanismos de busca, um sitemap ajuda nas buscas de páginas, pois ele relaciona as URL existentes no seu site. Leia esse &lt;a href=&#34;http://tableless.com.br/seo-sitemaps&#34; title=&#34;Artigo SEO Sitemaps Tableless&#34;&gt;artigo&lt;/a&gt; e veja o porquê do uso de sitemaps.&lt;/p&gt;

&lt;p&gt;O WordPress tem um plug-in que gera um sitemap já otimizado para mecanismos de busca.&lt;/p&gt;

&lt;p&gt;Use o &lt;a href=&#34;http://wordpress.org/extend/plugins/google-sitemap-generator/&#34; title=&#34;Plug-in Google SiteMap Generator&#34;&gt;Google SiteMap Generator&lt;/a&gt; e não tenha possíveis problemas para este assunto.&lt;/p&gt;

&lt;h3 id=&#34;crie-um-bom-meta-robôs&#34;&gt;Crie um bom Meta Robôs&lt;/h3&gt;

&lt;p&gt;É importante você ter um robots.txt na raiz do seu site, que é um arquivo funciona como filtro para os Crawlers e os robôs dos mecanismos de busca, permitindo ou não acesso a páginas do seu site.&lt;/p&gt;

&lt;p&gt;Crie um arquivo em txt, chamado robots.txt com o seguinte código:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;html&amp;#8221;]&lt;/p&gt;

&lt;p&gt;User-agent: *&lt;/p&gt;

&lt;p&gt;Disallow: /cgi-bin&lt;/p&gt;

&lt;p&gt;Disallow: /wp-admin&lt;/p&gt;

&lt;p&gt;Disallow: /wp-includes&lt;/p&gt;

&lt;p&gt;Disallow: /wp-content/plugins&lt;/p&gt;

&lt;p&gt;Disallow: /wp-content/cache&lt;/p&gt;

&lt;p&gt;Disallow: /wp-content/themes&lt;/p&gt;

&lt;p&gt;Disallow: /trackback&lt;/p&gt;

&lt;p&gt;Disallow: /feed&lt;/p&gt;

&lt;p&gt;Disallow: /comments&lt;/p&gt;

&lt;p&gt;Disallow: /category/*/*&lt;/p&gt;

&lt;p&gt;Disallow: */trackback&lt;/p&gt;

&lt;p&gt;Disallow: */feed&lt;/p&gt;

&lt;p&gt;Disallow: */comments&lt;/p&gt;

&lt;p&gt;Disallow: /*?*&lt;/p&gt;

&lt;p&gt;Disallow: /*?&lt;/p&gt;

&lt;p&gt;Allow: /wp-content/uploads&lt;/p&gt;

&lt;p&gt;# Google Image&lt;/p&gt;

&lt;p&gt;User-agent: Googlebot-Image&lt;/p&gt;

&lt;p&gt;Disallow:&lt;/p&gt;

&lt;p&gt;Allow: /*&lt;/p&gt;

&lt;p&gt;# Google AdSense&lt;/p&gt;

&lt;p&gt;User-agent: Mediapartners-Google*&lt;/p&gt;

&lt;p&gt;Disallow:&lt;/p&gt;

&lt;p&gt;Allow: /*&lt;/p&gt;

&lt;p&gt;# digg mirror&lt;/p&gt;

&lt;p&gt;User-agent: duggmirror&lt;/p&gt;

&lt;p&gt;Disallow: /&lt;/p&gt;

&lt;p&gt;Sitemap: &lt;a href=&#34;http://www.seusite.com.br/sitemap.xml&#34;&gt;http://www.seusite.com.br/sitemap.xml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;p&gt;Envie para o servidor e ponha na raiz do seu site.&lt;/p&gt;

&lt;p&gt;E no header.php do seu tema, adicione o código:&lt;/p&gt;

&lt;p&gt;[cce lang=&amp;#8221;php&amp;#8221;]&lt;/p&gt;

&lt;p&gt;&amp;lt;?php&lt;/p&gt;

&lt;p&gt;if(is_single() || is_page() || is_category() || is_home()) {&lt;/p&gt;

&lt;p&gt;echo &amp;#8216;&lt;meta name=&amp;#8221;robots&amp;#8221; content=&amp;#8221;all,noodp&amp;#8221; /&gt;&amp;#8217;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;else if(is_archive()) {&lt;/p&gt;

&lt;p&gt;echo &amp;#8216;&lt;meta name=&amp;#8221;robots&amp;#8221; content=&amp;#8221;noarchive,noodp&amp;#8221; /&gt;&amp;#8217;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;else if(is_search() || is_404()) {&lt;/p&gt;

&lt;p&gt;echo &amp;#8216;&lt;meta name=&amp;#8221;robots&amp;#8221; content=&amp;#8221;noindex,noarchive&amp;#8221; /&gt;&amp;#8217;;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;?&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cce]&lt;/p&gt;

&lt;h3 id=&#34;faça-um-bom-conteúdo&#34;&gt;Faça um bom conteúdo&lt;/h3&gt;

&lt;p&gt;Não adianta ter um site todo otimizado para os mecanismos e eles não terem o que buscar de conteúdo no seu site. Fazer um bom conteúdo é essencial para qualquer indexação de artigo, página, textos ect.&lt;/p&gt;

&lt;p&gt;Também não se esqueça de trabalhar com as redes sociais, pois maior quantidade de links gerados para o seu site, maior relevância ele terá.&lt;/p&gt;

&lt;p&gt;Seja sempre objetivo e claro na suas publicações, tenho certeza que terá um bom resultado. Vale ressaltar que o Google está punindo quem copia conteúdo, muito cuidado.&lt;/p&gt;

&lt;p&gt;Caso tenha futuras dúvidas, o WordPress oferece no seu codex um &lt;a href=&#34;http://codex.wordpress.org/Search_Engine_Optimization_for_WordPress&#34; title=&#34;Guia para otimização de SEO WordPress&#34;&gt;guia para otimização de SEO&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>