<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angularjs on Tableless</title>
    <link>http://tableless.com.br/tags/angularjs/index.xml</link>
    <description>Recent content in Angularjs on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/angularjs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Criando uma aplica√ß√£o m√≥vel com Ionic 2 e Angular 2 em dez passos</title>
      <link>http://tableless.com.br/criando-uma-aplicacao-movel-com-ionic-2-e-angular-2-em-dez-passos/</link>
      <pubDate>Fri, 04 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/criando-uma-aplicacao-movel-com-ionic-2-e-angular-2-em-dez-passos/</guid>
      <description>

&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;

&lt;p&gt;√Ä esta altura do campeonato √© prov√°vel que voc√™ j√° tenha ouvido falar da nova vers√£o deste famoso framework para cria√ß√£o de aplica√ß√µes m√≥veis h√≠bridas. O &lt;strong&gt;&lt;a href=&#34;https://ionicframework.com/docs/v2/&#34; target=&#34;_blank&#34;&gt;Ionic 2&lt;/a&gt;&lt;/strong&gt; acaba de chegar em seu &lt;em&gt;Release Candidate&lt;/em&gt; e, com ele, tr√°s uma s√©rie de recursos e otimiza√ß√µes de c√≥digo, al√©m de um consider√°vel ganho de performance! Muito desse m√©rito se deve ao &lt;strong&gt;&lt;a href=&#34;https://angular.io/&#34; target=&#34;_blank&#34;&gt;Angular&lt;/a&gt;&lt;/strong&gt; (como √© chamada a nova vers√£o do framework, que deixa para tr√°s o &amp;#8220;JS&amp;#8221; ao final do nome) que chega &amp;#8211; finalmente &amp;#8211; na sua vers√£o est√°vel, provando que n√£o est√° para brincadeiras.&lt;/p&gt;

&lt;p&gt;Depois de passar por v√°rias mudan√ßas e quebras de c√≥digo √† cada novo release, o &lt;strong&gt;Ionic 2&lt;/strong&gt; agora atinge a maturidade e se torna um competidor ainda mais forte do modelo de desenvolvimento tradicional (nativo). No entanto, se voc√™ j√° est√° familiarizado com o &lt;strong&gt;&lt;a href=&#34;http://ionicframework.com/&#34; target=&#34;_blank&#34;&gt;Ionic 1&lt;/a&gt;&lt;/strong&gt;, a mudan√ßa nos conceitos pode lhe soar um tanto quanto desagrad√°veis √† primeira vista. Mas uma vez que voc√™ entende como as pe√ßas se encaixam, vai perceber que criar aplica√ß√µes m√≥veis com o framework tornou-se uma atividade ainda mais simples e recompensadora.&lt;/p&gt;

&lt;h3 id=&#34;o-que-tem-de-novo&#34;&gt;O que tem de novo?&lt;/h3&gt;

&lt;p&gt;O Ionic foi desenvolvido com base no &lt;strong&gt;&lt;a href=&#34;https://angularjs.org/&#34; target=&#34;_blank&#34;&gt;AngularJS&lt;/a&gt;&lt;/strong&gt;, um framework voltado para a cria√ß√£o de aplica√ß√µes web modernas, constru√≠das com base em uma p√°gina &lt;strong&gt;HTML5&lt;/strong&gt; que atualiza seu conte√∫do de maneira din√¢mica (as famosas &lt;em&gt;Single Page Applications&lt;/em&gt; ou &lt;em&gt;SPAs&lt;/em&gt;). Ao tirar proveito dessa arquitetura &amp;#8211; e adicionar uma s√©rie de estilos que emulam o visual de aplica√ß√µes nativas &amp;#8211; o Ionic facilitou, em muito, a tarefa de construir um app h√≠brido, ou seja, aquele que executa tanto em smartphones &lt;strong&gt;iOS&lt;/strong&gt; quando &lt;strong&gt;Android&lt;/strong&gt;, otimizando o seu &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Time_to_market&#34; target=&#34;_blank&#34;&gt;Tempo de Mercado&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Mesmo ainda sendo executado em uma &lt;strong&gt;WebView&lt;/strong&gt; (browser interno dos smartphones), uma aplica√ß√£o baseada no Ionic 2 √© muito mais r√°pida, modular e escal√°vel, se comparada com a primeira vers√£o. Principalmente porque o framework segue os padr√µes web mais recentes, como a nova especifica√ß√£o &lt;strong&gt;ES6&lt;/strong&gt; (ou ES2015), trazendo para o javaScript conceitos como &lt;strong&gt;classes&lt;/strong&gt;, &lt;strong&gt;m√≥dulos&lt;/strong&gt; e &lt;strong&gt;arrow functions&lt;/strong&gt;. Al√©m disso, temos tamb√©m a presen√ßa do pol√™mico &lt;strong&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34; target=&#34;_blank&#34;&gt;TypeScript&lt;/a&gt;&lt;/strong&gt; (opcional), que tr√°s o poder da tipagem para o seu c√≥digo, com o intuito de minimizar erros, simplificar a inje√ß√£o de depend√™ncias, facilitar testes, e etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/tumblr_npjjd6T4Lu1tq4of6o1_400.gif&#34; alt=&#34;Too much information - gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Mas embora tudo isso pare√ßa um verdadeiro balaio de gato que funciona mais como repelente do que atrativo, n√£o se deixe enganar: A vers√£o 2 do Ionic d√° um consider√°vel salto de inova√ß√£o em rela√ß√£o √† sua vers√£o original e abre caminho para &lt;a href=&#34;https://ionicframework.com/docs/v2/resources/progressive-web-apps/&#34; target=&#34;_blank&#34;&gt;novas e interessantes tend√™ncias&lt;/a&gt; que valem a pena serem exploradas!&lt;/p&gt;

&lt;h2 id=&#34;m√£o-na-massa&#34;&gt;M√£o na massa!&lt;/h2&gt;

&lt;p&gt;Para entender melhor como se constr√≥i uma aplica√ß√£o com o Ionic 2, vamos criar uma do zero üòÄ&lt;/p&gt;

&lt;p&gt;A aplica√ß√£o que iremos construir √© um simples leitor de feeds baseado na API do &lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/&#34; target=&#34;_blank&#34;&gt;Reddit&lt;/a&gt;&lt;/strong&gt;, o poderoso canal agregador de not√≠cias, onde membros da comunidade podem submeter conte√∫dos como links, textos, imagens, etc. O app ser√° 100% funcional e poder√° ser instalado no seu smartphone e, quem sabe, at√© mesmo evoluir com a inclus√£o de novas funcionalidades.&lt;/p&gt;

&lt;h3 id=&#34;instalando-o-framework&#34;&gt;Instalando o framework&lt;/h3&gt;

&lt;p&gt;Se voc√™ j√° tem o Ionic 1 instalado na sua m√°quina, basta digitar o seguinte comando no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g ionic&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Esse comando atualiza o framework para trabalhar com o Ionic 2 sem afetar a instala√ß√£o da vers√£o 1.&lt;/p&gt;

&lt;p&gt;Mas caso voc√™ seja marinheiro de primeira viagem, certifique-se que tenha o &lt;strong&gt;&lt;a href=&#34;https://nodejs.org/en/&#34; target=&#34;_blank&#34;&gt;Node.js&lt;/a&gt;&lt;/strong&gt; instalado na sua m√°quina e, em seguida, digite no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g ionic cordova&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lembre-se de que voc√™ tamb√©m deve ter o SDK do Android e o Java instalados para fazer build para Android e/ou o Xcode para o build no iPhone:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ionicframework.com/docs/v2/resources/platform-setup/mac-setup.html&#34; target=&#34;_blank&#34;&gt;Guia de instala√ß√£o para Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ionicframework.com/docs/v2/resources/platform-setup/windows-setup.html&#34; target=&#34;_blank&#34;&gt;Guia de instala√ß√£o para Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Depois que a instala√ß√£o for conclu√≠da, voc√™ pode verificar a vers√£o do framework no terminal, digitando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic -v&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;criando-um-novo-projeto&#34;&gt;Criando um novo projeto&lt;/h3&gt;

&lt;p&gt;O CLI (&lt;em&gt;Command Line Interface&lt;/em&gt;) do Ionic vem com um monte de comandos √∫teis que nos ajudam na cria√ß√£o e na manuten√ß√£o dos projetos. Para conferir a lista de comandos dispon√≠veis, digite:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic help&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Por enquanto o que nos interessa √© o comando &lt;strong&gt;start&lt;/strong&gt;. Digite o seguinte no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic start MyReader blank --v2 --appname &amp;quot;Best Reader Ever&amp;quot; --id &amp;quot;com.tableless.myreader&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;O comando &lt;strong&gt;start&lt;/strong&gt; oferece tr√™s tipos de templates com c√≥digo boilerplate. S√£o eles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;sidemenu&lt;/strong&gt; &amp;#8211; adiciona um menu lateral √† aplica√ß√£o (estilo de navega√ß√£o &lt;a href=&#34;https://material.google.com/patterns/navigation-drawer.html&#34; target=&#34;_blank&#34;&gt;padr√£o no Android&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tabs&lt;/strong&gt; &amp;#8211; cria uma navega√ß√£o baseada em guias (modelo de organiza√ß√£o de conte√∫do &lt;a href=&#34;https://developer.apple.com/ios/human-interface-guidelines/ui-bars/tab-bars/&#34; target=&#34;_blank&#34;&gt;incentivado pelo iOS&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;blank&lt;/strong&gt; &amp;#8211; cria um projeto com boilerplate b√°sico, sem nenhum template espec√≠fico.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O comando que digitamos no terminal vai utilizar o template &lt;strong&gt;blank&lt;/strong&gt;. Tamb√©m passamos mais tr√™s par√¢metros adicionais: &lt;strong&gt;v2&lt;/strong&gt; que informa que queremos trabalhar com a vers√£o 2 do Ionic, &lt;strong&gt;appname&lt;/strong&gt;, que define um nome de projeto menos formal e &lt;strong&gt;id&lt;/strong&gt;, que nos possibilita definir o package da aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;Vamos agora acessar a pasta do nosso projeto, digitando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd MyReader&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;passo-1-8211-conhecendo-a-arquitetura&#34;&gt;Passo 1 &amp;#8211; Conhecendo a arquitetura&lt;/h3&gt;

&lt;p&gt;Depois de tantas configura√ß√µes e explica√ß√µes iremos, enfim, para a parte divertida do processo!&lt;/p&gt;

&lt;p&gt;Se voc√™ visitar a pasta do projeto dentro de &lt;strong&gt;src/pages/&lt;/strong&gt;, vai notar a presen√ßa de uma outra pasta chamada &lt;strong&gt;home&lt;/strong&gt;. Dentro dela h√° tr√™s arquivos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;home.html;&lt;/li&gt;
&lt;li&gt;home.scss;&lt;/li&gt;
&lt;li&gt;home.ts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essas pastas e arquivos foram criados como resultado do comando &lt;strong&gt;start&lt;/strong&gt;. O Ionic √© baseado no Angular que, por sua vez, considera que os principais componentes de uma aplica√ß√£o devem ter escopos isolados. Portanto, cada &amp;#8220;p√°gina&amp;#8221; de um projeto tem seu pr√≥prio template visual (html), estilo (scss) e classe (ts). Perceba tamb√©m que, por padr√£o, o Ionic utiliza &lt;strong&gt;Sass&lt;/strong&gt; para a escrita de CSS e TypeScript para as classes, ao inv√©s de JavaScript puro. Fique √† vontade para vasculhar as pastas do projeto e entender como as informa√ß√µes s√£o organizadas, uma vez que este tutorial n√£o tem o prop√≥sito de explorar isso com detalhes.&lt;/p&gt;

&lt;p&gt;Antes de modificar algo no projeto, vamos verificar o que j√° foi gerado de gra√ßa. Digite no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic serve&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Este comando inicia um servidor local na nossa m√°quina e abre uma nova aba no browser com a aplica√ß√£o no ar. Como o &lt;em&gt;LiveReload&lt;/em&gt; j√° vem habilitado por padr√£o, modifica√ß√µes que fizermos no c√≥digo ser√£o refletidas automaticamente no browser:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-localhost-1.jpg&#34; alt=&#34;Ionic 2 - Screenshot 1 localhost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos ver isso acontecendo em tempo real. Abra o arquivo &lt;strong&gt;home.html&lt;/strong&gt; e remova o c√≥digo desnecess√°rio at√© que ele fique assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-header&amp;gt;
  &amp;lt;ion-navbar&amp;gt;
    &amp;lt;ion-title&amp;gt;My Feed Reader&amp;lt;/ion-title&amp;gt;
  &amp;lt;/ion-navbar&amp;gt;
&amp;lt;/ion-header&amp;gt;

&amp;lt;ion-content&amp;gt;

&amp;lt;/ion-content&amp;gt;&lt;/pre&gt;

&lt;p&gt;Confira a mudan√ßa ocorrendo automaticamente no browser:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-localhost-2.jpg&#34; alt=&#34;Ionic 2 - Screenshot 2 localhost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora vamos dar uma olhada no componente respons√°vel por controlar nosso template. Abra o arquivo &lt;strong&gt;home.ts&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Component } from &#39;@angular/core&#39;;
import { NavController } from &#39;ionic-angular&#39;;

@Component({
   selector: &#39;page-home&#39;,
   templateUrl: &#39;home.html&#39;
})
export class HomePage {
   constructor(public navCtrl: NavController) {}
}
&lt;/pre&gt;

&lt;p&gt;Perceba que o arquivo √© composto por tr√™s blocos distintos, que eu chamo carinhosamente de os &lt;strong&gt;3D&lt;/strong&gt;: &lt;strong&gt;Declaration&lt;/strong&gt;, &lt;strong&gt;Decorator&lt;/strong&gt; e &lt;strong&gt;Definition&lt;/strong&gt;. A primeira parte √© onde declaramos componentes externos ou bibliotecas que iremos utilizar em nosso projeto:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Component } from &#39;@angular/core&#39;;
import { NavController } from &#39;ionic-angular&#39;;
&lt;/pre&gt;

&lt;p&gt;O segundo bloco √© composto por um &lt;strong&gt;Decorator&lt;/strong&gt;. No Angular, todo componente tem um &amp;#8220;decorador&amp;#8221;, que √© respons√°vel por fornecer metadados ou informa√ß√µes sobre a classe. No nosso caso, o decorador est√° dizendo que as modifica√ß√µes no html ser√£o feitas apenas no componente &lt;strong&gt;page-home&lt;/strong&gt; e que este arquivo, ou seja, o template html que iremos utilizar, se chama &lt;strong&gt;home.html&lt;/strong&gt;, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;@Component({
   selector: &#39;page-home&#39;,
   templateUrl: &#39;home.html&#39;
})
&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Lembre-se que, por padr√£o, os Decorators ficam sempre em cima do bloco de defini√ß√£o da classe.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O seletor &lt;strong&gt;page-home&lt;/strong&gt; ser√° √∫til quando for necess√°rio criar regras de estilo em CSS aplicadas apenas √† ele.&lt;/p&gt;

&lt;p&gt;E, por fim, temos nosso escopo de classe. Classes em qualquer linguagem de programa√ß√£o orientada √† objeto servem para definir a estrutura e o comportamento de objetos. Por enquanto o que voc√™ precisa saber √© que nossa classe tem apenas um construtor que recebe um objeto do tipo &lt;strong&gt;NavController&lt;/strong&gt; por par√¢metro. Nosso pr√≥ximo passo ser√° inserir novos atributos e m√©todos para definir melhor o seu comportamento:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;export class HomePage {
  constructor(public navCtrl: NavController) {}
&lt;/pre&gt;

&lt;h3 id=&#34;passo-2-8211-consumindo-dados-de-uma-api-p√∫blica&#34;&gt;Passo 2 &amp;#8211; Consumindo dados de uma API p√∫blica&lt;/h3&gt;

&lt;p&gt;Agora que voc√™ j√° sabe mais ou menos como as coisas funcionam, vamos fazer rapidamente uma requisi√ß√£o √† uma API externa (Reddit) para exibir seu resultado em uma lista no nosso template.&lt;/p&gt;

&lt;h4 id=&#34;2-1-8211-trabalhando-com-observables&#34;&gt;2.1 &amp;#8211; Trabalhando com Observables&lt;/h4&gt;

&lt;p&gt;Inclua o seguinte c√≥digo em &lt;strong&gt;home.ts&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Component } from &#39;@angular/core&#39;;
import { NavController } from &#39;ionic-angular&#39;;
import { Http } from &#39;@angular/http&#39;;
import &#39;rxjs/add/operator/map&#39;;

@Component({
  selector: &#39;page-home&#39;,
  templateUrl: &#39;home.html&#39;
})
export class HomePage {

  public feeds: Array&amp;lt;string&amp;gt;;
  private url: string = &#34;https://www.reddit.com/new.json&#34;;  

  constructor(public navCtrl: NavController, public http: Http) {

    this.http.get(this.url).map(res =&amp;gt; res.json())
      .subscribe(data =&amp;gt; {
        this.feeds = data.data.children;
      }); 
  }

}
&lt;/pre&gt;

&lt;p&gt;_Caso queira entender melhor sobre os endpoints da API, d√™ uma olhada &lt;a href=&#34;https://www.reddit.com/dev/api/&#34; target=&#34;_blank&#34;&gt;nesse link&lt;/a&gt;._&lt;/p&gt;

&lt;p&gt;O que fizemos acima foi importar o componente &lt;strong&gt;Http&lt;/strong&gt; e injet√°-lo no m√©todo construtor. Isso nos possibilita acessar sua inst√¢ncia atrav√©s do objeto &lt;strong&gt;this&lt;/strong&gt;. Note que tamb√©m estamos importando o operador &lt;strong&gt;map&lt;/strong&gt; da biblioteca &lt;strong&gt;&lt;a href=&#34;https://github.com/Reactive-Extensions/RxJS&#34; target=&#34;_blank&#34;&gt;rxjs&lt;/a&gt;&lt;/strong&gt;. O rxjs √© uma das extens√µes que comp√µe a &lt;strong&gt;&lt;a href=&#34;http://reactivex.io/&#34; target=&#34;_blank&#34;&gt;reactiveX&lt;/a&gt;&lt;/strong&gt; (Reactive Extensions), uma biblioteca ass√≠ncrona que trabalha com o stream de dados no padr√£o &lt;strong&gt;Observable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No objeto http estamos fazendo uma requisi√ß√£o do tipo &lt;strong&gt;GET&lt;/strong&gt; √† um endpoint que definimos na vari√°vel &lt;strong&gt;url&lt;/strong&gt;, acima do m√©todo construtor. Note que, com o uso do TypeScript, podemos definir seu escopo (p√∫blica ou privada) e ainda definir o seu tipo (string, number, array&amp;#8230;). Ponto para o TypeScript!&lt;/p&gt;

&lt;p&gt;Em seguida, transformamos o resultado dessa requisi√ß√£o utilizando o operador map e o convertemos para JSON atrav√©s do m√©todo &lt;strong&gt;subscribe&lt;/strong&gt; (&amp;#8220;similar&amp;#8221; ao m√©todo &lt;strong&gt;then&lt;/strong&gt; de uma Promise).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;√â importante salientar que o map da biblioteca rxjs √© utilizado exclusivamente para mapear um &lt;strong&gt;array do tipo Observable&lt;/strong&gt; e n√£o √© o mesmo map que utilizamos em um array comum no JavaScript. Aprenda mais sobre requisi√ß√µes remotas com Observables &lt;a href=&#34;https://angular.io/docs/ts/latest/guide/server-communication.html#!#rxjs&#34; target=&#34;_blank&#34;&gt;nesse link&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Por fim, inclu√≠mos o resultado da requisi√ß√£o (agora um objeto do tipo JSON) dentro da vari√°vel p√∫blica &lt;strong&gt;feeds&lt;/strong&gt;, que aqui representa um array de strings. Seu escopo precisa ser p√∫blico pois iremos acessar seu conte√∫do no template.&lt;/p&gt;

&lt;h4 id=&#34;2-2-8211-exibindo-resultado-para-o-usu√°rio&#34;&gt;2.2 &amp;#8211; Exibindo resultado para o usu√°rio&lt;/h4&gt;

&lt;p&gt;Como voc√™ percebeu, dentro do nosso arquivo &lt;strong&gt;home.ts&lt;/strong&gt; h√° uma refer√™ncia ao template &lt;strong&gt;home.html&lt;/strong&gt; dentro do bloco &lt;strong&gt;@Component&lt;/strong&gt;. Esse template, na verdade, √© aquilo que o usu√°rio realmente v√™ na tela do seu smartphone, com base no que definimos dentro da nossa classe. Por enquanto ele n√£o est√° exibindo nada. Modifique o conte√∫do de &lt;strong&gt;home.html&lt;/strong&gt; conforme abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-header&amp;gt;
  &amp;lt;ion-navbar&amp;gt;
    &amp;lt;ion-title&amp;gt;My Feed Reader&amp;lt;/ion-title&amp;gt;
  &amp;lt;/ion-navbar&amp;gt;
&amp;lt;/ion-header&amp;gt;

&amp;lt;ion-content&amp;gt;
  &amp;lt;ion-list&amp;gt;
    &amp;lt;ion-item *ngFor=&#34;let feed of feeds&#34;&amp;gt;
      {{feed.data.title}}
    &amp;lt;/ion-item&amp;gt;
  &amp;lt;/ion-list&amp;gt;
&amp;lt;/ion-content&amp;gt;
&lt;/pre&gt;

&lt;p&gt;O Ionic fornece uma grande variedade de componentes visuais &lt;em&gt;out of the box&lt;/em&gt; que nos permite construir uma interface praticamente id√™ntica √† de uma aplica√ß√£o nativa. N√£o s√≥ isso como tamb√©m √© capaz de adaptar o seu estilo visual de acordo com cada plataforma (algo que veremos em breve).&lt;/p&gt;

&lt;p&gt;A tag &lt;strong&gt;&lt;ion-navbar&gt;&lt;/strong&gt; representa a barra de navega√ß√£o que fica no topo da tela. Essa barra geralmente comporta o t√≠tulo da aplica√ß√£o (como visto na tag &lt;strong&gt;&lt;ion-title&gt;&lt;/strong&gt;) mas tamb√©m pode conter bot√µes de a√ß√£o e demais itens, caso necess√°rio.&lt;/p&gt;

&lt;p&gt;J√° as informa√ß√µes din√¢micas sempre s√£o inseridas dentro da tag &lt;strong&gt;&lt;ion-content&gt;&lt;/strong&gt;, como acabamos de fazer ao inserir o componente &lt;strong&gt;&lt;ion-list&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;N√£o iremos nos aprofundar nos detalhes dos templates visuais fornecidos pelo Ionic. Voc√™ pode encontrar exemplos do markup de cada componente &lt;a href=&#34;https://ionicframework.com/docs/v2/components&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;. O componente que estamos utilizando no exemplo acima √© &lt;a href=&#34;https://ionicframework.com/docs/v2/components/#lists&#34; target=&#34;_blank&#34;&gt;este&lt;/a&gt;. Eu apenas copiei o markut e inseri aqui, alterando apenas aquilo que √© necess√°rio. Esta √©, sem d√∫vida, uma das features mais importantes do framework, uma vez que ela acelera o processo de prototipa√ß√£o de um aplicativo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Observe o seguinte bloco de c√≥digo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-list&amp;gt;
    &amp;lt;ion-item *ngFor=&#34;let feed of feeds&#34;&amp;gt;
      {{feed.data.title}}
    &amp;lt;/ion-item&amp;gt;
  &amp;lt;/ion-list&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Note o loop que estamos executando com a instru√ß√£o *&lt;strong&gt;ngFor&lt;/strong&gt;. Estamos acessando o conte√∫do do array &lt;strong&gt;feeds&lt;/strong&gt; e iterando sobre ele com uma vari√°vel local (&lt;strong&gt;feed&lt;/strong&gt;) para popular nossa lista. Esta √© uma conveni√™ncia fornecida pelo Angular conhecida como &lt;em&gt;Embedded templates&lt;/em&gt; ou diretivas html, que nos ajuda na renderiza√ß√£o dos atributos dispon√≠veis na classe associada. Observe agora o seguinte trecho:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;{{feed.data.title}}&lt;/pre&gt;

&lt;p&gt;Ele representa o valor que ser√° exibido em cada c√©lula da lista, que, neste caso, representa o t√≠tulo do feed. Esta sintaxe entre chaves duplas √© chamada de &lt;strong&gt;Interpola√ß√£o&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Agora salve o arquivo e verifique o resultado no browser. √â prov√°vel que voc√™ esteja vendo algo assim:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-localhost-3.jpg&#34; alt=&#34;Ionic 2 - Screenshot 3 localhost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Se voc√™ entendeu tudo que foi explicado at√© aqui, significa que voc√™ j√° domina boa parte dos principais conceitos n√£o s√≥ do Ionic 2 como tamb√©m do Angular 2. Parab√©ns!&lt;/p&gt;

&lt;p&gt;Agora √© o momento em que nos despedimos das explica√ß√µes mais detalhadas e partimos para a a√ß√£o. Vamos dar um tapinha no visual desse app e inserir alguns recursos extras que ir√£o torn√°-lo ainda mais sexy üòâ&lt;/p&gt;

&lt;h3 id=&#34;passo-3-8211-customizando-o-template&#34;&gt;Passo 3 &amp;#8211; Customizando o template&lt;/h3&gt;

&lt;p&gt;Nosso pr√≥ximo passo ser√° incluir mais informa√ß√µes nas c√©lulas dessa lista, uma vez que apenas o t√≠tulo n√£o √© o suficiente para capturar a aten√ß√£o do usu√°rio.&lt;/p&gt;

&lt;h4 id=&#34;3-1-8211-adicionando-informa√ß√µes-extras&#34;&gt;3.1 &amp;#8211; Adicionando informa√ß√µes extras&lt;/h4&gt;

&lt;p&gt;Ainda em &lt;strong&gt;home.html&lt;/strong&gt;, altere o conte√∫do atual de dentro da tag &lt;strong&gt;&lt;ion-content&gt;&lt;/strong&gt; para:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;ion-list&amp;gt;
    &amp;lt;ion-item *ngFor=&#34;let feed of feeds&#34;&amp;gt;
       &amp;lt;ion-thumbnail item-left&amp;gt;
          &amp;lt;img [src]=&#34;feed.data.thumbnail&#34;&amp;gt;
       &amp;lt;/ion-thumbnail&amp;gt;
       &amp;lt;h2&amp;gt;{{feed.data.title}}&amp;lt;/h2&amp;gt;
       &amp;lt;p&amp;gt;{{feed.data.domain}}&amp;lt;/p&amp;gt;
    &amp;lt;/ion-item&amp;gt;
 &amp;lt;/ion-list&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Salve o arquivo e visualize o resultado no browser:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-localhost-4.jpg&#34; alt=&#34;Ionic 2 - Screenshot 4 localhost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora estamos utilizando um novo template de lista, que comporta imagens. O Ionic j√° faz o servi√ßo de ajustar os itens pra voc√™ contanto que indiquemos isso atrav√©s dos atributos e classes que o framework nos oferece. Perceba, por exemplo, o atributo &lt;strong&gt;item-left&lt;/strong&gt; presente dentro da tag &lt;strong&gt;&lt;ion-thumbnail&gt;&lt;/strong&gt;. Altere seu nome para &lt;strong&gt;item-right&lt;/strong&gt; e voc√™ ver√° que as imagens ser√£o posicionadas √† direita da c√©lula. Tente tamb√©m alterar a tag &lt;strong&gt;&lt;ion-thumbnail&gt;&lt;/strong&gt; para &lt;strong&gt;&lt;ion-avatar&gt;&lt;/strong&gt; e ver√° que as imagens ficar√£o menores e com bordas arredondadas. Muito conveniente!&lt;/p&gt;

&lt;p&gt;Note que o atributo &lt;strong&gt;src&lt;/strong&gt; da tag de imagem est√° envolto por colchetes. Essa sintaxe se chama &lt;em&gt;Property binding&lt;/em&gt; e √© utilizada para atribuir uma propriedade da view ao valor de uma express√£o. No entanto, a mesma sintaxe pode ser substitu√≠da por esta:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;img src=&#34;{{ feed.data.thumbnail }}&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Para fins did√°ticos iremos deixar a express√£o com colchetes neste exemplo.&lt;/p&gt;

&lt;p&gt;Perceba tamb√©m que o t√≠tulo do feed agora aparece dentro da tag &lt;strong&gt;h2&lt;/strong&gt; e um novo item foi inserido dentro de uma tag &lt;strong&gt;p&lt;/strong&gt;. Voc√™ pode utilizar o &lt;em&gt;Chrome Developer Tools&lt;/em&gt; para inspecionar a conte√∫do da listagem dispon√≠vel no array inserindo a instru√ß√£o &lt;code&gt;console.log(this.feed);&lt;/code&gt; ao fim da requisi√ß√£o, dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.http.get(this.url).map(res =&amp;gt; res.json())
    .subscribe(data =&amp;gt; {
      this.feeds = data.data.children;
     // Exibindo conte√∫do do array no console do browser
      console.log(this.feeds);
    }); 
&lt;/pre&gt;

&lt;h3 id=&#34;passo-4-8211-fornecendo-feedback-ao-cliente-e-capturando-eventos&#34;&gt;Passo 4 &amp;#8211; Fornecendo feedback ao cliente e capturando eventos&lt;/h3&gt;

&lt;p&gt;Embora nossa aplica√ß√£o consiga requisitar dados externos com sucesso, n√£o h√° nada que informe ao usu√°rio sobre o status dessa a√ß√£o. Ele pode aguardar poucos segundos como tamb√©m pode esperar uma eternidade at√© que alguma coisa apare√ßa na tela do celular, dependendo do tipo de conex√£o que esteja enfrentando.&lt;/p&gt;

&lt;h4 id=&#34;4-1-8211-adicionando-um-loading&#34;&gt;4.1 &amp;#8211; Adicionando um Loading&lt;/h4&gt;

&lt;p&gt;Insira o seguinte conte√∫do no arquivo &lt;strong&gt;home.ts&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Component } from &#39;@angular/core&#39;;
import { NavController, LoadingController } from &#39;ionic-angular&#39;;
import { Http } from &#39;@angular/http&#39;;
import &#39;rxjs/add/operator/map&#39;;

@Component({
  selector: &#39;page-home&#39;,
  templateUrl: &#39;home.html&#39;
})
export class HomePage {

  public feeds: Array&amp;lt;string&amp;gt;;
  private url: string = &#34;https://www.reddit.com/new.json&#34;;  

  constructor(public navCtrl: NavController, public http: Http, public loadingCtrl: LoadingController) {

    this.fetchContent();

  }

  fetchContent ():void {
    let loading = this.loadingCtrl.create({
      content: &#39;Fetching content...&#39;
    });

    loading.present();

    this.http.get(this.url).map(res =&amp;gt; res.json())
      .subscribe(data =&amp;gt; {
        this.feeds = data.data.children;
        loading.dismiss();
      });  
  }
&lt;/pre&gt;

&lt;p&gt;Salve o arquivo e verifique imediatamente o resultado no browser:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-localhost-5.jpg&#34; alt=&#34;Ionic 2 - Screenshot 5 localhost&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O Loading √© um √≥timo componente para fornecer feedback visual para o usu√°rio, indicando que alguma atividade est√° sendo executada em background. Nada mais √© que uma caixa de di√°logo que bloqueia qualquer atividade do usu√°rio at√© que determinada a√ß√£o seja conclu√≠da. A nossa caixa de di√°logo inclui um spinner e um texto indicativo por padr√£o, mas todas essas op√ß√µes podem ser customizadas para atender melhor a necessidade do seu app.&lt;/p&gt;

&lt;p&gt;Incluir um Loading √© extremamente simples: Primeiro n√≥s importamos o componente &lt;strong&gt;LoadingController&lt;/strong&gt; da biblioteca &lt;strong&gt;ionic-angular&lt;/strong&gt; e injetamos o objeto no m√©todo construtor. Em seguida, inicializamos o Loading com uma mensagem de feedback e depois apresentamos ele atrav√©s do m√©todo &lt;strong&gt;present&lt;/strong&gt;. Depois n√≥s retiramos o componente da tela caso tenhamos sucesso na requisi√ß√£o atrav√©s do m√©todo &lt;strong&gt;dismiss&lt;/strong&gt;. Simples!&lt;/p&gt;

&lt;p&gt;Perceba tamb√©m que, como boa pr√°tica, movemos a requisi√ß√£o da API para um m√©todo chamado &lt;strong&gt;fetchContent&lt;/strong&gt; que √© ent√£o chamado imediatamente no construtor. Outra novidade √© a inclus√£o do tipo de retorno do m√©todo, tipado como &lt;strong&gt;void&lt;/strong&gt;. Se voc√™ vem de linguagens como Java, sabe que esta √© uma maneira de dizer que o m√©todo n√£o retorna nada, apenas executa uma a√ß√£o.&lt;/p&gt;

&lt;h4 id=&#34;4-2-8211-eventos-html&#34;&gt;4.2 &amp;#8211; Eventos html&lt;/h4&gt;

&lt;p&gt;Antes de passarmos para a pr√≥xima etapa, vamos incluir um evento nas c√©lulas. Fa√ßa a seguinte modifica√ß√£o em &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-item *ngFor=&#34;let feed of feeds&#34; (click)=&#34;itemSelected(feed)&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Queremos executar alguma a√ß√£o sempre que o usu√°rio clicar/tocar em uma das c√©lulas. Conseguimos isso fazendo o &lt;em&gt;binding&lt;/em&gt; do m√©todo &lt;strong&gt;itemSelected&lt;/strong&gt; no evento html &lt;strong&gt;click&lt;/strong&gt; e passando o feed como argumento. Essa sintaxe de incluir eventos html dentro de par√™nteses √© chamado de &lt;em&gt;Event Binding&lt;/em&gt; no Angular.&lt;/p&gt;

&lt;p&gt;Agora basta incluir o m√©todo dentro da classe:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;itemSelected (feed):void {
    alert(feed.data.url);
  } 
&lt;/pre&gt;

&lt;p&gt;Salve o arquivo e clique em cima de alguma c√©lula. A url do post ser√° exibida em um alert!&lt;/p&gt;

&lt;h3 id=&#34;passo-5-8211-exibindo-o-conte√∫do-de-uma-url-no-browser&#34;&gt;Passo 5 &amp;#8211; Exibindo o conte√∫do de uma url no browser&lt;/h3&gt;

&lt;p&gt;Agora que voc√™ j√° entendeu como capturar uma a√ß√£o do usu√°rio, vamos prosseguir com as funcionalidades do nosso app e fazer com que o post seja exibido no browser.&lt;/p&gt;

&lt;h4 id=&#34;5-1-8211-instalando-plugin-inappbrowser&#34;&gt;5.1 &amp;#8211; Instalando plugin InAppBrowser&lt;/h4&gt;

&lt;p&gt;Em uma nova aba do terminal, entre na pasta do projeto e digite o seguinte:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic plugin add cordova-plugin-inappbrowser&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Este plugin nos possibilita abrir sites externos em um browser diretamente do app. Mas s√≥ ser√° poss√≠vel testar essa funcionalidade se voc√™ fizer o build para testar no emulador ou no seu pr√≥prio dispositivo. Para isso, digite a seguinte instru√ß√£o no terminal caso voc√™ possua um iPhone:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic platform add ios&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ou, caso tenha um dispositivo Android:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic platform add android&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Agora altere o par√¢metro do m√©todo no arquivo &lt;strong&gt;home.html&lt;/strong&gt; para enviar apenas a url como argumento:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-item *ngFor=&#34;let feed of feeds&#34; (click)=&#34;itemSelected(feed.data.url)&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;E agora basta fazer as seguintes altera√ß√µes em &lt;strong&gt;home.ts&lt;/strong&gt;. Primeiro, importar a classe do plugin:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { InAppBrowser } from &#39;ionic-native&#39;;
&lt;/pre&gt;

&lt;p&gt;Em seguida, fa√ßa a seguinte altera√ß√£o no m√©todo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;itemSelected (url: string):void {
   let browser = new InAppBrowser(url, &#39;_system&#39;);
 }
&lt;/pre&gt;

&lt;p&gt;Pronto! Agora s√≥ resta testar se a funcionalidade est√° sendo executada conforme desejado.&lt;/p&gt;

&lt;h4 id=&#34;5-2-8211-executando-testes-nas-plataformas&#34;&gt;5.2 &amp;#8211; Executando testes nas plataformas&lt;/h4&gt;

&lt;p&gt;Para instalar o emulador do iOS e preparar o ambiente para testes no seu pr√≥prio iPhone, basta digitar no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm -g install ios-sim ios-deploy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora digite a instru√ß√£o abaixo e, caso tudo tenha dado certo, √© prov√°vel que voc√™ veja o aplicativo abrindo no seu emulador:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic run ios&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Caso esteja com o celular conectado ao computador atrav√©s da porta USB, o deploy ser√° automaticamente executado no seu iPhone. Se mesmo assim voc√™ encontrar dificuldades, tente digitar:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic run ios --device&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para testar no Android, apenas digite:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic run android&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Maiores detalhes sobre deploy e testes em ambas plataformas voc√™ encontra &lt;a href=&#34;https://ionicframework.com/docs/v2/resources/developer-tips/&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Caso voc√™ tenha conseguido testar com sucesso, deve ter percebido que, ao clicar em uma das c√©lulas, h√° um certo delay entre o momento do clique e o carregamento da p√°gina. Para corrigir isso, apenas insira o conte√∫do da c√©lula dentro de um &lt;strong&gt;bot√£o&lt;/strong&gt; (button) com o atributo &lt;strong&gt;ion-item&lt;/strong&gt;, dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;button ion-item *ngFor=&#34;let feed of feeds&#34; (click)=&#34;itemSelected(feed.data.url)&#34;&amp;gt;
    &amp;lt;ion-thumbnail item-left&amp;gt;
       &amp;lt;img [src]=&#34;feed.data.thumbnail&#34;&amp;gt;
    &amp;lt;/ion-thumbnail&amp;gt;
    &amp;lt;h2&amp;gt;{{feed.data.title}}&amp;lt;/h2&amp;gt;
    &amp;lt;p&amp;gt;{{feed.data.domain}}&amp;lt;/p&amp;gt;
 &amp;lt;/button&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Agora o delay n√£o s√≥ √© removido como √© adicionado um overlay em tom mais escuro na c√©lula quando a mesma √© pressionada.&lt;/p&gt;

&lt;p&gt;Tem mais uma coisa que est√° incomodando: Perceba que os posts sem imagens est√£o quebrando nosso layout e deixando a nossa lista com aspecto pouco profissional. Vamos mudar isso incluindo o seguinte trecho de c√≥digo dentro do m√©todo &lt;strong&gt;subscribe&lt;/strong&gt; de &lt;strong&gt;fecthContent&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.feeds.forEach((e, i, a) =&amp;gt; {
   if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) { 
      e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
   }
 })
&lt;/pre&gt;

&lt;p&gt;Utilizamos o m√©todo &lt;strong&gt;forEach&lt;/strong&gt; do JavaScript para iterar pelo array de feeds e verificar quais itens est√£o sem imagem. Em seguida, para estes itens, inclu√≠mos uma imagem padr√£o do pr√≥prio reddit, que est√° dispon√≠vel em um link p√∫blico e ir√° servir de placeholder.&lt;/p&gt;

&lt;p&gt;Veja o resultado de todas estas modifica√ß√µes rodando em um device iOS:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step5.gif&#34; alt=&#34;Ionic 2 - InAppBrowser&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;passo-6-8211-adicionando-scroll-infinito-na-c√©lula&#34;&gt;Passo 6 &amp;#8211; Adicionando scroll infinito na c√©lula&lt;/h3&gt;

&lt;p&gt;Nosso app est√° ficando bem legal mas ainda necessita de algumas modifica√ß√µes para ficar realmente atrativo. Uma delas √© viabilizar alguma maneira de acessar os posts mais antigos, j√° que nosso app tem uma restri√ß√£o de apenas 25 itens por request. Isto √© muito ruim, pois o usu√°rio fica limitado √† visitar apenas estes itens.&lt;/p&gt;

&lt;p&gt;Se voc√™ explorar a API do reddit vai perceber que ela nos fornece v√°rios par√¢metros do tipo GET para controlar filtros e pagina√ß√µes. Um deles √© chamado &lt;em&gt;after&lt;/em&gt;, que utiliza o o atributo &lt;em&gt;fullName&lt;/em&gt; (jun√ß√£o do tipo do post mais o seu ID) como identificador √∫nico e funciona como √¢ncora para os demais posts.&lt;/p&gt;

&lt;p&gt;Em outras palavras, uma requisi√ß√£o como esta:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://www.reddit.com/new.json?after=t3_57ct5z&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Pode ser lida como: &amp;#8220;_Busque os novos posts que vem depois do post de nome t3&lt;em&gt;57ct5z&lt;/em&gt;&amp;#8221;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fique atento com a forma como voc√™ l√™ a instru√ß√£o pois h√° uma pegadinha: &lt;strong&gt;Depois&lt;/strong&gt; aqui se refere ao array de posts, ou seja, os posts mais velhos e n√£o os mais recentes. Veremos como buscar os mais recentes na pr√≥xima etapa do app&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Agora que voc√™ j√° entendeu a mec√¢nica, vamos come√ßar inserindo o componente respons√°vel por acionar o scroll infinito na nossa p√°gina. Insira a seguinte instru√ß√£o em &lt;strong&gt;home.html&lt;/strong&gt; imediatamente ap√≥s o fim da tag &lt;strong&gt;&lt;ion-list&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;ion-infinite-scroll (ionInfinite)=&#34;doInfinite($event)&#34;&amp;gt;
    &amp;lt;ion-infinite-scroll-content
       loadingText=&#34;Loading more data...&#34;&amp;gt;
    &amp;lt;/ion-infinite-scroll-content&amp;gt;
 &amp;lt;/ion-infinite-scroll&amp;gt; 
&lt;/pre&gt;

&lt;p&gt;E criamos o m√©todo correspondente em nossa classe:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;doInfinite(infiniteScroll) {

    let paramsUrl = (this.feeds.length &amp;gt; 0) ? this.feeds[this.feeds.length - 1].data.name : &#34;&#34;;

      this.http.get(this.olderPosts + paramsUrl).map(res =&amp;gt; res.json())
        .subscribe(data =&amp;gt; {
        
          this.feeds = this.feeds.concat(data.data.children);
          
          this.feeds.forEach((e, i, a) =&amp;gt; {
            if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
              e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
            }
          })
          infiniteScroll.complete();
        }); 
  }  
&lt;/pre&gt;

&lt;p&gt;Por fim, inserimos a url da requisi√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;private olderPosts: string = &#34;https://www.reddit.com/new.json?after=&#34;;
&lt;/pre&gt;

&lt;p&gt;O novo m√©todo √© bem parecido com o &lt;strong&gt;fetchContent&lt;/strong&gt;, com a diferen√ßa de que criamos uma vari√°vel local que guarda o valor do atributo &lt;strong&gt;nome&lt;/strong&gt; do √∫ltimo item do array de feeds e insere este valor no fim da url. Em seguida, pegamos o array resultante da requisi√ß√£o e adicionamos no fim do array original atrav√©s do m√©todo &lt;strong&gt;concat&lt;/strong&gt; do JavaScript. Note tamb√©m que utilizamos o m√©todo &lt;strong&gt;complete&lt;/strong&gt; do componente, indicando que o mesmo deve ser removido da view.&lt;/p&gt;

&lt;p&gt;O resultado voc√™ confere abaixo:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step6.gif&#34; alt=&#34;Ionic 2 - Infinite Scroll&#34; /&gt;&lt;/p&gt;

&lt;p&gt;E, com isto, inclu√≠mos uma funcionalidade extremamente importante em aplica√ß√µes m√≥veis: A habilidade de adicionar itens em uma lista por demanda, algo que enriquece em muito a experi√™ncia do usu√°rio. Se voc√™ estava esperando instru√ß√µes muito complexas, sinto lhe desapontar!&lt;/p&gt;

&lt;h3 id=&#34;passo-7-8211-atualizando-a-lista-com-pull-to-refresh&#34;&gt;Passo 7 &amp;#8211; Atualizando a lista com pull-to-refresh&lt;/h3&gt;

&lt;p&gt;Da mesma forma que adicionamos uma funcionalidade para carregar posts mais antigos sempre que chegarmos ao fim da nossa lista, precisamos agora viabilizar uma maneira de atualiza-la com os posts mais recentes. Uma excelente maneira de fazer isso √© incluindo o componente &lt;strong&gt;Refresher&lt;/strong&gt; na nossa aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;O Refresher √© um componente que adiciona o recurso de &lt;strong&gt;pull-to-refresh&lt;/strong&gt; √† nossa lista. O pull-to-refresh consiste em manter o dedo pressionado no topo de uma lista e arrast√°-la at√© uma determinada posi√ß√£o at√© que um evento seja disparado. No nosso caso, utilizaremos esse evento para inserir os posts mais recentes no in√≠cio do array, ao contr√°rio do que fizemos com o componente InfiniteScroll.&lt;/p&gt;

&lt;p&gt;Sem mais delongas, vamos come√ßar inserindo o markup do componente antes da tag &lt;strong&gt;&lt;ion-list&gt;&lt;/strong&gt; no arquivo &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;ion-refresher (ionRefresh)=&#34;doRefresh($event)&#34;&amp;gt;
    &amp;lt;ion-refresher-content
       pullingIcon=&#34;arrow-dropdown&#34;
       pullingText=&#34;Pull to refresh&#34;
       refreshingSpinner=&#34;circles&#34;
       refreshingText=&#34;Refreshing...&#34;&amp;gt;
    &amp;lt;/ion-refresher-content&amp;gt;
 &amp;lt;/ion-refresher&amp;gt; 
&lt;/pre&gt;

&lt;p&gt;Diferentemente do InfiniteScroll, desta vez eu inclu√≠ alguns par√¢metros adicionais, como os textos de in√≠cio e fim do evento, o formato padr√£o do spinner, o √≠cone da seta, etc.&lt;/p&gt;

&lt;p&gt;A url da requisi√ß√£o tamb√©m precisa ser diferente, uma vez que iremos buscar os itens mais novos. Utilizaremos ent√£o o par√¢metro &lt;em&gt;before&lt;/em&gt; oferecido pelo Reddit, fazendo com que a nossa nova url fique assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;private newerPosts: string = &#34;https://www.reddit.com/new.json?before=&#34;;
&lt;/pre&gt;

&lt;p&gt;Por fim, inserimos o m√©todo na classe:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;doRefresh(refresher) {

    let paramsUrl = this.feeds[0].data.name;

    this.http.get(this.newerPosts + paramsUrl).map(res =&amp;gt; res.json())
      .subscribe(data =&amp;gt; {
      
        this.feeds = data.data.children.concat(this.feeds);
        
        this.feeds.forEach((e, i, a) =&amp;gt; {
          if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
            e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
          }
        })
        refresher.complete();
      });
  } 

&lt;/pre&gt;

&lt;p&gt;Perceba como o m√©todo √© similar √†quele que escrevemos para o scroll infinito. A √∫nica diferen√ßa est√° na vari√°vel de par√¢metro (que agora guarda o nome do primeiro item da lista como refer√™ncia) e a maneira como concatenamos o array de feeds, inserindo os novos dados no in√≠cio da lista e n√£o no fim. Observe tamb√©m a instru√ß√£o &lt;strong&gt;refresher.complete&lt;/strong&gt;, que informa que opera√ß√£o foi conclu√≠da e que o componente pode ser removido da view.&lt;/p&gt;

&lt;p&gt;Nossa aplica√ß√£o agora utiliza o refresher para atualizar a lista com os novos posts, veja:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step7.gif&#34; alt=&#34;Ionic 2 - Refresher&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;passo-8-8211-filtrando-a-lista-com-uma-action-sheet&#34;&gt;Passo 8 &amp;#8211; Filtrando a lista com uma Action Sheet&lt;/h3&gt;

&lt;p&gt;Agora que a nossa lista tem potencial para aumentar cada vez mais de tamanho, seria interessante termos uma op√ß√£o de filtrar posts pertencentes √† determinadas categorias. Podemos fazer isso facilmente com uma &lt;strong&gt;Action Sheet&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No arquivo &lt;strong&gt;home.html&lt;/strong&gt; vamos incluir um bot√£o do lado direito da nossa AppBar/NavBar que ser√° respons√°vel por disparar o m√©todo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-header&amp;gt;
   &amp;lt;ion-navbar&amp;gt;
       &amp;lt;ion-title&amp;gt;My Feed Reader&amp;lt;/ion-title&amp;gt;
       &amp;lt;ion-buttons end&amp;gt;
          &amp;lt;button ion-button icon-only (click)=&#34;showFilters()&#34;&amp;gt;
              &amp;lt;ion-icon name=&#34;funnel&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;
          &amp;lt;/button&amp;gt;
       &amp;lt;/ion-buttons&amp;gt; 
   &amp;lt;/ion-navbar&amp;gt;
&amp;lt;/ion-header&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Observe o atributo &lt;strong&gt;end&lt;/strong&gt; na tag &lt;strong&gt;&lt;ion-buttons&gt;&lt;/strong&gt;, indicando que o bot√£o deve ser posicionado √† direita, ou seja, no fim da barra de navega√ß√£o. O atributo &lt;strong&gt;start&lt;/strong&gt; posicionaria o bot√£o √† esquerda. O &lt;strong&gt;&lt;ion-buttons&gt;&lt;/strong&gt; funciona como um container de bot√µes. No nosso caso, s√≥ precisamos de um que ser√° representado por um √≠cone (por isso o atributo &lt;strong&gt;icon-only&lt;/strong&gt;). Fizemos o binding do m√©todo &lt;strong&gt;showFilters&lt;/strong&gt; no evento &lt;strong&gt;click&lt;/strong&gt; e escolhemos o √≠cone de nome &lt;strong&gt;funnel&lt;/strong&gt; para representar o filtro.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Os √≠cones no Ionic s√£o uma implementa√ß√£o pr√≥pria do que chamamos de &lt;strong&gt;icon fonts&lt;/strong&gt;, ou seja, fontes que cont√©m s√≠mbolos ao inv√©s de texto ou n√∫meros e que podem ser estilizados utilizando CSS. Utilizar esse tipo de fonte √© conveniente pois reduz a necessidade de imagens, o que torna nosso aplicativo ligeiramente mais r√°pido e menos pesado. Para ter acesso √† lista de √≠cones do Ionic 2, d√™ uma olhada &lt;a href=&#34;https://ionicframework.com/docs/v2/ionicons/&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Antes de incluir nosso m√©todo, precisamos de mais duas vari√°veis. Uma que ser√° respons√°vel por guardar a vers√£o √≠ntegra do nosso array de feeds (sem nenhum filtro) e uma outra que ser√° um booleano, com a fun√ß√£o de indicar se h√° ou n√£o um filtro ativo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;public noFilter: Array&amp;lt;any&amp;gt;;
 public hasFilter: boolean = false;
&lt;/pre&gt;

&lt;p&gt;Com isso podemos incluir as seguintes instru√ß√µes no final do m√©todo &lt;strong&gt;subscribe&lt;/strong&gt; das fun√ß√µes &lt;strong&gt;doRefresh&lt;/strong&gt; e &lt;strong&gt;doInfinite&lt;/strong&gt;, com a finalidade de remover qualquer filtro ativo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.noFilter = this.feeds;
 this.hasFilter = false;
&lt;/pre&gt;

&lt;p&gt;Por fim, vamos agora incluir o m√©todo &lt;strong&gt;showFilters&lt;/strong&gt; na classe:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;showFilters() :void {

    let actionSheet = this.actionSheetCtrl.create({
      title: &#39;Filter options:&#39;,
      buttons: [
        {
          text: &#39;Music&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;music&#34;);
            this.hasFilter = true;
          }
        },
        {
          text: &#39;Movies&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;movies&#34;);
            this.hasFilter = true;
          }
        },        
        {
          text: &#39;Cancel&#39;,
          role: &#39;cancel&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter;
            this.hasFilter = false;
          }
        }
      ]
    });

    actionSheet.present();

  }  
&lt;/pre&gt;

&lt;p&gt;Primeiramente inicializamos o componente com a fun√ß√£o &lt;strong&gt;create&lt;/strong&gt; em uma vari√°vel local. Este componente recebe um t√≠tulo e um array de bot√µes onde cada bot√£o tem, obrigatoriamente, um texto indicativo e um handler que dispara o evento correspondente. Estes bot√µes representam as op√ß√µes que ser√£o apresentadas para o usu√°rio na tela. O c√≥digo do filtro √© autoexplicativo.&lt;/p&gt;

&lt;p&gt;O √∫ltimo bot√£o tem a fun√ß√£o de cancelar a opera√ß√£o e remover qualquer filtro que esteja ativo. Perceba que este bot√£o tem uma propriedade &lt;strong&gt;role&lt;/strong&gt; com o valor de &lt;strong&gt;cancel&lt;/strong&gt;, indicando que adota o comportamento padr√£o da plataforma e sempre estar√° posicionado como √∫ltima op√ß√£o da lista. Vale ressaltar que se o usu√°rio clicar fora da Action Sheet, ou seja, no overlay da camada de fundo, a a√ß√£o ser√° interpretada como um cancelamento (o mesmo comportamento do bot√£o com a role &amp;#8220;cancel&amp;#8221;).&lt;/p&gt;

&lt;p&gt;Em seguida adicionamos o m√©todo &lt;strong&gt;actionSheet.present&lt;/strong&gt; para que o componente seja apresentado na tela.&lt;/p&gt;

&lt;p&gt;Por enquanto s√≥ estamos filtrando os subreddits com as categorias m√∫sica ou filmes, mas nada nos impede de inserir mais op√ß√µes de filtro no componente. O c√≥digo final da nossa classe fica assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Component } from &#39;@angular/core&#39;;
import { NavController, LoadingController, ActionSheetController } from &#39;ionic-angular&#39;;
import { Http } from &#39;@angular/http&#39;;
import &#39;rxjs/add/operator/map&#39;;
import { InAppBrowser } from &#39;ionic-native&#39;;

@Component({
  selector: &#39;page-home&#39;,
  templateUrl: &#39;home.html&#39;
})
export class HomePage {

  public feeds: Array&amp;lt;any&amp;gt;;
  private url: string = &#34;https://www.reddit.com/new.json&#34;;
  private newerPosts: string = &#34;https://www.reddit.com/new.json?before=&#34;;  
  private olderPosts: string = &#34;https://www.reddit.com/new.json?after=&#34;;

  public hasFilter: boolean = false;
  public noFilter: Array&amp;lt;any&amp;gt;;

  constructor(public navCtrl: NavController, public http: Http, 
       public loadingCtrl: LoadingController, public actionSheetCtrl: ActionSheetController) {

    this.fetchContent();

  }

  fetchContent ():void {
    let loading = this.loadingCtrl.create({
      content: &#39;Fetching content...&#39;
    });

    loading.present();

    this.http.get(this.url).map(res =&amp;gt; res.json())
      .subscribe(data =&amp;gt; {
        this.feeds = data.data.children;

        this.feeds.forEach((e, i, a) =&amp;gt; {
          if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
            e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
          }
        })

        this.noFilter = this.feeds;  

        loading.dismiss();
      });  
  }

  doRefresh(refresher) {

    let paramsUrl = this.feeds[0].data.name;

    this.http.get(this.newerPosts + paramsUrl).map(res =&amp;gt; res.json())
      .subscribe(data =&amp;gt; {
      
        this.feeds = data.data.children.concat(this.feeds);
        
        this.feeds.forEach((e, i, a) =&amp;gt; {
          if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
            e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
          }
        })

        this.noFilter = this.feeds;
        this.hasFilter = false;

        refresher.complete();
      });
  }  

  doInfinite(infiniteScroll) {

    let paramsUrl = (this.feeds.length &amp;gt; 0) ? this.feeds[this.feeds.length - 1].data.name : &#34;&#34;;

      this.http.get(this.olderPosts + paramsUrl).map(res =&amp;gt; res.json())
        .subscribe(data =&amp;gt; {
        
          this.feeds = this.feeds.concat(data.data.children);
          
          this.feeds.forEach((e, i, a) =&amp;gt; {
            if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
              e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
            }
          })

          this.noFilter = this.feeds;
          this.hasFilter = false;          
          
          infiniteScroll.complete();
        }); 
  }   

  itemSelected (url: string):void {
    let browser = new InAppBrowser(url, &#39;_system&#39;);
  } 
  
  showFilters() :void {

    let actionSheet = this.actionSheetCtrl.create({
      title: &#39;Filter options:&#39;,
      buttons: [
        {
          text: &#39;Music&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;music&#34;);
            this.hasFilter = true;
          }
        },
        {
          text: &#39;Movies&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;movies&#34;);
            this.hasFilter = true;
          }
        },
        {
          text: &#39;Games&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;gaming&#34;);
            this.hasFilter = true;
          }
        },
        {
          text: &#39;Pictures&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;pics&#34;);
            this.hasFilter = true;
          }
        },                
        {
          text: &#39;Ask Reddit&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter.filter((item) =&amp;gt; item.data.subreddit.toLowerCase() === &#34;askreddit&#34;);
            this.hasFilter = true;
          }
        },        
        {
          text: &#39;Cancel&#39;,
          role: &#39;cancel&#39;,
          handler: () =&amp;gt; {
            this.feeds = this.noFilter;
            this.hasFilter = false;
          }
        }
      ]
    });

    actionSheet.present();

  }        

}

&lt;/pre&gt;

&lt;p&gt;Por quest√µes de bom senso, seria interessante indicar ao usu√°rio quando um filtro est√° ou n√£o ativo alterando a cor do √≠cone do funil. Podemos fazer isso utilizando o conceito de &lt;em&gt;Property binding&lt;/em&gt; explicado mais acima, com a diferen√ßa de que agora a propriedade ser√° atribu√≠da baseada em uma condi√ß√£o.&lt;/p&gt;

&lt;p&gt;insira o seguinte c√≥digo na tag &lt;strong&gt;&lt;ion-icon&gt;&lt;/strong&gt; em &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-icon name=&#34;funnel&#34; [style.color]=&#34;hasFilter ? &#39;orange&#39; : &#39;inherit&#39;&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;
&lt;/pre&gt;

&lt;p&gt;O resultado pode ser visto abaixo:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step8.gif&#34; alt=&#34;Ionic 2 - Action Sheet&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;passo-9-8211-adicionando-um-provider-e-uma-barra-de-busca&#34;&gt;Passo 9 &amp;#8211; Adicionando um provider e uma barra de busca&lt;/h3&gt;

&lt;p&gt;Apesar de termos avan√ßado com sucesso at√© aqui, tenho certeza de que a quantidade de c√≥digo repetitivo presente em nossa classe deve ter te causado um certo inc√¥modo. Podemos muito bem mover a responsabilidade de conex√£o com a API para um outro servi√ßo externo, no intuito de evitar o &lt;a href=&#34;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34; target=&#34;_blank&#34;&gt;DRY&lt;/a&gt; e a propaga√ß√£o de &lt;a href=&#34;https://en.wikipedia.org/wiki/Code_smell&#34; target=&#34;_blank&#34;&gt;code smell&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;9-1-8211-criando-um-injectable&#34;&gt;9.1 &amp;#8211; Criando um Injectable&lt;/h4&gt;

&lt;p&gt;O Angular nos permite criar uma classe com a anota√ß√£o &lt;strong&gt;@Injectable&lt;/strong&gt; para estes cen√°rios. Esse tipo de classe tamb√©m s√£o conhecidos como &lt;strong&gt;Providers&lt;/strong&gt; e podem tanto ser criados &amp;#8220;na m√£o&amp;#8221; quanto com a ajuda do CLI. Digite no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic g provider RedditService&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Esse c√≥digo cria uma pasta &lt;strong&gt;providers&lt;/strong&gt; no nosso projeto com um arquivo de nome &lt;strong&gt;reddit-service.ts&lt;/strong&gt;, onde o Ionic insere alguns c√≥digos de boilerplate para facilitar nossa vida. Altere seu conte√∫do conforme abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { Injectable } from &#39;@angular/core&#39;;
import { Http } from &#39;@angular/http&#39;;
import &#39;rxjs/add/operator/map&#39;;

@Injectable()
export class RedditService {

  private feeds: Array&amp;lt;any&amp;gt;;

  constructor(private http: Http) {}

  fetchData(url: string): Promise&amp;lt;any&amp;gt; {
    
    return new Promise(resolve =&amp;gt; {

      this.http.get(url).map(res =&amp;gt; res.json())
        .subscribe(data =&amp;gt; {
          this.feeds = data.data.children;
          
          this.feeds.forEach((e, i, a) =&amp;gt; {
            if (!e.data.thumbnail || e.data.thumbnail.indexOf(&#39;b.thumbs.redditmedia.com&#39;) === -1 ) {  
              e.data.thumbnail = &#39;http://www.redditstatic.com/icon.png&#39;;
            }
          })
          resolve(this.feeds);
        }, err =&amp;gt; console.log(err));          
    });
  }
}
&lt;/pre&gt;

&lt;p&gt;Replicamos boa parte do c√≥digo presente no m√©todo &lt;strong&gt;fetchContent&lt;/strong&gt; da classe &lt;strong&gt;home.ts&lt;/strong&gt; aqui no nosso m√©todo &lt;strong&gt;fetchData&lt;/strong&gt;, com algumas diferen√ßas. A primeira delas √© a j√° citada anota√ß√£o &lt;strong&gt;@Injectable()&lt;/strong&gt; presente antes do nome da classe, o que nos permite mover a defini√ß√£o do servi√ßo para o construtor de &lt;strong&gt;home.ts&lt;/strong&gt; dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;constructor(public redditService: RedditService) {}
&lt;/pre&gt;

&lt;p&gt;Isso evita que tenhamos de instanciar o servi√ßo utilizando &lt;strong&gt;new&lt;/strong&gt;. Clique &lt;a href=&#34;https://en.wikipedia.org/wiki/Dependency_injection&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; para saber mais sobre &lt;strong&gt;Inje√ß√£o de Depend√™ncia&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Outra mudan√ßa importante √© que, por conveni√™ncia, a assinatura do m√©todo retorna uma &lt;strong&gt;Promise&lt;/strong&gt; do tipo &lt;strong&gt;any&lt;/strong&gt; (para evitar que tenhamos qualquer erro em tempo de compila√ß√£o) ao inv√©s de um &lt;strong&gt;Observable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Por fim, para utilizar este servi√ßo em nossa classe &lt;strong&gt;home.ts&lt;/strong&gt; precisamos inclu√≠-lo no arquivo &lt;strong&gt;app.module.ts&lt;/strong&gt;, dentro da pasta &lt;strong&gt;src/app&lt;/strong&gt;. Este arquivo faz uso da anota√ß√£o &lt;strong&gt;@NgModule&lt;/strong&gt;, onde todas as depend√™ncias da aplica√ß√£o devem ser declaradas previamente:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import { NgModule } from &#39;@angular/core&#39;;
import { IonicApp, IonicModule } from &#39;ionic-angular&#39;;
import { MyApp } from &#39;./app.component&#39;;
import { HomePage } from &#39;../pages/home/home&#39;;
//indicamos o source path do arquivo:
import { RedditService } from &#39;../providers/reddit-service&#39;;

@NgModule({
  declarations: [
    MyApp,
    HomePage
  ],
  imports: [
    IonicModule.forRoot(MyApp)
  ],
  bootstrap: [IonicApp],
  entryComponents: [
    MyApp,
    HomePage
  ],
//declaramos o nome do nosso provider:
  providers: [RedditService]
})
export class AppModule {}
&lt;/pre&gt;

&lt;p&gt;Com isso √© poss√≠vel escrever os m√©todos da nossa classe &lt;strong&gt;home.ts&lt;/strong&gt; da seguinte maneira:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.redditService.fetchData(this.url).then(data =&amp;gt; {
     this.feeds = data;
     this.noFilter = this.feeds;
     loading.dismiss();
 })
&lt;/pre&gt;

&lt;p&gt;Repare que al√©m de muito mais simples, agora utilizamos o m√©todo &lt;strong&gt;then&lt;/strong&gt; ao inv√©s do &lt;strong&gt;subscribe&lt;/strong&gt; para recuperar os dados do servi√ßo e preencher nosso array.&lt;/p&gt;

&lt;h4 id=&#34;9-2-8211-adicionando-uma-searchbar&#34;&gt;9.2 &amp;#8211; Adicionando uma SearchBar&lt;/h4&gt;

&lt;p&gt;Para aplicativos que utilizam listas e exibem conte√∫do sob demanda √© uma boa pr√°tica adicionar algum recurso de busca para que o usu√°rio procure informa√ß√µes com base em uma palavra espec√≠fica ou sequ√™ncia de caracteres. Para tal, o Ionic fornece um componente chamado &lt;strong&gt;SearchBar&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Para evitar conflitos com as a√ß√µes da nossa lista, escolhi inserir o componente diretamente na AppBar/NavBar da aplica√ß√£o. Para tal, insira o seguinte bloco de c√≥digo dentro da tag &lt;strong&gt;&lt;ion-title&gt;&lt;/strong&gt; em &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;ion-searchbar 
    [(ngModel)]=&#34;searchTerm&#34;
    (ionInput)=&#34;filterItems()&#34; 
    placeholder=&#34;Type here...&#34; &amp;gt;
 &amp;lt;/ion-searchbar&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Perceba que a jun√ß√£o das sintaxes de &lt;em&gt;Event binding&lt;/em&gt; e &lt;em&gt;Input binding&lt;/em&gt; do &lt;strong&gt;ngModel&lt;/strong&gt; nos permite replicar o t√£o famoso recurso de &lt;em&gt;Two-way data binding&lt;/em&gt; no Angular 2.&lt;/p&gt;

&lt;p&gt;Agora inclua o seguinte m√©todo em &lt;strong&gt;home.ts&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;filterItems() {
    this.hasFilter = false;
    this.feeds = this.noFilter.filter((item) =&amp;gt; {
        return item.data.title.toLowerCase().indexOf(this.searchTerm.toLowerCase()) &amp;gt; -1;
    });
  }
&lt;/pre&gt;

&lt;p&gt;Veja o resultado rodando em um iPhone:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step9.gif&#34; alt=&#34;Ionic 2 - SearchBar&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Antes de concluir eu gostaria de mostrar um recurso fornecido pelo framework que nos permite testar o comportamento e visual da nossa aplica√ß√£o em diferentes plataformas chamado &lt;strong&gt;Ionic Lab&lt;/strong&gt;. Caso ainda esteja com o servidor ativo, basta inserir &lt;strong&gt;/ionic-lab&lt;/strong&gt; ap√≥s o n√∫mero da porta na url ou digitar &lt;code&gt;ionic serve --lab&lt;/code&gt; no terminal. O resultado √© o seguinte:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-ionic-lab.jpg&#34; alt=&#34;Ionic 2 - Ionic Lab&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Na imagem acima voc√™ consegue visualizar o nosso aplicativo no &lt;strong&gt;iOS&lt;/strong&gt;, &lt;strong&gt;Android&lt;/strong&gt; e &lt;strong&gt;Windows Phone&lt;/strong&gt;! O Ionic n√£o apenas executa o build da aplica√ß√£o com uma √∫nica base de c√≥digo para dispositivos diferentes como tamb√©m se adapta ao comportamento e estilo visual de cada um, numa tentativa de fazer com que o usu√°rio sempre tenha uma experi√™ncia condizente com a plataforma que utiliza. Perceba, por exemplo, como o spinner, a barra de busca, os √≠cones e estilo da lista s√£o diferentes entre as plataformas. No caso do iOS, s√£o inclu√≠dos at√© mesmo as setas na lateral direita da c√©lula, o que √© comum na plataforma. Al√©m de tudo isso, poder testar aplicativos dessa maneira e ainda tirar proveito do recurso de &lt;em&gt;LiveReload&lt;/em&gt; enquanto voc√™ est√° programando √© algo realmente especial.&lt;/p&gt;

&lt;p&gt;Estamos chegando ao fim da cria√ß√£o do nosso aplicativo. Vimos que, apenas com pequenos ajustes, foi poss√≠vel obter um c√≥digo mais modular e ainda incluir o componente &lt;strong&gt;SearchBar&lt;/strong&gt; com o estilo visual adequado para cada plataforma. Tudo isso de maneira simples e r√°pida, gra√ßas ao casamento perfeito entre o &lt;strong&gt;Angular&lt;/strong&gt; e os componentes estilizados fornecido pelo &lt;strong&gt;Ionic&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;passo-10-8211-melhorando-a-experi√™ncia-do-usu√°rio&#34;&gt;Passo 10 &amp;#8211; Melhorando a experi√™ncia do usu√°rio&lt;/h3&gt;

&lt;p&gt;Mesmo com todos os recursos que o Ionic 2 nos oferece √© sempre importante garantir a melhor experi√™ncia poss√≠vel para o usu√°rio fazendo otimiza√ß√µes gerais, como customiza√ß√£o de UI, ajustes no comportamento de componentes, ganho de performance, etc. Essa √∫ltima etapa ser√° dedicada √† este prop√≥sito.&lt;/p&gt;

&lt;h4 id=&#34;10-1-8211-controlando-o-scroll&#34;&gt;10.1 &amp;#8211; Controlando o scroll&lt;/h4&gt;

&lt;p&gt;Notei alguns problemas ao utilizar a Action Sheet para filtrar a lista quando o scroll est√° numa posi√ß√£o muito abaixo, pois a a√ß√£o de carregar posts antigos pode ser disparada indevidamente. Podemos evitar isso fazendo a lista rolar para o topo antes de executar qualquer filtro. Mas como controlar isso programaticamente?&lt;/p&gt;

&lt;p&gt;O componente &lt;strong&gt;Content&lt;/strong&gt; (que gere a tag &lt;strong&gt;&lt;ion-content&gt;&lt;/strong&gt; do nosso template html) disponibiliza um m√©todo de controle do scroll chamado &lt;strong&gt;scrollToTop&lt;/strong&gt;. Podemos inserir o c√≥digo no in√≠cio do m√©todo &lt;strong&gt;showFilters&lt;/strong&gt; da Action Sheet dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.content.scrollToTop();
&lt;/pre&gt;

&lt;p&gt;Antes precisamos obter uma refer√™ncia √† este componente utilizando a anota√ß√£o &lt;strong&gt;@ViewChild&lt;/strong&gt; da biblioteca &lt;strong&gt;@angular/core&lt;/strong&gt; (algo similar √† maneira como protocolos funcionam no iOS):&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;@ViewChild(Content) content: Content;
&lt;/pre&gt;

&lt;p&gt;Agora a lista vai rolar para o topo sempre que acionarmos a Action Sheet!&lt;/p&gt;

&lt;h4 id=&#34;10-2-8211-melhorando-a-busca-com-observables&#34;&gt;10.2 &amp;#8211; Melhorando a busca com Observables&lt;/h4&gt;

&lt;p&gt;Apesar de termos nossa barra de buscas funcionando perfeitamente, a cada caractere digitado estamos emitindo uma nova requisi√ß√£o, o que √© desnecess√°rio. Mas h√° uma forma elegante de lidar com isso utilizando Observables, uma vez que o evento s√≥ ser√° disparado quando uma requisi√ß√£o for considerada v√°lida.&lt;/p&gt;

&lt;p&gt;O que queremos fazer √© monitorar o componente de duas maneiras: A primeira √© oferecendo um tempo maior para que o usu√°rio conclua a digita√ß√£o da palavra que est√° buscando atrav√©s do m√©todo &lt;strong&gt;debounceTime&lt;/strong&gt; e a segunda √© utilizando o m√©todo &lt;strong&gt;distinctUntilChanged&lt;/strong&gt; que ir√° comparar a palavra (ou a sequ√™ncia de caracteres) digitada com a √∫ltima que foi procurada, evitando que uma nova requisi√ß√£o seja emitida para um resultado que j√° se encontra na tela.&lt;/p&gt;

&lt;p&gt;Iremos utilizar o &lt;strong&gt;FormControl&lt;/strong&gt; de &lt;strong&gt;@angular/forms&lt;/strong&gt; que ir√° conectar uma vari√°vel da classe ao input presente no nosso html (similar √† maneira como o &lt;em&gt;Two way binding&lt;/em&gt; funciona).&lt;/p&gt;

&lt;p&gt;Inclua as seguintes instru√ß√µes no componente &lt;strong&gt;&lt;ion-searchbar&gt;&lt;/strong&gt; em &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;ion-searchbar 
    [(ngModel)]=&#34;searchTerm&#34;
    [formControl]=&#34;searchTermControl&#34; 
    [showCancelButton]=true
    (ionInput)=&#34;filterItems()&#34; 
    placeholder=&#34;Type here...&#34; &amp;gt;
 &amp;lt;/ion-searchbar&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Note que al√©m do &lt;strong&gt;formControl&lt;/strong&gt; tamb√©m atribu√≠mos o valor &lt;strong&gt;true&lt;/strong&gt; √† propriedade &lt;strong&gt;showCancelButton&lt;/strong&gt;, que ir√° apresentar um bot√£o para cancelar a busca e retirar o teclado digital da tela.&lt;/p&gt;

&lt;p&gt;E a seguinte instru√ß√£o que ir√° controlar quando devemos disparar a busca:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;this.searchTermControl = new FormControl();
  this.searchTermControl.valueChanges.debounceTime(1000).distinctUntilChanged().subscribe(search =&amp;gt; {
    if (search !== &#39;&#39; &amp;&amp; search) {
      this.filterItems();
    }
  })  
&lt;/pre&gt;

&lt;p&gt;E com isso o componente se torna mais coerente com a expectativa do usu√°rio, que ir√° perceber um ganho de performance ao filtrar resultados em uma lista com muitas c√©lulas.&lt;/p&gt;

&lt;h4 id=&#34;10-3-8211-ajustando-o-visual-dos-componentes-com-css&#34;&gt;10.3 &amp;#8211; Ajustando o visual dos componentes com CSS&lt;/h4&gt;

&lt;p&gt;Nosso aplicativo agora depende de algumas mudan√ßas visuais para corrigir alguns pequenos detalhes. O primeiro deles √© referente ao Android. O Ionic 2, ao rodar em um dispositivo Android, oferece automaticamente suporte ao &lt;strong&gt;&lt;a href=&#34;https://material.google.com/&#34; target=&#34;_blank&#34;&gt;Material Design&lt;/a&gt;&lt;/strong&gt; do &lt;strong&gt;Google&lt;/strong&gt; (uma linguagem visual que sintetiza princ√≠pios cl√°ssicos daquilo que considera o &amp;#8220;bom design&amp;#8221;). Em resumo, o Material Design se preocupa em criar uma experi√™ncia unificada de layout entre as plataformas que rodam o sistema operacional do Android. &lt;a href=&#34;https://material.google.com/#introduction-principles&#34; target=&#34;_blank&#34;&gt;Aqui&lt;/a&gt; voc√™ pode conhecer melhor sobre seus princ√≠pios fundamentais.&lt;/p&gt;

&lt;p&gt;Um dos pontos de aten√ß√£o √© a maneira como os textos devem ser apresentados ao usu√°rio. O Material Design trabalha com a no√ß√£o de hierarquia baseada em tons e opacidade. Em outras palavras, textos prim√°rios (que representam t√≠tulos e informa√ß√µes de destaque) recebem 87% de opacidade enquanto subt√≠tulos recebem 54%. Veja abaixo:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic-2-material-design-spec.jpg&#34; alt=&#34;Ionic 2 - Material Design Spec&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Se voc√™ for inspecionar as cores presentes nos textos das c√©lulas (utilize o &lt;em&gt;Devtools&lt;/em&gt; para tal) vai notar que elas n√£o seguem este ponto da especifica√ß√£o da linguagem. O texto principal, por exemplo, utiliza preto puro e √© sempre bom (fica aqui a dica) &lt;a href=&#34;https://ianstormtaylor.com/design-tip-never-use-black&#34; target=&#34;_blank&#34;&gt;evitar&lt;/a&gt; preto puro em seus designs sempre que poss√≠vel.&lt;/p&gt;

&lt;p&gt;Diferentemente do Android, a preocupa√ß√£o do iOS est√° voltada para o conte√∫do, por isso n√£o existe nenhuma linguagem t√£o restritiva quanto o Material Design na plataforma. No entanto, irei replicar a mudan√ßa visual que faremos para o Android tamb√©m no iOS, tornando nossos textos ainda mais agrad√°veis para leitura.&lt;/p&gt;

&lt;p&gt;Em &lt;strong&gt;home.scss&lt;/strong&gt; inclua o seguinte c√≥digo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;// iOS &amp; Android only
  .item-md, .item-ios {
      h2 {
          color: rgba($color: #000, $alpha: .87);
      }
      p {
          color: rgba($color: #000, $alpha: .54);
      }
  }
&lt;/pre&gt;

&lt;p&gt;Repare que podemos fazer o nesting dos elementos por estar utilizando &lt;strong&gt;Sass&lt;/strong&gt;. Tamb√©m perceba que aplicamos a altera√ß√£o apenas para as plataformas Android e iOS mas n√£o para Windows Phone. As classes voc√™ pode obter facilmente ao inspecionar o DOM no console do browser.&lt;/p&gt;

&lt;p&gt;Outro problema aparente s√£o os t√≠tulos dos posts que somem ao atingir a borda da c√©lula. Precisamos incluir uma quebra de linha para que eles sejam apresentados por completo. Dessa vez iremos aplicar a altera√ß√£o √†s tr√™s plataformas:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;// iOS, Android &amp; WP
  .item-md, .item-ios, .item-wp {
      h2, p {
          white-space: normal;
      }
  }
&lt;/pre&gt;

&lt;p&gt;Por fim, gostaria de melhorar a maneira como a barra de busca se apresenta na vers√£o iOS. Ela est√° pequena e diminui ainda mais de tamanho quando o bot√£o de cancelar est√° ativo. Tamb√©m seria interessante escurecer um pouco mais a opacidade do background para lhe conferir maior destaque:&lt;/p&gt;

&lt;p&gt;Inclua o seguinte c√≥digo (desta vez aplicado apenas para o iOS):&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;// iOS only
  .toolbar-ios { 
      ion-title {
          padding: 0 90px 0 1px;  
      } 
      .searchbar-ios .searchbar-input {
          background: rgba($color: #000, $alpha: 0.12);            
      }
  }
&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Caso prefira, voc√™ tamb√©m pode alterar o valor das vari√°veis Sass do Ionic. &lt;a href=&#34;https://ionicframework.com/docs/v2/theming/overriding-ionic-variables/&#34; target=&#34;_blank&#34;&gt;Neste link&lt;/a&gt; h√° uma lista de todas elas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;10-4-8211-ajustes-finais-no-html&#34;&gt;10.4 &amp;#8211; Ajustes finais no html&lt;/h4&gt;

&lt;p&gt;Vamos iniciar modificando a cor da NavBar. Inclua o seguinte atributo na tag &lt;strong&gt;&lt;ion-navbar&gt;&lt;/strong&gt; em &lt;strong&gt;home.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-navbar color=&#34;secondary&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Como estamos utilizando &lt;strong&gt;Sass&lt;/strong&gt;, fazemos uma refer√™ncia √† vari√°vel &lt;strong&gt;secondary&lt;/strong&gt; do array &lt;strong&gt;colors&lt;/strong&gt; que est√° listado no arquivo &lt;strong&gt;src/theme/variable.scss&lt;/strong&gt;. Isso significa que voc√™ pode alterar o valor da cor na vari√°vel ao inv√©s de escrever diretamente no template html.&lt;/p&gt;

&lt;p&gt;Agora eu gostaria de inserir um √≠cone na frente do meu endere√ßo de dom√≠nio (que representa meu subt√≠tulo na lista) sempre que a categoria estiver relacionada com alguma das listadas na nossa Action Sheet. Eu posso controlar esse comportamento utilizando a diretiva de html do Angular chamada &lt;strong&gt;ngSwitch&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Substitua esta linha:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;p&amp;gt;{{feed.data.domain}}&amp;lt;/p&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Por esta instru√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;¬†&amp;lt;div [ngSwitch]=feed.data.subreddit.toLowerCase()&amp;gt;
   &amp;lt;p *ngSwitchCase=&#34;&#39;askreddit&#39;&#34;&amp;gt;&amp;lt;ion-icon name=&#34;help-circle&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;&amp;nbsp;{{feed.data.domain}}&amp;lt;/p&amp;gt;
   &amp;lt;p *ngSwitchCase=&#34;&#39;gaming&#39;&#34;&amp;gt;&amp;lt;ion-icon name=&#34;logo-playstation&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;&amp;nbsp;{{feed.data.domain}}&amp;lt;/p&amp;gt;
   &amp;lt;p *ngSwitchCase=&#34;&#39;music&#39;&#34;&amp;gt;&amp;lt;ion-icon name=&#34;musical-notes&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;&amp;nbsp;{{feed.data.domain}}&amp;lt;/p&amp;gt;
   &amp;lt;p *ngSwitchCase=&#34;&#39;movies&#39;&#34;&amp;gt;&amp;lt;ion-icon name=&#34;film&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;&amp;nbsp;{{feed.data.domain}}&amp;lt;/p&amp;gt;
   &amp;lt;p *ngSwitchCase=&#34;&#39;pics&#39;&#34;&amp;gt;&amp;lt;ion-icon name=&#34;image&#34;&amp;gt;&amp;lt;/ion-icon&amp;gt;&amp;nbsp;{{feed.data.domain}}&amp;lt;/p&amp;gt;
   &amp;lt;p *ngSwitchDefault&amp;gt;{{feed.data.domain}}&amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Observe que os √≠cones apenas ser√£o aplicados no caso de coincidirem com os argumentos. Em caso contr√°rio, ser√° exibido apenas o texto sem nenhum √≠cone, conforme descrito na cl√°usula &lt;strong&gt;ngSwitchDefault&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Outra coisa que me incomoda √© o componente &lt;strong&gt;Refresher&lt;/strong&gt; ser acionado com muito pouco esfor√ßo. Eu sinto que o usu√°rio poderia puxar um pouco mais a lista para evitar que o evento seja disparado com muita facilidade. Podemos modificar isso alterando a propriedade &lt;strong&gt;pullMin&lt;/strong&gt;, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ion-refresher (ionRefresh)=&#34;doRefresh($event)&#34; [pullMin]=90&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Alteramos para 90 dpi a dist√¢ncia m√≠nima que o usu√°rio deve alcan√ßar para disparar o evento. A dist√¢ncia padr√£o √© 60.&lt;/p&gt;

&lt;p&gt;Seria tamb√©m interessante alterar a cor da barra de status da aplica√ß√£o para a cor branca, j√° que o fundo da NavBar agora est√° colorido. Como a barra de status √© um componente nativo, para modific√°-lo precisaremos instalar um plugin do &lt;strong&gt;Cordova&lt;/strong&gt;. Verifique se ele j√° est√° instalado procurando no arquivo &lt;strong&gt;package.json&lt;/strong&gt; por &amp;#8220;&lt;strong&gt;cordova-plugin-statusbar&lt;/strong&gt;&amp;#8220;. Caso contr√°rio, digite no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ionic plugin add cordova-plugin-statusbar&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;E insira a seguinte instru√ß√£o dentro do m√©todo construtor do arquivo &lt;strong&gt;src/app/app.component.ts&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;StatusBar.backgroundColorByHexString(&#39;#ffffff&#39;);
&lt;/pre&gt;

&lt;p&gt;E agora veja como ficou o visual final da nossa aplica√ß√£o rodando em um iPhone 6:&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;border: 1px solid #666&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/ionic2-step10.gif&#34; alt=&#34;Ionic 2 - UX enhancement&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;10-5-8211-aumentando-o-desempenho&#34;&gt;10.5 &amp;#8211; Aumentando o desempenho&lt;/h4&gt;

&lt;p&gt;Se voc√™ pensa em evoluir de um prot√≥tipo para um aplicativo real, se preocupar com o seu desempenho √© tarefa essencial. Abaixo eu listo algumas sugest√µes que podem ajudar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WKWebView&lt;/strong&gt; &amp;#8211; Recentemente o time do Ionic tornou poss√≠vel rodar os aplicativos iOS utilizando o browser WKWebView (evolu√ß√£o do antigo browser UIWebView). Este novo engine oferece aos aplicativos iOS um ganho de performance muito superior ao antigo browser, principalmente na experi√™ncia com listas. Para instalar o plugin, digite: &lt;code&gt;ionic plugin add https://github.com/driftyco/cordova-plugin-wkwebview-engine.git --save&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Crosswalk&lt;/strong&gt; &amp;#8211; Como o Android tem algumas limita√ß√µes de desempenho que podem ser encontradas em alguns devices (principalmente nos antigos devido √†s v√°rias vers√µes de sistema existentes), fica dif√≠cil garantir que o aplicativo ir√° rodar exatamente da maneira como queremos. O Crosswalk √© um browser moderno que √© empacotado junto com o seu app no momento que voc√™ faz o build para Android. Isso significa que, independente do device do usu√°rio, ele estar√° executando o app no Crosswalk. O ganho de performance √© vis√≠vel mas ele pode aumentar o tamanho final da sua aplica√ß√£o. Para instalar, digite: &lt;code&gt;ionic plugin add cordova-plugin-crosswalk-webview&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Virtual Scroll&lt;/strong&gt; &amp;#8211; O nosso aplicativo pode adicionar novos itens √† lista de v√°rias maneiras. Isso significa que, quanto mais a lista aumenta de tamanho, mais itens precisar√£o ser renderizados, o que ir√° consumir muita mem√≥ria e impactar o desempenho geral. O Virtual Scroll foi criado com o intuito de minimizar este impacto, uma vez que ele apenas renderiza uma quantidade &amp;#8220;x&amp;#8221; de c√©lulas na tela, suficientes para preenche-la. Dessa forma elas podem ser reutilizadas, o que evita uma sobrecarga de mem√≥ria (comportamento muito similar ao de uma &lt;strong&gt;ListView&lt;/strong&gt; no iOS). Para entender melhor sobre como utilizar o Virtual Scroll, visite &lt;a href=&#34;https://ionicframework.com/docs/v2/api/components/virtual-scroll/VirtualScroll/&#34; target=&#34;_blank&#34;&gt;este link&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;considera√ß√µes-finais&#34;&gt;Considera√ß√µes finais&lt;/h2&gt;

&lt;p&gt;Sim, √© um post gigantesco. Mas a minha meta ao escrev√™-lo era gerar o m√°ximo de valor para profissionais que ainda n√£o tiveram contato com o Ionic 2 ou aqueles que desejam entender melhor como ele funciona, uma vez que somos carentes de tutoriais mais densos escritos sobre o assunto em portugu√™s.&lt;/p&gt;

&lt;p&gt;Seja voc√™ um desenvolvedor, gerente de produto ou CIO de uma empresa, √© muito importante compreender que ainda √© dif√≠cil nos dias de hoje suportar a grande diversidade de aparelhos e plataformas existentes em um ecossistema que vive em constante mudan√ßa. Os custos para manter uma equipe multidisciplinar sempre atualizada (e com boa sinergia) √© alt√≠ssimo e isso se reflete no or√ßamento repassado para o cliente. Optar pelo desenvolvimento de aplicativos h√≠bridos √©, antes de mais nada, uma op√ß√£o estrat√©gica que deve ser avaliada de acordo com o contexto de cada projeto. Muitas das vezes os argumentos √† favor do desenvolvimento nativo n√£o se justificam, principalmente se o projeto n√£o demanda um &lt;em&gt;frame rate&lt;/em&gt; muito alto (como aplicativos com muitas anima√ß√µes, transi√ß√µes customizadas ou jogos).&lt;/p&gt;

&lt;p&gt;Outro ponto que precisa ser esclarecido √© que o Ionic tem um papel important√≠ssimo no que se refere √† uma fase que √© t√£o ou mais importante que o desenvolvimento em si: A &lt;strong&gt;prototipa√ß√£o&lt;/strong&gt;. Poder validar o produto com o cliente ainda em fase inicial √© um grande diferencial. Algo que lhe confere uma posi√ß√£o de destaque em um mercado extremamente competitivo.&lt;/p&gt;

&lt;h2 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;H√° muito espa√ßo para melhorias e recursos adicionais que podem ser implementados no aplicativo que criamos. Caso tope desafios, voc√™ pode tentar os seguintes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Incluir data de publica√ß√£o do post na lista;&lt;/li&gt;
&lt;li&gt;Incluir recurso de navega√ß√£o entre telas (deixei o NavController l√° de prop√≥sito);&lt;/li&gt;
&lt;li&gt;Oferecer op√ß√£o de alterar url para exibir resultados de um determinado subreddit;&lt;/li&gt;
&lt;li&gt;Considerar cen√°rios onde o usu√°rio pode perder a conex√£o com a internet;&lt;/li&gt;
&lt;li&gt;Op√ß√£o de utilizar algum recurso nativo do smartphone (ex: C√¢mera).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para facilitar o seu aprendizado, o projeto est√° dispon√≠vel no &lt;strong&gt;&lt;a href=&#34;https://github.com/carloscabral/my-reader---Ionic2&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;&lt;/strong&gt; separado por branches. Por exemplo, caso voc√™ queira ter acesso ao passo 4 do tutorial, baixa digitar no terminal &lt;code&gt;git checkout step4&lt;/code&gt; e o c√≥digo fonte referente √† este passo estar√° dispon√≠vel.&lt;/p&gt;

&lt;p&gt;Bons estudos e at√© a pr√≥xima!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se voc√™ ficou curioso sobre a cria√ß√£o de aplicativos multiplataforma que utilizam tecnologia da web, saiba que o Ionic n√£o √© a √∫nica op√ß√£o existente. Leia meu post sobre &lt;strong&gt;&lt;a href=&#34;http://tableless.com.br/react-native-construa-aplicacoes-moveis-nativas-com-javascript/&#34; target=&#34;_blank&#34;&gt;React Native&lt;/a&gt;&lt;/strong&gt; e descubra como j√° √© poss√≠vel criar uma aplica√ß√£o 100% nativa utilizando JavaScript.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Come√ßando com o Angular Material‚Ää ‚Äì Parte 1</title>
      <link>http://tableless.com.br/comecando-com-o-angular-material-parte-1/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/comecando-com-o-angular-material-parte-1/</guid>
      <description>

&lt;p&gt;Decidi come√ßar essa s√©rie de posts sobre¬†&lt;strong&gt;Angular&lt;/strong&gt; pois ultimamente √© o que mais estou estudando, e pirando tamb√©m rs, estou &lt;strong&gt;viciado&lt;/strong&gt; no angular confesso, e n√£o podia deixar de escrever sobre o¬†&lt;strong&gt;angular material&lt;/strong&gt; pois ele realmente me surpreendeu com sua facilidade que junto a sua beleza o torna bem &lt;strong&gt;interessante&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Vou escrever uma s√©rie com alguns posts baseados no que eu aprendi do angular material nesses tempos estudando na internet, espero que possa ajudar uma galera que queria muito conhecer por√©m n√£o sabia por onde come√ßar ou tem dificuldade de achar algo em portugu√™s.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Lembrando que esta s√©rie exige um certo conhecimento de AngularJS para ser compreendida ok?&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;parte-1-baixar-e-instalar&#34;&gt;Parte 1‚Ää‚Äî‚ÄäBaixar e instalar&lt;/h4&gt;

&lt;p&gt;Vamos come√ßar criando uma &lt;strong&gt;nova pasta&lt;/strong&gt; e come√ßando um &lt;strong&gt;projeto npm¬†&lt;/strong&gt;dentro dela, veja:&lt;/p&gt;

&lt;pre&gt;cd Desktop
mkdir project
cd project
npm init&lt;/pre&gt;

&lt;p&gt;V√£o aparecer algumas op√ß√µes do projeto npm pra preencher, preencha conforme queira ou pule apertando ‚Äú&lt;strong&gt;enter&lt;/strong&gt;‚Äù.&lt;/p&gt;

&lt;p&gt;Agora vamos instalar o &lt;strong&gt;angular,&lt;/strong&gt; o &lt;strong&gt;angular material&lt;/strong&gt; e as &lt;strong&gt;depend√™ncias do material&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;npm install angular angular-material angular-animate angular-aria --save&lt;/pre&gt;

&lt;p&gt;Legal, instalamos as depend√™ncias que precisamos para come√ßar nosso projeto, agora &lt;strong&gt;precisamos linkar&lt;/strong&gt; com nosso arquivo html certo? Ent√£o vamos come√ßar linkando &lt;strong&gt;5 arquivos de depend√™ncias&lt;/strong&gt;, um de css que dever√° ser linkado no &lt;strong&gt;&lt;head&gt;&lt;/strong&gt;, e outros 4 scripts que linkamos &lt;strong&gt;antes da tag de fechamento do body&lt;/strong&gt;, vejamos:&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;html ng-app=&#34;app&#34;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;node_modules/angular-material/angular-material.css&#34;&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular/angular.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular-animate/angular-animate.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular-aria/angular-aria.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular-material/angular-material.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Feito isso precisamos &lt;strong&gt;chamar o m√≥dulo&lt;/strong&gt; e &lt;strong&gt;incluir a depend√™ncia do angular-material&lt;/strong&gt;, veja:&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--pre&#34;&gt;&amp;lt;script&amp;gt;
    angular.module(&#39;app&#39;, [&#39;ngMaterial&#39;])
        .run(function(){
        console.log(&#39;Funcionando!&#39;)
    });
&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Vejam que eu chamei nosso &lt;strong&gt;ng-app&lt;/strong&gt; na tag &lt;strong&gt;&lt;html&gt;&lt;/strong&gt;, isto √© muito importante em nosso passo a passo pois vamos chamar o nosso m√≥dulo por ela, ent√£o como chamei na tag &lt;strong&gt;&lt;html&gt;&lt;/strong&gt; ele vai se estender por toda a p√°gina procurando por diretivas, controllers etc.&lt;/p&gt;

&lt;p&gt;Ainda neste exemplo, escrevi uma fun√ß√£o que quando a p√°gina √© carregada ela dispara uma mensagem no console, &lt;strong&gt;voc√™ pode testar em sua m√°quina¬†&lt;/strong&gt;para assimilar o que eu fiz at√© aqui.&lt;/p&gt;

&lt;p&gt;Antes de dar continuidade ao artigo vou deixar o &lt;strong&gt;link da documenta√ß√£o oficial&lt;/strong&gt; do angular material que √© bem explicativa e com certeza vai te ajudar bastante nessa jornada de aprendizado, al√©m do que vamos usar bastante os exemplos de l√° nos artigos:&lt;/p&gt;

&lt;p style=&#34;text-align: center;&#34;&gt;
  &lt;a href=&#34;https://material.angularjs.org/&#34;&gt;https://material.angularjs.org/&lt;/a&gt;
&lt;/p&gt;

&lt;h4 id=&#34;action-graf-h4-graf-after-mixtapeembed&#34;&gt;Action {.graf&amp;ndash;h4.graf-after&amp;ndash;mixtapeEmbed}&lt;/h4&gt;

&lt;p class=&#34;graf-after--h4&#34;&gt;
  Ambiente preparado tudo funcionando? Legal, bora pra &lt;strong&gt;action&lt;/strong&gt;, eu ia postar somente at√© aqui na parte 1 pro post n√£o ficar gigante, por√©m acho que ficaria¬†&lt;strong&gt;meio chato&lt;/strong&gt; porque sei que se voc√™ est√° lendo isso quer ir logo pra &lt;strong&gt;action!¬†&lt;/strong&gt;Ent√£o decidi postar um combo parte 1 + parte 2, segura:
&lt;/p&gt;

&lt;h4 id=&#34;layout&#34;&gt;Layout&lt;/h4&gt;

&lt;p class=&#34;graf-after--h4&#34;&gt;
  No Angular Material podemos usar algumas diretivas pr√© prontas para criarmos interfaces. Usando estas diretivas html podemos definir valores (ex:&lt;strong&gt;layout=‚Äùrow‚Äù&lt;/strong&gt;), que v√£o nos ajudar bastante a separar as coisas do jeito mais f√°cil para trabalharmos, pois os atributos v√£o definir o layout baseado nas¬†&lt;strong&gt;classes css que j√° existem no angular material&lt;/strong&gt;. Conforme a documenta√ß√£o, segue abaixo uma tabela contendo algumas especifica√ß√µes:
&lt;/p&gt;&lt;figure&gt; 

&lt;

div class=&amp;#8221;aspectRatioPlaceholder is-locked&amp;#8221;&gt;
  
&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image aligncenter&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*Zh1tH1Cuk-V7ljIIKukbXQ.png&#34; /&gt;
  
&lt;/figure&gt; 

Ent√£o, como o angular material **tem uma api flexbox** podemos setar uma div**row**, e dentro dela **criar 2 divs** com um ‚Äú**flex=‚Äù50‚Äù**‚Äù, assim cada div dentro da div **row** ter√° o espa√ßo de **50% da tela** uma ao lado da outra, veja o exemplo:

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;div layout=&#34;row&#34;&amp;gt;
    &amp;lt;div flex=&#34;50&#34;&amp;gt;Primeira div&amp;lt;/div&amp;gt;
    &amp;lt;div flex=&#34;50&#34;&amp;gt;Segunda div&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&lt;/pre&gt;

Abaixo temos algumas **especifica√ß√µes de breakpoints** que tamb√©m ser√£o bem importante pra criarmos nossos apps e deixarmos tudo responsivo, vamos **associar breakpoints** **a defini√ß√µes de mediaquery**, veja:&lt;figure&gt; 

&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*gRZXmgUUu4Nu48zmSVKATA.png&#34; /&gt;
  
&lt;/figure&gt; 

Agora podemos **combinar o breakpoint junto a api layout** e pronto, temos responsividade em nosso app¬†üòÄ veja como funciona:&lt;figure&gt; 

&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*bF72D6KkAPhg1IS9jcjvBA.png&#34; /&gt;
  
&lt;/figure&gt; 

Com essas informa√ß√µes j√° podemos come√ßar a fazer algumas coisas como fazer a div aparecer com uma estrutura default para quando estiver no¬†**desktop**, e outra quando estiver no **celular** apenas manipulando a api **layout**, veja:

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;md-content class=&#34;md-padding&#34; layout-xs=&#34;column&#34; layout=&#34;row&#34;&amp;gt;&amp;lt;/md-content&amp;gt;&lt;/pre&gt;

Veja que eu pedi para por default o **md-content** vir como **row**, e quando a tela for menor que **599px** como vimos nos breakpoints setando o **xs**, ele mude para **column**.

#### Layout-align

&lt;p class=&#34;graf-after--h4&#34;&gt;
  Podemos tamb√©m alinhar elementos em nossa p√°gina com a api &lt;strong&gt;layout-align&lt;/strong&gt;, veja um exemplo:
&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;div layout=&#34;row&#34; layout-align=&#34;center&#34;&amp;gt;
    Hello World!
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;Podemos tamb√©m &lt;strong&gt;combinar com os breakpoints&lt;/strong&gt; caso for preciso para deixarmos responsivo, veja a tabela:&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*hltJORr9bcACAOwG3EkQlg.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h4 id=&#34;graf-h4-graf-after-figure&#34;&gt;{.graf&amp;ndash;h4.graf-after&amp;ndash;figure}&lt;/h4&gt;

&lt;h4 id=&#34;graf-h4-graf-after-figure-1&#34;&gt;{.graf&amp;ndash;h4.graf-after&amp;ndash;figure}&lt;/h4&gt;

&lt;h4 id=&#34;show-hide-graf-h4-graf-after-figure&#34;&gt;Show &amp;amp; Hide {.graf&amp;ndash;h4.graf-after&amp;ndash;figure}&lt;/h4&gt;

&lt;p&gt;&lt;p class=&#34;graf-after--h4&#34;&gt;
  Outra coisa muito interessante na parte de layouts do angular material √© o¬†&lt;strong&gt;show &amp;amp; hide&lt;/strong&gt;, uma api que pode ser usada para &lt;strong&gt;mostrar ou esconder&lt;/strong&gt; algum elemento conforme a resolu√ß√£o:
&lt;/p&gt;&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*eBPJTlusl1IEA7gGhRxV0w.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Reproduza o c√≥digo abaixo para ver o comportamento da p√°gina quando¬†&lt;strong&gt;diminu√≠mos a janela do navegador&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;div layout=&#34;row&#34;&amp;gt;
    &amp;lt;div hide show-gt-sm flex&amp;gt;
        Mostrar somente em dispositivos gt-sm
    &amp;lt;/div&amp;gt;
    &amp;lt;div hide-gt-sm flex&amp;gt;
        Mostrar em resolu√ß√£o pequena e m√©dia&amp;lt;br&amp;gt;
        Esconder em dispositivos gt-sm        
    &amp;lt;/div&amp;gt;
    &amp;lt;div show hide-gt-md flex&amp;gt;
        Mostrar em resolu√ß√£o pequena e m√©dia&amp;lt;br&amp;gt;
        Esconder em dispositivos gt-md        
    &amp;lt;/div&amp;gt;
    &amp;lt;div hide show-md flex&amp;gt;
        Mostrar somente em resolu√ß√µes m√©dias&amp;lt;br&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div hide show-gt-lg flex&amp;gt;
        Mostrar em resolu√ß√µes maiores que 1200px de largura&amp;lt;br&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;Viu s√≥? Facilitou bastante o jeito como podemos construir nossas estruturas responsivas. Aprendemos hoje como colocar e iniciar o angular-material no seu projeto, e um pouco mais sobre a parte de layout e layout responsivo, creio que no pr√≥ximo post vamos poder brincar com coisas mais legais, por√©m essa parte √© &lt;strong&gt;essencial para qualquer pessoa que quer aprender o angular material&lt;/strong&gt;, sem ela fica muito dif√≠cil de trabalharmos.&lt;/p&gt;

&lt;p&gt;Pe√ßo desculpas &lt;strong&gt;pelo tamanho do post&lt;/strong&gt; porque creio que tenha ficado meio enorme rs e isso n√£o foi &lt;strong&gt;absolutamente nada&lt;/strong&gt; do que o angular-material pode fazer, espero que tenha contribu√≠do com seu conhecimento, e no pr√≥ximo post vou explicando um pouco sobre os services do angular material,&lt;strong&gt;qualquer feedback ser√° bem-vindo&lt;/strong&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Angular JS ‚Äì Service x Factory</title>
      <link>http://tableless.com.br/angular-js-service-x-factory/</link>
      <pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/angular-js-service-x-factory/</guid>
      <description>

&lt;h1 id=&#34;angular-js-service-x-factory&#34;&gt;Angular JS ‚Äì Service x Factory&lt;/h1&gt;

&lt;p&gt;Qual a diferen√ßa entre service e factory no AngularJS? Esta √© uma pergunta muito comum entre os desenvolvedores que est√£o usando o AngularJS.&lt;/p&gt;

&lt;p&gt;Mas antes de entrar neste assunto, vamos revisar como definir e usar &lt;code&gt;.service&lt;/code&gt; e &lt;code&gt;.factory&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Um &lt;code&gt;.service&lt;/code&gt; √© um m√©todo no nosso m√≥dulo principal (app), que recebe um nome e uma fun√ß√£o que o definem.&lt;/p&gt;

&lt;p&gt;Podemos definir um &lt;code&gt;.service&lt;/code&gt; assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;(function() {
 &#39;use strict&#39;;
 
angular
       .module(&#39;meuApp&#39;) // Define a qual m√≥dulo seu .service pertence
       .service(&#39;MeuService&#39;, MeuService); //Define o nome a fun√ß√£o do seu .service
 
       MeuService.$inject = [&#39;$http&#39;]; //Lista de depend√™ncias
 
       function MeuService($http) {
 
         var vm = this;
 
         //
         vm.fazerAlgumaCoisa = fazerAlgumaCoisa;
 
         //Implementa√ß√£o das fun√ß√µes
         function fazerAlgumaCoisa() {
           console.log(&#39;Fiz alguma coisa&#39;);
         }
           
       }
})();

&lt;/pre&gt;

&lt;p&gt;Uma vez definido, n√≥s podemos injetar e usar este .service em outros componentes, como por exemplo: Directives, Controllers e Filters. Basta coloc√°-lo como depend√™ncia. Veja o c√≥digo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;(function() {
    &#39;use strict&#39;;
 
    angular
        .module(&#39;meuApp&#39;)
        .controller(&#39;MeuController&#39;, MeuController);
 
    MeuController.$inject = [&#39;MeuService&#39;]; // Injetamos o service
 
    /* @ngInject */
    //Injetamos o service
    function MeuController(MeuService) {
        var vm = this;
 
        MeuService.fazerAlgumaCoisa(); // Vai executar o console.log(&#39;Fiz Alguma coisa!&#39;)
        
    }
})();
&lt;/pre&gt;

&lt;p&gt;Se at√© ai est√° tudo certo, ent√£o √≥timo! Agora vamos definir uma &lt;code&gt;.factory&lt;/code&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;(function() {
    &#39;use strict&#39;;

    angular
        .module(&#39;meuApp&#39;)
        .factory(&#39;minhaFactory&#39;, minhaFactory);

    minhaFactory.$inject = [&#39;$http&#39;];

    /* @ngInject */
    function minhaFactory($http) {
        var service = {
            fazerAlgumaCoisa: fazerAlgumaCoisa
        };

        return service;

        function fazerAlgumaCoisa() {
          console.log(&#39;Fiz alguma coisa&#39;);
        }
    }
})();
&lt;/pre&gt;

&lt;p&gt;Novamente: &lt;code&gt;.factory()&lt;/code&gt; √© um m√©todo em nosso m√≥dulo principal(app), e a factory tamb√©m recebe um nome e uma fun√ß√£o que a define. Da mesma forma que¬†injetamos¬†o .service, podemos injetar a &lt;code&gt;.factory&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;qual-√©-a-diferen√ßa&#34;&gt;Qual √© a diferen√ßa?&lt;/h3&gt;

&lt;p&gt;Observando bem o c√≥digo, voc√™ deve ter percebido que ao inv√©s de trabalhar com o ‚Äúthis‚Äù (var &lt;strong&gt;vm&lt;/strong&gt;= &lt;strong&gt;this&lt;/strong&gt;) na factory, n√≥s estamos retornando um objeto literal. Por qu√™?&lt;/p&gt;

&lt;p&gt;O que acontece √© que um &lt;strong&gt;.service √© uma fun√ß√£o construtora&lt;/strong&gt;, enquanto um .factory n√£o √©. Em algum lugar no c√≥digo fonte do AngularJS, existe um¬†c√≥digo que chama o &lt;strong&gt;Object.create()&lt;/strong&gt; com a fun√ß√£o construtora de um .service quando este √© instanciado.&lt;/p&gt;

&lt;p&gt;Entretanto, um &lt;strong&gt;.factory √© somente uma fun√ß√£o que √© chamada&lt;/strong&gt;, por este motivo precisamos retornar um objeto.&lt;/p&gt;

&lt;p&gt;Para ficar um pouco mais claro, vamos dar uma olhada no c√≥digo do Angular JS. Veja uma .factory&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function factory(name, factoryFn, enforce) {
  return provider(name, {
    $get: enforce !== false ? enforceReturnValue(name, factoryFn) : factoryFn
  });
}
&lt;/pre&gt;

&lt;p&gt;A fun√ß√£o factory recebe o nome, e uma outra fun√ß√£o para definir a nossa .factory.&lt;/p&gt;

&lt;p&gt;Basicamente essa fun√ß√£o factory retorna um provider com o mesmo nome, e esse provider tem o m√©todo $get, que nesse caso √© a nossa fun√ß√£o passada para a factory.&lt;/p&gt;

&lt;p&gt;Em outras palavras, se n√≥s injetarmos¬†‚ÄòminhaFactory‚Äô em algum lugar, o que acontece √©:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;minhaFactoryProvider.$get();
&lt;/pre&gt;

&lt;p&gt;Certo! Fun√ß√µes Factory apenas s√£o chamadas, mas e o .service?&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function service(name, constructor) {
  return factory(name, [&#39;$injector&#39;, function($injector) {
    return $injector.instantiate(constructor);
  }]);
}
&lt;/pre&gt;

&lt;p&gt;Olhando o c√≥digo acima, vemos que quando chamamos a fun√ß√£o service(),¬†o AngularJS chama na verdade a factory().&lt;/p&gt;

&lt;p&gt;Mas ele n√£o passa a fun√ß√£o construtora do nosso .service para a .factory do mesmo jeito. Ele passa tamb√©m uma fun√ß√£o que pede ao injetor(&lt;strong&gt;$injector&lt;/strong&gt;) para &lt;strong&gt;instanciar o objeto dado pela fun√ß√£o construtora&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Em outras palavras: Um .service chama uma .factory predefinida que por sua vez √© acaba sendo um¬†m√©todo $get() no provider correspondente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;$injector.instatiate()&lt;/strong&gt; √© o m√©todo que executa o¬†&lt;strong&gt;Object.create()&lt;/strong&gt; com a fun√ß√£o construtora do .service. √â por isso que usamos o ‚Äúthis‚Äù em um .service!&lt;/p&gt;

&lt;p&gt;No final das contas,¬†n√£o importa oque vamos usar. Um .service ou .factory, no final √© sempre uma fun√ß√£o factory que √© chamada e cria um provider para nosso servi√ßo.&lt;/p&gt;

&lt;h4 id=&#34;dica&#34;&gt;Dica:&lt;/h4&gt;

&lt;p&gt;Se voc√™ j√° est√° de olho no ES6, opte por usar .service! Voc√™ pode usar facilmente classes do ES6 em um .service, oque n√£o √© poss√≠vel em uma .factory() !&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Entendendo as diretivas e fazendo abas com AngularJS</title>
      <link>http://tableless.com.br/diretivas-angularjs-abas/</link>
      <pubDate>Mon, 08 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/diretivas-angularjs-abas/</guid>
      <description>

&lt;p&gt;O AngularJS √© um framework em JavaScript para a cria√ß√£o de web apps. Uma das suas principais caracter√≠sticas √© levar parte da l√≥gica das funcionalidades dos componentes direto para o HTML a partir das diretivas.&lt;/p&gt;

&lt;p&gt;O &lt;a href=&#34;http://twitter.com/rodrigobranas&#34;&gt;Rodrigo Branas&lt;/a&gt; define as diretivas assim:&lt;/p&gt;

&lt;blockquote cite=&#34;rodrigo branas&#34;&gt;
  &lt;p&gt;
    Diretivas s√£o extens√µes da linguagem HTML que permitem a implementa√ß√£o de novos comportamentos de forma declarativa.
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Isso quer dizer que voc√™ n√£o vai precisar escrever um monte de JavaScripts para executar fun√ß√µes que deveriam ser simples, como abas, por exemplo. Vamos fazer agora a funcionalidade de abas, que √© bastante conhecida de todo mundo. Isso vai fazer voc√™ entender melhor como a l√≥gica das diretivas do AngularJS funciona.&lt;/p&gt;

&lt;h2 id=&#34;iniciando-as-abas&#34;&gt;Iniciando as abas&lt;/h2&gt;

&lt;p&gt;Este √© um HTML simples, com o c√≥digo HTML b√°sico que precisamos para formatar o visual e acomodar o conte√∫do das abas.&lt;/p&gt;

&lt;p&gt;Ainda n√£o h√° nenhuma funcionalidade, s√≥ estilo CSS. Vamos inserir as diretivas a partir de agora. se voc√™ for acompanhar por a√≠, basta chamar o AngularJS no seu exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/angularjs/1.3.0-beta.19/angular.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;h2 id=&#34;inserindo-as-diretivas&#34;&gt;Inserindo as diretivas&lt;/h2&gt;

&lt;p&gt;A primeira diretiva que precisamos inserir √© a &lt;code&gt;ng-app&lt;/code&gt; que vai iniciar o AngularJS, avisando que aquele peda√ßo de HTML √© a minha aplica√ß√£o e que ele vai apenas funcionar naquele escopo. Nesse meu exemplo, eu inseri &lt;code&gt;ng-app&lt;/code&gt; no meu div &lt;code&gt;.container&lt;/code&gt; que √© o div que engloba tudo, mas geralmente esse &lt;code&gt;ng-app&lt;/code&gt; √© colocado na tag &lt;code&gt;html&lt;/code&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;container&#34; ng-app&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Se voc√™ quiser ler uma introdu√ß√£o b√°sica sobre AngularJS, leia o artigo do Davi Ferreira, aqui mesmo no Tableless, explicando sobre &lt;a href=&#34;http://tableless.com.br/criando-uma-aplicacao-simples-com-angularjs/&#34; title=&#34;Criando uma aplica√ß√£o simples com AngularJS&#34;&gt;como iniciar uma aplica√ß√£o simples com AngularJS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feito isso, vamos inserir algumas diretivas no HTML que fazemd as abas. Ser√£o duas diretivas: &lt;code&gt;ng-click&lt;/code&gt; e &lt;code&gt;ng-class&lt;/code&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;ul class=&#34;tabs-nav&#34;&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;a ng-click=&#34;tab=1&#34; ng-class=&#34;{&#39;active&#39; : tab==1}&#34;&amp;gt;Aba 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;a ng-click=&#34;tab=2&#34; ng-class=&#34;{&#39;active&#39; : tab==2}&#34;&amp;gt;Aba 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;a ng-click=&#34;tab=3&#34; ng-class=&#34;{&#39;active&#39; : tab==3}&#34;&amp;gt;Aba 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;

&lt;p&gt;A &lt;a href=&#34;https://docs.angularjs.org/api/ng/directive/ngClick&#34;&gt;diretiva ng-click&lt;/a&gt; detecta o click no elemento e executa algum comportamento. Nesse caso ele vai definir uma vari√°vel contextual chamada &lt;code&gt;tab&lt;/code&gt; atribuindo o valor &lt;strong&gt;1, 2 ou 3&lt;/strong&gt; para essa vari√°vel, dependendo da aba clicada.&lt;/p&gt;

&lt;p&gt;A &lt;a href=&#34;https://docs.angularjs.org/api/ng/directive/ngClass&#34;&gt;diretiva ng-class&lt;/a&gt; permite adicionar uma classe dinamicamente no elemento por meio de uma express√£o. O valor que adicionamos ali √© uma condicional: &lt;code&gt;{&#39;active&#39; : tab==1}&lt;/code&gt;. Adicione a classe &lt;strong&gt;active&lt;/strong&gt; se a vari√°vel &lt;strong&gt;tab&lt;/strong&gt; for igual a &lt;strong&gt;1&lt;/strong&gt;. Colocamos essa condi√ß√£o em todas as nossas tabs.&lt;/p&gt;

&lt;p&gt;Agora, para fecharmos, vamos adicionar mais uma diretiva chamada &lt;code&gt;ng-show&lt;/code&gt; nos conte√∫dos das respectivas tabs. A &lt;a href=&#34;https://docs.angularjs.org/api/ng/directive/ngShow&#34;&gt;diretiva ng-show&lt;/a&gt; mostra ou esconde o elemento baseado em alguma express√£o ou condicional. Nesse nosso caso a condicional √© simples: &lt;code&gt;tab == 1&lt;/code&gt;. Se a vari√°vel &lt;strong&gt;tab&lt;/strong&gt; for igual a &lt;strong&gt;1&lt;/strong&gt;, mostra aquele elemento. Fazemos isso em todos os conte√∫do das abas.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;tabs-container&#34;&amp;gt;
    &amp;lt;div class=&#34;tab-content&#34; ng-show=&#34;tab == 1&#34;&amp;gt;
        &amp;lt;h3&amp;gt;Primeira aba&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;Lorem ipsum...&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;tab-content&#34; ng-show=&#34;tab == 2&#34;&amp;gt;
        &amp;lt;h3&amp;gt;Segunda aba&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;Lorem ...&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;tab-content&#34; ng-show=&#34;tab == 3&#34;&amp;gt;
        &amp;lt;h3&amp;gt;Terceira aba&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;Lorem ...&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Perceba que o AngularJS j√° come√ßa a fazer a m√°gica aqui. O &lt;code&gt;ng-click&lt;/code&gt; cria a vari√°vel &lt;code&gt;tab&lt;/code&gt; e j√° atribui um valor. O &lt;code&gt;ng-class&lt;/code&gt; verifica essa vari√°vel, se for igual ao valor determinado, ele adiciona a classe. O &lt;code&gt;ng-show&lt;/code&gt; j√° faz o trabalho de mostrar ou n√£o os conte√∫dos de acordo com a aba clicada, verificando o valor atual da vari√°vel &lt;code&gt;tab&lt;/code&gt;. Sem JavaScript, baby! Veja o exemplo completo abaixo:&lt;/p&gt;

&lt;p&gt;Agora sua cabe√ßa come√ßa a fundir, porque as abas funcionam, perfeitamente e toda a l√≥gica disso est√° no HTML. Isso √© bom? Poxa, talvez sim, talvez n√£o.&lt;/p&gt;

&lt;p&gt;Opa! Faltou uma diretiva&amp;#8230; Essa se chama &lt;code&gt;ng-init&lt;/code&gt;. A &lt;a href=&#34;https://docs.angularjs.org/api/ng/directive/ngInit&#34;&gt;diretiva ng-init&lt;/a&gt; permite avaliar e modificar uma express√£o dentro de um determinado escopo. O escopo, no caso desse exemplo, √© tudo que est√° no &lt;code&gt;ng-app&lt;/code&gt;. Vamos colocar esse atributo junto com o ng-app: &lt;code&gt;ng-init=&amp;quot;tab=1&amp;quot;&lt;/code&gt;. Isso define o valor inicial de 1 para a vari√°vel &lt;strong&gt;tab&lt;/strong&gt;. Isso faz com que nossa primeira tab seja iniciada logo no load do documento.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;A primeira vez que mexi com AngularJS e fiz algo bem b√°sico, logo pensei: essa coisa √© m√°gica. E muitas vezes √©. As diretivas s√£o parte dos princ√≠pios do AngularJS. S√£o elas que far√£o boa parte das m√°gicas. Mas preciso avisar: √© a parte mais dif√≠cil de engolir do AngularJS. Ainda √© muito dif√≠cil para mim assimilar que parte das funcionalidades n√£o s√£o tratadas no JavaScript como fazemos todos os dias, mas no HTML. Isso pode parecer bastante estranho logo no in√≠cio por que a l√≥gica das funcionalidades pode ficar bastante espalhada entre JS e HTML, mas vou voltar a falar sobre isso em outros artigos.&lt;/p&gt;

&lt;p&gt;O exemplo das tabs e uma aplica√ß√£o b√°sica de ToDo que fiz com AngualrJS pode ser visto direto &lt;a href=&#34;https://github.com/diegoeis/angular-tests&#34;&gt;aqui no meu GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando uma aplica√ß√£o Single Page com AngularJS</title>
      <link>http://tableless.com.br/criando-uma-aplicacao-single-page-com-angularjs/</link>
      <pubDate>Sun, 22 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/criando-uma-aplicacao-single-page-com-angularjs/</guid>
      <description>

&lt;p&gt;Um dos melhores conceitos que o AngularJS oferece √© o de &amp;#8220;Single Page&amp;#8221;, onde os recursos apropriados s√£o dinamicamente carregados e adicionados √† p√°gina, conforme necess√°rio, geralmente em resposta a a√ß√µes do usu√°rio.&lt;/p&gt;

&lt;p&gt;Para isto acontecer o framework oferece m√≥dulos que te possibilitam ter apenas uma p√°gina index, com outras p√°ginas de conte√∫do (views) sendo carregadas de acordo com uma espec√≠fica rota (route).&lt;/p&gt;

&lt;p&gt;Deste modo, voc√™ consegue separar bem as responsabilidades do seu projeto, e ficando de f√°cil manuten√ß√£o e codifica√ß√£o dos elementos.&lt;/p&gt;

&lt;p&gt;Vamos parar de enrola√ß√£o e ver como isso funciona em um r√°pido exemplo&amp;#8230;&lt;/p&gt;

&lt;h2 id=&#34;estrutura-de-pastas&#34;&gt;Estrutura de pastas&lt;/h2&gt;

&lt;p&gt;Primeiro criamos uma estrutura de pastas simples para o exemplo:&lt;/p&gt;

&lt;pre&gt;app
    controllers
        controllers.js
    views
        home.html
        sobre.html
        contato.html
    app.js
index.html
&lt;/pre&gt;

&lt;h2 id=&#34;configurando-a-aplica√ß√£o&#34;&gt;Configurando a aplica√ß√£o&lt;/h2&gt;

&lt;p&gt;√â aqui que o show acontece, no arquivo app.js, primeiro, carregamos o m√≥dulo ngRoute que √© usado para &lt;strong&gt;deep-linking URLs&lt;/strong&gt; para controllers e views. Este m√≥dulo observa qual √© url ($location.url()) e tenta mapear o caminho de acordo com alguma rota pr√©-definida, assim ele consegue executar o controller e a view correspondente para cada url.&lt;/p&gt;

&lt;p&gt;Para setarmos uma configura√ß√£o no AngularJS, precisamos usar a fun√ß√£o &lt;strong&gt;config&lt;/strong&gt;, que pode receber diversas propriedades j√° existentes do angular.&lt;/p&gt;

&lt;pre lang=&#34;javascript&#34;&gt;var app = angular.module(&#39;app&#39;,[&#39;ngRoute&#39;]);

app.config(function($routeProvider, $locationProvider)
{
   // remove o # da url
   $locationProvider.html5Mode(true);

   $routeProvider

   // para a rota &#39;/&#39;, carregaremos o template home.html e o controller &#39;HomeCtrl&#39;
   .when(&#39;/&#39;, {
      templateUrl : &#39;app/views/home.html&#39;,
      controller     : &#39;HomeCtrl&#39;,
   })

   // para a rota &#39;/sobre&#39;, carregaremos o template sobre.html e o controller &#39;SobreCtrl&#39;
   .when(&#39;/sobre&#39;, {
      templateUrl : &#39;app/views/sobre.html&#39;,
      controller  : &#39;SobreCtrl&#39;,
   })

   // para a rota &#39;/contato&#39;, carregaremos o template contato.html e o controller &#39;ContatoCtrl&#39;
   .when(&#39;/contato&#39;, {
      templateUrl : &#39;app/views/contato.html&#39;,
      controller  : &#39;ContatoCtrl&#39;,
   })

   // caso n√£o seja nenhum desses, redirecione para a rota &#39;/&#39;
   .otherwise ({ redirectTo: &#39;/&#39; });
});
&lt;/pre&gt;

&lt;p&gt;Neste exemplo recebemos duas propriedades, $locationProvider e $routeProvider.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;$routeProvider&lt;/strong&gt; √© usado para configurar as rotas, que √© exatamente o que estamos fazendo, quando usamos o &lt;strong&gt;.when()&lt;/strong&gt;, definimos a rota (url) e depois um objeto com o templateUrl (url da view) e qual nome do controller correspondente.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;$locationProvider&lt;/strong&gt; √© usado para configurar como a aplica√ß√£o com os chamados &amp;#8220;deep-linking&amp;#8221; ir√£o ser armazenados, no nosso caso n√≥s usamos a propriedade para definir true o modo de html5 (html5Mode), isso faz com que n√£o fique com # nas URLs.&lt;/p&gt;

&lt;h2 id=&#34;definindo-os-controllers&#34;&gt;Definindo os controllers&lt;/h2&gt;

&lt;p&gt;Para criar um controller no angular, podemos usar a inst√¢ncia do m√≥dulo, que definimos anteriormente como &amp;#8220;app&amp;#8221;, deste modo definimos um controller mais modular (√© como prefiro :]) ou de forma tradicional como sempre criamos fun√ß√µes no JavaScript (function HomeCtrl($rootScope, $location){ //do stuff&amp;#8230; }).&lt;/p&gt;

&lt;p&gt;Por ser apenas um exemplo, coloquei todos meus controllers no mesmo arquivo, mas se voc√™ quiser pode colocar em arquivos diferentes, s√≥ n√£o esque√ßa de linka-los √† index.&lt;/p&gt;

&lt;p&gt;Criaremos o primeiro controller com o nome de &amp;#8216;HomeCtrl&amp;#8217;, igual ao que definimos nas rotas mais acima, estamos passando para ele dois par√¢metros, $rootScope e $location, j√° definidos no Angular.&lt;/p&gt;

&lt;pre lang=&#34;javascript&#34;&gt;app.controller(&#39;HomeCtrl&#39;, function($rootScope, $location)
{
   $rootScope.activetab = $location.path();
});

app.controller(&#39;SobreCtrl&#39;, function($rootScope, $location)
{
   $rootScope.activetab = $location.path();
});

app.controller(&#39;ContatoCtrl&#39;, function($rootScope, $location)
{
   $rootScope.activetab = $location.path();
});
&lt;/pre&gt;

&lt;p&gt;Note que para cada controller, realizamos a mesma funcionalidade, para saber em qual p√°gina estou, criei uma vari√°vel no $rootScope, o que a torna global na p√°gina, podendo ser acessada de qualquer local.&lt;/p&gt;

&lt;p&gt;Para a vari√°vel activetab atribu√≠mos o caminho da localiza√ß√£o que estamos, no caso, seria atribu√≠do &amp;#8216;/&amp;#8217; logo quando acessamos o exemplo.&lt;/p&gt;

&lt;h2 id=&#34;eis-a-single-page&#34;&gt;Eis a Single Page!&lt;/h2&gt;

&lt;p&gt;Aqui est√° nossa index, ela servir√° para carregar os nossos templates definidos previamente nas rotas.&lt;/p&gt;

&lt;p&gt;Nesta p√°gina contemos algumas &lt;strong&gt;diretivas&lt;/strong&gt; (directives) do pr√≥prio angular, mas o que √© uma diretiva?&lt;/p&gt;

&lt;p&gt;Basicamente, diretivas em angular s√£o atributos de tags HTMLs que definem o comportamento do mesmo. O pr√≥prio angular j√° oferece muitas diretivas, mas voc√™ pode criar a sua pr√≥pria se desejar.&lt;/p&gt;

&lt;p&gt;O recomendado quando se usa AngularJS e voc√™ deseja fazer altera√ß√µes no DOM, √© criar uma diretiva personalizada para tal&amp;#8230;&lt;/p&gt;

&lt;pre&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html ng-app=&#34;app&#34;&amp;gt;
   &amp;lt;head&amp;gt;
      &amp;lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=utf-8&#34; /&amp;gt;
      &amp;lt;meta http-equiv=&#34;content-language&#34; content=&#34;pt-br&#34; /&amp;gt;
      &amp;lt;title&amp;gt;AngularJS: Single Page com ngView e ngRoute&amp;lt;/title&amp;gt;
      &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&#34; /&amp;gt;
   &amp;lt;/head&amp;gt;

   &amp;lt;body&amp;gt;
      &amp;lt;ul class=&#34;nav nav-tabs&#34;&amp;gt;
         &amp;lt;li ng-class=&#34;{active: activetab == &#39;/&#39;}&#34;&amp;gt;&amp;lt;a href=&#34;#/home&#34;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
         &amp;lt;li ng-class=&#34;{active: activetab == &#39;/sobre&#39;}&#34;&amp;gt;&amp;lt;a href=&#34;#/sobre&#34;&amp;gt;Sobre&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
         &amp;lt;li ng-class=&#34;{active: activetab == &#39;/contato&#39;}&#34;&amp;gt;&amp;lt;a href=&#34;#/contato&#34;&amp;gt;Contato&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;

      &amp;lt;div ng-view&amp;gt;&amp;lt;/div&amp;gt;

      &amp;lt;script src=&#34;//ajax.googleapis.com/ajax/libs/angularjs/1.2.8/angular.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
      &amp;lt;script src=&#34;//ajax.googleapis.com/ajax/libs/angularjs/1.2.0rc1/angular-route.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;

      &amp;lt;script src=&#34;app/app.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
      &amp;lt;script src=&#34;app/controllers/controllers.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
   &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Note que a linha mais importante de c√≥digo aqui √© a que cont√©m a diretiva &lt;strong&gt;ng-view&lt;/strong&gt;, √© ali que seus templates ir√£o carregar, aquilo que voc√™ definiu previamente nas rotas, ir√£o ser abertas dentro desta div.&lt;/p&gt;

&lt;p&gt;Para usarmos o conceito de Single Page no angular, √© necess√°rio usarmos a diretiva ng-view. Ela √© a respons√°vel por renderizar suas devidas &amp;#8216;views&amp;#8217; √† sua index principal.&lt;/p&gt;

&lt;p&gt;Para cada rota, definimos uma view anteriormente, certo?&lt;/p&gt;

&lt;p&gt;√Äquelas views ser√£o carregadas dentro desta div, dependendo da rota que o usu√°rio estiver.&lt;/p&gt;

&lt;p&gt;Mesmo n√£o sendo o foco do artigo, coloquei uma diretiva &lt;strong&gt;ng-class&lt;/strong&gt; para adicionar a classe active ao elemento &lt;li&gt; se a condi√ß√£o for verdadeira. Ou seja, quando o controller √© ativado pelo angular, ele atribui na vari√°vel activetab a sua localiza√ß√£o atual.&lt;/p&gt;

&lt;p&gt;Se estivermos na rota &amp;#8216;/&amp;#8217; a classe active ir√° ser adicionada ao primeiro elemento &lt;li&gt;.&lt;/p&gt;

&lt;p&gt;Se estivermos na rota &amp;#8216;/sobre&amp;#8217; a classe active ir√° ser adicionada ao segundo elemento &lt;li&gt;.&lt;/p&gt;

&lt;p&gt;Se estivermos na rota &amp;#8216;/contato&amp;#8217; a classe active ir√° ser adicionada ao terceiro elemento &lt;li&gt;.&lt;/p&gt;

&lt;h2 id=&#34;criando-as-views&#34;&gt;Criando as views&lt;/h2&gt;

&lt;p&gt;Como √© apenas um exemplo, procurei agilidade, ent√£o, os templates s√£o praticamente iguais.&lt;/p&gt;

&lt;pre&gt;&amp;lt;!-- home.html --&amp;gt;
&amp;lt;div class=&#34;page-header&#34;&amp;gt;
   &amp;lt;h1&amp;gt;P√°gina Home!&amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;pre&gt;&amp;lt;!-- sobre.html --&amp;gt;
&amp;lt;div class=&#34;page-header&#34;&amp;gt;
   &amp;lt;h1&amp;gt;P√°gina Sobre!&amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;pre&gt;&amp;lt;!-- contato.html --&amp;gt;
&amp;lt;div class=&#34;page-header&#34;&amp;gt;
   &amp;lt;h1&amp;gt;P√°gina Contato!&amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Finalizamos por aqui pessoal, a ideia era de passar exatamente como criamos uma aplica√ß√£o Single Page com AngularJS, espero que todos consigam!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando uma aplica√ß√£o simples com AngularJS</title>
      <link>http://tableless.com.br/criando-uma-aplicacao-simples-com-angularjs/</link>
      <pubDate>Thu, 26 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/criando-uma-aplicacao-simples-com-angularjs/</guid>
      <description>

&lt;p&gt;AngularJS √© o mais novo lan√ßamento do time de desenvolvedores do Google. Diferentemente de outros frameworks JavaScript, ele adota uma abordagem mais ligada √† sintaxe HTML, funcionando como uma esp√©cie de extens√£o da linguagem.&lt;/p&gt;

&lt;p&gt;Neste artigo, vamos criar uma aplica√ß√£o simples de lista de compras e aprender os conceitos b√°sicos do framework no que diz respeito √† associa√ß√£o, manipula√ß√£o e exibi√ß√£o de dados.&lt;/p&gt;

&lt;h2 id=&#34;estrutura-inicial&#34;&gt;Estrutura inicial&lt;/h2&gt;

&lt;p&gt;Assim como qualquer aplica√ß√£o web, nosso ponta-p√© inicial acontece com a cria√ß√£o de um p√°gina b√°sica. A diferen√ßa aqui √© que vamos informar um nova propriedade na tag do nosso arquivo: &lt;strong&gt;ng-app&lt;/strong&gt;.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;html ng-app&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;title&amp;gt;Lista de compras&amp;lt;/title&amp;gt;
        &amp;lt;script src=&#34;http://code.angularjs.org/1.0.1/angular-1.0.1.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;p&gt;Essa √© a grande sacada do AngularJS. Ao declarar a propriedade ng-app, estamos inicializando a nossa aplica√ß√£o. √â a primeira de algumas novas propriedades que iremos utilizar. Todo o funcionamento do framework gira em torno dessas novas declara√ß√µes.&lt;/p&gt;

&lt;p&gt;O atributo ng-app na tag informa que o nosso DOM, al√©m de HTML, √© tamb√©m um documento AngularJS. Esta propriedade pode ser utilizada em qualquer elemento do DOM &amp;mdash; em alguns casos, apenas uma parte do seu HTML ser√° uma aplica√ß√£o Angular. Por baixo dos panos, o framework define o elemento com o atributo ng-app como a raiz da aplica√ß√£o.&lt;/p&gt;

&lt;h2 id=&#34;ol√°-tableless&#34;&gt;Ol√°, Tableless!&lt;/h2&gt;

&lt;p&gt;Para provar que o foco do Angular est√° no HTML e n√£o no JavaScript, vamos implementar um exemplo simples em nossa estrutura:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;html ng-app&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;title&amp;gt;AngularJS - Tableless&amp;lt;/title&amp;gt;
        &amp;lt;script src=&#34;http://code.angularjs.org/1.0.1/angular-1.0.1.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;input type=&#34;text&#34; ng-model=&#34;nome&#34;&amp;gt;
        &amp;lt;p&amp;gt;Ol√°, Tableless! Meu nome √©: {{ nome }}&amp;lt;/p&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;p&gt;Ao carregarmos esse HTML no navegador e digitarmos qualquer coisa no input, o par√°grafo √© atualizado automagicamente. Perceberam que at√© agora n√£o escrevemos nenhum c√≥digo JavaScript?&lt;/p&gt;

&lt;p&gt;A propriedade &lt;em&gt;ng-model&lt;/em&gt; funciona como um canal entre a nossa view e o form. Ela pode ser utilizada em inputs do tipo texto, selects, textareas, checkboxes e radio buttons.&lt;/p&gt;

&lt;p&gt;O model, seus dados e suas valida√ß√µes ficam automaticamente dispon√≠veis no escopo da nossa aplica√ß√£o, como veremos a seguir.&lt;/p&gt;

&lt;p&gt;A associa√ß√£o de dados √© feita atrav√©s do famoso &amp;#8220;bigode-bigode&amp;#8221; ({{ }}), passando nomes presentes no escopo (no exemplo acima, o model &lt;strong&gt;nome&lt;/strong&gt;).&lt;/p&gt;

&lt;h2 id=&#34;enfim-javascript&#34;&gt;Enfim, JavaScript!&lt;/h2&gt;

&lt;p&gt;Chegou a hora de escrevermos nosso primeiro trecho de c√≥digo JavaScript. Vamos criar um controller para nossa aplica√ß√£o que carrega uma lista inicial de √≠tens. Os √≠tens s√£o armazenados no escopo da aplica√ß√£o ($scope).&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function ListaComprasController($scope) {
    $scope.itens = [
        {produto: &#39;Leite&#39;, quantidade: 2, comprado: false},
        {produto: &#39;Cerveja&#39;, quantidade: 12, comprado: false}
    ];
}&lt;/pre&gt;

&lt;p&gt;E √© s√≥ isso por enquanto!&lt;/p&gt;

&lt;h2 id=&#34;exibindo-nossos-√≠tens&#34;&gt;Exibindo nossos √≠tens&lt;/h2&gt;

&lt;p&gt;Vamos agora adicionar um novo bloco HTML com a tabela de listagem dos produtos:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div ng-controller=&#34;ListaComprasController&#34;&amp;gt;
    &amp;lt;table&amp;gt;
      &amp;lt;thead&amp;gt;
        &amp;lt;tr&amp;gt;
          &amp;lt;th&amp;gt;Produto&amp;lt;/th&amp;gt;
          &amp;lt;th&amp;gt;Quantidade&amp;lt;/th&amp;gt;
        &amp;lt;/tr&amp;gt;
      &amp;lt;/thead&amp;gt;
      &amp;lt;tbody&amp;gt;
        &amp;lt;tr ng-repeat=&#34;item in itens&#34;&amp;gt;
          &amp;lt;td&amp;gt;&amp;lt;strong&amp;gt;{{ item.produto }}&amp;lt;/strong&amp;gt;&amp;lt;/td&amp;gt;
          &amp;lt;td&amp;gt;{{ item.quantidade }}&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
      &amp;lt;/tbody&amp;gt;
    &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;Duas novidades foram apresentadas no HTML acima:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;o atributo &lt;strong&gt;ng-controller&lt;/strong&gt; informa o nome do controller JavaScript respons√°vel pelo bloco contido no elemento, no nosso caso o controller &lt;em&gt;ListaComprasController&lt;/em&gt; definido anteriormente.&lt;/li&gt;
&lt;li&gt;o atributo &lt;strong&gt;ng-repeat&lt;/strong&gt; executa um &lt;em&gt;loop&lt;/em&gt; na vari√°vel &lt;strong&gt;itens&lt;/strong&gt; declarada no escopo da aplica√ß√£o, retornando cada √≠tem e imprimindo o produto e a quantidade em uma linha da nossa tabela. O formato √©: &lt;retorno&gt; in &lt;cole√ß√£o&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;adicionando-produtos&#34;&gt;Adicionando produtos&lt;/h2&gt;

&lt;p&gt;Para n√£o ficarmos apenas com 4 linhas de JavaScript, vamos adicionar uma funcionalidade que inclui √≠tens em nossa lista de compras.&lt;/p&gt;

&lt;p&gt;O primeiro passo √© criar um formul√°rio que ser√° respons√°vel pela a√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;form class=&#34;form-inline&#34; name=&#34;formItem&#34;&amp;gt;
  &amp;lt;input type=&#34;text&#34; ng-model=&#34;item.produto&#34;&amp;gt;
  &amp;lt;input type=&#34;number&#34; ng-model=&#34;item.quantidade&#34;&amp;gt;
  &amp;lt;button ng-click=&#34;adicionaItem()&#34;&amp;gt;adicionar √≠tem&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;&lt;/pre&gt;

&lt;p&gt;Estamos utilizando de novo o atributo &lt;strong&gt;ng-model&lt;/strong&gt; para definir um model para os nossos inputs. O controller passa a receber diretamente informa√ß√µes sobre esses campos.&lt;/p&gt;

&lt;p&gt;A novidade dessa vez fica por conta do atributo &lt;strong&gt;ng-click&lt;/strong&gt;, que recebe uma fun√ß√£o que precisamos declarar no controller:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function ListaComprasController($scope) {
    $scope.itens = [
        {produto: &#39;Leite&#39;, quantidade: 2, comprado: false},
        {produto: &#39;Cerveja&#39;, quantidade: 12, comprado: false}
    ];

    $scope.adicionaItem = function () {
        $scope.itens.push({produto: $scope.item.produto,
                           quantidade: $scope.item.quantidade,
                           comprado: false});
        $scope.item.produto = $scope.item.quantidade = &#39;&#39;;
    };
}&lt;/pre&gt;

&lt;p&gt;Ao clicarmos no bot√£o, o produto √© adicionado √† tabela. Aqui o model poderia estar realizando diversas valida√ß√µes dispon√≠veis na API do framework entre outras coisas. Por√©m, no nosso exemplo, apenas adicionamos um novo √≠tem √† lista de produtos e em seguida limpamos os models (os campos do formul√°rio).&lt;/p&gt;

&lt;h2 id=&#34;testes&#34;&gt;Testes&lt;/h2&gt;

&lt;p&gt;Por ser um framework que demanda um c√≥digo JavaScript mais estruturado, fica bem simples testar sua aplica√ß√£o. Utilizando &lt;a href=&#34;http://tableless.com.br/testando-seu-codigo-jquery-com-jasmine-parte-1/&#34; target=&#34;_blank&#34;&gt;Jasmine&lt;/a&gt;, por exemplo, poder√≠amos facilmente testar o controller dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;describe(&#39;Lista Compras Unit√°rio&#39;, function () {
    describe(&#39;ListaComprasController&#39;, function () {
        beforeEach(function () {
            this.$scope = {};
            this.controller = new ListaComprasController(this.$scope);
        });

        it(&#39;deve criar &#34;itens&#34; com 2 √≠tens&#39;, function () {
            expect(this.$scope.itens.length).toBe(2);
        });

        describe(&#39;adicionaItem&#39;, function () {
            it(&#39;deve adicionar um novo √≠tem √† lista com dados do escopo&#39;, function () {
                this.$scope.item = {};
                this.$scope.item.produto = &#39;Carne&#39;;
                this.$scope.item.quantidade = 5;
                this.$scope.adicionaItem();
                expect(this.$scope.itens.length).toBe(3);
                expect(this.$scope.itens[2].produto).toBe(&#39;Carne&#39;);
                expect(this.$scope.itens[2].quantidade).toBe(5);
                expect(this.$scope.itens[2].comprado).toBeFalse;
            });
        });
    });
});&lt;/pre&gt;

&lt;h2 id=&#34;angularjs-√©-muito-mais-do-que-isso&#34;&gt;AngularJS √© muito mais do que isso!&lt;/h2&gt;

&lt;p&gt;Deixei muitos t√≥picos de fora por enquanto. O objetivo aqui era mostrar o potencial do framework AngularJS. Seus recursos ainda incluem rotas, m√∫ltiplas views, AJAX e servi√ßos REST e a cria√ß√£o de componentes personalizados. O que voc√™s viram foi o b√°sico do b√°sico, uma introdu√ß√£o.&lt;/p&gt;

&lt;p&gt;No &lt;a href=&#34;http://angularjs.org/&#34; target=&#34;_blank&#34;&gt;site do framework&lt;/a&gt; h√° uma documenta√ß√£o bem completa, com diversos tutoriais.&lt;/p&gt;

&lt;p&gt;O c√≥digo fonte do nosso exemplo voc√™s encontram no &lt;a href=&#34;https://github.com/tableless/exemplos/tree/gh-pages/angularjs/lista-compras/&#34; target=&#34;_blank&#34;&gt;Github do Tableless&lt;/a&gt;. E &lt;a href=&#34;http://tableless.github.com/exemplos/angularjs/lista-compras/&#34; target=&#34;_blank&#34;&gt;nesse link&lt;/a&gt; voc√™s conseguem visualizar nossa lista de compras em a√ß√£o.&lt;/p&gt;

&lt;p&gt;Finalizando, nosso camarada Vedovelli gravou um &lt;a href=&#34;http://blog.vedovelli.com.br/?p=1946&#34; target=&#34;_blank&#34;&gt;screencast&lt;/a&gt; bem completo sobre o AngularJS, recomendo!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>