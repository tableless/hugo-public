<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Konqueror on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/konqueror/index.xml</link>
    <description>Recent content in Konqueror on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/konqueror/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Quem precisa de versão mobile?</title>
      <link>https://tableless.github.io/hugo-public/quem-precisa-de-versao-mobile/</link>
      <pubDate>Wed, 12 Dec 2007 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/quem-precisa-de-versao-mobile/</guid>
      <description>&lt;p&gt;Parece ser um erro comum dos novatos criar versões diferentes do mesmo site.&lt;/p&gt;

&lt;p&gt;O ano era 1997. Eu e e todo mundo que eu conhecia usávamos Netscape Navigator. Foi o ano em que, pela primeira vez, fiz um site sozinho. Tudo, atendi o cliente, preparei textos, fotos, fiz o layout, se é que se pode chamar aquilo de layout, criei uma conta no &lt;a href=&#34;http://geocities.yahoo.com/&#34;&gt;Geocities&lt;/a&gt; e publiquei. Em seguida entrei no &lt;a href=&#34;http://www.yahoo.com&#34;&gt;Yahoo!&lt;/a&gt; e cadastrei o site, para que aparecesse nas buscas.&lt;/p&gt;

&lt;p&gt;Depois de alguns dias recebi um e-mail do Yahoo! dizendo que o site não poderia ser publicado no diretório porque não funcionava no Internet Explorer.  Sim, cavalheiros, era política do Yahoo! só publicar em seu diretório sites que funcionassem bem nos dois navegadores. Como eu resolvi? Criei duas versões do site, uma para cada navegador, e um Javascript que selecionava a versão de acordo com o navegador do usuário.&lt;/p&gt;

&lt;p&gt;Mas eu não fiquei satisfeito. Fazer duas versões do site dava um bocado de trabalho. Manter as duas versões dava mais trabalho ainda. E se houvesse mais um navegador relevante? Eu não queria ter três ou quatro versões de cada site que desenvolvesse. Parece que muito mais gente tinha o mesmo sentimento que eu. Gente muito mais talentosa e importante do que eu. Gente como o pessoal que criou o &lt;a href=&#34;http://www.webstandards.org/&#34;&gt;projeto Web Standards&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Você não imagina como eu fiquei feliz quando, no final do século passado, ao estudar os Padrões Web, percebi que não precisava de duas versões de cada site. Eu hoje uso &lt;a href=&#34;http://www.opera.com&#34;&gt;Opera&lt;/a&gt;, &lt;a href=&#34;http://www.mozilla.com/firefox/&#34;&gt;Firefox&lt;/a&gt; e &lt;a href=&#34;http://www.konqueror.org/&#34;&gt;Konqueror&lt;/a&gt;. E esporadicamente, &lt;a href=&#34;http://www.flock.com/&#34;&gt;Flock&lt;/a&gt;, &lt;a href=&#34;http://www.apple.com/safari/&#34;&gt;Safari&lt;/a&gt;, &lt;a href=&#34;http://www.gnome.org/projects/epiphany/&#34;&gt;Epiphany&lt;/a&gt; e &lt;a href=&#34;http://galeon.sourceforge.net/&#34;&gt;Galeon&lt;/a&gt;. E ainda preciso testar meus sites no Internet Explorer. Esta é uma das grandes vantagens dos padrões, seu site, uma única versão, funcionando em todo lugar.&lt;/p&gt;

&lt;p&gt;Bom, talvez eu me preocupe com navegadores demais. Quem sabe é alguma paranóia minha. Talvez para você seja importante apenas que o site funcione no IE e no Firefox. Mas geralmente não dá nenhum trabalho fazê-lo funcionar nesses navegadores todos. Agora, dê uma olhada no &lt;a href=&#34;http://en.wikipedia.org/wiki/Microbrowser#Default_browsers_used_by_major_mobile_phone_and_PDA_vendors&#34;&gt;mundo da mobilidade&lt;/a&gt;. Você vai construir uma versão para cada navegador? Que tal se simplesmente não construísse versão nenhuma?&lt;/p&gt;

&lt;p&gt;Ora, os padrões web surgiram justamente para isso, para que seu site, a única versão, funcione em qualquer lugar. Naturalmente, há sites e aplicações online, por exemplo aquelas cuja experiência de uso depende fortemente de Ajax, que realmente merecem uma versão em HTML simples, acessível via dispositivos móveis e outros dispositivos e cenários de uso. Mas a maioria, a esmagadora maioria dos sites &lt;strong&gt;não precisa&lt;/strong&gt; de uma versão mobile. Basta que o site seja bem feito, vai funcionar no mobile.&lt;/p&gt;

&lt;p&gt;Existe porém um mito sendo difundido por aí de que as pessoas precisam de uma versão mobile de seus sites. Há uma febre de versão mobile por aí! Então, vamos deixar claro quais são as opções que temos em relação à acessibilidade de um site em dispositivos móveis:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Ter um site que simplesmente funcione&lt;/strong&gt;: um site bem feito, nos padrões web, vai funcionar bem no celular. É a estratégia mais simples, mais barata, e os resultados são fantásticos!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ter um CSS para dispositivos móveis&lt;/strong&gt;: essa é a melhor estratégia. Você continua tendo uma única versão do site para manter. Mas oferece um layout trabalhado especialmente para dispositivos móveis que suportem bem CSS. Ou seja, dá só um pouquinho de trabalho em relação à primeira estratégia, oferece os mesmos resultados para navegadores sem CSS, e dão um conforto a mais para usuários de bons navegadores mobile.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ter uma versão do site específica para mobile&lt;/strong&gt;: vai te dar um trabalho desgraçado. Mas, ás vezes, simplesmente não tem jeito. É o caso de aplicações como o &lt;a href=&#34;http://twitter.com/&#34;&gt;Twitter&lt;/a&gt; e o &lt;a href=&#34;http://www.google.com/reader/&#34;&gt;Google Reader&lt;/a&gt;. Aplicações Ajax, sites que dependem de um plugin específico ou aqueles cuja quantidade de conteúdo torna o uso muito desconfortável no mobile são potenciais candidatos a uma segunda versão. Uma abordagem semelhante é aquela que oferece uma versão &amp;#8220;HTML simples&amp;#8221;, que vai funcionar no mobile, no leitor de telas e etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Não se importar&lt;/strong&gt;: é a estratégia de boa parte dos sites hoje. Não é irônico perceber que sites de operadoras de telefonia móvel não funcionam em seus próprios celulares?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Se você não tiver nenhum motivo muito bom para fazer diferente, fique num dos dois primeiros níveis. Você vai ter muito menos trabalho, e todo mundo vai poder acessar seu site. Da próxima vez que pensar em acessibilidade para dispositivos móveis, lembre-se: muito provavelmente você não precisa de uma versão mobile.&lt;/p&gt;

&lt;p&gt;Os mesmos quatro níveis podem ser aplicados a praticamente qualquer cenário de uso. Por exemplo, impressão ou leitores de tela. Você pode fazer um site nos padrões e isso vai funcionar de maneira razoável. Pode escrever CSS ou pequenas adições em seu HTML para melhorar a experiência nesses cenários de uso. Pode, se não tiver outro jeito mesmo, fazer a indesejável segunda versão. Ou pode ignorar seus usuários.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lidando bem com os bloqueadores de pop-up</title>
      <link>https://tableless.github.io/hugo-public/lidando-bem-com-os-bloqueadores-de-pop-up/</link>
      <pubDate>Thu, 06 Dec 2007 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/lidando-bem-com-os-bloqueadores-de-pop-up/</guid>
      <description>

&lt;p&gt;Todo mundo que já experimentou ama bloqueadores de pop-ups. Navegando há anos com &lt;a href=&#34;http://www.opera.com/&#34; title=&#34;A melhor experiência de internet&#34;&gt;Opera&lt;/a&gt; e &lt;a href=&#34;http://www.konqueror.org/&#34; title=&#34;Konqueror - Web Browser, File Manager - and more!&#34;&gt;Konqueror&lt;/a&gt; e usando &lt;a href=&#34;http://www.mozilla.org/products/firefox/&#34; title=&#34;Firefox - The Browser, Reloaded&#34;&gt;Firefox&lt;/a&gt; para acessar o &lt;a href=&#34;http://gmail.google.com&#34; title=&#34;Email com gosto de Google&#34;&gt;Gmail&lt;/a&gt;, ainda me assusto quando preciso navegar no IE, seja num cybercafé ou na máquina de um amigo. Como é que as pessoas podem conviver com aquilo? Pop-ups são muito chatos, e se você não acha é porque ainda não experimentou viver sem eles tempo o suficiente.&lt;/p&gt;

&lt;p&gt;Por outro lado, o advento dos bloqueadores de pop-up trouxe alguns desafios bastante específicos para o desenvolvedor. Por exemplo, o desafio de fazer sites compatíveis com qualquer navegador quando é obrigado a usar ferramentas de terceiros. É o caso, por exemplo, de alguns sistemas de pagamento nacionais, ferramentas essenciais para o desenvolvimento de qualquer e-commerce brasileiro. O fato é que muitos desses sistemas exigem dos seus usuários a exibição de um pop-up, seja em uma tela de pagamento ou, o que é mais comum, no recibo.&lt;/p&gt;

&lt;p&gt;Para complicar, esses sistemas geralmente são submetidos a complexos e burocráticos processos de homologação, onde geralmente a pessoa que vai aprovar seu sistema usa Internet Explorer para Windows e não vai estar muito interessado em ouvir seus argumentos a respeito da inacessibilidade dos pop-ups. Vamos então criar uma solução para que o usuário de navegadores sem bloqueador de pop-ups possam ver normalmente seus pop-ups enquanto os que possuem bloqueador sejam servidos com um confortável link para o endereço do pop-up. Além disso, vamos fazer que aqueles que escolheram o gerenciamenteo inteligente de pop-ups possam ver um pop-up ao clicar no link, mantendo o layout do recibo como foi planejado pelo sistema de pagamento, e o que escolheu bloquear todos os pop-ups possa ver o conteúdo na mesma janela.&lt;/p&gt;

&lt;h3 id=&#34;primeiro-passo&#34;&gt;Primeiro passo:&lt;/h3&gt;

&lt;p&gt;Telefonar e escrever para pessoal do sistema de pagamentos, avisando que pop-ups são uma solução ruim. Demonstre sua indignação pelo fato de o sistema deles precisar de uma ferramenta tão estúpida. De quebra, aproveite para perguntar como fazer o site deles, o módulo administrativo, ou o que mais eles tenham feito para que você e seu cliente acessem funcionar em seu navegador. Pergunte porque o manual fala sobre Internet Explorer e Netscape 4, mas não fala do Safari ou do Firefox. Apresente dessa maneira o Opera e o Mozilla. Se muitos de nós fizermos isso, eles vão ter que começar a considerar esses navegadores ao criar seus sistemas.&lt;/p&gt;

&lt;h3 id=&#34;segundo-passo&#34;&gt;Segundo passo:&lt;/h3&gt;

&lt;p&gt;Entender os fatos básicos. Agora que você já ajudou a tornar a web um lugar melhor, vamos resolver o problema imediato do nosso cliente. Primeiro vamos ver como criar um link de pop-up que seja acessível a quem não quer ou não pode exibir pop-ups. Links para pop-ups geralmente são criados assim:&lt;/p&gt;

&lt;pre&gt;&amp;lt;a href=&#34;javascript:void(open(&#39;http://www.atipico.com.br&#39;,&#39;nova&#39;,&#39;width=800,height=600&#39;))&#34;&amp;gt;Atípico&amp;lt;/a&amp;gt;&lt;/pre&gt;

&lt;p&gt;O problema é que quem não tem javascript em seu navegador ou bloqueou todos os pop-ups não pode acessar o link. Muita gente por aí tem usado assim:&lt;/p&gt;

&lt;pre&gt;&amp;lt;a href=&#34;http://www.atipico.com.br&#34; onclick=&#34;window.open(this.href,&#39;nova&#39;,&#39;width=800,height=600&#39;);return false;&#34;&amp;gt;Atípico&amp;lt;/a&amp;gt;&lt;/pre&gt;

&lt;p&gt;Assim, o link passa a ser um link HTML comum. Para quem tem javascript disponível, o evento onclick vai abrir o popup e o &lt;strong&gt;return false&lt;/strong&gt; ao final vai cancelar o click, fazendo com que a página seja aberta apenas no pop-up, e não na janela atual. Apesar da beleza e da simplicidade, este código tem dois problemas. O primeiro é que o Internet Explorer 5.0, em algumas situações, não lida muito bem com comandos separados por ponto-e-vírgula em atributos HTML. O segundo, mais sério, é que navegadores como Konqueror e Firefox não interrompem um script ao bloquear um pop-up. Então, se o Konqueror estiver configurado para bloquear todos os pop-ups, o pop-up não vai aparecer, e o &lt;strong&gt;return false&lt;/strong&gt; vai ser executado, fazendo com que o link também não seja carregado na janela atual.&lt;/p&gt;

&lt;p&gt;De fato, o código acima era muito usado antes do advento dos bloqueadores de pop-up, para manter o site acessível en navegadores sem javascript. Ele funciona muito bem se não houver javascript disponível, mas falha em alguns navegadores se houver javascript e o bloqueador de pop-ups estiver habilitado.&lt;/p&gt;

&lt;p&gt;Para entender mais de perto a problemática vamos verificar como os navegadores se comportam ao bloquear um popup. Para isso vamos usar o seguinte código:&lt;/p&gt;

&lt;pre&gt;&amp;lt;script&amp;gt;
    alert(&#34;passo 1&#34;)
    window.open(&#34;http://www.atipico.com.br&#34;,&#34;nova&#34;,&#34;width=800,height=600&#34;)
    alert(&#34;passo 2&#34;)
&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
    alert(&#34;passo 3&#34;)
&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Fazendo o teste com este script você pode notar como os navegadores se comportam de maneira diferente ao bloquear um pop-up. Testei no Opera 7.52, no Firefox 0.8 e no Konqueror 3.2.2, todos em Linux. O Mozilla e o Konqueror exibem os três alerts. Ou seja, o pop-up é bloqueado mas o script segue sua execução normal. No Opera são exibidos os alerts 1 e 3. O Opera, portanto, interrompe a execução de um script ao bloquear um pop-up, mas executa normalmente outros scripts na mesma página. O Internet Explorer com a &lt;a href=&#34;http://toolbar.google.com/&#34; title=&#34;Google Toolbar&#34;&gt;Google Toolbar&lt;/a&gt; se comportou de maneira idêntica ao Mozilla e ao Konqueror.&lt;/p&gt;

&lt;h3 id=&#34;terceiro-passo&#34;&gt;Terceiro passo:&lt;/h3&gt;

&lt;p&gt;Vamos manter nosso pop-up automático, e inserir um link para abrir pop-up que poderá ser usado por quem usa bloqueadores (ou mesmo por alguém que tenha fechado o pop-up por engano):&lt;/p&gt;

&lt;pre&gt;&amp;lt;script&amp;gt;
    pagina=&#34;http://www.atipico.com.br&#34;

    function abrir(){
        newWindow=window.open(pagina,&#34;nova&#34;,&#34;width=800,height=600&#34;)
        if(newWindow)return false
    }

    abrir()
&amp;lt;/script&amp;gt;
&amp;lt;a href=&#39;http://www.atipico.com.br&#39; onclick=&#39;return abrir()&#39;&amp;gt;Abrir&amp;lt;/a&amp;gt;&lt;/pre&gt;

&lt;p&gt;Aqui criamos uma função, abrir, que abre o popup. Em seguida a executamos. Se não houver bloqueadores o pop-up será exibido automaticamente neste passo. Exibimos então um link &amp;#8220;Abrir&amp;#8221; que executa novamente a função quando clicado. Aqui está toda a mágica, o &lt;strong&gt;onclick&lt;/strong&gt; do link contém &lt;strong&gt;return abrir()&lt;/strong&gt;, ou seja, o evento será tratado de acordo com o retorno da função. O click somente será cancelado se a função retornar false.&lt;/p&gt;

&lt;p&gt;Agora note que a função tem duas linhas. Na primeira abrimos a nova janela (pop-up) e armazenamos o resultado na variável &lt;strong&gt;newWindow&lt;/strong&gt;. Na segunda linha testamos o valor de newWindow, se existir retornamos false. Assim, acompanhe nosso programa em três situações diferentes: primeiro, se não houver bloqueadores de pop-ups ou se o bloqueador estiver configurado em &lt;strong&gt;smart policy&lt;/strong&gt;, ou seja, permitir os pop-ups requisitados por você. Neste caso, a primeira linha da função abre a janela e armazena o objeto na variável newWindow. A segunda linha testa o valor de newWindow, que existe, e retorna false, cancelando o click. Neste caso o usuário verá o pop-up e nada acontece com a janela original, perfeito. O segundo caso é o de bloqueadores de pop-ups que não permitem pop-up algum, mas não interrompem a execução do script. Neste caso, o pop-up não será aberto. Ao chegar à segunda linha da função, new Window é testada, e não existe. A função não retornará valor (na verdade retornará undefined, mas isso é outro assunto). O click não será cancelado e o usuário verá a página solicitada na janela original. A terceira situação é o caso dos bloqueadores de pop-up que interrompem a execução do script. Nestes o script sequer chegará à segunda linha da função, o javascript será interrompido e o evento não será cancelado, uma vez que o script sequer chegou a retornar algum valor. O resultado será idêntico ao segundo caso.&lt;/p&gt;

&lt;p&gt;Há ainda uma quarta situação, a dos navegadores que não possuem javascript habilitado. Neste caso o link vai se comportar como um link normal, sem nenhum problema para o usuário (embora eu duvide que alguém sem javascript consiga usar qualquer sistema de pagamento eletrônico disponível no Brasil.)&lt;/p&gt;

&lt;h3 id=&#34;quarto-passo&#34;&gt;Quarto passo:&lt;/h3&gt;

&lt;p&gt;Pra quê um quarto passo? O código anterior já funciona muito bem, resolvendo nosso problema. Bom talvez você seja curioso o suficiente para querer complicar um pouco as coisas. A questão agora é: como exibir conteúdo de acordo com o status do pop-up. Isto é, por exemplo, se não houver bloqueador de pop-up não exibir o link &amp;#8220;Abrir&amp;#8221;, uma vez que o usuário verá o pop-up automaticamente. Pois bem, vamos lá:&lt;/p&gt;

&lt;pre&gt;&amp;lt;script&amp;gt;
    pagina=&#34;http://www.atipico.com.br&#34;

    abriu=false

    function abrir(){
        newWindow=window.open(pagina,&#34;nova&#34;,&#34;width=800,height=600&#34;)
        if(newWindow){
            abriu=true
            return false
        }
    }

    abrir()

&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
if(!abriu)document.write(&#34;&amp;lt;a href=&#39;http://www.atipico.com.br&#39; onclick=&#39;return abrir()&#39;&amp;gt;Abrir&amp;lt;/a&amp;gt;&#34;)
&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Agora usamos uma variável, &lt;strong&gt;abriu&lt;/strong&gt;, para guardar o status do pop-up. Começamos o script atribuindo false a esta variável. Depois, dentro do if que testa o pop-up, setamos seu valor para true. Se o pop-up for aberto o valor de abriu será true, caso contrário será mantido o false original.&lt;/p&gt;

&lt;p&gt;No segundo bloco script testamos o valor de abriu. Se o pop-up não foi aberto, escrevemos no documento o link para abrí-lo. Colocamos esta linha em um segundo bloco script para que seja executada mesmo que o bloqueador interrompa o primeiro script ao cancelar o pop-up.&lt;/p&gt;

&lt;p&gt;O script já faz o que propusemos, exibe o link apenas se o pop-up não for aberto automaticamente. Mas agora ele falha em navegadores sem suporte a javascript. Iso é fácil de resolver, basta colocar, depois dos scripts:&lt;/p&gt;

&lt;pre&gt;&amp;lt;noscript&amp;gt;
    &amp;lt;a href=&#34;http://www.atipico.com.br&#34;&amp;gt;Abrir&amp;lt;/a&amp;gt;
&amp;lt;/noscript&amp;gt;&lt;/pre&gt;

&lt;h3 id=&#34;palavras-finais&#34;&gt;Palavras finais:&lt;/h3&gt;

&lt;p&gt;Como você viu, lidar com bloqueadores de pop-up é tarefa trivial, e você pode oferecer conteúdo ao seu usuário no formato que ele escolheu ver, pop-ups para quem não se importa com eles, ou mesmo para quem os deseja, e links comuns para quem escolheu não ver pop-ups. Claro, continuamos achando que pop-ups não são uma boa ferramenta, mas como você não pode trabalhar sempre sozinho, isto pode lhe ser útil ao lidar com código de terceiros, como os citados sistemas de e-commerce.&lt;/p&gt;

&lt;p&gt;O código nesse artigo foi escrito apenas para estudo. É claro, quando for para valer, você deve escrever código melhor que o meu. Seus links precisam ter um atributo &lt;strong&gt;title&lt;/strong&gt; que descreva bem seu destino, e &amp;#8220;Abrir&amp;#8221; não é um bom texto para se colocar em um link. Você sabe também que, neste último exemplo, depois de &lt;strong&gt;if(!abriu)&lt;/strong&gt; você pode fazer o que quiser, e também deve saber que não é bom escrever scripts assim, no meio do seu HTML, e que document.write não é uma boa maneira de se exibir conteúdo. Esperamos que estas idéias lhe sejam úteis. Se você desenvolver algo útil com isso &lt;a href=&#34;mailto:elciof+artigopopup@gmail.com&#34; title=&#34;Email para o Elcio&#34;&gt;conte pra gente&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Browsers</title>
      <link>https://tableless.github.io/hugo-public/browsers/</link>
      <pubDate>Tue, 01 Jul 2003 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/browsers/</guid>
      <description>&lt;p&gt;Ferramenta importante para o bom desenvolvimento de um site WebStandards. É bom o pessoal que está começando conheça estes browsers, e se possível tenha eles instalados para poder testar os sites, e até escolher um preferido.&lt;/p&gt;

&lt;p&gt;Lynx (Browser de texto) &amp;#8211; &lt;a href=&#34;http://lynx.browser.org/&#34;&gt;http://lynx.browser.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Netscape &amp;#8211; &lt;a href=&#34;http://channels.netscape.com/ns/browsers/&#34;&gt;http://channels.netscape.com/ns/browsers/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mozilla &amp;#8211; &lt;a href=&#34;http://www.mozilla.org/&#34;&gt;http://www.mozilla.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firebird &amp;#8211; &lt;a href=&#34;http://www.mozilla.org/projects/firebird/&#34;&gt;http://www.mozilla.org/projects/firebird/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Opera &amp;#8211; &lt;a href=&#34;http://www.opera.com/&#34;&gt;http://www.opera.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Konkeror (Linux) &amp;#8211; &lt;a href=&#34;http://www.konqueror.org/&#34;&gt;http://www.konqueror.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Safari (Mac) &amp;#8211; &lt;a href=&#34;http://www.apple.com/safari/&#34;&gt;http://www.apple.com/safari/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Internet Explorer &amp;#8211; &lt;a href=&#34;http://www.microsoft.com/ie/&#34;&gt;http://www.microsoft.com/ie/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>