<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Single Page on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/single-page/index.xml</link>
    <description>Recent content in Single Page on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/single-page/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tend√™ncias Web 2015 para desenvolvedores</title>
      <link>https://tableless.github.io/hugo-public/tendencias-web-2015-para-desenvolvedores/</link>
      <pubDate>Thu, 09 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/tendencias-web-2015-para-desenvolvedores/</guid>
      <description>

&lt;p&gt;O mundo dos desenvolvedores web est√° cada vez mais inovador e fant√°stico. Em 2015 teremos ferramentas mais qualificadas e conceitos que nos ajudar√£o na jornada de desenvolver um material super satisfat√≥rio. Pois n√£o trar√° vantagens somente para nossos clientes, mas tamb√©m nos poupar√° tempo, e para quem trabalha nessa √°rea sabe que tempo √© MUITO PRECIOSO.&lt;/p&gt;

&lt;h2 id=&#34;flat-design&#34;&gt;FLAT DESIGN&lt;/h2&gt;

&lt;p&gt;Sites com sombras, diversas fontes e cores para ressaltar o realismo da p√°gina ficou no passado, agora o que manda √© a simplicidade. Design de empresas como Google, Twitter, Facebook e Windows 8 s√£o exemplos fort√≠ssimos de que isso deu certo e n√£o vai sair de cena por muito tempo. Lembre-se: menos √© mais!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/flat-design.png&#34;&gt;&lt;img class=&#34; size-full wp-image-48161 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/flat-design.png&#34; alt=&#34;flat-design&#34; width=&#34;730&#34; height=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pense que interessante seria se essa moda aparecesse nos tempos de IE6, quando transparencia, bordas arredondadas e gradientes n√£o funcionavam. Era s√≥ colocar um bot√£o com cor chapada de fundo, letra branca e pronto. Funcionaria em todos os browsers. Flat to save the devs.&lt;/p&gt;

&lt;h2 id=&#34;motion-ui&#34;&gt;MOTION UI&lt;/h2&gt;

&lt;p&gt;A moderna forma de atrair o interesse dos usu√°rios de forma leve e din√¢mica est√° em alta. Frameworks te ajudam na miss√£o de implementar mais anima√ß√£o em suas p√°ginas sem fazer com que seu site fique pesado. Visite &lt;a href=&#34;http://foundation.zurb.com/apps/docs/#!/motion-ui&#34; target=&#34;_blank&#34;&gt;Foundation for APPs&lt;/a&gt; ou &lt;a href=&#34;http://daneden.github.io/animate.css/&#34; target=&#34;_blank&#34;&gt;Animate.css&lt;/a&gt; e veja os efeitos incr√≠veis em a√ß√£o.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/motion-ui.png&#34;&gt;&lt;img class=&#34; size-full wp-image-48162 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/motion-ui.png&#34; alt=&#34;motion-ui&#34; width=&#34;730&#34; height=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/materialup-uma-colecao-de-conceitos-usando-material-design/&#34;&gt;H√° um post aqui no Tableless&lt;/a&gt; que fala um pouco sobre as inspira√ß√µes que o Material Design do Google teve em diversos designs.&lt;/p&gt;

&lt;h2 id=&#34;responsividade&#34;&gt;RESPONSIVIDADE&lt;/h2&gt;

&lt;p&gt;A preocupa√ß√£o em se adaptar a todos os dispositivos utilizados pelos usu√°rios hoje em dia est√° ficando cada vez maior entre as empresas, por isso, para n√£o perder mais tempo, utilize de uma ajudinha amiga como &lt;a href=&#34;http://getbootstrap.com/&#34; target=&#34;_blank&#34;&gt;Bootstrap&lt;/a&gt;, &lt;a href=&#34;http://foundation.zurb.com/&#34; target=&#34;_blank&#34;&gt;Foundation&lt;/a&gt; e o novo &lt;del&gt;por√©m n√£o menos interessante&lt;/del&gt; &lt;a href=&#34;http://semantic-ui.com/&#34; target=&#34;_blank&#34;&gt;Semantic UI&lt;/a&gt;. Todos os frameworks s√£o simples e contam com √≥timos tutoriais dispon√≠veis no pr√≥prio site.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/design-responsivo.png&#34;&gt;&lt;img class=&#34; size-full wp-image-48163 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/design-responsivo.png&#34; alt=&#34;design-responsivo&#34; width=&#34;730&#34; height=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;single-pages&#34;&gt;SINGLE PAGES&lt;/h2&gt;

&lt;p&gt;J√° viu aqueles sites em que voc√™ tem todo conte√∫do em uma s√≥ p√°gina? Pois √©, as single pages est√£o entre as tend√™ncias web 2015 e com raz√£o. Al√©m de visualmente serem mais agrad√°veis, s√£o super pr√°ticas para usu√°rios que odeiam se perder em milhares de p√°ginas s√≥ para achar tal conte√∫do que havia se interessado. Essa tecnologia fica ainda mais legal quando aplicada em mobiles! Olha um &lt;a href=&#34;http://www.twitch.tv/year/2014&#34; target=&#34;_blank&#34;&gt;exemplo bem legal aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/single-page.png&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-48164&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/single-page.png&#34; alt=&#34;Single Pages&#34; width=&#34;730&#34; height=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A ideia de Single Pages Application √© bem interessante e cada vez mais h√° ferramentas que nos ajudam nesse trabalho. Veja por exemplo &lt;a href=&#34;http://sennajs.com/&#34;&gt;o caso do SennaJS&lt;/a&gt;, idealizado pelo nosso amigo Eduardo Lundgreen.&lt;/p&gt;

&lt;h2 id=&#34;v√≠deos&#34;&gt;V√çDEOS&lt;/h2&gt;

&lt;p&gt;Os v√≠deos est√£o tendo muita receptividade pelos usu√°rios hoje em dia e podem facilmente conseguir mais aten√ß√£o para seu site se voc√™ utiliz√°-lo como forma de apresenta√ß√£o de sua empresa ou produto, por exemplo. Al√©m de ser r√°pido e pr√°tico, √© um meio de comunica√ß√£o muito mais esclarecedor e satisfat√≥rio para o usu√°rio que ao assistir ir√° receber e entender todo o assunto tratado.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/04/videos.png&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-48165&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/videos.png&#34; alt=&#34;V√≠deos&#34; width=&#34;730&#34; height=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;H√° outras formas de uso de v√≠deos por meio dos designers. D√° uma olhada em sites como &lt;a href=&#34;http://www.dadaabstories.org/&#34;&gt;Dadaab&lt;/a&gt; ou &lt;a href=&#34;http://www.barrelny.com/recap/2012/&#34;&gt;Barrel&lt;/a&gt; que fazem uso bem criativo de v√≠deos como parte do design do site.&lt;/p&gt;

&lt;p&gt;Junte todas essas armas para montar o site dos sonhos de seu cliente. üôÇ&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando uma aplica√ß√£o Single Page com AngularJS</title>
      <link>https://tableless.github.io/hugo-public/criando-uma-aplicacao-single-page-com-angularjs/</link>
      <pubDate>Sun, 22 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-uma-aplicacao-single-page-com-angularjs/</guid>
      <description>

&lt;p&gt;Um dos melhores conceitos que o AngularJS oferece √© o de &amp;#8220;Single Page&amp;#8221;, onde os recursos apropriados s√£o dinamicamente carregados e adicionados √† p√°gina, conforme necess√°rio, geralmente em resposta a a√ß√µes do usu√°rio.&lt;/p&gt;

&lt;p&gt;Para isto acontecer o framework oferece m√≥dulos que te possibilitam ter apenas uma p√°gina index, com outras p√°ginas de conte√∫do (views) sendo carregadas de acordo com uma espec√≠fica rota (route).&lt;/p&gt;

&lt;p&gt;Deste modo, voc√™ consegue separar bem as responsabilidades do seu projeto, e ficando de f√°cil manuten√ß√£o e codifica√ß√£o dos elementos.&lt;/p&gt;

&lt;p&gt;Vamos parar de enrola√ß√£o e ver como isso funciona em um r√°pido exemplo&amp;#8230;&lt;/p&gt;

&lt;h2 id=&#34;estrutura-de-pastas&#34;&gt;Estrutura de pastas&lt;/h2&gt;

&lt;p&gt;Primeiro criamos uma estrutura de pastas simples para o exemplo:&lt;/p&gt;

&lt;pre&gt;app
    controllers
        controllers.js
    views
        home.html
        sobre.html
        contato.html
    app.js
index.html
&lt;/pre&gt;

&lt;h2 id=&#34;configurando-a-aplica√ß√£o&#34;&gt;Configurando a aplica√ß√£o&lt;/h2&gt;

&lt;p&gt;√â aqui que o show acontece, no arquivo app.js, primeiro, carregamos o m√≥dulo ngRoute que √© usado para &lt;strong&gt;deep-linking URLs&lt;/strong&gt; para controllers e views. Este m√≥dulo observa qual √© url ($location.url()) e tenta mapear o caminho de acordo com alguma rota pr√©-definida, assim ele consegue executar o controller e a view correspondente para cada url.&lt;/p&gt;

&lt;p&gt;Para setarmos uma configura√ß√£o no AngularJS, precisamos usar a fun√ß√£o &lt;strong&gt;config&lt;/strong&gt;, que pode receber diversas propriedades j√° existentes do angular.&lt;/p&gt;

&lt;pre lang=&#34;javascript&#34;&gt;var app = angular.module(&#39;app&#39;,[&#39;ngRoute&#39;]);

app.config(function($routeProvider, $locationProvider)
{
   // remove o # da url
   $locationProvider.html5Mode(true);

   $routeProvider

   // para a rota &#39;/&#39;, carregaremos o template home.html e o controller &#39;HomeCtrl&#39;
   .when(&#39;/&#39;, {
      templateUrl : &#39;app/views/home.html&#39;,
      controller     : &#39;HomeCtrl&#39;,
   })

   // para a rota &#39;/sobre&#39;, carregaremos o template sobre.html e o controller &#39;SobreCtrl&#39;
   .when(&#39;/sobre&#39;, {
      templateUrl : &#39;app/views/sobre.html&#39;,
      controller  : &#39;SobreCtrl&#39;,
   })

   // para a rota &#39;/contato&#39;, carregaremos o template contato.html e o controller &#39;ContatoCtrl&#39;
   .when(&#39;/contato&#39;, {
      templateUrl : &#39;app/views/contato.html&#39;,
      controller  : &#39;ContatoCtrl&#39;,
   })

   // caso n√£o seja nenhum desses, redirecione para a rota &#39;/&#39;
   .otherwise ({ redirectTo: &#39;/&#39; });
});
&lt;/pre&gt;

&lt;p&gt;Neste exemplo recebemos duas propriedades, $locationProvider e $routeProvider.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;$routeProvider&lt;/strong&gt; √© usado para configurar as rotas, que √© exatamente o que estamos fazendo, quando usamos o &lt;strong&gt;.when()&lt;/strong&gt;, definimos a rota (url) e depois um objeto com o templateUrl (url da view) e qual nome do controller correspondente.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;$locationProvider&lt;/strong&gt; √© usado para configurar como a aplica√ß√£o com os chamados &amp;#8220;deep-linking&amp;#8221; ir√£o ser armazenados, no nosso caso n√≥s usamos a propriedade para definir true o modo de html5 (html5Mode), isso faz com que n√£o fique com # nas URLs.&lt;/p&gt;

&lt;h2 id=&#34;definindo-os-controllers&#34;&gt;Definindo os controllers&lt;/h2&gt;

&lt;p&gt;Para criar um controller no angular, podemos usar a inst√¢ncia do m√≥dulo, que definimos anteriormente como &amp;#8220;app&amp;#8221;, deste modo definimos um controller mais modular (√© como prefiro :]) ou de forma tradicional como sempre criamos fun√ß√µes no JavaScript (function HomeCtrl($rootScope, $location){ //do stuff&amp;#8230; }).&lt;/p&gt;

&lt;p&gt;Por ser apenas um exemplo, coloquei todos meus controllers no mesmo arquivo, mas se voc√™ quiser pode colocar em arquivos diferentes, s√≥ n√£o esque√ßa de linka-los √† index.&lt;/p&gt;

&lt;p&gt;Criaremos o primeiro controller com o nome de &amp;#8216;HomeCtrl&amp;#8217;, igual ao que definimos nas rotas mais acima, estamos passando para ele dois par√¢metros, $rootScope e $location, j√° definidos no Angular.&lt;/p&gt;

&lt;pre lang=&#34;javascript&#34;&gt;app.controller(&#39;HomeCtrl&#39;, function($rootScope, $location)
{
   $rootScope.activetab = $location.path();
});

app.controller(&#39;SobreCtrl&#39;, function($rootScope, $location)
{
   $rootScope.activetab = $location.path();
});

app.controller(&#39;ContatoCtrl&#39;, function($rootScope, $location)
{
   $rootScope.activetab = $location.path();
});
&lt;/pre&gt;

&lt;p&gt;Note que para cada controller, realizamos a mesma funcionalidade, para saber em qual p√°gina estou, criei uma vari√°vel no $rootScope, o que a torna global na p√°gina, podendo ser acessada de qualquer local.&lt;/p&gt;

&lt;p&gt;Para a vari√°vel activetab atribu√≠mos o caminho da localiza√ß√£o que estamos, no caso, seria atribu√≠do &amp;#8216;/&amp;#8217; logo quando acessamos o exemplo.&lt;/p&gt;

&lt;h2 id=&#34;eis-a-single-page&#34;&gt;Eis a Single Page!&lt;/h2&gt;

&lt;p&gt;Aqui est√° nossa index, ela servir√° para carregar os nossos templates definidos previamente nas rotas.&lt;/p&gt;

&lt;p&gt;Nesta p√°gina contemos algumas &lt;strong&gt;diretivas&lt;/strong&gt; (directives) do pr√≥prio angular, mas o que √© uma diretiva?&lt;/p&gt;

&lt;p&gt;Basicamente, diretivas em angular s√£o atributos de tags HTMLs que definem o comportamento do mesmo. O pr√≥prio angular j√° oferece muitas diretivas, mas voc√™ pode criar a sua pr√≥pria se desejar.&lt;/p&gt;

&lt;p&gt;O recomendado quando se usa AngularJS e voc√™ deseja fazer altera√ß√µes no DOM, √© criar uma diretiva personalizada para tal&amp;#8230;&lt;/p&gt;

&lt;pre&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html ng-app=&#34;app&#34;&amp;gt;
   &amp;lt;head&amp;gt;
      &amp;lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=utf-8&#34; /&amp;gt;
      &amp;lt;meta http-equiv=&#34;content-language&#34; content=&#34;pt-br&#34; /&amp;gt;
      &amp;lt;title&amp;gt;AngularJS: Single Page com ngView e ngRoute&amp;lt;/title&amp;gt;
      &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&#34; /&amp;gt;
   &amp;lt;/head&amp;gt;

   &amp;lt;body&amp;gt;
      &amp;lt;ul class=&#34;nav nav-tabs&#34;&amp;gt;
         &amp;lt;li ng-class=&#34;{active: activetab == &#39;/&#39;}&#34;&amp;gt;&amp;lt;a href=&#34;#/home&#34;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
         &amp;lt;li ng-class=&#34;{active: activetab == &#39;/sobre&#39;}&#34;&amp;gt;&amp;lt;a href=&#34;#/sobre&#34;&amp;gt;Sobre&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
         &amp;lt;li ng-class=&#34;{active: activetab == &#39;/contato&#39;}&#34;&amp;gt;&amp;lt;a href=&#34;#/contato&#34;&amp;gt;Contato&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;

      &amp;lt;div ng-view&amp;gt;&amp;lt;/div&amp;gt;

      &amp;lt;script src=&#34;//ajax.googleapis.com/ajax/libs/angularjs/1.2.8/angular.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
      &amp;lt;script src=&#34;//ajax.googleapis.com/ajax/libs/angularjs/1.2.0rc1/angular-route.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;

      &amp;lt;script src=&#34;app/app.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
      &amp;lt;script src=&#34;app/controllers/controllers.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
   &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Note que a linha mais importante de c√≥digo aqui √© a que cont√©m a diretiva &lt;strong&gt;ng-view&lt;/strong&gt;, √© ali que seus templates ir√£o carregar, aquilo que voc√™ definiu previamente nas rotas, ir√£o ser abertas dentro desta div.&lt;/p&gt;

&lt;p&gt;Para usarmos o conceito de Single Page no angular, √© necess√°rio usarmos a diretiva ng-view. Ela √© a respons√°vel por renderizar suas devidas &amp;#8216;views&amp;#8217; √† sua index principal.&lt;/p&gt;

&lt;p&gt;Para cada rota, definimos uma view anteriormente, certo?&lt;/p&gt;

&lt;p&gt;√Äquelas views ser√£o carregadas dentro desta div, dependendo da rota que o usu√°rio estiver.&lt;/p&gt;

&lt;p&gt;Mesmo n√£o sendo o foco do artigo, coloquei uma diretiva &lt;strong&gt;ng-class&lt;/strong&gt; para adicionar a classe active ao elemento &lt;li&gt; se a condi√ß√£o for verdadeira. Ou seja, quando o controller √© ativado pelo angular, ele atribui na vari√°vel activetab a sua localiza√ß√£o atual.&lt;/p&gt;

&lt;p&gt;Se estivermos na rota &amp;#8216;/&amp;#8217; a classe active ir√° ser adicionada ao primeiro elemento &lt;li&gt;.&lt;/p&gt;

&lt;p&gt;Se estivermos na rota &amp;#8216;/sobre&amp;#8217; a classe active ir√° ser adicionada ao segundo elemento &lt;li&gt;.&lt;/p&gt;

&lt;p&gt;Se estivermos na rota &amp;#8216;/contato&amp;#8217; a classe active ir√° ser adicionada ao terceiro elemento &lt;li&gt;.&lt;/p&gt;

&lt;h2 id=&#34;criando-as-views&#34;&gt;Criando as views&lt;/h2&gt;

&lt;p&gt;Como √© apenas um exemplo, procurei agilidade, ent√£o, os templates s√£o praticamente iguais.&lt;/p&gt;

&lt;pre&gt;&amp;lt;!-- home.html --&amp;gt;
&amp;lt;div class=&#34;page-header&#34;&amp;gt;
   &amp;lt;h1&amp;gt;P√°gina Home!&amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;pre&gt;&amp;lt;!-- sobre.html --&amp;gt;
&amp;lt;div class=&#34;page-header&#34;&amp;gt;
   &amp;lt;h1&amp;gt;P√°gina Sobre!&amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;pre&gt;&amp;lt;!-- contato.html --&amp;gt;
&amp;lt;div class=&#34;page-header&#34;&amp;gt;
   &amp;lt;h1&amp;gt;P√°gina Contato!&amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Finalizamos por aqui pessoal, a ideia era de passar exatamente como criamos uma aplica√ß√£o Single Page com AngularJS, espero que todos consigam!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>