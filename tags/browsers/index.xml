<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Browsers on Tableless</title>
    <link>https://tableless.github.io/hugo-public/tags/browsers/index.xml</link>
    <description>Recent content in Browsers on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/tags/browsers/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>HTTP2 para Desenvolvedores de Web</title>
      <link>https://tableless.github.io/hugo-public/http2-para-desenvolvedores-de-web/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/http2-para-desenvolvedores-de-web/</guid>
      <description>

&lt;p&gt;HTTP2 significa uma mudança na forma como construímos websites. As boas práticas de HTTP1 são prejudiciais no mundo do HTTP2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HTTP1 é lento e ineficiente para a maioria dos casos de uso de hoje na web.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;HTTP1.x é a versão do HTTP que nós já conhecemos quando entramos o endereço de um site. É um protocolo antigo que foi concebido antes mesmo de sabermos o que essa imensa rede mundial de computadores se tornaria. Apesar desse protocolo continuar funcionando como esperado, simplesmente não é tão eficiente como no início, porque ultimamente estamos exigindo algo muito mais complexo do que este protocolo foi projetado originalmente.&lt;/p&gt;

&lt;h2 id=&#34;nós-estamos-hackeando-o-http1&#34;&gt;Nós estamos hackeando o HTTP1&lt;/h2&gt;

&lt;p&gt;Para que os sites carreguem em tempo aceitável usando HTTP1, desenvolvemos uma série de técnicas; hacks na verdade; para conseguirmos extrair um bom desempenho deste protocolo antigo. São eles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Usando CSS Sprites&lt;/strong&gt;: Combine várias imagens em uma só imagem e utilizando CSS para mostrar apenas uma parte dessa imagem num devido lugar da página.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concatenando o Código&lt;/strong&gt;: Tornando vários arquivos de CSS ou JS e consolidá-los em um único arquivo maior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cookieless&lt;/strong&gt; &amp;#8211; Servindo arquivos de um domínio sem o uso de cookies, através de servidores estáticos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Usando Partições de Shard&lt;/strong&gt;: Criando registros de Alias no DNS de diferentes domínios ou sub-domínios para hospedagem dos arquivos de imagens.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As duas primeiras técnicas visam evitar várias solicitações HTTP. Em HTTP1 um pedido é uma coisa muito cara e leva muito tempo, cada pedido pode ser baixados com os cookies que devem ser enviados como parte do pedido, e nada disso é compactado. É mais rápido agrupar um monte de coisas e fazer tudo de uma só vez no lado do cliente do que continuar enviando pedidos para o servidor cada momento que o código precisa de um arquivo.&lt;/p&gt;

&lt;p&gt;A terceira técnica é usada para minimizar o tempo necessário para obter os arquivos; cookies, se estiver definido, deve ser enviado para o domínio solicitado junto com cada pedido &amp;#8211; que acrescenta-se a um monte de espaço &amp;#8216;desperdiçado&amp;#8217; na linha. Se os seus arquivos estão em um domínio diferente (exemplo: imagens.meusite.com) que não usa cookies, então o pedido desses arquivos não precisará enviar cookies com eles, o que será um pouco mais rápido.&lt;/p&gt;

&lt;p&gt;A última técnica, sharding, é porque os navegadores costumavam permitir apenas duas solicitações HTTP simultâneas fossem feitas por domínio. Se você criar um novo domínio para alguns de seus arquivos, então você dobra a quantidade de conexões simultâneas o navegador irá permitir a fim de obter seus arquivos. Assim, você pode baixar o conteúdo do site mais rapidamente. Na realidade, sharding não tem sido muito útil nos últimos anos, pois os fabricantes de navegadores decidiram eliminar essa restrição das duas conexões &amp;#8216;era tonto, e eles ignoraram.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;o-que-esperar-do-http2&#34;&gt;O que esperar do HTTP2?&lt;/h2&gt;

&lt;blockquote style=&#34;font-size: 200%&#34;&gt;
  &lt;p&gt;
    &lt;em&gt;Não use as boas práticas do HTTP1 como base para um site que está sendo hospedado em HTTP2.&lt;/em&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O protocolo HTTP2 está quase aqui, ele é baseado no SPDY®, e isso torna tudo muito mais eficiente. Significa também que todas as técnicas de desempenho HTTP1 são prejudiciais. Eles irão fazer um site HTTP2 mais lento, e não mais rápido. Portanto, não use as boas práticas do HTTP1 como base para um site que está sendo hospedado em HTTP2.&lt;/p&gt;

&lt;p&gt;HTTP2 faz com que o custo de múltiplos pedidos diminua por causa de um número de técnicas já incluídas:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
  &lt;li&gt;
    HTTP2 pode deixar a conexão em aberta para reutilização por um longo de tempo, para que não haja a necessidade daquela negociação cara que HTTP1 faz com o servidor em cada solicitação.
  &lt;/li&gt;
  &lt;li&gt;
    Ao contrário do HTTP1, o novo protocolo usa compactação de arquivos e assim o tamanho da solicitação é significativamente menor &amp;#8211; e, como resultado, mais rápida.
  &lt;/li&gt;
  &lt;li&gt;
    HTTP2 é multiplex, ou seja, pode enviar e receber várias coisas ao mesmo tempo através de uma única conexão.
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O que tudo isso significa, é que não só as técnicas que usamos no HTTP1 estão obsoletas, mas como também, farão as coisas ficarem mais lentas. Você poderá estar baixando arquivos desnecessários para a página a ser servida (concatenação de código e CSS sprites são suscetíveis à isso), e a técnica de sharding invoca pesquisas de DNS que irão retardar as coisas, na verdade, no HTTP2 voce não precisar de usar shard de forma alguma.&lt;/p&gt;

&lt;p&gt;Resumindo, quando você desenvolver o front-end (html/css/js) para um site que será servido através do HTTP2, tenha a certeza de que você não está usando velhas técnicas de desempenho do HTTP1, o que irão prejudicar o seu HTTP2 site.&lt;/p&gt;

&lt;h3 id=&#34;aprendendo-mais-sobre-o-http2&#34;&gt;Aprendendo mais sobre o HTTP2&lt;/h3&gt;

&lt;p&gt;Aqui está &lt;a href=&#34;http://daniel.haxx.se/http2/&#34;&gt;um excelente artigo (em inglês)&lt;/a&gt;, escrito por Daniel Stenberg, no qual ele detalha mais profundamente esse assunto.&lt;/p&gt;

&lt;h3 id=&#34;tradução&#34;&gt;Tradução&lt;/h3&gt;

&lt;p&gt;A tradução deste artigo para o Português foi devidamente autorizada pelo autor, &lt;a href=&#34;https://mattwilcox.net/web-development/http2-for-front-end-web-developers&#34;&gt;Matt Wilcox&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Otimize a performance do seu site com o Kraken</title>
      <link>https://tableless.github.io/hugo-public/otimize-performance-seu-site-com-o-kraken/</link>
      <pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/otimize-performance-seu-site-com-o-kraken/</guid>
      <description>

&lt;p&gt;Quando o assunto é performance, você ainda pode ter muita dor de cabeça. É comum muitos sites e aplicações web terem a sua experiência deformada por problemas na performance. Há tempos procuramos métodos para otimizar nossos sites, tais como concatenação de arquivos para diminuir as requisições HTTP, minificar CSS, JavaScript e até mesmo HTML. Entre várias outras técnicas. Porém, cada vez mais essas técnicas não conseguem acompanhar os novos recursos que sempre estão surgindo para deixar nossos sites cada vez mais impressionantes. E pesados.&lt;/p&gt;

&lt;p&gt;Quando o assunto é front-end, um dos grandes vilões para uma boa performance ainda são as imagens, já que a maior parte do tráfego de seu site vem delas. Não é difícil ver uma única imagem com o tamanho superior à todo código que é carregado em uma determinada página. Tentamos contornar esse dilema usando SVG nas iconografias, fazer gradientes e elementos de interface complexos usando apenas CSS. Mas isso ainda não nos deixam isentos do uso de imagens em jpeg, gif e png, e do peso delas.&lt;/p&gt;

&lt;h3 id=&#34;conheça-o-kraken&#34;&gt;Conheça o Kraken&lt;/h3&gt;

&lt;p&gt;Como é impossível ter um site sem imagens, o que podemos fazer é amenizar o impacto delas na performance. Então aí que eu lhes apresento o Kraken.&lt;/p&gt;

&lt;p&gt;O Kraken é uma ferramenta poderosa que conta com um motor de compressão de imagens super eficiente. Eu por exemplo já tive imagens com 99% do seu tamanho reduzido. E o melhor de tudo, sem nenhum impacto na qualidade visual.&lt;/p&gt;

&lt;p&gt;E é exatamente isso que o Kraken promete, e onde ele se destaca. Não uma mera diminuição no tamanho do arquivo, mas sim que isso aconteça garantindo que não haverá perdas na qualidade visual da imagem. Como no exemplo abaixo:&lt;/p&gt;

&lt;div style=&#34;width: 766px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;img class=&#34;&#34; src=&#34;http://s29.postimg.org/kh32i0mg7/kraken_before_and_after.jpg&#34; alt=&#34;Kraken&#34; width=&#34;756&#34; height=&#34;205&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Kraken antes e depois
  &lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&#34;minha-experiência-com-o-kraken&#34;&gt;Minha experiência com o Kraken&lt;/h3&gt;

&lt;p&gt;Sempre usei o plugin imagemin do grunt. Mas nunca tive resultados expressivos. Até que, por recomendação de um amigo, eu conheci o Kraken e realmente fiquei impressionado com os seus resultados. Mas além de contar histórias, vou demonstrar o uso prático da aplicação.&lt;/p&gt;

&lt;p&gt;No meu site pessoal, na página portfolio, há uma listagem dos meus projetos e suas respectivas capas. 90% dessa página é composta por imagens e notei que estava levando muito tempo para carregar por conta dessas imagens. Então eu testei otimizar cada uma delas para ver o resultado. Antes vale lembrar que eu fiz essas imagens pelo Photoshop, e elas foram salvas no formato png no modo smallest/slow, que garante uma compressão maior. Mas será que é o suficiente? Vamos ver logo abaixo:&lt;/p&gt;

&lt;div style=&#34;width: 760px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;img class=&#34;&#34; src=&#34;http://s12.postimg.org/j3s0bu43h/compress_o.png&#34; alt=&#34;compressão&#34; width=&#34;750&#34; height=&#34;305&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    compressão
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Nessa brincadeira, eu poupei 1.84MB de carregamento em minha página, isso remete a 85.39% a menos do tamanho total de todas as imagens juntas. É um ganho e tanto, não?&lt;/p&gt;

&lt;p&gt;Agora vamos ver o impacto disso na página em questão:&lt;/p&gt;

&lt;p&gt;Antes:&lt;/p&gt;

&lt;div style=&#34;width: 557px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;img class=&#34;&#34; src=&#34;http://s30.postimg.org/6l234x6cx/kraken_antes.jpg&#34; alt=&#34;Antes&#34; width=&#34;547&#34; height=&#34;52&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Antes
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Depois&lt;/p&gt;

&lt;div style=&#34;width: 562px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;img class=&#34;&#34; src=&#34;http://s30.postimg.org/wun5npsa9/kraken_depois.jpg&#34; alt=&#34;depois&#34; width=&#34;552&#34; height=&#34;51&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    depois
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Lembrando que em ambos os carregamentos o cache foi limpo.&lt;/p&gt;

&lt;p&gt;E sobre a qualidade. Gostaria que você mesmo fizesse esse teste com a imagem de sua preferência.&lt;/p&gt;

&lt;h3 id=&#34;ok-quero-usar&#34;&gt;Ok, quero usar!&lt;/h3&gt;

&lt;p&gt;Infelizmente nada que funciona tão bem é de graça. O Kraken possui vários tipos de planos, com pagamento mensal ou anual.&lt;/p&gt;

&lt;p&gt;Mas também há também o modo gratuito, com algumas limitações, é claro. No modo gratuito você não terá acesso a recursos como a API deles, Plugin para WordPress entre outros. Mas talvez o que vá mais lhe incomodar é o limite de 1MB por imagem.&lt;/p&gt;

&lt;p&gt;Eu pessoalmente, uso apenas o modo gratuito e não tenho muitos problemas. Geralmente quando eu lido com imagens acima de 1MB, eu recorro a uma outra alternativa que citarei logo abaixo.&lt;/p&gt;

&lt;h3 id=&#34;uma-alternativa-interessante&#34;&gt;Uma alternativa interessante&lt;/h3&gt;

&lt;p&gt;Também há uma ferramenta chamada Compressor.io, ela tem a mesma finalidade do Kraken mas é 100% gratuito. Ela se demonstra tão eficiente quanto, e eu já até tive imagens que a compressão foi maior no Compressor.io do que no Kraken, como podem ver abaixo:&lt;/p&gt;

&lt;p&gt;No Kraken:&lt;/p&gt;

&lt;div style=&#34;width: 898px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;img class=&#34;&#34; src=&#34;http://s10.postimg.org/okddqy9gp/compressao_no_kraken.png&#34; alt=&#34;Kraken&#34; width=&#34;888&#34; height=&#34;93&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Kraken
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;No Compressor:&lt;/p&gt;

&lt;div style=&#34;width: 838px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;img class=&#34;&#34; src=&#34;http://s10.postimg.org/h346bqjxl/compressao_no_compressor.png&#34; alt=&#34;Compressor&#34; width=&#34;828&#34; height=&#34;57&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Compressor
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Tudo bem que nesse exemplo não se tratou de uma imagem grande. Nesse caso eu usei a imagem que se tornou a capa desse artigo. Mas demonstra que mesmo tratando-se de uma aplicação gratuita, se mostra tão competente quanto. (Não me perguntem o por que em cada ferramenta a imagem foi identificada com o tamanho original diferente. Mas é a mesma imagem, eu juro! )&lt;/p&gt;

&lt;p&gt;O único problema é que o Compressor.io só permite você otimizar uma imagem por vez, e isso pode tornar as coisas meio trabalhosas dependendo da quantidade de imagens que você precisa tratar. Também não há tantos recursos quanto o Kraken tem caso você esteja disposto a pagar pelo serviço.&lt;/p&gt;

&lt;p&gt;Caso você tenha várias imagens com menos de 1MB e algumas imagens com mais, você poderá usar o melhor de cada ferramenta para conseguir atingir a otimização de performance que você deseja para seu site, gratuitamente!&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Kraken&#34; href=&#34;http://kraken.io&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://kraken.io&#34;&gt;http://kraken.io&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Compressor&#34; href=&#34;http://compressor.io&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://compressor.io&#34;&gt;http://compressor.io&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora é com vocês!&lt;/p&gt;

&lt;p&gt;Não esqueça de deixar seu comentário abaixo! Já conhecia o Kraken? Começou a usar depois desse artigo? Conhece outras alternativas? Compartilhe conosco!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IE8 Countdown – Enforcando o demônio</title>
      <link>https://tableless.github.io/hugo-public/ie8-countdown-enforcando-o-demonio/</link>
      <pubDate>Tue, 14 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/ie8-countdown-enforcando-o-demonio/</guid>
      <description>&lt;p&gt;A própria Microsoft iniciou um processo para minimizar a utilização do IE6 pelo mundo. Claro, o IE6 era muito, mas muito pior que o IE8. Contudo, o IE8 é um browser antigo e não goza (ops!) das vantagens que os outros browsers mais modernos tem de sobra. Por isso foi iniciado um projeto para enforcar o Internet Explorer 8 chamado &lt;a href=&#34;http://theie8countdown.com/&#34;&gt;The Internet Explorer 8 Countdown&lt;/a&gt;. Esse é um projeto de 2013 e que parece estar voltando com tudo para acabar de vez com essa maldição.&lt;/p&gt;

&lt;p&gt;O que me assusta bastante é que no mês de setembro a taxa de uso do IE8 aumentou um pouco! O.o&lt;/p&gt;

&lt;p&gt;A ideia é que você possa, além de colocar o bannerzinho aí embaixo nos lugares que puder (ops!), educar as pessoas a sua volta que ainda usam esse browser a migrarem para outro mais moderno. Pode ser qualquer um, até mesmo outro Internet Explorer (o 11 de preferência, se não o 10). Esse processo de educação é ainda mais importante do que toda parafernália que você pode fazer para tentar convencer os usuários.&lt;/p&gt;

&lt;p&gt;Mãos à obra e let’s hunt IE today.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!--[if IE]&amp;gt;&amp;lt;div style=&#39;clear: both; height: 112px; padding:0; position: relative;&#39;&amp;gt;&amp;lt;a href=&#34;http://www.theie8countdown.com/ie-users-info&#34;&amp;gt;&amp;lt;img src=&#34;http://www.theie8countdown.com/assets/badge_iecountdown.png&#34; border=&#34;0&#34; height=&#34;112&#34; width=&#34;348&#34; alt=&#34;&#34; /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;![endif]--&amp;gt;
&lt;/pre&gt;

&lt;div style=&#39;clear: both; height: 112px; padding:0; position: relative;&#39;&gt;
  &lt;a href=&#34;http://www.theie8countdown.com/ie-users-info&#34;&gt;&lt;img src=&#34;http://www.theie8countdown.com/assets/badge_iecountdown.png&#34; border=&#34;0&#34; height=&#34;112&#34; width=&#34;348&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Blink: o novo motor do Chrome</title>
      <link>https://tableless.github.io/hugo-public/blink-o-novo-motor-do-chrome/</link>
      <pubDate>Thu, 04 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/blink-o-novo-motor-do-chrome/</guid>
      <description>&lt;p&gt;O &lt;a href=&#34;http://www.chromium.org/&#34;&gt;Chromium&lt;/a&gt; (que é o projeto por trás do Chrome e do Chromium OS) utiliza uma arquitetura de múltiplos processos que é diferente do WebKit. Essa arquitetura mudou muito durante a existência do Chrome, dificultando a integração entre o browser e o WebKit. Por isso o pessoal do Google está apresentando hoje o Blink, seu novo motor de renderização baseado no WebKit.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This was not an easy decision. We know that the introduction of a new rendering engine can have significant implications for the web.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O &lt;a href=&#34;http://www.chromium.org/blink&#34;&gt;Blink&lt;/a&gt; é uma decisão da equipe do Chromium de fazer um fork do projeto do WebKit e criar seu novo motor de renderização, que também será open source.&lt;/p&gt;

&lt;p&gt;Essa mudança de caminho não trará quase que nenhuma mudança para os desenvolvedores. Mas eles já adiataram que removerão algo em torno de 7.000 arquivos com mais de 4.5 milhões de linhas de código. &amp;#8220;Over the long term a healthier codebase leads to more stability and fewer bugs.&amp;#8221; &lt;a href=&#34;http://blog.chromium.org/2013/04/blink-rendering-engine-for-chromium.html&#34;&gt;diz no post oficial&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Throughout this transition, we’ll collaborate closely with other browser vendors to move the web forward and preserve the compatibility that made it a successful ecosystem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A boa notícia é que o Google é super comprometido com o projeto do WebKit. Tanto o Google quanto a Apple trabalharam juntos durante muito tempo para melhorar o WebKit para fazê-lo o que ele é hoje. Novidades virão com certeza. É só esperar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Webkit to the people</title>
      <link>https://tableless.github.io/hugo-public/webkit-to-the-people/</link>
      <pubDate>Mon, 18 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/webkit-to-the-people/</guid>
      <description>

&lt;p&gt;Eu sei que a notícia é velha, mas o Opera &lt;a href=&#34;http://www.opera.com/press/releases/2013/02/13/&#34;&gt;anunciou que chegou aos 300 milhões de usuários&lt;/a&gt; em todo mundo.&lt;/p&gt;

&lt;p&gt;Muita gente brinca que o Opera é o browser que ninguém usa. De fato os números do browser para desktop são bem pequenos quando comparamos com browsers como Firefox e Chrome. Mas o que ninguém pensa com muita frequencia é que o Opera está presente em uma série de outros dispositivos além do desktop. Há pessoas que dizem que o Opera nunca teve como foco principal os desktops. Eu não concordo. Mesmo assim, ele está presente em dispositivos como TVs, set-top-box e &lt;a href=&#34;http://techcrunch.com/2009/04/02/opera-browser-chosen-for-mobile-office-computer-in-ford-pickup-trucks/&#34;&gt;até em caminhões&lt;/a&gt;. &lt;a href=&#34;http://business.opera.com/press/releases/2009/04/02_2/&#34;&gt;Ou pelo menos estava&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Junto com a notícia dos 300 milhões de usuários, eles anunciaram que iniciarão uma transição de substituição do seu engine de renderização. Eles deixarão o Presto de lado e passarão a usar o WebKit! Yeah! 😉&lt;/p&gt;

&lt;p&gt;Na verdade não é tão Yeah! assim. Existem prós e contras. Pra ser sincero eu ainda não decidi se isso é bom ou ruim. O assunto é mais &amp;#8220;profundo&amp;#8221; do que se imagina. É tão profundo que há pessoas como o Tim Berners-Lee contra vários browsers utilizarem o mesmo motor de renderização.&lt;/p&gt;

&lt;h2 id=&#34;web-aberta&#34;&gt;Web aberta&lt;/h2&gt;

&lt;p&gt;A web foi criada para ser aberta. Para termos realmente o direito de ir e vir. &lt;a href=&#34;http://pt.wikipedia.org/wiki/Neutralidade_da_rede&#34;&gt;A internet é neutra&lt;/a&gt;. Isso quer dizer que todas as informações que trafegam na web devem ser tratadas igualmente. Nada de bloqueios ou restrições de acesso a informação, seja ela qual for. Você deve ter o direito de acessar da forma que quiser qualquer informação disponibilizada na web. É por isso que todas as &lt;a href=&#34;http://tecnologia.terra.com.br/internet/google-e-casa-branca-somam-46-mi-de-assinaturas-contra-sopa,a6a8fe32cdbda310VgnCLD200000bbcceb0aRCRD.html&#34;&gt;iniciativas de controlar o que e como consumimos conteúdo&lt;/a&gt; na web não foram adiante. A web não é de ninguém, mas é de todo mundo ao mesmo tempo.&lt;/p&gt;

&lt;p&gt;Isso é importante por um simples motivo: informação acessível. Toda informação que é publicada na web deve ser utilizada e reutilizada por qualquer um, quantas vezes quiser. O Google e outros sistemas de busca faz isso o tempo todo no seu buscador. Você faz isso quando twitta, quando posta no Facebook ou quando manda um simples artigo por email.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Admittedly, this news would have been considerably more worrying had Microsoft or Mozilla adopted Webkit. We still have three major HTML5 engines but the browser world has lost a little of its color today. &lt;a href=&#34;http://www.sitepoint.com/opera-switches-to-webkit-rendering-engine/&#34;&gt;Craig Buckler&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O W3C tem lutado para que empresas e governos mantenham seus dados abertos e acessíveis. O Tim Berners-Lee, quando veio para a &lt;a href=&#34;http://revistagalileu.globo.com/Revista/Common/0,,EMI203321-17770,00-AL+GORE+E+TIM+BERNERS+LEE+FALAM+SOBRE+LIBERDADE+DE+INFORMACAO+NA+CAMPUS+PAR.html&#34;&gt;Campus Party aqui no Brasil em 2011&lt;/a&gt;, falou um pouco sobre este assunto.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Há governos e empresas que estão tentando controlar as informações ou cobrar por elas. É importante que todos nós lutemos para que a rede continue aberta e livre.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para citar um exemplo besta: quem nunca entrou em algum website de notícias onde você não pode clicar com o botão direito por que ele é travado por um script? Uma decisão tão estúpida que chega a ser hilário.&lt;/p&gt;

&lt;p&gt;Claro que não estamos dizendo aqui que toda e qualquer informação deva ser publicada para o uso de qualquer um. Se você já estudou sobre Web Semântica, deve saber que existe um termo utilizado chamado &lt;a href=&#34;http://www.w3.org/2005/Incubator/prov/wiki/What_Is_Provenance&#34;&gt;Provenance&lt;/a&gt;, que define de onde vem os dados e o que pode ser feito com eles. Os padrões da Web Semântica determina como você pode manipular esses dados e quais são seus direitos de acesso.&lt;/p&gt;

&lt;p&gt;Tanto a utilização quanto a publicação de dados na internet deve ser feita com responsabilidade. Embora a internet seja um ambiente de livre acesso, ninguém quer que dados importantes da sua vida estejam livres para qualquer um manipular da maneira que bem entender.&lt;/p&gt;

&lt;p&gt;Mas para que a web seja livre de verdade, a internet não pode ser controlada, de forma nenhuma, apenas por uma empresas, órgão, pessoa etc etc etc. Na época da guerra dos browsers esse cenário era muito clara: se uma empresa fizesse um browser que fosse muito utilizado, ela poderia ter possibilidade de tentar e até conseguir, controlar o que os usuários desse browser acessassem. Era isso que a Microsoft pensava, pelo menos. Eles viram que se a Netscape ganhasse a tal guerra, eles teriam muito &amp;#8220;poder&amp;#8221; nas mãos.&lt;/p&gt;

&lt;p&gt;A mesma ideia pode se aplicar agora se todos os browsers decidirem migrar para o WebKit. Praticamente quem decidirá quais novidades dos padrões web devem ser implementados agora, será o grupo que cuida do WebKit e não os fabricantes browsers.&lt;/p&gt;

&lt;p&gt;O desenvolvedor Robert O’Callahan disse por que a adoção em massa do WebKit pelos browsers pode não ser uma boa coisa:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;some people are wondering whether engine diversity really matters. &amp;#8220;Webkit is open source so if everyone worked together on it and shipped it, would that be so bad?&amp;#8221; Yes. Web standards would lose all significance and standards processes would be superseded by Webkit project decisions and politics. Webkit bugs would become the standard: there would be no way for developers to test on multiple engines to determine whether an unexpected behavior is a bug or intended.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Olha só o que o Tim Berners-Lee retuitou estes dias:&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;
  &lt;p&gt;
    If you think a WebKit monoculture is good for web developers or the Web, you’re incredibly short-sighted (and likely inexperienced), sorry.&amp;mdash; Lea Verou (@LeaVerou) &lt;a href=&#34;https://twitter.com/LeaVerou/status/301727973273391104&#34;&gt;February 13, 2013&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Não estou dizendo que ter todos os browsers sob um mesmo motor de renderização não iria melhorar nossas vidas, por que sem dúvida, iria. O problema é que isso não é bom para web, entende? Embora seus problemas de compatibilidade entre browsers diminuiriam para quase zero, a web não iria ter a liberdade que ela merece.&lt;/p&gt;

&lt;p&gt;imagina se uma empresa que tem dinheiro infinito (posso pensar em pelo menos duas, uma delas tem um sistema de busca e a outra iniciou o projeto do Webkit), coloca centenas de desenvolvedores para &amp;#8220;ajudar&amp;#8221; a desenvolver o Webkit. Será, será mesmo, que uma empresa dessas estaria fazendo isso só para ajudar todo mundo? Don&amp;#8217;t be evil my ass, alguns diriam.&lt;/p&gt;

&lt;p&gt;Tem pessoas que &lt;a href=&#34;http://braintrace.ru/posts/2013-02-14-opera-and-webkit-good-or-bad.html&#34;&gt;pensam que a monocultura de motores de renderização não é uma má ideia&lt;/a&gt; e defendem que os browsers não competem entre si apenas pela quantidade de padrões que cada um suporta. E eu concordo. Hoje em dia a experiência que o usuário tem com a interface de cada browser pode ser definitiva para a escolha. Há outros aspectos de decisão que podem ser explorados com mais vigor, como por exemplo a forma com que o browser gerencia suas senhas e contas ou como ele sincroniza seu perfil entre os dispositivos, gerenciamento de bookmarks ou sincronização com serviços e redes sociais. Há estes e vários outros campos onde os browsers podem competir e que talvez seriam mais interessantes para os usuários.&lt;/p&gt;

&lt;p&gt;Eu mesmo já me peguei várias vezes desejando que todos os browsers tivessem o mesmo motor de renderização só por causa de um ou outro problema na hora do desenvolvimento. Imagina só, não precisaríamos nos preocupar em utilizar prefixos de browsers (&lt;a href=&#34;http://tableless.com.br/prefixos-dos-browsers-a-web-precisa-de-voce/&#34;&gt;esta é outra guerra&lt;/a&gt;). Também atingiríamos um número maior de browsers com um mesmo código, já que Chrome, Opera, Safari e suas respectivas versões mobiles estariam sob o mesmo motor de renderização. Sem falar em mobiles como Blackberry.&lt;/p&gt;

&lt;p&gt;Essa história ainda vai dar o que falar quando o Opera anunciar sua primeira versão com Webkit. Qual é a sua opinião?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Flexbox – Organizando seu layout</title>
      <link>https://tableless.github.io/hugo-public/flexbox-organizando-seu-layout/</link>
      <pubDate>Mon, 01 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/flexbox-organizando-seu-layout/</guid>
      <description>

&lt;p&gt;O CSS Flexible Box Layout Model ou simplesmente &lt;strong&gt;Flexbox&lt;/strong&gt; faz parte da especificação do CSS3 que promete organizar elementos na página previsivelmente quando o layout precisa ser visualizado em diversos tamanhos de tela e em diversos dispositivos.&lt;/p&gt;

&lt;p&gt;O Flexbox nos ajuda a organizar esses elementos sem a ajuda do float e também nos ajudam a sanar problemas de &lt;a href=&#34;http://tableless.com.br/css_box_model/&#34;&gt;Box Model&lt;/a&gt; que normalmente acontecem quando acrescentamos, padding, margin e border além da largura do elemento.&lt;/p&gt;

&lt;p&gt;A ideia é simples: os filhos de um elemento com flexbox pode se posicionar em qualquer direção e pode ter dimensões flexíveis para se adaptar. Você pode posicionar os diversos elementos independente da sua posição na estrutura do HTML, o que é muito bom. Um dos problemas do float a sua dependência com os elementos na estrutura do HTML. Estes elementos precisam estar em uma ordem específica, se não o layout não dá certo. Com o Flexbox essa ordem não importa, isso quer dizer que você pode organizar a informação do seu HTML de beneficiando o SEO e Acessibilidade. O código da estruturação destes elementos fica mais simples e fácil de manter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Atenção:&lt;/strong&gt; O Flexbox ainda é uma especificação e ainda deve ser usada com prefixos como -webkit-, -moz-, -ms-, -o-.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.github.com/exemplos/flexbox.html&#34;&gt;Veja o exemplo completo no nosso GITHUB.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;elementos-e-vocabulário&#34;&gt;Elementos e Vocabulário&lt;/h3&gt;

&lt;p&gt;Você precisa entender que o Flexbox é uma nova maneira de posicionar elementos do seu layout e por isso precisamos de novos nomes para identificar os elementos da estrutura.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flex container&lt;/strong&gt; é o elemento que envolve sua estrutura. Você define que um elemento é um Flex Container com a propriedade &lt;em&gt;display&lt;/em&gt; com os valores &lt;em&gt;flex&lt;/em&gt; ou &lt;em&gt;inline-flex&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flex Item&lt;/strong&gt; são os elementos filho do &lt;strong&gt;flex container&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eixos ou Axes&lt;/strong&gt; são as duas direções básicas que existem em um Flex Container: &lt;em&gt;main axis&lt;/em&gt;, que seria o eixo horizontal ou o eixo principal e o &lt;em&gt;cross axis&lt;/em&gt; que seria o eixo vertical.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Directions&lt;/strong&gt; determina a origem e o término do fluxo dos ítens. Eles seguem o vetor estabelecido pelo modo traidicional de escrita: esquerda para direita, direita para esquerda etc.&lt;/p&gt;

&lt;p&gt;A propriedade &lt;em&gt;order&lt;/em&gt; determina o lugar que os elementos aparecerão.&lt;/p&gt;

&lt;p&gt;A propriedade &lt;em&gt;flex-flow&lt;/em&gt; determina a ordem do fluxo em que os elementos aparecerão.&lt;/p&gt;

&lt;p&gt;Você pode definir se os elementos serão forçados a ficar em uma mesma linha ou se eles irão quebrar em várias linhas com a propriedade &lt;strong&gt;flex-wrap&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;definindo-uma-estrutura-flexbox&#34;&gt;Definindo uma estrutura Flexbox&lt;/h3&gt;

&lt;p&gt;Para iniciarmos, segue o HTML básico abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Exemplo Flexbox&amp;lt;/title&amp;gt;
    &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div class=&#34;main&#34;&amp;gt;
    &amp;lt;div&amp;gt;Um div&amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;Segundo div&amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;Terceiro Div&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Agora vamos para o CSS. Primeiro definimos para o div MAIN virar um Flex Container. Para isso definimos a propriedade display com os valores &lt;em&gt;flex&lt;/em&gt; ou &lt;em&gt;inline-flex&lt;/em&gt;. O valor FLEX faz o elemento ser um BLOCO, com o valor inline-flex, o elemento vira um inline-block com as propriedades de Flex Container.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.main {
    display: -webkit-flex;
    display: flex;
}

/** Para deixar uma corzinha de fundo nos divs filhos **/
.main div {
    background:#CCC;
    margin-right:10px;
}
&lt;/pre&gt;

&lt;p&gt;Se fizermos isso automaticamente os divs dentro do nosso &lt;strong&gt;.main&lt;/strong&gt; já ficarão um ao lado do outro.&lt;/p&gt;

&lt;p&gt;Para você fazer com que os &lt;strong&gt;flex items&lt;/strong&gt; (filhos do Flex Container) comecem a ter uma largura distribuída, basta definir para eles a propriedade &lt;em&gt;flex&lt;/em&gt;, como abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.main {
    width:500px;
    background:#EFEFEF;
    height:500px;
    display: -webkit-flex;
    display: flex;
}

.main div {
    background:#CCC;
    margin-right:10px;

    -webkit-flex:1 1 auto;
    flex:1 1 auto;
}
&lt;/pre&gt;

&lt;p&gt;Até agora está ficando assim:&lt;/p&gt;

&lt;p&gt;A propriedade &lt;strong&gt;flex&lt;/strong&gt; é um atalho para as propriedades &lt;em&gt;flex-grow, flex-shrink e flex-basis&lt;/em&gt;. O flex-basis define a largura dos flex items. Deixemos eles quietinhos por enquanto.&lt;/p&gt;

&lt;p&gt;Suponha agora que você queira modificar a ordem com que os elementos apareçam. Simples, use a propriedade &lt;strong&gt;order&lt;/strong&gt; e modifique a ordem das colunas:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.main div.primeiroDiv {-webkit-order:2;}
.main div.segundoDiv {-webkit-order:3;}
.main div.terceiroDiv {-webkit-order:1;}
&lt;/pre&gt;

&lt;p&gt;Nada de float para lá e float para cá. Só uma mudança de números e pronto. Simple like that.&lt;/p&gt;

&lt;p&gt;Vamos pular para o &lt;strong&gt;.main&lt;/strong&gt; novamente.&lt;/p&gt;

&lt;h3 id=&#34;flex-flow-8211-definindo-colunas-ou-linhas&#34;&gt;Flex-flow &amp;#8211; definindo colunas ou linhas&lt;/h3&gt;

&lt;p&gt;Agora suponha que você queira linhas em vez de colunas. Tipo, você quer fazer uma versão para mobiles, em mobiles ter colunas é ruim, então você quer colocar uma coluna em cima da outra, coisa básica. Fazemos isso toda hora retirando os floats e as larguras das colunas. Aqui você define apenas a propriedade &lt;strong&gt;flex-flow&lt;/strong&gt; com o valor &lt;strong&gt;column&lt;/strong&gt; e pronto!&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.main {
    width:500px;
    background:gray;
    height:500px;
    display: -webkit-flex;
    display: flex;

    -webkit-flex-flow: column;
    flex-flow: column;
}
&lt;/pre&gt;

&lt;p&gt;Os outros valores da propriedade &lt;strong&gt;flex-flow&lt;/strong&gt; são row, row-reverse e column-reserve. O row-reverse e o column-reserve invertem a ordem dos elementos automaticamente sem a obrigação de modificar novamente a propriedade order definido em cada elemento. Coisa linda, fala aí.&lt;/p&gt;

&lt;h3 id=&#34;conclusão-e-referências&#34;&gt;Conclusão e referências&lt;/h3&gt;

&lt;p&gt;O Flexbox hoje roda em Chrome. Fiz testes no Safari 6 e não funcionou. No IE10 dizem que funciona com o -ms- aplicado. Acho que não ficaremos muito tempo sem utilizar essa recomendação. Ano que vem, talvez? 😉&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.github.com/exemplos/flexbox.html&#34;&gt;Veja o exemplo completo no nosso GITHUB.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Será recomendado que o flexbox seja utilizado para layouts simples e organização de elementos internos. Para layouts mais complexos e maiores, a sugestão é que o método de Grid Layout seja utilizado. Temos um exemplo aqui de como funcionaria mais ou menos o &lt;a href=&#34;http://tableless.com.br/css3-modulo-template-layout/&#34;&gt;Grid Layout&lt;/a&gt; &amp;#8211; na verdade seria o Template Layout.&lt;/p&gt;

&lt;p&gt;Isso é um grande avanço para a Arquitetura de Layouts. Não vamos mais depender da estrutura do HTML para fazermos nossos layouts. Fazer layouts responsivos ficará muito mais fácil e aplicações que precisam ter suas estruturas totalmente mudadas nos diversos dispositivos serão simples de manter. Reutilizaremos totalmente nosso HTML já programado e o CSS controlará de fato a camada visual das nossas aplicações e sites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3.org/TR/css3-flexbox/&#34;&gt;Link para a documentação&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://demo.agektmr.com/flexbox/&#34;&gt;Flexbox Playground &amp;#8211; veja um exemplo modificando seus valores&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>10 anos de Firefox</title>
      <link>https://tableless.github.io/hugo-public/10-anos-de-firefox/</link>
      <pubDate>Mon, 24 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/10-anos-de-firefox/</guid>
      <description>&lt;p&gt;E o &lt;a href=&#34;http://getfirefox.com/&#34;&gt;Firefox&lt;/a&gt; faz 10 anos.&lt;/p&gt;

&lt;p&gt;Para quem não sabe o Firefox é filho do Mozilla, que é filho do Netscape, que é filho do Mosaic, que era o verbo e criou a internet em 7 dias. 😉&lt;/p&gt;

&lt;p&gt;Abaixo segue alguns vídeos para comemorar a data. Se você é um desenvolvedor de verdade, é praticamente uma obrigação assisti-los. Se você é novato na área, esses vídeos vão te mostrar como era desenvolver para web. E também &lt;a href=&#34;http://www.mozilla.org/about/manifesto.pt-br.html&#34;&gt;leia o manifesto da Mozilla&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=DeEafmwRk6A&#34;&gt;http://www.youtube.com/watch?v=DeEafmwRk6A&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Querido usuário: Por favor, atualize seu browser</title>
      <link>https://tableless.github.io/hugo-public/querido-usuario-atualize-seu-browser/</link>
      <pubDate>Sun, 15 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/querido-usuario-atualize-seu-browser/</guid>
      <description>

&lt;p&gt;Compras. Redes sociais. Email. Leitura. Buscando. Banco. Pesquisa. Tudo isso são tarefas comuns que pessoas fazem na Internet. Você provavelmente faz todas essas coisas em algum momento. Então, você é igual a muitas pessoas, voc6e provavalmente faz essas coisas toda semana (e muitas vezes todos os dias).&lt;/p&gt;

&lt;p&gt;O blog que você está lendo agora, Tableless, normalmente publica conteúdo que envolve designers gráficos, web designer e desenvolvedores web com níveis de conhecimento técnico variáveis. Mas hoje, esse artigo é para você &amp;#8211; uma pessoa que não é programadora, mas é um usuário da web todos os dias.&lt;/p&gt;

&lt;p&gt;Nós do Tableless, durante algum tempo com desingers e desenvolvedores ao redor do mundo, queremos que você tenha a melhor experiência possível na Web. De fato, nas comunidades de design e desenvolvimento, nós gastamos horas incontáveis todas as semanas discutindo e pesquisando padrões e práticas que nós sabemos que farão sua experiência ser infinitamente melhor.&lt;/p&gt;

&lt;p&gt;Mas &lt;strong&gt;o browser que você está usando pode estar limitando esse potencial&lt;/strong&gt;. Então, por favor, leia esse artigo, aí então você poderá aprender o quão drástico é tentar melhorar sua experiência na web.&lt;/p&gt;

&lt;h3 id=&#34;seu-browser-está-muito-velho&#34;&gt;Seu browser está muito velho&lt;/h3&gt;

&lt;p&gt;Todos que acessam páginas na internet em um computador utilizam um navegador (também conhecido como Browser). Sem um browser você não pode ver ou interagir com websites. Como você acessa websites como Facebook e YouTube? Você provavelmente utiliza um programa comum que se abre quando você clica em um grande ícone com um &amp;#8220;E&amp;#8221; azul na sua área de trabalho. Ele deve se parecer com isso:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/07/ie-logo.jpg&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/ie-logo.jpg&#34; alt=&#34;Logo do Internet Explorer&#34; title=&#34;Logo do Internet Explorer&#34; width=&#34;500&#34; height=&#34;300&#34; class=&#34;alignnone size-full wp-image-6423&#34; srcset=&#34;uploads/2012/07/ie-logo.jpg 500w, uploads/2012/07/ie-logo-300x180.jpg 300w&#34; sizes=&#34;(max-width: 500px) 100vw, 500px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Este &amp;#8220;e&amp;#8221; não é um atalho para um programa genérico de Internet. Ele é um atalho para um browser feito pela Microsoft, chamado de &amp;#8220;Internet Explorer&amp;#8221; (também conhecido apenas como IE). Ao passar de 17 anos, este browser foi o browser mais popular. Em uma vez, ele foi o melhor browser que você poderia utilizar. Mas isso não mais verdade agora.&lt;/p&gt;

&lt;p&gt;Internet Explorer está atualmente em sua versão 9, e a versão 10 é supostamente a versão oficial lançada a mais ou menos um ano atrás. Mas a maioria das pessoas não estão usando o IE9 &amp;#8211; a maioria dos usuários de internet que usam o browser da Microsoft ainda estão usando uma versão anterior, não estável, insegura e lerda do IE (algo como IE8 ou mais velho).&lt;/p&gt;

&lt;p&gt;A verdade é, até o IE9 (o qual teve um grande melhoramento comparando com as versões antigas do Internet Explorer) não é tão atual quantos os outros browsers do mercado. Então, se você ainda utilizando essa versão do Internet Explorer, &lt;strong&gt;nós recomendamos fortemenete que você atualize para uma versão diferente do browser&lt;/strong&gt;. Para ajudá-lo nessa decisão, nós temos algumas opções para você.&lt;/p&gt;

&lt;p&gt;Mas antes de apresentar outros browsers para você, nos deixe rapidamente mostrar algumas razões pelo qual utilizar browsers antigos como o IE7 e o IE8 não é uma coisa boa.&lt;/p&gt;

&lt;h3 id=&#34;o-que-está-de-errado-com-browsers-antigos&#34;&gt;O que está de errado com browsers antigos?&lt;/h3&gt;

&lt;p&gt;Browsers antigos (especialmente o Internet Explorer nas versões 6, 7 e 8) são menos estáveis e &lt;strong&gt;muito mais vulneráveis para virus, spywares, malware, e outras motivos de segurança&lt;/strong&gt;. Isto obviamente são grandes problemas para se preocupar &amp;#8211; especialmente para pessoas que compram online. Logo, apenas o motivo de segurança já é uma boa razão para você atualizar. Mas temos mais do que isso.&lt;/p&gt;

&lt;h4 id=&#34;browsers-antigos-são-lerdos-e-travam-mais&#34;&gt;Browsers antigos são lerdos e travam mais&lt;/h4&gt;

&lt;p&gt;Primeiramente, browsers antigos são muito lerdos. Toda página da internet que carrega em um browser, executa uma série de diferentes tarefas. Uma dessas tarefas é processar o carregamento de diversos arquivos. Estes arquivos incluem imagens, código de programação e outros recursos para ajudar a melhorar o visual e as funcionalidades do site que você está visitando. Velhos browsers não executam essas tarefas na mesma velocidade dos novos browsers. Isto faz sua experiência na Web ser muito lerda, e então algumas vezes isso dá pane no seu browser fazendo-o travar.&lt;/p&gt;

&lt;h4 id=&#34;browsers-antigos-não-conseguem-mostrar-novos-websites&#34;&gt;Browsers antigos não conseguem mostrar novos websites&lt;/h4&gt;

&lt;p&gt;Outro problema dos browsers velhos é que suas capacidades visuais são muito limitadas. Por exemplo, em um browser antigo, para mostrar uma simples animação, a pessoa que criou o website precisa utilizar um arquivo de vídeo ou um Flash (como os que encontramos no YouTube) ou muito código de programação extra (chamado de Javascript). Isso quer dizer que a página irá levar muito tempo carregando, dificultando novamente sua experiência no site.&lt;/p&gt;

&lt;p&gt;Novos browsers suportam novas tecnologias (como HTML5 e CSS3). Estas linguagens servem como uma fundação para muitos websites hoje e virtualmente para TODOS os websites e aplicações. Mas infelizmente, muitos destes &lt;strong&gt;novos websites não irão aparecer ou funcionar da mesma maneira em browsers antigos com o IE8&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Para demonstrar este problema, dê uma olhada na imagem abaixo. Essa imagem é um screeshot tirada de um infográfico de um site chamado &lt;a href=&#34;http://www.jonathan-krause.de/rainforest&#34;&gt;Rainforest Deforestation&lt;/a&gt; (um site sobre reflorestamento). Veja como ele aparece no IE8:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/07/krause-ie8.jpg&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/krause-ie8.jpg&#34; alt=&#34;&#34; title=&#34;krause-ie8&#34; width=&#34;500&#34; height=&#34;296&#34; class=&#34;alignnone size-full wp-image-6426&#34; srcset=&#34;uploads/2012/07/krause-ie8.jpg 500w, uploads/2012/07/krause-ie8-300x177.jpg 300w&#34; sizes=&#34;(max-width: 500px) 100vw, 500px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora veja como ele aparece em browsers novos como o Chrome ou o Firefox:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/07/krause-chrome.jpg&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/krause-chrome.jpg&#34; alt=&#34;&#34; title=&#34;krause-chrome&#34; width=&#34;500&#34; height=&#34;276&#34; class=&#34;alignnone size-full wp-image-6425&#34; srcset=&#34;uploads/2012/07/krause-chrome.jpg 500w, uploads/2012/07/krause-chrome-300x165.jpg 300w&#34; sizes=&#34;(max-width: 500px) 100vw, 500px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IE8 causa muitos problemas nessa página: muitos elementos gráficos não estão aparecendo, todas as animações não funcionam e muitos blocos de textos estão mal alinhados. Isso é causado pelo fato de que a página foi construída com novas tecnologias de design que os browsers antigos com o IE8 não suportam.&lt;/p&gt;

&lt;h3 id=&#34;opção-de-novos-browsers&#34;&gt;Opção de novos browsers&lt;/h3&gt;

&lt;p&gt;Agora que você entende que é altamente recomendável atualizar seu browser, vamos olhar quais as opções você tem de novos browsers, e quais as qualidades estes novos browsers tem. Por favor, entenda que mudar para estes novos browsers é grátis e não toma mais do que alguns minutos.&lt;/p&gt;

&lt;h4 id=&#34;google-chrome-5&#34;&gt;&lt;a href=&#34;https://www.google.com.br/chrome&#34;&gt;Google Chrome&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Em Maio de 2012, de acordo com um site de estatísticas, o &lt;a href=&#34;https://www.google.com.br/chrome&#34;&gt;Google Chrome&lt;/a&gt; (todas as versões combinadas) se tornou o browser mais popular no mundo (comparando com o IE, com todas as suas versões combinadas). Chrome foi lançado em 2008 e tem um número maior de vantagens sob browsers antigos com o IE8.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.google.com.br/chrome&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/chrome-logo1.jpg&#34; alt=&#34;&#34; title=&#34;chrome-logo1&#34; width=&#34;500&#34; height=&#34;300&#34; class=&#34;alignnone size-full wp-image-6430&#34; srcset=&#34;uploads/2012/07/chrome-logo1.jpg 500w, uploads/2012/07/chrome-logo1-300x180.jpg 300w&#34; sizes=&#34;(max-width: 500px) 100vw, 500px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;mozilla-firefox-6&#34;&gt;&lt;a href=&#34;http://www.mozilla.org/pt-BR/firefox/new/?from=getfirefox&#34;&gt;Mozilla Firefox&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;O &lt;a href=&#34;http://www.mozilla.org/pt-BR/firefox/new/?from=getfirefox&#34;&gt;Firefox&lt;/a&gt; foi o principal competidor do Internet Explorer desde algo em torno do ano 2000. Até Google Chrome se tornar o browser mais popular, Firefox é um grande browser com muitas vantagens sob browsers antigos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.mozilla.org/pt-BR/firefox/new/?from=getfirefox&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/ff-logo.jpg&#34; alt=&#34;&#34; title=&#34;ff-logo&#34; width=&#34;500&#34; height=&#34;300&#34; class=&#34;alignnone size-full wp-image-6427&#34; srcset=&#34;uploads/2012/07/ff-logo.jpg 500w, uploads/2012/07/ff-logo-300x180.jpg 300w&#34; sizes=&#34;(max-width: 500px) 100vw, 500px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;opera-7&#34;&gt;&lt;a href=&#34;http://www.opera.com/&#34;&gt;Opera&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Comparado com os outros browsers, Opera não é tão usado, mas tem sido utilizado por muitos usuários desde os anos 90. Opera sempre foi um browser vanguardista em inovação e suporte a muitas tecnologias e características que fazem websites se tornarem mais rápidos e mais ricos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.opera.com/&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/opera-logo.jpg&#34; alt=&#34;&#34; title=&#34;opera-logo&#34; width=&#34;500&#34; height=&#34;300&#34; class=&#34;alignnone size-full wp-image-6428&#34; srcset=&#34;uploads/2012/07/opera-logo.jpg 500w, uploads/2012/07/opera-logo-300x180.jpg 300w&#34; sizes=&#34;(max-width: 500px) 100vw, 500px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;apple-safari-8&#34;&gt;&lt;a href=&#34;http://www.apple.com/br/safari/&#34;&gt;Apple Safari&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Este é o browser utilizado pelos usuários de iPhones e iPads. Em relação as suas características, o Safari é muito parecido com o Google Chrome e foi lançado em torno do ano de 2003.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.apple.com/br/safari/&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/safari-logo.jpg&#34; alt=&#34;&#34; title=&#34;safari-logo&#34; width=&#34;500&#34; height=&#34;300&#34; class=&#34;alignnone size-full wp-image-6429&#34; srcset=&#34;uploads/2012/07/safari-logo.jpg 500w, uploads/2012/07/safari-logo-300x180.jpg 300w&#34; sizes=&#34;(max-width: 500px) 100vw, 500px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;por-que-os-novos-browsers-são-melhores&#34;&gt;Por que os novos browsers são melhores?&lt;/h3&gt;

&lt;p&gt;Os browsers mostrados acima tem um número de gigante de vantagens contra os browsers novos, incluindo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eles travam e congelam menos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;São mais seguros contra virus, malware e outros problemas de segurança conhecidos&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Muito mais rápidos no carregamento de páginas.&lt;/li&gt;
&lt;li&gt;Uma área de visualização maior.&lt;/li&gt;
&lt;li&gt;Uma larga variedade de plugins e aplicações que dão características extras para melhorar a navegação na web.&lt;/li&gt;
&lt;li&gt;Diferentemente do IE9 e o IE10, eles podem ser instalados no Windows XP.&lt;/li&gt;
&lt;li&gt;Novos browsers se atualizam automaticamente para a versão mais atual ou eles irão te notificar quando houver uma versão melhor do que a versão que você está usando.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;sobre-a-atualização-automática&#34;&gt;Sobre a atualização automática&lt;/h4&gt;

&lt;p&gt;O último ponto da lista de menções é o fato de que novos browsers irão automaticamente avisar você sobre uma mais nova &amp;#8211; isto é uma boa coisa. Quando você tem um browser que não se atualiza automaticamente você perde um número importante de benefícios além daqueles que já citamos. Alguns como:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Você irá raramente verá aquele aviso que diz &amp;#8220;seu browser não pode ver este site&amp;#8221;.&lt;/li&gt;
&lt;li&gt;Se qualquer problema conhecido de vulnerabilidades de segurança for conhecido, eles irão arrumar automaticamente.&lt;/li&gt;
&lt;li&gt;Sempre que seu browser estiver atualizado, seu browser ficará mais rápido, isso significa que o tempo gasto esperando pelo carregamento de páginas será mínimo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Browsers velhos como IE7 e IE8 não notificam você automaticamente sobre uma nova atualização, então se você quiser usar um browser antigo, sua experiência na web será menos segura (e menos interessante).&lt;/p&gt;

&lt;h4 id=&#34;extensões-e-plugins&#34;&gt;Extensões e Plugins&lt;/h4&gt;

&lt;p&gt;Como mencionamos anteriormente, uma das características dos novos browsers é a habilidade de adicionar extensões, add-ons e plugins. O &lt;a href=&#34;https://chrome.google.com/webstore/category/home?hl=pt-BR&amp;amp;utm_source=chrome-ntp-launcher&#34;&gt;Chrome Web Store&lt;/a&gt; tem centenas de extensões úteis, incluindo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/nmameahlembdcigphohgiodcgjomcgeo&#34;&gt;Notificações do Facebook&lt;/a&gt;, que deixa você atualizado com as atividades dos seus amigos sempre quando você não está no Facebook.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/ciagpekplgpbepdgggflgmahnjgiaced&#34;&gt;Lista de desejos da Amazon&lt;/a&gt;, que te permite adicionar virtualmente qualquer produto de qualquer website para a sua lista de desejos da Amazon.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/mgijmajocgfcbeboacabfgobmjgjcoja&#34;&gt;Dicionário do Google&lt;/a&gt;, que permite clicar duas vezes em qualquer palavra para ver qual é sua definição.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://www.google.com.br/chrome&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/chrome-store.jpg&#34; alt=&#34;&#34; title=&#34;chrome-store&#34; width=&#34;1196&#34; height=&#34;636&#34; class=&#34;alignnone size-full wp-image-6432&#34; srcset=&#34;uploads/2012/07/chrome-store.jpg 1196w, uploads/2012/07/chrome-store-300x159.jpg 300w, uploads/2012/07/chrome-store-1024x544.jpg 1024w&#34; sizes=&#34;(max-width: 1196px) 100vw, 1196px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E os &lt;a href=&#34;https://addons.mozilla.org/pt-BR/firefox/&#34;&gt;complementos para Firefox&lt;/a&gt;? Bem, adicionalmente às extensões mencionadas do Chrome, há algumas escolhas populares e úteis incluindo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://addons.mozilla.org/pt-BR/firefox/addon/video-downloadhelper/&#34;&gt;Vídeo DownloadHelper&lt;/a&gt; que permite baixar e converter facilmente vídeos, audios e fotos do YouTube e outros sites similares.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://addons.mozilla.org/pt-BR/firefox/addon/wot-safe-browsing-tool/&#34;&gt;WOT &amp;#8211; Safe Surfing&lt;/a&gt;, que mostra quais websites você pode confiar, baseado na experiência de milhões de usuários.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://addons.mozilla.org/pt-BR/firefox/addon/fastestfox-browse-faster/&#34;&gt;FastestFox&lt;/a&gt;, que ajuda a economizar tempo e aumentar a produtividade aumentando a velocidade de tarefas repetitivas que você executa no browser.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tanto o Chrome quanto o Firefox não são os únicos browsers que oferecem esse tipo de extensões. Você pode procurar extensões para &lt;a href=&#34;https://extensions.apple.com/&#34;&gt;Safari&lt;/a&gt; e para o &lt;a href=&#34;https://addons.opera.com/e&#34;&gt;Opera&lt;/a&gt; se você escolher utilizar esses browsers.&lt;/p&gt;

&lt;h3 id=&#34;8220-todos-os-meus-favoritos-estão-no-internet-explorer-8221&#34;&gt;&amp;#8220;Todos os meus favoritos estão no Internet Explorer&amp;#8221;&lt;/h3&gt;

&lt;p&gt;Todo mundo tem favoritos (ou Bookmarks, como alguns chamam) no browser que são usados regularmente e isto é uma preocupação válida se você não quer mudar de browser por que todos os seus favoritos estão em um browser antigo. Mas mudar seus favoritos de um browser antigo para um browser novo não é difícil.&lt;/p&gt;

&lt;p&gt;Para instruções de como transferir seus favoritos para seu novo browser, visite o site &lt;a href=&#34;http://browsingbetter.com/#saving&#34;&gt;Browsing Better&lt;/a&gt; website. Quando você visitar a página, clique no ícone do browser que você está usando atualmente e siga as instruções das imagens que aparecerem.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/ie-export.jpg&#34; alt=&#34;&#34; title=&#34;ie-export&#34; width=&#34;500&#34; height=&#34;395&#34; class=&#34;alignnone size-full wp-image-6433&#34; srcset=&#34;uploads/2012/07/ie-export.jpg 500w, uploads/2012/07/ie-export-300x237.jpg 300w&#34; sizes=&#34;(max-width: 500px) 100vw, 500px&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;eu-não-quero-mudar-8211-estou-feliz-com-o-internet-explorer&#34;&gt;Eu não quero mudar &amp;#8211; Estou feliz com o Internet Explorer&lt;/h3&gt;

&lt;p&gt;Se mesmo depois de ter lido tudo que escrevemos acima você ainda não querer mudar para um browser diferente, nós temos uma última opção para que você considere.&lt;/p&gt;

&lt;p&gt;Você pode continuar utilizando o Internet Explorer e ter a velocidade e experiências parecidas com a do Google Chrome bastando instalar um add-on do Internet Explorer chamado &lt;a href=&#34;http://www.google.com/chromeframe?prefersystemlevel=true&amp;amp;hl=pt-BR&#34;&gt;Chrome Frame&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/07/chrome-frame.jpg&#34; alt=&#34;&#34; title=&#34;chrome-frame&#34; width=&#34;476&#34; height=&#34;485&#34; class=&#34;alignnone size-full wp-image-6434&#34; srcset=&#34;uploads/2012/07/chrome-frame.jpg 476w, uploads/2012/07/chrome-frame-294x300.jpg 294w&#34; sizes=&#34;(max-width: 476px) 100vw, 476px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Chrome Frame é um add-on que ativa novas tecnologias como o HTML5 e CSS3 nas versões 6, 7, 8 e 9 do Internet Explorer. Se as páginas que você visita estiver utilizando alguma dessas novas tecnologias, você terá uma experiência muito similar ao Google Chrome &amp;#8211; mesmo quando utilizar versões antigas do Internet Explorer.&lt;/p&gt;

&lt;p&gt;Instalar o Chrome Frame é rápido, fácil e grátis. Chrome Frame é completamente invisível e não muda nada na maneira de como você acessa as páginas no Internet Explorer. Mas ele irá melhorar sua velocidade e experiência como no Google Chrome, mas sem a necessidade de mudar de browser. Entretanto, se você está em um ambiente corporativo, talvez você tenha que avisar o administrador da rede antes de instalar, por que pode ser que alguns sites não sejam exibidos corretamente &amp;#8211; &lt;em&gt;Obrigado ao Jochem Bokkers por esta observação&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;e-sobre-sistemas-que-não-são-atualizados&#34;&gt;E sobre sistemas que não são atualizados?&lt;/h4&gt;

&lt;p&gt;Se você está utilizando um sistema em sua empresa onde você não pode atualizar ou fazer o download de um novo browser, o Chrome Frame é uma alternativa viável. Você &lt;a href=&#34;http://www.chromium.org/developers/how-tos/chrome-frame-getting-started/chrome-frame-faq#TOC-Do-I-need-to-be-an-Administrator-to-install-Google-Chrome-Frame-&#34;&gt;Você não precisa de nenhum privilégio de administrador especial para instalar o Chrome Frame&lt;/a&gt;, então você pode utilizar a mesma versão do Internet Explorer e quase que instantaneamente ter uma experiência superior e quase idêntica como se estivesse utilizando a última versão do Google Chrome.&lt;/p&gt;

&lt;h3 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h3&gt;

&lt;p&gt;Existem aqui incontáveis razões para você atualizar seu browser antigo para algo mais atual. Então, confie em nós quando dissermos que sua experiência na web irá melhorar infinitamente se você escolher fazer essa atualziação.&lt;/p&gt;

&lt;p&gt;Não importa o que você esteja fazendo na web &amp;#8211; lendo emails, comprando, fazendo transações no bankline ou qualquer outra coisa &amp;#8211; um novo browser irá permitir que sua experiência seja segura, rápida e muito mais bonita.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Este artigo é uma tradução do artigo original feito pela &lt;a href=&#34;http://www.smashingmagazine.com/2012/07/10/dear-web-user-please-upgrade-your-browser/?utm_source=TablelessComBr&amp;amp;utm_medium=LinkTableless&amp;amp;utm_campaign=TablelessComBr&amp;amp;utm_nooverride=1&#34;&gt;Smashing Magazine&lt;/a&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Identificando os IEs</title>
      <link>https://tableless.github.io/hugo-public/identificando-os-ies/</link>
      <pubDate>Tue, 10 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/identificando-os-ies/</guid>
      <description>

&lt;p&gt;Os browsers caminham para um status interessantes. Os usuários estão cada vez mais utilizando browsers mais atuais e espertos. Considere um vencedor se você não precisa mais desenvolver para IE8 e só foca seu esforço para desenvolver acima do IE9. Acontece que uma hora ou outra você vai precisar fixar alguns erros em browsers antigos. Seu cliente vai pedir, seu chefe vai chorar ou qualquer outro motivo vai te fazer resolver um bugzinho no IE7.&lt;/p&gt;

&lt;p&gt;Aqui vai uma dica simples que pode salvar seu dia: adicione uma classe na tag HTML identificando o browser, assim você poderá direcionar um código para este browser específico. Fazemos isso com um código simples em Javascript ou JQuery. Veja abaixo:&lt;/p&gt;

&lt;p&gt;Versão em Javascript:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&amp;lt;script type=&#34;text/javascript&#34;&amp;gt;
if (/MSIE (\d+\.\d+);/.test(navigator.userAgent)) {
 var ieversion=new Number(RegExp.$1)
 if (ieversion&amp;gt;=8)
     // Para IE8
     document.getElementsByTagName(&#39;html&#39;)[0].className+=&#39;ie8&#39;;
 else if (ieversion&amp;gt;=7)
     // Para IE7
     document.getElementsByTagName(&#39;html&#39;)[0].className+=&#39;ie7&#39;;
 else if (ieversion&amp;gt;=6)
     // Para IE6
     document.getElementsByTagName(&#39;html&#39;)[0].className+=&#39;ie6&#39;;
}
&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Versão em JQuery:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;if ($.browser.msie) {
    if(parseInt($.browser.version) == 8){
         // Para IE8
         $(&#34;html&#34;).addClass(&#34;ie8&#34;);
    } else if(parseInt($.browser.version) == 7){
         // Para IE7
         $(&#34;html&#34;).addClass(&#34;ie7&#34;);
    } else if(parseInt($.browser.version) == 6){
         // Para IE6
         $(&#34;html&#34;).addClass(&#34;ie6&#34;);
    }
}
&lt;/pre&gt;

&lt;p&gt;Eu prefiro usar isso a ter que usar CSS Hacks ou ter que usar comentários condicionais para adicionar uma classe na tag HTML. Assim nós precisamos sujar a sintaxe do CSS e quando quisermos retirar esse código adicional e nem sujamos muito no código HTML. Com comentários condicionais ficaria assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!--[if IE 6]&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34; class=&#34;ie6&#34;&amp;gt;
&amp;lt;![endif]--&amp;gt;

&amp;lt;!--[if IE 7]&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34; class=&#34;ie7&#34;&amp;gt;
&amp;lt;![endif]--&amp;gt;

&amp;lt;!--[if IE 8]&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34; class=&#34;ie8&#34;&amp;gt;
&amp;lt;![endif]--&amp;gt;

&amp;lt;!--[if gte IE 8]&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34; class=&#34;ie9&#34;&amp;gt;
&amp;lt;![endif]--&amp;gt;

&amp;lt;!--[if !IE]&amp;gt;&amp;lt;!--&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;!--&amp;lt;![endif]--&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Eu acho melhor utilizar os comentários condicionais para separar os arquivos de CSS. Assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!--[if IE 6]&amp;gt;
&amp;lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;ie6.css&#34; /&amp;gt;
&amp;lt;![endif]--&amp;gt;

&amp;lt;!--[if IE 7]&amp;gt;
&amp;lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;ie7.css&#34; /&amp;gt;
&amp;lt;![endif]--&amp;gt;

&amp;lt;!--[if IE 8]&amp;gt;
&amp;lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;ie8.css&#34; /&amp;gt;
&amp;lt;![endif]--&amp;gt;

&amp;lt;!--[if gte IE 8]&amp;gt;
&amp;lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;ie9.css&#34; /&amp;gt;
&amp;lt;![endif]--&amp;gt;

&amp;lt;!--[if !IE]&amp;gt;&amp;lt;!--&amp;gt;
&amp;lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;application.css&#34; /&amp;gt;
&amp;lt;!--&amp;lt;![endif]--&amp;gt;
&lt;/pre&gt;

&lt;h3 id=&#34;guerra-contra-o-terror&#34;&gt;Guerra contra o Terror&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/browsers-antigos-guerra-contra-o-terror/&#34;&gt;Preparamos um PDF&lt;/a&gt; que te ajuda a convencer clientes e chefes &lt;del&gt;tontos&lt;/del&gt; mostrando as deficiencias de suportarmos browsers antigos. &lt;a href=&#34;http://tableless.com.br/browsers-antigos-guerra-contra-o-terror/&#34;&gt;Dá uma olhada aqui&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dicas de sobrevivência em uma era pós o IE6</title>
      <link>https://tableless.github.io/hugo-public/dicas-de-sobrevivencia-ie6/</link>
      <pubDate>Mon, 09 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/dicas-de-sobrevivencia-ie6/</guid>
      <description>

&lt;p&gt;Nós ficamos mal acostumados com o Internet Explorer 6&amp;#8230; Digo isso por que tinhamos tantos problemas e limitações no tempo em que precisávamos suportá-lo, que até hoje nos privamos de algumas técnicas e propriedades do CSS que funcionam plenamente no IE8 e nos IEs mais novos. Quero confessar que eu estava até esses dias eu era prisioneiro da sombra do IE6.&lt;/p&gt;

&lt;p&gt;Por isso, aqui vão algumas dicas de propriedades que você já deve conhecer, mas que não usa ainda por que acha que todos os IEs são iguais ao maldito IE6.&lt;/p&gt;

&lt;h3 id=&#34;after&#34;&gt;:after&lt;/h3&gt;

&lt;p&gt;Você deve usar alguma técnica de &lt;strong&gt;clearfix&lt;/strong&gt; que você criou ou que você pegou de algum lugar. Eu usava muito jquery para criar um elemento vazio dinamicamente no final do elemento que necessita do clearfix para fazê-lo parar de sofrer influência dos floats dos elementos. Essa técnica aqui pode salvar sua vida:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div:after {
    content:&#34; &#34;;
    display:block;
    clear:both;
}
&lt;/pre&gt;

&lt;p&gt;O &lt;strong&gt;content&lt;/strong&gt; pode ser usado para uma série de outras coisas, como por exemplo inserir um ícone, objeto ou até texto depois de um determinado elemento.&lt;/p&gt;

&lt;p&gt;Nesse caso o IE7 fica de fora.&lt;/p&gt;

&lt;h3 id=&#34;first-child&#34;&gt;first-child&lt;/h3&gt;

&lt;p&gt;Sim. O First-child funciona no IE7 ou superior. Mas o last-child não. Sem chance.&lt;/p&gt;

&lt;p&gt;Isso já acaba com aqueles problemas de alinhamento de elementos em linha, onde você precisa tirar a margin, padding ou border do último (ou o primeiro) elemento para que eles fiquem alinhados corretamente.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div:first-child {
    margin-left:0;
    padding-left:0;
    border-left:none;
}
&lt;/pre&gt;

&lt;h3 id=&#34;seletores-complexos&#34;&gt;Seletores complexos&lt;/h3&gt;

&lt;p&gt;Olha só que maravilha, o IE7+ já suporta alguns &lt;a href=&#34;http://tableless.com.br/seletores-complexos-do-css/&#34; target=&#34;_blank&#34;&gt;seletores complexos&lt;/a&gt; como os descritos abaixo:&lt;/p&gt;

&lt;table summary=&#34;lista de seletores complexos&#34;&gt;
  &lt;tr&gt;
    &lt;th&gt;
      Seletor
    &lt;/th&gt;
    
    &lt;th&gt;
      Descrição
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      input[type=&amp;#8221;text&amp;#8221;]
    &lt;/td&gt;
    
    &lt;td&gt;
      Seleciona o elemento INPUT com o atributo TYPE cujo valor seja exatamente o valor TEXT
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      a[title]
    &lt;/td&gt;
    
    &lt;td&gt;
      Seleciona o elemento &lt;strong&gt;a&lt;/strong&gt; que contenha o atributo &lt;strong&gt;type&lt;/strong&gt;não importando o valor.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      a[href$=html]
    &lt;/td&gt;
    
    &lt;td&gt;
      Seleciona elementos com atributos cujo seu valor temine com… Por exemplo, você poderia querer selecionar todos os links que apotam para um arquivo .pdf, ou .php etc.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      a[href^=&amp;#8221;http://tableless.com.br/&amp;#8221;]
    &lt;/td&gt;
    
    &lt;td&gt;
      Seleciona elementos com o atributos que comecem com… Você pode querer selecionar apenas os links que apontem para um site específico, por exemplo.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      a[title~=&amp;#8221;tableless&amp;#8221;]
    &lt;/td&gt;
    
    &lt;td&gt;
      Seleciona os elementos cujo o atributo tenha um valor que seja separado por espaços. No exemplo acima ele seleciona um link que contenha o atributo title e que em seu valor tenha a palavra “tableless” no meio.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      a[hreflang|=&amp;#8221;pt&amp;#8221;]
    &lt;/td&gt;
    
    &lt;td&gt;
      Seleciona o elemento &lt;strong&gt;a&lt;/strong&gt; cujo o valor do atributo &lt;strong&gt;hreflang&lt;/strong&gt; comece com PT. Ou seja valores como “pt-br” serão encontrados.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      a[href=&amp;#8221;http://tableless.com.br/&amp;#8221;]
    &lt;/td&gt;
    
    &lt;td&gt;
      Seleciona o elemento &lt;strong&gt;a&lt;/strong&gt; cujo o valor do atributo &lt;strong&gt;href&lt;/strong&gt; seja exatamente &lt;b&gt;http://tableless.com.br/&lt;/b&gt;.
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      a[title*=&amp;#8221;artigo&amp;#8221;]
    &lt;/td&gt;
    
    &lt;td&gt;
      Seleciona os elementos &lt;strong&gt;a&lt;/strong&gt; cujo o valor tenha pelo menos uma ocorrência com a palavra “artigo”.
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Todos eles funcionam no IE7 ou superior. Só com estes seletores já economizamos uma penca de código Javascript.&lt;/p&gt;

&lt;h3 id=&#34;first-letter-e-first-line&#34;&gt;:first-letter e :first-line&lt;/h3&gt;

&lt;p&gt;Formatar a primeira letra do parágrafo ou a primeira linha. Coisa linda.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p:first-letter {font-size:30px; color:red;}
p:first-line {font-weight:bold;}
&lt;/pre&gt;

&lt;h3 id=&#34;word-wrap&#34;&gt;word-wrap&lt;/h3&gt;

&lt;p&gt;Essa propriedade é utilíssima. Você já deve ter escrito uma palavra muito grande ou uma URL, que geralmente não tem espaços, o que ocasionou da string ultrapassar a largura do objeto. A propriedade &lt;strong&gt;word-wrap&lt;/strong&gt; faz com que essas strings muito grandes quebrem de linha assim que atingirem o limite do objeto.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p {word-wrap: break-word;}
&lt;/pre&gt;

&lt;p&gt;Essa propriedade funciona desde o IE5. O.o&lt;/p&gt;

&lt;h3 id=&#34;max-height-width-e-min-height-width&#34;&gt;max-height/width e min-height/width&lt;/h3&gt;

&lt;p&gt;Essas aqui são essências para produzirmos layouts fluidos e responsivos. Funcionam a partir do IE7.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
    min-width:200px; /** largura mínima **/
    max-width:500px; /** largura máxima **/
    min-height:150px;  /** altura mínima **/
    max-height:300px; /** altura máxima **/
}
&lt;/pre&gt;

&lt;h2 id=&#34;tabela-de-referência&#34;&gt;Tabela de referência&lt;/h2&gt;

&lt;p&gt;O MSDN guarda uma &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/cc351024(v=vs.85).aspx#elementselectors&#34; target=&#34;_blank&#34;&gt;tabela de compatibilidade muito completa com propriedades do CSS&lt;/a&gt; que os IEs suportam ou não. Vale a pena dar uma olhada e entender melhor o que você já pode usar nativamente do CSS em vez de sair escrevendo loucamente soluções JQuery.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Schema – Marcação de dados estruturados</title>
      <link>https://tableless.github.io/hugo-public/schema-marcacao-de-dados-estruturados/</link>
      <pubDate>Mon, 02 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/schema-marcacao-de-dados-estruturados/</guid>
      <description>

&lt;p&gt;Há cerca de cinco anos atrás os principais buscadores se uniram para definir uma nova estrutura que pode ser chamado de “mapa de um site”, um documento onde tem uma única função que é informar aos buscadores a estrutura de um site, vídeos ou imagens. Essa estrutura é utilizada até hoje pelos desenvolvedores permitindo assim que todas as áreas ou páginas sejam facilmente “descobertas” pelos crawlers dos buscadores, foi assim que surgiu o &lt;a href=&#34;http://sitemap.org/&#34; target=&#34;_blank&#34;&gt;sitemap.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.seomonkey.com.br/img/logos-buscadores.jpg&#34; alt=&#34;Logo Buscadores&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Recentemente os principais buscadores se reuniram novamente, só que agora com a participação do Yandex um novo buscador russo que &lt;a href=&#34;http://exame.abril.com.br/tecnologia/noticias/buscador-russo-yandex-afirma-ser-melhor-que-o-google&#34; target=&#34;_blank&#34;&gt;afirma ser melhor que o Google&lt;/a&gt;. Os buscadores se uniram para definir uma nova marcação de dados estruturados, trata-se do &lt;a href=&#34;http://schema.org/&#34; target=&#34;_blank&#34;&gt;Schema&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Historicamente, o Google tem apoiado três padrões diferentes para dados estruturados, (microdados, microformat e RDFa) com a vinda do Schema as coisas irão mudar já que é proposto por três dos mais influentes players da web.&lt;/p&gt;

&lt;p&gt;O projeto Schema vem basicamente para ser uma central de recursos para desenvolvedores, para auxiliar e apoiar o vocabulário de marcação de dados estruturados nas páginas web. Para conferir o novo projeto ele está disponível no endereço &lt;a href=&#34;http://schema.org/&#34; target=&#34;_blank&#34;&gt;schema.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Navegando na web você já deve ter visto em um resultado de busca algumas snippets mais interessantes, que mostram reviews de usuários, preços de produtos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.seomonkey.com.br/img/snippets.jpg&#34; alt=&#34;Snippet&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Com uma snippet assim você acaba chamando mais atenção na SERP do Google conseguindo assim mais cliques e consequentemente mais visitantes, essa é uma das vantagens de utilizar a marcação de dados estruturados mais conhecida como &lt;a href=&#34;http://www.seomonkey.com.br/rich-snippets/conheca-rich-snippets?utm_source=Tableless&amp;utm_medium=GuestPost&amp;utm_campaign=divulgacao-schema-rich-snippets&#34; target=&#34;_blank&#34;&gt;Rich Snippets&lt;/a&gt; (Trechos ricos de informação).&lt;/p&gt;

&lt;h3 id=&#34;introdução-de-como-implementar&#34;&gt;Introdução de como implementar&lt;/h3&gt;

&lt;p&gt;Para implementar o Schema em seu site é muito simples, em uma marcação HTML adicione a tag &lt;strong&gt;itemscope&lt;/strong&gt; essa tag é responsável por identificar a seção da página que é sobre um determinado “assunto”, após especificar o itemscope é necessário atribuir o tipo desse “assunto”, para tal utilize a tag &lt;strong&gt;itemtype&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No Schema para determinados assuntos temos várias propriedades, por exemplo em um filme temos atores, diretor, preço, trailer, avaliações. Para atribuir essas informações para os motores de buscas utilize a tag &lt;strong&gt;itemprop&lt;/strong&gt;, veja um exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div itemscope itemtype = &#34;http://schema.org/Movie&#34;&amp;gt;
&amp;lt;h1 itemprop=&amp;rdquo;name&amp;rdquo;&amp;gt; Como &amp;Aacute;gua - Anderson Silva &amp;lt;/ h1&amp;gt;
&amp;lt;span itemprop=&amp;rdquo;director&amp;rdquo;&amp;gt; Diretor: Pablo Croce&amp;lt;/ span&amp;gt;
&amp;lt;a itemprop=&amp;rdquo;url&amp;rdquo; href=&#34;../movies/anderson-silva-como-agua.html&#34;&amp;gt;Trailer&amp;lt;/ a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;No código acima o “assunto” é o novo filme do Anderson Silva (Como Água) dirigido pelo diretor Pablo Croce com um link para um trailer do filme, por isso foi utilizado o itemtype “Movie”.&lt;/p&gt;

&lt;p&gt;Desde 2004 o Google vem dando fortes sinais em relação a semântica e trechos ricos de informação, em meados de 2009 lançou uma ferramenta chamada &lt;a href=&#34;http://www.google.com/webmasters/tools/richsnippets&#34;&gt;Rich Snippets Testing Tool&lt;/a&gt; que tem como finalidade trazer uma amostra de como os Rich Snippets aparecereia nos resultados das buscas do Google.&lt;/p&gt;

&lt;p&gt;Recentemente um executivo do Google anunciou uma das maiores renovações em seu algoritmo de busca, a ideia dessa atualização é que o buscador entenda da mesma forma que nós humanos entendemos o mundo, mais uma vez ressalto a importância de se ter um site semântico e bem estruturado.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>O browser que você amou odiar</title>
      <link>https://tableless.github.io/hugo-public/o-browser-que-voce-amou-odiar/</link>
      <pubDate>Wed, 28 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/o-browser-que-voce-amou-odiar/</guid>
      <description>&lt;p&gt;A Microsoft tem feito um esforço fenomenal para que os usuários mantenham seu Internet Explorer (ou &lt;strong&gt;Enternet Exploer&lt;/strong&gt; para alguns que ainda erram seu nome) atualizado. Começou com a sensacional campanha &lt;a href=&#34;http://www.ie6countdown.com/&#34;&gt;IE6 Countdown&lt;/a&gt; e alguns outros esforços mais diretos em blogs da compania e agora com a mais nova campanha chamada &lt;a href=&#34;http://browseryoulovedtohate.com/?utm_source=TablelessComBr&amp;amp;utm_medium=Post&amp;amp;utm_campaign=TablelessComBr&amp;amp;utm_nooverride=1&#34;&gt;The Browser You Loved to Hate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O vídeo conta a história de um cara que faz de tudo para que os usuários não utilizem a velha versão do Internet Explorer, fazendo com que isso se torne um vício. Ele diz que os IEs antigos servem para apenas uma coisa: &amp;#8220;baixar outros browsers&amp;#8221;. Hell yeah! 😉&lt;/p&gt;

&lt;p&gt;A Microsoft tem promovido o IE9 por que é o IE que mais se adequa ao padrões web até agora. O IE10 é muito melhor, mas ainda não está nas prateleiras e provavelmente vai ser lançado de verdade somente com o Windows 8. O IE10 fica no páreo com os browsers mais atuais como Chrome, Firefox e Safari, mas o IE9 está fazendo um ótimo trabalho também e não dá tanta dor de cabeça como as versões antigas do browser.&lt;/p&gt;

&lt;p&gt;Veja o vídeo e divirta-se. 😉&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Seu lugar ao sol</title>
      <link>https://tableless.github.io/hugo-public/seu-lugar-ao-sol/</link>
      <pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/seu-lugar-ao-sol/</guid>
      <description>&lt;p&gt;Você realmente acha que vai escrever CSS e HTML como escreve hoje em um cenário como este?&lt;/p&gt;

&lt;p&gt;Você já parou para pensar onde CSS/HTML e Javascript se encaixam em um ambiente onde a web é praticamente camuflada por APPs específicos? Eu não estou me referindo a estes Apps como conhecemos hoje. Podem ser Apps instaladas ou WebApps, neste futuro, dá na mesma. Não há diferença.&lt;/p&gt;

&lt;p&gt;Pior do que pensar o lugar que CSS e HTML estarão é pensar em como VOCÊ se colocará em um ambiente tão novo quanto este. O que realmente iremos fazer? Qual será o papel de cada um? Será que a metodologia de trabalho será a mesma?&lt;/p&gt;

&lt;p&gt;Você também já deve ter visto o vídeo acima. Veja como os personagens utilizam seus gadgets e como tudo está sincronizado. A discussão aí não é se é melhor criar uma App ou uma aplicação Web, é se o seu produto é realmente relevante e se vai ajudar realmente a vida das pessoas. A forma como isso é oferecido não importa, porque em um cenário como esse tudo é igual. Não faz diferença nenhuma. &lt;a href=&#34;http://tableless.com.br/utilizando-apps-em-vez-de-browsers/&#34;&gt;A Web não é só o seu browser&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;É por isso que eu acho que &lt;a href=&#34;http://tableless.com.br/agora-e-a-vez-dos-desenvolvedores/&#34;&gt;os desenvolvedores precisam acordar&lt;/a&gt;. Urgente.&lt;/p&gt;

&lt;p&gt;Eu perco as contas de quantos desenvolvedores me castigam quando eu digo para ignorar totalmente os browsers antigos. Você acha que um futuro como mostrado nos vídeos ou qualquer outro tipo de futuro, vai ficar esperando um browser ser adequado aos padrões? Aliás, browsers existirão?&lt;/p&gt;

&lt;p&gt;Você precisa repensar o que realmente é vida digital. Qual a real utilidade de se carregar um &lt;del&gt;celular&lt;/del&gt; &lt;ins&gt;dispositivo móvel&lt;/ins&gt;. Repense o que será design responsivo. Eu sei que a necessidade de hoje é adaptar websites e aplicações para as diversas telas, mas entende que isso é só uma necessidade que vai passar rápido? Vai passar rápido não porque é uma modinha sem importância, mas porque isso deverá ser padrão daqui pra frente. Assim como o Tableless. Lembra que falavam que isso era uma modinha e que já já passaria? Pois é.&lt;/p&gt;

&lt;p&gt;Experimente fazer o exercício de entender o futuro da web. É algo que todo profissional web deveria fazer, principalmente os desenvolvedores. Não importa qual linguagem de programação você vai precisar aprender ou desaprender, o que importa é como ela será aplicada. Isso muda tudo.&lt;/p&gt;

&lt;p&gt;Embora a ideia não seja apenas direcionada a Mobile mas para todos os meios de acesso, vale muito a pena ver a apresentação que o &lt;a href=&#34;http://www.viuisso.com.br/?utm_source=TablelessComBr&amp;amp;utm_medium=linkPost&amp;amp;utm_campaign=PostBlog&#34;&gt;Michel Lent&lt;/a&gt; fez. Dá uma olhada:&lt;/p&gt;

&lt;div style=&#34;width:595px&#34; id=&#34;__ss_11955809&#34;&gt;
  &lt;strong style=&#34;display:block;margin:12px 0 4px&#34;&gt;&lt;a href=&#34;http://www.slideshare.net/mlent68/repensando-o-marketing-a-partir-do-mobile&#34; title=&#34;Repensando o marketing a partir do mobile&#34; target=&#34;_blank&#34;&gt;Repensando o marketing a partir do mobile&lt;/a&gt;&lt;/strong&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Prefixos dos browsers: A web precisa de você</title>
      <link>https://tableless.github.io/hugo-public/prefixos-dos-browsers-a-web-precisa-de-voce/</link>
      <pubDate>Mon, 13 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/prefixos-dos-browsers-a-web-precisa-de-voce/</guid>
      <description>

&lt;p&gt;Desenvolver apenas para um único browser não é legal. Isso já aconteceu conosco quando o Internet Explorer ganhou a batalha contra a Netscape. Era comum encontrar sites com o aviso &amp;#8220;Este site funciona apenas em Internet Explorer&amp;#8221;. Este é o motivo pelo qual muitos ainda estão presos ao IE com um legado difícil. Hoje você tem plena certeza de que é necessário manter a compatibilidade crossbrowser dos projetos.&lt;/p&gt;

&lt;p&gt;A combinação da grande variação de browsers no mercado com as mais as novas features do CSS resultam em problemas de compatibilidade. Você quer utilizar uma feature que ainda está sendo estudada, e que somente o Firefox, por exemplo, suporta. Se você simplesmente utilizar a propriedade no seu CSS, os browsers que não suportam essa propriedade, ou que suportam mas com uma sintaxe diferente, podem dar problemas. Aí é que entra os prefixos de browsers.&lt;/p&gt;

&lt;p&gt;O prefixo é muito útil para podermos experimentar features que ainda estão sendo estudadas e que são rascunhos nos documentos do W3C. Prefixos são úteis por que nos direcionam para um caminho seguro sob as inconsistências entre propriedades e browsers.&lt;/p&gt;

&lt;h3 id=&#34;como-utilizar-um-prefixo&#34;&gt;Como utilizar um prefixo&lt;/h3&gt;

&lt;p&gt;Não se assuste, se você utilizará uma propriedade de CSS que ainda está sendo planejada mas ainda assim quer aplicar em seu projeto para que os usuários de novos browsers possam usufruir com uma melhor experiência ao acessar seu site, seu código pode ficar um pouco confuso. Por isso, organize-se melhor ao decidir quais propriedades você gostará de experimentar.&lt;/p&gt;

&lt;p&gt;Para exemplo vamos utilizar a propriedade border-radius. Se quisessemos fazer uma borda arredondada com 10px, faríamos assim:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
   -webkit-border-radius: 10px;
   -moz-border-radius: 10px;
   -ms-border-radius: 10px;
   -o-border-radius: 10px;
   border-radius: 10px;
}
&lt;/pre&gt;

&lt;p&gt;Note que colocamos por último a propriedade verdadeira, sem nenhum prefixo, essa propriedade cobrirá os browsers que não precisam da utilização de prefixos para renderizar a propriedade, por exemplo o Opera e o Internet Explorer 9.&lt;/p&gt;

&lt;h3 id=&#34;o-problema&#34;&gt;O problema&lt;/h3&gt;

&lt;p&gt;Atualmente estamos beirando a mesma situação citada no início do artigo. O Firefox, Opera e Microsoft estão pensando em suportar o prefixo &lt;strong&gt;-webkit-&lt;/strong&gt;. O problema é que os desenvolvedores estão utilizando em seus projetos apenas o prefixo &lt;strong&gt;-webkit-&lt;/strong&gt; para algumas propriedades do CSS3. Isto é muito ruim.&lt;/p&gt;

&lt;p&gt;Se todos os browsers suportarem um mesmo prefixo o mercado será &amp;#8220;controlado&amp;#8221; por apenas um fabricante de browser que poderá ditar as regras sobre quais propriedades do CSS poderão ser implementadas primeiro. Ok, ok, meu sonho era que um browser sob o engine &lt;strong&gt;webkit&lt;/strong&gt; dominasse mesmo. Mas isso foi quando o IE era o browser mais utilizado e a Microsoft não havia aberto os olhos ainda. Mas concorrência é ótimo em qualquer lugar, até na web.&lt;/p&gt;

&lt;p&gt;O pessoal está conversando sobre algumas possibilidades de soluções. Uma interessante e na minha opinião mais inteligente, é a criação de um prefixo neutro, utilizado por todos os browsers para indicar novas features. Algo como -alpha- ou -beta- e assim por diante.&lt;/p&gt;

&lt;p&gt;Todos os grandes nomes da web estão se mobilizando para que a web não fique em volta de um único browser. Tenha em mente que o pessoal do &lt;strong&gt;-webkit-&lt;/strong&gt; não está fazendo nada de errado, nós estamos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Daniel Glazman&lt;/strong&gt;, Co-chairman do W3C CSS Working Group escreveu um post, muito preocupado e chamando toda a comunidade de desenvolvedores a adequarem seus sites e a entenderem o grande problema que isso pode ser tornar. Veja uma parte do post:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Without your help, without a strong reaction, this can lead to one thing only and we&amp;#8217;re dangerously not far from there: other browsers will start supporting/implementing themselves the -webkit-* prefix, turning one single implementation into a new world-wide standard. It will turn a market share into a de facto standard, a single implementation into a world-wide monopoly. Again. It will kill our standardization process. That&amp;#8217;s not a question of if, that&amp;#8217;s a question of when.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Veja o &lt;a href=&#34;http://www.glazman.org/weblog/dotclear/index.php?trackback/5454&#34;&gt;post completo aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O &lt;a href=&#34;http://bit.ly/x9LxGx&#34;&gt;Web Standards Project também se mobilizou&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;E aí? Vai mudar sua atitude? O que você pensa sobre isso?&lt;/p&gt;

&lt;p&gt;Como você pode ajudar?&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.change.org/petitions/microsoft-mozilla-opera-dont-make-webkit-prefixes-a-de-facto-standard&#34;&gt;Assine essa petição&lt;/a&gt; para os fabricantes de browsers não suportarem o prefixo webkit e espalhe para seus colegas a notícia. E claro, ao usar os prefixos para os browsers, utilize todos e não apenas um.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;a href=&#34;http://carrosantigos.wordpress.com/2011/07/25/freedom-riders-i-stand-among-heroes/&#34;&gt;Foto do post&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Chrome para Android</title>
      <link>https://tableless.github.io/hugo-public/google-chrome-para-android/</link>
      <pubDate>Wed, 08 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/google-chrome-para-android/</guid>
      <description>&lt;p&gt;O Google acaba de lançar o &lt;a href=&#34;http://chrome.blogspot.com/2012/02/introducing-chrome-for-android.html&#34;&gt;Google Chrome para Android&lt;/a&gt;. Antes que você fique todo alegre, o Chrome para Android só está disponível para os usuários do Ice Cream Sandwich ou tablets. Ele é baseado na simplicidade do Chrome para desktops, prometendo a experiência de navegação.&lt;/p&gt;

&lt;p&gt;Eles reimaginaram o uso de tabs para os mobiles, e nas tablets a utilização as tavs ficaram similares com o Chrome para Desktops. Temos também incluído nessa versão mobile o famoso &amp;#8220;Porn mode&amp;#8221; ou o Incognito, que é o modo de navegação privativa.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2012/02/Tablet-phone-YT-G-Maps.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2012/02/Tablet-phone-YT-G-Maps.png&#34; alt=&#34;&#34; title=&#34;Tablet-phone-YT-G-Maps&#34; width=&#34;720&#34; height=&#34;346&#34; class=&#34;alignnone size-full wp-image-5474&#34; srcset=&#34;uploads/2012/02/Tablet-phone-YT-G-Maps.png 1249w, uploads/2012/02/Tablet-phone-YT-G-Maps-300x144.png 300w, uploads/2012/02/Tablet-phone-YT-G-Maps-1024x491.png 1024w&#34; sizes=&#34;(max-width: 720px) 100vw, 720px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O Google Chrome para Android ainda está em fase beta e você pode &lt;a href=&#34;https://market.android.com/details?id=com.android.chrome&#34;&gt;baixá-lo no MarketPlace&lt;/a&gt; mais próximo.&lt;/p&gt;

&lt;p&gt;Uma boa notícia para toda a comunidade de desenvolvimento web mobile. A briga fica acirrada entre os sistemas. O que é bom para nós e para os usuários. Agora oremos para que o IE10 para Windows Phone saia logo, o que eu duvido. Acho que ele somente virá com o Windows Phone 8. Entretanto temos um ótimo cenário quando falamos sobre browsers para mobiles.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>