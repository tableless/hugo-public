<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2009 on Tableless</title>
    <link>http://tableless.com.br/tags/2009/index.xml</link>
    <description>Recent content in 2009 on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/tags/2009/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Efeito cascata, herança e especificidade do CSS</title>
      <link>http://tableless.com.br/efeito-cascata-e-especificidade-do-css/</link>
      <pubDate>Tue, 21 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/efeito-cascata-e-especificidade-do-css/</guid>
      <description>

&lt;h4 id=&#34;herança&#34;&gt;Herança&lt;/h4&gt;

&lt;p&gt;Existem algumas propriedades do CSS que quando aplicadas aos &amp;#8220;elementos pais&amp;#8221;, os &amp;#8220;elementos filhos&amp;#8221; herdam a característica aplicada no pai. Um exemplo disso é a propriedade &lt;strong&gt;color&lt;/strong&gt;. Quando aplicamos a propriedade &lt;strong&gt;color&lt;/strong&gt; em um elemento &lt;strong&gt;div&lt;/strong&gt;, o texto dos elementos contidos no &lt;strong&gt;div&lt;/strong&gt; são coloridos de acordo com a propriedade.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
   color: green;
}
&lt;/pre&gt;

&lt;p&gt;O texto que há dentro deste &lt;strong&gt;div&lt;/strong&gt; irá ter a cor verde, independente se este texto está &amp;#8220;solto&amp;#8221; dentro do &lt;strong&gt;div&lt;/strong&gt; ou se ele está dentro de um parágrafo, por exemplo. Ou seja, os filhos herdaram o resultado desta propriedade. A mesma coisa acontece para, por exemplo, a propriedade &lt;strong&gt;font-size&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Há também as propriedades não herdadas pelos &amp;#8220;filhos&amp;#8221;. Estas propriedades geralmente são propriedades referentes a formatação da caixa, como por exemplo a propriedade &lt;strong&gt;width&lt;/strong&gt;, &lt;strong&gt;height&lt;/strong&gt;, &lt;strong&gt;margin&lt;/strong&gt;, &lt;strong&gt;padding&lt;/strong&gt; e assim por diante.&lt;/p&gt;

&lt;p&gt;Essa herança é responsável por uma parte da cascata. É aí que está uma das primeiras vantanges de se utilizar o CSS no desenvolvimento com padrões. A vantagem da herança é exatamente podermos modificar poucas linhas do CSS para fazer alterações no site inteiro, sem ter que caçar elemento por elemento e modificando suas propriedades.&lt;/p&gt;

&lt;p&gt;A herança é largamente utilizada em frameworks de CSS ou até mesmo em técnicas para que a customização de layouts seja explorada de forma automática ou manual pelo cliente, como homes de portais, e-commerce etc. Assim, o controle fica mais genérico, e é aí que entra a especificidade do CSS para controlar o detalhe.&lt;/p&gt;

&lt;h5 id=&#34;o-valor-inherit&#34;&gt;O valor INHERIT&lt;/h5&gt;

&lt;p&gt;O valor inherit é utilizada em propriedades destinadas aos elementos filhos. Suponha que você tem um elemento &lt;strong&gt;div&lt;/strong&gt;. Este elemento &lt;strong&gt;div&lt;/strong&gt; tem uma borda e você quer que seus filhos tenham a mesma borda. Veja o código:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;&lt;div id=&#34;pai&#34;&gt;
  &lt;div&gt;
    um filho
  &lt;/div&gt;
    
  
  &lt;div&gt;
    outro filho
  &lt;/div&gt;
  
&lt;/div&gt;
&lt;/pre&gt;

&lt;p&gt;No CSS, o normal seria fazer isso:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div#pai {
  border: 2px solid black;
}

div#pai div {
  border: 2px solid black;
}
&lt;/pre&gt;

&lt;p&gt;Se você quisesse modificar a borda do pai e mesmo assim manter a borda do filho, teria que fazer das alterações no código. O valor &lt;strong&gt;inherit&lt;/strong&gt; serve para que o filho sempre herde um determinado valor de uma determinada propriedade do pai. Quando o valor do pai muda, o valor do filho também. Veja o código e o [#### Herança&lt;/p&gt;

&lt;p&gt;Existem algumas propriedades do CSS que quando aplicadas aos &amp;#8220;elementos pais&amp;#8221;, os &amp;#8220;elementos filhos&amp;#8221; herdam a característica aplicada no pai. Um exemplo disso é a propriedade &lt;strong&gt;color&lt;/strong&gt;. Quando aplicamos a propriedade &lt;strong&gt;color&lt;/strong&gt; em um elemento &lt;strong&gt;div&lt;/strong&gt;, o texto dos elementos contidos no &lt;strong&gt;div&lt;/strong&gt; são coloridos de acordo com a propriedade.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
   color: green;
}
&lt;/pre&gt;

&lt;p&gt;O texto que há dentro deste &lt;strong&gt;div&lt;/strong&gt; irá ter a cor verde, independente se este texto está &amp;#8220;solto&amp;#8221; dentro do &lt;strong&gt;div&lt;/strong&gt; ou se ele está dentro de um parágrafo, por exemplo. Ou seja, os filhos herdaram o resultado desta propriedade. A mesma coisa acontece para, por exemplo, a propriedade &lt;strong&gt;font-size&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Há também as propriedades não herdadas pelos &amp;#8220;filhos&amp;#8221;. Estas propriedades geralmente são propriedades referentes a formatação da caixa, como por exemplo a propriedade &lt;strong&gt;width&lt;/strong&gt;, &lt;strong&gt;height&lt;/strong&gt;, &lt;strong&gt;margin&lt;/strong&gt;, &lt;strong&gt;padding&lt;/strong&gt; e assim por diante.&lt;/p&gt;

&lt;p&gt;Essa herança é responsável por uma parte da cascata. É aí que está uma das primeiras vantanges de se utilizar o CSS no desenvolvimento com padrões. A vantagem da herança é exatamente podermos modificar poucas linhas do CSS para fazer alterações no site inteiro, sem ter que caçar elemento por elemento e modificando suas propriedades.&lt;/p&gt;

&lt;p&gt;A herança é largamente utilizada em frameworks de CSS ou até mesmo em técnicas para que a customização de layouts seja explorada de forma automática ou manual pelo cliente, como homes de portais, e-commerce etc. Assim, o controle fica mais genérico, e é aí que entra a especificidade do CSS para controlar o detalhe.&lt;/p&gt;

&lt;h5 id=&#34;o-valor-inherit-1&#34;&gt;O valor INHERIT&lt;/h5&gt;

&lt;p&gt;O valor inherit é utilizada em propriedades destinadas aos elementos filhos. Suponha que você tem um elemento &lt;strong&gt;div&lt;/strong&gt;. Este elemento &lt;strong&gt;div&lt;/strong&gt; tem uma borda e você quer que seus filhos tenham a mesma borda. Veja o código:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;&lt;div id=&#34;pai&#34;&gt;
  &lt;div&gt;
    um filho
  &lt;/div&gt;
    
  
  &lt;div&gt;
    outro filho
  &lt;/div&gt;
  
&lt;/div&gt;
&lt;/pre&gt;

&lt;p&gt;No CSS, o normal seria fazer isso:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div#pai {
  border: 2px solid black;
}

div#pai div {
  border: 2px solid black;
}
&lt;/pre&gt;

&lt;p&gt;Se você quisesse modificar a borda do pai e mesmo assim manter a borda do filho, teria que fazer das alterações no código. O valor &lt;strong&gt;inherit&lt;/strong&gt; serve para que o filho sempre herde um determinado valor de uma determinada propriedade do pai. Quando o valor do pai muda, o valor do filho também. Veja o código e o]&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/07/inherit.html&#34; title=&#34;exemplo do valor inherit do CSS&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div#pai {
  border: 2px solid black;
}

div#pai div {
  border: inherit;
}
&lt;/pre&gt;

&lt;h4 id=&#34;especificidade&#34;&gt;Especificidade&lt;/h4&gt;

&lt;p&gt;A especificidade define os detalhes. Quando você define no &lt;strong&gt;body&lt;/strong&gt; as propriedades &lt;strong&gt;font-family&lt;/strong&gt;, &lt;strong&gt;font-size&lt;/strong&gt;, essas propriedades são herdadas por toda árvore de elementos do documento. Isso tráz uma uniformidade para o texto, mas nem todos os elementos terão esse valor genérico de &lt;strong&gt;font&lt;/strong&gt;, logo você terá que ser mais específico e definir valores diferentes de font para estes elementos. É aí que a mágica acontece.&lt;/p&gt;

&lt;p&gt;Suponha que você tenha o seguinte código:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;content&#34;&amp;gt;
   &amp;lt;p&amp;gt;
        Vivamus in leo lacus. &amp;lt;em&amp;gt;Nam condimentum viverra odio&amp;lt;/em&amp;gt;, non molestie orci commodo sit amet. &amp;lt;strong&amp;gt;&amp;lt;em&amp;gt;Proin aliquet leo eu&amp;lt;/em&amp;gt;&amp;lt;/strong&amp;gt; ipsum adipiscing tristique vestibulum nunc gravida. In porta dignissim enim sit amet vulputate. Quisque lacinia malesuada convallis. Sed sit amet orci non lacus sollicitudin pellentesque. 
   &amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
   &amp;lt;p&amp;gt;
        Vivamus in leo lacus. &amp;lt;em&amp;gt;Nam condimentum viverra odio&amp;lt;/em&amp;gt;, non molestie orci commodo sit amet. &amp;lt;strong&amp;gt;&amp;lt;em&amp;gt;Proin aliquet leo eu&amp;lt;/em&amp;gt;&amp;lt;/strong&amp;gt; ipsum adipiscing tristique vestibulum nunc gravida. In porta dignissim enim sit amet vulputate. Quisque lacinia malesuada convallis. Sed sit amet orci non lacus sollicitudin pellentesque. 
   &amp;lt;/p&amp;gt;
&lt;/pre&gt;

&lt;p&gt;E também o código CSS:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;em {
   background: red;
}
&lt;/pre&gt;

&lt;p&gt;Definimos no código acima que os elementos &lt;strong&gt;em&lt;/strong&gt; terão o &lt;strong&gt;background&lt;/strong&gt; vermelho. Isso irá capturar os 4 elementos &lt;strong&gt;em&lt;/strong&gt; que colocamos no HTML. Correto? Ótimo. Estamos sendo bem genéricos aqui. Ele irá capturar todos os elementos &lt;strong&gt;em&lt;/strong&gt;, não importa onde ele esteja. Vamos analisar outro código CSS:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;em {
   background: red;
}

div p em {
   background: green;
}
&lt;/pre&gt;

&lt;p&gt;Já mudamos toda a história com este seletor. Queremos dizer que apenas os &lt;strong&gt;em&lt;/strong&gt; que estão dentro de &lt;strong&gt;p&lt;/strong&gt; e que por sua vez estão dentro de um &lt;strong&gt;div&lt;/strong&gt; terão o &lt;strong&gt;background&lt;/strong&gt; verde. Deixamos a regra mais específica excluindo todos os elementos &lt;strong&gt;em&lt;/strong&gt; que estão fora do &lt;strong&gt;div&lt;/strong&gt;. Os &lt;strong&gt;em&lt;/strong&gt; que estão fora do &lt;strong&gt;div&lt;/strong&gt; continuam com o &lt;strong&gt;background&lt;/strong&gt; vermelho.&lt;/p&gt;

&lt;p&gt;No caso acima, a ordem não altera o resultado da renderização. O seletor mais específico sempre é o que vai funcionar.&lt;/p&gt;

&lt;p&gt;Essa explicação é bem básica. Contudo, entendendo como ela funciona, você sabe o que acontece com seletores mais complexos.&lt;/p&gt;

&lt;h4 id=&#34;o-valor-important&#34;&gt;O valor !important&lt;/h4&gt;

&lt;p&gt;A especificidade apresenta muitos problemas quando a equipe é grande e o código CSS está gigante. Você tenta fazer uma alteração em um determinado objeto, e nada funciona. Isso acontece porque alguém já definiu um seletor mais específico que o seu e definiu um valor diferente para sua propriedade, e isso te impede de fazer a alteração que precisa. Essa seria uma cena clássica, mas há outros cenários cujo o uso do valor &lt;strong&gt;!important&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;!important&lt;/strong&gt; indica que aquela propriedade sempre será a principal, e que nunca será substituída mesmo que o seletor seja mais complexo. Veja:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p {
   color: black;
}

div p {
   color: red;
}
&lt;/pre&gt;

&lt;p&gt;No código acima, o parágrafo terá a cor vermelha por conta do seletor &lt;strong&gt;div p&lt;/strong&gt; ser mais específico.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p {
   color: black !important;
}

div p {
   color: red;
}
&lt;/pre&gt;

&lt;p&gt;Agora, mesmo o seletor &lt;strong&gt;div p&lt;/strong&gt; sendo mais específico, ele não controlará o elemento. O &lt;strong&gt;!important&lt;/strong&gt; está jogando toda a relevancia para o &lt;strong&gt;color: black;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Use com cuidado. Se você colocar muitos &lt;strong&gt;!important&lt;/strong&gt; no seu código, a utilidade deste valor se perderá. &lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/07/important.html&#34;&gt;Veja o exemplo&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Digest – Referências de CSS</title>
      <link>http://tableless.com.br/referencias-online-css/</link>
      <pubDate>Mon, 20 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/referencias-online-css/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://meiert.com/en/indices/css-properties/&#34;&gt;Lista de propriedades CSS mantida por Jens Meiert&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://reference.sitepoint.com/css&#34;&gt;Referência de CSS da SitePoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xhtml.com/en/css/reference/&#34;&gt;Referência de CSS da XHTML.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/compatibilidadecss/&#34;&gt;Tabela de Compatibilidade de CSS (do Tableless)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a style=&#34;text-decoration: none;&#34; href=&#34;http://tableless.com.br/referenciacss&#34;&gt;Guia de Referência rápida do Tableless&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.w3schools.com/CSS/CSS_reference.asp&#34;&gt;Referência mantida pelo W3Schools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Propriedade do CSS: nth-child</title>
      <link>http://tableless.com.br/nth-child/</link>
      <pubDate>Thu, 16 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/nth-child/</guid>
      <description>

&lt;p&gt;Se você é um cara muito técnico, que adora matemática e números, prefiro que você &lt;a href=&#34;http://www.w3.org/TR/css3-selectors/#nth-child-pseudo&#34;&gt;leia a documentação do W3C&lt;/a&gt; sobre &lt;code&gt;nth-child&lt;/code&gt;. Ela é mais rica em detalhes sobre o cálculo que essa pseudo-classe faz. Este artigo é para os pobres mortais.&lt;/p&gt;

&lt;p&gt;Você já precisou de criar uma tabela zebrada? Eu já, muitas vezes. Provavelmente se você não sabe programar, você precisa chamar um programador para escrever duas ou três linhas de código Javascript ou até mesmo usando JQuery, para fazer a mágica para você. A idéia do CSS, é que nós, designers, possamos controlar a aparência dos elementos HTML. Isso inclui conseguirmos fazer uma maldita tabela zebrada também. Para isso e para outros problemas parecidos, podemos utilizar a pseudo-classe &lt;code&gt;nth-child&lt;/code&gt;. Com esta pseudo-classe é possível selecionar um determinado elemento dentro de uma árvore de elementos. Por exemplo, podemos selecionar todas as linhas ímpares das tabela. Legal, hein?&lt;/p&gt;

&lt;h4 id=&#34;cálculo-básico&#34;&gt;Cálculo básico&lt;/h4&gt;

&lt;p&gt;O cálculo utilizado pelo &lt;code&gt;nth-child&lt;/code&gt; é bastante simples. Você vai usar na maioria das vezes soma. Lembra? A fómula será a seguinte: &lt;em&gt;an+b&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;table tbody tr:nth-child(2n+1) {&lt;/p&gt;

&lt;p&gt;background:lightgray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;O funcionamento é o seguinte: o browser aplica o estilo a cada 2 &lt;code&gt;tr&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;O código abaixo, aplica o estilo a cada 3 &lt;code&gt;tr&lt;/code&gt;. E assim por diante.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;table tbody tr:nth-child(3n+1) {&lt;/p&gt;

&lt;p&gt;background:lightgray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Você pode facilitar, utilizando as palavras &lt;em&gt;odd&lt;/em&gt; ou &lt;em&gt;even&lt;/em&gt;, para selecionar os elementos ímpares ou pares da árvore.&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;table tbody tr:nth-child(odd) {&lt;/p&gt;

&lt;p&gt;background:lightgray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Caso você queira pegar 9º, 19º, 29º e assim por diante:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;table tbody tr:nth-child(10n-1) {&lt;/p&gt;

&lt;p&gt;background:lightgray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Se o valor de &lt;em&gt;a&lt;/em&gt; (an+b) é igual 0, você não precisa colocar a fórmula, apenas o número referente a ordem do elemento. Exemplo:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;#8221;css&amp;#8221;]&lt;/p&gt;

&lt;p&gt;table tbody tr:nth-child(1) {&lt;/p&gt;

&lt;p&gt;background:lightgray;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Neste código, o browser iá colorir o background apenas do primeiro &lt;code&gt;tr&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/07/nth-child-ex1.html&#34;&gt;Veja o exemplo.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A propriedade &lt;code&gt;nth-child&lt;/code&gt; faz parte dos seletores do CSS 3 e já pode ser utilizado em browsers atuais.&lt;/p&gt;

&lt;p&gt;Se você ainda não leu sobre seletores do CSS, leia estes artigos abaixo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/seletores-agrupados-e-encadeados&#34;&gt;Seletores encadeados e agrupados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/pseudo-classes-css&#34;&gt;Seletores do CSS &amp;#8211; Pseudo-classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tableless.com.br/seletores-complexos-do-css&#34;&gt;Seletores Complexos do CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CSS 3 Columns</title>
      <link>http://tableless.com.br/css3-columns/</link>
      <pubDate>Tue, 14 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/css3-columns/</guid>
      <description>

&lt;p&gt;Com o controle de colunas no CSS, podemos definir colunas de texto de forma automática. Até hoje não havia maneira de fazer isso de maneira inteligente com CSS e o grupo de propriedades &lt;code&gt;columns&lt;/code&gt; pode fazer isso de maneira livre de gambiarras.&lt;/p&gt;

&lt;h4 id=&#34;column-count&#34;&gt;column-count&lt;/h4&gt;

&lt;p&gt;A propriedade &lt;code&gt;column-count&lt;/code&gt; define a quantidade de colunas terá o bloco de textos.&lt;/p&gt;

&lt;pre lang=&#34;css&#34; line=&#34;1&#34;&gt;/* Define a quantidade de colunas, a largura é definida uniformimente. */
-moz-column-count: 2;
-webkit-column-count: 2;
&lt;/pre&gt;

&lt;h4 id=&#34;column-width&#34;&gt;column-width&lt;/h4&gt;

&lt;p&gt;Com a propriedade &lt;code&gt;column-width&lt;/code&gt; definimos a largura destas colunas.&lt;/p&gt;

&lt;pre lang=&#34;css&#34; line=&#34;1&#34;&gt;/* Define qual a largura mínima para as colunas. Se as colunas forem expremidas, fazendo com que a largura delas fique menor que este valor, elas se transformam em 1 coluna automaticamente */
-moz-column-width: 400px; 
-webkit-column-width: 400px; 
&lt;/pre&gt;

&lt;p&gt;Fiz alguns testes aqui e há uma diferença entre o Firefox 3.5 e o Safari 4 (Public Beta).&lt;/p&gt;

&lt;p&gt;O &lt;code&gt;column-width&lt;/code&gt; define a largura mínima das colunas. Na &lt;a href=&#34;http://www.w3.org/TR/css3-multicol/#cw&#34;&gt;documentação do W3C&lt;/a&gt; é a seguinte: imagine que você tenha uma área disponível para as colunas de 100px. Ou seja, você tem um div com 100px de largura (width). E você define que as larguras destas colunas (&lt;code&gt;column-width&lt;/code&gt;) sejam de 45px. Logo, haverá 10px de sobra, e as colunas irão automaticamente ter 50px de largura, preenchendo este espaço disponível. É esse o comportamento que o Firefox adota.&lt;/p&gt;

&lt;p&gt;Já no Safari, acontece o seguinte: se você define um &lt;code&gt;column-width&lt;/code&gt;, as colunas obedecem esse valor e não preenchem o espaço disponível, como acontece na explicação do W3C e como acontece também no Firefox. Dessa forma faz mais sentido para mim.&lt;/p&gt;

&lt;p&gt;Como a propriedade não está 100% aprovada ainda, há tempo para que isso seja modificado novamente. Talvez a mudança da nomenclatura da classe para &lt;code&gt;column-min-width&lt;/code&gt; ou algo parecida venha a calhar, assim, ficamos com os dois resultados citados, que são bem úteis para nós de qualquer maneira.&lt;/p&gt;

&lt;h4 id=&#34;column-gap&#34;&gt;column-gap&lt;/h4&gt;

&lt;p&gt;A propriedade &lt;code&gt;column-gap&lt;/code&gt; cria um espaço entre as colunas, um gap.&lt;/p&gt;

&lt;pre lang=&#34;css&#34; line=&#34;1&#34;&gt;/* Define o espaço entre as colunas. */
-moz-column-gap: 50px;
-webkit-column-gap: 50px;
&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/07/css3-columns.html&#34;&gt;Veja um exemplo destas propriedades aqui.&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Utilizamos aqui os prefixos -moz- e -webkit-, estas propriedades não funcionam oficialmente em nenhum browser. Mas já podem ser usados em browsers como Firefox e Safari. Fique à vontade para testar e comentar aqui os resultados!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Propriedade Position do CSS</title>
      <link>http://tableless.com.br/propriedade-position-do-css/</link>
      <pubDate>Tue, 12 May 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/propriedade-position-do-css/</guid>
      <description>

&lt;h2 id=&#34;entendendo-a-propriedade-position&#34;&gt;Entendendo a propriedade Position&lt;/h2&gt;

&lt;p&gt;O Position é uma propriedade perigosa para iniciantes. Normalmente o desenvolvedor que acaba de conhecer essa propriedade, acha que ela é a resposta para todos os problemas de posicionamento e diagramação de layout. Pelo contrário. O Position não serve para diagramar a estrutura de layouts. Para isso, você utiliza a &lt;a href=&#34;http://tableless.com.br/propriedade-float-do-css&#34;&gt;propriedade float do css&lt;/a&gt;. O Position vai servir para fazer coisas mais simples.&lt;/p&gt;

&lt;h3 id=&#34;coordenadas&#34;&gt;Coordenadas&lt;/h3&gt;

&lt;p&gt;Para posicionar seus elementos, você precisa inserir uma coordenada. Essas coordenadas são comandadas pelas propriedades: top, left, right ou bottom. Todos os valores de positions só trabalham com essas coordenadas. Obviamente, se você definir um left para o seu elemento, não faz sentido definir um right. A mesma coisa para o bottom e o top. Em código ficaria assim:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
  position: absolute;
  top: 150px;
  left: 150px;
}
&lt;/pre&gt;

&lt;p&gt;Nesse caso eu posicionei o elemento a 150 pixels do topo e 150px da esquerda.&lt;/p&gt;

&lt;p&gt;Existem 3 tipos de valores que usamos na &lt;strong&gt;propriedade position&lt;/strong&gt;: &lt;em&gt;relative&lt;/em&gt;, &lt;em&gt;absolute&lt;/em&gt; e &lt;em&gt;fixed&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;position-fixed&#34;&gt;Position Fixed&lt;/h3&gt;

&lt;p&gt;O position: fixed; irá fixar a posição do elemento na coordenada que você definir. A medida que a página é rolada, o elemento continua fixo na posição que você definiu e o conteúdo da página rola normalmente.&lt;/p&gt;

&lt;p&gt;Geralmente é usado para fixar elementos como cabeçalhos ou sidebars.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/04/fixed.html&#34;&gt;Veja um exemplo de position fixed&lt;/a&gt; ou &lt;a href=&#34;http://tableless.github.io/exemplos/position-fixed.html&#34;&gt;esse exemplo&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;position-relative&#34;&gt;Position Relative&lt;/h3&gt;

&lt;p&gt;Todos os positions precisam de um ponto para iniciar o cálculo da coordenada para assim posicionar o elemento na tela. Ao contrário do que muitos acham, esse ponto não é o ponto central do elemento, o ponto base é o canto superior esquerdo do elemento. A partir deste canto, o browser irá calcular a coordenada que você definiu e irá posicionar o elemento no viewport.&lt;/p&gt;

&lt;p&gt;O position relative posiciona o elemento em relação a si mesmo. Ou seja, o ponto zero será o canto superior esquerdo, e ele começará a contar a partir dali.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/05/position-relative.gif&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2009/05/position-relative.gif&#34; alt=&#34;position-relative&#34; title=&#34;position-relative&#34; width=&#34;400&#34; height=&#34;400&#34; class=&#34;alignnone size-full wp-image-1408&#34; srcset=&#34;uploads/2009/05/position-relative.gif 400w, uploads/2009/05/position-relative-150x150.gif 150w, uploads/2009/05/position-relative-300x300.gif 300w&#34; sizes=&#34;(max-width: 400px) 100vw, 400px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;position-absolute&#34;&gt;Position Absolute&lt;/h3&gt;

&lt;p&gt;O Position Absolute é um tanto diferente do Relative. Enquanto o elemento com Position Relative utiliza seu próprio canto para referenciar sua posição, o elemento com Position Absolute se utiliza do ponto superior esquerdo de outros elementos. Estes elementos são os parentes dele do elemento com position absolute. Mais especificamente o pai.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/05/position-absolute.gif&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2009/05/position-absolute.gif&#34; alt=&#34;position-absolute&#34; title=&#34;position-absolute&#34; width=&#34;500&#34; height=&#34;500&#34; class=&#34;alignnone size-full wp-image-1409&#34; srcset=&#34;uploads/2009/05/position-absolute.gif 500w, uploads/2009/05/position-absolute-150x150.gif 150w, uploads/2009/05/position-absolute-300x300.gif 300w&#34; sizes=&#34;(max-width: 500px) 100vw, 500px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/05/position-absolute.html&#34; title=&#34;Exemplo de com funciona o Position Absolute&#34;&gt;Veja um exemplo em HTML.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No caso, se o DIV pai não tivesse position definido, o div filho iria se referenciar pelo BODY mesmo. Se caso o div pai não tivesse position definido, e se ele também fosse envolvido por outro div com position, o div filho iria se referenciar por este terceiro div.&lt;/p&gt;

&lt;p&gt;Logo, o div com position absolute referencia sua posição pelo div mais próximo que o envolve e que também tenha um position definido. Complicado, não é?&lt;/p&gt;

&lt;p&gt;Uma ocasião bem simples onde usaríamos position é na home do Flickr. Onde temos aquela imagem bonita de capa e o nome do autor logo abaixo. Para posicionar o nome do autor lá no rodape do div, você utilizaria o Position. Veja a imagem de exemplo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2009/05/flickr-exemplo.jpg&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2009/05/flickr-exemplo.jpg&#34; alt=&#34;flickr-exemplo&#34; title=&#34;flickr-exemplo&#34; width=&#34;578&#34; height=&#34;411&#34; class=&#34;alignnone size-full wp-image-1414&#34; srcset=&#34;uploads/2009/05/flickr-exemplo.jpg 578w, uploads/2009/05/flickr-exemplo-300x213.jpg 300w&#34; sizes=&#34;(max-width: 578px) 100vw, 578px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Um 2009 sem fôlego</title>
      <link>http://tableless.com.br/um-2009-sem-folego/</link>
      <pubDate>Thu, 01 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/um-2009-sem-folego/</guid>
      <description>&lt;p&gt;O ano de 2008 foi um ano parado para o &lt;a href=&#34;http://tableless.com.br/&#34; title=&#34;CSS e XHTML na ponta da língua&#34;&gt;Tableless&lt;/a&gt;. Na verdade foi um ano parado para os &lt;strong&gt;Padrões Web&lt;/strong&gt;. Ok, na verdade não foi tão parado assim. Mas digo, não houve mudanças drásticas, ou o &lt;strong&gt;CSS 3&lt;/strong&gt; foi lançado e eu não estou sabendo?&lt;/p&gt;

&lt;p&gt;Mesmo assim o ano que passou foi de grandes mudanças em outros setores que influenciam muito o &lt;strong&gt;desenvolvimento web&lt;/strong&gt;. Uma dessas mudanças em especial foi o avanço da telefonia móvel. E não estou falando do iPhone em si. Mas de todo o zum zum zum que rola até hoje depois do seu lançamento. As fabricantes estão ficando espertas e os celulares mais espertos ainda (entendeu? smartphone, smart, esperto, ahn, ahn? =^D). Isso quer dizer que a partir do ano que vem (na verdade já era para você estar fazendo isso), já devemos planejar os &lt;strong&gt;sites para funcionar em dispositivos móveis&lt;/strong&gt;. Não só para iPhone, mas para todo mundo.&lt;/p&gt;

&lt;p&gt;Faz tempo que o &lt;a href=&#34;http://tableless.com.br/&#34; title=&#34;Padrões Web e boas práticas de desenvolvimento&#34;&gt;Tableless&lt;/a&gt; deixou de ser um site só de tutoriais. Queremos tratar de coisas mais nobres aqui. Claro, nosso objetivo é ensinar, e fazemos muito isso, veja na página &lt;a href=&#34;http://tableless.com.br/aprenda&#34;&gt;Aprenda&lt;/a&gt;, no &lt;a href=&#34;http://visie.com.br/campus/&#34; title=&#34;Vídeos tutoriais sobre Tableless e outros assuntos&#34;&gt;Campus Online&lt;/a&gt;, e por todo o &lt;a href=&#34;http://tableless.com.br/&#34; title=&#34;Desenvolvimento web com CSS e XHTML&#34;&gt;site do Tableless&lt;/a&gt;. Temos conteúdo de sobra. Mas o que me preocupa não é tanto o nosso nível técnico, mas o tesão que nós sentimos pela profissão, pelo assunto. Já disse várias vezes que tesão não é só para sexo.&lt;/p&gt;

&lt;p&gt;Durante muito tempo eu tenho testemunhado durante minhas aulas e palestras a quantidade de profissionais que estavam ali porque o chefe mandou ou porque chegou até aquela palestra porque a empresa pagou. Simplesmente &lt;strong&gt;falta interesse&lt;/strong&gt;, e sem interesse, &lt;strong&gt;não há curiosidade&lt;/strong&gt;. O resto você já sabe.&lt;/p&gt;

&lt;p&gt;Por isso, que não quero tratar apenas sobre tutoriais e apostilas, mas também sobre mercado, metodologias, idéias, produtividade. É discutir &lt;strong&gt;sobre a profissão no brasil&lt;/strong&gt;. É aprofundar mais o &lt;strong&gt;conhecimento de como construir sites utilizando os Padrões&lt;/strong&gt; em pequenas, médias e grandes empresas. É entender quais são os obstáculos dos &lt;strong&gt;Padrões Web aqui no Brasil&lt;/strong&gt; e ajudar.&lt;/p&gt;

&lt;p&gt;Todos sabem que eu sou sócio da &lt;a href=&#34;http://visie.com.br/&#34; title=&#34;Treinamentos e Desenvolvimento de sistemas e E-Commerce&#34;&gt;Visie&lt;/a&gt;, juntamente com o &lt;a href=&#34;http://blog.elcio.com.br/&#34;&gt;Elcio&lt;/a&gt;. Este ano haverá muito jabá nosso aqui, os puristas e arranjadores de problemas que se preparem. Nós desenvolvemos um lugar muito bacana chamado &lt;a href=&#34;http://visie.com.br/campus/&#34; title=&#34;videos tutoriais de tableless e ajax&#34;&gt;Campus Online&lt;/a&gt;. Alguns de vocês já conhecem. Ele será nosso &amp;#8220;servidor de vídeos&amp;#8221;. Aqui no Tableless haverá um vídeo por dia, grátis, que será puxado do Campus Online. Fizemos um script para que você possa colocar no seu site se quiser, segue abaixo:&lt;/p&gt;

&lt;pre lang=&#34;javascript&#34;&gt;&lt;/pre&gt;

&lt;p&gt;Ali onde tem o número é a largura do vídeo. Ele puxará o vídeo e as informações como título e descrição. Assim como aparece na &lt;a href=&#34;http://tableless.com.br/&#34; title=&#34;Desenvolvimento web com CSS e XHTML&#34;&gt;home do Tableless&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Aproveitei tudo isso para colocar no Tableless o &lt;a href=&#34;http://wordpress.org/&#34;&gt;WordPress 2.7&lt;/a&gt;, que está um chuchuzinho. Fizeram muitas, mas muitas alterações no design e em algumas &lt;a href=&#34;http://codex.wordpress.org/Template_Tags&#34;&gt;Template Tags&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Existem centenas de posts aqui do Tableless que são bem antigos. Vou levar muito tempo para organizá-los. Muitos deles são da época de antes do WordPress, e precisam ser categorizados e tagueados. Isso é importante para que os posts relacionados funcionem perfeitamente e que você consiga achar mais conteúdo navegando pelo site.&lt;/p&gt;

&lt;p&gt;Há muitas mudanças que precisamos fazer ainda, mas essas vou deixar pra fazer com mais calma e sem sono. Por agora, sua opinião será muito importante e se houver qualquer sugestão, por favor, me diga.&lt;/p&gt;

&lt;p&gt;Que em 2009 você fique sem fôlego.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Os usuários de IE6 que me desculpem, mas eu não irei mais dar suporte a este navegador aqui no Tableless. Se quiser ver o site da melhor maneira possível, tente utilizar um browser decente como &lt;a href=&#34;http://getfirefox.com&#34; title=&#34;O melhor browser da história&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;http://opera.com&#34;&gt;Opera &lt;/a&gt;ou &lt;a href=&#34;http://apple.com/safari/&#34;&gt;Safari&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>