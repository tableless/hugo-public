<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Html on Tableless</title>
    <link>https://tableless.github.io/hugo-public/categories/html/index.xml</link>
    <description>Recent content in Html on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/categories/html/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Crie sites em quest√£o de minutos com o Pingendo</title>
      <link>https://tableless.github.io/hugo-public/crie-sites-em-questao-de-minutos-com-o-pingendo/</link>
      <pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/crie-sites-em-questao-de-minutos-com-o-pingendo/</guid>
      <description>

&lt;p&gt;Sem d√∫vidas, o Bootstrap √© uma das frameworks mais utilizadas ultimamente, por√©m, para algumas pessoas, ainda √© meio complicado lidar com os c√≥digos, sejam eles HTML, CSS ou JavaScript.&lt;/p&gt;

&lt;h2 id=&#34;o-que-√©-o-pingendo&#34;&gt;O que √© o Pingendo?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://pingendo.com/&#34;&gt;Pingendo&lt;/a&gt; √© um programa de interface simples e de f√°cil uso. O Pingendo √© um criador de sites em Bootstrap 3 que permite a cria√ß√£o de websites de maneira simples e r√°pida.&lt;/p&gt;

&lt;h2 id=&#34;drag-and-drop&#34;&gt;Drag and drop&lt;/h2&gt;

&lt;p&gt;O programa usa um modo muito popular em criadores de sites online como Wix, Weebly, etc. √â s√≥ arrastar e soltar os elementos desejados dentro da √°rea do site e pronto, a m√°gica est√° feita.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/mGmv44Y.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;imagens&#34;&gt;Imagens&lt;/h2&gt;

&lt;p&gt;Com o Pingendo voc√™ tem a seu dispor uma ampla quantidade de imagens livres de direitos autorais e com alt√≠ssima qualidade vindas direto do &lt;a href=&#34;https://unsplash.com/&#34;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/NMxtVad.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;fontes&#34;&gt;Fontes&lt;/h2&gt;

&lt;p&gt;A altera√ß√£o das fontes pode ser feita facilmente atrav√©s do menu lateral do programa. As fontes s√£o carregadas diretamente do &lt;a href=&#34;https://fonts.google.com/&#34;&gt;Google Fonts&lt;/a&gt;, um dos mais completos banco de dados de fontes da internet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/9RGXujM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;cores&#34;&gt;Cores&lt;/h2&gt;

&lt;p&gt;A altera√ß√£o das cores do tema tamb√©m podem ser alteradas atrav√©s do menu lateral, basta escolher as que mais lhe agradam.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/68jKTOb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;responsividade&#34;&gt;Responsividade&lt;/h2&gt;

&lt;p&gt;O Pingendo permite a visualiza√ß√£o do seu projeto em telas de diversos tamanhos. Facilitando assim o teste de responsividade do seu website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/dCHV33W.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;c√≥digo&#34;&gt;C√≥digo&lt;/h2&gt;

&lt;p&gt;Se voc√™ possu√≠ alguma experiencia, mesmo que m√≠nima, em HTML e/ou CSS, pode realizar altera√ß√µes direto do programa e velas sendo aplicadas em tempo real.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/3Fv69GJ.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pingendo est√° dispon√≠vel para as plataformas Mac, Windows e Linux no site &lt;a href=&#34;https://pingendo.com/&#34;&gt;www.pingendo.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Minha experi√™ncia com o CT (Centro de Treinamento)</title>
      <link>https://tableless.github.io/hugo-public/minha-experiencia-com-o-ct-centro-de-treinamento/</link>
      <pubDate>Sun, 22 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/minha-experiencia-com-o-ct-centro-de-treinamento/</guid>
      <description>&lt;p&gt;Meu nome √© Danilo, tenho 25 anos, e moro em S√£o Paulo. Antes de conhecer o projeto do CT‚Ää, eu havia trabalhado pouco tempo como Front-end em uma empresa chamada Athos Inform√°tica. Minha experi√™ncia n√£o foi uma das melhores, e acabou n√£o dando muito certo. Por√©m, aconteceu algo muito bacana‚Ää, quando eu fiquei dispon√≠vel para o mercado de trabalho.&lt;/p&gt;

&lt;p&gt;Comecei a frequentar todos os Meetup&amp;#8217;s que eu podia, conversei com muitos Dev&amp;#8217;s da comunidade, e coloquei de fato a m√£o na massa. Certo dia fu√ßando o GitHub, descobri o projeto do &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;https://medium.com/trainingcenter/hello-world-conhe%C3%A7a-o-centro-de-treinamento-4a47a1230b0c&#34; target=&#34;_blank&#34;&gt;CT(Centro de Treinamento)&lt;/a&gt;‚Ää ‚Ääfoi tudo muito lindo, era exatamente o que eu precisava, pensava comigo &amp;#8220;porra que oportunidade do caralho de criar algo da hora com algu√©m da comunidade.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A sementinha do capeta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vontade n√£o me faltava, o que precisava mesmo era de coragem para encarar os fatos. Ent√£o, clonei o reposit√≥rio, baixei pra minha m√°quina e fiquei lendo e relendo o README do projeto.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A decis√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;De tanto que eu li, criei coragem e como recomendado, abri uma issue no Github e deixei minha BIO dispon√≠vel para os mentores do CT.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56933&#34; src=&#34;uploads/2017/01/1-vpeNioZRCJN482Gy1rChhw.png&#34; alt=&#34;&#34; width=&#34;790&#34; height=&#34;517&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A resposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Depois de pouco tempo um cara muito gente boa o &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/9ccc2febef24&#34; target=&#34;_blank&#34;&gt;William Oliveira&lt;/a&gt;‚Ää‚Äî‚Ääme responde o seguinte:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56935&#34; src=&#34;uploads/2017/01/1-5uF9OA2mlkg_0hyuLd1prQ.png&#34; alt=&#34;&#34; width=&#34;775&#34; height=&#34;144&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Passaram-se 2 dias, e eu j√° imaginava que ningu√©m iria me adotar como pupilo. Hahaha!! Foi ai que apareceu um cara que eu j√° admirava nos bastidores h√° algum tempo.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Um pupilo foi adotado&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E eis que ele veio, demorou‚Ä¶ Mas veio! haha o nome dele? Nada mais nada menos do que o querido &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/7af9a79d81d6&#34; target=&#34;_blank&#34;&gt;Wendell Adriel&lt;/a&gt;. Calorosamente ele disse:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56937&#34; src=&#34;uploads/2017/01/1-k7GFUhcUoRq7X77SaBPa7w.png&#34; alt=&#34;&#34; width=&#34;771&#34; height=&#34;319&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Voc√™s j√° devem imaginar como eu fiquei feliz de saber que fui adotado‚Ä¶ Hahaha!! ‚ÄäNo mesmo dia o Wendell‚Ää j√° foi se socializando via issue mesmo¬†üôÇ veja:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56939&#34; src=&#34;uploads/2017/01/1-fWHtAnVYI2p6SOQQvSii4A.png&#34; alt=&#34;&#34; width=&#34;790&#34; height=&#34;151&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Dai ele me chamou no Slack e come√ßamos a definir nossa rotina.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A primeira abordagem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O primeiro contato foi bem tranquilo, ele pediu para me apresentar, falar sobre quais eram meus objetivos a curto, m√©dio e longo prazo, e assim, definimos juntos uma rotina de cria√ß√£o de um projeto real.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Nosso projeto lindo (Pok√©mon‚Ää‚Äî‚Ääbusque informa√ß√µes de seu pok√©mon favorito)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56940&#34; src=&#34;uploads/2017/01/1-zZ3F1dGnARKZpaGpZc-UIA.png&#34; alt=&#34;&#34; width=&#34;1126&#34; height=&#34;585&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O projeto foi arquitetado em cima dos meus objetivos‚Ää, ele usa as tecnologias:&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li id=&#34;bf67&#34; class=&#34;graf graf--li graf-after--p&#34;&gt;
    Html5
  &lt;/li&gt;
  &lt;li id=&#34;525a&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    Css3
  &lt;/li&gt;
  &lt;li id=&#34;2fab&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    VanilhaJS
  &lt;/li&gt;
  &lt;li id=&#34;40ad&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    Ajax
  &lt;/li&gt;
  &lt;li id=&#34;54bc&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    API Rest
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&#34;0a9d&#34; class=&#34;graf graf--p graf-after--li&#34;&gt;
  O projeto ainda est√° em constru√ß√£o. No final vamos subir ele no Heroku pra voc√™s verem como ficou. Temos muito o que acrescentar ainda e nosso objetivo √© aplicar mais tecnologia nele.
&lt;/p&gt;

&lt;p id=&#34;c918&#34; class=&#34;graf graf--p graf-after--p&#34;&gt;
  Voc√™ deve estar se perguntando mais foi s√≥ um projetinho que eles criaram? Nops! Estou empregado tamb√©m!¬†üôÇ Iniciei minha jornada em uma empresa incr√≠vel chamada @Amil‚Ää, e ainda por cima, trabalho com uma pessoa fera a &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/f94ec1390498&#34; target=&#34;_blank&#34;&gt;Andr√©a Zambrana&lt;/a&gt;.
&lt;/p&gt;

&lt;p id=&#34;bd60&#34; class=&#34;graf graf--p graf-after--p&#34;&gt;
  Quero agradecer a todos os envolvidos no CT‚Ää, ‚Ääe em especial ao meu Mentor e amigo &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/7af9a79d81d6&#34; target=&#34;_blank&#34;&gt;Wendell Adriel&lt;/a&gt;‚Ää pela paci√™ncia do dia-dia.¬†üôÇ
&lt;/p&gt;

&lt;p id=&#34;87ec&#34; class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  E o que te impede de procurar hoje mesmo um Mentor (a)?
&lt;/p&gt;

&lt;p class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  Voc√™ deseja ser um Mentor (a)?
&lt;/p&gt;

&lt;p class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  N√£o perca tempo muitos pupilos est√£o esperando por voc√™! xD
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando uma aplica√ß√£o de Chat simples com NodeJS e Socket.io</title>
      <link>https://tableless.github.io/hugo-public/criando-uma-aplicacao-de-chat-simples-com-nodejs-e-socket-io/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-uma-aplicacao-de-chat-simples-com-nodejs-e-socket-io/</guid>
      <description>

&lt;p&gt;Neste tutorial iremos abordar¬†alguns conceitos do Socket.io criando um simples sistema de chat para browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dericeira/Simple-Chat-Socket.io/master/example.gif&#34; alt=&#34;https://raw.githubusercontent.com/dericeira/Simple-Chat-Socket.io/master/example.gif&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;o-que-√©-socket-io&#34;&gt;O que √© Socket.io?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://socket.io&#34;&gt;Socket.io&lt;/a&gt; √© um uma biblioteca Javascript feita para construir aplica√ß√µes real-time, possibilitando uma comunica√ß√£o bi-direcional entre cliente e servidor. O socket.io utiliza as especifica√ß√µes¬†de Web Sockets (para quem quer saber mais, recomendo dar uma olhada &lt;a href=&#34;https://www.html5rocks.com/pt/tutorials/websockets/basics/&#34;&gt;neste √≥timo artigo&lt;/a&gt; da HTML5 Rocks).&lt;/p&gt;

&lt;p&gt;O Socket.io roda, no lado do servidor, em NodeJS, e, no lado do cliente, ele roda diretamente no browser, possibilitando uma enorme gama de possibilidades de aplica√ß√µes, como jogos, sistemas de notifica√ß√µes, real-time analytics e sistemas de chats e conversas em tempo real.&lt;/p&gt;

&lt;h2 id=&#34;setando-o-projeto&#34;&gt;Setando o projeto&lt;/h2&gt;

&lt;p&gt;Primeiramente, temos que instalar algumas bibliotecas que iremos utilizar no projeto, para isso usarei o &lt;a href=&#34;https://github.com/yarnpkg/yarn&#34;&gt;yarn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Em primeiro lugar, vou adicionar ao projeto a biblioteca do Socket.io que rodar√° do lado do servidor.&lt;/p&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;yarn add socketio&lt;/pre&gt;

&lt;p&gt;Tamb√©m iremos utilizar o express:&lt;/p&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;yarn add express&lt;/pre&gt;

&lt;p&gt;Tamb√©m precisamos adicionar o Socket.io para o cliente (voc√™ pode utilizar a CDN oficial disponibilizada no site deles tamb√©m):&lt;/p&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;yarn add¬†socket.io-client&lt;/pre&gt;

&lt;p&gt;E, por √∫ltimo, usarei¬†a biblioteca jQuery para manipular a DOM.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;yarn add jquery&lt;/pre&gt;

&lt;h2 id=&#34;fazendo-o-html-css&#34;&gt;Fazendo o HTML+CSS&lt;/h2&gt;

&lt;p&gt;Vamos criar um arquivo index.html e j√° deixar preparado o nosso template do sistema de chat.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;en&#34;&amp;gt;
&amp;lt;head&amp;gt;
 &amp;lt;meta charset=&#34;UTF-8&#34;&amp;gt;
 &amp;lt;title&amp;gt;Simple chat&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;assets/css.css&#34;&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div class=&#34;nickname_container&#34; id=&#34;nick&#34;&amp;gt;

 &amp;lt;span&amp;gt;Type your nickname:&amp;lt;/span&amp;gt;
 &amp;lt;form id=&#34;submit&#34;&amp;gt;&amp;lt;input type=&#34;text&#34; id=&#34;nickname&#34; /&amp;gt;&amp;lt;/form&amp;gt;

&amp;lt;/div&amp;gt;

&amp;lt;div id=&#34;chat&#34; hidden&amp;gt;

 &amp;lt;div class=&#34;menu&#34; =&amp;gt;
 &amp;lt;div class=&#34;name&#34; id=&#34;name&#34;&amp;gt;Alex&amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;last&#34; id=&#34;time&#34;&amp;gt;18:09&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;ol class=&#34;chat&#34;&amp;gt;
 
 &amp;lt;/ol&amp;gt;
 
 &amp;lt;input class=&#34;textarea&#34; type=&#34;text&#34; placeholder=&#34;Type here!&#34; id=&#34;textarea&#34; /&amp;gt;
&amp;lt;/div&amp;gt;
 &amp;lt;script src=&#34;node_modules/jquery/dist/jquery.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script src=&#34;node_modules/socket.io-client/socket.io.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script src=&#34;assets/js.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Repare que eu tamb√©m¬†criei o diret√≥rio assets, e criei os arquivos css.css e js.js.&lt;/p&gt;

&lt;p&gt;N√£o entrarei na parte do CSS, pois o foco aqui √© o javascript, mas voc√™ pode ver o resultado no¬†&lt;a href=&#34;https://github.com/dericeira/Simple-Chat-Socket.io/blob/master/assets/css.css&#34;&gt;github&lt;/a&gt;. Eu utilizei como base &lt;a href=&#34;https://codepen.io/Varo/pen/gbZzgr&#34;&gt;este pen&lt;/a&gt; para construir o layout.&lt;/p&gt;

&lt;h2 id=&#34;server-side&#34;&gt;Server-side&lt;/h2&gt;

&lt;p&gt;Vamos iniciar com a cria√ß√£o da parte de servidor do Socket.io, ou seja, iremos lidar com os eventos server-side.&lt;/p&gt;

&lt;p&gt;Iniciaremos criando um arquivo &lt;strong&gt;app.js&lt;/strong&gt; no diret√≥rio ra√≠z e importaremos os m√≥dulos¬†e faremos algumas opera√ß√µes iniciais:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var app = require(&#39;express&#39;)();
var http = require(&#39;http&#39;).Server(app);
var io = require(&#39;socket.io&#39;)(http);

var clients = {};

app.get(&#39;/&#39;, function(req, res){
res.send(&#39;server is running&#39;);
});

//SocketIO vem aqui

http.listen(3000, function(){
console.log(&#39;listening on port 3000&#39;);
});
&lt;/pre&gt;

&lt;p&gt;Este script implementa um servidor Node utilizando os m√≥dulos http e express (para roteamento).&lt;/p&gt;

&lt;p&gt;A vari√°vel clientes que est√° sendo criada servir√° para armazenar nossa lista de clientes.&lt;/p&gt;

&lt;p&gt;Agora iremos adicionar o nosso primeiro evento do Socket.io, que ser√° o¬†&lt;strong&gt;connection&lt;/strong&gt;, que dispara a cada vez que um cliente se conecta ao socket.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;io.on(&#34;connection&#34;, function (client) {
    console.log(&#39;user connected&#39;);
});&lt;/pre&gt;

&lt;p&gt;Para nossa sala de chat, precisaremos implementar outros 3 eventos: &lt;strong&gt;join&lt;/strong&gt;, &lt;strong&gt;send&lt;/strong&gt; e¬†&lt;strong&gt;disconnect&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;io.on(&#34;connection&#34;, function (client) {
¬†¬†client.on(&#34;join&#34;, function(name){
¬†¬†¬†¬†console.log(&#34;Joined: &#34; + name);
¬†¬†¬†¬†clients[client.id] = name;
¬†¬†¬†¬†client.emit(&#34;update&#34;, &#34;You have connected to the server.&#34;);
¬†¬†¬†¬†client.broadcast.emit(&#34;update&#34;, name + &#34; has joined the server.&#34;)
¬†¬†});

¬†¬†client.on(&#34;send&#34;, function(msg){
¬†¬†¬†¬†console.log(&#34;Message: &#34; + msg);
¬†¬†¬†¬†client.broadcast.emit(&#34;chat&#34;, clients[client.id], msg);
¬†¬†});

¬†¬†client.on(&#34;disconnect&#34;, function(){
¬†¬†¬†¬†console.log(&#34;Disconnect&#34;);
¬†¬†¬†¬†io.emit(&#34;update&#34;, clients[client.id] + &#34; has left the server.&#34;);
¬†¬†¬†¬†delete clients[client.id];
¬†¬†});
});
&lt;/pre&gt;

&lt;p&gt;O evento join dever√° ser disparado quando o cliente entrar no servidor, adicionando o id do cliente no array e emitindo¬†dois novos eventos, nomeando-os de &lt;strong&gt;update&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Note que h√° uma diferen√ßa entre o m√©todo &lt;strong&gt;client.emit&lt;/strong&gt; e o &lt;strong&gt;client.broadcast.emit&lt;/strong&gt;. O client.emit enviar√° a notifica√ß√£o somente para o cliente atual, ou seja, o cliente que acabou de entrar na sala de chat. O &lt;strong&gt;client.broadcast.emit&lt;/strong&gt; ir√°¬†emitir para todos os clientes conectados, com exce√ß√£o do¬†que est√° executando a a√ß√£o. Se utiliz√°ssemos o m√©todo &lt;strong&gt;io.emit&lt;/strong&gt;, a mensagem seria enviada a todos os clientes conectados ao socket.¬†Abaixo uma s√©rie de exemplos de m√©todos dispon√≠veis:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// enviar apenas para o cliente atual
client.emit(&#39;message&#39;, &#34;this is a test&#34;);

// enviar para todos os clientes, inclusive o atual
io.emit(&#39;message&#39;, &#34;this is a test&#34;);

// enviar para todos os clientes, exceto o atual
client.broadcast.emit(&#39;message&#39;, &#34;this is a test&#34;);

// enviar para todos os clientes (com exce√ß√£o do atual) para uma sala espec√≠fica
socket.broadcast.to(&#39;game&#39;).emit(&#39;message&#39;, &#39;nice game&#39;);

// enviar para todos os clientes em uma sala espec√≠fica
io.in(&#39;game&#39;).emit(&#39;message&#39;, &#39;cool game&#39;);

// enviar para o atual, caso ele esteja na sala
client.to(&#39;game&#39;).emit(&#39;message&#39;, &#39;enjoy the game&#39;);

// enviar para todos os clientes em um namespace &#39;namespace1&#39;
io.of(&#39;namespace1&#39;).emit(&#39;message&#39;, &#39;gg&#39;);

// enviando para um socketid individual
client.broadcast.to(socketid).emit(&#39;message&#39;, &#39;for your eyes only&#39;);&lt;/pre&gt;

&lt;p&gt;Com todos esses m√©todos, conseguir√≠amos implementar salas espec√≠ficas, mensagens individuais, etc. Por√©m nosso foco √© mostrar a parte mais b√°sica e entender o funcionamento.&lt;/p&gt;

&lt;h2 id=&#34;client-side&#34;&gt;Client-side&lt;/h2&gt;

&lt;p&gt;Com nosso servidor concluido e rodando, vamos passar para a parte de client-side de nossa aplica√ß√£o de chat. Vamos ao &lt;strong&gt;js.js&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Primeiramente, inicializaremos o socket.io e criaremos uma vari√°vel &lt;strong&gt;ready&lt;/strong&gt;, setada como false. Esta vari√°vel ser√° respons√°vel por indicar se o usu√°rio j√° informou ou n√£o o seu nickname.&lt;/p&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;$(document).ready(function(){
    var socket = io.connect(&#34;http://localhost:3000&#34;);
    var ready = false;
});
&lt;/pre&gt;

&lt;p&gt;Com esta implementa√ß√£o, j√° conseguimos disparar o evento¬†&lt;strong&gt;connection&lt;/strong&gt; em nosso servidor. Por√©m, precisamos fazer com que o servidor receba a informa√ß√£o cada vez que um novo usu√°rio entrar na sala informando o seu nickname.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;$(&#34;#submit&#34;).submit(function(e) {
    e.preventDefault();
    $(&#34;#nick&#34;).fadeOut();
    $(&#34;#chat&#34;).fadeIn();
    var name = $(&#34;#nickname&#34;).val();
    var time = new Date();
    $(&#34;#name&#34;).html(name);
    $(&#34;#time&#34;).html(&#39;First login: &#39; + time.getHours() + &#39;:&#39; + time.getMinutes());

    ready = true;
    socket.emit(&#34;join&#34;, name);
});
&lt;/pre&gt;

&lt;p&gt;A fun√ß√£o jQuery acima captura¬†a submiss√£o do formul√°rio de nickname, fecha a tela de sele√ß√£o de nick, mostra a tela de chat, seta a vari√°vel ready para true e executa um comando de socket, o¬†&lt;strong&gt;socket.emit&lt;/strong&gt;, que informa para o nosso servidor que um novo usu√°rio acabou de entrar na sala.&lt;/p&gt;

&lt;p&gt;Nada ir√° acontecer, pois ainda n√£o temos o receptor do evento &lt;strong&gt;update&lt;/strong&gt;, que est√° sendo disparado no nosso servidor, ent√£o vamos cri√°-lo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;socket.on(&#34;update&#34;, function(msg) {
    if (ready) {
        $(&#39;.chat&#39;).append(&#39;&amp;lt;li class=&#34;info&#34;&amp;gt;&#39; + msg + &#39;&amp;lt;/li&amp;gt;&#39;)
    }
});
&lt;/pre&gt;

&lt;p&gt;Este c√≥digo far√° com que, a cada vez que o servidor emitir um update, o jQuery adicione uma nova linha no chat com a mensagem retornada.&lt;/p&gt;

&lt;p&gt;Agora, iremos fazer com que nossa aplica√ß√£o envie as mensagens ao servidor a cada vez que o cliente apertar o enter¬†no input de texto:&lt;/p&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;$(&#34;#textarea&#34;).keypress(function(e){
    if(e.which == 13) {
         var text = $(&#34;#textarea&#34;).val();
         $(&#34;#textarea&#34;).val(&#39;&#39;);
         var time = new Date();
         $(&#34;.chat&#34;).append(&#39;&amp;lt;li class=&#34;self&#34;&amp;gt;&amp;lt;div class=&#34;msg&#34;&amp;gt;&amp;lt;span&amp;gt;&#39;
                      + $(&#34;#nickname&#34;).val() + &#39;:&amp;lt;/span&amp;gt; ¬† ¬†&amp;lt;p&amp;gt;&#39; + text + &#39;&amp;lt;/p&amp;gt;&amp;lt;time&amp;gt;&#39; + 
                      time.getHours() + &#39;:&#39; + time.getMinutes() + &#39;&amp;lt;/time&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt;&#39;);
         socket.emit(&#34;send&#34;, text);
    }
});
&lt;/pre&gt;

&lt;p&gt;E, para concluir, precisamos fazer com que o socket.io observe todas as mensagens referente ao chat em si, e adicione √† DOM:&lt;/p&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;socket.on(&#34;chat&#34;, function(client,msg) {
 if (ready) {
    var time = new Date();
    $(&#34;.chat&#34;).append(&#39;&amp;lt;li class=&#34;other&#34;&amp;gt;&amp;lt;div class=&#34;msg&#34;&amp;gt;&amp;lt;span&amp;gt;&#39; + 
                 client + &#39;:&amp;lt;/span&amp;gt;&amp;lt;p&amp;gt;&#39; + msg + &#39;&amp;lt;/p&amp;gt;&amp;lt;time&amp;gt;&#39; + time.getHours() + &#39;:&#39; + 
                 time.getMinutes() + &#39;&amp;lt;/time&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt;&#39;);
 }
});&lt;/pre&gt;

&lt;h2 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;Na minha opini√£o, ¬†as sockets s√£o¬†uma das melhores funcionalidades do HTML5, e possuem uma infinidade de aplica√ß√£o. O ganho de performance √© espetacular se bem aplicado, uma vez que evita o uso de requisi√ß√µes HTTP em aplica√ß√µes onde a necessidade de atualiza√ß√£o √© grande (baixa lat√™ncia).&lt;/p&gt;

&lt;p&gt;Disponibilizei o c√≥digo do tutorial no &lt;a href=&#34;https://github.com/dericeira/Simple-Chat-Socket.io&#34;&gt;github&lt;/a&gt; para quem se interessar, e estou aberto a tirar d√∫vidas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS3‚Ää‚Äî‚ÄäTrabalhando com M√∫ltiplas imagens background-images</title>
      <link>https://tableless.github.io/hugo-public/css3-trabalhando-com-multiplas-imagens-background-images/</link>
      <pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/css3-trabalhando-com-multiplas-imagens-background-images/</guid>
      <description>

&lt;p class=&#34;graf--p&#34;&gt;
  Quem nunca se deparou com um layout com m√∫ltiplas imagens ‚Äúsobrepostas‚Äù ou mesmo com t√≠tulos ou par√°grafos que precisavam ficar suspensos sobre m√∫ltiplas imagens de fundo? Essa semana me deparei com o mesmo problema.
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Com &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;CSS3&#34; href=&#34;https://developer.mozilla.org/en/CSS/CSS3&#34;&gt;CSS3&lt;/a&gt;, voc√™ pode aplicar aos elementos m√∫ltiplas imagens sobrepostas como plano de fundo. Sem a utiliza√ß√£o do Z-index! √â isso mesmo, ‚Äúnecas de pitibiriba‚Äù de Z-index.
&lt;/p&gt;

&lt;h2 id=&#34;velho-dilema-de-sobrepor-imagens-com-div-s-com-z-index-graf-h4&#34;&gt;Velho dilema de sobrepor imagens com div‚Äôs com Z-index‚Ä¶ {.graf&amp;ndash;h4}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  A primeira solu√ß√£o que vem √† cabe√ßa √© o velho e bom ‚ÄúZ-index‚Äù, Veja um exemplo de implementa√ß√£o:
&lt;/p&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    HTML
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;red&#34;&amp;gt;Red&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;green&#34;&amp;gt;Green&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;blue&#34;&amp;gt;Blue&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    CSS
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.red, .green, .blue {
    color: #fff;
    display: block;
    line-height: 100px;
    position: absolute;
    text-align: center;
    width: 100px;
}
.red {
    background: red;
    left: 20px;
    top: 20px;
    z-index: 0;
    opacity:0.5;
}
.green {
    background: green;
    left: 60px;
    top: 60px;
    z-index: 1;
    opacity:0.6;
}
.blue {
    background: blue;
    left: 100px;
    top: 100px;
    z-index: 2;
    opacity:0.7;
}
body {
    color: #777;
}&lt;/pre&gt;

&lt;p&gt;See the Pen &lt;a href=&#34;http://codepen.io/selique/pen/grvvLw/&#34;&gt;Z-index&lt;/a&gt; by Mois√©s lopes ferreira (&lt;a href=&#34;http://codepen.io/selique&#34;&gt;@selique&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;funciona-em-class-markup-em-markup-h4-em-sim-em-mas-espere-um-momento-essa-n√£o-√©-a-√∫nica-solu√ß√£o-graf-h4&#34;&gt;Funciona?!‚Ä¶ &lt;em class=&#34;markup--em markup--h4-em&#34;&gt;SIM!&lt;/em&gt; Mas espere um momento, essa n√£o √© a √∫nica solu√ß√£o‚Ä¶ {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  ‚Ä¶ Voc√™ j√° tava pensando num ‚Äúworkaround‚Äù safadinho, a m√£o da gambiarra chega a tremer nessas horas, mas nada de programa√ß√£o orientada a ‚ÄúGo-Horse‚Äù, hoje em dia temos ‚Äúsolucion√°tica‚Äù pra quase tudo hehe‚Ä¶
&lt;/p&gt;

&lt;div style=&#34;width: 510px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*pAiFtxYHdjg4-HP6e46wZA.gif&#34; alt=&#34;www.gohorseprocess.com.br/extreme-go-horse-(xgh)&#34; width=&#34;500&#34; height=&#34;374&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    www.gohorseprocess.com.br/extreme-go-horse-(xgh)
  &lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&#34;conhecendo-as-propriedades-css-do-background-graf-h4&#34;&gt;Conhecendo as propriedades CSS do Background: {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;pre&gt;background-color.........define a cor do fundo;
background-image.........define uma imagem de fundo;
background-repeat........define a maneira como a imagem de fundo √© posicionada;
background-attachment....define se a imagem de fundo &#34;rola&#34; ou n√£o com a tela;
background-position......define como e onde a imagem de fundo √© posicionada;
background-clip..........define a √°rea do box onde a imagem de fundo √© aplicada;
background-origin........define a posi√ß√£o de origem da imagem no box;
background-size..........define as dimens√µes da imagem no box;
background...............maneira abreviada para declarar todas as propriedades anteriores;&lt;/pre&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  O nosso grande mestre &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/addb7196c9b9&#34;&gt;Maur√≠cio Samy Silva&lt;/a&gt; #Maujor explica melhor as aplica√ß√µes das propriedades &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://maujor.com/tutorial/propriedade-css-para-estilizacao-de-background.php&#34; rel=&#34;nofollow&#34;&gt;http://maujor.com/tutorial/propriedade-css-para-estilizacao-de-background.php&lt;/a&gt;
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Agora que conhecemos suas propriedades e caracter√≠sticas‚Ä¶ agora vamos ver como o ‚Äúbackground-image‚Äù funciona para entendermos nosso horizonte de possibilidades:
&lt;/p&gt;

&lt;h2 id=&#34;background-image-vs-z-index-a-batalha-graf-h4&#34;&gt;Background-image VS Z-index‚Ää‚Äî‚ÄäA BATALHA: {.graf&amp;ndash;h4}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Quando trabalhamos 2 ou 3 elementos (sejam &lt;img&gt;, &lt;div&gt;, &lt;etc‚Ä¶&gt;) temos um controle at√© toler√°vel, mas‚Ä¶ quando utilizamos 6, 10 ou mais elementos numa mesma div ou aninhamento pr√≥ximo, o z-index come√ßa a se tornar ‚Äúlingui√ßento‚Äù demais e somos obrigados a utilizar mais classes e ids para organizarmos nosso CSS, pensando nisso que escrevi esse post!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  &lt;em&gt;√Äs vezes n√£o necessariamente queremos ou podemos utilizar o z-index.&lt;/em&gt;
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Sem contar que quebramos o conceito de &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://tableless.com.br/oocss-smacss-bem-dry-css-afinal-como-escrever-css/&#34;&gt;DRY&lt;/a&gt; em nosso documento CSS e n√£o queremos isso, n√£o √© amiguinhos?
&lt;/p&gt;

&lt;div style=&#34;width: 495px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*xt8qqJopHwF-Gcg9xM6t3w.gif&#34; alt=&#34;Vida de um Front-end&#34; width=&#34;485&#34; height=&#34;364&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Front-end Lifestyle
  &lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&#34;z-index-quando-usar-graf-h4&#34;&gt;Z-index‚Ää‚Äî‚ÄäQuando usar? {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Quando temos muitos elementos e precisamos especificar propriedades e caracter√≠sticas CSS que v√£o al√©m do prop√≥sito de uma ‚Äúimagem de fundo‚Äù ou ‚Äúsobreposi√ß√£o‚Äù ent√£o o Z-index √© a melhor op√ß√£o!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Mas se voc√™ quer simplesmente sobrepor uma imagem de um logo (ou uma composi√ß√£o de camadas que formam um logo) sobre um uma ou mais imagem de preenchimento de fundo o background-image √© a melhor solu√ß√£o!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Estes elementos ficam empilhados em camadas uma acima da outra, onde o primeiro fundo dado ser√° desenhado no topo e apenas o √∫ltimo elemento da lista poder√° definir uma cor s√≥lida de fundo, ou n√£o, a√≠ fica ao seu crit√©rio.
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.minhaClasse {
  background: fundo1, fundo2, ..., fundoN;
}&lt;/pre&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://tableless.com.br/tag/css3/&#34;&gt;CSS3&lt;/a&gt; permite especificar imagens de fundo para m√∫ltiplos elementos, usando nada mais do que uma √∫nica lista separada por v√≠rgulas.
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Voc√™ pode fazer isso com a propriedade reduzida &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background&#34;&gt;background&lt;/a&gt; e tamb√©m com as propriedade individuais, com a exce√ß√£o de &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-color&#34;&gt;background-color&lt;/a&gt;. Isto √©, as seguintes propriedades de plano de fundo podem ser especificadas com uma lista, uma por fundo: &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background&#34;&gt;background&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-attachment&#34;&gt;background-attachment&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;A propriedade CSS¬†background-clip¬†especifica se o fundo de um elemento, seja cor ou imagem, se extende debaixo de sua borda.&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-clip&#34;&gt;background-clip&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34;&gt;background-image&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-origin&#34;&gt;background-origin&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-position&#34;&gt;background-position&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-repeat&#34;&gt;background-repeat&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-size&#34;&gt;background-size&lt;/a&gt;. (rola at√© gradiente!)
&lt;/p&gt;

&lt;h2 id=&#34;exemplos-graf-h3&#34;&gt;Exemplos {.graf&amp;ndash;h3}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Neste exemplo, tr√™s planos de fundos est√£o empilhados: um texto estilizado, o logo da Tableless.com.br, e uma imagem de fundo ilustrando uma cidade:
&lt;/p&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    HTML
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;header&amp;gt;
  &amp;lt;div class=&#34;intro-text&#34;&amp;gt;
    &amp;lt;h1 class=&#34;name-index&#34;&amp;gt;BEM-VINDO √Ä&amp;lt;/br&amp;gt;&amp;lt;span&amp;gt;INTERNET&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/header&amp;gt;&lt;/pre&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    CSS
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-css&#34;&gt;header {
  background: url(&lt;a class=&#34;markup--anchor markup--pre-anchor&#34; href=&#34;http://tableless.com.br/wp-content/uploads/2013/04/logo-tableless-01.png&#34; rel=&#34;nofollow&#34;&gt;http://tableless.com.br/wp-content/uploads/2013/04/logo-tableless-01.png&lt;/a&gt;) no-repeat center center, url(&lt;a class=&#34;markup--anchor markup--pre-anchor&#34; href=&#34;http://lorempixel.com/output/city-q-g-1024-768-10.jpg&#34; rel=&#34;nofollow&#34;&gt;http://lorempixel.com/output/city-q-g-1024-768-10.jpg&lt;/a&gt;) no-repeat center top;
  height: 100vh;
  width: auto;
  box-sizing: border-box;
}
header .intro-text {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}
header .intro-text &amp;gt; h1 {
  text-shadow: 8px 5px 5px #00181c;
  color: #fff;
  text-transform: uppercase;
  text-align: center;
}
header .intro-text .name-index {
  font-size: 7vw;
}
header .intro-text .name-index span {
  font-size: 9.2vw;
}&lt;/pre&gt;

&lt;p&gt;See the Pen &lt;a href=&#34;http://codepen.io/selique/pen/vKddRK/&#34;&gt;Multiple backgrounds backgroud-image&lt;/a&gt; by Mois√©s lopes ferreira (&lt;a href=&#34;http://codepen.io/selique&#34;&gt;@selique&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Suporte do navegador para m√∫ltiplas imagens com a propriedade CSS background-image √© relativamente difundido na implementa√ß√£o do recurso citado acima:
&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Mozilla Firefox (3.6 ou superior)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Safari / Chrome (1.0 / 1.3 +)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Opera (10.5+)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    at√© mesmo no Internet Explorer (9.0+)
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Bibliografia (Fontes)
&lt;/p&gt;

&lt;div class=&#34;graf--mixtapeEmbed&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--mixtapeEmbed-anchor&#34; title=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34;&gt;&lt;strong class=&#34;markup--strong markup--mixtapeEmbed-strong&#34;&gt;background-image&lt;/strong&gt; &amp;#8211; &lt;em class=&#34;markup--em markup--mixtapeEmbed-em&#34;&gt;The CSS background-image property sets one or several background images for an element. The images are drawn on‚Ä¶&lt;/em&gt;developer.mozilla.org&lt;/a&gt;
&lt;/div&gt;

&lt;div class=&#34;graf--mixtapeEmbed&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--mixtapeEmbed-anchor&#34; title=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Background_and_Borders/Using_CSS_multiple_backgrounds&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Background_and_Borders/Using_CSS_multiple_backgrounds&#34;&gt;&lt;strong class=&#34;markup--strong markup--mixtapeEmbed-strong&#34;&gt;Multiple backgrounds&lt;/strong&gt; &amp;#8211; &lt;em class=&#34;markup--em markup--mixtapeEmbed-em&#34;&gt;Com CSS3¬†, voc√™ pode aplicar aos elementos multiplos planos de fundo. Estes ficam em camadas empilhadas uma acima da‚Ä¶&lt;/em&gt;developer.mozilla.org&lt;/a&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Upload de imagens desmistificado com simpleGallery.js</title>
      <link>https://tableless.github.io/hugo-public/upload-de-imagens-desmistificado-com-simplegallery-js/</link>
      <pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/upload-de-imagens-desmistificado-com-simplegallery-js/</guid>
      <description>

&lt;p&gt;Ol√° pessoal, tudo bem?&lt;/p&gt;

&lt;p&gt;Neste artigo vou procurar abordar algo comum no dia-a-dia de qualquer desenvolver, o &amp;#8220;temido&amp;#8221; upload de imagens. No processo utilizarei NodeJS e Express para o back-end. A grande sacada ser√°¬†a utiliza√ß√£o da lib &lt;a href=&#34;https://github.com/fccoelho7/simpleGallery.js/&#34;&gt;simpleGallery.js&lt;/a&gt;, que nos auxiliar√°¬†no front-end.&lt;/p&gt;

&lt;h2 id=&#34;passos-iniciais&#34;&gt;Passos iniciais..&lt;/h2&gt;

&lt;p&gt;A seguir criaremos um servidor bem simples. Utilizarei o package¬†&amp;#8220;Multer&amp;#8221; como middleware para as requisi√ß√µes de arquivo. N√£o vou prezar por seguran√ßa nem boas pr√°ticas, j√° que este artigo √© apenas para encorajar aqueles que ainda possuem dificuldades.&lt;/p&gt;

&lt;p&gt;Primeiro come√ßaremos com a instala√ß√£o do NodeJS e NPM, para mais informa√ß√µes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;https://nodejs.org/en/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.npmjs.org/post/85484771375/how-to-install-npm&#34;&gt;http://blog.npmjs.org/post/85484771375/how-to-install-npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ap√≥s NodeJS e NPM instalados, √© hora de criarmos nosso &lt;code&gt;package.json&lt;/code&gt;, que ser√° respons√°vel por armazenar o nome do app, vers√£o, nossos packages etc. Abra o terminal e digite:&lt;/p&gt;

&lt;pre&gt;npm init /my-upload-app
cd my-upload-app
mkdir public&lt;/pre&gt;

&lt;p&gt;Ap√≥s todos os dados inseridos, partiremos para a inclus√£o dos packages que utilizaremos.&lt;/p&gt;

&lt;pre&gt;npm install --save-dev express multer&lt;/pre&gt;

&lt;p&gt;Este comando instalar√° as √∫ltimas vers√µes de cada package, permitindo a sua utiliza√ß√£o junto ao NodeJS.&lt;/p&gt;

&lt;h2 id=&#34;criando-o-server&#34;&gt;Criando o Server&lt;/h2&gt;

&lt;p&gt;Com tudo instalado, basta criar um arquivo em nosso diret√≥rio chamado de &lt;code&gt;index.js&lt;/code&gt;. Este conter√° o b√°sico para criar nossa API e seus respectivos endpoints. Estou utilizando o Hello World do pr√≥prio Express, que est√° presente¬†&lt;a href=&#34;http://expressjs.com/pt-br/starter/hello-world.html&#34;&gt;neste&lt;/a&gt;¬†link.&lt;/p&gt;

&lt;pre&gt;const express = require(&#39;express&#39;)
const app = express()

app.get(&#39;/&#39;, (req, res) =&amp;gt; {
 res.sendFile(&#39;public/index.html&#39;)
})

app.listen(3000, () =&amp;gt; console.log(&#39;Lstening on port 3000!&#39;))

&lt;/pre&gt;

&lt;p&gt;Isto j√° √© o suficiente para rodar nosso server (digite &lt;code&gt;node index.js&lt;/code&gt;). Tudo que estiver dentro da pasta &lt;code&gt;/public&lt;/code&gt; obviamente ser√° considerado como p√∫blico e &amp;#8220;vis√≠vel&amp;#8221; ao browser.&lt;/p&gt;

&lt;p&gt;Sem mais delongas, vamos partir para o endpoint que receber√° os arquivos e retornar√° um JSON com as respectivas URL&amp;#8217;s, ele tamb√©m ser√° respons√°vel por armazenar¬†nossas imagens na¬†pasta &lt;code&gt;/uploads&lt;/code&gt;. Neste ponto utilizo uma configura√ß√£o m√≠nima do &amp;#8216;Multer&amp;#8217;, voc√™ pode melhorar este processo limitando os arquivos por tamanho, tipo, quantidade etc. Para mais informa√ß√µes, clique &lt;a href=&#34;https://github.com/expressjs/multer&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;const express = require(&#39;express&#39;)
const app = express()
const multer = require(&#39;multer&#39;)

const upload = multer({ dest: &#39;public/uploads/&#39; }) // Configuramos o destino dos arquivos.

app.get(&#39;/&#39;, (req, res) =&amp;gt; {
 res.sendFile(&#39;public/index.html&#39;)
})

app.post(&#39;/upload&#39;, upload.array(&#39;gallery[]&#39;), (req, res) =&amp;gt; {
 let gallery = []
 req.files.map((image) =&amp;gt; gallery.push({&#39;url&#39;: `http://localhost:3000/uploads/${image.filename}`}))
 res.status(200).json(gallery)
})

app.listen(3000, () =&amp;gt; console.log(&#39;Listening on port 3000!&#39;))&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Agora nossa API j√° est√° 100% funcional. Para testar, submeta um POST com as imagens para a url &lt;code&gt;http://localhost:3000/uploads&lt;/code&gt;. Voc√™ receber√° uma resposta formato JSON com a URL das imagens enviadas.&lt;/p&gt;

&lt;h2 id=&#34;j√°-no-front-end&#34;&gt;J√°¬†no Front-End..&lt;/h2&gt;

&lt;p&gt;Com a nossa API criada, agora precisamos configurar o nosso front-end. Para isto, vamos iniciar criando um &lt;code&gt;index.html&lt;/code&gt; dentro da pasta &lt;code&gt;/public&lt;/code&gt;. Ap√≥s criado, √© hora de escrevermos nosso HTML:&lt;/p&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
 &amp;lt;title&amp;gt;Upload App&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;form class=&#34;form-upload&#34; action=&#34;/&#34; method=&#34;POST&#34; enctype=&#34;multipart/form-data&#34;&amp;gt;
 &amp;lt;input type=&#34;hidden&#34; name=&#34;gallery&#34;&amp;gt;
 &amp;lt;label for=&#34;&#34;&amp;gt;Image Gallery&amp;lt;/label&amp;gt;
 &amp;lt;div class=&#34;input-upload btn&#34;&amp;gt;
 Upload
 &amp;lt;input class=&#34;upload&#34; type=&#34;file&#34; multiple=&#34;multiple&#34; accept=&#34;image/*&#34;&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;gallery-container&#34;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;p&gt;At√© agora nenhuma novidade, um formul√°rio &lt;code&gt;enctype=&amp;quot;multipart/form-data&amp;quot;&lt;/code&gt; com os campos necess√°rios para enviarmos as fotos para nossa API.&lt;/p&gt;

&lt;h2 id=&#34;8220-hora-do-show-8221&#34;&gt;&amp;#8220;Hora do show!&amp;#8221;&lt;/h2&gt;

&lt;p&gt;Chegou a hora de implementarmos o &lt;a href=&#34;https://github.com/fccoelho7/simpleGallery.js/&#34;&gt;simpleGallery.js&lt;/a&gt;, uma lib JS vanilla, de apenas 2kb gzipped. Esta ser√° respons√°vel por submeter as imagens e salvar o JSON de retorno em algum input hidden,¬†em nosso exemplo, utilizaremos o padr√£o da lib que ser√°:&lt;/p&gt;

&lt;pre&gt;&amp;lt;input type=&#34;hidden&#34; name=&#34;gallery&#34;&amp;gt;&lt;/pre&gt;

&lt;p&gt;Tamb√©m faremos a inclus√£o do CSS e JS, que pode ser encontrado no pr√≥prio reposit√≥rio do¬†&lt;a href=&#34;https://github.com/fccoelho7/simpleGallery.js/&#34;&gt;simpleGallery.js&lt;/a&gt;. Ou via NPM/Bower, basta procurar por: &lt;code&gt;simple-gallery-js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;O¬†&lt;a href=&#34;https://github.com/RubaXa/Sortable&#34;&gt;Sortable&lt;/a&gt;, uma lib JS vanilla, ser√° respons√°vel por permitir a reordena√ß√£o de nossa galeria.&lt;/p&gt;

&lt;p&gt;O c√≥digo final fica assim:&lt;/p&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
 &amp;lt;title&amp;gt;Upload App&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://raw.githubusercontent.com/fccoelho7/simpleGallery.js/master/dist/simple-gallery.min.css&#34; media=&#34;screen&#34; charset=&#34;utf-8&#34;&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;form class=&#34;form-upload&#34; action=&#34;/&#34; method=&#34;POST&#34; enctype=&#34;multipart/form-data&#34;&amp;gt;
 &amp;lt;input type=&#34;hidden&#34; name=&#34;gallery&#34;&amp;gt;
 &amp;lt;label for=&#34;&#34;&amp;gt;Image Gallery&amp;lt;/label&amp;gt;
 &amp;lt;div class=&#34;input-upload btn&#34;&amp;gt;
Upload
 &amp;lt;input class=&#34;upload&#34; type=&#34;file&#34; multiple=&#34;multiple&#34; accept=&#34;image/*&#34;&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;gallery-container&#34;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/form&amp;gt;

&amp;lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.4.2/Sortable.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script src=&#34;https://raw.githubusercontent.com/fccoelho7/simpleGallery.js/master/dist/simple-gallery.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script type=&#34;text/javascript&#34;&amp;gt;
 new SimpleGallery(&#39;.form-upload&#39;);
 &amp;lt;/script&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;


&lt;/pre&gt;

&lt;h2 id=&#34;mas-pera&#34;&gt;Mas pera!&lt;/h2&gt;

&lt;p&gt;&amp;#8220;Eu tenho minha API de uploads em uma URL e meu formul√°rio ser√° enviado para outro endpoint, como farei isso?&amp;#8221; Bom, caso voc√™ n√£o deseje utilizar o mesmo endpoint para upload de imagens e requisi√ß√£o do formul√°rio, o &lt;a href=&#34;https://github.com/fccoelho7/simpleGallery.js/&#34;&gt;simpleGallery.js&lt;/a&gt;¬†nos permite criar um segundo &lt;strong&gt;action.¬†&lt;/strong&gt;Basta inserir um &lt;code&gt;data-action-gallery&lt;/code&gt;, como no exemplo abaixo:&lt;/p&gt;

&lt;pre&gt;&amp;lt;form class=&#34;form-upload&#34; action=&#34;/&#34; data-action-gallery=&#34;/uploads&#34; method=&#34;POST&#34; enctype=&#34;multipart/form-data&#34;&amp;gt;

&lt;/pre&gt;

&lt;h2 id=&#34;por-fim&#34;&gt;Por fim.&lt;/h2&gt;

&lt;p&gt;Outras op√ß√µes como: trocar o name do input que receber√° o JSON das url&amp;#8217;s¬†e a classe que conter√° a galeria tamb√©m s√£o poss√≠veis, para mais informa√ß√µes acesse o reposit√≥rio oficial do¬†&lt;a href=&#34;https://github.com/fccoelho7/simpleGallery.js/&#34;&gt;simpleGallery.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O conte√∫do deste artigo pode ser encontrado¬†&lt;a href=&#34;https://github.com/fccoelho7/simple-gallery-demo&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bom, √© isso. Espero que tenha gostado e perdido o medo quando o assunto √© &amp;#8220;upload de imagens&amp;#8221;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Carrossel descomplicado com HTML, CSS</title>
      <link>https://tableless.github.io/hugo-public/carrocel-descomplicado-com-html-css/</link>
      <pubDate>Sun, 04 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/carrocel-descomplicado-com-html-css/</guid>
      <description>

&lt;p&gt;N√£o √© dif√≠cil perceber que muitos desenvolvedores tanto iniciantes como os veteranos de guerra ainda sofrem quando o assunto √© carrossel,¬†mesmo utilizando frameworks como BootStrap. Mas seus problemas acabaram! (m√∫sica de chegada milagrosa), com o conhecimento de poucas t√©cnicas podemos resolver esse &amp;#8220;gigante&amp;#8221; problema facilmente.&lt;/p&gt;

&lt;h3 id=&#34;pseudo-classe-target-8211-css&#34;&gt;Pseudo classe :target &amp;#8211; CSS&lt;/h3&gt;

&lt;p&gt;Para resolver o grande problema de transi√ß√£o do carrossel, vamos utilizar a pseudo classe &lt;code&gt;:target&lt;/code&gt;, que atribui algumas caracter√≠sticas do CSS para o elemento HTML.&lt;/p&gt;

&lt;p&gt;Para quem ainda n√£o conhece a pseudo classe &amp;#8220;:target&amp;#8221; aqui vai um exemplo bem alto explicativo.&lt;/p&gt;

&lt;h6 id=&#34;html&#34;&gt;HTML&lt;/h6&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;a href=&#34;#texto-exemplo-1&#34;&amp;gt;Seleciona o texto exemplo 1&amp;lt;/a&amp;gt;
&amp;lt;a href=&#34;#texto-exemplo-2&#34;&amp;gt;Seleciona o texto exemplo 2&amp;lt;/a&amp;gt;

&amp;lt;p id=&#34;texto-exemplo-1&#34; class=&#34;text&#34; &amp;gt;Texto exemplo 1&amp;lt;/p&amp;gt;
&amp;lt;p id=&#34;texto-exemplo-2&#34; class=&#34;text&#34; &amp;gt;Texto exemplo 2&amp;lt;/p&amp;gt;
&lt;/pre&gt;

&lt;h6 id=&#34;css&#34;&gt;CSS&lt;/h6&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.text:target{
    border: 1px solid #000;
}
&lt;/pre&gt;

&lt;p&gt;Voc√™ pode conferir o resultado no CODEPEN &lt;a href=&#34;http://codepen.io/lleonardoll/pen/BzBdWB?editors=1100&#34; target=&#34;_blank&#34;&gt;aqui.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O Tableless tem &lt;a href=&#34;http://tableless.com.br/css3-abas-com-a-pseudo-classe-target/&#34;&gt;um artigo que ensina a fazer abas usando apenas CSS3 com o pseudo classe :target&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;estrutura-html&#34;&gt;Estrutura HTML&lt;/h3&gt;

&lt;p&gt;A estrutura que iremos utilizar tamb√©m √© bem simples. Primeiramente uma DIV como &amp;#8220;container&amp;#8221; que √© onde ir√° acontecer o carrossel, tamb√©m utilizaremos outras DIVs que chamaremos de &amp;#8220;wall-x&amp;#8221; onde x √© o valor da DIV no carrossel.&lt;/p&gt;

&lt;h2 id=&#34;m√£o-na-massa&#34;&gt;M√£o na massa&lt;/h2&gt;

&lt;p&gt;Vamos come√ßar pelo HTML definindo a estrutura do nosso carrossel.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;container&#34;&amp;gt;
    &amp;lt;div class=&#34;wall wall-1&#34; id=&#34;wall-1&#34;&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 1&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-2&#34; id=&#34;wall-2&#34;&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 2&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-3&#34; id=&#34;wall-3&#34;&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 3&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Terminado a estrutura, devemos deixar todas as DIVs wall com &amp;#8220;display: none;&amp;#8221; ( sim, todas! ) para n√£o serem listadas de uma vez.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.container{
    width: 150px;
    height: 150px;
}

.wall{
    display: none;
    width: 100%;
    height: 100%;
}

/* Corzinha de fundo para diferenciar */
.wall-1{ background-color: #f00; }
.wall-2{ background-color: #0f0; }
.wall-3{ background-color: #00f; }

.wall:target{
    display: block;
}
&lt;/pre&gt;

&lt;h6 id=&#34;explicando-8230&#34;&gt;Explicando&amp;#8230;&lt;/h6&gt;

&lt;p&gt;Basicamente, definimos o tamanho do &amp;#8220;container&amp;#8221;. Deixamos todas as DIVs &amp;#8220;wall&amp;#8221; com &amp;#8220;display: none;&amp;#8221; e definimos que todo &amp;#8220;target&amp;#8221; ter√° o &amp;#8220;display: block;&amp;#8221;. Se nada estiver aparecendo na sua tela, n√£o se assuste, tudo est√° funcionando, o que acontece √© que voc√™ n√£o tem nem um &amp;#8220;target&amp;#8221; definido, mas voc√™ pode fazer um teste adicionando &amp;#8220;#wall-1&amp;#8221; na sua url.&lt;/p&gt;

&lt;p&gt;Ok, j√° temos 90% do carrossel pronto. Para finalizarmos o carrossel precisamos adicionar as setas (ou bot√µes como preferir) para fazer a transi√ß√£o de uma tela para outra, e √© ai que vem a outra parte f√°cil. A unica coisa que precisamos fazer √© adicionar links que setam para o target anterior ou seguinte, neste caso, se voc√™ estiver no &amp;#8220;#wall-2&amp;#8221; o anterior seria &amp;#8220;#wall-1&amp;#8221; e o seguinte &amp;#8220;#wall-3&amp;#8221; (precisava explicar?).&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;container&#34;&amp;gt;
    &amp;lt;div class=&#34;wall wall-1&#34; id=&#34;wall-1&#34;&amp;gt;
        &amp;lt;a href=&#34;#wall-3&#34;&amp;gt;Voltar&amp;lt;/a&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 1&amp;lt;/h1&amp;gt;
        &amp;lt;a href=&#34;#wall-2&#34;&amp;gt;Avan√ßar&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-2&#34; id=&#34;wall-2&#34;&amp;gt;
        &amp;lt;a href=&#34;#wall-1&#34;&amp;gt;Voltar&amp;lt;/a&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 2&amp;lt;/h1&amp;gt;
        &amp;lt;a href=&#34;#wall-3&#34;&amp;gt;Avan√ßar&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-3&#34; id=&#34;wall-3&#34;&amp;gt;
        &amp;lt;a href=&#34;#wall-2&#34;&amp;gt;Voltar&amp;lt;/a&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 3&amp;lt;/h1&amp;gt;
        &amp;lt;a href=&#34;#wall-1&#34;&amp;gt;Avan√ßar&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Para facilitar a exibi√ß√£o do primeiro target (sem ter que criar um link personalizado) voc√™ pode simplesmente colocar uma linha de javascript para todo o carrossel ficar ativa üòâ&lt;/p&gt;

&lt;pre&gt;window.location = &#34;#wall-1&#34;;
&lt;/pre&gt;

&lt;p&gt;Voc√™ pode ver o c√≥digo em a√ß√£o no CODEPEN &lt;a href=&#34;http://codepen.io/lleonardoll/pen/pbvdRZ&#34; target=&#34;_blank&#34;&gt;aqui.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pronto! Uma maneira muito simples para resolver um grande problema.&lt;/p&gt;

&lt;h2 id=&#34;poss√≠vel-problema-que-voc√™-poder√°-encontrar&#34;&gt;Poss√≠vel problema que voc√™ poder√° encontrar&lt;/h2&gt;

&lt;p&gt;Caso voc√™ esteja utilizando algum link com target &amp;#8220;#&amp;#8221; para executar alguma a√ß√£o, o &amp;#8220;#wall-x&amp;#8221; que est√° sendo setado perder√° o foco, e logicamente ter√° a atribui√ß√£o &amp;#8220;display: none;&amp;#8221; retomada. Neste caso √© recomend√°vel que n√£o utilize targets na mesma pagina do carrossel e substitua os links &amp;#8220;#&amp;#8221; por fun√ß√µes onclick via JavaScript ou JQuery.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Acessibilidade b√°sica no formul√°rio de contato</title>
      <link>https://tableless.github.io/hugo-public/acessibilidade-basica-no-formulario-de-contato/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/acessibilidade-basica-no-formulario-de-contato/</guid>
      <description>

&lt;p&gt;Um dos itens indispens√°veis em um site √© o formul√°rio de contato, j√° pensou deixar ele acess√≠vel para todos na web? Na atualidade a acessibilidade vem sendo¬†levada a s√©rio com o avan√ßo das tecnologias web e as supostas padroniza√ß√µes dos navegadores, e a acessibilidade hoje na web √© muito importante, e a chegada do HTML5¬†deixou marca√ß√£o do HTML mais explicativa para usu√°rios acess√≠veis.&lt;/p&gt;

&lt;h2 id=&#34;wcag-2-0-o-que-√©&#34;&gt;WCAG 2.0 o que √© ?&lt;/h2&gt;

&lt;p&gt;Quando se fala em diretrizes de acessibilidade ¬†a¬†&lt;a href=&#34;https://www.w3.org/Translations/WCAG20-pt-PT/&#34;&gt;WCAG&lt;/a&gt;¬†que est√° na vers√£o 2.0¬†abrange um vasto conjunto de recomenda√ß√µes, o resumo j√°¬†define bem o que √© a WCAG 2.0;&lt;/p&gt;

&lt;p&gt;&amp;#8220;As Diretrizes de Acessibilidade para Conte√∫do Web (WCAG) 2.0 abrangem um vasto conjunto de recomenda√ß√µes que t√™m como objetivo tornar o conte√∫do Web mais acess√≠vel. O cumprimento destas diretrizes far√° com que o conte√∫do se torne acess√≠vel a um maior n√∫mero de pessoas com incapacidades, incluindo cegueira e baixa vis√£o, surdez e baixa audi√ß√£o, dificuldades de aprendizagem, limita√ß√µes cognitivas, limita√ß√µes de movimentos, incapacidade de fala, fotossensibilidade bem como as que tenham uma combina√ß√£o destas limita√ß√µes. Seguir estas diretrizes far√° tamb√©m com que o conte√∫do Web se torne mais us√°vel aos utilizadores em geral.&amp;#8221;&lt;/p&gt;

&lt;h2 id=&#34;proposta&#34;&gt;Proposta&lt;/h2&gt;

&lt;p&gt;Nesse post irei mostrar um formul√°rio de contato b√°sico, validado pelo W3C e n√≠vel &amp;#8220;AAA&amp;#8221; nas baterias de teste do¬†&lt;a href=&#34;http://www.acessibilidade.gov.pt/&#34;&gt;AccessMonitor&lt;/a&gt;¬†que s√£o baseados nas diretrizes¬†WCAG 2.0, se desejar saber mais sobre o AccessMonitor veja a documenta√ß√£o nesse &lt;a href=&#34;http://www.acessibilidade.gov.pt/accessmonitor/nota_tecnica.html&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;elementos-acess√≠veis&#34;&gt;Elementos¬†acess√≠veis&lt;/h2&gt;

&lt;p&gt;No HTML temos elementos importantes para fazer com que seu formul√°rio de contato tenha o m√≠nimo de acessibilidade poss√≠vel, abaixo alguns deles;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.w3schools.com/tags/tag_label.asp&#34;&gt;label&lt;/a&gt;,¬†&lt;/strong&gt;&lt;strong&gt;&lt;a href=&#34;http://www.w3schools.com/Tags/tag_fieldset.asp&#34;&gt;fieldset&lt;/a&gt;,¬†&lt;/strong&gt;**[Um dos itens indispens√°veis em um site √© o formul√°rio de contato, j√° pensou deixar ele acess√≠vel para todos na web? Na atualidade a acessibilidade vem sendo¬†levada a s√©rio com o avan√ßo das tecnologias web e as supostas padroniza√ß√µes dos navegadores, e a acessibilidade hoje na web √© muito importante, e a chegada do HTML5¬†deixou marca√ß√£o do HTML mais explicativa para usu√°rios acess√≠veis.&lt;/p&gt;

&lt;h2 id=&#34;wcag-2-0-o-que-√©-1&#34;&gt;WCAG 2.0 o que √© ?&lt;/h2&gt;

&lt;p&gt;Quando se fala em diretrizes de acessibilidade ¬†a¬†&lt;a href=&#34;https://www.w3.org/Translations/WCAG20-pt-PT/&#34;&gt;WCAG&lt;/a&gt;¬†que est√° na vers√£o 2.0¬†abrange um vasto conjunto de recomenda√ß√µes, o resumo j√°¬†define bem o que √© a WCAG 2.0;&lt;/p&gt;

&lt;p&gt;&amp;#8220;As Diretrizes de Acessibilidade para Conte√∫do Web (WCAG) 2.0 abrangem um vasto conjunto de recomenda√ß√µes que t√™m como objetivo tornar o conte√∫do Web mais acess√≠vel. O cumprimento destas diretrizes far√° com que o conte√∫do se torne acess√≠vel a um maior n√∫mero de pessoas com incapacidades, incluindo cegueira e baixa vis√£o, surdez e baixa audi√ß√£o, dificuldades de aprendizagem, limita√ß√µes cognitivas, limita√ß√µes de movimentos, incapacidade de fala, fotossensibilidade bem como as que tenham uma combina√ß√£o destas limita√ß√µes. Seguir estas diretrizes far√° tamb√©m com que o conte√∫do Web se torne mais us√°vel aos utilizadores em geral.&amp;#8221;&lt;/p&gt;

&lt;h2 id=&#34;proposta-1&#34;&gt;Proposta&lt;/h2&gt;

&lt;p&gt;Nesse post irei mostrar um formul√°rio de contato b√°sico, validado pelo W3C e n√≠vel &amp;#8220;AAA&amp;#8221; nas baterias de teste do¬†&lt;a href=&#34;http://www.acessibilidade.gov.pt/&#34;&gt;AccessMonitor&lt;/a&gt;¬†que s√£o baseados nas diretrizes¬†WCAG 2.0, se desejar saber mais sobre o AccessMonitor veja a documenta√ß√£o nesse &lt;a href=&#34;http://www.acessibilidade.gov.pt/accessmonitor/nota_tecnica.html&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;elementos-acess√≠veis-1&#34;&gt;Elementos¬†acess√≠veis&lt;/h2&gt;

&lt;p&gt;No HTML temos elementos importantes para fazer com que seu formul√°rio de contato tenha o m√≠nimo de acessibilidade poss√≠vel, abaixo alguns deles;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.w3schools.com/tags/tag_label.asp&#34;&gt;label&lt;/a&gt;,¬†&lt;/strong&gt;&lt;strong&gt;&lt;a href=&#34;http://www.w3schools.com/Tags/tag_fieldset.asp&#34;&gt;fieldset&lt;/a&gt;,¬†&lt;/strong&gt;&lt;strong&gt;]&lt;a href=&#34;http://www.w3schools.com/tags/tag_legend.asp&#34;&gt;6&lt;/a&gt; e¬†&lt;a href=&#34;http://www.w3schools.com/tags/tag_optgroup.asp&#34;&gt;optgroup&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;elemento-label&#34;&gt;Elemento label&lt;/h2&gt;

&lt;p&gt;Esse √© o cara da combina√ß√£o do conjunto de atributos &amp;#8220;for&amp;#8221; e &amp;#8220;id&amp;#8221;, relacionando de forma clara o seu r√≥tulo, indicando ao usu√°rio o elemento de entrada de dados a ser editado, deixar de fazer esse relacionamento entre ¬†&amp;#8220;for&amp;#8221; e &amp;#8220;id&amp;#8221; certamente vai deixar o usu√°rio confuso, e n√£o √© uma coisa dif√≠cil de fazer, veja o exemplo abaixo;&lt;/p&gt;

&lt;pre&gt;&amp;lt;label for=&#34;nome&#34;&amp;gt;Nome&amp;lt;/label&amp;gt;
&amp;lt;input type=&#34;text&#34; id=&#34;nome&#34;&amp;gt;&lt;/pre&gt;

&lt;p&gt;Atualmente n√£o precisa mais envolver a label no input, pois as tecnologias mais modernas j√° procuram por o r√≥tulo na hora da edi√ß√£o, o conjunto de atributos¬†&amp;#8220;for&amp;#8221; e &amp;#8220;id&amp;#8221; pode ser utilizado com todos elementos de formul√°rio, exceto o elemento button.&lt;/p&gt;

&lt;h2 id=&#34;elementos-fieldset-e-legend&#34;&gt;Elementos fieldset e legend&lt;/h2&gt;

&lt;p&gt;O elemento fieldset √© respons√°vel por agrupar itens no formul√°rio que tenham caracter√≠sticas em comum e sempre dentro do elemento form.&lt;/p&gt;

&lt;p&gt;O elemento legend √© utilizado em conjunto com o fieldset e deve estar dentro do mesmo, fazendo dessa forma o melhor ¬†entendimento do usu√°rio e toda vezes que um elemento for anunciado ser√° precedido o elemento legend.&lt;/p&gt;

&lt;pre&gt;&amp;lt;form&amp;gt;
  &amp;lt;fieldset&amp;gt;
    &amp;lt;legend&amp;gt;Formul√°rio de contato&amp;lt;/legend&amp;gt;
  &amp;lt;/fieldset&amp;gt;
&amp;lt;/form&amp;gt;

&lt;/pre&gt;

&lt;h2 id=&#34;elemento-optgroup&#34;&gt;Elemento optgroup&lt;/h2&gt;

&lt;p&gt;O elemento optgroup √© utilizado juntamente com o select, o optgroup √© a mesma ideia do fieldset e legend dando t√≠tulo e agrupando itens do elemento select quando tem necessidade.&lt;/p&gt;

&lt;p&gt;Cada optgroup recebe um &amp;#8220;label&amp;#8221; que ser√° o t√≠tulo do grupo, veja o exemplo:&lt;/p&gt;

&lt;pre&gt;&amp;lt;form&amp;gt;
 &amp;lt;label for=&#34;lista&#34;&amp;gt;Lista&amp;lt;/label&amp;gt;
 &amp;lt;select id=&#34;lista&#34;&amp;gt;
  &amp;lt;optgroup label=&#34;Diretoria&#34;&amp;gt;
   &amp;lt;option&amp;gt;Maria&amp;lt;/option&amp;gt;
   &amp;lt;option&amp;gt;Jos√©&amp;lt;/option&amp;gt;
   &amp;lt;option&amp;gt;Jo√£o&amp;lt;/option&amp;gt;
  &amp;lt;/optgroup&amp;gt;
  &amp;lt;optgroup label=&#34;Comercial&#34;&amp;gt;
   &amp;lt;option&amp;gt;Pedro&amp;lt;/option&amp;gt;
   &amp;lt;option&amp;gt;Antonio&amp;lt;/option&amp;gt;
   &amp;lt;option&amp;gt;Manoel&amp;lt;/option&amp;gt;
  &amp;lt;/optgroup&amp;gt;
 &amp;lt;/select&amp;gt;
&amp;lt;/form&amp;gt;

&lt;/pre&gt;

&lt;p&gt;O elemento optgroup juntamente com o atributo label (Diretoria e Comercial) deixa os elementos mais acess√≠veis e organizados em um select.&lt;/p&gt;

&lt;h2 id=&#34;formul√°rio-n√≠vel-8220-aaa-8221-pelo-accessmonitor-e-validado-pelo-w3c&#34;&gt;Formul√°rio n√≠vel &amp;#8220;AAA&amp;#8221; pelo AccessMonitor e validado pelo W3C&lt;/h2&gt;

&lt;p&gt;Abaixo um formul√°rio simples, com as recomenda√ß√µes minimas de acessibilidade.&lt;/p&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;title&amp;gt;Formul√°rio de contato&amp;lt;/title&amp;gt;
 &amp;lt;meta charset=&#34;UTF-8&#34;&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;a href=&#34;#formulario&#34;&amp;gt;
 Entre em contato por meio de nosso formul√°rio de contato.
 &amp;lt;/a&amp;gt;
 &amp;lt;form method=&#34;post&#34; action=&#34;form.php&#34; id=&#34;formulario&#34;&amp;gt;
 &amp;lt;h1&amp;gt;Formul√°rio de contato&amp;lt;/h1&amp;gt;
 &amp;lt;h2&amp;gt;Entre em contato que teremos o imenso prazer em responder sua mensagem.&amp;lt;/h2&amp;gt;

 &amp;lt;label for=&#34;nome&#34;&amp;gt;Nome&amp;lt;/label&amp;gt;
 &amp;lt;input type=&#34;text&#34; id=&#34;nome&#34;&amp;gt;

 &amp;lt;label for=&#34;email&#34;&amp;gt;E-mail&amp;lt;/label&amp;gt;
 &amp;lt;input type=&#34;email&#34; id=&#34;email&#34;&amp;gt;

 &amp;lt;label class=&#34;label label-primary&#34; for=&#34;telefone&#34;&amp;gt;Telefone&amp;lt;/label&amp;gt;
 &amp;lt;input type=&#34;tel&#34; id=&#34;telefone&#34; class=&#34;form-control&#34; maxlength=&#34;11&#34;&amp;gt;

 &amp;lt;label for=&#34;departamento&#34;&amp;gt;Escolha um departamento&amp;lt;/label&amp;gt; 
 &amp;lt;select id=&#34;departamento&#34;&amp;gt;
 &amp;lt;option&amp;gt;Selecione&amp;lt;/option&amp;gt;
 &amp;lt;option&amp;gt;Atendimento&amp;lt;/option&amp;gt;
 &amp;lt;option&amp;gt;Comercial&amp;lt;/option&amp;gt;
 &amp;lt;option&amp;gt;Elogios&amp;lt;/option&amp;gt;
 &amp;lt;option&amp;gt;Reclama√ß√µes&amp;lt;/option&amp;gt;
 &amp;lt;/select&amp;gt;

 &amp;lt;label for=&#34;mensagem&#34;&amp;gt;Mensagem&amp;lt;/label&amp;gt;
 &amp;lt;textarea id=&#34;mensagem&#34;&amp;gt;&amp;lt;/textarea&amp;gt;
 &amp;lt;input type=&#34;submit&#34; value=&#34;Enviar&#34;&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/pre&gt;

&lt;p&gt;A recomenda√ß√£o da WCAG 2.0 √© que sempre tenha um link e que ele seja o primeiro, em ¬†que ele envie para o conte√∫do principal,¬†por isso o link &amp;#8220;Entre em contato por meio de nosso formul√°rio de contato&amp;#8221;.&lt;/p&gt;

&lt;h2 id=&#34;√∫ltimas-considera√ß√µes&#34;&gt;√öltimas considera√ß√µes&lt;/h2&gt;

&lt;p&gt;Trabalhar em projetos que envolve acessibilidade √© muito mais complexo, sou prova viva disso, ter aten√ß√£o em como voc√™ escreve seu c√≥digo √© primordial.¬†Colocar em mente que escrever um bom c√≥digo √© sin√¥nimo de alcan√ßar o m√°ximo de pessoas poss√≠veis, e as tecnologias est√£o ai cada dia evoluindo mais, vai querer separar algu√©m de um conte√∫do¬†&lt;span style=&#34;line-height: 1.5;&#34;&gt;relevante s√≥ por falta de caprichar nos seus c√≥digos? As recomenda√ß√µes de acessibilidade nos permite disponibilizar o acesso a esses conte√∫dos de forma mais confort√°vel para o usu√°rio.¬†&lt;/span&gt;&lt;span style=&#34;line-height: 1.5;&#34;&gt;Um dos teste mais b√°sicos de acessibilidade √© voc√™ conseguir navegar pelo site usado o TAB, se voc√™ ficar travado em algo ou n√£o consegui chegar no conte√∫do que deseja isso √© ind√≠cio&lt;b&gt;¬†&lt;/b&gt;que¬†&lt;/span&gt;&lt;span style=&#34;line-height: 1.5;&#34;&gt;precisa de melhorias.¬†&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;line-height: 1.5;&#34;&gt;Em v√°rios site de e-commerce n√£o tem a possibilidade de efetuar um fluxo de compra com um leitor de tela, pois etapas&lt;/span&gt;&lt;span style=&#34;line-height: 1.5;&#34;&gt;¬†como¬†&lt;/span&gt;&lt;span style=&#34;line-height: 1.5;&#34;&gt;valida√ß√µes de campos, plugins, ¬†falta de hierarquia de cabe√ßalho deixa a desejar, tonando o conte√∫do inacess√≠vel. Eu acredito em uma web para todos, sei que nas correrias de projetos a acessibilidade √© deixada de lado, mais sempre que poss√≠vel construa tudo pensando em todos.¬†&lt;/span&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Aplicativos Desktop com NW.js ‚Äì Node Webkit ‚Äì Introdu√ß√£o</title>
      <link>https://tableless.github.io/hugo-public/aplicativos-desktop-com-nw-js-node-webkit-introducao/</link>
      <pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/aplicativos-desktop-com-nw-js-node-webkit-introducao/</guid>
      <description>

&lt;h1 id=&#34;este-√©-o-primeiro-artigo-de-uma-s√©rie-que-vou-escrever-sobre-aplica√ß√µes-desktop-usando-tecnologias-web-html-css-javascript-e-webgl&#34;&gt;&lt;em&gt;&lt;strong&gt;Este √© o primeiro artigo de uma s√©rie que vou escrever sobre aplica√ß√µes desktop usando tecnologias web. (HTML, CSS, Javascript e WebGL)&lt;/strong&gt;&lt;/em&gt;&lt;/h1&gt;

&lt;p&gt;O &lt;strong&gt;NW.js&lt;/strong&gt; √© uma aplica√ß√£o em tempo de execu√ß√£o baseado em Chromium e Node.js, com ele √© poss√≠vel desenvolver aplicativos nativos para Windows, Linux e Mac, usando tecnologias web e usufruindo dos pacotes do Node.js.&lt;/p&gt;

&lt;p&gt;Para ter uma ideia do que √© poss√≠vel fazer, visite este link e veja alguns aplicativos desenvolvidos com NW.js -&amp;gt; &lt;a href=&#34;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&#34;&gt;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;NW.js&lt;/strong&gt; √© um projeto criado pela Intel.¬†Outro projeto muito bom e conhecido para desenvolver aplicativos desktop usando tecnologias web √© o &lt;strong&gt;Electron&lt;/strong&gt;, criado pelo GitHub. Segue um link comparativo entre os dois -&amp;gt; &lt;a href=&#34;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&#34;&gt;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nessa s√©rie de artigos, vou explicar como criar um aplicativo desktop, com √≠cone personalizado e empacotado em um √∫nico execut√°vel. No √∫ltimo artigo, vou explicar como fazer uma integra√ß√£o com base de dados local, em tempo real e sem a necessidade de abrir portas ou fazer configura√ß√µes de &lt;em&gt;firewall&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A vers√£o mais atual do NW.js no momento em que eu escrevo este artigo √© a¬†&lt;strong&gt;&lt;em&gt;nwjs-v0.15.3&lt;/em&gt;&lt;/strong&gt;, √© esta que estou usando. Al√©m disso, estou usando Windows como sistema operacional.&lt;/p&gt;

&lt;p&gt;Vamos come√ßar com um &amp;#8220;Ol√° Mundo&amp;#8221;, por√©m, vou explicar alguns recursos de &amp;#8220;Window&amp;#8221; e as configura√ß√µes para iniciar o projeto.&lt;/p&gt;

&lt;p&gt;Primeiro fa√ßa o download do NW.js no site &lt;a href=&#34;http://nwjs.io/&#34;&gt;http://nwjs.io/&lt;/a&gt; &amp;#8211; Para desenvolvimento, baixe a vers√£o SDK &amp;#8211; descompacte os arquivos em uma pasta que seja f√°cil para acessar pelo &lt;em&gt;prompt&lt;/em&gt; de comando¬†&amp;#8211;¬†eu costumo descompactar na pasta _c:\nwjs_&lt;/p&gt;

&lt;p&gt;Para uma aplica√ß√£o b√°sica funcionar, precisamos apenas de dois arquivos, o &lt;em&gt;package.json&lt;/em&gt;, que cont√©m as configura√ß√µes da nossa aplica√ß√£o e o &lt;em&gt;index.html&lt;/em&gt;, que cont√©m o c√≥digo da nossa aplica√ß√£o. Depois vamos adicionar arquivos .js e .css.¬†Neste primeiro artigo, vamos brincar um pouco com o package.json.&lt;/p&gt;

&lt;p&gt;Crie um novo arquivo index.html¬†&amp;#8211;¬†vamos adicionar uma estrutura b√°sica de HTML:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&#34;utf-8&#34;/&amp;gt;
&amp;lt;title&amp;gt;Meu Primeiro Projeto&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Ol√° Mundo.&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Crie um novo arquivo package.json, com o c√≥digo abaixo e salve na mesma pasta do¬†HTML:&lt;/p&gt;

&lt;pre&gt;{
 &#34;name&#34;: &#34;ola-mundo&#34;,
 &#34;main&#34;: &#34;index.html&#34;
}&lt;/pre&gt;

&lt;p&gt;Somente com essas informa√ß√µes no package.json voc√™ j√° pode testar seu &amp;#8220;Ol√° Mundo&amp;#8221;.¬†&amp;#8220;&lt;em&gt;name&lt;/em&gt;&amp;#8221; √© o nome do projeto, e &amp;#8220;&lt;em&gt;main&lt;/em&gt;&amp;#8221; √© o arquivo inicial da aplica√ß√£o, sua &amp;#8220;p√°gina inicial&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Para executar nosso aplicativo, abra o &lt;em&gt;prompt&lt;/em&gt; de comando e v√° at√© a pasta do seu projeto, no meu caso &amp;#8220;c:\projetos\olamundo&amp;#8221;, depois vamos executar o comando para o NW.js executar nosso projeto. Como estou usando o Windows, vou apontar para o nw.exe.¬†No Linux ou no Mac √© diferente, voc√™ pode olhar na documenta√ß√£o. Ent√£o nosso comando ficaria assim:&lt;/p&gt;

&lt;pre&gt;cd /path/to/your/app
/path/to/nw .&lt;/pre&gt;

&lt;p&gt;No meu caso:&lt;/p&gt;

&lt;pre&gt;cd c:\projetos\olamundo
c:\nwjs\nw.exe .&lt;/pre&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-54795 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/06/olamundo01.png&#34; alt=&#34;Tela Ol√° Mundo NW.js&#34; width=&#34;966&#34; height=&#34;535&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;mais-sobre-o-package-json&#34;&gt;Mais sobre o package.json&lt;/h2&gt;

&lt;p&gt;O nosso package.json est√° muito simples, tem apenas um nome e o caminho do arquivo index. Vou explicar um pouco sobre as configura√ß√µes &amp;#8220;window&amp;#8221;, que servem para controlar os bot√µes de fechar, minimizar, informar os tamanhos m√≠nimos e m√°ximos, se a janela pode ser dimensionada e outras configura√ß√µes.&lt;/p&gt;

&lt;p&gt;Abra o seu arquivo package.json e deixe ele como o exemplo abaixo:&lt;/p&gt;

&lt;pre&gt;{
 &#34;name&#34;: &#34;ola-mundo&#34;,
 &#34;main&#34;: &#34;index.html&#34;,
 &#34;version&#34;: &#34;1.0&#34;,
 &#34;description&#34;: &#34;Ol√° Mundo&#34;,
 &#34;window&#34;: {
 &#34;width&#34;: 400,
 &#34;height&#34;: 300,
 &#34;resizable&#34;: false,
 &#34;frame&#34;: true,
 &#34;title&#34;: &#34;Ol√° Mundo&#34;,
 &#34;show&#34;: true,
 &#34;fullscreen&#34;: false,
 &#34;kiosk&#34;: false,
 &#34;icon&#34;: &#34;icon.png&#34;
 }
}
&lt;/pre&gt;

&lt;p&gt;Execute novamente o aplicativo e veja como ficou. Abaixo, explico cada uma das configura√ß√µes usadas.&lt;/p&gt;

&lt;pre&gt;name -&amp;gt; Nome do projeto
main -&amp;gt; Arquivo inicial
version -&amp;gt; Vers√£o
description -&amp;gt; Descri√ß√£o do projeto
window:
 width -&amp;gt; Largura da janela
 height -&amp;gt; Altura da janela
 resizable -&amp;gt; Se o tamanho da janela pode ser alterado ou n√£o
 frame -&amp;gt; Quadro que envolve a aplica√ß√£o com o t√≠tulo, √≠cone, bot√µes de fechar, minimizar e maximizar
 title -&amp;gt; T√≠tulo da janela
 show -&amp;gt; Se estiver como false voc√™ executa o aplicativo e ele fica em modo silencioso, 
  est√° rodando, mas n√£o aparece. Fica apenas como um processo no Windows.
 fullscreen -&amp;gt; executa em tela cheia
 kiosk -&amp;gt; Executa em tela cheia e dificulta a sa√≠da da aplica√ß√£o, normalmente √© usado para exposi√ß√µes.
 icon -&amp;gt; Caminho para o √≠cone (deve estar na mesma pasta do projeto)&lt;/pre&gt;

&lt;p&gt;Voc√™ pode ver mais op√ß√µes e detalhes na documenta√ß√£o: &lt;a href=&#34;http://docs.nwjs.io/en/latest/References/Manifest%20Format/#window-subfields&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://docs.nwjs.io/en/latest/References/Manifest%20Format/#window-subfields&#34;&gt;http://docs.nwjs.io/en/latest/References/Manifest%20Format/#window-subfields&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reposit√≥rio com os fontes do primeiro artigo: &lt;a href=&#34;https://bitbucket.org/jzonta/artigos_nwjs&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://bitbucket.org/jzonta/artigos_nwjs&#34;&gt;https://bitbucket.org/jzonta/artigos_nwjs&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;pr√≥ximos-artigos-8211-aplicativos-desktop-com-nw-js-8211-node-webkit&#34;&gt;Pr√≥ximos artigos &amp;#8211; Aplicativos Desktop com NW.js &amp;#8211; Node Webkit&lt;/h2&gt;

&lt;p&gt;&lt;del&gt;&lt;strong&gt;1¬∫ &amp;#8211; Introdu√ß√£o&lt;/strong&gt;&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Uma breve introdu√ß√£o, fazer um &amp;#8220;Ol√° Mundo&amp;#8221; e aprender um pouco sobre as configura√ß√µes iniciais.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2¬∫ &amp;#8211; Menus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fazer um menu nativo da aplica√ß√£o e um menu HTML, capturar as a√ß√µes do bot√£o de minimizar e alterar para minimizar o aplicativo para o System Try (Aqueles √≠cones pequenos ao lado do rel√≥gio) e vamos adicionar menu de op√ß√µes no System Try.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3¬∫ &amp;#8211; Pacotes Node e Persist√™ncia de dados&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vamos aprender como usar os pacotes do Node.js, vamos instalar um pacote para persistir informa√ß√µes em um banco de dados MySql e tamb√©m em um arquivo local.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4¬∫ &amp;#8211; Preparando para produ√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Como empacotar sua aplica√ß√£o em um execut√°vel e adicionar um √≠cone para o Windows.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5¬∫ &amp;#8211; Integra√ß√£o web com base de dados local&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Como fazer uma integra√ß√£o de uma aplica√ß√£o web com um banco de dados local, atrav√©s de uma api REST, sem a necessidade de abertura de portas ou configura√ß√µes de &lt;em&gt;firewall&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Poste suas d√∫vidas e sugest√µes nos coment√°rios!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introduzindo ‚ÄúRich Cards‚Äù, um novo formato de resultados para Buscas</title>
      <link>https://tableless.github.io/hugo-public/introduzindo-rich-cards-um-novo-formato-de-resultados-para-buscas/</link>
      <pubDate>Mon, 04 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/introduzindo-rich-cards-um-novo-formato-de-resultados-para-buscas/</guid>
      <description>&lt;p&gt;Como uma boa empresa de tecnologia, o Google parece fazer da necessidade de evoluir suas ferramentas uma &amp;#8220;obsess√£o&amp;#8221;. ¬†Quando o assunto √© mobilidade ent√£o, essa quest√£o √© um pouco superior.&lt;/p&gt;

&lt;p&gt;Todo mundo sabe que a maneira de interagir¬†em um resultado de busca depende muito de como as informa√ß√µes est√£o organizadas no topo. Temos uma tend√™ncia em clicar nos primeiros resultados, algo que o o pr√≥prio Google nos educou. Com os &lt;a href=&#34;http://www.rodrigofavaro.com/2015/06/dados-estruturados-melhorando-a-exibicao-do-seu-site-no-google/&#34; target=&#34;_blank&#34;&gt;Dados Estruturados (Rich Snippets)&lt;/a&gt;, temos uma nova forma de obter resultados relevantes, atrav√©s de imagens, vota√ß√£o entre outros meios que certamente influenciar√£o nosso clique. Agora, o Google vai al√©m e lan√ßa o que podemos chamar de uma evolu√ß√£o dos &amp;#8220;Rich Snippets&amp;#8221;, os &amp;#8220;Rich Cards&amp;#8221; (Cart√µes Ricos traduzindo ao p√© da letra).&lt;/p&gt;

&lt;p&gt;&amp;#8220;Rich Cards&amp;#8221; nada mais s√£o do que um novo formato do resultado de uma busca, baseado no sucesso dos Dados Estruturados. Assim como os Dados Estruturados, os &amp;#8220;Rich Cards&amp;#8221; usam a estrutura√ß√£o do &lt;a href=&#34;http://schema.org/&#34; target=&#34;_blank&#34;&gt;schema.org&lt;/a&gt; para exibir conte√∫do em um formato ainda mais envolvente e visual, com o foco em oferecer uma melhor experi√™ncia ao usu√°rio de dispositivos m√≥veis.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-54126&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/05/rich-result-evolution.png&#34; alt=&#34;Evolu√ß√£o do Rech Result&#34; width=&#34;1600&#34; height=&#34;900&#34; /&gt;Evolu√ß√£o da pesquisa de consultas: com ‚Äúrich cards‚Äù, os resultados s√£o apresentados em carross√©is que s√£o f√°ceis de navegar por rolagem esquerda e direita. Carross√©is podem conter todos os cart√µes do mesmo site ou de v√°rios sites.&lt;/p&gt;

&lt;p&gt;Para quem tem seu pr√≥prio site ou quem trabalha gerenciando sites de pessoas/empresas, esta com certeza √© uma nova oportunidade para de destacar nos resultados da pesquisa e atrair mais e melhores usu√°rios para sua p√°gina. Por exemplo, se voc√™ tem um site de &lt;strong&gt;receitas&lt;/strong&gt;, voc√™ pode agora construir uma visualiza√ß√£o mais rica de seu conte√∫do ¬†com uma imagem de destaque para cada prato. Este novo formato visual ajuda os usu√°rios a encontrarem o que eles querem de imediato, sem ter que ficar lendo a descri√ß√£o para ver se aquela √© realmente a receita que estava procurando, e assim garantindo que sua p√°gina de receita sobre bolo de cenoura realmente atraia pessoas interessadas em bolo de cenoura.&lt;/p&gt;

&lt;p&gt;O Google est√° inicialmente mostrando os &amp;#8220;Rich Cards&amp;#8221; para duas categorias: &lt;strong&gt;receitas&lt;/strong&gt; e &lt;strong&gt;filmes&lt;/strong&gt;. Eles ir√£o aparecer neste primeiro momento¬†em resultados de busca m√≥vel em¬†&lt;em&gt;Ingl√™s&lt;/em&gt; para o google.com. √â claro que esse n√£o √© um limitante para come√ßar a estudar o assunto e implementar no seu site, afinal de contas, esse tipo de evolu√ß√£o √© lan√ßada para testes no google.com mas muito em breve dever√° chegar ao Google Brasil, levando em considera√ß√£o que o Brasil √© um dos maiores mercados para o Google.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Por onde come√ßar?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Claro que o Google n√£o ia te deixar &amp;#8220;abandonado&amp;#8221;. Foi¬†constru√≠do¬†um conjunto abrangente de ferramentas e uma completa atualiza√ß√£o da¬†documenta√ß√£o do desenvolvedor para tornar propriet√°rios e desenvolvedores de sites capazes de realizar as altera√ß√µes inicias.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Explore os tipos de &amp;#8220;Rich Cards&amp;#8221; e identifique onde ajustar seu conte√∫do&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Voc√™ pode navegar em uma nova galeria com imagens (screenshots) e amostras de c√≥digo de cada tipo de marca√ß√£o. Clique &lt;a href=&#34;https://developers.google.com/search/docs/guides/search-gallery&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Testar e ajustar sua marca√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Segundo o Google, √© altamente recomend√°vel usar JSON-LD na sua implementa√ß√£o.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Descubra quais &lt;a href=&#34;https://developers.google.com/search/docs/guides/mark-up-content&#34; target=&#34;_blank&#34;&gt;campos s√£o essenciais&lt;/a&gt; ¬†para marcar para que um &amp;#8220;Rich Card&amp;#8221; apare√ßa. Aproveite tamb√©m pois o Google listou campos adicionais que podem melhorar seus &amp;#8220;Rich Cards&amp;#8221;.&lt;/li&gt;
&lt;li&gt;Veja uma pr√©-visualiza√ß√£o na &lt;a href=&#34;https://search.google.com/structured-data/testing-tool/u/0/&#34; target=&#34;_blank&#34;&gt;renovada Ferramenta de Teste de Dados Estruturados&lt;/a&gt; de como os &amp;#8220;Rich Cards&amp;#8221; podem aparecer nas buscas (atualmente dispon√≠vel para receitas e filmes).&lt;/li&gt;
&lt;li&gt;Use a Ferramenta de Teste para ver erros e ajustar sua marca√ß√£o em tempo real.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-54127 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/05/structured-data-testing-tool.png&#34; alt=&#34;ferramenta de teste de dados estruturados&#34; width=&#34;1265&#34; height=&#34;782&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mantenha o controle na cobertura e depura√ß√£o de erros&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Veja como muitos dos seus &amp;#8220;Rich Cards&amp;#8221; s√£o indexados no novo¬†&lt;a href=&#34;https://www.google.com/webmasters/tools/rich-cards&#34; target=&#34;_blank&#34;&gt;relat√≥rio de Pesquisa sobre &amp;#8220;Rich Cards&amp;#8221;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-54125 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/05/rich-card-errors.png&#34; alt=&#34;Erros de Rich Cards&#34; width=&#34;926&#34; height=&#34;524&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mantenha-se atento para os erros (tamb√©m listados no relat√≥rio de &amp;#8220;Rich Cards&amp;#8221;). Cada exemplo de erro √© &amp;#8220;linkado&amp;#8221; diretamente para a ferramenta de Teste de Dados Estruturados para que voc√™ possa test√°-lo.&lt;/li&gt;
&lt;li&gt;Lembre-se de¬†&lt;a href=&#34;https://support.google.com/sites/answer/100283&#34; target=&#34;_blank&#34;&gt;enviar um sitemap (mapa do site)&lt;/a&gt; para ajudar o Google a descobrir todo o seu conte√∫do.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Encontre oportunidades de crescimento&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No relat√≥rio de &amp;#8220;Rich Cards&amp;#8221;, voc√™ ver√° que eles podem ser melhorados/refor√ßados pela marca√ß√£o de campos adicionais.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-54124 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/05/enhanceable-rich-cards.png&#34; alt=&#34;enhanceable rich cards&#34; width=&#34;912&#34; height=&#34;575&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monitor de desempenho&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Um novo filtro &amp;#8220;Rich Results&amp;#8221; no Analytics (atualmente em beta fechado) ir√° ajud√°-lo a controlar como seus &amp;#8220;Rich Cards&amp;#8221; e &amp;#8220;Rich Snippets&amp;#8221; est√£o trabalhando nas buscas. Voc√™ ser√° capaz de ver os cliques e impress√µes para ambos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Perguntas e Respostas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P&lt;/strong&gt;: Posso manter meus &amp;#8220;Rich Snippets&amp;#8221; existentes?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt;: Sim, voc√™ pode! Voc√™ ser√° sempre informado pelo Google como o rico ecossistema de resultado evolui.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P&lt;/strong&gt;: E sobre o relat√≥rio de Dados Estruturados no¬†&lt;em&gt;Search Console&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt;: O relat√≥rio de Dados Estruturados continuar√° a mostrar apenas as &lt;a href=&#34;https://support.google.com/webmasters/answer/2650907&#34; target=&#34;_blank&#34;&gt;entidades de n√≠vel superior&lt;/a&gt; para os &amp;#8220;Rich Snippts&amp;#8221; existentes (produto, receita, review, eventos, apps, v√≠deos, not√≠cias) e para quaisquer novas categorias (por exemplo, filmes). O Google pretende migrar todos os erros do relat√≥rio de Dados Estruturados no relat√≥rio &amp;#8220;Rich Card&amp;#8221;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P&lt;/strong&gt;: E se eu usar de forma errada a marca√ß√£o?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt;: As orienta√ß√µes t√©cnicas e de qualidade ser√£o aplicadas para &amp;#8220;rich cards&amp;#8221; assim como s√£o para &amp;#8220;rich snippets&amp;#8221;. O Google ir√° aplic√°-las como antes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclus√µes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Este √© um servi√ßo que demanda tempo e com certeza poucas pessoas est√£o interessadas e com disposi√ß√£o para realiza-lo. Claro que n√£o preciso nem dizer que quem o fizer, ter√° seu site em destaque de forma &amp;#8220;gratuita&amp;#8221; e poder√° fazer disso novos clientes, novas vendas e muito mais acessos ao seu website.&lt;/p&gt;

&lt;p&gt;Para saber mais sobre &amp;#8220;rich cards&amp;#8221;, veja como foi a &lt;a href=&#34;https://events.google.com/io2016/schedule?sid=8f9c1403-0cef-e511-a517-00155d5066d7#day2/8f9c1403-0cef-e511-a517-00155d5066d7&#34; target=&#34;_blank&#34;&gt;sess√£o do Google I/O 2016&lt;/a&gt; que tratou sobre pesquisa neste ecossistema m√≥vel. N√£o esque√ßa tamb√©m de ver a &lt;a href=&#34;https://developers.google.com/search/docs/guides/search-features&#34; target=&#34;_blank&#34;&gt;Documenta√ß√£o do Desenvolvedor.&lt;/a&gt;¬† Se tiver mais perguntas, poder√° encontrar mais respostas na sess√£o dedicada de dados estruturados no &lt;a href=&#34;https://productforums.google.com/forum/#!categories/webmasters/structured-data&#34; target=&#34;_blank&#34;&gt;f√≥rum do Google&lt;/a&gt;, no &lt;a href=&#34;https://twitter.com/googlewmc&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt; ou no &lt;a href=&#34;https://plus.google.com/+GoogleWebmasters/&#34; target=&#34;_blank&#34;&gt;Google+&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Qualquer d√∫vida ou informa√ß√µes adicionais, podem me enviar um e-mail (rodrigomfavaro@gmail.com). Ser√° um prazer discutir esses assuntos com voc√™s. At√© a pr√≥xima.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p style=&#34;font-size: 11px&#34;&gt;
  Fonte: &lt;a href=&#34;https://webmasters.googleblog.com/2016/05/introducing-rich-cards.html?utm_source=feedburner&amp;utm_medium=email&amp;utm_campaign=Feed:+blogspot/amDG+(Official+Google+Webmaster+Central+Blog)&#34; target=&#34;_blank&#34;&gt;Google Webmaster Central Blog&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando facebook reactions com css</title>
      <link>https://tableless.github.io/hugo-public/criando-facebook-reactions-com-css/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-facebook-reactions-com-css/</guid>
      <description>

&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;

&lt;p&gt;No dia 24 de fevereiro de 2016, o Facebook liberou seus novos bot√µes de curtir, chamado de &amp;#8220;Facebook Reactions&amp;#8221;, a fun√ß√£o foi liberada para todos os usu√°rios, j√° que estava em fase de testes em alguns pa√≠ses.&lt;/p&gt;

&lt;p&gt;S√£o eles: Curtir, Amei, Haha, Uau, Triste, Grr.&lt;/p&gt;

&lt;p&gt;Essa novidade √© uma √≥tima maneira de saber como seus contatos reagem ao que voc√™ compartilha na rede social.&lt;/p&gt;

&lt;p&gt;Em 2014 o Facebook registrou a patente que previa esses bot√µes com sentimentos, &lt;a href=&#34;http://thenextweb.com/facebook/2015/09/18/facebook-patent-reveals-what-its-empathy-button-might-look-like/&#34; target=&#34;_blank&#34;&gt;leia mais detalhes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Como sou apaixonado por CSS, resolvi criar essas micro intera√ß√µes ao passar o mouse sobre o elemento, e tamb√©m caso use o teclado.&lt;/p&gt;

&lt;p&gt;Cheguei a olhar como o Facebook criou aquelas anima√ß√µes, e resolvi fazer algo mais simples usando a propriedade translate e n√£o animation conforme eles usaram no deles.&lt;/p&gt;

&lt;h2 id=&#34;veja-o-html&#34;&gt;Veja o HTML&lt;/h2&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;box&#34;&amp;gt;
  &amp;lt;input type=&#34;checkbox&#34; id=&#34;like&#34; class=&#34;field-reactions&#34;&amp;gt;
  &amp;lt;span class=&#34;text-desc&#34;&amp;gt;Press space and after tab key to navigation&amp;lt;/span&amp;gt;
  &amp;lt;label for=&#34;like&#34; class=&#34;label-reactions&#34;&amp;gt;Like&amp;lt;/label&amp;gt;
  &amp;lt;div class=&#34;toolbox&#34;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;label class=&#34;overlay&#34; for=&#34;like&#34;&amp;gt;&amp;lt;/label&amp;gt;
  &amp;lt;button class=&#34;reaction-like&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Like&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
  &amp;lt;button class=&#34;reaction-love&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Love&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
  &amp;lt;button class=&#34;reaction-haha&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Haha&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button class=&#34;reaction-wow&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Wow&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button class=&#34;reaction-sad&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Sad&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button class=&#34;reaction-angry&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Angry&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;h2 id=&#34;o-html&#34;&gt;o HTML&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Linha 1:&lt;/strong&gt; &lt;em&gt;√°rea geral do elemento que recebe o hover ¬†e com isso inicia as intera√ß√µes utilizando o¬†mouse.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 2:&lt;/strong&gt; &lt;em&gt;input checkbox utilizado pra iniciar as intera√ß√µes ao ser checado via mouse ou teclado.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 3&lt;/strong&gt;: &lt;em&gt;mensagem exibida pro usu√°rio assim que ele navegar com o teclado e o input da linha 2 receber o foco.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 4:&lt;/strong&gt; &lt;em&gt;elemento que recebe o background do like e tamb√©m ao ser clicado faz o change do input checkbox e iniciando as intera√ß√µes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 5:&lt;/strong&gt; &lt;em&gt;caixa branca com borda arredondada que tem uma anima√ß√£o diferente dos reactions, por isso ele¬†n√£o √© pai dos elementos.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 6:&lt;/strong&gt; &lt;em&gt;overlay sem cor alguma que serve pra fechar as¬†intera√ß√µes, caso o usu√°rio clique na √°rea fora do box.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 7 a 12:&lt;/strong&gt; &lt;em&gt;reactions do Facebook que possui uma anima√ß√£o ao receber o :hover ou :focus. ¬†Adicionei em cada um a propriedade transition-delay com diferen√ßa de 0.03s entre eles&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;o-css&#34;&gt;O CSS&lt;/h2&gt;

&lt;p&gt;Para exibir os Reactions atrav√©s do mouse, utilizei o :hover do CSS na classe .box , que √© o pai geral dos elementos.&lt;/p&gt;

&lt;p&gt;Para exibir via teclado, ou click do mouse, existe um input[type=&amp;#8221;checked&amp;#8221;], que manipula seus irm√£os (os Reactions e o background branco com borda arredondada).&lt;/p&gt;

&lt;p&gt;O elemento branco com borda arredondada, mesmo que visualmente ele esteja atr√°s como background dos Reactions, no html ele √© irm√£o, com isso foi feito uma outra anima√ß√£o espec√≠fica pra ele, algo bem simples, apenas dando um show.&lt;/p&gt;

&lt;h4 id=&#34;os-reactions&#34;&gt;Os Reactions&lt;/h4&gt;

&lt;p&gt;Conforme se v√™ abaixo, √© chamado o sprite dos Reactions e seus elementos de exibi√ß√£o (width, height, position, top, etc). Os reactions inicia com opacidade, 0 scale 10%, e o transform-origin. Lembrando que eles ser√£o exibidos quando o elemento pai (.box) receber o hover do mouse e/ou quando o input for checado.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;[class*=&#34;reaction-&#34;] {
border: none;
background-image: url(https://fbstatic-a.akamaihd.net/rsrc.php/v2/yh/r/sqhTN9lgaYm.png);
background-color: transparent;
display: block;
cursor: pointer;
height: 48px;
position: absolute;
width: 48px;
z-index: 11;
top: -28;
transform-origin: 50% 100%;
transform: scale(0.1);
transition: all 0.3s;
outline: none;
will-change: transform;
opacity: 0;
}
&lt;/pre&gt;

&lt;h4 id=&#34;animando&#34;&gt;Animando&lt;/h4&gt;

&lt;p&gt;Como temos aquele input[type=&amp;#8221;checked], citado anteriormente, atrav√©s do CSS, podemos usar o :hover, e o :checked desse input e gerar nossas intera√ß√µes mais f√°ceis em seus irm√£os, ou seja, manipulado a opacidade e o scale dos Reactions, ao passar o mouse, ou clicar no like, ou navegar com o teclado checando o input escondido.&lt;/p&gt;

&lt;p&gt;Se voc√™s repararem existe uma diferen√ßa de anima√ß√£o entre o primeiro Reactions e o √∫ltimo e isso foi resolvido bem simples, aplicando um delay pra cada um. (veja abaixo)&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.box:hover .reaction-love {
 transition-delay: 0.03s;
}
.box:hover .reaction-haha {
 transition-delay: 0.09s;
}
.box:hover .reaction-wow {
 transition-delay: 0.12s;
}
.box:hover .reaction-sad {
 transition-delay: 0.15s;
}
.box:hover .reaction-angry {
 transition-delay: 0.18s;
}&lt;/pre&gt;

&lt;p&gt;Pra finalizar,¬†existe¬†um outro comportamento aplicado em cada Reactions que exibe a¬†legenda (inicia com opacidade 0), e muda no :hover e o :focus de¬†cada Reaction para 1 na opacidade.&lt;/p&gt;

&lt;p&gt;Inicialmemte eles est√£o escondidos e pequenos e ao passar o mouse ou receber o foco, s√£o exibidos.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.box:hover [class*=&#34;reaction-&#34;]:hover .legend-reaction, 
.box:hover [class*=&#34;reaction-&#34;]:focus .legend-reaction {
 opacity: 1;
}&lt;/pre&gt;

&lt;h4 id=&#34;b√¥nus&#34;&gt;B√¥nus&lt;/h4&gt;

&lt;p&gt;A propriedade ¬†will-change ¬†otimiza anima√ß√µes, permitindo que o navegador sabe quais propriedades e elementos est√£o prestes a ser manipulados, aumentando potencialmente o desempenho dessa opera√ß√£o espec√≠fica.&lt;/p&gt;

&lt;p&gt;O will-change √© uma recomenta√ß√£o do W3C, desde dezembro de 2015, e seu suporte aos navegadores atuais s√£o bons, segundo o &lt;a href=&#34;http://caniuse.com/#search=will-change&#34; target=&#34;_blank&#34;&gt;caninuse&lt;/a&gt; somente os IEs e o Edge n√£o d√£o suporte atualmente.&lt;/p&gt;

&lt;p&gt;Para saber mais sobre will change &lt;a href=&#34;https://www.w3.org/TR/css-will-change-1/&#34; target=&#34;_blank&#34;&gt;veja a documenta√ß√£o do W3C&lt;/a&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;[class*=&#34;reaction-&#34;] {
¬† transform-origin: 50% 100%;
¬† transform: scale(0.1);
¬† transition: all 0.3s;
¬† will-change: transform, opacity;
}&lt;/pre&gt;

&lt;h2 id=&#34;em-resumo&#34;&gt;Em resumo&lt;/h2&gt;

&lt;p&gt;O grande segredo ent√£o seria conhecer algumas propriedades de anima√ß√£o como, translate, transform, opacity, visibility, e lembrar que podemos manipular elementos irm√£os com :checked ou :hover do pai e manipular seus elementos filhos.&lt;/p&gt;

&lt;h2 id=&#34;veja-o-demo-codepen&#34;&gt;Veja o demo {.codepen}&lt;/h2&gt;

&lt;p class=&#34;codepen&#34;&gt;
  See the Pen &lt;a href=&#34;http://codepen.io/deividmarques/pen/wGvbwY/&#34;&gt;wGvbwY&lt;/a&gt; by Deivid Marques (&lt;a href=&#34;http://codepen.io/deividmarques&#34;&gt;@deividmarques&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;

&lt;h2 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;Inicialmente criei as intera√ß√µes acontecendo apenas no click do elemento, por√©m no resultado final mudei para o hover do mouse, e tamb√©m deixei funcionando ao usar a tecla TAB, sendo foi poss√≠vel navegar pelos &amp;#8220;Reactions&amp;#8221; com o teclado tamb√©m.&lt;/p&gt;

&lt;p&gt;Utilizei HTML e SASS, claro que daria pra fazer de outras maneiras, escrever menos c√≥digos, at√© mesmo usando fun√ß√µes¬†do sass em alguns lugares, mas isso ficar√° pra pr√≥xima vers√£o.&lt;/p&gt;

&lt;p&gt;O intuito de criar esse pequeno exemplo foi me divertir e tamb√©m em mostrar os poderes que o CSS t√™m ao se criar essas micro intera√ß√µes.&lt;/p&gt;

&lt;div style=&#34;overflow: hidden&#34;&gt;
  &lt;p&gt;
    &lt;a style=&#34;float: left;margin: 0 15px 15px 0&#34; href=&#34;http://deividmarques.github.io/facebook-reactions-css/&#34;&gt;&lt;img class=&#34;alignleft size-full wp-image-53344&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/02/print-cel.png&#34; alt=&#34;facebook reactions com css by Deivid Marques&#34; width=&#34;300&#34; height=&#34;533&#34; /&gt;&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    O resultado por ser &lt;a href=&#34;http://deividmarques.github.io/facebook-reactions-css/&#34; target=&#34;_blank&#34;&gt;conferido aqui&lt;/a&gt;&lt;br /&gt; Gostou? D√™ um click nas estrelinhas do projeto¬†l√° no¬†&lt;a href=&#34;https://github.com/deividmarques/facebook-reactions-css&#34; target=&#34;_blank&#34;&gt;github&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Criando seu pr√≥prio servidor HTTP do zero (ou quase) ‚Äì Parte Final</title>
      <link>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-final/</link>
      <pubDate>Tue, 27 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-final/</guid>
      <description>

&lt;p&gt;Os servidores HTTP s√£o parte fundamental da Web como conhecemos, sendo respons√°veis por fornecer todo o conte√∫do que acessamos atrav√©s de nossos navegadores. Durante esse tutorial, entenderemos como funciona a comunica√ß√£o entre o navegador e o servidor e como a informa√ß√£o √© entregue ao usu√°rio.&lt;/p&gt;

&lt;p&gt;Caso n√£o tenha acompanhado os √∫ltimos posts, recomendo que leia as Partes &lt;a href=&#34;http://tableless.com.br/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-i/&#34;&gt;um&lt;/a&gt;, &lt;a href=&#34;http://tableless.com.br/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-ii/&#34;&gt;dois&lt;/a&gt; e &lt;a href=&#34;http://tableless.com.br/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-iii/&#34;&gt;tr√™s&lt;/a&gt; antes de prosseguir a leitura deste post.&lt;/p&gt;

&lt;p&gt;Essa √© a √∫ltima parte do tutorial, mas antes de prosseguir vamos recapitular o que vimos at√© agora ent√£o: N√≥s conhecemos o protocolo HTTP/1.1, qual o padr√£o de requisi√ß√£o e resposta, entendemos um pouco de &lt;em&gt;sockets&lt;/em&gt; e por fim montamos um mini servidor que recebe requisi√ß√µes HTTP, e devolve a p√°gina solicitada.&lt;/p&gt;

&lt;p&gt;√â claro que nosso servidor n√£o √© perfeito, al√©m da fun√ß√£o &lt;em&gt;main&lt;/em&gt; ter ficado gigante, nosso servidor s√≥ responde a uma requisi√ß√£o¬†e para! O ideal √© que o servidor permane√ßa em execu√ß√£o para receber novas requisi√ß√µes e tamb√©m¬†possa receber¬†v√°rias requisi√ß√µes simult√¢neas, afinal de contas √© para isso que um servidor web serve =D&lt;/p&gt;

&lt;h2 id=&#34;organizando-o-c√≥digo&#34;&gt;Organizando o c√≥digo&lt;/h2&gt;

&lt;p&gt;Pra ficar simples, vamos separar a requisi√ß√£o da resposta em duas classes diferentes que vou chamar de RequisicaoHTTP¬†e¬†RespostaHTTP&lt;/p&gt;

&lt;p&gt;RequisicaoHTTP.java&lt;/p&gt;

&lt;pre&gt;import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

public class RequisicaoHTTP {

    private String protocolo;
    private String recurso;
    private String metodo;
    private boolean manterViva = true;
    private long tempoLimite = 3000;
    private Map&amp;lt;String, List&amp;gt; cabecalhos;

    public static RequisicaoHTTP lerRequisicao(InputStream entrada) throws IOException {
        RequisicaoHTTP requisicao = new RequisicaoHTTP();
        BufferedReader buffer = new BufferedReader(new InputStreamReader(entrada));
        System.out.println(&#34;Requisi√ß√£o: &#34;);
        /* L√™ a primeira linha
         contem as informa√ßoes da requisi√ß√£o
         */
        String linhaRequisicao = buffer.readLine();
        //quebra a string pelo espa√ßo em branco
        String[] dadosReq = linhaRequisicao.split(&#34; &#34;);
        //pega o metodo
        requisicao.setMetodo(dadosReq[0]);
        //paga o caminho do arquivo
        requisicao.setRecurso(dadosReq[1]);
        //pega o protocolo
        requisicao.setProtocolo(dadosReq[2]);
        String dadosHeader = buffer.readLine();
        //Enquanto a linha nao for nula e nao for vazia
        while (dadosHeader != null &amp;&amp; !dadosHeader.isEmpty()) {
            System.out.println(dadosHeader);
            String[] linhaCabecalho = dadosHeader.split(&#34;:&#34;);
            requisicao.setCabecalho(linhaCabecalho[0], linhaCabecalho[1].trim().split(&#34;,&#34;));
            dadosHeader = buffer.readLine();
        }
        //se existir a chave Connection no cabe√ßalho
        if (requisicao.getCabecalhos().containsKey(&#34;Connection&#34;)) {
            //seta o manterviva a conexao se o connection for keep-alive
            requisicao.setManterViva(requisicao.getCabecalhos().get(&#34;Connection&#34;).get(0).equals(&#34;keep-alive&#34;));
        }
        return requisicao;
    }

    public void setCabecalho(String chave, String... valores) {
        if (cabecalhos == null) {
            cabecalhos = new TreeMap&amp;lt;&amp;gt;();
        }
        cabecalhos.put(chave, Arrays.asList(valores));
    }

    //getters e setters v√£o aqui
}
&lt;/pre&gt;

&lt;p&gt;Veja que simplesmente copiei a parte onde liamos a requisi√ß√£o e imprim√≠amos na tela, dentro de um m√©todo est√°tico lerRequisicao() que retorna um objeto RequisicaoHTTP.¬†Perceba ainda que esse m√©todo recebe o InputStream de onde iremos ler a requisi√ß√£o como par√¢metro. Al√©m do mais iremos colocar¬†os dados do cabe√ßalho em um Mapa&lt;chave,valor&gt; para facilitar o manuseio desses dados posteriormente caso seja necess√°rio.&lt;/p&gt;

&lt;p&gt;At√© o momento os √∫nicos dados que utiliz√°vamos da requisi√ß√£o era a primeira linha que cont√©m o caminho do arquivo, a partir de agora vamos usar o Connection (se existir) para saber se manteremos a conex√£o viva ou n√£o, veja que h√° uma propriedade tempoLimite que por padr√£o √© 3000 milissegundos (3 segundos), que vamos utilizar para controlar quanto tempo uma conex√£o deve permanecer ativa. O resto √© s√≥¬†voc√™ implementar (os m√©todos &lt;em&gt;getters&lt;/em&gt; e &lt;em&gt;setters&lt;/em&gt; eu omiti).&lt;/p&gt;

&lt;p&gt;RespostaHTTP.java&lt;/p&gt;

&lt;pre&gt;import java.io.IOException;
import java.io.OutputStream;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

public class RespostaHTTP {

    private String protocolo;
    private int codigoResposta;
    private String mensagem;
    private byte[] conteudoResposta;
    private Map&amp;lt;String, List&amp;gt; cabecalhos;
    private OutputStream saida;

    public RespostaHTTP() {

    }

    public RespostaHTTP(String protocolo, int codigoResposta, String mensagem) {
        this.protocolo = protocolo;
        this.codigoResposta = codigoResposta;
        this.mensagem = mensagem;
    }

    /**
     * Envia os dados da resposta ao cliente.
     *
     * @throws IOException
     */
    public void enviar() throws IOException {
        //escreve o headers em bytes
        saida.write(montaCabecalho());
        //escreve o conteudo em bytes
        saida.write(conteudoResposta);
        //encerra a resposta
        saida.flush();
    }

    /**
     * Insere um item de cabe√ßalho no mapa
     *
     * @param chave
     * @param valores lista com um ou mais valores para esta chave
     */
    public void setCabecalho(String chave, String... valores) {
        if (cabecalhos == null) {
            cabecalhos = new TreeMap&amp;lt;&amp;gt;();
        }
        cabecalhos.put(chave, Arrays.asList(valores));
    }

    /**
     * pega o tamanho da resposta em bytes
     *
     * @return retorna o valor em bytes do tamanho do conteudo da resposta
     * convertido em string
     */
    public String getTamanhoResposta() {
        return getConteudoResposta().length + &#34;&#34;;
    }

    /**
     * converte o cabecalho em string.
     *
     * @return retorna o cabecalho em bytes
     */
    private byte[] montaCabecalho() {
        return this.toString().getBytes();
    }

    @Override
    public String toString() {
        StringBuilder str = new StringBuilder();
        str.append(protocolo).append(&#34; &#34;).append(codigoResposta).append(&#34; &#34;).append(mensagem).append(&#34;\r\n&#34;);
        for (Map.Entry&amp;lt;String, List&amp;gt; entry : cabecalhos.entrySet()) {
            str.append(entry.getKey());
            String stringCorrigida = Arrays.toString(entry.getValue().toArray()).replace(&#34;[&#34;, &#34;&#34;).replace(&#34;]&#34;, &#34;&#34;);
            str.append(&#34;: &#34;).append(stringCorrigida).append(&#34;\r\n&#34;);
        }
        str.append(&#34;\r\n&#34;);
        return str.toString();
    }
}
&lt;/pre&gt;

&lt;p&gt;Veja que para a resposta utilizamos o mesmo conceito, estamos montando o cabe√ßalho na requisi√ß√£o em um Mapa&lt;chave, valor&gt;, criei tamb√©m outros m√©todos para auxiliar na gera√ß√£o dos dados pertinentes ao cabe√ßalho, e sobrescrevi o m√©todo toString() para converter o mapa no formato padr√£o da resposta HTTP, e por fim, o m√©todo enviar para enviar a requisi√ß√£o ao servidor.&lt;/p&gt;

&lt;p&gt;Servidor.java&lt;/p&gt;

&lt;pre&gt;import java.io.File;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.nio.file.Files;
import java.util.Date;

public class Servidor {

    public static void main(String[] args) throws IOException {
        /* cria um socket &#34;servidor&#34; associado a porta 8000
         j√° aguardando conex√µes
         */
        ServerSocket servidor = new ServerSocket(8000);
        //aceita a primeita conexao que vier
        Socket socket = servidor.accept();
        //verifica se esta conectado
        if (socket.isConnected()) {
            //imprime na tela o IP do cliente
            System.out.println(socket.getInetAddress());
            //cria um BufferedReader a partir do InputStream do cliente

            RequisicaoHTTP requisicao = RequisicaoHTTP.lerRequisicao(socket.getInputStream());

            //se o caminho foi igual a / entao deve pegar o /index.html
            if (requisicao.getRecurso().equals(&#34;/&#34;)) {
                requisicao.setRecurso(&#34;index.html&#34;);
            }
            //abre o arquivo pelo caminho
            File arquivo = new File(requisicao.getRecurso().replaceFirst(&#34;/&#34;, &#34;&#34;));

            RespostaHTTP resposta;

            //se o arquivo existir ent√£o criamos a reposta de sucesso, com status 200
            if (arquivo.exists()) {
                resposta = new RespostaHTTP(requisicao.getProtocolo(), 200, &#34;OK&#34;);
            } else { 
                //se o arquivo n√£o existe ent√£o criamos a reposta de erro, com status 404
                resposta = new RespostaHTTP(requisicao.getProtocolo(), 404, &#34;Not Found&#34;);
            }
            //l√™ todo o conte√∫do do arquivo para bytes e gera o conteudo de resposta
            resposta.setConteudoResposta(Files.readAllBytes(arquivo.toPath()));
            //converte o formato para o GMT espeficicado pelo protocolo HTTP
            String dataFormatada = Util.formatarDataGMT(new Date());
            //cabe√ßalho padr√£o da resposta HTTP/1.1
            resposta.setCabecalho(&#34;Location&#34;, &#34;http://localhost:8000/&#34;);
            resposta.setCabecalho(&#34;Date&#34;, dataFormatada);
            resposta.setCabecalho(&#34;Server&#34;, &#34;MeuServidor/1.0&#34;);
            resposta.setCabecalho(&#34;Content-Type&#34;, &#34;text/html&#34;);
            resposta.setCabecalho(&#34;Content-Length&#34;,resposta.getTamanhoResposta());
            //cria o canal de resposta utilizando o outputStream
            resposta.setSaida(socket.getOutputStream());
            resposta.enviar();

        }
    }
}

&lt;/pre&gt;

&lt;p&gt;Agora o c√≥digo do nosso servidor est√° pequeno mas ainda n√£o √© o suficiente¬†&amp;#8211;¬†continua recebendo uma requisi√ß√£o e respondendo apenas uma vez. Vamos ver¬†mais um conceito:&lt;/p&gt;

&lt;h2 id=&#34;threads&#34;&gt;Threads&lt;/h2&gt;

&lt;p&gt;As &lt;em&gt;threads&lt;/em&gt;, de maneira geral, s√£o segmentos de c√≥digo que s√£o executados &amp;#8220;paralelamente&amp;#8221; (ou pelo menos quase) dentro de um mesmo programa. Para exemplificar melhor, pense nisso: imagine que ao abrir um software de grandes propor√ß√µes, ele tenha que carregar todas as bibliotecas necess√°rias, mas ao mesmo tempo tem que mostrar ao usu√°rio o progresso do carregamento.¬†A ideia que temos √© que esses dois trechos de c√≥digo s√£o executados paralelamente.¬†Isso √© poss√≠vel gra√ßas √†s _threads._¬†Neste exemplo, temos duas &lt;em&gt;threads&lt;/em&gt; executando: uma que carrega as bibliotecas e outra que mostra o progresso para o usu√°rio. Dentro de um programa, pode-se ter quantas threads quisermos, e enquanto o programa estiver executando, essas &lt;em&gt;threads&lt;/em&gt; podem ser criadas, executadas, terminadas, permitir que novas &lt;em&gt;threads&lt;/em&gt; e outros. Quem faz esse controle √© a m√°quina virtual (JVM).&lt;/p&gt;

&lt;p&gt;Olha que legal, um servidor recebe v√°rias conex√µes simult√¢neas, onde por essas conex√µes passar√£o as requisi√ß√µes. Praticamente, todas essas requisi√ß√µes s√£o processadas da mesma maneira, logo, para cada conex√£o que esse servidor recebe, ele cria uma nova &lt;em&gt;thread&lt;/em&gt;, permitindo tratar as requisi√ß√µes de um cliente.¬†Veja s√≥, se temos 5 computadores solicitando uma p√°gina, ent√£o teremos 5 threads processando essas requisi√ß√µes, e por a√≠ vai.&lt;/p&gt;

&lt;p&gt;Agora fica f√°cil analisar qual segmento do c√≥digo queremos executar paralelamente.¬†A¬†partir desse segmento iremos montar uma estrutura de Thread, da seguinte maneira:&lt;/p&gt;

&lt;p&gt;ThreadConexao.java&lt;/p&gt;

&lt;pre&gt;import java.io.File;
import java.io.IOException;
import java.net.Socket;
import java.net.SocketTimeoutException;
import java.nio.file.Files;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

public class ThreadConexao implements Runnable {

    private final Socket socket;
    private boolean conectado;

    public ThreadConexao(Socket socket) {
        this.socket = socket;
    }

    @Override
    public void run() {
        conectado = true;
        //imprime na tela o IP do cliente
        System.out.println(socket.getInetAddress());
        while (conectado) {
            try {
                //cria uma requisicao a partir do InputStream do cliente
                RequisicaoHTTP requisicao = RequisicaoHTTP.lerRequisicao(socket.getInputStream());
                //se a conexao esta marcada para se mantar viva entao seta keepalive e o timeout
                if (requisicao.isManterViva()) {
                    socket.setKeepAlive(true);
                    socket.setSoTimeout(requisicao.getTempoLimite());
                } else {
                    //se nao seta um valor menor suficiente para uma requisicao
                    socket.setSoTimeout(300);
                }

                //se o caminho foi igual a / entao deve pegar o /index.html
                if (requisicao.getRecurso().equals(&#34;/&#34;)) {
                    requisicao.setRecurso(&#34;index.html&#34;);
                }
                //abre o arquivo pelo caminho
                File arquivo = new File(requisicao.getRecurso().replaceFirst(&#34;/&#34;, &#34;&#34;));

                RespostaHTTP resposta;

                //se o arquivo existir ent√£o criamos a reposta de sucesso, com status 200
                if (arquivo.exists()) {
                    resposta = new RespostaHTTP(requisicao.getProtocolo(), 200, &#34;OK&#34;);
                } else {
                    //se o arquivo n√£o existe ent√£o criamos a reposta de erro, com status 404
                    resposta = new RespostaHTTP(requisicao.getProtocolo(), 404, &#34;Not Found&#34;);
                    arquivo = new File(&#34;404.html&#34;);
                }
                //l√™ todo o conte√∫do do arquivo para bytes e gera o conteudo de resposta
                resposta.setConteudoResposta(Files.readAllBytes(arquivo.toPath()));
                //converte o formato para o GMT espeficicado pelo protocolo HTTP
                String dataFormatada = Util.formatarDataGMT(new Date());
                //cabe√ßalho padr√£o da resposta HTTP/1.1
                resposta.setCabecalho(&#34;Location&#34;, &#34;http://localhost:8000/&#34;);
                resposta.setCabecalho(&#34;Date&#34;, dataFormatada);
                resposta.setCabecalho(&#34;Server&#34;, &#34;MeuServidor/1.0&#34;);
                resposta.setCabecalho(&#34;Content-Type&#34;, &#34;text/html&#34;);
                resposta.setCabecalho(&#34;Content-Length&#34;, resposta.getTamanhoResposta());
                //cria o canal de resposta utilizando o outputStream
                resposta.setSaida(socket.getOutputStream());
                resposta.enviar();
            } catch (IOException ex) {
                //quando o tempo limite terminar encerra a thread
                if (ex instanceof SocketTimeoutException) {
                    try {
                        conectado = false;
                        socket.close();
                    } catch (IOException ex1) {
                        Logger.getLogger(ThreadConexao.class.getName()).log(Level.SEVERE, null, ex1);
                    }
                }
            }

        }
    }

}
&lt;/pre&gt;

&lt;p&gt;A estrutura de uma &lt;em&gt;thread&lt;/em&gt; √© bem simples:¬†uma classe que implementa a interface Runnable. Essa interface possui um √∫nico m√©todo a ser implementado, o m√©todo run(). Esse m√©todo √© o nosso segmento de c√≥digo que queremos que seja executado em paralelo. Veja que nele temos o c√≥digo que t√≠nhamos na &lt;em&gt;main&lt;/em&gt; com apenas algumas modifica√ß√µes para controlar o tempo m√°ximo de conex√£o (o tempo que a conex√£o deve se manter ativa).&lt;/p&gt;

&lt;h2 id=&#34;threadpools&#34;&gt;ThreadPools&lt;/h2&gt;

&lt;p&gt;Por fim, temos que falar um pouco sobre as Thread Pools, que tem o trabalho de controlar a cria√ß√£o de &lt;em&gt;threads&lt;/em&gt;. Claro que podemos criar quantas &lt;em&gt;threads&lt;/em&gt; quisermos, mas, √†s vezes, a situa√ß√£o requer um certo controle, ainda mais quando um servidor web pode receber milhares ou at√© milh√µes de requisi√ß√µes por segundo. Por isso, precisamos gerenciar essas &lt;em&gt;threads&lt;/em&gt; de maneira eficiente, para que nosso servidor n√£o sobrecarregue.¬†Para isso, o Java tem os Executors, que criam um ambiente de execu√ß√£o de m√∫ltiplas &lt;em&gt;threads&lt;/em&gt;.¬†Existem diversos tipos de ExecutorService.¬†No nosso caso, iremos utilizar o fixo, que significa limitarmos¬†a cria√ß√£o de &lt;em&gt;threads&lt;/em&gt; a um n√∫mero fixo. Se o n√∫mero de &lt;em&gt;threads&lt;/em&gt; criadas exceder o limite, essas novas &lt;em&gt;threads&lt;/em&gt; dever√£o aguardar at√© que as outras &lt;em&gt;threads&lt;/em&gt; terminem para come√ßar a executar. Com isso, nossa classe Servidor passa a ficar da seguinte forma:&lt;/p&gt;

&lt;p&gt;Servidor.java&lt;/p&gt;

&lt;pre&gt;import java.io.IOException;
import java.net.ServerSocket;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class Servidor {

    public static void main(String[] args) throws IOException {
        /* cria um socket &#34;servidor&#34; associado a porta 8000
         j√° aguardando conex√µes
         */
        ServerSocket servidor = new ServerSocket(8000);
        //executor que limita a cria√ß√£o de threads a 20
        ExecutorService pool = Executors.newFixedThreadPool(20);
        
        while (true) {
            //cria uma nova thread para cada nova solicitacao de conexao
            pool.execute(new ThreadConexao(servidor.accept()));
        }
    }
}
&lt;/pre&gt;

&lt;p&gt;Veja que agora colocamos a cria√ß√£o de novas &lt;em&gt;threads&lt;/em&gt; while(true). Isso impede que nosso servidor pare de executar ap√≥s a primeira requisi√ß√£o, permitindo que ele aceite m√∫ltiplas conex√µes. Voc√™ deve estar a se perguntar¬†&amp;#8211;¬†mas um &lt;em&gt;while true&lt;/em&gt; n√£o gera um la√ßo infinito? &amp;#8211; de certa forma sim, mas para a nossa situa√ß√£o esta √© a ideia, j√° que n√£o queremos que o servidor pare, e¬†que o servidor s√≥ finalize quando o usu√°rio enviar o comando CTRL+C no prompt/terminal.¬†De qualquer forma, o m√©todo¬†accept() √© bloqueado at√© que receba uma nova conex√£o, e¬†esse la√ßo s√© ser√° executado quando houver uma solicita√ß√£o, caso contr√°rio, ficar√° parado num estado de bloqueio =D&lt;/p&gt;

&lt;p&gt;Pronto. Agora temos um servidor funcional que aceita conex√µes m√∫ltiplas e responde a muitas requisi√ß√µes.&lt;/p&gt;

&lt;h2 id=&#34;considera√ß√µes-finais&#34;&gt;Considera√ß√µes finais&lt;/h2&gt;

&lt;p&gt;Nosso servidor est√° longe de ser uma vers√£o completa para competir com o Apache e outros servidores HTTP, at√© por que nosso servidor s√≥ envia documentos HTML. Vale lembrar que, quando o navegador recebe um HTML como resposta, ele tem que renderiz√°-lo, e ao fazer isto,¬†ele encontra tags de arquivos de imagem, √°udio, scripts¬†ou estilos, o que gera outras requisi√ß√µes para o servidor, para que ele envie tamb√©m esses arquivos. O¬†c√≥digo ainda¬†pode ser melhorado, ter√≠amos que fazer com que o servidor forne√ßa o Content-Type correto para cada tipo de arquivo (o que n√£o √© dif√≠cil, fica como exerc√≠cio). Tamb√©m seria necess√°rio implementar uma camada de seguran√ßa (o que hoje em dia √© fundamental, pois sem ela nosso servidor est√° completamente vulner√°vel a ataques), e por a√≠¬†vai.&lt;/p&gt;

&lt;p&gt;Al√©m do mais, nosso servidor responde ao padr√£o HTTP/1.1, mas recentemente foi lan√ßado o protocolo HTTP2, que veio para tornar o antigo padr√£o ainda mais r√°pido. Embora tenha sofrido altera√ß√µes internas¬†(o que significa que os servidores HTTP ter√£o que se &amp;#8220;adaptar&amp;#8221;¬†para seguirem esse novo padr√£o), o conceito continua o mesmo. Voc√™ pode ler um pouco mais sobre HTTP2 nesse post &lt;a href=&#34;http://tableless.com.br/http2-atualizacao-do-protocolo-base-da-internet/&#34;&gt;&amp;#8220;HTTP/2 ‚Äì Atualiza√ß√£o do protocolo base da internet&amp;#8221;&lt;/a&gt; e nesse &lt;a href=&#34;http://tableless.com.br/http2-para-desenvolvedores-de-web/&#34;&gt;&amp;#8220;HTTP2 para Desenvolvedores de Web&amp;#8221;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Espero ter despertado em voc√™s a vontade de conhecer mais a fundo como as coisas funcionam, para criarem suas pr√≥prias contribui√ß√µes e compartilharem com a galera, afinal, esse √© o espirito do Tableless.&lt;/p&gt;

&lt;p&gt;Por favor, deixem coment√°rios, se gostaram ou n√£o, erros, d√∫vidas. O feedback de voc√™s √© importante.&lt;/p&gt;

&lt;p&gt;At√© a pr√≥xima =D&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;refer√™ncias&#34;&gt;Refer√™ncias:&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Li√ß√µes sobre socket (em ingl√™s):&lt;/strong&gt; &lt;a title=&#34;http://www.oracle.com/technetwork/java/socket-140484.html&#34; href=&#34;http://www.oracle.com/technetwork/java/socket-140484.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.oracle.com/technetwork/java/socket-140484.html&#34;&gt;http://www.oracle.com/technetwork/java/socket-140484.html&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Java Tutorial Tudo sobre sockets (em ingl√™s):&lt;/strong&gt; &lt;a title=&#34;http://docs.oracle.com/javase/tutorial/networking/sockets/&#34; href=&#34;http://docs.oracle.com/javase/tutorial/networking/sockets/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://docs.oracle.com/javase/tutorial/networking/sockets/&#34;&gt;http://docs.oracle.com/javase/tutorial/networking/sockets/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RFC2616 (em ingl√™s):&lt;/strong&gt; &lt;a title=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616.html&#34; href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616.html&#34;&gt;http://www.w3.org/Protocols/rfc2616/rfc2616.html&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C√≥digo&lt;/strong&gt;&lt;strong&gt;¬†Fonte Completo:&lt;/strong&gt;¬†&lt;a title=&#34;Repo MeuServidorHTTP&#34; href=&#34;https://github.com/thiguetta/MeuServidorHTTP&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/thiguetta/MeuServidorHTTP&#34;&gt;https://github.com/thiguetta/MeuServidorHTTP&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vers√£o alternativa que fornece arquivos de imagem, javascript e css¬†tamb√©m:&lt;/strong&gt;¬†&lt;a title=&#34;Repo SimpleHTTPServer&#34; href=&#34;https://github.com/thiguetta/SimpleHTTPServer&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/thiguetta/SimpleHTTPServer&#34;&gt;https://github.com/thiguetta/SimpleHTTPServer&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Acessibilidade na web: Como tornar seu site acess√≠vel.</title>
      <link>https://tableless.github.io/hugo-public/acessibilidade-na-web-atualizando-como-tornar-seu-site-acessivel/</link>
      <pubDate>Mon, 26 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/acessibilidade-na-web-atualizando-como-tornar-seu-site-acessivel/</guid>
      <description>

&lt;p&gt;Voc√™ talvez esteja lendo essas primeiras linhas e pensando: por que tornar um site acess√≠vel? E por que me preocupar com isso quando meu prazo de entrega √© t√£o curto?&lt;/p&gt;

&lt;p&gt;Eu explico: acessibilidade na web √© uma quest√£o de boa pr√°tica. Al√©m de voc√™ colaborar para que mais pessoas sejam impactadas pelo conte√∫do disseminado em seu site, voc√™ ainda estar√° fazendo parte dos profissionais que conhecem e querem implementar cuidados b√°sicos que geram imensos resultados √† navega√ß√£o diferenciada √† que estamos habituados. Afinal, se voc√™ estudou e desgastou seu tempo resolvendo e entendendo todos os problemas que o crossbrowser causa na hora de escrever seu html, porque n√£o ir um pouco al√©m e construir algo que tenha significado tamb√©m para outras pessoas?!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/como-tornar-seu-website-acessivel/&#34; target=&#34;_blank&#34;&gt;Em 5 anos de um artigo para outro, pouco mudou, mas muito se atualizou.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As recomenda√ß√µes da W3C em termos de tags foram ampliadas com chegada do HTML5 que colabora dizendo o que cada conte√∫do representa em seu c√≥digo e a web sem√¢ntica atingiu outro n√≠vel ap√≥s as recomenda√ß√µes de uso da WAI-ARIA que estende o significado das intera√ß√µes (&lt;a href=&#34;http://tableless.com.br/wai-aria-estendendo-o-significado-das-interacoes/&#34; target=&#34;_blank&#34;&gt;como √© colocado pelo Diego aqui no Tableless&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;As ferramentas se ampliaram em quantidade e utilidade. Agora, ficou ainda mais f√°cil testar se seu site corresponde √†s boas pr√°ticas com apenas um clique.&lt;/p&gt;

&lt;p&gt;E n√£o menos importante, as cores, contrastes e os elementos visuais tamb√©m ganharam notoriedade com as novas ferramentas e dicas de boas aplica√ß√µes quando buscamos assertividade na web acess√≠vel.&lt;/p&gt;

&lt;h2 id=&#34;tags-html5-css-e-wai-aria&#34;&gt;Tags, HTML5, CSS e WAI-ARIA&lt;/h2&gt;

&lt;p&gt;Com a chegada do HTML5 e suas novas tags, muito da informa√ß√£o j√° ganhou um ‚Äúnome e sobrenome‚Äù auxiliando aos leitores de tela, demais navegadores e motores de busca, uma compreens√£o da informa√ß√£o ali contida, mas em termos de acessibilidade a W3C vai um pouco al√©m ressaltando a utiliza√ß√£o da WAI-ARIA que pode dar significado √† tags como div‚Äôs e listas n√£o ordenadas, que n√£o s√£o parte da atualiza√ß√£o HTML5. &lt;a href=&#34;http://tableless.com.br/?s=wai-aria&#34; target=&#34;_blank&#34;&gt;Aqui no Tableless voc√™ consegue ter uma ideia bem legal com alguns artigos j√° publicados.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Al√©m disso, as indica√ß√µes de preenchimentos mais completos dos ‚Äúalts‚Äù [&lt;img src=‚Äù‚Äù alt=‚ÄùTexto complementar‚Äù /&gt;] das imagens e dos ‚Äútitles‚Äù [&lt;a href=‚Äù‚Äù title=‚ÄùTexto complementar‚Äù&gt;&lt;/a&gt;] dos hyperlinks continuam sendo relembradas como pr√°ticas indispens√°veis para acessibilidade. Hoje, completando as indica√ß√µes, o que vale ressaltar √© o cuidado com textos alternativos em imagens decorativas como links com imagens de fundo ou sprites e com os labels em formul√°rios.&lt;/p&gt;

&lt;p&gt;Um bom c√≥digo estruturado, com cuidados para melhores respostas em SEO e um css organizado e dividido por m√≠dia (em caso de uma busca por p√°ginas que possam ser impressas em braille ou para leitores¬†de tela) j√° fazem do seu site uma aplica√ß√£o com boas respostas para acessibilidade. Afinal √© como eu mencionei, tudo resume-se √† boas pr√°ticas que com o tempo, voc√™ desenvolve sem grandes impactos de tempo para entrega final.&lt;/p&gt;

&lt;h2 id=&#34;ferramentas-que-auxiliam-a-constru√ß√£o-de-websites-acess√≠veis&#34;&gt;Ferramentas que auxiliam a constru√ß√£o de websites acess√≠veis&lt;/h2&gt;

&lt;p&gt;Saber como fazer e como fazer corretamente √© uma das coisas que nos motivam¬†no mundo front-end. As ferramentas a seguir, d√£o algumas respostas que ajudam a definir¬†essas quest√µes para constru√ß√£o da acessibilidade web de sua aplica√ß√£o:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.checkmycolours.com/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.checkmycolours.com/&#34;&gt;http://www.checkmycolours.com/&lt;/a&gt;&lt;/a&gt; || Ferramenta utilizada para testar o contraste textual de seu website.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://leaverou.github.io/contrast-ratio/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://leaverou.github.io/contrast-ratio/&#34;&gt;http://leaverou.github.io/contrast-ratio/&lt;/a&gt;&lt;/a&gt; || Confira o contraste entre seu background e a cor de seu texto.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.prodeaf.net/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.prodeaf.net/&#34;&gt;http://www.prodeaf.net/&lt;/a&gt;&lt;/a&gt; || Ferramenta que permite que voc√™ implemente um tradutor de libras para os textos de seu site.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/wave-evaluation-tool/jbbplnpkjmmeebjpijfedlgcdilocofh?utm_source=chrome-app-launcher-info-dialog&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/wave-evaluation-tool/jbbplnpkjmmeebjpijfedlgcdilocofh?utm_source=chrome-app-launcher-info-dialog&#34;&gt;https://chrome.google.com/webstore/detail/wave-evaluation-tool/jbbplnpkjmmeebjpijfedlgcdilocofh?utm_source=chrome-app-launcher-info-dialog&lt;/a&gt;&lt;/a&gt; Wave Evaluation Tool || Extens√£o do Chrome para teste de acessibilidade em websites.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;navegadores-textuais-e-leitores-de-tela&#34;&gt;Navegadores textuais e leitores de tela&lt;/h2&gt;

&lt;p&gt;Nem que seja apenas por curiosidade, vale a pena navegar utilizando um desses navegadores e aprender um pouco mais como pessoas com defici√™ncia ‚Äúenxergam‚Äù a web e como muitas vezes um detalhe visual que amamos pode ser um terror para esses usu√°rios¬†:).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://intervox.nce.ufrj.br/~hpdosvox/download.htm&#34; target=&#34;_blank&#34;&gt;Dosvox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.freedomscientific.com/Products/Blindness/JAWS&#34; target=&#34;_blank&#34;&gt;Jaws&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lynx.invisible-island.net/lynx2.8.7/index.html&#34; target=&#34;_blank&#34;&gt;Lynx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;outros-artigos-bacanudos-e-recheados-de-dicas&#34;&gt;Outros artigos bacanudos e recheados de dicas&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.maujor.com/w3c/introwac.html&#34; target=&#34;_blank&#34;&gt;Introdu√ß√£o √† Acessibilidade na Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.w3c.br/css-e-acessibilidade-na-web/&#34; target=&#34;_blank&#34;&gt;CSS e Acessibilidade na Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.maujor.com/w3c/tec_css_acess.html&#34; target=&#34;_blank&#34;&gt;T√©cnicas CSS para acessibilidade a conte√∫do web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://joeclark.org/book/sashay/serialization/&#34; target=&#34;_blank&#34;&gt;‚ÄòBuilding Accessible Websites‚Äô serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.maujor.com/tutorial/acessibilidade/tentest.php&#34; target=&#34;_blank&#34;&gt;Dez testes r√°pidos para checar a acessibilidade ao seu web site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.acessibilidadelegal.com/33-leitores.php&#34; target=&#34;_blank&#34;&gt;Navega√ß√£o Via Teclado e Leitores de Tela. &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ficam a√≠ as dicas. Bora fazer uma web mais acess√≠vel?&lt;/p&gt;

&lt;p&gt;At√© a pr√≥xima.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando seu pr√≥prio servidor HTTP do zero (ou quase) ‚Äì Parte III</title>
      <link>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-iii/</link>
      <pubDate>Mon, 05 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-iii/</guid>
      <description>

&lt;p&gt;Estamos entrando na terceira parte do tutorial, e quem est√° acompanhando at√© aqui j√° sabe ent√£o como funciona a comunica√ß√£o entre cliente e servidor, envio de requisi√ß√£o pelo cliente e recebimento de resposta (na duvida s√≥ voltar e releia a &lt;a href=&#34;http://tableless.com.br/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-i/&#34; title=&#34;Criando seu pr√≥prio servidor HTTP do zero (ou quase) ‚Äì Parte I&#34;&gt;Parte I&lt;/a&gt; e/ou¬†&lt;a href=&#34;http://tableless.com.br/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-ii/&#34; title=&#34;Criando seu pr√≥prio servidor HTTP do zero (ou quase) ‚Äì Parte II&#34;&gt;Parte II&lt;/a&gt;), por√©m o que a gente quer √© criar o servidor, receber as requisi√ß√µes e enviar a resposta ao cliente.&lt;/p&gt;

&lt;h2 id=&#34;o-servidor&#34;&gt;O Servidor&lt;/h2&gt;

&lt;p&gt;A id√©ia do servidor √© bem simples e estende a do cliente, como assim? F√°cil, f√°cil. no post anterior vimos como criar um socket, no caso, nos criamos um socket j√° conectado ao site do google, mas o que internamente acontece √©, criamos um socket, associamos esse socket a uma porta (lembrando que no caso do cliente a porta aberta √© aleat√≥ria, so para que o servidor saiba onde deve retornar a resposta) e conectamos ao socket do servidor na porta especifica.&lt;/p&gt;

&lt;p style=&#34;text-align: justify&#34;&gt;
  Agora vamos pensar um pouco, no caso do servidor, temos que criar um socket, associar (bind) a uma porta especifica(para que todos os clientes saibam exatamente onde conectar) e ficamos aguardando algu√©m solicitar uma conex√£o (listen), se algu√©m solicitar conex√£o n√≥s aceitamos (accept), resumindo o processo, temos como na imagem abaixo:
&lt;/p&gt;

&lt;div style=&#34;width: 369px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;a href=&#34;http://3.bp.blogspot.com/_Gt5b2CU22sM/S4iS4lbeU5I/AAAAAAAAAUU/DBmariOce1o/s400/rzab6503.gif&#34;&gt;&lt;img src=&#34;http://3.bp.blogspot.com/_Gt5b2CU22sM/S4iS4lbeU5I/AAAAAAAAAUU/DBmariOce1o/s400/rzab6503.gif&#34; alt=&#34;&#34; width=&#34;359&#34; height=&#34;324&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Diagrama Cliente/Servidor
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Em Java j√° temos uma classe pronta que faz isso, que √© o ServerSocket, que j√° cria um socket que est√° aguardando conex√µes, o que torna nossa vida bem mais simples, ent√£o vamos parar de teoria e ir pro c√≥digo, para isso criamos uma classe chamada Servidor e nela faremos o seguinte:&lt;/p&gt;

&lt;pre&gt;import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class Servidor {

    public static void main(String[] args) throws IOException {
        /* cria um socket &#34;servidor&#34; associado a porta 8000
          j√° aguardando conex√µes
        */
        ServerSocket servidor = new ServerSocket(8000);
        //aceita a primeita conexao que vier
        Socket socket = servidor.accept();
        //verifica se esta conectado  
        if (socket.isConnected()) {
            //imprime na tela o IP do cliente
            System.out.println(&#34;O computador &#34;+ socket.getInetAddress() + &#34; se conectou ao servidor.&#34;);
        }
    }
}
&lt;/pre&gt;

&lt;p&gt;Veja que estamos abrindo a porta 8000 e n√£o a 80, isso por que embora essa seja a porta &amp;#8220;destinada/utilizada&amp;#8221; para servidores HTTP, ela √© gerenciada pelo sistema operacional ent√£o n√£o poderemos abri-la por enquanto (o SO n√£o permitiria at√© por que em alguns sistemas linux j√° existe um servidor HTTP utilizando essa porta, em outros a porta est√° bloqueada pelo firewall, e teremos que abri-la manualmente mas veremos isso em breve), por isso vamos utilizar outra porta para testes, vamos compilar esse c√≥digo e coloca-lo em execu√ß√£o, veja que ele permanecer√° em execu√ß√£o at√© que ele receba pelo menos uma solicita√ß√£o de conex√£o, que √© o que vamos fazer, assim basta abrir o navegador e digitar o endere√ßo &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt; e ir para a p√°gina, veja que ao fazer isso sua linha de comando aparecer√° a frase:&lt;/p&gt;

&lt;pre&gt;java Server
O computador /0:0:0:0:0:0:0:1 se conectou ao servidor.&lt;/pre&gt;

&lt;p&gt;Veja ¬†que este √© o endere√ßo IP do seu computador j√° no formato IPv6. ¬†Note ¬†que¬†logo em seguida o programa foi finalizado, isso porque nosso servidor n√£o est√° configurado para m√∫ltiplas conex√µes/requisi√ß√µes, por√©m vamos fazer isso j√° j√°, agora vamos ver qual foi a requisi√ß√£o que nosso navegador fez ao servidor, e para ler a entrada o conceito √© o mesmo de ontem, vamos usar o InputStream para ler os dados enviados pelo cliente, ent√£o vamos adicionar o seguinte c√≥digo logo ap√≥s imprimir o IP:&lt;/p&gt;

&lt;pre&gt;[...]
            //cria um BufferedReader a partir do InputStream do cliente
            BufferedReader buffer = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            System.out.println(&#34;Requisi√ß√£o: &#34;);
            //L√™ a primeira linha
            String linha = buffer.readLine();
            //Enquanto a linha n√£o for vazia
            while (!linha.isEmpty()) {
                //imprime a linha
                System.out.println(linha);
                //l√™ a proxima linha
                linha = buffer.readLine();
            }
[...]
&lt;/pre&gt;

&lt;p&gt;Veja que agora utilizamos um BufferedReader ao inv√©s do Scanner, isto por que o Scanner mesmo ap√≥s ter terminado de ler a requisi√ß√£o ele espera que a a conex√£o seja encerrada, a fim de aguardar novas entradas, mas como n√£o √© interessante para gente esperar, ¬†vamos usar o Buffer pois podemos verificar se a linha for vazia, se for, simplesmente encerra o programa sem ter que aguardar que a conex√£o seja encerrada. (Caso seja necess√°rio continuar lendo a entrada antes da conex√£o encerras √© so pegar o InputReader novamente e continuar lendo. Agora ao executarmos nosso servidor, ¬†e acessar a p√°gina localhost:8000 no navegador teremos a seguinte sa√≠da na linha de comando:&lt;/p&gt;

&lt;pre&gt;java Server
O computador /0:0:0:0:0:0:0:1 se conectou ao servidor.
Requisi√ß√£o: 
GET / HTTP/1.1
Host: localhost:8000
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:29.0) Gecko/20100101 Firefox/29.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
DNT: 1
Connection: keep-alive&lt;/pre&gt;

&lt;p&gt;Veja que minha requisi√ß√£o foi originada de um navegador Firefox e que o formato da requisi√ß√£o √© muito semelhante do que vimos na primeira parte do tutorial =D. Agora √© so fazer o servidor tratar essas informa√ß√µes e devolver uma resposta ao cliente, nesse caso vamos devolver uma p√°gina HTML que √© o que o navegador espera. Vamos criar duas p√°ginas uma chamada √≠ndex.html e outra 404.html, e vamos armazena-las na mesma pasta que est√° colocando o c√≥digo fonte do servidor com os seguintes c√≥digos:&lt;/p&gt;

&lt;p&gt;Arquivo index.html&lt;/p&gt;

&lt;h1 id=&#34;funcionou&#34;&gt;Funcionou!!!!&lt;/h1&gt;

&lt;p&gt;Arquivo 404.html&lt;/p&gt;

&lt;pre&gt;Erro 404&lt;/pre&gt;

&lt;h1 id=&#34;a-p√°gina-que-voc√™-procura-n√£o-foi-encontrada&#34;&gt;A p√°gina que voc√™ procura n√£o foi encontrada&lt;/h1&gt;

&lt;p&gt;Por conven√ß√£o quando algu√©m solicita o arquivo &amp;#8220;/&amp;#8221; est√° solicitando a pagina inicial que geralmente √© o √≠ndex.html, dependendo da configura√ß√£o do servidor, no nosso caso queremos que nosso servidor retorne o √≠ndex.html, se o usu√°rio pedir por qualquer coisa no formato &amp;#8220;/{nome da pagina}.html&amp;#8221; retornaremos esse arquivo, caso o arquivo n√£o exista, retornaremos o erro 404 e a p√°gina de erro correspondente.&lt;/p&gt;

&lt;p&gt;Sabemos que a primeira linha da requisi√ß√£o contem o m√©todo, o arquivo solicitado e o protocolo separados por um espa√ßo em branco, para o nosso servidor o m√©todo n√£o importa, ent√£o assumiremos sempre o GET, e o protocolo ser√° sempre o HTTP/1.1, ent√£o o que nos importa √© o arquivo solicitado. Vamos alterar o nosso c√≥digo que deve ficar assim:&lt;/p&gt;

&lt;pre&gt;[...]
            /* L√™ a primeira linha
             contem as informa√ßoes da requisi√ß√£o
             */
            String linha = buffer.readLine();
            //quebra a string pelo espa√ßo em branco
            String[] dadosReq = linha.split(&#34; &#34;);
            //pega o metodo
            String metodo = dadosReq[0];
            //paga o caminho do arquivo
            String caminhoArquivo = dadosReq[1];
            //pega o protocolo
            String protocolo = dadosReq[2];
            //Enquanto a linha n√£o for vazia
            while (!linha.isEmpty()) {
                //imprime a linha
                System.out.println(linha);
                //l√™ a proxima linha
                linha = buffer.readLine();
            }
            //se o caminho foi igual a / entao deve pegar o /index.html
            if (caminhoArquivo.equals(&#34;/&#34;)) {
                caminhoArquivo = &#34;/index.html&#34;;
            }
            //abre o arquivo pelo caminho
            File arquivo = new File(caminhoArquivo);
            byte[] conteudo;
            //status de sucesso - HTTP/1.1 200 OK
            String status = protocolo + &#34; 200 OK\r\n&#34;;
            //se o arquivo n√£o existe ent√£o abrimos o arquivo de erro, e mudamos o status para 404
            if (!arquivo.exists()) {
                status = protocolo + &#34; 404 Not Found\r\n&#34;;
                arquivo = new File(&#34;/404.html&#34;);
            }
            conteudo = Files.readAllBytes(arquivo.toPath());
[...]
&lt;/pre&gt;

&lt;p&gt;Veja que ainda n√£o respondemos ao navegados com os dados, apenas montamos uma parte da resposta, para enviar a resposta precisaremos do OutputStream e montar uma string com a estrutura b√°sica da resposta, dai vamos escrever esses dados no stream, semelhante ao que fizemos na parte II do nosso tutorial:&lt;/p&gt;

&lt;pre&gt;//cria um formato para o GMT espeficicado pelo HTTP
            SimpleDateFormat formatador = new SimpleDateFormat(&#34;E, dd MMM yyyy hh:mm:ss&#34;, Locale.ENGLISH);
            formatador.setTimeZone(TimeZone.getTimeZone(&#34;GMT&#34;));
            Date data = new Date();
            //Formata a dara para o padrao
            String dataFormatada = formatador.format(data) + &#34; GMT&#34;;
            //cabe√ßalho padr√£o da resposta HTTP
            String header = status
                    + &#34;Location: http://localhost:8000/\r\n&#34;
                    + &#34;Date: &#34; + dataFormatada + &#34;\r\n&#34;
                    + &#34;Server: MeuServidor/1.0\r\n&#34;
                    + &#34;Content-Type: text/html\r\n&#34;
                    + &#34;Content-Length: &#34; + conteudo.length + &#34;\r\n&#34;
                    + &#34;Connection: close\r\n&#34;
                    + &#34;\r\n&#34;;
            //cria o canal de resposta utilizando o outputStream
            OutputStream resposta = socket.getOutputStream();
            //escreve o headers em bytes
            resposta.write(header.getBytes());
            //escreve o conteudo em bytes
            resposta.write(conteudo);
            //encerra a resposta
            resposta.flush();
&lt;/pre&gt;

&lt;p&gt;Agora √© s√≥ compilar, rodar e ver o resultado =D&lt;/p&gt;

&lt;p&gt;No caso de sucesso deve aparecer como na figura abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/09/sucesso.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-51391&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/sucesso.png&#34; alt=&#34;200 - Sucesso&#34; width=&#34;1279&#34; height=&#34;707&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Caso a p√°gina n√£o existe, deve aparecer assim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/09/erro404.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-51392&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/erro404.png&#34; alt=&#34;Erro 404&#34; width=&#34;1280&#34; height=&#34;709&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Temos um servidor funcional capaz de fornecer as p√°ginas HTML para os clientes que solicitarem, mas perceba que nosso servidor atende a apenas uma requisi√ß√£o e se encerra logo em seguida, sem contar que nosso m√©todo main ficou gigante, mas fique tranquilo, isso ser√° assunto para a pr√≥xima e ultima parte do tutorial, onde vamos organizar melhor nosso c√≥digo, tratar alguns comandos do servidor importantes como manter a conex√£o viva e trabalhar com m√∫ltiplas requisi√ß√µes, conex√µes simult√¢neas e afins. Por hora fica o exerc√≠cio, tente organizar o c√≥digo a sua maneira, altere como desejar, crie mais p√°ginas HTML e teste e veja se est√° sendo exibida corretamente, todo c√≥digo feito at√© aqui est√° no final da p√°gina e est√° todo comentado para facilitar o entendimento.&lt;/p&gt;

&lt;p&gt;Espero que estejam gostando e por favor deixem coment√°rios com seu feedback: o que achou, d√∫vidas, se funcionou ou n√£o, se a abordagem n√£o estiver adequada ou mesmo erros que posso ter cometido pelo caminho.&lt;/p&gt;

&lt;p&gt;At√© o pr√≥ximo post.&lt;/p&gt;

&lt;p&gt;Download do c√≥digo fonte: &lt;a href=&#34;https://github.com/thiguetta/ServidorHTTP&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/thiguetta/ServidorHTTP&#34;&gt;https://github.com/thiguetta/ServidorHTTP&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Material Design com Materialize</title>
      <link>https://tableless.github.io/hugo-public/material-design-com-materialize/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/material-design-com-materialize/</guid>
      <description>

&lt;p&gt;H√° muito tempo quero falar um pouco sobre desenvolvimento de sites utilizando layouts baseados no Material Design do Google, mas entre &lt;strong&gt;fazer&lt;/strong&gt; e &lt;strong&gt;falar&lt;/strong&gt; h√° um abismo enorme. Minha verdadeira inten√ß√£o √© compartilhar um pouco a maneira mais f√°cil de desenvolver um layout utilizando todos aqueles conceitos que a Google tem implementado atualmente.&lt;/p&gt;

&lt;h2 id=&#34;primeiros-passos&#34;&gt;Primeiros Passos&lt;/h2&gt;

&lt;p&gt;O &lt;a href=&#34;http://materializecss.com/&#34; target=&#34;_blank&#34;&gt;Materialize&lt;/a&gt; √© um Framework desenvolvido para facilitar e agilizar nosso desenvolvimento quando o assunto √© Material Design. Al√©m de √°gil, possui uma infinidade de vantagens que permitem que na maioria das vezes dispensam o uso de outros frameworks para complement√°-lo.&lt;/p&gt;

&lt;p&gt;Para baixar os arquivos do Materialize clique em &lt;a href=&#34;http://materializecss.com/getting-started.html&#34; target=&#34;_blank&#34;&gt;Getting Started&lt;/a&gt;, l√° voc√™ ver√° uma documenta√ß√£o explicando como fazer o download dos arquivos e todas as maneiras que voc√™ tem para fazer isso, ou tamb√©m pode usar a CDN dele como geralmente muitos fazem com o JQUERY. Os arquivos s√£o bem distribudos e n√£o diferem dos demais Frameworks que existem.&lt;/p&gt;

&lt;h3 id=&#34;vamos-para-as-vantagens-dele&#34;&gt;Vamos para as vantagens dele&lt;/h3&gt;

&lt;p&gt;Uma das principais vantagens √© o fato de ser muito similar ao Material Design desenvolvido pela google. Outra vantagem que podemos observar s√£o os amplos recursos de JQuery que ele possui como: Slider, Lightbox, Captions, Modais, Transitions, Waves entre muitos outros. Melhor do que falar √© mostrar. Esses recursos ficam na categoria &lt;a href=&#34;http://materializecss.com/media.html&#34; target=&#34;_blank&#34;&gt;JAVASCRIPT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O sistema de grid usado √© bastante parecido com os frameworks j√° existentes, como o Bootstrap.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/materialize-css-framework-01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;body&amp;gt;
      &amp;lt;div class=&#34;container&#34;&amp;gt; &amp;lt;!-- Container similar ao utilizado em outros Frameworks --&amp;gt;
            &amp;lt;div class=&#34;row&#34;&amp;gt; &amp;lt;!-- Row tamb√©m similar ao utilizado em outros Frameworks --&amp;gt;
                 &amp;lt;div class=&#34;col s12 m4 l4&#34;&amp;gt;Eu sou uma coluna&amp;lt;/div&amp;gt; &amp;lt;!-- Coluna com 3 tamanhos--&amp;gt;
            &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;

&lt;h4 id=&#34;entendendo-as-colunas&#34;&gt;Entendendo as colunas&lt;/h4&gt;

&lt;p&gt;√â muito simples, assim como o bootstrap que trabalha com 4 tamanhos de coluna, muito pequeno, pequeno, m√©dio e grande, o materialize decidiu trabalhar com 3 tamanhos que s√£o pequeno m√©dio e grande, nada que assuste ou prejudique o andamento do projeto. Para saber mais entre no &lt;a href=&#34;http://materializecss.com/grid.html&#34; target=&#34;_blank&#34;&gt;menu CSS e acesse o submenu Grid&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;alguns-pequenos-diferenciais-que-ele-possui&#34;&gt;Alguns pequenos diferenciais que ele possui&lt;/h3&gt;

&lt;p&gt;Alguns diferenciais que ele possui s√£o os bot√µes, o modal, os cards, as collections e o mais importante talves de todos o menu lateral, vou mostrar alguns desses abaixo.&lt;/p&gt;

&lt;h4 id=&#34;cards&#34;&gt;Cards&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/Sem-T√≠tulo-1.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;sidenav&#34;&gt;Sidenav&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/menu.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;vendo-essa-belezinha-funcionar&#34;&gt;Vendo essa belezinha funcionar ^^&lt;/h3&gt;

&lt;p&gt;Eu poderia colocar um milh√£o de exemplos feitos aqui, mas n√£o tenho os direitos autorais deles ent√£o caso queira ver o showcase do site acesse o link &lt;a href=&#34;http://materializecss.com/showcase.html&#34; target=&#34;_blank&#34;&gt;Showcase&lt;/a&gt; e veja. Mas para n√£o deixar voc√™s sem nenhum exemplo deixo aqui um site feito por mim atrav√©s do materialize, espero que gostem o link est√° na imagem e abaixo dela.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.loguei.com/&#34; target=&#34;_blank&#34;&gt;&lt;br /&gt; &lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/263dfd28861105.55d5d38e09a6f.jpg&#34; alt=&#34;&#34; /&gt;&lt;br /&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.loguei.com/&#34; target=&#34;_blank&#34;&gt;blog.loguei.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bem, aqui terminamos esse maravilhoso assunto sobre um Framework bem simples e maneiro de usar. Espero ter ajudado um pouco a todos. Obrigado ^^.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando seu pr√≥prio servidor HTTP do zero (ou quase) ‚Äì Parte II</title>
      <link>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-ii/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-ii/</guid>
      <description>

&lt;p&gt;Se chegou at√© aqui √© por que voc√™ terminou de ler a primeira parte do tutorial (Caso n√£o, leia a &lt;a href=&#34;http://tableless.com.br/criando-seu-proprio-servidor-http-do-zero-ou-quase-parte-i/&#34; title=&#34;Criando seu pr√≥prio servidor HTTP do zero (ou quase) ‚Äì Parte I&#34;&gt;Parte I&lt;/a&gt;¬†), mas n√£o desista, a parte legal vai chegar, mas antes de come√ßar, falta mais um item de teoria &amp;#8211;¬† sim eu sei que √© chato, mas juro que √© importante &amp;#8211; os Sockets.&lt;/p&gt;

&lt;h2 id=&#34;sockets-e-portas&#34;&gt;Sockets e portas&lt;/h2&gt;

&lt;p&gt;Falamos muito de requisi√ß√µes e respostas no √∫ltimo post mas ainda n√£o falamos de conex√£o e troca de informa√ß√µes. Bom, vamos l√°, ligeiramente comentamos um pouco sobre os protocolos de rede, tamb√©m disse que o protocolo web, o HTTP, est√° na camada mais alta do TCP/IP, a camada de aplica√ß√£o, mas para este tutorial pouco¬†importa o que acontece nas camadas inferiores ¬†(se tiver curiosidade procure mais sobre), o que realmente importa √© saber que esse tal de TCP/IP √© respons√°vel pela conex√£o entre dois pontos (dois computadores, ou no nosso caso, cliente e servidor).&lt;/p&gt;

&lt;p&gt;Tanto o servidor quanto o cliente s√£o computadores com seus respectivos sistemas operacionais (Linux, Windows, etc) e neles est√£o em execu√ß√£o¬†diversas aplica√ß√µes inclusive o navegador e o pr√≥prio servidor HTTP, mas nesse monte de aplica√ß√µes em execu√ß√£o, como vamos saber que estamos enviando e¬†recebendo dados da aplica√ß√£o certa? precisamos de um algo¬†que identifique cada aplica√ß√£o (ou pelo menos que identifique uma aplica√ß√£o que use a rede). Esses pontos de identifica√ß√£o, por assim dizer, s√£o chamados de Socket (ou em portugu√™s, soquete, tomada, encaixe, enfim algo que tenha uma ‚Äúabertura/encaixe&amp;#8221; para conex√£o), resumindo √© um ponto que permite conectar alguma coisa, no nosso caso, um outro computador atrav√©s da rede. Para receber uma conex√£o, o Socket precisa de uma abertura, essa abertura √© o que chamamos de porta, sei que para alguns o conceito parece ser trivial, mas para outros, inclusive profissionais de TI, esses conceitos podem embaralhar a cabe√ßa.&lt;/p&gt;

&lt;p&gt;Resumindo, um Socket √© o ponto final da conex√£o, onde uma porta √© aberta para que a aplica√ß√£o possa enviar ou receber dados, cada porta √© identificada por um n√∫mero que √© √∫nica no computador, sendo que se tentar abrir uma porta que j√° estiver sendo usado por outra aplica√ß√£o, o sistema operacional ir√° barrar e retornar um erro de acesso negado ou informa que a porta est√° em uso.&lt;/p&gt;

&lt;p&gt;Existe uma lista de portas conhecidas¬† que s√£o utilizadas por algumas aplica√ß√µes, as mais comuns s√£o:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;21 FTP &amp;#8211; Transferencia de arquivo&lt;/li&gt;
&lt;li&gt;22 SSH &amp;#8211;¬† Secure Shell&lt;/li&gt;
&lt;li&gt;25 SMTP &amp;#8211; Envio de Emails&lt;/li&gt;
&lt;li&gt;80 HTTP &amp;#8211; Web&lt;/li&gt;
&lt;li&gt;443 HTTPS &amp;#8211; Web ‚ÄúSegura&amp;#8221;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Uma porta ela √© √∫nica por computador mas n√£o √© √∫nica na internet, quando voc√™ quer efetuar a conex√£o com uma determinada aplica√ß√£o rodando em um computador remoto, a identifica√ß√£o do socket √© composto pelo endere√ßo de IP¬†ou o¬†nome can√¥nico (dom√≠nio &amp;#8211; endere√ßo do site) da m√°quina destino e a porta que¬†essa aplica√ß√£o usando, no seguinte formato {Endere√ßo}:{Porta}.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;exemplo.com:80 ou
 192.168.1.224:1000     
&lt;/pre&gt;

&lt;p&gt;A maioria das aplica√ß√µes que requerem conex√£o com algum servi√ßo se conectam diretamente as portas especificas que cada uma delas usa, sendo necess√°rio informar apenas o IP (ao menos que seja uma porta que a aplica√ß√£o n√£o conhe√ßa, o servi√ßo est√° funcionando numa porta at√≠pica ai ser√° necess√°rio informar, veremos mais na parte III). O que isso significa? isso significa que quando voc√™ digita o site &lt;a href=&#34;http://www.google.com.br&#34;&gt;http://www.google.com.br&lt;/a&gt;¬†no seu navegador, ele sabe que os servidores HTTP est√£o executando na porta 80, ent√£o n√£o √© preciso identificar-la, pois o navegador ir√° &amp;#8220;converter&amp;#8221; para o formato correto, transparentemente, a mesma coisa acontece quando voc√™ acessa um site seguro utilizando &lt;a href=&#34;https://www.seubanco.com.br&#34;&gt;https://www.seubanco.com.br&lt;/a&gt; o navegador sabe que a porta de conex√£o segura no servidor √© a 443, e tentar√° se conectar nela.&lt;/p&gt;

&lt;p&gt;O que acontece √© seu navegador ir√° se conectar ao site, ele sabe que o servidor est√° respondendo na porta 80 no endere√ßo tal, para isso √© necess√°rio que o navegador abre uma porta local aleat√≥ria, para que assim o servidor possa saber para quem responder:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.raywenderlich.com/wp-content/uploads/2011/06/sockets.jpg&#34;&gt;&lt;img src=&#34;http://www.raywenderlich.com/wp-content/uploads/2011/06/sockets.jpg&#34; alt=&#34;&#34; width=&#34;600&#34; height=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pronto agora que entendemos o conceito¬†(ou pelo menos espero que tenham entendido =D) vamos colocar as m√£os na massa.&lt;/p&gt;

&lt;p&gt;Vou partir do principio que j√° sabem criar uma classe e compilar um programa em Java (caso n√£o lembre-se que o Google √© nosso amigo¬†=D). Se preferir, usando o mesmo conceito pode converter a ideia para a linguagem de sua prefer√™ncia (s√≥ n√£o esque√ßa de compartilhar com a galera =D).&lt;/p&gt;

&lt;p&gt;Vamos l√°, vou criar uma classe em Java chamada Cliente, ser√° uma classe simples que vai se conectar a um servidor (neste caso vamos conectar no &lt;a href=&#34;http://google.com.br&#34;&gt;google.com.br&lt;/a&gt;) e ver se ele est√° conectado, se sim ele imprimir√° na tela o IP do servidor.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;import java.io.IOException;
import java.net.Socket;

public class Cliente {
    public static void main(String[] args) throws IOException {
        //cria um socket com o google na porta 80
        Socket socket = new Socket(&#34;google.com.br&#34;, 80);
        //verifica se esta conectado
        if (socket.isConnected()) { 
            //imprime o endere√ßo de IP do servidor
            System.out.println(&#34;Conectado a &#34; + socket.getInetAddress());
        }
    }
}
&lt;/pre&gt;

&lt;p&gt;Ao instanciar um novo objeto da classe Socket com os par√¢metros dom√≠nio e porta, internamente a m√°quina virtual Java j√° abre uma porta aleat√≥ria em seu computador e em seguida conecta ao servidor google.com.br na porta 80. Veja que at√© ent√£o n√£o sabemos o endere√ßo de IP do servidor mas ao efetuar a conex√£o o socket j√° se atualiza com essa informa√ß√£o. Vamos compilar nossa classe e verificar o resultado que ¬†deve ser algo desse tipo:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ javac Cliente.java
$ java Cliente
Conectado a google.com.br/173.194.118.151&lt;/pre&gt;

&lt;p&gt;Mas isso n√£o √© o suficiente queremos trocar informa√ß√µes com o servidor conectado, para isso nosso socket fornece 2 recursos ¬†um para leitura dos dados recebidos (InputStream) do¬†servidor e outro para enviar os dados que queremos para o servidor (OutputStream), √© claro que para enviarmos algum dado para o servidor temos que saber como se comunicar com o servidor, como a gente j√° sabe, o servidor do google √© um servidor HTTP que nos fornece as p√°ginas de servi√ßo do Google, certo? ent√£o sabemos que o servidor entende o protocolo HTTP. vamos enviar uma requisi√ß√£o HTTP simples a esse servidor e ver o que ele responde.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;/* veja que a requisi√ß√£o termina com \r\n que equivale a &amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;
       para encerar a requisi√ß√£o tem uma linha em branco */
    String requisicao = &#34;&#34;
        + &#34;GET / HTTP/1.1\r\n&#34;
        + &#34;Host: www.google.com.br\r\n&#34;
        + &#34;\r\n&#34;;
    //OutputStream para enviar a requisi√ß√£o
    OutputStream envioServ = socket.getOutputStream();
    //temos que mandar a requisi√ß√£o no formato de vetor de bytes
    byte[] b = requisicao.getBytes();
    //escreve o vetor de bytes no &#34;recurso&#34; de envio 
    envioServ.write(b);
    //marca a finaliza√ß√£o da escrita
    envioServ.flush();
&lt;/pre&gt;

&lt;p&gt;√â claro que apenas isso n√£o basta pois somente estamos enviando a requisi√ß√£o certo?, ent√£o precisaremos ler o InputStream logo ap√≥s enviar os dados para ver o que o servidor responde, vamos facilitar as coisas afinal isto n√£o √© C, para ler o que o servidor responde vamos utilizar um Scanner, que ja faz a convers√£o o Input de bytes para String, assim a gente n√£o tem que tratar esses trecos.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;//cria um scanner a partir do InputStream que vem do servidor
    Scanner sc = new Scanner(socket.getInputStream());
    //enquanto houver algo para ler
    while (sc.hasNext()) {
        //imprime uma linha da resposta
        System.out.println(sc.nextLine());
    }
&lt;/pre&gt;

&lt;p&gt;Agora se executarmos o programa podemos ler o que o servidor nos devolve e exibir na tela, logo teremos um resultado parecido com isso&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ javac Cliente.java 
$ java Cliente
Conectado a google.com.br/173.194.118.151 
HTTP/1.1 200 OK
Date: Tue, 17 Jun 2014 23:29:57 GMT
Expires: -1
Cache-Control: private, max-age=0
Content-Type: text/html; charset=ISO-8859-1
Set-Cookie: PREF=ID=fee5bb44e3822528:FF=0:TM=1403047797:LM=1403047797:S=BpVMDbzBHKUgdlRS; expires=Thu, 16-Jun-2016 23:29:57 GMT; path=/; domain=.google.com.br
Set-Cookie: NID=67=CT9hDvtQnKCvGeox_lmn7IjB_gbZ6Z9m7YT2rM1LAw2hVDVbvas16qfTsH1Jc1TRhrynqE-j0fb3EPl_JvjttiV-kqVpJlYjmg7Qd_e8oHcnJM1L2xlHWtlKw2EcomUM; expires=Wed, 17-Dec-2014 23:29:57 GMT; path=/; domain=.google.com.br; HttpOnly
P3P: CP=&#34;This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&amp;answer=151657 for more info.&#34;
Server: gws
X-XSS-Protection: 1; mode=block
X-Frame-Options: SAMEORIGIN
Alternate-Protocol: 80:quic
Transfer-Encoding: chunked

8000
&amp;lt;!doctype html&amp;gt;&amp;lt;html[...]um monte de HTML[...]

0
&lt;/pre&gt;

&lt;p&gt;Veja que o resultado √© semelhante ao que vimos anteriormente¬†sobre na nossa teoria de requisi√ß√£o e resposta, tamb√©m h√° algumas outras propriedade que n√£o vimos mas n√£o importa para n√≥s ao menos que queira se aprofundar no assunto. Veja tamb√©m que seu programa tamb√©m continua em execu√ß√£o, isso acontece porque o servidor do google ainda n√£o encerrou a conex√£o, isso acontece porque no HTTP/1.1 a propriedade &amp;#8220;Connection: keep-alive&amp;#8221; √© padr√£o mesmo que n√£o enviamos na requisi√ß√£o, quem define esse tempo √© o pr√≥prio servidor, por experi√™ncia pr√≥pria eu sei que a conex√£o com o google se mant√©m ativa por aproximadamente 3 minutos, isso para dar tempo suficiente para que voc√™ fa√ßa todas as pesquisas sem ter que criar uma nova conex√£o para cada pesquisa que voc√™ faz, isso √© importante no caso do google j√° que ele recebe milhares de requisi√ß√µes por segundo, sendo que varias delas s√£o feitas pela mesma pessoa, ent√£o n√£o conv√©m criar uma nova conex√£o para cada nova requisi√ß√£o.&lt;/p&gt;

&lt;p&gt;Voc√™ deve estar se perguntando, mas Thiago, isso n√£o √© o que o navegador faz?&lt;/p&gt;

&lt;p&gt;&amp;#8211; Sim, o que fizemos hoje foi implementar a parte mais b√°sica de um navegados web.&lt;/p&gt;

&lt;p&gt;Mas a¬†proposta √© fazer um servidor e n√£o um navegador, certo?&lt;/p&gt;

&lt;p&gt;&amp;#8211; Certo, mas antes de avan√ßarmos √© importante entender bem qual √© o trabalho do navegador antes de criar o servidor que ir√° responder as requisi√ß√µes dele, mas isso ser√° assunto para a parte III.&lt;/p&gt;

&lt;p&gt;Posso fazer em outra linguagem?&lt;/p&gt;

&lt;p&gt;&amp;#8211; Claro, socket √© implementado em todas as linguagens, basta consultar a documenta√ß√£o da sua linguagem preferida para entender como replicar o conceito acima.&lt;/p&gt;

&lt;p&gt;Por hoje ficamos por aqui pessoal, espero que tenham aproveitado bem nossa parte pr√°tica, no pr√≥ximo come√ßaremos definitivamente a criar¬†nosso servidor.&lt;/p&gt;

&lt;p&gt;At√© Mais.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>