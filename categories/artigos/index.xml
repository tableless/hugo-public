<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Artigos on Tableless</title>
    <link>http://tableless.com.br/categories/artigos/index.xml</link>
    <description>Recent content in Artigos on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/categories/artigos/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>O fim da profissão front-end</title>
      <link>http://tableless.com.br/carreira-de-front-end-vai-morrer/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/carreira-de-front-end-vai-morrer/</guid>
      <description>

&lt;p&gt;O processo de desenvolvimento web pode se dividir em três categorias: design, front-end e back-end. Na minha opinião, a categoria que tem mais processos manuais e repetitivos é sem duvida o front-end.&lt;/p&gt;

&lt;p&gt;Pare pra pensar: o core do trabalho do front-end se resume em duas partes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;implementação do layout&lt;/strong&gt;: produção da primeira camada de código, onde replicamos o layout criado em algum programa gráfico, para código estático em HTML, CSS e JS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;integração com API&lt;/strong&gt;: depois (ou junto, tanto faz) de feito o código estático, a interface é integrada com a API, que geralmente carrega boa parte da lógica, já que essa mesma API é usada para alimentar outras plataformas como mobile, robôs etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As outras &amp;#8220;responsabilidades&amp;#8221; que orbitam em volta do front-end como acessibilidade, SEO, performance, compatibilidade entre browsers, código semântico, entre outras coisas que você pode julgar serem de responsabilidade de um front-end &lt;strong&gt;são um mero apetrecho&lt;/strong&gt;. Elas podem existir ou não em um projeto. Mas um projeto não sobrevive sem o código front-end do layout e sem o conteúdo integrado à interface.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Um observação: acessibilidade é algo que as máquinas podem fazer muito melhor que um ser humano. Embora eu tenha colocado como algo que possa existir ou não em um projeto, é importante demais que você faça um esforço para que todos os seus projetos sejam acessíveis. Eu sei que isso não é a realidade até hoje no mercado e provavelmente nunca será até que esse processo seja automatizado.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Existem uma série de tarefas manuais que nós delegamos para ferramentas criadas afim de economizar parte do nosso tempo evitando a execução de tarefas repetitivas, automatizando o workflow do front-end. Só para citar algumas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pre-processadores CSS:&lt;/strong&gt; Sass, Less, Stylus&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Task runners:&lt;/strong&gt; Gulp, Grunt , Make, NPM Scripts&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scaffolding:&lt;/strong&gt; Yeoman, Slush&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dependências/Module Bundles:&lt;/strong&gt; Bower, NPM, Yarn, Webpack, Duo, RequireJS, Browserify, JSPM, Rollup&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SPA/Libraries/Frameworks:&lt;/strong&gt; React, Angular, Vue.js, Backbone, EmberJS, todomvc, Polymer, Lodash, Aurelia, MeteorJS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CSS Frameworks/Libraries:&lt;/strong&gt; SemanticUI, Bootstrap, Foundation, UiKit, YUI, Susy&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JS Test&lt;/strong&gt;: Mocha, Jasmine, QUnit, Ava, Tape, Jest&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JS Templates:&lt;/strong&gt; Underscore, Mustache, Handlebars, DoT, Dust, EJS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mas mesmo com todas essas ferramentas, o core da responsabilidade de um front-end ainda continua sendo &lt;strong&gt;implementar layout original&lt;/strong&gt; e &lt;strong&gt;integrar a interface com o back-end&lt;/strong&gt;. Você ainda continua &lt;strong&gt;replicando&lt;/strong&gt; o layout que alguém passou dias desenhando e integra o conteúdo que está numa API, que outra pessoa criou. Seu dia se resume em alternar entre as janelas do Sublime / Sketch / Browser / Sublime / API / Browser / Sublime.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;Automation isn&amp;#8217;t about being lazy. It&amp;#8217;s about being efficient.&amp;#8221; &amp;#8212; Addy Osmani&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Esse processo se torna tedioso e a lista de requisitos para tentar tornar o trabalho de front-end eficiente só aumenta. Toda tarefa mecânica, repetitiva e manual tende a ser automatizada e na minha opinião, em pouco tempo, &lt;strong&gt;não vamos precisar de alguém executando o trabalho de front-end de ponta a ponta&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Okay, respira. Isso é a minha opinião. Dado que o front-end é a parte mais operacional de todo o processo, mais cedo ou mais tarde todo o trabalho executado no front-end vai ser automatizado. A parte mais difícil são essas duas tarefas que nós fazemos desde os primórdios. Contudo, elas já podem estar com seus dias contados.&lt;/p&gt;

&lt;h2 id=&#34;trabalhando-com-dados-reais-direto-no-design&#34;&gt;Trabalhando com dados reais direto no Design&lt;/h2&gt;

&lt;p&gt;Você pode não ser designer, mas há uma premissa no mundo dos designers que diz que &lt;strong&gt;você deve trabalhar sempre com conteúdo real&lt;/strong&gt;. Isso quer dizer que entregar um layout com texto em &lt;em&gt;Lorem Ipsum Dolor&lt;/em&gt; é coisa de designer júnior.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;If your site or application requires data input, enter real and relevant words and type the text, don’t just paste it in from another source.&amp;#8221; &amp;#8212; Jason Fried&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A ideia é que você crie um layout da forma mais fiel possível usando os termos, palavras, nomes, datas etc, afim de chegar mais perto da experiência do usuário.&lt;/p&gt;

&lt;p&gt;Atualmente a maioria dos programas visuais utilizados para criar layouts para web tem alguma feature ou plugin que permite a integração com alguma fonte de dados que contenha o conteúdo real.&lt;/p&gt;

&lt;p&gt;Por exemplo o Sketch, que é o programa de criação visual mais querido do momento, conta com plugins que permitem a integração direta entre API e layout. Veja por exemplo o vídeo abaixo demonstrando a utilização do plugin Craft (também disponível para Photoshop):&lt;/p&gt;

&lt;p&gt;Ou essa demonstração que usa a API do Stackoverflow:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Em pouco tempo, não vamos precisar de alguém executando o trabalho de front-end de ponta a ponta.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O ponto aqui é: nós só precisamos criar o layout uma vez, usando o programa desejado (Sketch/Photoshop/Figma/Adobe XD etc) e pronto. Não precisamos de uma pessoa para refazer esse layout com HTML/CSS/JS de forma alguma. Isso nos leva para uma segunda discussão: mesmo com o design pronto, usando dados reais de uma API, nós ainda precisamos que ele seja acessível pelos browsers. Como resolvemos isso?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Obs.: E aquele movimento do &amp;#8220;Design in the Browser&amp;#8221;? Esse é um movimento criado exatamente para evitar o trabalho de produzir duas vezes o mesmo layout. Mas é MUITO melhor fazer um design usando um programa visual do que escrever direto no código. IMHO.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;código-bonito-não-é-importante&#34;&gt;Código bonito não é importante&lt;/h2&gt;

&lt;p&gt;Desde sempre os front-ends escrotizavam o código que era gerado automaticamente por programas como o Dreamweaver. Eles tinham uma razão pra isso: o código era completamente horrível. Era um tempo onde a conexão com a internet era precária e tudo o que pudéssemos fazer para melhorar o carregamento do site, nós fazíamos. O código gerado por programas Wysiwyg tinha vários problemas: era difícil de ler, não havia semântica alguma, continha código inútil e muitas vezes não era compatível com todos os browsers. Tudo isso fazia com que o código limpo, semântico, enxuto e acessível tivesse um valor inestimável.&lt;/p&gt;

&lt;p&gt;Código limpo era sinônimo de bom ranking no Google, boa compatibilidade entre os browsers, performance de carregamento garantida, produtividade entre os membros do time por causa da legibilidade do código, facilidade de manutenção etc etc etc.&lt;/p&gt;

&lt;p&gt;Hoje, boa parte desses problemas foram resolvidos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;os browsers tem uma ótima complacência com os padrões web, extinguindo a maioria dos problemas de compatibilidade de layout;&lt;/li&gt;
&lt;li&gt;a performance é atacada em várias frentes: processo de build dos assets, tecnologias como HTTP/2 e até a evolução da conexão que fica mais rápida a cada ano;&lt;/li&gt;
&lt;li&gt;a manutenção e a legibilidade do código HTML/CSS não é mais um problema sério, já que o HTML é facilmente escrito usando poucas tags e o CSS tem os pré-processadores, que auxiliam muito na hora de definir padrões, além das boas práticas;&lt;/li&gt;
&lt;li&gt;o JS está bem assessorado por frameworks, libraries e uma série de boas práticas que se responsabilizam pela parte pesada do trabalho, deixando pouca margem de erro para os devs;&lt;/li&gt;
&lt;li&gt;e o mais importante para mim é que a semântica não está mais no HTML. Desde a vinda de tecnologias com o JSON-LD, a semântica não está mais atrelada ao código HTML e isso é ótimo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Eu sei que mesmo que grande parte da responsabilidade fique na mão dos frameworks, bibliotecas e ferramentas, o dev tem grandes chances de fazer merda com o pedaço de código que ele cuida. Não olha pro seu amiguinho do lado, coitado&amp;#8230; Todos nós cometemos erros&amp;#8230; uns mais, outros menos.&lt;/p&gt;

&lt;p&gt;Mas entenda uma coisa: &lt;strong&gt;código bonito, não é mais algo importante&lt;/strong&gt;. As ferramentas que nos auxiliam hoje para buildar os assets podem ser usadas por programas/robôs ao criar automaticamente código HTML/CSS/JS a partir de layouts produzidos em programas como Sketch. Veja por exemplo &lt;a href=&#34;https://github.com/sskyy/blade&#34;&gt;esse plugin&lt;/a&gt; que não é mais atualizado desde 2015 já tentava automatizar a exportação de código no Sketch. O cara estava tentando fazer código HTML a partir do layout desenhado no Sketch versão 3. Hoje o Sketch está na versão 42. E sabe de uma coisa: na versão 43 o Sketch está abrindo o código dos seus arquivos em formato JSON. O que nos leva para o próximo assunto.&lt;/p&gt;

&lt;h3 id=&#34;automatização-do-design&#34;&gt;Automatização do Design&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;We have a new file format which is more compact, and enables more powerful integrations for third-party developers. &amp;#8212; &lt;a href=&#34;https://rink.hockeyapp.net/apps/0172d48cceec171249a8d850fb16276b&#34;&gt;Sketch Team&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Isso quer dizer que o Sketch se transformará em uma plataforma de desenvolvimento. Abrindo o código dos seus arquivos, qualquer um conseguirá ler esses arquivos e partir daí criar &lt;strong&gt;qualquer coisa&lt;/strong&gt;. Quanto tempo para alguém criar um plugin que lê o arquivo do Sketch em formato JSON e &lt;strong&gt;gera automaticamente HTML/CSS/JS&lt;/strong&gt; a partir de um layout Sketch?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Computadores evoluem. Se os princípios mudassem não haveria base para a evolução. &amp;#8211; Caio Vaccaro&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Okay, mas espera aí: mesmo antes desse formato novo de arquivo do Sketch, já existia algumas ferramentas que talvez você não conhecia como o &lt;a href=&#34;https://protoship.io/tools/teleport.html&#34;&gt;Teleport&lt;/a&gt;, que converte &lt;strong&gt;qualquer website&lt;/strong&gt; em um artboard do Sketch. E também o &lt;a href=&#34;https://protoship.io/tools/uipad.html&#34;&gt;UIPad&lt;/a&gt;, que converte layout do Sketch em HTML/CSS e React! Se liga:&lt;/p&gt;

&lt;p&gt;Essa tendência já estava sendo desenhada há tempos. É a coisa mais inteligente de se fazer. Você pode fazer coisas mais importantes do que ficar sentado na frente do computador alternando entre browser, layout, browser, layout.&lt;/p&gt;

&lt;p&gt;Okay: nós temos um design que se integra com a API, puxando dados reais do sistema. Nós temos um programa que design que exporta o layout para código HTML/CSS/JS pronto para ser usado. Mas ainda estamos usando código HTML/CSS/JS como antigamente. Há mais um passo que pode ser melhorado.&lt;/p&gt;

&lt;h3 id=&#34;webassembly-wasm&#34;&gt;WebAssembly (Wasm)&lt;/h3&gt;

&lt;p&gt;Outro ponto importante, que não tem nada definido ainda, mas que pode começar a fazer todo sentido é toda aquela &lt;a href=&#34;https://tableless.com.br/o-webassembly-vem-ai/&#34;&gt;história do WebAssembly&lt;/a&gt;, que é um novo formato binário criado pelo Google Microsoft, Mozilla e vários outros.&lt;/p&gt;

&lt;p&gt;O formato de código binário do WebAssembly pode ser decodificado muito mais rápido do que o JavaScript é parseado. Isso realmente traz para a Web a experiência de programas nativos, principalmente no mobile.&lt;/p&gt;

&lt;p&gt;O legal é que outras linguagens podem ser compiladas para WebAssembly. Hoje o projeto está um pouco mais focado em C/C++, mas com certeza outras linguagens serão abrangidas. O objetivo principal do WebAssembly é a performance.&lt;/p&gt;

&lt;p&gt;Uma preocupação que surge no ar é que isso cheira monopólio. Lembra do Flash? Querendo ou não ele era uma alternativa de criar algo nativo na Web. Mas a graça é que:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;WebAssembly não substitui o JavaScript. Tudo tem retrocompatibilidade, tudo será executado no mesmo universo que o JS e a segurança terá as mesmas restrições que o JS;&lt;/li&gt;
&lt;li&gt;Não é só uma empresa ou grupo que está por trás do Wasm, mas várias como Firefox, Chromium, Edge e Webkit;&lt;/li&gt;
&lt;li&gt;Para rodar WebAssembly não será necessário rodar plugins de terceiros, já que os motores dos browsers serão totalmente compatíveis;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Está entendendo por que buscar por um código limpo (como conhecemos hoje) não faz mais tanto sentido?&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Mais cedo ou mais tarde a profissão de front-end como nós conhecemos até hoje &lt;strong&gt;vai deixar de existir&lt;/strong&gt;. Você que já é velho na área, talvez nem precise se preocupar, porque eu não acho que isso vai acontecer agora, mas você que acabou de começar, é melhor pensar duas vezes no futuro da sua carreira.&lt;/p&gt;

&lt;p&gt;Eu tenho certeza que a área de back-end também pode passar por esse processo, embora seja muito mais difícil de acontecer. E eu também acho que vai demorar muito (se chegar a acontecer) a automatização da parte criativa responsável pelo design dos layouts de produtos e websites.&lt;/p&gt;

&lt;p&gt;Eu não chuto em quanto tempo isso pode acontecer ou se vai acontecer. É mais um chute meu do que qualquer outra. Quero só abrir para discussão esse assunto. Mas até ontem &lt;a href=&#34;https://www.wired.com/2016/10/ubers-self-driving-truck-makes-first-delivery-50000-beers/&#34;&gt;carros e caminhões autônomos&lt;/a&gt; eram coisa de filme.&lt;/p&gt;

&lt;p&gt;Mas com certeza existem vários pontos ainda a serem resolvidos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A automatização de sites gigantes de conteúdo vai ocorrer?&lt;/li&gt;
&lt;li&gt;E sistemas/produtos, como vamos fazer?&lt;/li&gt;
&lt;li&gt;Coloque aqui sua dúvida maluca&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Minha outra aposta é sobre a profissão de UX, que vai desaparecer não porque suas responsabilidades serão automatizadas, mas por se tornar obsoleto mesmo. Esse é assunto para um outro artigo, mas se quiser pensar sobre isso agora, comece ouvindo &lt;a href=&#34;http://movimentoux.com/work/felipememoria/&#34;&gt;esse capítulo do podcast do Movimento UX&lt;/a&gt; com o &lt;a href=&#34;http://www.fmemoria.com.br/&#34;&gt;Felipe Memória&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;para-ler-mais&#34;&gt;Para ler mais&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Dados reais no design&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.shopify.com/partners/blog/91010886-3-easy-steps-for-working-with-realistic-data-in-sketch-using-json&#34;&gt;3 Easy Steps for Working with Realistic Data in Sketch Using JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@markjenkins/designing-with-data-7f6bcd907f0a#.95haya5yq&#34;&gt;Designing with Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.framer.com/prototype-with-real-data-in-framer-from-json-to-multi-device-and-internet-of-things-6eb1ae8b8325#.fo9b8i4gz&#34;&gt;Prototype with real data in Framer, from JSON to multi-device and internet of things&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@anirudhs/project-comet-designing-with-real-data-959beccb5c1a#.v6khfndrh&#34;&gt;Adobe XD: Designing with Real Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Sobre não usar texto fake em layouts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2010/01/lorem-ipsum-killing-designs/&#34;&gt;Lorem Ipsum is Killing Your Designs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://thenextweb.com/dd/2015/04/09/why-designers-should-never-use-fake-text/#.tnw_zjSSHkxh&#34;&gt;Why designers should never use fake text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.creativebloq.com/design/stop-using-lorem-ipsum-7116907&#34;&gt;Stop using Lorem Ipsum!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://signalvnoise.com/archives/001083.php&#34;&gt;&amp;#8220;Getting Real&amp;#8221; design tip: Just say no to Lorem Ipsum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;WebAssembly&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://webassembly.org/docs/faq/&#34;&gt;FAQ do site WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tableless.com.br/o-webassembly-vem-ai/&#34;&gt;WebAssembly – a web compilada&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techcrunch.com/2015/06/17/google-microsoft-mozilla-and-others-team-up-to-launch-webassembly-a-new-binary-format-for-the-web/&#34;&gt;Google, Microsoft, Mozilla And Others Team Up To Launch WebAssembly, A New Binary Format For The Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jaydson.com/webassembly-e-o-futuro-da-web/&#34;&gt;WebAssembly e o futuro da Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://brendaneich.com/2015/06/from-asm-js-to-webassembly&#34;&gt;From asm.js to webassembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arstechnica.com/information-technology/2015/06/the-web-is-getting-its-bytecode-webassembly/&#34;&gt;The Web is getting its bytecode: WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Sobre o cenário das ferramentas de front-end&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://frontend.directory/&#34;&gt;front-end.directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://radify.io/blog/using-build-tools/&#34;&gt;Using front-end build tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://usablica.github.io/front-end-frameworks/compare.html&#34;&gt;A Collection Of Best Front End Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/showcases/front-end-javascript-frameworks?s=stars&#34;&gt;GitHub: Front-end JavaScript frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sitepoint.com/front-end-tooling-trends-2017/&#34;&gt;Front-End Tooling Trends for 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.debugme.eu/front-end-web-developer-tools/&#34;&gt;Updated List: The 67 Very Best Front End Web Developer Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techbeacon.com/most-popular-javascript-front-end-tools&#34;&gt;The most popular JavaScript front-end tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://colorlib.com/wp/top-templating-engines-for-javascript/&#34;&gt;Top 10 Templating Engines for JavaScript To Improve and Simplify Your Workflow 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/addyosmani/automating-front-end-workflow&#34;&gt;Automating Front-end Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@caiovaccaro/javascript-state-of-the-union-2015-parte-3-281aa04bece1#.bulta9j6j&#34;&gt;Javascript State of the Union 2015, parte 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/Hugeinc/javascript-state-of-the-union-2015&#34;&gt;Slides &amp;#8211; Javascript State of the Union 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results&#34;&gt;The State of Front-End Tooling 2016 &amp;#8211; Results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hackernoon.com/front-end-roles-and-responsibilities-6ee8654f1649#.gsg5zdjtr&#34;&gt;Front-end Roles and Responsibilities&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Anotações sobre Progressive Web Apps</title>
      <link>http://tableless.com.br/anotacoes-sobre-progressive-web-apps/</link>
      <pubDate>Tue, 24 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/anotacoes-sobre-progressive-web-apps/</guid>
      <description>

&lt;p&gt;A idéia de escrever sobre Progressive Web Apps surgiu quando estudava para apresentar uma talk sobre o conceito ao pessoal do trabalho, percebi durante o processo que existe muito conteúdo bom pela internet afora, porém senti que alguns conceitos estavam separados uns dos outros, então decidi escrever um documento agrupando todos estes dados que encontrei espalhados por aí para facilitar a compreensão e a forma que iria passar isto para minha equipe. Depois de todo trabalho de pesquisa tive a idéia, porque não compartilhar isto com as pessoas? Altamente incentivado pelos colegas de trabalho, resolvi revisar o documento e postar para os leitores do tableless, acredito que vai ser uma boa base para iniciantes no assunto. Fica aqui uma observação antes de começarmos, não tenho nenhuma intenção e escrever um documento canônico sobre Progressive Web Apps, como verão a seguir é um assunto em construção e em constante evolução, muitas coisas que gostaríamos de usar ainda estão sendo definidas pela comunidade. Agora estamos prontos para começar, espero que gostem 🙂 .  &lt;/p&gt;

&lt;h2 id=&#34;conceitos-e-motivações&#34;&gt;Conceitos e motivações&lt;/h2&gt;

&lt;p&gt;  Pesquisando sobre Progressive Web Apps &amp;#8211; (PWA) percebemos que não é um conceito ou uma especificação única, são na verdade um conjunto de idéias que foram agrupadas com com o intuito de promover uma melhor experiência para o usuário mobile para os usuários, resolvendo alguns problemas que um “simples” site responsivo não poderia resolver. PWAs criam uma aproximação dos usuários já fidelizados, aqueles usuários assíduos que já acompanham seu conteúdo, e aprimoram a experiência mobile desses usuários de forma progressiva (não confundir com “progressive enhancement”, veremos ele a seguir), promovendo uma imersão muito próxima do que seria um app nativo, porém não coerciva ou intrusiva, pois não obriga que usuários corriqueiros ou na primeiro visita ao seu site, tenham que baixar um App para ter acesso ao seu conteúdo. Isto garante que qualquer usuário possa acessar os recursos de sua aplicação web de uma forma tão simples quanto acessa a própria web. Todos estes conceitos envolvidos em PWA tentam resolver um dos grandes problemas mobile de hoje, nós temos millhões de aplicativos disponíveis para serem baixados e temos umas dezenas deles instalados em nosso aparelho que fazem nada de relevante e que muitas vezes fomos obrigados a instalar para ter acesso a algo temporário, quando na verdade precisamos de só uma meia dúzia deles. Por outro lado nós temos um numero muito maior de websites disponíveis na internet, mas que mesmo com as iniciativas para web responsiva a usabilidade, ainda não conseguem entender as espectativas dos usuarios. PWAs são caras legais pois eles são uma iniciativa em direção a um lugar comum onde todos queremos chegar para “Tornar a web um lugar melhor”.  &lt;/p&gt;

&lt;h3 id=&#34;webmobile-ou-app-nativo-figure&#34;&gt;WebMobile ou App Nativo?&lt;figure&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;uploads/2016/12/c7NJRa2.gif&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;“Porque não los dos?”&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;  Muito se discute ainda sobre estratégia mobile e os argumentos de hardware, performance geralmente são postos à mesa, porém como Sergio Lopes cita no livro, A Web Mobile, A Web é boa o suficiente para a maioria dos cenário possível, portanto no momento de tomar a decisão de qual estratégia mobile seguir, o que importa mais é o foco no usuário e as expectativas que ele possui com sua marca, produto ou empresa. Existem também aqueles que apelam para os numeros alegando que os usuarios mobile passam 80% do seu tempo utilizando aplicativos e eles estão certos, pena, que não serão os seus aplicativos. Basta darmos uma olhada em nossos celulares, quantos de nós utiliza mais que os aplicativos criados pelas gigantes do mercado já consolidadas e estabilizadas?&lt;/p&gt;

&lt;h4 id=&#34;estretégia-web-fisrt&#34;&gt;Estretégia Web Fisrt&lt;/h4&gt;

&lt;p&gt;Web é uma solução muito interessante para aqueles que já possuem uma marca ou produto web e estão pensando em iniciar um projeto mobile, no entanto para aqueles que vão iniciar um novo produto, um produto inovador que não possua concorrentes e expectativas por parte dos usuários, uma estratégia baseada diretamente em apps pode ser a melhor saída. O que nós entendemos até aqui é que se um produto novo que não tem um público já atingido, seja por você ou por algum concorrente que já lançou um app para o mesmo nicho de mercado, ele não é capaz de gerar expectativas por parte dos usuários, porém quando já existe uma estratégia online estes usuários já possuem esta expectativa com a marca, assim sendo uma estratégia Web Pode ser mais interessante. Em muitos casos pode-se assumir uma estratégia “Web First”, onde nós podemos lançar a marca ou produto no mercado sempre primeiramente pela versão web onde todos os usuários terão acesso, então depois de consolidados no mercado podemos partir para uma estratégia diferente e é exatamente ai que as PWAS irão aparecer.&lt;/p&gt;

&lt;h3 id=&#34;porque-usar-progressive-web-app&#34;&gt;Porque usar Progressive Web App?&lt;/h3&gt;

&lt;p&gt;Segue abaixo uma lista de motivos que eu encontrei para justificar o uso de PWAs como primiera estratégia em relação a Apps nativos:&lt;/p&gt;

&lt;h4 id=&#34;porque-é-web&#34;&gt;Porque é Web:&lt;/h4&gt;

&lt;p&gt;PWAs terão o comportamento e imersão de um App nativo, com toda a acessibilidade e recursos que um website, isto quer dizer que seu conteúdo estará disponível a todos em todos os dispositivos, seja mobile, desktop, na tv da sala ou em seu tamagotchi.&lt;/p&gt;

&lt;h4 id=&#34;apps-são-inconvenientes&#34;&gt;Apps são inconvenientes:&lt;/h4&gt;

&lt;p&gt;Como já citado acima, para um usuário que visita sua página pela primeira vez, que talvez nem conheça o seu serviço ou produto, pode não ser muito confortável(e não será) ter que baixar um app, muitas vezes grande, muitas vezes em uma conexão ruim e muitas vezes conflitante com o pouco espaço de armazenamento do aparelho, somente porque você não proveu uma solução online para o problema dele.&lt;/p&gt;

&lt;h4 id=&#34;usuariofirst-porque-relacionamentos-possessivos-acabam-cedo&#34;&gt;“UsuarioFirst”, Porque relacionamentos possessivos acabam cedo:&lt;/h4&gt;

&lt;p&gt;Todas as estratégias das PWAs baseiam-se fortemente nas expectativas do usuário, suas experiências e necessidades, em momento algum você deve obrigá-lo a fazer algo ou a tomar uma decisão por ele, você deve prover a melhor experiência possível sempre. Acredito que de todos os conceitos que vi sobre PWAs este foi um dos mais repetidos e se mostrou para mim o mais importante dos conceitos, foco 100% no usuário.&lt;/p&gt;

&lt;h4 id=&#34;porque-você-não-quer-perder-público&#34;&gt;Porque você não quer perder público:&lt;/h4&gt;

&lt;p&gt;para cada etapa que você obriga seus usuários a enfrentarem até chegar a seu conteúdo, você irá perder em torno de 20% do seu público, como explicado por &lt;a href=&#34;https://www.youtube.com/watch?v=MyQ8mtR9WxI&#34;&gt;Alex Russell em sua palestra sobre Progressive Web Apps em 2015&lt;/a&gt;. Isto que dizer que entre entrar na loja, baixar e instalar seu aplicativo, você está deixando usuários preciosos insatisfeitos.&lt;/p&gt;

&lt;h4 id=&#34;progressivamente-aprimorado-progressive-enhancement&#34;&gt;Progressivamente aprimorado (Progressive Enhancement):&lt;/h4&gt;

&lt;p&gt;Tão importante que faz parte do nome que define o conceito, isto que dizer que sua aplicação funciona para todos os usuários, independentemente da escolha de navegador, pois são criados com aprimoramento progressivo como princípio central.&lt;/p&gt;

&lt;h4 id=&#34;progressivamente-instalado&#34;&gt;Progressivamente instalado:&lt;/h4&gt;

&lt;p&gt;Porque Você irá prover toda a solução online para seu usuário, então conforme ele torna-se assíduo consumidor do seu conteúdo você poderá oferecer a ele, o direito de escolha para que tenha uma experiência mais próxima da marca em sua home screen, permitir que ele escolha entre continuar acessando normalmente pelo browser ou ainda baixar um aplicativo que pode lhe possibilitar mais recursos.&lt;/p&gt;

&lt;h4 id=&#34;engajamento&#34;&gt;Engajamento:&lt;/h4&gt;

&lt;p&gt;Uma vez que você promove uma aproximação progressiva e totalmente acessível com os usuários, você naturalmente conseguirá uma proximidade maior com os mesmo, e agora com PWA podemos fazer com que esta aproximação seja facilitada pois o acesso ao seu conteúdo estará a um click de distância, mesmo antes dele ter decidido por baixar o seu App(supondo que você tenha optado por fazer um), isto irá gerar um engajamento muito maior do público.&lt;/p&gt;

&lt;h4 id=&#34;reengajáveis&#34;&gt;Reengajáveis:&lt;/h4&gt;

&lt;p&gt;Facilitam o reengajamento por meio de recursos como notificações push.&lt;/p&gt;

&lt;h4 id=&#34;compartilhamento-de-conteúdo&#34;&gt;Compartilhamento de conteúdo:&lt;/h4&gt;

&lt;p&gt;Permite que os usuários compartilhem seu conteúdo com outras pessoas de maneira fácil a partir de hiperlinks assim como seria em um site convencional.&lt;/p&gt;

&lt;h4 id=&#34;funcionam-offline-e-são-constantemente-atualizados&#34;&gt;Funcionam Offline e são constantemente Atualizados:&lt;/h4&gt;

&lt;p&gt;Todo o conteúdo será guardado em cache e estará disponibilizado para o seu usuário mesmo que ele não tenha acesso a internet. Sempre que for possível e houver conexão o Service Worker pode solicitar a versão mais atualizada do se WebApp e gerenciar de acordo com a estratégia escolhida pela equipe, para que ele seja salvo e o cache antigo será deletado.&lt;/p&gt;

&lt;h4 id=&#34;seguros&#34;&gt;Seguros:&lt;/h4&gt;

&lt;p&gt;Toda informação será veiculada por HTTPS para impedir o rastreamento e assegurar que o conteúdo não foi adulterado.&lt;/p&gt;

&lt;h3 id=&#34;próximos-passos-com-pwas&#34;&gt;Próximos passos com PWAs&lt;/h3&gt;

&lt;p&gt;Bem, este foi um pedaço do conteúdo com uma pequena introdução sobre PWAs, espero que tenham gostado. Eu achei que o conteúdo estava ficando muito grande então decidi dividir em dois artigos para a leitura não fica maçante, então no próximo teremos os principais aspectos de &lt;strong&gt;como iniciar com Progressive Web Apps?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Web content composed with the &lt;a href=&#34;https://html-online.com/editor/&#34;&gt;online wysiwyg editor&lt;/a&gt;. Please subscribe for a membership to remove promotional messages like the above.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Minha experiência com o CT (Centro de Treinamento)</title>
      <link>http://tableless.com.br/minha-experiencia-com-o-ct-centro-de-treinamento/</link>
      <pubDate>Sun, 22 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/minha-experiencia-com-o-ct-centro-de-treinamento/</guid>
      <description>&lt;p&gt;Meu nome é Danilo, tenho 25 anos, e moro em São Paulo. Antes de conhecer o projeto do CT , eu havia trabalhado pouco tempo como Front-end em uma empresa chamada Athos Informática. Minha experiência não foi uma das melhores, e acabou não dando muito certo. Porém, aconteceu algo muito bacana , quando eu fiquei disponível para o mercado de trabalho.&lt;/p&gt;

&lt;p&gt;Comecei a frequentar todos os Meetup&amp;#8217;s que eu podia, conversei com muitos Dev&amp;#8217;s da comunidade, e coloquei de fato a mão na massa. Certo dia fuçando o GitHub, descobri o projeto do &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;https://medium.com/trainingcenter/hello-world-conhe%C3%A7a-o-centro-de-treinamento-4a47a1230b0c&#34; target=&#34;_blank&#34;&gt;CT(Centro de Treinamento)&lt;/a&gt;   foi tudo muito lindo, era exatamente o que eu precisava, pensava comigo &amp;#8220;porra que oportunidade do caralho de criar algo da hora com alguém da comunidade.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A sementinha do capeta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vontade não me faltava, o que precisava mesmo era de coragem para encarar os fatos. Então, clonei o repositório, baixei pra minha máquina e fiquei lendo e relendo o README do projeto.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A decisão&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;De tanto que eu li, criei coragem e como recomendado, abri uma issue no Github e deixei minha BIO disponível para os mentores do CT.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56933&#34; src=&#34;uploads/2017/01/1-vpeNioZRCJN482Gy1rChhw.png&#34; alt=&#34;&#34; width=&#34;790&#34; height=&#34;517&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A resposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Depois de pouco tempo um cara muito gente boa o &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/9ccc2febef24&#34; target=&#34;_blank&#34;&gt;William Oliveira&lt;/a&gt; — me responde o seguinte:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56935&#34; src=&#34;uploads/2017/01/1-5uF9OA2mlkg_0hyuLd1prQ.png&#34; alt=&#34;&#34; width=&#34;775&#34; height=&#34;144&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Passaram-se 2 dias, e eu já imaginava que ninguém iria me adotar como pupilo. Hahaha!! Foi ai que apareceu um cara que eu já admirava nos bastidores há algum tempo.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Um pupilo foi adotado&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E eis que ele veio, demorou… Mas veio! haha o nome dele? Nada mais nada menos do que o querido &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/7af9a79d81d6&#34; target=&#34;_blank&#34;&gt;Wendell Adriel&lt;/a&gt;. Calorosamente ele disse:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56937&#34; src=&#34;uploads/2017/01/1-k7GFUhcUoRq7X77SaBPa7w.png&#34; alt=&#34;&#34; width=&#34;771&#34; height=&#34;319&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Vocês já devem imaginar como eu fiquei feliz de saber que fui adotado… Hahaha!!  No mesmo dia o Wendell  já foi se socializando via issue mesmo 🙂 veja:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56939&#34; src=&#34;uploads/2017/01/1-fWHtAnVYI2p6SOQQvSii4A.png&#34; alt=&#34;&#34; width=&#34;790&#34; height=&#34;151&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Dai ele me chamou no Slack e começamos a definir nossa rotina.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A primeira abordagem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O primeiro contato foi bem tranquilo, ele pediu para me apresentar, falar sobre quais eram meus objetivos a curto, médio e longo prazo, e assim, definimos juntos uma rotina de criação de um projeto real.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Nosso projeto lindo (Pokémon — busque informações de seu pokémon favorito)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56940&#34; src=&#34;uploads/2017/01/1-zZ3F1dGnARKZpaGpZc-UIA.png&#34; alt=&#34;&#34; width=&#34;1126&#34; height=&#34;585&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O projeto foi arquitetado em cima dos meus objetivos , ele usa as tecnologias:&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li id=&#34;bf67&#34; class=&#34;graf graf--li graf-after--p&#34;&gt;
    Html5
  &lt;/li&gt;
  &lt;li id=&#34;525a&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    Css3
  &lt;/li&gt;
  &lt;li id=&#34;2fab&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    VanilhaJS
  &lt;/li&gt;
  &lt;li id=&#34;40ad&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    Ajax
  &lt;/li&gt;
  &lt;li id=&#34;54bc&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    API Rest
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&#34;0a9d&#34; class=&#34;graf graf--p graf-after--li&#34;&gt;
  O projeto ainda está em construção. No final vamos subir ele no Heroku pra vocês verem como ficou. Temos muito o que acrescentar ainda e nosso objetivo é aplicar mais tecnologia nele.
&lt;/p&gt;

&lt;p id=&#34;c918&#34; class=&#34;graf graf--p graf-after--p&#34;&gt;
  Você deve estar se perguntando mais foi só um projetinho que eles criaram? Nops! Estou empregado também! 🙂 Iniciei minha jornada em uma empresa incrível chamada @Amil , e ainda por cima, trabalho com uma pessoa fera a &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/f94ec1390498&#34; target=&#34;_blank&#34;&gt;Andréa Zambrana&lt;/a&gt;.
&lt;/p&gt;

&lt;p id=&#34;bd60&#34; class=&#34;graf graf--p graf-after--p&#34;&gt;
  Quero agradecer a todos os envolvidos no CT ,  e em especial ao meu Mentor e amigo &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/7af9a79d81d6&#34; target=&#34;_blank&#34;&gt;Wendell Adriel&lt;/a&gt;  pela paciência do dia-dia. 🙂
&lt;/p&gt;

&lt;p id=&#34;87ec&#34; class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  E o que te impede de procurar hoje mesmo um Mentor (a)?
&lt;/p&gt;

&lt;p class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  Você deseja ser um Mentor (a)?
&lt;/p&gt;

&lt;p class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  Não perca tempo muitos pupilos estão esperando por você! xD
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>O que aprendi em 5 dias como Front-end, e uma pergunta: você esta preparado para se tornar um desenvolvedor?</title>
      <link>http://tableless.com.br/o-que-aprendi-em-5-dias-como-front-end--e-uma-pergunta-voce-esta-preparado-para-se-tornar-um-desenvolvedor/</link>
      <pubDate>Fri, 13 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/o-que-aprendi-em-5-dias-como-front-end--e-uma-pergunta-voce-esta-preparado-para-se-tornar-um-desenvolvedor/</guid>
      <description>

&lt;p&gt;Gostaria de partilhar um pouco de minha experiência como front-end. e neste link explico como consegui uma vaga na área front-end. &lt;a href=&#34;https://medium.com/trainingcenter/minha-experi%C3%AAncia-com-o-ct-centro-de-treinamento-ce08e58d247f#.j932om52k&#34;&gt;Minha experiência com o Centro de Treinamento&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tudo no inicio pra mim foi uma aventura, uma história curta e imprevisível, cheia de quebras de paradigmas, dogmas, conceitos e preconceitos. Acho bem claro, que cursos técnicos e faculdades não te preparam para o mercado de trabalho, apenas te dão um norte de como fazer algo e um bocado de coisas mais, pois para se tornar um desenvolvedor existem alguns pontos a serem esclarecidos.&lt;/p&gt;

&lt;p&gt;Por isso, vou listar para vocês algumas coisas que nunca encontrei em post técnico, revista, livro, faculdade, curso técnico ou algo parecido.&lt;/p&gt;

&lt;h4 id=&#34;além-da-tecnologia&#34;&gt;Além da tecnologia&lt;/h4&gt;

&lt;p&gt;Vou te contar um segredo, para se tornar um Desenvolvedor de sucesso, é preciso ir além da Sintaxe. Não basta ter um código bonito, bem indentado, bem organizado, e nem venha me falar de teoria. Eu era um cara que achava que as empresas deviam me valorizar pelo simples fato da teoria estar em minha cabeça.  Hahaha oh ilusão!&lt;/p&gt;

&lt;p&gt;É preciso mostrar/criar algo para que as pessoas acreditem de fato, que você manja das paradas entende!! Algo que as surpreenda, que demonstre o seu potencial,  pois as vezes, elas esquecem que somos seres &lt;strong&gt;humanos&lt;/strong&gt; e criamos coisas para &lt;strong&gt;humanos&lt;/strong&gt; iguais a nós.&lt;/p&gt;

&lt;p&gt;Então, mediante a isto, gostaria de quebrar alguns paradigmas, afim de demonstrar como podemos agir. Se você é uma pessoa que:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Não aceita brincadeiras, apelidos;&lt;/li&gt;
&lt;li&gt;Críticas construtivas;&lt;/li&gt;
&lt;li&gt;Pensamentos diferentes;&lt;/li&gt;
&lt;li&gt;Outras culturas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Você terá grandes problemas, pois a maioria das pessoas que sonham em se tornar um(a) Desenvolvedor(a), criam uma expectativa de que não vão precisar interagir com o próximo. Eu pensava assim, mas mudei de opinião, precisamos do outro, até quando nos prejudicam, pois eles sempre estão nos ensinando algo.&lt;/p&gt;

&lt;p&gt;E tudo, é questão de aprendizado. Basta observar de um ângulo que permita a compreensão, sem que haja a necessidade de um pré-julgamento.&lt;/p&gt;

&lt;h4 id=&#34;quais-são-seus-preconceitos&#34;&gt;&lt;strong&gt;Quais são seus preconceitos?&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Na moral, vai por mim: não adianta escondê-los. Suas ações demonstram quem você é de fato!!&lt;/p&gt;

&lt;p&gt;Nossos preconceitos atrapalham nossas vidas de diversas maneiras. Como você irá se tornar um programador de sucesso, se o preconceito te atrapalhar a pensar fora da caixa, a aprender com as outras pessoas, e a usar aquela lógica de programação que você tanto estuda nos livros?&lt;/p&gt;

&lt;h4 id=&#34;aprenda-a-pensar&#34;&gt;&lt;strong&gt;Aprenda a pensar&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Eu sempre fui um cara que fazia tudo no automático. Hoje, estou tentando respirar fundo, ler algo, pensar sobre isso, para depois realizar alguma ação. Isso ajuda demais!&lt;/p&gt;

&lt;p&gt;Somos pagos pra pensar e assim criar. Não dá pra ser distraído!&lt;/p&gt;

&lt;h4 id=&#34;você-vai-errar-isso-é-fato-aprenda-com-os-erros&#34;&gt;&lt;strong&gt;Você vai errar isso é fato — aprenda com os erros&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;uploads/2016/12/1-k2jCuITW_bheQVa-tMDYtQ.jpeg&#34; alt=&#34;Foco e desafio&#34; width=&#34;700&#34; height=&#34;815&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Outras pessoas já erraram antes de nós, e para aprender é preciso tentar várias vezes. E não há nada de errado em recomeçar de novo.&lt;/p&gt;

&lt;p&gt;Estou estudando uma forma de aprender com os erros, e gostaria de compartilhar com você. Funciona assim:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Entenda que a primeira vez você pode errar;&lt;/li&gt;
&lt;li&gt;Dê um jeito de Documentar em que ponto/linha você errou;&lt;/li&gt;
&lt;li&gt;Refaça a tarefa do ponto que você errou;&lt;/li&gt;
&lt;li&gt;Use um sistema de controle de versão para criar branches;&lt;/li&gt;
&lt;li&gt;Peça feedback’s pros seus colegas de trabalho.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Isso serve também para tarefas não técnicas. Revise seu dia, anote seus erros e aprenda com eles.&lt;/p&gt;

&lt;h4 id=&#34;não-existe-o-pica-das-galaxias&#34;&gt;&lt;strong&gt;Não existe o Pica das Galaxias&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Talvez seja frustante descobrir isso, mas é verdade . Até aquele cara mais impressionante que você conhece, tem seus defeitos, problemas e inseguranças.&lt;/p&gt;

&lt;p&gt;Vai por mim: você sabe de coisas que ele pode não saber. Por isso, é importante um diálogo com pessoas que você admira. Não tem bicho de sete cabeças ,  é só ir lá e trocar uma ideia de boa. 🙂&lt;/p&gt;

&lt;h4 id=&#34;conselho-final&#34;&gt;&lt;strong&gt;Conselho final&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Estude, estude e admita que não sabe de tudo, pois pra que pagar de dono do saber e não passar de 45 Dias numa empresa? Hahaha!!&lt;/p&gt;

&lt;p&gt;Eae, você está preparado(a) para se desconstruir e se tornar melhor no que faz?&lt;/p&gt;

&lt;p&gt;Espero ter ajudado alguém. Se viu algo que não gostou, deixe uma crítica construtiva  para eu poder melhorar.&lt;/p&gt;

&lt;p&gt;Grande Abraço! 😉&lt;/p&gt;

&lt;p&gt;Try the free &lt;a href=&#34;https://html-cleaner.com/css/&#34; rel=&#34;nofollow&#34;&gt;CSS tidy&lt;/a&gt; which lets you beautify stylesheets for your websites.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como organizar e nomear o conteúdo do projeto?</title>
      <link>http://tableless.com.br/como-organizar-e-nomear-o-conteudo-do-projeto/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/como-organizar-e-nomear-o-conteudo-do-projeto/</guid>
      <description>&lt;p&gt;Pode até parecer uma questão simples ou de pouco valor no projeto, mas a verdade é que a forma que você solucione essa ponto será determinante para o sucesso e o card sorting é o melhor caminho!&lt;/p&gt;

&lt;p style=&#34;text-align: center&#34;&gt;
  &lt;strong&gt;O card-sorting é uma técnica usada para descobrir como o usuário classifica determinada informação em sua mente.&lt;/strong&gt;
&lt;/p&gt;

&lt;p&gt;Muitas pessoas acreditam que podem classificar a informação pelos outros pois acham que sabem como será a melhor forma. Algo muito praticado é alguém do projeto definir uma estrutura, apresentar ao cliente, aprovar e tocar o barco! Porém isso é um grande erro e a classificação deve ser semelhante ao que as pessoas, usuário final, acredita ser a ideal e não você, ou seu contratante.&lt;/p&gt;

&lt;p&gt;Um método simples, e extremamente útil, é o &lt;strong&gt;card sorting!&lt;/strong&gt; Pode ser feito sem grandes dificuldades com um pequeno grupo pessoas.&lt;/p&gt;

&lt;p&gt;Executei uma dinâmica recentemente como voluntário do PMI-CE, o qual faço parte, para determinar qual a melhor forma de organizar e nomear as informações que devem conter no novo site do capítulo.&lt;/p&gt;

&lt;p&gt;Cada participante foi convidado de acordo com seu perfil de uso e representam as personas prioritárias do projeto.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56525&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/11/1WhatsApp-Image-2016-11-21-at-22.00.11.jpeg&#34; alt=&#34;1whatsapp-image-2016-11-21-at-22-00-11&#34; width=&#34;1280&#34; height=&#34;720&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Funcionou assim:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cada participante recebeu uma série de pedaços de papeis descrevendo o conteúdo que precisa ser disponibilizado no novo site e pedi que cada pessoa relacionasse os pedaços em conjuntos, criando categorias.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Foi estabelecido um time-box de 15 minutos para que todos pudessem formar seus conjuntos.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Após isso abrimos uma discussão sobre a classificação que cada pessoa determinou para cada item. As escolhas de cada pessoa foram cruzadas e amplamente discutidas até adquirirem a concordância do grupo sobre como cada item deveria ser agrupado.&lt;/p&gt;

&lt;p&gt;Enquanto ocorriam as conversas tive a oportunidade de ouvir e aprender sobre o que cada pessoa entende a respeito de cada item e categoria. Além da opinião pessoal de cada um sobre a melhor forma de classificar tudo. É aqui que está o principal valor deste teste.&lt;/p&gt;

&lt;p&gt;Ao fim do teste um relatório foi elaborado e um organograma com a taxonomia sugerida pelo grupo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Em resumo, estas seriam as etapas:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Defina as personas do projeto e convide um representante de cada perfil para participar.&lt;/li&gt;
&lt;li&gt;Cada pessoa recebe uma serie de papeis embaralhados que descrevem os conteúdos.&lt;/li&gt;
&lt;li&gt;Então deve agrupar os papeis os quais acredita que os conteúdos tem alguma semelhança.&lt;/li&gt;
&lt;li&gt;Cada grupo deve ser nomeado, de acordo com a visão de cada pessoa.&lt;/li&gt;
&lt;li&gt;As escolhas são registradas e discutidas.&lt;/li&gt;
&lt;li&gt;Encontramos uma classificação final baseado no cruzamento dos resultados.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Em pouco mais de uma hora encontramos uma taxonomia que foi consenso entre todos os participantes. Logo após discutimos também sobre a nomenclatura e classificação de cada item e grupo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p style=&#34;text-align: center&#34;&gt;
  &lt;strong&gt;Taxonomia (do grego antigo τάξις táxis, arranjo e nomia νομία, método) é a disciplina acadêmica que define os grupos de organismos biológicos, com base em características comuns e dá nomes a esses grupos.&lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;É importante falar que nada é infalível e mesmo aplicando a técnica as coisas podem mudar. O projeto deve ser analisado constantemente e ajustes baseados no comportamento de uso das pessoas sempre serão necessários e bem vindos.&lt;/p&gt;

&lt;p&gt;Como entregável temos a arquitetura do projeto já nomeada, agrupada e classificada, conforme o resultado da atividade. Uma ferramenta muito útil para ajudar nisso, e free, é o xMind.&lt;/p&gt;

&lt;p&gt;Card sorting é uma atividade extremamente simples mas de grande valor ao projeto que ajuda a evitar diversos problemas de usabilidade, experiência de usuário, desperdício de tempo e dinheiro.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como camuflar seu ip like a ninja</title>
      <link>http://tableless.com.br/como-camuflar-seu-ip-like-ninja/</link>
      <pubDate>Sun, 04 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/como-camuflar-seu-ip-like-ninja/</guid>
      <description>

&lt;p&gt;Temos algumas formas de camuflar ip, alguns programas que nos auxiliam a fazer isso de forma fácil. A um tempo atrás eu estava usando o sistema operacional &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;WHONIX&lt;/strong&gt; para poder fazer esse tunelamento pra mim, ele é realmente eficaz e eu não precisei me preocupar muito com detalhes, porém eu testei algumas outras opções e tiveram duas que eu realmente gostei, uma é o &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;PROXYCHAINS&lt;/strong&gt; e a outra o &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;JONDO&lt;/strong&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://anonymous-proxy-servers.net/en/jondo.html&#34;&gt;https://anonymous-proxy-servers.net/en/jondo.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://proxychains.sourceforge.net&#34;&gt;http://proxychains.sourceforge.net&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Ambas tem seus prós e contras obviamente, achei o &lt;strong&gt;proxychains&lt;/strong&gt; com mais liberdade para trabalhar em diversas áreas e o &lt;strong&gt;jondo mais eficaz no que se propõe a fazer, &lt;/strong&gt;porém um pouco mais limitado.&lt;/p&gt;

&lt;p&gt;Vou ensinar as duas formas ok? Deste modo você pode fazer testes com as duas e escolher qual é a melhor para &lt;strong&gt;o seu propósito&lt;/strong&gt;, vamos lá:&lt;/p&gt;

&lt;h3 id=&#34;proxychains&#34;&gt;ProxyChains&lt;/h3&gt;

&lt;p&gt;O &lt;strong&gt;proxychains&lt;/strong&gt; é um programa que faz o roteamento de suas requisições através de &lt;strong&gt;proxys&lt;/strong&gt; que você escolhe por uma lista &lt;strong&gt;que você mesmo faz&lt;/strong&gt;, porém vamos fazer um pouco diferente usando o &lt;strong&gt;tor router&lt;/strong&gt; para direcionar as requisições diretamente para porta do tor, fazendo com que tudo passe pelo router do tor antes de ir para web.&lt;/p&gt;

&lt;p&gt;Eu não uso o &lt;strong&gt;kali linux&lt;/strong&gt;, porém baixei todos os repositórios dele para o ubuntu com o “&lt;strong&gt;KATOOLIN&lt;/strong&gt;” ( &lt;a href=&#34;https://github.com/LionSec/katoolin&#34; rel=&#34;nofollow&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/LionSec/katoolin&#34;&gt;https://github.com/LionSec/katoolin&lt;/a&gt;&lt;/strong&gt;&lt;/a&gt; ), á partir daí instalei o &lt;strong&gt;proxychains&lt;/strong&gt; na minha maquina, caso você use o kali, os repositórios que vamos usar já vem na distro por default então é só instalar.&lt;/p&gt;

&lt;p&gt;Vamos instalar o &lt;strong&gt;tor&lt;/strong&gt; e o &lt;strong&gt;proxychains&lt;/strong&gt; para que eles trabalhem juntos:&lt;/p&gt;

&lt;pre&gt;sudo apt-get install tor
sudo apt-get install proxychains&lt;/pre&gt;

&lt;p&gt;Feito a instalação a configuração é muito fácil, vamos precisar abrir o arquivo de configurações do proxychains, que é o “/etc/proxychains.conf”. Vamos abrir ele com o nano:&lt;/p&gt;

&lt;pre&gt;sudo nano /etc/proxychains.conf&lt;/pre&gt;

&lt;p&gt;Com o arquivo aberto vamos comentar a linha “strict_chain” e descomentar a linha “dynamic_chain”, e no final do arquivo vamos adicionar a seguinte linha:&lt;/p&gt;

&lt;pre&gt;socks5 127.0.0.1 9050&lt;/pre&gt;

&lt;p&gt;Vamos salvar o arquivo e podemos iniciar o services do Tor para depois podermos começar com o proxychains:&lt;/p&gt;

&lt;pre&gt;sudo service tor start&lt;/pre&gt;

&lt;p&gt;Agora para fazermos com que o tunelamento funcione com o proxychains é só adicionar o comando “proxychains” antes do programa que você quer utilizar, exemplo:&lt;/p&gt;

&lt;pre&gt;sudo proxychains firefox&lt;/pre&gt;

&lt;p&gt;Entre em algum site de consulta de ip e veja seu ip camuflado com sucesso utilizando o tor e o proxychains ;D&lt;/p&gt;

&lt;h3 id=&#34;jondo&#34;&gt;JonDo&lt;/h3&gt;

&lt;p&gt;Você pode usar JonDonym para navegar anônimo, e-mail anônimo, chats e outros fins. &lt;strong&gt;JonDo&lt;/strong&gt; , anteriormente JAP, é uma ferramenta de proxy IP Changer. Ele atua como um proxy e irá encaminhar o tráfego de suas aplicações de internet criptografadas, e por isso vai esconder o seu endereço IP. É uma aplicação Java, open source e você pode baixá-lo gratuitamente.&lt;/p&gt;

&lt;p&gt;Com o &lt;strong&gt;JonDo&lt;/strong&gt; é o mesmo esquema, caso tenha o &lt;strong&gt;kali linux&lt;/strong&gt; você só vai precisar instalar pelo repositório, caso use outra distro recomendo o &lt;strong&gt;KATOOLIN&lt;/strong&gt; para baixar os repositórios do kali e assim instalar as aplicações dele.&lt;/p&gt;

&lt;p&gt;Para instalação do &lt;strong&gt;JonDo&lt;/strong&gt; e do &lt;strong&gt;JonDoFox&lt;/strong&gt; ( que é um &lt;strong&gt;firefox modificado &lt;/strong&gt;para não termos risco de sermos descobertos, ele desabilita o javascript e muitas coisas que podem dar informações sobre nossa navegação ) vamos precisar instalar o &lt;strong&gt;java jre e algumas &lt;/strong&gt;&lt;strong&gt;dependências&lt;/strong&gt;, e claro o jondo e jondofox que baixamos no site oficial indicado acima:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;sudo aptitude install default-jre java-wrappers firefox
sudo dpkg -i jondo_all.deb
sudo dpkg -i jondofox-en_all.deb&lt;/pre&gt;

&lt;p&gt;Com o &lt;strong&gt;JonDo&lt;/strong&gt; e o &lt;strong&gt;JonDoFox&lt;/strong&gt; instalados na minha maquina vou entrar no terminal e dar um “&lt;strong&gt;sudo jondo&lt;/strong&gt;” assim, vamos inicializar a aplicação do &lt;strong&gt;JonDo&lt;/strong&gt;, lá podemos ver algumas opções de configuração e tudo que o programa oferece, veja:&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*ThtPBRe1tD7aqjiFMEWvlQ.png&#34; alt=&#34;&#34; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Com o &lt;strong&gt;JonDo&lt;/strong&gt; rodando, podemos agora inicializar o &lt;strong&gt;JonDoFox&lt;/strong&gt;, que vai ser nosso &lt;strong&gt;navegador anonimo&lt;/strong&gt; trabalhando junto ao &lt;strong&gt;JonDo&lt;/strong&gt;, vamos inicializar e entrar em algum site de consulta de ip para nos localizarmos, veja:&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*4cjyOlP2MnoNHbnyuEhsbA.png&#34; alt=&#34;&#34; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Por aí já da para vermos que estamos utilizando o &lt;strong&gt;JonDo&lt;/strong&gt; corretamente, o site de status deles nos da essa resposta assim que entramos para fazer o teste.&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*1qhJ-OTxjcv2ritD_DKjSg.png&#34; alt=&#34;&#34; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;É bem legal o jeito que ele dá o &lt;strong&gt;status completo do seu anonimato&lt;/strong&gt;, este site é próprio do &lt;strong&gt;JonDo&lt;/strong&gt; para testar seu anonimato. Acho importante ser a &lt;strong&gt;primeira coisa que você deve fazer&lt;/strong&gt; ao iniciar o serviço.&lt;/p&gt;

&lt;p&gt;Espero que tenham curtido o post, qualquer dúvida só comentar ai em baixo! Abraços e até o próximo post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adicionando SSL no NGINX com o Let’s Encrypt</title>
      <link>http://tableless.com.br/adicionando-ssl-no-nginx-com-o-lets-encrypt/</link>
      <pubDate>Fri, 02 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/adicionando-ssl-no-nginx-com-o-lets-encrypt/</guid>
      <description>

&lt;p&gt;O &lt;strong&gt;Let&amp;#8217;s Encrypt&lt;/strong&gt; é uma forma fácil, automatizada e gratuita de se inserir &lt;strong&gt;&lt;a href=&#34;https://www.1and1.com/certificado-ssl&#34;&gt;SSL&lt;/a&gt;&lt;/strong&gt; em uma aplicação &lt;em&gt;web&lt;/em&gt;. A utilização do &lt;strong&gt;SSL&lt;/strong&gt; é bem importante quando se há autenticação, tráfego de dados privados ou até mesmo para ser melhor colocado no &lt;em&gt;ranking&lt;/em&gt; do &lt;em&gt;Google&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Neste artigo vou demonstrar como gerar e adicionar o &lt;strong&gt;SSL&lt;/strong&gt; no &lt;strong&gt;NGINX&lt;/strong&gt; com a ferramenta &lt;strong&gt;Let&amp;#8217;s Encrypt&lt;/strong&gt;. Irei utilizar o sistema operacional &lt;em&gt;Debian&lt;/em&gt; para executar os comandos, mas estes podem ser facilmente modificados para serem executados em qualquer &lt;em&gt;distro&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;instalandooletsencrypt&#34;&gt;Instalando o Let&amp;#8217;s Encrypt:&lt;/h4&gt;

&lt;p&gt;Clone o projeto no &lt;em&gt;github&lt;/em&gt; e redirecione para o caminho &lt;strong&gt;/opt/letsencrypt&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt
&lt;/pre&gt;

&lt;p&gt;É necessário ter o &lt;em&gt;git&lt;/em&gt; instalado, caso não tenha:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ sudo apt-get install git
&lt;/pre&gt;

&lt;h4 id=&#34;preparandoonginxparaservalidado&#34;&gt;Preparando o NGINX para ser validado:&lt;/h4&gt;

&lt;p&gt;O &lt;strong&gt;Let&amp;#8217;s Encrypt&lt;/strong&gt; valida se o domínio realmente é seu, então para isso é necessário adicionar uma regra no seu &lt;em&gt;site&lt;/em&gt; do &lt;strong&gt;NGINX&lt;/strong&gt;. Adicione o &lt;strong&gt;location&lt;/strong&gt; &lt;em&gt;^/.well-known&lt;/em&gt; no seu site &lt;strong&gt;(/etc/nginx/sites-enabled/yoursite)&lt;/strong&gt;, como por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;server {  
    listen 80;
    server_name your-domain.com.br;

    location ~ ^/.well-known {
        root /var/www/yoursite;
    }

    location / {
        return 301 https://www.$server_name$request_uri;
    }
}
&lt;/pre&gt;

&lt;p&gt;Este &lt;strong&gt;location&lt;/strong&gt; será requisitado pelo &lt;strong&gt;Let&amp;#8217;s Encrypt&lt;/strong&gt; para confirmar sua identidade. Lembrando que você deve substituir o &lt;strong&gt;root&lt;/strong&gt; e o &lt;strong&gt;server_name&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Após adicionar o &lt;em&gt;well-known&lt;/em&gt;, reinicie o seu &lt;strong&gt;NGINX&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ sudo systemctl restart nginx
&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;É bom lembrar que o seu domínio deve estar apontando para sua aplicação para obter sucesso com o &lt;strong&gt;SSL&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;gerandoosslcomoletsencrypt&#34;&gt;Gerando o SSL com o Let&amp;#8217;s Encrypt:&lt;/h4&gt;

&lt;p&gt;Substitua no comando abaixo, o caminho &lt;strong&gt;/var/www/yoursite&lt;/strong&gt; pelo diretório raiz do seu site no &lt;strong&gt;NGINX&lt;/strong&gt;, e também o &lt;strong&gt;yourdomain.com.br&lt;/strong&gt; e &lt;strong&gt;www.yourdomain.com.br&lt;/strong&gt; pelo seu domínio:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ sudo /opt/letsencrypt/letsencrypt-auto certonly -a webroot --webroot-path=/var/www/yoursite -d yourdomain.com.br -d www.yourdomain.com.br
&lt;/pre&gt;

&lt;p&gt;Neste processo irá ser solicitado seu &lt;em&gt;e-mail&lt;/em&gt;, para caso necessite da recuperação de seu certificado.&lt;/p&gt;

&lt;h4 id=&#34;adicionandoocertificadoemsuaaplicao&#34;&gt;Adicionando o certificado em sua aplicação:&lt;/h4&gt;

&lt;p&gt;Após o certificado ser gerado com sucesso, altere novamente o seu arquivo de regras do seu site &lt;strong&gt;(/etc/nginx/sites-enabled/yoursite)&lt;/strong&gt;, adicionando mais um &lt;strong&gt;server&lt;/strong&gt;, desta vez o de &lt;strong&gt;ssl&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;server {  
    listen 443 ssl;
    server_name yourdomain.com.br www.yourdomain.com.br;

    location / {
        proxy_pass http://localhost:8080;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }

    location ~ ^/.well-known {
        root /var/www/yoursite;
    }

    ssl_certificate /etc/letsencrypt/live/yourdomain.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com.br/privkey.pem;
}
&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Lembrando que você deve alterar o &lt;strong&gt;location /&lt;/strong&gt; com as configurações específicas da sua aplicação web.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Reinicie novamente o seu &lt;strong&gt;NGINX&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ sudo systemctl restart nginx
&lt;/pre&gt;

&lt;p&gt;Entre em seu domínio utilizando o &lt;strong&gt;https&lt;/strong&gt; e veja se o processo ocorreu com sucesso.&lt;/p&gt;

&lt;h4 id=&#34;conferindoaqualidadedoseussl&#34;&gt;Conferindo a qualidade do seu SSL:&lt;/h4&gt;

&lt;p&gt;Altere &lt;em&gt;example.com&lt;/em&gt; pelo seu domínio:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=example.com&#34;&gt;https://www.ssllabs.com/ssltest/analyze.html?d=example.com&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;melhorandoaqualidadedoseucertificado&#34;&gt;Melhorando a qualidade do seu certificado:&lt;/h4&gt;

&lt;p&gt;É importante validar as cifras utilizadas, limitar a versão do protocolo &lt;strong&gt;SSL&lt;/strong&gt;, entre outras coisas. Para isso, recomendo a leitura do seguinte tópico na wiki da Mozilla, &lt;a href=&#34;https://wiki.mozilla.org/Security/Server_Side_TLS&#34;&gt;Server Side TLS&lt;/a&gt;. Existe também o &lt;a href=&#34;https://mozilla.github.io/server-side-tls/ssl-config-generator&#34;&gt;Mozilla SSL Configuration Generator&lt;/a&gt;, um gerador de configuração &lt;strong&gt;SSL&lt;/strong&gt; para diversos servidores de aplicação.&lt;/p&gt;

&lt;h4 id=&#34;renovandoseucertificadocomcrontab&#34;&gt;Renovando seu certificado com crontab:&lt;/h4&gt;

&lt;p&gt;O certificado gerado é válido por 3 meses, para facilitar a renovação, você pode criar um &lt;em&gt;cronjob&lt;/em&gt; para fazer este trabalho:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ crontab -e
&lt;/pre&gt;

&lt;p&gt;Adicione no final do arquivo:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;0 0 1 */2 * /opt/letsencrypt/letsencrypt-auto renew --quiet --no-self-upgrade  
0 0 1 */2 * systemctl reload nginx  
&lt;/pre&gt;

&lt;h3 id=&#34;concluindo&#34;&gt;Concluindo:&lt;/h3&gt;

&lt;p&gt;Neste artigo foi demonstrando a geração do &lt;strong&gt;SSL&lt;/strong&gt; para o &lt;strong&gt;NGINX&lt;/strong&gt;, mas este mesmos passos podem ser facilmente executados em qualquer servidor de aplicação, com algumas modificações. Lembrando que existem outros comandos específicos da ferramenta &lt;strong&gt;Let&amp;#8217;s Encrypt&lt;/strong&gt;, como &lt;strong&gt;letsencrypt-apache&lt;/strong&gt; que faz todo o trabalho pra você no caso do &lt;em&gt;Apache&lt;/em&gt;, mas tentei demonstrar a forma genérica, que pode servir para outros servidores.&lt;/p&gt;

&lt;h3 id=&#34;referências-e-links&#34;&gt;Referências e Links:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://letsencrypt.org&#34;&gt;https://letsencrypt.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/certbot/certbot&#34;&gt;https://github.com/certbot/certbot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nginx.com/blog/free-certificates-lets-encrypt-and-nginx&#34;&gt;https://www.nginx.com/blog/free-certificates-lets-encrypt-and-nginx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;O certificado &lt;a href=&#34;https://www.1and1.com/certificado-ssl&#34;&gt;SSL&lt;/a&gt; também pode ser contratado na &lt;a href=&#34;https://www.1and1.com/&#34;&gt;1&amp;amp;1&lt;/a&gt; ou Certisign.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Features que sua API REST precisa ter desde o início</title>
      <link>http://tableless.com.br/features-que-sua-api-rest-precisa-ter-desde-o-inicio/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/features-que-sua-api-rest-precisa-ter-desde-o-inicio/</guid>
      <description>

&lt;p&gt;Eu tenho trabalhado com dados suavemente flutuando através do protocolo http por um tempo e agora eu tenho esse sentimento altruísta de que eu posso contribuir com os desenvolvedores mais jovens com algumas histórias sobre os desafios que enfrentei durante a minha jornada.&lt;/p&gt;

&lt;p&gt;Este artigo basicamente tem o objetivo de listar e discutir sobre alguns pontos importantes que sua API, possivelmente, poderia abraçar desde o início do projeto, a fim de acelerar o processo de desenvolvimento para todos em sua equipe.&lt;/p&gt;

&lt;h2 id=&#34;autenticação-e-autorização&#34;&gt;Autenticação e Autorização&lt;/h2&gt;

&lt;p&gt;Se você se preocupa com quem vai acessar seus endpoints, é necessário prestar atenção sobre este tópico. Existem algumas especificações conhecidas para lidar com este assunto, principalmente &lt;a href=&#34;https://jwt.io/&#34;&gt;JWT&lt;/a&gt;, &lt;a href=&#34;https://oauth.net/&#34;&gt;OAuth&lt;/a&gt; e &lt;a href=&#34;https://oauth.net/2/&#34;&gt;OAuth2&lt;/a&gt;. Estas abordagens irão abranger a maioria dos cenários em seus aplicativos, mas às vezes você será desafiado a criar um novo tipo de camada de segurança para atender algum requisito específico, neste caso, tente não reinventar a roda e adapte suas necessidades em um desses listados.&lt;/p&gt;

&lt;h2 id=&#34;query-filtering-sorting-e-pagination&#34;&gt;Query, Filtering, Sorting e Pagination&lt;/h2&gt;

&lt;p&gt;Assim que o seu banco de dados cresce, você vai começar a notar que alguns recursos estão demorando muito para serem recuperados. As abordagens comuns para esta situação são: armazenar em cache seus objetos (próximo tópico) e / ou criar a paginação / filtragem. Se você pode obter o seu recurso com algo como:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;shiny.api.com/resources?query[type=2]&amp;limit=5&amp;start=1&amp;order=[name]&lt;/pre&gt;

&lt;p&gt;&amp;#8230;seus clients serão capazes de selecionar apenas o que eles realmente precisam para processar uma página ou tela específica. É bom para dar uma certa autonomia para seus consumidores. Próximo nível deste assunto é &lt;a href=&#34;http://graphql.org/learn/&#34;&gt;GraphQL&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;cache&#34;&gt;Cache&lt;/h2&gt;

&lt;p&gt;Uma boa maneira de recuperar seus recursos incrivelmente rápido é desenvolver alguma estratégia de cache. O custo de suas requisições serão menores uma vez que seus dados estarão prontos para serem consumidos em um banco de dados in-memory. Com algum esforço você pode lidar com isso usando &lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt; ou &lt;a href=&#34;https://memcached.org/&#34;&gt;Memcached&lt;/a&gt;. Boa sorte com sua expiração de cache. Confira algumas reflexões sobre este tema com o &lt;a href=&#34;http://blog.remarkablelabs.com/2012/12/russian-doll-caching-cache-digests-rails-4-countdown-to-2013&#34;&gt;Russian Doll Caching&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;wrappers-e-summarized-fields&#34;&gt;Wrappers e Summarized Fields&lt;/h2&gt;

&lt;p&gt;Às vezes, você precisará fornecer alguns campos calculados &amp;#8211; ou quaisquer dados agregados em geral &amp;#8211; em suas respostas e para esse cenário, posso sugerir-lhe montar algo nessa linha:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;{
  &#34;summay&#34;: {
    &#34;total&#34;: 2
    &#34;averageAge&#34;: 22
  },
  &#34;data&#34;:[
  {
    &#34;name&#34;: &#34;John&#34;,
    &#34;age&#34;: 22
  },
  {
    &#34;name&#34;: &#34;Mary&#34;,
    &#34;age&#34;: 22
  }
  ]
}
&lt;/pre&gt;

&lt;h2 id=&#34;hateos&#34;&gt;HATEOS&lt;/h2&gt;

&lt;p&gt;HATEOAS significa &lt;em&gt;Hypermedia as the application state of the engine&lt;/em&gt;. É uma abordagem que permite que os clientes interpretem de forma autônima e dinâmica o estado atual de um recurso e as transições que podem ser iniciados decorrente deste mesmo estado.&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;{
  &#34;id&#34;: 276,
  &#34;amount&#34;: 90.00,
  &#34;links&#34;: [
  {
    &#34;type&#34;: &#34;orders&#34;,
    &#34;rel&#34;: &#34;self&#34;,
    &#34;href&#34;: &#34;/orders/ 276&#34;
  },
  {
    &#34;type&#34;: &#34;customer&#34;,
    &#34;rel&#34;: &#34;order&#39;s customer&#34;,
    &#34;href&#34;: &#34;/orders/276/customers&#34;
  }
  ]
}
&lt;/pre&gt;

&lt;p&gt;Sobre o JSON acima, você pode tirar as seguintes conclusões:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dentro do array &amp;#8220;links&amp;#8221; são todas as &amp;#8216;transições&amp;#8217; possíveis com o recurso, neste caso, podem acessar o cliente que criou as ordens com o URI /orders/276/customers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rel:auto&lt;/strong&gt; significa que esta URI é a referência do estado atual, neste caso, a ordem com ID 276. &lt;strong&gt;rel&lt;/strong&gt;, em geral, representa a relação entre a ligação com o recurso atual.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt; indica o tipo de recurso que é o link em questão.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ao padronizar seus serviços RESTful usando HATEOAS você permite que os clientes usem os recursos de maneiras mais fáceis, afinal de contas, as possibilidades de navegação entre os estados serão listadas em cada hit em seus recursos.&lt;/p&gt;

&lt;p&gt;Conforme descrito em um &lt;a href=&#34;http://martinfowler.com/articles/richardsonMaturityModel.html&#34;&gt;post&lt;/a&gt; de Martin Fowler, HATEOAS em sua API é o último passo para atingir a &amp;#8216;Glória de REST&amp;#8221;, o estado da arte.&lt;/p&gt;

&lt;h2 id=&#34;message-queue&#34;&gt;Message Queue&lt;/h2&gt;

&lt;p&gt;Aposto que você tem algumas rotas em suas APIs que são síncronas mas não precisam necessariamente ser. Alguns casos de uso para uso de fila de mensagens são: enviar e-mails após alguma ação, redimensionamento de imagem, codificação de vídeo, etc. Uma prática comum para esta situação é colocar essas ações em uma fila de mensagens para serem processadas posteriormente de forma assíncrona. Dê uma olhada na &lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;RabbitMQ&lt;/a&gt; ou &lt;a href=&#34;https://kafka.apache.org/&#34;&gt;Kafka&lt;/a&gt;, ambas são grandes soluções.&lt;/p&gt;

&lt;p&gt;&amp;#8211;&lt;/p&gt;

&lt;p&gt;É isso aí. Pelo menos para mim estes são os principais aspectos que eu vi nos últimos anos no desenvolvimento de novos apis http/rpc/rest. Se você acha que existem alguns outros pontos importantes para mencionar, por favor deixe nos comentários e conversamos sobre 🙂&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Web Semântica na Prática Parte 1: A Web do futuro (ou quase isso)</title>
      <link>http://tableless.com.br/web-semantica-na-pratica-parte-1-web-do-futuro-ou-quase-isso/</link>
      <pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/web-semantica-na-pratica-parte-1-web-do-futuro-ou-quase-isso/</guid>
      <description>

&lt;p&gt;É possível conferir aqui mesmo no Tableless alguns bons artigos introdutórios sobre Web Semântica (veja &lt;a href=&#34;http://tableless.com.br/a-web-semantica/&#34;&gt;aqui&lt;/a&gt; e &lt;a href=&#34;http://tableless.com.br/semantica-padroes-e-o-que-voce-tem-a-ver-com-isto/&#34;&gt;aqui&lt;/a&gt;), os quais eu recomendo a leitura caso você nunca tenha ouvido falar sobre o assunto.&lt;/p&gt;

&lt;p&gt;A intenção dessa sequência de posts que nomeei como “Web Semântica na Prática” é destrinchar esse assunto de modo aprofundado, apresentando os conceitos e exemplificando-os na prática. O tutorial completo será composto de 9 posts que irão reunir, ao final, um guia bastante abrangente sobre os conceitos, padrões, tecnologias, linguagens e ferramentas utilizadas na criação de aplicações para Web Semântica. Preparados?&lt;/p&gt;

&lt;h2 id=&#34;apresentando-a-web-do-futuro&#34;&gt;Apresentando a Web do Futuro&lt;/h2&gt;

&lt;p&gt;Caso você já tenha lido os textos introdutórios linkados no inicio desse texto, você tem uma noção do que é a Web Semântica (carinhosamente chamada de SemWeb pelos íntimos e também reconhecida pela alcunha de Web 3.0, mas você pode usar a buzzword que mais lhe agradar), mas independente de ter lido ou não, vamos apresentar rapidamente o que é esse conjunto de conceitos, pelas palavras de seus próprios criadores, Tim Berners-Lee, James Hendler e Ora Lassila:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“A Web Semântica não é uma Web separada mas sim uma extensão da Web atual onde a informação possui significado, permitindo que computadores e pessoas trabalhem em cooperação&amp;#8221;&lt;/p&gt;

&lt;p&gt;— Tradução livre a partir do artigo &amp;#8220;&lt;a href=&#34;http://www.scientificamerican.com/article/the-semantic-web/&#34;&gt;The Semantic Web&amp;#8221;&lt;/a&gt;* publicado em 2001 na Scientific American&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;É praticamente de sabedoria popular que a Web está inundada de dados e que esse volume só cresce a cada dia que passa, mas também é fato que esses dados não possuem um significado claro e estabelecido, impossibilitando sua utilização de modo integrado sem conflitos. Determinar esse significado e converter esses dados em informação aproveitável por qualquer agente (humano ou computadorizado) é o objetivo maior da Web Semântica.&lt;/p&gt;

&lt;p&gt;De certa forma, a Web Semântica é uma visão do que a Web será no futuro, onde agentes computadorizados poderão enfim compreender o significado dos dados da mesma maneira que nós compreendemos e atuar sobre eles, executando tarefas repetitivas e auxiliando os usuários das mais diversas maneiras.&lt;/p&gt;

&lt;p&gt;É importante notar que, sendo uma “previsão”, a Web Semântica não é um padrão de mercado ainda, logo é bom estar ciente de que todos os padrões, formatos e linguagens utilizadas para criar aplicações nesse ambiente hoje em dia talvez não sejam nunca usados em larga escala no &amp;#8220;mundo real&amp;#8221;. De forma sucinta, &lt;strong&gt;a&lt;/strong&gt; &lt;strong&gt;Web Semântica é o futuro da Web, mas o modo como vemos a implementação dela hoje pode não ser a mesma quando este futuro chegar&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Você pode estar se perguntando: Porque então estudar esses conceitos se eles podem nem chegar a ser utilizados?&lt;/p&gt;

&lt;p&gt;O motivo é simples: embora não seja possível afirmar de forma categórica que a Web Semântica será implementada desse modo, isso é extremamente provável.&lt;/p&gt;

&lt;p&gt;Veja, o termo foi cunhado em &lt;sup&gt;2000&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2001&lt;/sub&gt; juntamente com as possíveis tecnologias e padrões para sua implementação. As ideias iniciais foram revisadas em 2006 e em 2011 (veja “&lt;a href=&#34;http://ieeexplore.ieee.org/abstract/document/1637364/?reload=true&#34;&gt;The Semantic Web Revisited&lt;/a&gt;”* e &amp;#8220;&lt;a href=&#34;http://dl.acm.org/citation.cfm?id=1988690&#34;&gt;The Semantic Web 10th year update&lt;/a&gt;&amp;#8220;*) e a base tecnológica para Web Semântica é composta por padrões que estão por aí desde sempre e são bem conhecidas por todos: basicamente XML, URI e Unicode.&lt;/p&gt;

&lt;p&gt;Soma-se a isso o amadurecimento desses conceitos nos 15 anos que separam sua criação da Web atual, e então é possível notar de forma clara que a Web está evoluindo e precisando dar seu próximo passo para algo ao menos próximo daquilo foi proposto como sendo a Web Semântica.&lt;/p&gt;

&lt;p&gt;Resumindo, apesar de ser uma previsão, as tecnologias estão aí, já estão sendo usadas e, mesmo não sendo um padrão de mercado, elas funcionam e podem guiar o desenvolvimento de aplicações Web em alguns anos. É bom estar preparado.&lt;/p&gt;

&lt;p&gt;Se isso não bastar para te convencer a continuar lendo essa série de posts, creio que possa ser interessante conhecer todos os conceitos por trás dessa proposta pois, sendo eles baseados em conceitos sólidos, aplicá-los na prática pode ser útil para uma completa compreensão da Web como um todo, seja para usá-los hoje ou em qualquer momento no futuro.&lt;/p&gt;

&lt;h2 id=&#34;as-camadas-da-web-semântica&#34;&gt;As camadas da Web Semântica&lt;/h2&gt;

&lt;p&gt;O primeiro passo para estudar a Web Semântica é ter uma visão abrangente de como uma aplicação é arquitetada nesse contexto, incluindo os padrões e tecnologias utilizados. Para este fim, nada melhor que um desenho. ;-P&lt;/p&gt;

&lt;p&gt;A “Pirâmide da Web Semântica” foi descrita ainda em 2001 e segue sendo um dos diagramas mais utilizados para explicar este universo de forma sucinta. Vale notar que esse diagrama possui diversas versões e modificações realizadas por profissionais de diferentes áreas (Ciência da Computação, Ciência da Informação,Biblioteconomia, ente outros), pois existem diversas propostas sobre a organização da Web Semântica, mas a versão que você vê abaixo é uma adaptação (traduzida) da figura original de 2001 que é inclusive a versão utilizada pelo W3C atualmente, com apenas um ou dois adendos que achei necessários.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;wp-image-56086 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/camadasWebSem.png&#34; alt=&#34;camadas_web_semantica&#34; width=&#34;484&#34; height=&#34;334&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A ideia desta estrutura é definir como implementar a Web Semântica, sendo que cada camada é complementar a camada imediatamente inferior, definindo as linguagens e conceitos chave que devem ser utilizados em tal implementação.&lt;/p&gt;

&lt;p&gt;É muito importante ressaltar que o termo Web Semântica é como “guarda-chuva” de conceitos, técnicas e padrões, conforme pode ser observado na figura, e não uma conjunto indissociável de linguagens e frameworks que devem ser utilizados de modo obrigatório. Exatamente por esse motivo que a maior parte das aplicações existentes hoje em dia não utiliza todas as camadas, mas sim apenas uma parte delas.&lt;/p&gt;

&lt;p&gt;Embora não tenha nada de realmente prático nesse primeiro post, imagino que para um texto introdutório chegamos a um ponto interessante e espero que tenha atiçado a curiosidade de cada um para investir um pouco de tempo estudando o que foi apresentado aqui (e também o que será apresentado nos próximos posts) para contribuir para a Web do futuro ou pelo menos chegar perto disso.&lt;/p&gt;

&lt;p&gt;No próximo capítulo: “IRI, URI, URL, URN e como identificar TUDO na Web”.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando aplicações portáveis entre diferentes SGBDs usando PDO(PHP Data Objects)</title>
      <link>http://tableless.com.br/criando-aplicacoes-portaveis-entre-diferentes-sgbds-usando-pdophp-data-objects/</link>
      <pubDate>Mon, 26 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/criando-aplicacoes-portaveis-entre-diferentes-sgbds-usando-pdophp-data-objects/</guid>
      <description>&lt;p&gt;Quero apresentar nesse artigo as principais funcionalidades do PDO. PDO é uma biblioteca que implementa abstração ao acesso dos dados, ou seja, ela utiliza um driver específico, para cada SGBD (Sistema Gerenciador de Banco de Dados), tornando possível a portabilidade da base de dados de sua aplicação, sem que a mesma sofra danos ou que você passe horas e horas reescrevendo linhas e mais linhas de código.&lt;/p&gt;

&lt;p&gt;O primeiro passo é habilitar o driver do PDO no php.ini retirando o &amp;#8220;;&amp;#8221; da sua frente;&lt;/p&gt;

&lt;p&gt;No Windows:&lt;/p&gt;

&lt;pre&gt;extension=php_pdo.dll
extension=php_pdo_mysql.dll&lt;/pre&gt;

&lt;p&gt;No Linux:&lt;/p&gt;

&lt;pre&gt;extension=pdo.so
extension=pdo_mysql.so
&lt;/pre&gt;

&lt;p&gt;Consideremos o seguinte banco de dados:&lt;/p&gt;

&lt;pre class=&#34;lang-sql&#34;&gt;create database livraria;
use livraria;
create table livros(
id int not null auto_increment,
titulo varchar(75) not null,
preco decimal(10,2) not null,
estoque int not null,
PRIMARY KEY (id));
&lt;/pre&gt;

&lt;p&gt;Estabelecemos a conexão com o Banco de dados no nosso arquivo connect.php&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;//Local do banco
$host = &#34;localhost&#34;;
//Nome do banco de dados
$db = &#34;livraria&#34;;
//Seu Usuário no banco de dados
$user = &#34;root&#34;;
//Senha do banco de dados
$pass = &#34;&#34;;
//Estabelecendo a conexão
try
{
  /**
   *Agora o pulo do gato,aqui é onde a mágica acontece, precisamos especificar o banco de dados 
que iremos trabalhar,no nosso caso, optei pelo mysql. Em seguida especificamos o local 
e o nome do banco de dados e por último o usuário e a senha
    */
    $pdo = new PDO(&#34;mysql:host=$host;dbname=$db&#34;, $user, $pass);
}
catch (Exception $e)
{
    echo &#34;Erro ao estabelecer conexão com o banco de dados:&#34;.$e-&amp;gt;getMessage();
    die;
}
&lt;/pre&gt;

&lt;p&gt;Para inserir no Banco de dados criamos o arquivo insert.php.&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;/**
 * Insere conexão com o banco de dados estabelecida anteriormente 
 */
include &#39;connect.php&#39;;
/**
 * Variáveis que podem receber os valores do seu formulário
 */
 $titulo = &#34;Padrões de Projeto - PHP&#34;;
 $preco = 140.5;
 $estoque = 5;

try 
{   /**
    *Aqui preparamos primeiramente nossa instrução de inserção e como valores, 
passamos as &#34;?&#34;(interrogações) para referencia-las com o parâmetro passado pela função bindParam. 
    * */
    $sql=&#34;INSERT INTO `livros` (`titulo`, `preco`, `estoque`) VALUES (?, ?, ?)&#34;;
    $stmt = $pdo-&amp;gt;prepare($sql);
    $stmt-&amp;gt;bindParam(1,$titulo);
    $stmt-&amp;gt;bindParam(2,$preco);
    $stmt-&amp;gt;bindParam(3,$estoque);
    
    if($stmt-&amp;gt;execute())
        echo &#34;Gravado com Sucesso&#34;;
    else
        throw new Exception(&#34;Erro ao gravar informação&#34;);

}
catch (Exception $e) 
{
    echo $e-&amp;gt;getMessage();   
}
&lt;/pre&gt;

&lt;p&gt;Para atualizar os arquivos no banco de dados utilizamos nosso arquivo update.php:&lt;/p&gt;

&lt;pre&gt;/**
*   Inclusão da minha Conexão
* */
include &#39;connect.php&#39;;
/**
 * Variáveis que vem do seu formulário html  
 */
$titulo = &#34;Padrões de Projeto - PHP&#34;;
$preco = 60;
$estoque = 5;
try 
{   
       /**
    *Aqui preparamos nossa instrução de atualização dos dados  
    * */
    $sql=&#34;UPDATE `livros` SET `preco` = ?, `estoque`= ? WHERE `titulo` = ?&#34;;
    $stmt = $pdo-&amp;gt;prepare($sql);
    $stmt-&amp;gt;bindParam(1,$preco);
    $stmt-&amp;gt;bindParam(2,$estoque);
    $stmt-&amp;gt;bindParam(3,$titulo);

    if($stmt-&amp;gt;execute())
        echo &#34;Atualizado com Sucesso&#34;;
    else
        throw new Exception(&#39;Erro ao Atualizar&#39;);

} 
catch (Exception $e) 
{
    echo $e-&amp;gt;getMessage();   
}
&lt;/pre&gt;

&lt;p&gt;Para listar os dados no list.php:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;include &#39;conect.php&#39;;
   //listando os livros
   $sql = &#34;SELECT * FROM livros&#34;;
   $dados = $pdo-&amp;gt;query($sql);
/**
*fetch()-&amp;gt;Retorna a próxima linha do resultado.
*fetchAll()-&amp;gt; Retorna um array com todos os resultados.
*fetchObject()-&amp;gt; Retorna a próxima linha do resultado como objeto.
*fetchColumn()-&amp;gt; Retorna uma coluna da próxima linha do resultado.
**/
while ($result = $dados-&amp;gt;fetch())
{   
 echo $result[&#39;titulo&#39;] . &#34; - &#34;. $result[&#39;preco&#39;]. &#34;-&#34;. $result[&#39;estoque&#39;].&#34;
&#34;;
}
&lt;/pre&gt;

&lt;p&gt;E para deletar os arquivos criamos o delete.php:&lt;/p&gt;

&lt;pre class=&#34;lang-php&#34;&gt;/**
 *  Inclusão da minha Conexão
 **/
include &#39;conect.php&#39;;
/**
 * Variáveis que vem do seu formulário html  
 */
$titulo = &#34;Padrões de Projeto - PHP&#34;;
$preco = 60;
$estoque = 5;

try 
{   
    /**
    * Aqui preparamos nossa instrução de exclusão dos dados.  
    **/
      $sql=&#34;DELETE FROM `livros` WHERE `titulo` = ?&#34;;
    $stmt = $pdo-&amp;gt;prepare($sql);
    $stmt-&amp;gt;bindParam(1,$titulo);

    if($stmt-&amp;gt;execute())
        echo &#34;Deletado com Sucesso&#34;;
    else
        throw new Exception(&#39;Erro ao Deletar&#39;);

} 
catch (Exception $e) 
{
    echo $e-&amp;gt;getMessage();   
}
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Métodos da classe PDO:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;exec int Utilizado para insert, update e delete
query PDOStatement Utilizado para resultados tabulares, comando select.
prepare PDOStatement Cria um prepared statement, utilizado para dados variáveis.
&lt;/pre&gt;

&lt;p&gt;Trabalhar com PDO tem várias vantagens, além da portabilidade, existe também a questão da segurança, mas isso é cena para os próximos capítulos. Aconselho que visitem a &lt;a href=&#34;http://php.net/manual/pt_BR/class.pdostatement.php&#34;&gt;documentação&lt;/a&gt; para que possam ter acesso a informação completa da biblioteca, pois a mesma é muito rica e fornecerá ao desenvolvedor inúmeras vantagens que facilitarão no dia a dia do seu desenvolvimento. Obrigado ^^!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Anrahh/pdo_tableless&#34;&gt;clique aqui para baixar o código completo.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Referências&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.diogomatheus.com.br/blog/php/trabalhando-com-pdo-no-php/&#34;&gt;http://www.diogomatheus.com.br/blog/php/trabalhando-com-pdo-no-php/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://php.net/manual/en/book.pdo.php&#34;&gt;http://php.net/manual/en/book.pdo.php&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.php.net/manual/en/pdo.drivers.php&#34;&gt;http://www.php.net/manual/en/pdo.drivers.php&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Entrevista com Bert Bos (Criador da CSS) e W3C</title>
      <link>http://tableless.com.br/entrevista-com-bert-bos-e-hakon-wium-lie-criador-da-css-e-w3c/</link>
      <pubDate>Wed, 14 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/entrevista-com-bert-bos-e-hakon-wium-lie-criador-da-css-e-w3c/</guid>
      <description>&lt;p&gt;Na &lt;a href=&#34;http://conferenciaweb.w3c.br/&#34;&gt;8ª edição da Web.br&lt;/a&gt; teremos a presença ilustre de Bert Bos como keynote speaker. Ele, junto com &lt;a href=&#34;https://en.wikipedia.org/wiki/Håkon_Wium_Lie&#34;&gt;Håkon Wium Lie&lt;/a&gt;, foram os dois inventores dos Cascading Style Sheets, tecnologia também conhecida pela sigla CSS. Bert trabalha no W3C desde 1995 com desenvolvimento e padronização do CSS, assim como de outros padrões da web, como HTML, XML e MathML. Nessa entrevista ele descreve o contexto que o levou a trabalhar nos primeiros rascunhos do padrão CSS, o que ainda falta ser aprimorado e sua perspectiva para a evolução do CSS e do HTML a longo-prazo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Quais eram as necessidades específicas e o contexto que o levaram a trabalhar nos primeiros rascunhos do padrão CSS ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quando Tim Berners-Lee criou seu primeiro navegador Web, este possuía folhas de estilos, mas apenas para o usuário. A ideia era que o autor especificasse o conteúdo de um documento, mas que o navegador junto com o usuário determinassem como melhor exibi-lo.&lt;/p&gt;

&lt;p&gt;Durante certo tempo, esse foi o modelo, afinal de contas, o usuário é quem melhor sabe qual tipo de tela ele tem, de quais cores ele gosta mais, o quão grande são as janelas em seu sistema. Foram criados diversos outros navegadores que permitiam ao usuário configurar a exibição do conteúdo, como o &lt;a href=&#34;https://en.wikipedia.org/wiki/ViolaWWW&#34;&gt;Viola&lt;/a&gt; e o &lt;a href=&#34;https://en.wikipedia.org/wiki/Mosaic_%28web_browser%29&#34;&gt;Mosaic&lt;/a&gt;. Eu mesmo criei também um navegador dessa forma, chamado &lt;a href=&#34;https://en.wikipedia.org/wiki/Argo_%28web_browser%29&#34;&gt;Argo&lt;/a&gt;. As folhas de estilo no meu navegador eram mais poderosas, mas ainda assim apenas para o usuário, e não para o autor.&lt;/p&gt;

&lt;p&gt;Os primeiros autores na Web eram em sua maioria cientistas. Eles estavam acostumados a escrever documentos e deixar outra pessoa decidir sua aparência: jornais científicos normalmente fornecem suas próprias folhas de estilo (em &lt;a href=&#34;https://en.wikipedia.org/wiki/LaTeX&#34;&gt;LaTeX&lt;/a&gt;, por exemplo), assim o HTML se encaixou bem nesse modelo.&lt;/p&gt;

&lt;p&gt;Mas conforme a Web se tornava mais popular, designers começaram a se interessar e a opinião deles era de que, por serem designers, eles sabiam com mais propriedade que os usuários como apresentar um documento da melhor forma. Assim como a aparência de um livro lhe informa sobre que tipo de livro se trata, a aparência de um documento deveria também lhe dizer algo sobre seu conteúdo.&lt;/p&gt;

&lt;p&gt;Mas, naquela época, em 1994, isso era impossível de se fazer usando HTML. Assim, duas coisas aconteceram: os designers perceberam que o HTML permitia o uso de imagens, e então eles começaram a substituir textos por imagens, porque assim eles tinham total controle. E o Netscape, o primeiro navegador comercial, notando essa demanda dos designers, começou a adicionar extensões proprietárias ao HTML, como atributos de cor e de plano de fundo, um elemento &lt;center&gt;, e elementos de espaçamento.&lt;/p&gt;

&lt;p&gt;Os usuários não estavam felizes com isso: você não pode redimensionar imagens ou recortar e colar partes delas, e imagens também não proviam acessibilidade. E os elementos proprietários faziam os documentos ficarem grandes e difíceis de serem mantidos, e mais difíceis para o usuário aplicar estilos. E, assim, pessoas na lista de discussão www-talk@w3.org começaram a procurar soluções.&lt;/p&gt;

&lt;p&gt;Se você quiser ler a história completa do que aconteceu naquela época, você pode ler o &lt;a href=&#34;http://www.w3.org/Style/LieBos2e/history/&#34;&gt;capítulo relevante no livro que Håkon e eu escrevemos&lt;/a&gt; ou a &lt;a href=&#34;http://people.opera.com/howcome/2006/phd/&#34;&gt;tese de PhD do Håkon&lt;/a&gt;. Em suma: diversas pessoas propuseram linguagens de folhas de estilo, algumas eram novas, e outras eram versões simplificadas do que já existia no mundo do SGML, por que o HTML foi derivado do SGML. Duas dessas linguagens eram a “Cascading HTML Style Sheets” do Håkon e a minha linguagem “Streaming Style Sheets”.&lt;/p&gt;

&lt;p&gt;Quando eu olhei para a linguagem do Håkon, eu vi uma ideia interessante, que era a de que você poderia ter um tipo de negociação entre o que o autor propunha e o que o usuário queria. Nós começamos a trabalhar juntos, combinando as ideias dele e as minhas (por exemplo, seletores contextuais e a aplicação de folhas de estilos para outros tipo de documento além de HTML), nós inventamos uma nova sintaxe e logo nossa proposta (chamada “Cascading Style Sheets” omitindo o “HTML” do nome) se tornou a mais popular, e outras pessoas começaram a contribuir.&lt;/p&gt;

&lt;p&gt;Em 1995, o novo grupo de trabalho de HTML assumiu a tarefa, de modo a torná-lo um padrão. E um pouco depois o grupo se separou, formando o grupo de trabalho de CSS existente ainda hoje.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Você já considerou aplicar regras de estilo CSS em outros tipos de conteúdo (além de HTML)? Se isso já foi feito, você poderia fornecer um exemplo? Caso contrário, você poderia discutir em que outros conteúdos poderia ser útil o uso de CSS?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Uma das ideias da minha proposta original de folhas de estilo era justamente isto: usar a mesma linguagem de folhas de estilo para uma ampla gama de documentos, não apenas para HTML (meu próprio navegador podia exibir muitos documentos SGML, e HTML era apenas uma subclasse destes).&lt;/p&gt;

&lt;p&gt;Naquela época, ainda não existia XML, mas nós pensamos que deveríamos ter uma linguagem de folhas de estilo para SGML simples ou qualquer coisa que tivesse uma estrutura simples de árvore.&lt;/p&gt;

&lt;p&gt;Quando o XML foi criado um pouco depois (pesquisa iniciada em 1996, com a publicação do padrão em 1998), acabou combinando muito bem com o que tínhamos em mente e assim o CSS pôde ser utilizado com grande parte de documentos XML também.&lt;/p&gt;

&lt;p&gt;E o CSS pode ser usado, e está de fato sendo usado, para outras coisas também. Um exemplo é a biblioteca de interfaces gráficas &lt;a href=&#34;http://qt-project.org/doc/qt-4.8/stylesheet.html&#34;&gt;Qt&lt;/a&gt;. Ela usa CSS para aplicar estilo aos componentes da interface gráfica (&lt;a href=&#34;http://doc.qt.io/qt-5/stylesheet.html&#34;&gt;http://doc.qt.io/qt-5/&lt;/a&gt;). Outro exemplo é o MapCSS, usado por diversos programadores para desenhar mapas cartográficos (&lt;a href=&#34;http://wiki.openstreetmap.org/wiki/MapCSS&#34;&gt;http://wiki.openstreetmap&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Quais partes da atual versão da estecificação do CSS você acha que ainda precisa de mais aprimoramentos?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tem muitas coisas que ainda estão faltando, especialmente agora que editores estão usando CSS fortemente para editoração de livros, tanto em papel quanto para e-books.&lt;/p&gt;

&lt;p&gt;Originalmente nós desenhamos o CSS para ser a linguagem de estilos simples, e adicionamos XSL (por exemplo, XSLT + XSL-FO) em 2001 para as tarefas complexas, como edição de livros. Mas, no momento, o desenvolvimento do XSL parou, e nós não sabemos quando ele irá continuar, e então os editores estão migrando para o CSS.&lt;/p&gt;

&lt;p&gt;Apenas para dar alguns exemplos de coisas que estão faltando no CSS: para o tratamento adequado de hipertexto, nós precisamos de elementos colapsantes (veja &lt;a href=&#34;http://en.wikipedia.org/wiki/StretchText&#34;&gt;aqui&lt;/a&gt;) ou, de modo geral, uma forma de alternar o estado de elementos (e não apenas ‘checkboxes’) entre dois possíveis estilos. Nós também não temos ainda containers que formem um conjunto de páginas em abas.&lt;/p&gt;

&lt;p&gt;E temos *muito* trabalho a ser feito para tudo que envolva texto paginado: notas de rodapé, elementos flutuantes no topo ou no pé da página, texto que se estenda atravessando colunas, divisão de texto em múltiplos fluxos e alinhamento desses fluxos de texto em um template de página baseado em uma grade, referências cruzadas (como “veja página 7″), índices alfabéticos, ‘copyfitting’ (fazer um texto caber exatamente em um espaço alocado), cabeçalhos e rodapés contendo texto bidirecional ou fórmulas matemáticas etc. Eu comecei a colecionar uma lista de requisitos que pode ser vista &lt;a href=&#34;http://www.w3.org/Style/2013/paged-media-tasks&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Existem propostas e implementações experimentais para algumas dessas funcionalidades, mas grande parte do trabalho ainda não foi realizado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Qual é a sua perspectiva para a evolução do CSS e do HTML em longo prazo? Como você acha que essas tecnologias evoluirão nas próximas décadas?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi muito bom o HTML4 ter permanecido sem modificações por tanto tempo. Isso nos permitiu compreendê-lo e criar softwares interessantes. Nós esperávamos certos tipos de aplicações, mas algumas vezes levou muitos anos para que as pessoas se tornassem capazes de efetivamente criá-los. Por exemplo, nós esperávamos que algo como os microformatos fosse surgir, mas levou bastante tempo até algumas pessoas de fato descobrirem como fazê-lo corretamente. E algumas coisas foram inesperadas e apenas descobertas depois.&lt;/p&gt;

&lt;p&gt;Então, de certa forma, é uma pena que agora nós tenhamos que migrar nossos softwares para o HTML5, mesmo que o HTML5 adicione novas funcionalidades interessantes. Eu estou lentamente migrando meus softwares, mas levará um bom tempo até que eu possa fazer com o HTML5 o que eu posso fazer com o HTML4. Assim, estou esperançoso de que grande parte de tudo o que é o HTML5, ou sua próxima revisão, volte a permanecer estável por 10 ou 15 anos.&lt;/p&gt;

&lt;p&gt;Para o CSS, não tenho muita certeza sobre o que quero. Como visto acima, há várias coisas que precisamos adicionar para satisfazer os vários novos usos. Mas o CSS não foi desenhado para tarefas complexas. Ele foi feito para ser usado por usuários comuns para aplicação de estilos simples. Ao adicionar novas capacidades ao seu modelo original, o CSS está se tornando complexo demais para a maioria das pessoas. Então talvez seja o momento de se recomeçar do zero criando duas novas linguagens: uma simples que todas as pessoas saibam usar, mas que talvez seja limitada na quantidade de controles detalhados que oferece, e uma avançada, adequada até mesmo para editoração complexa de livros e revistas. Mas eu ainda não vi nenhuma proposta que tenha me agradado.&lt;/p&gt;

&lt;p&gt;É bom ver diversos pré-processadores de CSS para ajudar os usuários avançados, como o &lt;a href=&#34;http://en.wikipedia.org/wiki/Sass_%28stylesheet_language%29&#34;&gt;SASS&lt;/a&gt; e o &lt;a href=&#34;http://en.wikipedia.org/wiki/LESS_%28stylesheet_language%29&#34;&gt;LESS&lt;/a&gt;. Eu tinha esperança de eles aparecessem mais cedo. Espero que eles se desenvolvam e se tornem ainda melhores. Por outro lado, estou surpreso com o tamanho de algumas folhas de estilo que as pessoas têm criado. As mais complexas que eu mesmo criei têm 10 kbytes, e a maioria é bem menor que isso. Fico me questionando se eles estão fazendo a coisa certa…&lt;/p&gt;

&lt;p&gt;Dessa forma, em termos práticos, acho que ainda iremos adicionar novas funcionalidades ao CSS durante os próximos poucos anos. Haverá, sem dúvidas, novos módulos no CSS3, e alguns módulos que já estão finalizados serão provavelmente estendidos ou substituídos por um módulo do CSS4.&lt;/p&gt;

&lt;p&gt;Continuaremos mantendo a retrocompatibilidade do CSS, mas isso também significa se tornará gradativamente mais difícil de adicionar novas funcionalidades a ele, e suas sintaxes poderão não ser as mais intuitivas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS3 — Trabalhando com Múltiplas imagens background-images</title>
      <link>http://tableless.com.br/css3-trabalhando-com-multiplas-imagens-background-images/</link>
      <pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/css3-trabalhando-com-multiplas-imagens-background-images/</guid>
      <description>

&lt;p class=&#34;graf--p&#34;&gt;
  Quem nunca se deparou com um layout com múltiplas imagens “sobrepostas” ou mesmo com títulos ou parágrafos que precisavam ficar suspensos sobre múltiplas imagens de fundo? Essa semana me deparei com o mesmo problema.
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Com &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;CSS3&#34; href=&#34;https://developer.mozilla.org/en/CSS/CSS3&#34;&gt;CSS3&lt;/a&gt;, você pode aplicar aos elementos múltiplas imagens sobrepostas como plano de fundo. Sem a utilização do Z-index! É isso mesmo, “necas de pitibiriba” de Z-index.
&lt;/p&gt;

&lt;h2 id=&#34;velho-dilema-de-sobrepor-imagens-com-div-s-com-z-index-graf-h4&#34;&gt;Velho dilema de sobrepor imagens com div’s com Z-index… {.graf&amp;ndash;h4}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  A primeira solução que vem à cabeça é o velho e bom “Z-index”, Veja um exemplo de implementação:
&lt;/p&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    HTML
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;red&#34;&amp;gt;Red&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;green&#34;&amp;gt;Green&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;blue&#34;&amp;gt;Blue&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    CSS
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.red, .green, .blue {
    color: #fff;
    display: block;
    line-height: 100px;
    position: absolute;
    text-align: center;
    width: 100px;
}
.red {
    background: red;
    left: 20px;
    top: 20px;
    z-index: 0;
    opacity:0.5;
}
.green {
    background: green;
    left: 60px;
    top: 60px;
    z-index: 1;
    opacity:0.6;
}
.blue {
    background: blue;
    left: 100px;
    top: 100px;
    z-index: 2;
    opacity:0.7;
}
body {
    color: #777;
}&lt;/pre&gt;

&lt;p&gt;See the Pen &lt;a href=&#34;http://codepen.io/selique/pen/grvvLw/&#34;&gt;Z-index&lt;/a&gt; by Moisés lopes ferreira (&lt;a href=&#34;http://codepen.io/selique&#34;&gt;@selique&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;funciona-em-class-markup-em-markup-h4-em-sim-em-mas-espere-um-momento-essa-não-é-a-única-solução-graf-h4&#34;&gt;Funciona?!… &lt;em class=&#34;markup--em markup--h4-em&#34;&gt;SIM!&lt;/em&gt; Mas espere um momento, essa não é a única solução… {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  … Você já tava pensando num “workaround” safadinho, a mão da gambiarra chega a tremer nessas horas, mas nada de programação orientada a “Go-Horse”, hoje em dia temos “solucionática” pra quase tudo hehe…
&lt;/p&gt;

&lt;div style=&#34;width: 510px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*pAiFtxYHdjg4-HP6e46wZA.gif&#34; alt=&#34;www.gohorseprocess.com.br/extreme-go-horse-(xgh)&#34; width=&#34;500&#34; height=&#34;374&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    www.gohorseprocess.com.br/extreme-go-horse-(xgh)
  &lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&#34;conhecendo-as-propriedades-css-do-background-graf-h4&#34;&gt;Conhecendo as propriedades CSS do Background: {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;pre&gt;background-color.........define a cor do fundo;
background-image.........define uma imagem de fundo;
background-repeat........define a maneira como a imagem de fundo é posicionada;
background-attachment....define se a imagem de fundo &#34;rola&#34; ou não com a tela;
background-position......define como e onde a imagem de fundo é posicionada;
background-clip..........define a área do box onde a imagem de fundo é aplicada;
background-origin........define a posição de origem da imagem no box;
background-size..........define as dimensões da imagem no box;
background...............maneira abreviada para declarar todas as propriedades anteriores;&lt;/pre&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  O nosso grande mestre &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/addb7196c9b9&#34;&gt;Maurício Samy Silva&lt;/a&gt; #Maujor explica melhor as aplicações das propriedades &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://maujor.com/tutorial/propriedade-css-para-estilizacao-de-background.php&#34; rel=&#34;nofollow&#34;&gt;http://maujor.com/tutorial/propriedade-css-para-estilizacao-de-background.php&lt;/a&gt;
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Agora que conhecemos suas propriedades e características… agora vamos ver como o “background-image” funciona para entendermos nosso horizonte de possibilidades:
&lt;/p&gt;

&lt;h2 id=&#34;background-image-vs-z-index-a-batalha-graf-h4&#34;&gt;Background-image VS Z-index — A BATALHA: {.graf&amp;ndash;h4}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Quando trabalhamos 2 ou 3 elementos (sejam &lt;img&gt;, &lt;div&gt;, &lt;etc…&gt;) temos um controle até tolerável, mas… quando utilizamos 6, 10 ou mais elementos numa mesma div ou aninhamento próximo, o z-index começa a se tornar “linguiçento” demais e somos obrigados a utilizar mais classes e ids para organizarmos nosso CSS, pensando nisso que escrevi esse post!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  &lt;em&gt;Às vezes não necessariamente queremos ou podemos utilizar o z-index.&lt;/em&gt;
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Sem contar que quebramos o conceito de &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://tableless.com.br/oocss-smacss-bem-dry-css-afinal-como-escrever-css/&#34;&gt;DRY&lt;/a&gt; em nosso documento CSS e não queremos isso, não é amiguinhos?
&lt;/p&gt;

&lt;div style=&#34;width: 495px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*xt8qqJopHwF-Gcg9xM6t3w.gif&#34; alt=&#34;Vida de um Front-end&#34; width=&#34;485&#34; height=&#34;364&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Front-end Lifestyle
  &lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&#34;z-index-quando-usar-graf-h4&#34;&gt;Z-index — Quando usar? {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Quando temos muitos elementos e precisamos especificar propriedades e características CSS que vão além do propósito de uma “imagem de fundo” ou “sobreposição” então o Z-index é a melhor opção!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Mas se você quer simplesmente sobrepor uma imagem de um logo (ou uma composição de camadas que formam um logo) sobre um uma ou mais imagem de preenchimento de fundo o background-image é a melhor solução!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Estes elementos ficam empilhados em camadas uma acima da outra, onde o primeiro fundo dado será desenhado no topo e apenas o último elemento da lista poderá definir uma cor sólida de fundo, ou não, aí fica ao seu critério.
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.minhaClasse {
  background: fundo1, fundo2, ..., fundoN;
}&lt;/pre&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://tableless.com.br/tag/css3/&#34;&gt;CSS3&lt;/a&gt; permite especificar imagens de fundo para múltiplos elementos, usando nada mais do que uma única lista separada por vírgulas.
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Você pode fazer isso com a propriedade reduzida &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background&#34;&gt;background&lt;/a&gt; e também com as propriedade individuais, com a exceção de &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-color&#34;&gt;background-color&lt;/a&gt;. Isto é, as seguintes propriedades de plano de fundo podem ser especificadas com uma lista, uma por fundo: &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background&#34;&gt;background&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-attachment&#34;&gt;background-attachment&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;A propriedade CSS background-clip especifica se o fundo de um elemento, seja cor ou imagem, se extende debaixo de sua borda.&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-clip&#34;&gt;background-clip&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34;&gt;background-image&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-origin&#34;&gt;background-origin&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-position&#34;&gt;background-position&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-repeat&#34;&gt;background-repeat&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-size&#34;&gt;background-size&lt;/a&gt;. (rola até gradiente!)
&lt;/p&gt;

&lt;h2 id=&#34;exemplos-graf-h3&#34;&gt;Exemplos {.graf&amp;ndash;h3}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Neste exemplo, três planos de fundos estão empilhados: um texto estilizado, o logo da Tableless.com.br, e uma imagem de fundo ilustrando uma cidade:
&lt;/p&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    HTML
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;header&amp;gt;
  &amp;lt;div class=&#34;intro-text&#34;&amp;gt;
    &amp;lt;h1 class=&#34;name-index&#34;&amp;gt;BEM-VINDO À&amp;lt;/br&amp;gt;&amp;lt;span&amp;gt;INTERNET&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/header&amp;gt;&lt;/pre&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    CSS
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-css&#34;&gt;header {
  background: url(&lt;a class=&#34;markup--anchor markup--pre-anchor&#34; href=&#34;http://tableless.com.br/wp-content/uploads/2013/04/logo-tableless-01.png&#34; rel=&#34;nofollow&#34;&gt;http://tableless.com.br/wp-content/uploads/2013/04/logo-tableless-01.png&lt;/a&gt;) no-repeat center center, url(&lt;a class=&#34;markup--anchor markup--pre-anchor&#34; href=&#34;http://lorempixel.com/output/city-q-g-1024-768-10.jpg&#34; rel=&#34;nofollow&#34;&gt;http://lorempixel.com/output/city-q-g-1024-768-10.jpg&lt;/a&gt;) no-repeat center top;
  height: 100vh;
  width: auto;
  box-sizing: border-box;
}
header .intro-text {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}
header .intro-text &amp;gt; h1 {
  text-shadow: 8px 5px 5px #00181c;
  color: #fff;
  text-transform: uppercase;
  text-align: center;
}
header .intro-text .name-index {
  font-size: 7vw;
}
header .intro-text .name-index span {
  font-size: 9.2vw;
}&lt;/pre&gt;

&lt;p&gt;See the Pen &lt;a href=&#34;http://codepen.io/selique/pen/vKddRK/&#34;&gt;Multiple backgrounds backgroud-image&lt;/a&gt; by Moisés lopes ferreira (&lt;a href=&#34;http://codepen.io/selique&#34;&gt;@selique&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Suporte do navegador para múltiplas imagens com a propriedade CSS background-image é relativamente difundido na implementação do recurso citado acima:
&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Mozilla Firefox (3.6 ou superior)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Safari / Chrome (1.0 / 1.3 +)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Opera (10.5+)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    até mesmo no Internet Explorer (9.0+)
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Bibliografia (Fontes)
&lt;/p&gt;

&lt;div class=&#34;graf--mixtapeEmbed&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--mixtapeEmbed-anchor&#34; title=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34;&gt;&lt;strong class=&#34;markup--strong markup--mixtapeEmbed-strong&#34;&gt;background-image&lt;/strong&gt; &amp;#8211; &lt;em class=&#34;markup--em markup--mixtapeEmbed-em&#34;&gt;The CSS background-image property sets one or several background images for an element. The images are drawn on…&lt;/em&gt;developer.mozilla.org&lt;/a&gt;
&lt;/div&gt;

&lt;div class=&#34;graf--mixtapeEmbed&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--mixtapeEmbed-anchor&#34; title=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Background_and_Borders/Using_CSS_multiple_backgrounds&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Background_and_Borders/Using_CSS_multiple_backgrounds&#34;&gt;&lt;strong class=&#34;markup--strong markup--mixtapeEmbed-strong&#34;&gt;Multiple backgrounds&lt;/strong&gt; &amp;#8211; &lt;em class=&#34;markup--em markup--mixtapeEmbed-em&#34;&gt;Com CSS3 , você pode aplicar aos elementos multiplos planos de fundo. Estes ficam em camadas empilhadas uma acima da…&lt;/em&gt;developer.mozilla.org&lt;/a&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Upload de imagens desmistificado com simpleGallery.js</title>
      <link>http://tableless.com.br/upload-de-imagens-desmistificado-com-simplegallery-js/</link>
      <pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/upload-de-imagens-desmistificado-com-simplegallery-js/</guid>
      <description>

&lt;p&gt;Olá pessoal, tudo bem?&lt;/p&gt;

&lt;p&gt;Neste artigo vou procurar abordar algo comum no dia-a-dia de qualquer desenvolver, o &amp;#8220;temido&amp;#8221; upload de imagens. No processo utilizarei NodeJS e Express para o back-end. A grande sacada será a utilização da lib &lt;a href=&#34;https://github.com/fccoelho7/simpleGallery.js/&#34;&gt;simpleGallery.js&lt;/a&gt;, que nos auxiliará no front-end.&lt;/p&gt;

&lt;h2 id=&#34;passos-iniciais&#34;&gt;Passos iniciais..&lt;/h2&gt;

&lt;p&gt;A seguir criaremos um servidor bem simples. Utilizarei o package &amp;#8220;Multer&amp;#8221; como middleware para as requisições de arquivo. Não vou prezar por segurança nem boas práticas, já que este artigo é apenas para encorajar aqueles que ainda possuem dificuldades.&lt;/p&gt;

&lt;p&gt;Primeiro começaremos com a instalação do NodeJS e NPM, para mais informações:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;https://nodejs.org/en/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.npmjs.org/post/85484771375/how-to-install-npm&#34;&gt;http://blog.npmjs.org/post/85484771375/how-to-install-npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Após NodeJS e NPM instalados, é hora de criarmos nosso &lt;code&gt;package.json&lt;/code&gt;, que será responsável por armazenar o nome do app, versão, nossos packages etc. Abra o terminal e digite:&lt;/p&gt;

&lt;pre&gt;npm init /my-upload-app
cd my-upload-app
mkdir public&lt;/pre&gt;

&lt;p&gt;Após todos os dados inseridos, partiremos para a inclusão dos packages que utilizaremos.&lt;/p&gt;

&lt;pre&gt;npm install --save-dev express multer&lt;/pre&gt;

&lt;p&gt;Este comando instalará as últimas versões de cada package, permitindo a sua utilização junto ao NodeJS.&lt;/p&gt;

&lt;h2 id=&#34;criando-o-server&#34;&gt;Criando o Server&lt;/h2&gt;

&lt;p&gt;Com tudo instalado, basta criar um arquivo em nosso diretório chamado de &lt;code&gt;index.js&lt;/code&gt;. Este conterá o básico para criar nossa API e seus respectivos endpoints. Estou utilizando o Hello World do próprio Express, que está presente &lt;a href=&#34;http://expressjs.com/pt-br/starter/hello-world.html&#34;&gt;neste&lt;/a&gt; link.&lt;/p&gt;

&lt;pre&gt;const express = require(&#39;express&#39;)
const app = express()

app.get(&#39;/&#39;, (req, res) =&amp;gt; {
 res.sendFile(&#39;public/index.html&#39;)
})

app.listen(3000, () =&amp;gt; console.log(&#39;Lstening on port 3000!&#39;))

&lt;/pre&gt;

&lt;p&gt;Isto já é o suficiente para rodar nosso server (digite &lt;code&gt;node index.js&lt;/code&gt;). Tudo que estiver dentro da pasta &lt;code&gt;/public&lt;/code&gt; obviamente será considerado como público e &amp;#8220;visível&amp;#8221; ao browser.&lt;/p&gt;

&lt;p&gt;Sem mais delongas, vamos partir para o endpoint que receberá os arquivos e retornará um JSON com as respectivas URL&amp;#8217;s, ele também será responsável por armazenar nossas imagens na pasta &lt;code&gt;/uploads&lt;/code&gt;. Neste ponto utilizo uma configuração mínima do &amp;#8216;Multer&amp;#8217;, você pode melhorar este processo limitando os arquivos por tamanho, tipo, quantidade etc. Para mais informações, clique &lt;a href=&#34;https://github.com/expressjs/multer&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;const express = require(&#39;express&#39;)
const app = express()
const multer = require(&#39;multer&#39;)

const upload = multer({ dest: &#39;public/uploads/&#39; }) // Configuramos o destino dos arquivos.

app.get(&#39;/&#39;, (req, res) =&amp;gt; {
 res.sendFile(&#39;public/index.html&#39;)
})

app.post(&#39;/upload&#39;, upload.array(&#39;gallery[]&#39;), (req, res) =&amp;gt; {
 let gallery = []
 req.files.map((image) =&amp;gt; gallery.push({&#39;url&#39;: `http://localhost:3000/uploads/${image.filename}`}))
 res.status(200).json(gallery)
})

app.listen(3000, () =&amp;gt; console.log(&#39;Listening on port 3000!&#39;))&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Agora nossa API já está 100% funcional. Para testar, submeta um POST com as imagens para a url &lt;code&gt;http://localhost:3000/uploads&lt;/code&gt;. Você receberá uma resposta formato JSON com a URL das imagens enviadas.&lt;/p&gt;

&lt;h2 id=&#34;já-no-front-end&#34;&gt;Já no Front-End..&lt;/h2&gt;

&lt;p&gt;Com a nossa API criada, agora precisamos configurar o nosso front-end. Para isto, vamos iniciar criando um &lt;code&gt;index.html&lt;/code&gt; dentro da pasta &lt;code&gt;/public&lt;/code&gt;. Após criado, é hora de escrevermos nosso HTML:&lt;/p&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
 &amp;lt;title&amp;gt;Upload App&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;form class=&#34;form-upload&#34; action=&#34;/&#34; method=&#34;POST&#34; enctype=&#34;multipart/form-data&#34;&amp;gt;
 &amp;lt;input type=&#34;hidden&#34; name=&#34;gallery&#34;&amp;gt;
 &amp;lt;label for=&#34;&#34;&amp;gt;Image Gallery&amp;lt;/label&amp;gt;
 &amp;lt;div class=&#34;input-upload btn&#34;&amp;gt;
 Upload
 &amp;lt;input class=&#34;upload&#34; type=&#34;file&#34; multiple=&#34;multiple&#34; accept=&#34;image/*&#34;&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;gallery-container&#34;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;p&gt;Até agora nenhuma novidade, um formulário &lt;code&gt;enctype=&amp;quot;multipart/form-data&amp;quot;&lt;/code&gt; com os campos necessários para enviarmos as fotos para nossa API.&lt;/p&gt;

&lt;h2 id=&#34;8220-hora-do-show-8221&#34;&gt;&amp;#8220;Hora do show!&amp;#8221;&lt;/h2&gt;

&lt;p&gt;Chegou a hora de implementarmos o &lt;a href=&#34;https://github.com/fccoelho7/simpleGallery.js/&#34;&gt;simpleGallery.js&lt;/a&gt;, uma lib JS vanilla, de apenas 2kb gzipped. Esta será responsável por submeter as imagens e salvar o JSON de retorno em algum input hidden, em nosso exemplo, utilizaremos o padrão da lib que será:&lt;/p&gt;

&lt;pre&gt;&amp;lt;input type=&#34;hidden&#34; name=&#34;gallery&#34;&amp;gt;&lt;/pre&gt;

&lt;p&gt;Também faremos a inclusão do CSS e JS, que pode ser encontrado no próprio repositório do &lt;a href=&#34;https://github.com/fccoelho7/simpleGallery.js/&#34;&gt;simpleGallery.js&lt;/a&gt;. Ou via NPM/Bower, basta procurar por: &lt;code&gt;simple-gallery-js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;O &lt;a href=&#34;https://github.com/RubaXa/Sortable&#34;&gt;Sortable&lt;/a&gt;, uma lib JS vanilla, será responsável por permitir a reordenação de nossa galeria.&lt;/p&gt;

&lt;p&gt;O código final fica assim:&lt;/p&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
 &amp;lt;title&amp;gt;Upload App&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://raw.githubusercontent.com/fccoelho7/simpleGallery.js/master/dist/simple-gallery.min.css&#34; media=&#34;screen&#34; charset=&#34;utf-8&#34;&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;form class=&#34;form-upload&#34; action=&#34;/&#34; method=&#34;POST&#34; enctype=&#34;multipart/form-data&#34;&amp;gt;
 &amp;lt;input type=&#34;hidden&#34; name=&#34;gallery&#34;&amp;gt;
 &amp;lt;label for=&#34;&#34;&amp;gt;Image Gallery&amp;lt;/label&amp;gt;
 &amp;lt;div class=&#34;input-upload btn&#34;&amp;gt;
Upload
 &amp;lt;input class=&#34;upload&#34; type=&#34;file&#34; multiple=&#34;multiple&#34; accept=&#34;image/*&#34;&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;gallery-container&#34;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/form&amp;gt;

&amp;lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.4.2/Sortable.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script src=&#34;https://raw.githubusercontent.com/fccoelho7/simpleGallery.js/master/dist/simple-gallery.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script type=&#34;text/javascript&#34;&amp;gt;
 new SimpleGallery(&#39;.form-upload&#39;);
 &amp;lt;/script&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;


&lt;/pre&gt;

&lt;h2 id=&#34;mas-pera&#34;&gt;Mas pera!&lt;/h2&gt;

&lt;p&gt;&amp;#8220;Eu tenho minha API de uploads em uma URL e meu formulário será enviado para outro endpoint, como farei isso?&amp;#8221; Bom, caso você não deseje utilizar o mesmo endpoint para upload de imagens e requisição do formulário, o &lt;a href=&#34;https://github.com/fccoelho7/simpleGallery.js/&#34;&gt;simpleGallery.js&lt;/a&gt; nos permite criar um segundo &lt;strong&gt;action. &lt;/strong&gt;Basta inserir um &lt;code&gt;data-action-gallery&lt;/code&gt;, como no exemplo abaixo:&lt;/p&gt;

&lt;pre&gt;&amp;lt;form class=&#34;form-upload&#34; action=&#34;/&#34; data-action-gallery=&#34;/uploads&#34; method=&#34;POST&#34; enctype=&#34;multipart/form-data&#34;&amp;gt;

&lt;/pre&gt;

&lt;h2 id=&#34;por-fim&#34;&gt;Por fim.&lt;/h2&gt;

&lt;p&gt;Outras opções como: trocar o name do input que receberá o JSON das url&amp;#8217;s e a classe que conterá a galeria também são possíveis, para mais informações acesse o repositório oficial do &lt;a href=&#34;https://github.com/fccoelho7/simpleGallery.js/&#34;&gt;simpleGallery.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O conteúdo deste artigo pode ser encontrado &lt;a href=&#34;https://github.com/fccoelho7/simple-gallery-demo&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bom, é isso. Espero que tenha gostado e perdido o medo quando o assunto é &amp;#8220;upload de imagens&amp;#8221;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Começando com o Angular Material  – Parte 1</title>
      <link>http://tableless.com.br/comecando-com-o-angular-material-parte-1/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/comecando-com-o-angular-material-parte-1/</guid>
      <description>

&lt;p&gt;Decidi começar essa série de posts sobre &lt;strong&gt;Angular&lt;/strong&gt; pois ultimamente é o que mais estou estudando, e pirando também rs, estou &lt;strong&gt;viciado&lt;/strong&gt; no angular confesso, e não podia deixar de escrever sobre o &lt;strong&gt;angular material&lt;/strong&gt; pois ele realmente me surpreendeu com sua facilidade que junto a sua beleza o torna bem &lt;strong&gt;interessante&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Vou escrever uma série com alguns posts baseados no que eu aprendi do angular material nesses tempos estudando na internet, espero que possa ajudar uma galera que queria muito conhecer porém não sabia por onde começar ou tem dificuldade de achar algo em português.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Lembrando que esta série exige um certo conhecimento de AngularJS para ser compreendida ok?&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;parte-1-baixar-e-instalar&#34;&gt;Parte 1 — Baixar e instalar&lt;/h4&gt;

&lt;p&gt;Vamos começar criando uma &lt;strong&gt;nova pasta&lt;/strong&gt; e começando um &lt;strong&gt;projeto npm &lt;/strong&gt;dentro dela, veja:&lt;/p&gt;

&lt;pre&gt;cd Desktop
mkdir project
cd project
npm init&lt;/pre&gt;

&lt;p&gt;Vão aparecer algumas opções do projeto npm pra preencher, preencha conforme queira ou pule apertando “&lt;strong&gt;enter&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;Agora vamos instalar o &lt;strong&gt;angular,&lt;/strong&gt; o &lt;strong&gt;angular material&lt;/strong&gt; e as &lt;strong&gt;dependências do material&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;npm install angular angular-material angular-animate angular-aria --save&lt;/pre&gt;

&lt;p&gt;Legal, instalamos as dependências que precisamos para começar nosso projeto, agora &lt;strong&gt;precisamos linkar&lt;/strong&gt; com nosso arquivo html certo? Então vamos começar linkando &lt;strong&gt;5 arquivos de dependências&lt;/strong&gt;, um de css que deverá ser linkado no &lt;strong&gt;&lt;head&gt;&lt;/strong&gt;, e outros 4 scripts que linkamos &lt;strong&gt;antes da tag de fechamento do body&lt;/strong&gt;, vejamos:&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;html ng-app=&#34;app&#34;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;node_modules/angular-material/angular-material.css&#34;&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular/angular.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular-animate/angular-animate.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular-aria/angular-aria.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&#34;node_modules/angular-material/angular-material.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Feito isso precisamos &lt;strong&gt;chamar o módulo&lt;/strong&gt; e &lt;strong&gt;incluir a dependência do angular-material&lt;/strong&gt;, veja:&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--pre&#34;&gt;&amp;lt;script&amp;gt;
    angular.module(&#39;app&#39;, [&#39;ngMaterial&#39;])
        .run(function(){
        console.log(&#39;Funcionando!&#39;)
    });
&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Vejam que eu chamei nosso &lt;strong&gt;ng-app&lt;/strong&gt; na tag &lt;strong&gt;&lt;html&gt;&lt;/strong&gt;, isto é muito importante em nosso passo a passo pois vamos chamar o nosso módulo por ela, então como chamei na tag &lt;strong&gt;&lt;html&gt;&lt;/strong&gt; ele vai se estender por toda a página procurando por diretivas, controllers etc.&lt;/p&gt;

&lt;p&gt;Ainda neste exemplo, escrevi uma função que quando a página é carregada ela dispara uma mensagem no console, &lt;strong&gt;você pode testar em sua máquina &lt;/strong&gt;para assimilar o que eu fiz até aqui.&lt;/p&gt;

&lt;p&gt;Antes de dar continuidade ao artigo vou deixar o &lt;strong&gt;link da documentação oficial&lt;/strong&gt; do angular material que é bem explicativa e com certeza vai te ajudar bastante nessa jornada de aprendizado, além do que vamos usar bastante os exemplos de lá nos artigos:&lt;/p&gt;

&lt;p style=&#34;text-align: center;&#34;&gt;
  &lt;a href=&#34;https://material.angularjs.org/&#34;&gt;https://material.angularjs.org/&lt;/a&gt;
&lt;/p&gt;

&lt;h4 id=&#34;action-graf-h4-graf-after-mixtapeembed&#34;&gt;Action {.graf&amp;ndash;h4.graf-after&amp;ndash;mixtapeEmbed}&lt;/h4&gt;

&lt;p class=&#34;graf-after--h4&#34;&gt;
  Ambiente preparado tudo funcionando? Legal, bora pra &lt;strong&gt;action&lt;/strong&gt;, eu ia postar somente até aqui na parte 1 pro post não ficar gigante, porém acho que ficaria &lt;strong&gt;meio chato&lt;/strong&gt; porque sei que se você está lendo isso quer ir logo pra &lt;strong&gt;action! &lt;/strong&gt;Então decidi postar um combo parte 1 + parte 2, segura:
&lt;/p&gt;

&lt;h4 id=&#34;layout&#34;&gt;Layout&lt;/h4&gt;

&lt;p class=&#34;graf-after--h4&#34;&gt;
  No Angular Material podemos usar algumas diretivas pré prontas para criarmos interfaces. Usando estas diretivas html podemos definir valores (ex:&lt;strong&gt;layout=”row”&lt;/strong&gt;), que vão nos ajudar bastante a separar as coisas do jeito mais fácil para trabalharmos, pois os atributos vão definir o layout baseado nas &lt;strong&gt;classes css que já existem no angular material&lt;/strong&gt;. Conforme a documentação, segue abaixo uma tabela contendo algumas especificações:
&lt;/p&gt;&lt;figure&gt; 

&lt;

div class=&amp;#8221;aspectRatioPlaceholder is-locked&amp;#8221;&gt;
  
&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image aligncenter&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*Zh1tH1Cuk-V7ljIIKukbXQ.png&#34; /&gt;
  
&lt;/figure&gt; 

Então, como o angular material **tem uma api flexbox** podemos setar uma div**row**, e dentro dela **criar 2 divs** com um “**flex=”50”**”, assim cada div dentro da div **row** terá o espaço de **50% da tela** uma ao lado da outra, veja o exemplo:

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;div layout=&#34;row&#34;&amp;gt;
    &amp;lt;div flex=&#34;50&#34;&amp;gt;Primeira div&amp;lt;/div&amp;gt;
    &amp;lt;div flex=&#34;50&#34;&amp;gt;Segunda div&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&lt;/pre&gt;

Abaixo temos algumas **especificações de breakpoints** que também serão bem importante pra criarmos nossos apps e deixarmos tudo responsivo, vamos **associar breakpoints** **a definições de mediaquery**, veja:&lt;figure&gt; 

&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*gRZXmgUUu4Nu48zmSVKATA.png&#34; /&gt;
  
&lt;/figure&gt; 

Agora podemos **combinar o breakpoint junto a api layout** e pronto, temos responsividade em nosso app 😀 veja como funciona:&lt;figure&gt; 

&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*bF72D6KkAPhg1IS9jcjvBA.png&#34; /&gt;
  
&lt;/figure&gt; 

Com essas informações já podemos começar a fazer algumas coisas como fazer a div aparecer com uma estrutura default para quando estiver no **desktop**, e outra quando estiver no **celular** apenas manipulando a api **layout**, veja:

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;md-content class=&#34;md-padding&#34; layout-xs=&#34;column&#34; layout=&#34;row&#34;&amp;gt;&amp;lt;/md-content&amp;gt;&lt;/pre&gt;

Veja que eu pedi para por default o **md-content** vir como **row**, e quando a tela for menor que **599px** como vimos nos breakpoints setando o **xs**, ele mude para **column**.

#### Layout-align

&lt;p class=&#34;graf-after--h4&#34;&gt;
  Podemos também alinhar elementos em nossa página com a api &lt;strong&gt;layout-align&lt;/strong&gt;, veja um exemplo:
&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;div layout=&#34;row&#34; layout-align=&#34;center&#34;&amp;gt;
    Hello World!
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;Podemos também &lt;strong&gt;combinar com os breakpoints&lt;/strong&gt; caso for preciso para deixarmos responsivo, veja a tabela:&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*hltJORr9bcACAOwG3EkQlg.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h4 id=&#34;graf-h4-graf-after-figure&#34;&gt;{.graf&amp;ndash;h4.graf-after&amp;ndash;figure}&lt;/h4&gt;

&lt;h4 id=&#34;graf-h4-graf-after-figure-1&#34;&gt;{.graf&amp;ndash;h4.graf-after&amp;ndash;figure}&lt;/h4&gt;

&lt;h4 id=&#34;show-hide-graf-h4-graf-after-figure&#34;&gt;Show &amp;amp; Hide {.graf&amp;ndash;h4.graf-after&amp;ndash;figure}&lt;/h4&gt;

&lt;p&gt;&lt;p class=&#34;graf-after--h4&#34;&gt;
  Outra coisa muito interessante na parte de layouts do angular material é o &lt;strong&gt;show &amp;amp; hide&lt;/strong&gt;, uma api que pode ser usada para &lt;strong&gt;mostrar ou esconder&lt;/strong&gt; algum elemento conforme a resolução:
&lt;/p&gt;&lt;figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;progressiveMedia-image js-progressiveMedia-image&#34; src=&#34;https://cdn-images-1.medium.com/max/800/1*eBPJTlusl1IEA7gGhRxV0w.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Reproduza o código abaixo para ver o comportamento da página quando &lt;strong&gt;diminuímos a janela do navegador&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;graf--pre graf-after--p&#34;&gt;&amp;lt;div layout=&#34;row&#34;&amp;gt;
    &amp;lt;div hide show-gt-sm flex&amp;gt;
        Mostrar somente em dispositivos gt-sm
    &amp;lt;/div&amp;gt;
    &amp;lt;div hide-gt-sm flex&amp;gt;
        Mostrar em resolução pequena e média&amp;lt;br&amp;gt;
        Esconder em dispositivos gt-sm        
    &amp;lt;/div&amp;gt;
    &amp;lt;div show hide-gt-md flex&amp;gt;
        Mostrar em resolução pequena e média&amp;lt;br&amp;gt;
        Esconder em dispositivos gt-md        
    &amp;lt;/div&amp;gt;
    &amp;lt;div hide show-md flex&amp;gt;
        Mostrar somente em resoluções médias&amp;lt;br&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div hide show-gt-lg flex&amp;gt;
        Mostrar em resoluções maiores que 1200px de largura&amp;lt;br&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;Viu só? Facilitou bastante o jeito como podemos construir nossas estruturas responsivas. Aprendemos hoje como colocar e iniciar o angular-material no seu projeto, e um pouco mais sobre a parte de layout e layout responsivo, creio que no próximo post vamos poder brincar com coisas mais legais, porém essa parte é &lt;strong&gt;essencial para qualquer pessoa que quer aprender o angular material&lt;/strong&gt;, sem ela fica muito difícil de trabalharmos.&lt;/p&gt;

&lt;p&gt;Peço desculpas &lt;strong&gt;pelo tamanho do post&lt;/strong&gt; porque creio que tenha ficado meio enorme rs e isso não foi &lt;strong&gt;absolutamente nada&lt;/strong&gt; do que o angular-material pode fazer, espero que tenha contribuído com seu conhecimento, e no próximo post vou explicando um pouco sobre os services do angular material,&lt;strong&gt;qualquer feedback será bem-vindo&lt;/strong&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Um pouco sobre imagens para Web</title>
      <link>http://tableless.com.br/um-pouco-sobre-imagens-para-web/</link>
      <pubDate>Tue, 05 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/um-pouco-sobre-imagens-para-web/</guid>
      <description>

&lt;p&gt;Queria falar um pouco sobre alguns formatos de imagens que usamos todos os dias. Dar algumas informações que encontrei por aí. Vamos explorar as duas principais opções de formato gráfico que pode ser usado na Web para representar gráficos simples, esquemas ou logotipos. Embora hoje possamos usar SVG em diversos momentos, principalmente para ícones ou Logos, o PNG e o GIF ainda podem ser usadas. Depois falamos mais sobre o SVG.&lt;/p&gt;

&lt;h3 id=&#34;gif&#34;&gt;GIF&lt;/h3&gt;

&lt;p&gt;GIF (sigla para Graphics Interchange Format) foi desenvolvido no final dos anos 1980 e ainda é amplamente utilizado. PNG (Portable Network Graphics) foi desenvolvido por volta de 1995, tornou-se uma recomendação W3C em 1996, e tem sido amplamente implementado na maioria dos navegadores da Web, logo em 1998.&lt;/p&gt;

&lt;p&gt;O formato GIF é um formato que comprime arquivos usando um algoritmo chamado LZW, que mantêm traços das cores e ajuda a reduzir o tamanho do arquivo.&lt;/p&gt;

&lt;p&gt;O formato suporta até 8 bits por pixel para cada imagem, permitindo que uma única imagem use até 256 cores diferentes, escolhidos a partir do espaço de cor RGB de 24 bits. Ele também suporta animações e permite uma paleta separada de até 256 cores para cada frame. Estas limitações de paleta tornam o formato GIF ruim para usar em fotos e outras imagens mais complexas, mas é bem adequado para imagens simples, tais como desenhos ou logotipos que tenham áreas de cor sólida. Tipo aqueles desenhos fazíamos no PaintBrush. 😉&lt;/p&gt;

&lt;p&gt;O ponto forte de GIF é que ele é muito amplamente suportado e, portanto, bem estabelecida como a escolha padrão para gráficos simples na Web. Em comparação com as outras opções (especialmente PNG) GIF não é tecnicamente superior, mas durante os primeiros anos da Web, quando o suporte para PNG estava começando, era de fato uma escolha mais segura.&lt;/p&gt;

&lt;p&gt;Uma das questões que envolvem o formato GIF é que o algoritmo LZW foi protegido nos EUA por uma patente detida pela empresa Unisys. A patente Unisys LZW expirou nos EUA em 20 de junho de 2003. Essa patente da LZW também expirou no Canadá, França, Itália, Alemanha, Reino Unido e Japão. A versão original do GIF era chamado de 87a. &lt;a href=&#34;https://www.w3.org/Graphics/GIF/spec-gif87.txt&#34;&gt;Se liga nessa spec do W3C&lt;/a&gt; de 15 de Junho de 1987. Aposto que alguns leitores nem tinha nascido. Eu já, tinha uns 4 anos.&lt;/p&gt;

&lt;h3 id=&#34;png&#34;&gt;PNG&lt;/h3&gt;

&lt;p&gt;PNG (Portable Network Graphics), um formato de arquivo de armazenamento portátil, bem compactada para imagens raster. PNG oferece um substituto livre de patentes para o GIF e também pode substituir muitos usos comuns do TIFF. De cores indexadas, transparência alpha e imagens truecolor são suportados.&lt;/p&gt;

&lt;p&gt;Para a Web, PNG realmente tem três vantagens principais sobre GIF:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;canais alfa (transparência variável). Eu ainda me lembro de usar algumas gambiarras para fazer o canal alfa funcionar no IE5.5 e IE6. 🙂&lt;/li&gt;
&lt;li&gt;correção de multi-plataforma gama (controle de brilho da imagem) e correção de cor&lt;/li&gt;
&lt;li&gt;entrelaçamento bidimensional (um método de visualização e carregamento progressivo).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PNG também comprime melhor que GIF em quase todos os casos (5% a 25% em casos típicos). E você pode dizer: &amp;#8220;Mas o GIF pode ser animado!&amp;#8221; mas o PNG também pode: há um formato chamado MNG que se destina como um substituto para GIF animado, mas sem as limitações impostas pela GIF (por exemplo, animações de MNG podem ter profundidade de cor total e parcial ou total transparência). No entanto, quase não há navegadores suportam MNG (algumas versões do Mozilla fazer, mas a maioria não, e IE não) para MNG útil (ainda) não é como um formato web. Mas aí entra o &lt;a href=&#34;https://en.wikipedia.org/wiki/APNG#cite_note-20&#34;&gt;APNG&lt;/a&gt;, que é outro formato que compete com o MNG, onde há um bom suporte em todos os navegadores. Contudo, não vejo muita gente usando ainda hoje.&lt;/p&gt;

&lt;p&gt;E aquele esquema de PNG8 e PNG24? Bom, PNG8 é uma abreviação para &amp;#8220;8-bit PNG,&amp;#8221; mas mais geralmente refere-se a imagens (colormapped) PNG baseada em paleta com 1, 2, 4 ou 8 bits pixels. Isto é, cada valor de pixel na imagem propriamente dita é 8 (ou menos) bits de profundidade, e que atua como um índice para um determinado valor de cor RGB de 24 bits na paleta. Uma imagem colormapped 1-bit pode referir-se a não mais de duas cores; uma imagem de 2 bits não podem ter mais do que quatro; uma imagem de 4-bit pode ter não mais do que 16; e uma imagem de 8 bits pode ter até 256 cores. Entenda que, ao contrário do GIF, as paletas do PNG podem ter qualquer número de entradas &amp;#8211; pelo menos, até o máximo permitido pela profundidade de bits &amp;#8211; Não apenas potências de dois.&lt;/p&gt;

&lt;p&gt;O PNG24, por outro lado, é uma abreviação para &amp;#8220;PNG de 24 bits&amp;#8221; e refere-se a imagens truecolor ou RGB (vermelho / verde / azul). Cada pixel em tais imagens é de 24 bits (3 bytes) de profundidade e diretamente especifica uma cor em vez de agir como um índice para uma tabela de pesquisa de cores (ou seja, uma paleta). Estas imagens, portanto, pode conter até 16,8 milhões de cores, embora os típicos tendem a usar não mais do que 50.000 ou assim.&lt;/p&gt;

&lt;p&gt;Quando você um logo simpels, ou um ícone e etc, você pode salvar como PNG8 que o resultado geralmente é melhor que GIF. Se você vê uma imagem, que não é uma foto, mas contém gradientes e uma mistura enorme de cores, você pode salvar como PNG24. Pode ser que você tenha uma compressão e qualidades melhor que JPG e com certeza é melhor que GIF. Além de ganhar o canal alpha (não, no PNG8 não dá para fazer canal alpha por causa da quantidade de cores).&lt;/p&gt;

&lt;h2 id=&#34;gargálo-e-outros-formatos-de-imagem&#34;&gt;Gargálo e outros formatos de imagem&lt;/h2&gt;

&lt;p&gt;Faz tempo que não salvo nenhum ícone ou imagem simples como GIF. O PNG sempre dá conta do trabalho, quase sempre tem compressões melhores e é compatível com todos os browsers hoje em dia. Mas imagem sempre foram um gargalo para quem trabalha com internet. Com a evolução das telas e monitores, a necessidade de usar imagens com melhor qualidade aumentou e por isso talvez os formatos de imagens tradicionais podem não servir durante muito tempo.&lt;/p&gt;

&lt;p&gt;O HTML tenta resolver parte do problema tentando te dar maneiras de servir imagens com mais ou menos qualidade ou de diferentes tamanhos dependendo dos dispositivos e etc. Há &lt;a href=&#34;http://www.slideshare.net/caelumdev/tudo-que-voc-precisa-saber-sobre-ltpicture-e-srcset&#34;&gt;uma palestra bem legal do Sergio Lopes falando sobre isso&lt;/a&gt;. Embora isso tudo ajude, as imagens ainda precisam mudar.&lt;/p&gt;

&lt;h3 id=&#34;a-tentativa-do-google-8211-webp&#34;&gt;A tentativa do Google &amp;#8211; WebP&lt;/h3&gt;

&lt;p&gt;WebP é um formato de imagem moderna que fornece &amp;#8220;lossless&amp;#8221; (algoritmo de compressão sem perda de qualidade) superior e compressão para imagens na web. Usando WebP, desenvolvedores podem criar imagens menores, mais ricas e que tornam a web mais rápida. As imagens WebP são 26% menores em tamanho em comparação com PNGs, com 25-34% menos perdas de qualidade do que as imagens JPEG.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2016/07/compression-webp_lossy.png&#34; alt=&#34;compression-webp_lossy&#34; width=&#34;744&#34; height=&#34;656&#34; class=&#34;aligncenter size-full wp-image-55075&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O Lossless das imagens WebP suporta canais alpha com um custo de apenas 22% de bytes adicionais. Para os casos quando a compressão RGB é aceitável, WebP com perdas também suporta a transparência, normalmente fornecendo arquivos três vezes menores em comparação com PNG.&lt;/p&gt;

&lt;p&gt;A compressão do WebP utiliza codificação preditiva para codificar uma imagem, o mesmo método usado pelo codec de vídeo VP8 para comprimir keyframes em vídeos. Codificação preditiva usa os valores em blocos de pixels vizinhos para predizer os valores em um determinado bloco, em seguida, codifica apenas a diferença.&lt;/p&gt;

&lt;p&gt;Para melhorar a qualidade, a imagem é segmentada em áreas que têm características visivelmente semelhantes. Para cada um desses segmentos, os parâmetros de compressão (passos de quantização, força de filtragem, etc.) estão sintonizados de forma independente. Isso produz compressão eficiente redistribuindo bits, onde eles são mais úteis.&lt;/p&gt;

&lt;p&gt;Previsão de codificação é uma razão principal pelo qual o WebP pode ser melhor que o JPEG. Blocos de quantização adaptativa faz uma grande diferença também. A codificação aritmética booleana fornece 5% -10% de ganhos de compressão em comparação com a &lt;a href=&#34;https://en.wikipedia.org/wiki/Huffman_coding&#34;&gt;codificação de Huffman&lt;/a&gt;, que é o algoritmo usado nas imagens JPEG (e também nos arquivos de MP3).&lt;/p&gt;

&lt;p&gt;O Google fez um &lt;a href=&#34;https://developers.google.com/speed/webp/docs/c_study&#34;&gt;estudo comparativo&lt;/a&gt; que mostra alguns números interessantes.&lt;/p&gt;

&lt;p&gt;O Google explica &lt;a href=&#34;https://developers.google.com/speed/webp/docs/compression#lossy_webp&#34;&gt;um monte de coisa técnica sobre o formato WebP&lt;/a&gt;. Se você tiver paciência para ler, vai ser bem legal, pelo menos para conhecer mais esse mundo maluco de algoritmos de compressão e etc. E esse é o &lt;a href=&#34;https://developers.google.com/speed/webp/&#34;&gt;site oficial do WebP&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;okay-mas-eu-posso-usar-o-que&#34;&gt;Okay, mas eu posso usar o que?&lt;/h2&gt;

&lt;p&gt;Você usa o que você quiser. Quer usar SVG para ícones, facilitando a visualização em aparelhos que tem tela retina e de alta qualidade? Vai fundo. Quer usar PNG em vez de GIF por que acha que é mais fácil de manter, sem problemas. Quer usar JPG em vez de WebP, por que sim? Beleza, não tem problema. O negócio é sempre utilizar o que é melhor para cada necessidade de imagem. Eu ainda salvo imagens, quando são fotos, em JPG. Não usei WebP de verdade ainda por causa do suporte no Safari e na indecisão do Mozilla. Mas uso PNG o tempo inteiro em vez de usar GIF.&lt;/p&gt;

&lt;p&gt;Esse ainda da muito pano para manga e está longe de acabar&amp;#8230;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>