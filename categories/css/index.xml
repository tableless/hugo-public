<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on Tableless</title>
    <link>https://tableless.github.io/hugo-public/categories/css/index.xml</link>
    <description>Recent content in Css on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/categories/css/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Crie sites em quest√£o de minutos com o Pingendo</title>
      <link>https://tableless.github.io/hugo-public/crie-sites-em-questao-de-minutos-com-o-pingendo/</link>
      <pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/crie-sites-em-questao-de-minutos-com-o-pingendo/</guid>
      <description>

&lt;p&gt;Sem d√∫vidas, o Bootstrap √© uma das frameworks mais utilizadas ultimamente, por√©m, para algumas pessoas, ainda √© meio complicado lidar com os c√≥digos, sejam eles HTML, CSS ou JavaScript.&lt;/p&gt;

&lt;h2 id=&#34;o-que-√©-o-pingendo&#34;&gt;O que √© o Pingendo?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://pingendo.com/&#34;&gt;Pingendo&lt;/a&gt; √© um programa de interface simples e de f√°cil uso. O Pingendo √© um criador de sites em Bootstrap 3 que permite a cria√ß√£o de websites de maneira simples e r√°pida.&lt;/p&gt;

&lt;h2 id=&#34;drag-and-drop&#34;&gt;Drag and drop&lt;/h2&gt;

&lt;p&gt;O programa usa um modo muito popular em criadores de sites online como Wix, Weebly, etc. √â s√≥ arrastar e soltar os elementos desejados dentro da √°rea do site e pronto, a m√°gica est√° feita.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/mGmv44Y.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;imagens&#34;&gt;Imagens&lt;/h2&gt;

&lt;p&gt;Com o Pingendo voc√™ tem a seu dispor uma ampla quantidade de imagens livres de direitos autorais e com alt√≠ssima qualidade vindas direto do &lt;a href=&#34;https://unsplash.com/&#34;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/NMxtVad.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;fontes&#34;&gt;Fontes&lt;/h2&gt;

&lt;p&gt;A altera√ß√£o das fontes pode ser feita facilmente atrav√©s do menu lateral do programa. As fontes s√£o carregadas diretamente do &lt;a href=&#34;https://fonts.google.com/&#34;&gt;Google Fonts&lt;/a&gt;, um dos mais completos banco de dados de fontes da internet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/9RGXujM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;cores&#34;&gt;Cores&lt;/h2&gt;

&lt;p&gt;A altera√ß√£o das cores do tema tamb√©m podem ser alteradas atrav√©s do menu lateral, basta escolher as que mais lhe agradam.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/68jKTOb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;responsividade&#34;&gt;Responsividade&lt;/h2&gt;

&lt;p&gt;O Pingendo permite a visualiza√ß√£o do seu projeto em telas de diversos tamanhos. Facilitando assim o teste de responsividade do seu website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/dCHV33W.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;c√≥digo&#34;&gt;C√≥digo&lt;/h2&gt;

&lt;p&gt;Se voc√™ possu√≠ alguma experiencia, mesmo que m√≠nima, em HTML e/ou CSS, pode realizar altera√ß√µes direto do programa e velas sendo aplicadas em tempo real.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/3Fv69GJ.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pingendo est√° dispon√≠vel para as plataformas Mac, Windows e Linux no site &lt;a href=&#34;https://pingendo.com/&#34;&gt;www.pingendo.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Minha experi√™ncia com o CT (Centro de Treinamento)</title>
      <link>https://tableless.github.io/hugo-public/minha-experiencia-com-o-ct-centro-de-treinamento/</link>
      <pubDate>Sun, 22 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/minha-experiencia-com-o-ct-centro-de-treinamento/</guid>
      <description>&lt;p&gt;Meu nome √© Danilo, tenho 25 anos, e moro em S√£o Paulo. Antes de conhecer o projeto do CT‚Ää, eu havia trabalhado pouco tempo como Front-end em uma empresa chamada Athos Inform√°tica. Minha experi√™ncia n√£o foi uma das melhores, e acabou n√£o dando muito certo. Por√©m, aconteceu algo muito bacana‚Ää, quando eu fiquei dispon√≠vel para o mercado de trabalho.&lt;/p&gt;

&lt;p&gt;Comecei a frequentar todos os Meetup&amp;#8217;s que eu podia, conversei com muitos Dev&amp;#8217;s da comunidade, e coloquei de fato a m√£o na massa. Certo dia fu√ßando o GitHub, descobri o projeto do &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;https://medium.com/trainingcenter/hello-world-conhe%C3%A7a-o-centro-de-treinamento-4a47a1230b0c&#34; target=&#34;_blank&#34;&gt;CT(Centro de Treinamento)&lt;/a&gt;‚Ää ‚Ääfoi tudo muito lindo, era exatamente o que eu precisava, pensava comigo &amp;#8220;porra que oportunidade do caralho de criar algo da hora com algu√©m da comunidade.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A sementinha do capeta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vontade n√£o me faltava, o que precisava mesmo era de coragem para encarar os fatos. Ent√£o, clonei o reposit√≥rio, baixei pra minha m√°quina e fiquei lendo e relendo o README do projeto.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A decis√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;De tanto que eu li, criei coragem e como recomendado, abri uma issue no Github e deixei minha BIO dispon√≠vel para os mentores do CT.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56933&#34; src=&#34;uploads/2017/01/1-vpeNioZRCJN482Gy1rChhw.png&#34; alt=&#34;&#34; width=&#34;790&#34; height=&#34;517&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A resposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Depois de pouco tempo um cara muito gente boa o &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/9ccc2febef24&#34; target=&#34;_blank&#34;&gt;William Oliveira&lt;/a&gt;‚Ää‚Äî‚Ääme responde o seguinte:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56935&#34; src=&#34;uploads/2017/01/1-5uF9OA2mlkg_0hyuLd1prQ.png&#34; alt=&#34;&#34; width=&#34;775&#34; height=&#34;144&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Passaram-se 2 dias, e eu j√° imaginava que ningu√©m iria me adotar como pupilo. Hahaha!! Foi ai que apareceu um cara que eu j√° admirava nos bastidores h√° algum tempo.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Um pupilo foi adotado&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E eis que ele veio, demorou‚Ä¶ Mas veio! haha o nome dele? Nada mais nada menos do que o querido &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/7af9a79d81d6&#34; target=&#34;_blank&#34;&gt;Wendell Adriel&lt;/a&gt;. Calorosamente ele disse:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56937&#34; src=&#34;uploads/2017/01/1-k7GFUhcUoRq7X77SaBPa7w.png&#34; alt=&#34;&#34; width=&#34;771&#34; height=&#34;319&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Voc√™s j√° devem imaginar como eu fiquei feliz de saber que fui adotado‚Ä¶ Hahaha!! ‚ÄäNo mesmo dia o Wendell‚Ää j√° foi se socializando via issue mesmo¬†üôÇ veja:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56939&#34; src=&#34;uploads/2017/01/1-fWHtAnVYI2p6SOQQvSii4A.png&#34; alt=&#34;&#34; width=&#34;790&#34; height=&#34;151&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Dai ele me chamou no Slack e come√ßamos a definir nossa rotina.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A primeira abordagem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O primeiro contato foi bem tranquilo, ele pediu para me apresentar, falar sobre quais eram meus objetivos a curto, m√©dio e longo prazo, e assim, definimos juntos uma rotina de cria√ß√£o de um projeto real.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Nosso projeto lindo (Pok√©mon‚Ää‚Äî‚Ääbusque informa√ß√µes de seu pok√©mon favorito)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56940&#34; src=&#34;uploads/2017/01/1-zZ3F1dGnARKZpaGpZc-UIA.png&#34; alt=&#34;&#34; width=&#34;1126&#34; height=&#34;585&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O projeto foi arquitetado em cima dos meus objetivos‚Ää, ele usa as tecnologias:&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li id=&#34;bf67&#34; class=&#34;graf graf--li graf-after--p&#34;&gt;
    Html5
  &lt;/li&gt;
  &lt;li id=&#34;525a&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    Css3
  &lt;/li&gt;
  &lt;li id=&#34;2fab&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    VanilhaJS
  &lt;/li&gt;
  &lt;li id=&#34;40ad&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    Ajax
  &lt;/li&gt;
  &lt;li id=&#34;54bc&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    API Rest
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&#34;0a9d&#34; class=&#34;graf graf--p graf-after--li&#34;&gt;
  O projeto ainda est√° em constru√ß√£o. No final vamos subir ele no Heroku pra voc√™s verem como ficou. Temos muito o que acrescentar ainda e nosso objetivo √© aplicar mais tecnologia nele.
&lt;/p&gt;

&lt;p id=&#34;c918&#34; class=&#34;graf graf--p graf-after--p&#34;&gt;
  Voc√™ deve estar se perguntando mais foi s√≥ um projetinho que eles criaram? Nops! Estou empregado tamb√©m!¬†üôÇ Iniciei minha jornada em uma empresa incr√≠vel chamada @Amil‚Ää, e ainda por cima, trabalho com uma pessoa fera a &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/f94ec1390498&#34; target=&#34;_blank&#34;&gt;Andr√©a Zambrana&lt;/a&gt;.
&lt;/p&gt;

&lt;p id=&#34;bd60&#34; class=&#34;graf graf--p graf-after--p&#34;&gt;
  Quero agradecer a todos os envolvidos no CT‚Ää, ‚Ääe em especial ao meu Mentor e amigo &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/7af9a79d81d6&#34; target=&#34;_blank&#34;&gt;Wendell Adriel&lt;/a&gt;‚Ää pela paci√™ncia do dia-dia.¬†üôÇ
&lt;/p&gt;

&lt;p id=&#34;87ec&#34; class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  E o que te impede de procurar hoje mesmo um Mentor (a)?
&lt;/p&gt;

&lt;p class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  Voc√™ deseja ser um Mentor (a)?
&lt;/p&gt;

&lt;p class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  N√£o perca tempo muitos pupilos est√£o esperando por voc√™! xD
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Analisando o c√≥digo Stylus de um projeto</title>
      <link>https://tableless.github.io/hugo-public/iniciando-com-o-pre-processador-stylus/</link>
      <pubDate>Fri, 18 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/iniciando-com-o-pre-processador-stylus/</guid>
      <description>

&lt;h2 id=&#34;o-que-√©-um-pr√©-processador-css&#34;&gt;&lt;strong&gt;O que √© um pr√©-processador CSS?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Como o nome ja diz, √© uma linguagem que precisa ser pr√©-processada por um &lt;em&gt;parser&lt;/em&gt; para assim gerar o arquivo de extens√£o¬†&lt;strong&gt;.css&lt;/strong&gt; que ser√° renderizado pelo browser. Atualmente h√° v√°rios pr√©-processadores que voc√™ pode utilizar para facilitar a codifica√ß√£o e reaproveitamento de c√≥digo, voc√™ pode estar utilizando SASS, LESS e Stylus que s√£o os mais conhecidos no mercado. A diferen√ßa do &lt;a href=&#34;http://stylus-lang.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Stylus&lt;/a&gt; para os outros pr√©-processadores que est√£o sendo utilizados no mercado √© que ele j√° √© baseado em &lt;a href=&#34;https://nodejs.org/en/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;NodeJS&lt;/a&gt; e n√£o em ruby. Por conta disso n√£o h√° necessidade de uma tecnologia intermedi√°ria em seu workflow para process√°-lo.&lt;/p&gt;

&lt;h2 id=&#34;vamos-come√ßar&#34;&gt;Vamos come√ßar!&lt;/h2&gt;

&lt;p&gt;Tendo em mente que voc√™ ja conhece um pouco sobre pr√©-processadores e algumas de suas vantagens (vari√°veis, mixins, operadores, fun√ß√µes) vamos criar um projeto utilizando algumas dessas funcionalidades.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fa√ßa o download do &lt;a href=&#34;https://nodejs.org/en/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;&lt;strong&gt;NodeJS&lt;/strong&gt;&lt;/a&gt; e efetue a instala√ß√£o&lt;strong&gt;;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Considerando que tenha o node rodando em seu sistema, instale o &lt;strong&gt;Stylus¬†&lt;/strong&gt;de forma global e execute o seguinte comando em seu terminal &lt;strong&gt;npm install -g stylus&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Vamos criar a estrutura de diret√≥rios de nosso projeto:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/director.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Ap√≥s ter seu diret√≥rio criado de acordo com a estrutura da imagem acima, voc√™ pode acess√°-lo via terminal com o comando &lt;strong&gt;cd /seu-diretorio&lt;/strong&gt; e na sequ√™ncia executar o compilador stylus da seguinte maneira:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;stylus -w a&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;par√¢metros&#34;&gt;&lt;strong&gt;Par√¢metros&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;-w (Observar altera√ß√µes nos arquivos¬†.styl e re-compilar gerando os arquivos resultantes¬†.css);&lt;/li&gt;
&lt;li&gt;-o (Ap√≥s este par√¢metro deve ser passado o caminho que deve ser salvo o arquivo compilado);&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;desmistificando-a-estrutura&#34;&gt;Desmistificando a Estrutura&lt;/h2&gt;

&lt;h3 id=&#34;assets&#34;&gt;ASSETS&lt;/h3&gt;

&lt;p&gt;Costumo sempre utilizar esta estrutura como ra√≠z para os diret√≥rios front-end principalmente pela facilidade em migrar para servidores independentes e tamb√©m para evitar confus√£o entre o pessoal de back-end.&lt;/p&gt;

&lt;h3 id=&#34;assets-css&#34;&gt;&lt;strong&gt;ASSETS/css&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Arquivos gerados ap√≥s executar o pr√©-processador, gerando assim os arquivos com extens√£o¬†&lt;strong&gt;.css&lt;/strong&gt; prontos para utiliza√ß√£o em seu c√≥digo.&lt;/p&gt;

&lt;h3 id=&#34;assets-stylus&#34;&gt;ASSETS/stylus&lt;/h3&gt;

&lt;p&gt;Neste diret√≥rio fica toda a nossa organiza√ß√£o de diret√≥rios e arquivos¬†.styl (Extens√£o utilizada pelo &lt;strong&gt;Stylus&lt;/strong&gt;).&lt;/p&gt;

&lt;h3 id=&#34;assets-stylus-base-tipografia-reset-vari√°veis-cores&#34;&gt;ASSETS/stylus/base (Tipografia, reset, vari√°veis, cores)&lt;/h3&gt;

&lt;p&gt;O nome dos arquivos em si √© bem descritivo, colors.styl para cores, variables.styl para vari√°veis reutiliz√°veis, typography.styl para defini√ß√µes de fonts e reset.styl (reset de elementos css).&lt;/p&gt;

&lt;h3 id=&#34;assets-stylus-components-pequenos-componentes&#34;&gt;ASSETS/stylus/components (Pequenos componentes)&lt;/h3&gt;

&lt;p&gt;Utilizado para pequenos componentes como bot√µes, formul√°rios, modals e o que surgir de necessidade conforme o desenvolvimento de seu projeto.&lt;/p&gt;

&lt;h3 id=&#34;assets-stylus-helpers-utilit√°rios-para-seus-projetos&#34;&gt;ASSETS/stylus/helpers (Utilit√°rios para seus projetos)&lt;/h3&gt;

&lt;p&gt;Neste diret√≥rio geralmente s√£o encontrados os seguintes arquivos: functions.styl, helpers.styl (classes utilit√°rias ex.:¬†.pull-left,¬†.show), mixins.styl (s√£o blocos de c√≥digos reutiliz√°veis semelhantes a fun√ß√µes).&lt;/p&gt;

&lt;h3 id=&#34;assets-stylus-layout-defini√ß√µes-do-seu-layout&#34;&gt;ASSETS/stylus/layout (Defini√ß√µes do seu¬†layout)&lt;/h3&gt;

&lt;p&gt;Voc√™ vai encontrar os arquivos com defini√ß√µes de estilo com a cara do seu layout, como header, footer e grid.&lt;/p&gt;

&lt;h3 id=&#34;assets-stylus-theme-temas-do-projeto&#34;&gt;ASSETS/stylus/theme (Temas do¬†projeto)&lt;/h3&gt;

&lt;p&gt;Defini√ß√µes de temas do projeto. Caso o projeto tenha mais de um tema, √© uma boa pr√°tica para manter a organiza√ß√£o e facilidade de manuten√ß√£o no c√≥digo.&lt;/p&gt;

&lt;h3 id=&#34;assets-stylus-main-styl&#34;&gt;ASSETS/stylus/main.styl&lt;/h3&gt;

&lt;p&gt;Este √© o arquivo prim√°rio que ser√° lido pelo seu compilador, deve possuir todas as importa√ß√µes necess√°rias para gerar o arquivo¬†.css resultante. Obs: Todos os arquivos all.styl servem para facilitar a importa√ß√£o no arquivo principal.&lt;/p&gt;

&lt;h2 id=&#34;botando-a-m√£o-na-massa&#34;&gt;Botando a m√£o na¬†massa&lt;/h2&gt;

&lt;p&gt;Uma vez que voc√™ compreendeu a ideia dos diret√≥rios criados e est√° com o compilador rodando corretamente, vamos ao c√≥digo:&lt;/p&gt;

&lt;h3 id=&#34;assets-stylus-base&#34;&gt;assets/stylus/base&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;all.styl (Import de todos os arquivos do diret√≥rio)&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;// Import all from base
&amp;lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&amp;gt;@import&amp;lt;/a&amp;gt; ‚Äòreset.styl‚Äô
&amp;lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&amp;gt;@import&amp;lt;/a&amp;gt; ‚Äòcolors.styl‚Äô
&amp;lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&amp;gt;@import&amp;lt;/a&amp;gt; ‚Äòtypography.styl‚Äô
&amp;lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&amp;gt;@import&amp;lt;/a&amp;gt; ‚Äòvariables.styl‚Äô&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;colors.styl (Defini√ß√µes de cores do projeto)&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;orange = #FF6347
gray-darker = #AAAAAA
gray-lighter = #EEEEEE
lighter = #FFF
darker = #444444
blue = #0080FF
blue-lighter = #1EC0FF
yellow = #F9C00C
red = #E71D36
green = #3AC569
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;reset.styl (Foi utilizado o normalize.css)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://necolas.github.io/normalize.css/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;normalize.css&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;typography.styl (Defini√ß√µes de fonts)&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;font-size-h1 = 40px
font-size-h2 = 34px
font-size-h3 = 28px
line-height-h1 = 55px
line-height-h2 = 46px
line-height-h3 = 38px
h1, h2, h3
 color darker
 font-weight bold
h1
 font-size font-size-h1
 line-height line-height-h1
 color darker
 margin-bottom 30px
h2
 font-size font-size-h2
 line-height line-height-h1
h3
 font-size font-size-h3
 line-height line-height-h3
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;variables.styl (Vari√°veis reutiliz√°veis do projeto)&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;// Font Weights
light = 300
regular = 400
bold = 700&lt;/pre&gt;

&lt;pre&gt;// Base Font
base-font-family = ‚ÄòOpen Sans‚Äô, sans-serif
base-font-weight = light
base-font-size = 20px
base-line-height = 27px
form-label-font-size = base-font-size
form-field-font-size = 18px&lt;/pre&gt;

&lt;pre&gt;// Buttons
btn-font-weight = bold
btn-default-border = gray-darker
btn-default-color = darker
btn-primary-color = lighter
btn-success-color = lighter
btn-danger-color = lighter
btn-warning-color = lighter
btn-info-color = lighter
&lt;/pre&gt;

&lt;h3 id=&#34;assets-stylus-components&#34;&gt;assets/stylus/components&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;all.styl&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;// Import all from components
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòbuttons.styl‚Äô
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòforms.styl‚Äô&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;buttons.styl&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;.btn
 font-weight bold
 padding 15px 27px
 border 1px solid transparent
 display inline-block
 cursor pointer
 border-radius(5px)
&amp;-info
 &amp;-primary
 &amp;-success
 &amp;-danger
 color lighter
&amp;-default
 color darker
 border-color gray-darker
 background-color lighter
&amp;-primary
 background-color blue
 border-color blue
&amp;:hover
 &amp;:focus
 background-color darken(blue, 20%)
 border-color darken(blue, 20%)
&amp;-info
 background-color blue-lighter
 border-color blue-lighter
&amp;:hover
 &amp;:focus
 background-color darken(blue-lighter, 20%)
 border-color darken(blue-lighter, 20%)
&amp;-warning
 background-color yellow
 border-color yellow
&amp;:hover
 &amp;:focus
 background-color darken(yellow, 20%)
 border-color darken(yellow, 20%)
&amp;-success
 background-color green
 border-color green
&amp;:hover
 &amp;:focus
 background-color darken(green, 20%)
 border-color darken(green, 20%)
&amp;-danger
 background-color red
 border-color red
&amp;:hover
 &amp;:focus
 background-color darken(red, 20%)
 border-color darken(red, 20%)&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;forms.styl&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;.form
 &amp;__group
 margin-bottom 20px
&amp;__label
 color darker
 font-size form-label-font-size
 font-weight bold
 margin-bottom 10px
&amp;__field
 display block
 width 100%
 padding 6px 18px
 height 60px
 border 1px solid gray-darker
 color darker
 font-size form-field-font-size
 border-radius(3px)
&amp;:hover
 &amp;:focus
 border-color orange&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;helpers.styl (Utilit√°rios do projeto)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;all.styl (Import de todos os arquivos do diret√≥rio)&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;// Import all from helpers
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòfunctions.styl‚Äô
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòhelpers.styl‚Äô
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòmixins.styl‚Äô&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;functions.styl&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;make-media-queries-breakpoints()
 for screen-width in screen-desktop-large screen-desktop screen-tablet screen-mobile
 &lt;a title=&#34;Twitter profile for @media&#34; href=&#34;http://twitter.com/media&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@media&lt;/a&gt; only screen and (max-width: screen-width)
 if (screen-width == screen-desktop-large)
 .container
 width container-desktop
 else if (screen-width == screen-desktop)
 .container
 width container-tablet
 else if (screen-width == screen-tablet)
 .container
 .columns
 width container-mobile !important
make-row()
 margin 0 (-(grid-gutter-width / 2))
calc-container-padding()
 padding 0 (grid-gutter-width / 2)
make-columns()
 for i in grid-columns..0
 .col-{i}
 width percentage(i, grid-columns)
.col-offset-{i}
 margin-left percentage(i, grid-columns)
percentage(index, divider)
 if index == 0
 0
 else
 unit((index * 100) / divider, ‚Äú%‚Äù)&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;helpers.styl (Classes utilit√°rias para uso no html)&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;.pull-left
 float left
.pull-right
 float right
.show
 display block
.hide
 display none
.text-center
 text-align center
.text-left
 text-align left
.text-right
 text-align right
.absolute
 position absolute
.relative
 position relative
.in-block
 display inline-block
.center-block
 margin 0 auto
 display block
.img-responsive
 max-width 100%
.clearfix
 &amp;:before
 &amp;:after
 content ‚Äú ‚Äú
 display table
&amp;:after
 clear both&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;mixins.styl&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;vendor(prop, args)
 -webkit-{prop} args
 -moz-{prop} args
 {prop} args
border-radius()
 vendor(‚Äòborder-radius‚Äô, arguments)
box-shadow()
 vendor(‚Äòbox-shadow‚Äô, arguments)
opacity(n)
 opacity n
 filter unquote(‚Äòprogid:DXImageTransform.Microsoft.Alpha(Opacity=‚Äô + round(n * 100) + ‚Äò)‚Äô)&lt;/pre&gt;

&lt;h3 id=&#34;assets-stylus-layout&#34;&gt;assets/stylus/layout&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;header.styl&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.header
 background-color orange
 padding 30px 0
.header__img
 max-width 150px&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;footer.styl&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.footer
 padding 40px 0
 background-color darker
 color lighter
&amp; a
 color lighter
 &amp;:hover
 color orange
&amp; p
 font-size 16px
 line-height 22px
 margin 0 0 10px 0
&amp; .fa
 color #E84545
 margin 0 2px
&amp; img
 max-width 150px
 &amp;:hover
 opacity(0.6)&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;grid.styl (Sistema de grids utilizado no projeto)&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;// Media Queries Breakpoints
screen-desktop-large = 1200px
screen-desktop = 992px
screen-tablet = 768px
screen-mobile = 480px
// Grid System
grid-columns = 12
grid-gutter-width = 30px
// Container Sizes
container-desktop-large = 1170px
container-desktop = 940px
container-tablet = 720px
container-mobile = 100%
.container
 width container-desktop-large
 calc-container-padding()
 margin 0 auto
.row
.columns
 box-sizing border-box
.row
 make-row()
&amp;:before
 &amp;:after
 content ‚Äú ‚Äú
 display table
&amp;:after
 clear both
.columns
 &lt;a title=&#34;Twitter profile for @extend&#34; href=&#34;http://twitter.com/extend&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@extend&lt;/a&gt; .relative
 &lt;a title=&#34;Twitter profile for @extend&#34; href=&#34;http://twitter.com/extend&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@extend&lt;/a&gt; .pull-left
 padding 0 (grid-gutter-width / 2)
make-media-queries-breakpoints()
make-columns()&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;login.styl&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.content
 padding-top 60px
 padding-bottom 60px
 min-height 470px
&amp;__login
 padding 30px
 border-radius(3px)
 background-color gray-lighter
 box-shadow(0 0 5px rgba(0,0,0,0.09))
 max-width 530px
 background-color darker
&amp; .form__label
 &amp; h3
 color lighter
&amp; h3
 margin-bottom 20px&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;assets/stylus/themes (Temas do projeto admin, padr√£o e quais forem necess√°rios)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;default.styl (Tema padr√£o)&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;*
 vendor(‚Äòbox-sizing‚Äô, border-box)
body
 font-family base-font-family
 font-weight base-font-weight
 font-size base-font-size
 line-height base-line-height
 background-color lighter
a
 text-decoration none&lt;/pre&gt;

&lt;h3 id=&#34;assets-stylus-main-styl-arquivo-principal&#34;&gt;assets/stylus/main.styl (Arquivo principal)&lt;/h3&gt;

&lt;p&gt;Neste arquivo voc√™ deve efetuar todas as importa√ß√µes necess√°rias do seu projeto. Em nosso tutorial o arquivo ficou assim:&lt;/p&gt;

&lt;pre&gt;&lt;a title=&#34;Twitter profile for @charset&#34; href=&#34;http://twitter.com/charset&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@charset&lt;/a&gt; ‚ÄúUTF-8‚Äù
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòbase/all.styl‚Äô
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòhelpers/all.styl‚Äô
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòcomponents/all.styl‚Äô
// Imports from layout
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòlayout/grid.styl‚Äô
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòlayout/header.styl‚Äô
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòlayout/footer.styl‚Äô
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòlayout/login.styl‚Äô
// Import themes
&lt;a title=&#34;Twitter profile for @import&#34; href=&#34;http://twitter.com/import&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@import&lt;/a&gt; ‚Äòthemes/default.styl‚Äô&lt;/pre&gt;

&lt;p&gt;Por fim, crie um arquivo &lt;strong&gt;index.html&lt;/strong&gt; na ra√≠z de seu projeto com o seguinte c√≥digo:&lt;/p&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=‚Äùen‚Äù&amp;gt;
&amp;lt;head&amp;gt;
 &amp;lt;meta charset=‚ÄùUTF-8&#34;&amp;gt;
 &amp;lt;title&amp;gt;Iniciando com Stylus&amp;lt;/title&amp;gt;
&amp;lt;link href=‚Äù&lt;a href=&#34;https://fonts.googleapis.com/css?family=Open+Sans:300,400,700&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;https://fonts.googleapis.com/css?family=Open+Sans:300,400,700&lt;/a&gt;&#34; rel=‚Äùstylesheet‚Äù&amp;gt;
&amp;lt;link rel=‚Äùstylesheet‚Äù href=‚Äù&lt;a href=&#34;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css&lt;/a&gt;&#34;&amp;gt;
&amp;lt;link rel=‚Äùstylesheet‚Äù href=‚Äùassets/css/main.css‚Äù&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
 &amp;lt;header class=‚Äùheader‚Äù&amp;gt;
 &amp;lt;div class=‚Äùcontainer‚Äù&amp;gt;
 &amp;lt;img class=‚Äùheader__img img-responsive center-block‚Äù src=‚Äùassets/images/stylus-logo.png‚Äù alt=‚Äù‚Äù /&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/header&amp;gt;
&amp;lt;div class=‚Äùcontent container‚Äù&amp;gt;
 &amp;lt;h1 class=‚Äùtext-center‚Äù&amp;gt;Iniciando com Stylus&amp;lt;/h1&amp;gt;
&amp;lt;div class=‚Äùcontent__login center-block‚Äù&amp;gt;
 &amp;lt;h3 class=‚Äùtext-center‚Äù&amp;gt;Acesse sua conta&amp;lt;/h3&amp;gt;
&amp;lt;form action=‚Äù#‚Äù&amp;gt;
 &amp;lt;div class=‚Äùform__group‚Äù&amp;gt;
 &amp;lt;label for=‚Äùname‚Äù class=‚Äùform__label show‚Äù&amp;gt;Nome&amp;lt;/label&amp;gt;
&amp;lt;input type=‚Äùtext‚Äù name=‚Äùname‚Äù id=‚Äùname‚Äù class=‚Äùform__field‚Äù&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=‚Äùform__group‚Äù&amp;gt;
 &amp;lt;label for=‚Äùemail‚Äù class=‚Äùform__label show‚Äù&amp;gt;Email&amp;lt;/label&amp;gt;
&amp;lt;input type=‚Äùtext‚Äù name=‚Äùemail‚Äù id=‚Äùemail‚Äù class=‚Äùform__field‚Äù&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=‚Äùsubmit text-right‚Äù&amp;gt;
 &amp;lt;button type=‚Äùsubmit‚Äù class=‚Äùbtn btn-success‚Äù&amp;gt;
 Submit
 &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
&amp;lt;footer class=‚Äùfooter text-center‚Äù&amp;gt;
 &amp;lt;div class=‚Äùcontainer‚Äù&amp;gt;
 &amp;lt;p&amp;gt;
 Feito com &amp;lt;i class=‚Äùfa fa-heart‚Äù&amp;gt;&amp;lt;/i&amp;gt; por &amp;lt;a href=‚Äù&lt;a href=&#34;http://helderburato.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;http://helderburato.com/&lt;/a&gt;‚Äù&amp;gt;Helder Burato Berto&amp;lt;/a&amp;gt;
 &amp;lt;/p&amp;gt;
&amp;lt;a class=‚Äùin-block‚Äù href=‚Äù&lt;a href=&#34;http://uilab.com.br/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;http://uilab.com.br/&lt;/a&gt;&#34;&amp;gt;
 &amp;lt;img class=‚Äùimg-responsive‚Äù src=‚Äùassets/images/uilab-logo.png‚Äù alt=‚Äù‚Äù&amp;gt;
 &amp;lt;/a&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/footer&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;h2 id=&#34;compreendendo-a-linguagem-stylus&#34;&gt;Compreendendo a linguagem Stylus&lt;/h2&gt;

&lt;p&gt;Voc√™ pode observar que foram utilizados algumas particularidades da linguagem, que n√£o s√£o comuns para quem est√° acostumado apenas com CSS, sendo elas: &lt;strong&gt;&amp;amp;:&lt;/strong&gt; Usado para referenciar parcialmente um elemento citado anteriormente, por exemplo:&lt;/p&gt;

&lt;pre&gt;.foo
 color #000
 &amp; a
 color #fff&lt;/pre&gt;

&lt;p&gt;Ser√° compilado para:&lt;/p&gt;

&lt;pre&gt;.foo {
 color: #000;
}
.foo a {
 color: #fff;
}&lt;/pre&gt;

&lt;p&gt;Voc√™ percebe o quanto isso √© poderoso e tem utilidade?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;border-radius():&lt;/strong&gt; Mixin definido para ser reutilizado e com possibilidade de uso com par√¢metros.&lt;/p&gt;

&lt;p&gt;Exemplo de uso:&lt;/p&gt;

&lt;pre&gt;.foo
 border-radius(5px)&lt;/pre&gt;

&lt;p&gt;Ser√° compilado para:&lt;/p&gt;

&lt;pre&gt;.foo {
 border-radius: 5px;
 -webkit-border-radius: 5px;
 -moz-border-radius: 5px;
}&lt;/pre&gt;

&lt;p&gt;Observe que foi gerado o c√≥digo ja com os prefixos para outros browsers, facilitando na escrita.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IF&lt;/strong&gt; e &lt;strong&gt;FOR:&lt;/strong&gt; Vamos descrever o uso de IF e for com uma fun√ß√£o que foi utilizado no tutorial chamada &lt;strong&gt;make-media-queries-breakpoints()&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;make-media-queries-breakpoints()
 for screen-width in screen-desktop-large screen-desktop screen-tablet screen-mobile
 &lt;a title=&#34;Twitter profile for @media&#34; href=&#34;http://twitter.com/media&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@media&lt;/a&gt; only screen and (max-width: screen-width)
 if (screen-width == screen-desktop-large)
 .container
 width container-desktop
 else if (screen-width == screen-desktop)
 .container
 width container-tablet
 else if (screen-width == screen-tablet)
 .container
 .columns
 width container-mobile !important&lt;/pre&gt;

&lt;p&gt;N√≥s utilizamos o FOR para percorrer as vari√°veis declaradas posteriormente e IF para modificar a width de nosso container principal de acordo com a media queria utilizada.&lt;/p&gt;

&lt;p&gt;O c√≥digo acima ap√≥s a compila√ß√£o:&lt;/p&gt;

&lt;pre&gt;&lt;a title=&#34;Twitter profile for @media&#34; href=&#34;http://twitter.com/media&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@media&lt;/a&gt; only screen and (max-width: 1200px) {
 .container {
 width: 1170px;
 }
}
&lt;a title=&#34;Twitter profile for @media&#34; href=&#34;http://twitter.com/media&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@media&lt;/a&gt; only screen and (max-width: 992px) {
 .container {
 width: 720px;
 }
}
&lt;a title=&#34;Twitter profile for @media&#34; href=&#34;http://twitter.com/media&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@media&lt;/a&gt; only screen and (max-width: 768px) {
 .container,
 .columns {
 width: 100%;
 }
}&lt;/pre&gt;

&lt;h3 id=&#34;sintaxe&#34;&gt;Sintaxe&lt;/h3&gt;

&lt;p&gt;Voc√™ provavelmente deve ter percebido que com Stylus n√£o temos a necessidade do uso de &lt;strong&gt;{}&lt;/strong&gt; e&lt;strong&gt;;&lt;/strong&gt; nas declara√ß√µes CSS, isso em pr√°tica ajuda muito na produtividade.&lt;/p&gt;

&lt;h3 id=&#34;vari√°veis&#34;&gt;Vari√°veis&lt;/h3&gt;

&lt;p&gt;Voc√™ pode declarar vari√°veis sem o uso de &lt;strong&gt;$&lt;/strong&gt; mas caso voc√™ j√° utilizou outros pr√©;-processadores, fica a seu crit√©;rio o uso dele ou n√£o.&lt;/p&gt;

&lt;p&gt;Bom espero que tenha conseguido compartilhar um pouco do que √©; esta grande ferramenta e que lhe seja √∫til na hora de pensar em usar um pr√©;-processador.&lt;/p&gt;

&lt;p&gt;Um grande abra√ßo, obrigado!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Link do Projeto: &lt;a href=&#34;https://helderburato.github.io/iniciando-stylus/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;https://helderburato.github.io/iniciando-stylus/&#34;&gt;https://helderburato.github.io/iniciando-stylus/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Git do Projeto: &lt;a href=&#34;https://github.com/helderburato/iniciando-stylus&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;https://github.com/helderburato/iniciando-stylus&#34;&gt;https://github.com/helderburato/iniciando-stylus&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Layout: &lt;a href=&#34;https://github.com/helderburato/iniciando-stylus/tree/master/sketch&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;https://github.com/helderburato/iniciando-stylus/tree/master/sketch&#34;&gt;https://github.com/helderburato/iniciando-stylus/tree/master/sketch&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>#BlendingCSS ‚Äì Modos de mesclagem em CSS: Teoria da Cor e Aplica√ß√£o Pr√°tica</title>
      <link>https://tableless.github.io/hugo-public/blendingcss-modos-de-mesclagem-em-css-teoria-da-cor-e-aplicacao-pratica/</link>
      <pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/blendingcss-modos-de-mesclagem-em-css-teoria-da-cor-e-aplicacao-pratica/</guid>
      <description>

&lt;p&gt;OBS:. o m√©todo abordado sobre Blending (mesclagem de cores e camadas) n√£o √© igual, mas n√£o diferente do m√©todo abordado pela nossa colega &lt;a href=&#34;http://tableless.com.br/?author=14&#34;&gt;Dani Guerrato&lt;/a&gt; no post &lt;a href=&#34;http://tableless.com.br/modos-de-mesclagem-em-css/&#34;&gt;Modos de Mesclagem em CSS ‚Äì Blend Mode CSS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Diga-se de passagem n√≥s abordaremos vis√µes abrangentes e caracter√≠sticas t√©cnicas do m√©todo de aplica√ß√£o de Blending no CSS, mas se voc√™ quer dar uma previa nos conceitos de background css antes de ler esse post seria legal: [OBS:. o m√©todo abordado sobre Blending (mesclagem de cores e camadas) n√£o √© igual, mas n√£o diferente do m√©todo abordado pela nossa colega &lt;a href=&#34;http://tableless.com.br/?author=14&#34;&gt;Dani Guerrato&lt;/a&gt; no post &lt;a href=&#34;http://tableless.com.br/modos-de-mesclagem-em-css/&#34;&gt;Modos de Mesclagem em CSS ‚Äì Blend Mode CSS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Diga-se de passagem n√≥s abordaremos vis√µes abrangentes e caracter√≠sticas t√©cnicas do m√©todo de aplica√ß√£o de Blending no CSS, mas se voc√™ quer dar uma previa nos conceitos de background css antes de ler esse post seria legal:]&lt;a href=&#34;tem imagens bem legais&#34;&gt;3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ok, dados os avisos bora para o c√≥digo!&lt;/p&gt;

&lt;p&gt;Se voc√™ usa Photoshop pode estar familiarizado com o &amp;#8220;Blending&amp;#8221; (modos de mesclagem de camadas).¬†&lt;/p&gt;

&lt;p&gt;Eles n√≥s permitem que voc√™ combinar &amp;#8220;camadas&amp;#8221; ( ou layers ) de formas diferentes e eles s√£o muito divertido para brincar. O Blending CSS (&lt;em&gt;modos de mistura em CSS&lt;/em&gt;), no entanto,¬† infelizmente ainda n√£o s√£o suportados universalmente, mas logo estar√£o certamente no seu caminho.&lt;/p&gt;

&lt;p&gt;Neste tutorial, vamos aprender como trabalhar com as diferentes maneiras que voc√™ pode implementar Blending CSS (modos de mistura) usados CSS.&lt;/p&gt;

&lt;h2 id=&#34;as-no√ß√µes-b√°sicas-de-blending-css&#34;&gt;As no√ß√µes b√°sicas de Blending CSS&lt;/h2&gt;

&lt;p&gt;Se voc√™ nunca usou este recurso no Photoshop ou nunca ouviu falar dele, vamos te mostrar como Blending (modos de mistura), e suas formas e Formulas funcionam&amp;#8230;¬† pode parecer um pouco confuso mas vamos dividi-l√°s em partes visuais para compreendermos melhor.&lt;/p&gt;

&lt;h3 id=&#34;o-que-realmente-significa-8220-blending-8221&#34;&gt;O que realmente significa &amp;#8220;Blending&amp;#8221;?&lt;/h3&gt;

&lt;p&gt;Modos de Mesclagem (&amp;#8220;Blending&amp;#8221;) est√£o dispon√≠veis no software de desenho j√° faz alguns anos, mas o conceito de Blending (&amp;#8220;modos de mistura&amp;#8221;) tem sido realmente usados por muito mais tempo, mesmo antes dos computadores fossem inventados.&lt;/p&gt;

&lt;p&gt;O Blending √© parte dos &lt;em&gt;modos de mesclagem,&lt;/em&gt; que refere-se a pegar duas cores e combin√°-los de uma forma para fazer uma cor s√≥. Mais precisamente, pegamos dois mapas pixel e mistur√°mos eles juntos&lt;/p&gt;

&lt;p&gt;√â como um &amp;#8220;Juicer&amp;#8221; &amp;#8211; centrifugas de suco, onde voc√™ coloca duas frutas de distintas cores numa ponta e tem um colorido suco misturado do outro lado da m√°quina.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-56095 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/Blender-Juicer-Vegetables-Fruits-Drink-777x437.jpg&#34; alt=&#34;Blender-Juicer-Vegetables-Fruits-Drink-777x437&#34; width=&#34;777&#34; height=&#34;437&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Como&lt;/em&gt; que a mistura ocorre √© a parte &amp;#8220;modo&amp;#8221; de &lt;em&gt;modos&lt;/em&gt; de &lt;em&gt;mesclagem.&lt;/em&gt; Como √© que essas cores interagem? Porque estamos a trabalhar com o espa√ßo digital, podemos tomar qualquer f√≥rmula matem√°tica e aplic√°-lo √†s duas entradas para derivar uma sa√≠da.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/none.jpg&#34; alt=&#34;Uma imagem n√£o tratada de uma medusa&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Uma imagem n√£o tratada de uma medusa
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; &lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/orange.jpg&#34; alt=&#34; A mesma √°gua-viva com uma camada de laranja s√≥lido (a &amp;quot;fonte&amp;quot;) colocado sobre ele&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    A mesma √°gua-viva com uma camada de laranja s√≥lido (a &amp;#8220;origem de mesclagem&amp;#8221;) colocado sobre ele
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/screen.jpg&#34; alt=&#34; Aqui est√° a nossa camada de origem com a &amp;quot;tela&amp;quot; modo de mesclagem aplicado&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;Aqui est√° a nossa camada de origem de mesclagem com a &amp;#8220;tela&amp;#8221; com o Blending aplicado&lt;/p&gt;

&lt;p&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h3 id=&#34;voc√™-faz-a-matem√°tica&#34;&gt;Voc√™ faz a matem√°tica&lt;/h3&gt;

&lt;p&gt;Se voc√™ est√° se sentindo &lt;em&gt;realmente&lt;/em&gt; ambicioso, d√™ uma olhada atrav√©s Task Force FX da W3C do &lt;a href=&#34;https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=pt-BR&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com.br&amp;sl=en&amp;tl=pt-BR&amp;u=https://drafts.fxtf.org/compositing/&amp;usg=ALkJrhgP7Nj2SjD6ndaobz9HMCmWHLI_xg#blending&#34; target=&#34;_self&#34;&gt;documento de composi√ß√£o oficial&lt;/a&gt; que explica as implementa√ß√µes matem√°ticas de cada um dos diferentes modos de blending. Demonstra uma f√≥rmula usada para calcular mais modos de mesclagem .&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;Cm = B (Cb, Cs)&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Aqui, &lt;code&gt;Cm&lt;/code&gt; √© a cor resultante ap√≥s a mistura.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;B&lt;/code&gt; refere-se √† fun√ß√£o de mistura.&lt;/li&gt;
&lt;li&gt;O &lt;code&gt;Cb&lt;/code&gt; vari√°vel √© a cor de fundo.&lt;/li&gt;
&lt;li&gt;E o &lt;code&gt;Cs&lt;/code&gt; vari√°vel √© a cor de origem.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/rgb-e-hsl/&#34;&gt;Todas as cores s√£o baseados numa escala de 0-1, que mapeia diretamente para um valor 0-255 RGB.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-56099 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/nee-nees-096-min-compressor.jpg&#34; alt=&#34;nee-nees-096-min-compressor&#34; width=&#34;3888&#34; height=&#34;2592&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Existem duas categorias de modos de Blending: n√£o-separ√°veis e os separ√°veis.&lt;/p&gt;

&lt;p&gt;Se um blending √© considerada separ√°vel, ou n√£o √© determinado pelo algoritmo subjacente. Se o algoritmo trata cada um dos canais de cor separados (vermelho, verde e azul // RGB) de igual modo, considera-se insepar√°veis. Se ele usa cada um dos canais de cor, individualmente, considera-se separ√°vel.&lt;/p&gt;

&lt;p&gt;Todos os modos de mistura s√≥ pode voltar cores que est√£o dentro da gama de 0 a 255. Qualquer coisa para al√©m desta gama em qualquer dire√ß√£o ir√° ser cortada para o intervalo. Quando voc√™ v√™ grandes √°reas de branco ou preto em uma √°rea mista, √© prov√°vel porque essas √°reas est√£o sendo cortadas.&lt;/p&gt;

&lt;h2 id=&#34;tipos-de-modos-de-mesclagem-dispon√≠vel-em-css&#34;&gt;Tipos de modos de mesclagem Dispon√≠vel em CSS&lt;/h2&gt;

&lt;p&gt;Blending CSS, onde s√£o suportados, trabalha de duas maneiras diferentes. O primeiro tipo de modo de mistura √© chamada &lt;code&gt;background-blend-mode&lt;/code&gt; . Esta propriedade permite que voc√™ misturar todos os fundos dentro de um elemento com o outro.&lt;/p&gt;

&lt;p&gt;Se voc√™ tiver definido, por exemplo, m√∫ltiplas imagens de fundo (&lt;a href=&#34;https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=pt-BR&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com.br&amp;sl=en&amp;tl=pt-BR&amp;u=http://caniuse.com/&amp;usg=ALkJrhgJSpRt8OnTYOP3TYJm2Gf1tC3M-A#feat=multibackgrounds&#34; target=&#34;_self&#34;&gt;suportados em todos os navegadores al√©m do IE8&lt;/a&gt;), a primeira imagem de fundo ser√° tratada como a camada de origem, e qualquer imagem adicionada posteriormente ser√° tratada como a camada de fundo, encontrando-se por baixo.&lt;/p&gt;

&lt;p&gt;Adicionando uma cor de fundo (que deve ser o √∫ltimo da lista) coloca mais uma camada na parte inferior. A cor ser√° tratada como a camada de fundo, e as imagens como as camadas de origem. Veja o seguinte na regra de estilo, por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
  background:
  url(img/pattern.png),
  url(img/jellyfish.jpg), 
  #f07e32;
}&lt;/pre&gt;

&lt;p&gt;Isso nos d√°:&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/multiple-backgrounds.jpg&#34; alt=&#34;&#34; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;E n√≥s pode ent√£o adicionar modos de Blending:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
  background:
  url(img/pattern.png),
  url(img/jellyfish.jpg), 
  #f07e32 ;
  background-blend-mode: screen;
}
&lt;/pre&gt;

&lt;p&gt;Aqui est√£o dois divs usando esses estilos, um sem o modo de mesclagem, o segundo com:&lt;/p&gt;

&lt;p&gt;A mistura tipo de modo secund√°rio, &lt;code&gt;mix-blend-mode&lt;/code&gt; , permite elementos independentes a serem misturados. A especifica√ß√£o √© mais espec√≠fica sobre a implementa√ß√£o, mas a mistura ocorre em &amp;#8220;contextos de empilhamento&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Isto √© o que acontece quando usamos &lt;code&gt;mix-blend-mode&lt;/code&gt; , na tentativa de obter a imagem de fundo e cor dentro do mesmo elemento para misturar (uma sintaxe de c√≥digo um pouco mais limpa):&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.my-overlay-element {
  background-color: #f07e32;
  background-image: url(img/jellyfish.jpg); // Note: This image will not be blended with the background color.
  mix-blend-mode: color-dodge;
}
&lt;/pre&gt;

&lt;p&gt;Abaixo, voc√™ pode encontrar uma &lt;a href=&#34;https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=pt-BR&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com.br&amp;sl=en&amp;tl=pt-BR&amp;u=http://codepen.io/tutsplus/live/wMvoyj&amp;usg=ALkJrhiUNiZymZ8tkzwi_FO6w2rqQj4-6g&#34; target=&#34;_self&#34;&gt;demonstra√ß√£o interativa&lt;/a&gt; para explorar os efeitos de um determinado modo de mistura.&lt;/p&gt;

&lt;h2 id=&#34;blend-modes-separ√°veis&#34;&gt;Blend Modes separ√°veis&lt;/h2&gt;

&lt;p&gt;Vamos dar uma olhada nos modos de mesclagem (&amp;#8220;Blending&amp;#8221;) dispon√≠veis, examinando a f√≥rmula utilizada, e aplicando cada um para o c√≠rculo vermelho colocado acima da nossa √°gua-viva.&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j1.jpg&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt;¬†&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h4 id=&#34;screen-tela&#34;&gt;Screen (tela):&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;B(Cb, Cs) = 1 - [(1 - Cb) x (1 - Cs)]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Screen (ou tela) √© nomeado ap√≥s o conceito de projetar m√∫ltiplas exposi√ß√µes de fotografias, ao mesmo tempo em uma tela. A cor resultante √© sempre pelo menos t√£o leve quanto uma das camadas combinadas.&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j2.jpg&#34; alt=&#34;o modo de blend da tela&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    o modo de blend da tela
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

#### Darken: 

`B(Cb, Cs) = min(Cb, Cs)`

Seleciona a mais escura das duas cores.&lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-darken.jpg&#34; alt=&#34;Darken Mode Blending&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Darken Mode Blending
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

Lighten: `B(Cb, Cs) = max(Cb, Cs)`

Seleciona a mais clara das duas cores.&lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-lighten.jpg&#34; alt=&#34;Lighten blend mode&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Lighten blend mode
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

#### Color Dodge:

&lt;pre class=&#34;lang-js&#34;&gt;if(Cb == 0)
    B(Cb, Cs) = 0
else if(Cs == 1)
    B(Cb, Cs) = 1
else
    B(Cb, Cs) = min(1, Cb / (1 - Cs))

&lt;/pre&gt;

Color Dodge clareia a cor de fundo para refletir a cor de origem.&lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-color-dodge.jpg&#34; alt=&#34;blend mode Color Dodge&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    blend mode Color Dodge
  &lt;/p&gt;
&lt;/div&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;/figure&gt; 

#### Color Burn (cor queimada):

&lt;pre class=&#34;lang-js&#34;&gt;if(Cb == 1)
    B(Cb, Cs) = 1
else if(Cs == 0)
    B(Cb, Cs) = 0
else
    B(Cb, Cs) = 1 - min(1, (1 - Cb) / Cs)
&lt;/pre&gt;

O Color Burn escurece a cor de fundo, aumentando o contraste entre a fonte e o fundo.&lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-burn.jpg&#34; alt=&#34;Modo de queimadura mistura Cor&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Color burn blend mode
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

#### Hard light:

&lt;pre class=&#34;lang-js&#34;&gt;if(Cs &amp;lt;= 0.5)
    B(Cb, Cs) = Multiply(Cb, 2 x Cs)
else
    B(Cb, Cs) = Screen(Cb, 2 x Cs -1)
&lt;/pre&gt;

Aplica-se &#34;multiply&#34; em cores mais claras e &#34;screen&#34; em cores mais escuras. Essencialmente, &#34;Hard light&#34; √© o oposto de &#34;overlay&#34;, √© que veremos a seguir.&lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-hardl.jpg&#34; alt=&#34;blend mode luz dura&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Hard light blend mode
  &lt;/p&gt;
&lt;/div&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;/figure&gt; 

#### Overlay:

&lt;div&gt;
  &lt;div id=&#34;highlighter_843579&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
    &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
      &lt;tr&gt;
        &lt;td class=&#34;gutter&#34;&gt;
          &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
            1
          &lt;/div&gt;
        &lt;/td&gt;
        
        &lt;td class=&#34;code&#34;&gt;
          &lt;div class=&#34;container&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              &lt;code&gt;B(Cb, Cs) = HardLight(Cs, Cb)&lt;/code&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Aplica-se &amp;ldquo;screen&amp;rdquo; em cores mais claras e &amp;ldquo;multiply&amp;rdquo; em cores mais escuras; escrito como o mesmo que &amp;ldquo;Hard light&amp;rdquo;, exceto com os argumentos para a fun√ß√£o inversa.&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-overlay.jpg&#34; alt=&#34;modo de blend Overlay&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Overlay blend mode
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

#### Soft Light:

&lt;div&gt;
  &lt;div id=&#34;highlighter_522850&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
    &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
      &lt;tr&gt;
        &lt;td class=&#34;gutter&#34;&gt;
          &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
            1
          &lt;/div&gt;
          

&lt;pre&gt;&lt;code&gt;      &amp;lt;div class=&amp;quot;line number2 index1 alt1&amp;quot;&amp;gt;
        2
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number3 index2 alt2&amp;quot;&amp;gt;
        3
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number4 index3 alt1&amp;quot;&amp;gt;
        4
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number5 index4 alt2&amp;quot;&amp;gt;
        5
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number6 index5 alt1&amp;quot;&amp;gt;
        6
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number7 index6 alt2&amp;quot;&amp;gt;
        7
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number8 index7 alt1&amp;quot;&amp;gt;
        8
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number9 index8 alt2&amp;quot;&amp;gt;
        9
      &amp;lt;/div&amp;gt;
    &amp;lt;/td&amp;gt;

    &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;if&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;(Cs &amp;amp;lt;= 0.5)&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number2 index1 alt1&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;¬†¬†¬†¬†¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;B(Cb, Cs) = Cb - (1 - 2 x Cs) x Cb x (1 - Cb)&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number3 index2 alt2&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;else&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number4 index3 alt1&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;¬†¬†¬†¬†¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;B(Cb, Cs) = Cb + (2 x Cs - 1) x (D(Cb) - Cb)&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number5 index4 alt2&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;with&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number6 index5 alt1&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;if&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;(Cb &amp;amp;lt;= 0.25)&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number7 index6 alt2&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;¬†¬†¬†¬†¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;D(Cb) = ((16 * Cb - 12) x Cb + 4) x Cb&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number8 index7 alt1&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;else&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number9 index8 alt2&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;¬†¬†¬†¬†¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;D(Cb) = sqrt(Cb)&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/td&amp;gt;
  &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Este modo de Blending aplica-se uma variante de &amp;ldquo;multiply&amp;rdquo; em valores escuros e uma variante da &amp;ldquo;screen&amp;rdquo; em valores mais leves (similar √† screen).&lt;/p&gt;

&lt;p&gt;Neste algoritmo, vemos uma fun√ß√£o secund√°ria &lt;code&gt;D&lt;/code&gt; , que est√° situado no &lt;code&gt;with&lt;/code&gt; cl√°usula com base no valor atual do azul (_**&lt;span style=&#34;color: #ff0000&#34;&gt;R-&lt;span style=&#34;color: #00ff00&#34;&gt;G-&lt;span style=&#34;color: #0000ff&#34;&gt;B&lt;/strong&gt;&lt;/em&gt;) na cor. O resultado final √© tipicamente um efeito muito mais suave do que &amp;ldquo;overlay&amp;rdquo;.&lt;/p&gt; &lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-soft.jpg&#34; alt=&#34;blend mode luz Sof&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Sof light blend mode
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

&lt;h4&gt;
  Difference:
&lt;/h4&gt;

&lt;div&gt;
  &lt;div id=&#34;highlighter_841255&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
    &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
      &lt;tr&gt;
        &lt;td class=&#34;gutter&#34;&gt;
          &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
            1
          &lt;/div&gt;
        &lt;/td&gt;
        
        &lt;td class=&#34;code&#34;&gt;
          &lt;div class=&#34;container&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              &lt;code&gt;B(Cb, Cs) = | Cb - Cs |&lt;/code&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;
  Diferen√ßa pega o valor absoluto da diferen√ßa entre as duas cores, que tem o mesmo efeito de um negativo fotogr√°fico.
&lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt; 

&lt;p&gt;
  &lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-difference.jpg&#34; alt=&#34;blend mode diferen√ßa&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
    
    &lt;p class=&#34;wp-caption-text&#34;&gt;
      Difference blend mode
    &lt;/p&gt;
  &lt;/div&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;/figure&gt; 
  
  &lt;h4&gt;
    Exclusion:
  &lt;/h4&gt;
  
  &lt;div&gt;
    &lt;div id=&#34;highlighter_276376&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              1
            &lt;/div&gt;
          &lt;/td&gt;
          
          &lt;td class=&#34;code&#34;&gt;
            &lt;div class=&#34;container&#34;&gt;
              &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
                &lt;code&gt;B(Cb, Cs) = Cb + Cs - 2 x Cb x Cs&lt;/code&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  
  &lt;p&gt;
    O modo de exclus√£o tem o mesmo efeito de base como o modo &#34;diferen√ßa&#34;, excepto que as cores semelhantes resultar num valor mais baixo do meio de contraste (ao inv√©s de um valor mais escuro).
  &lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt; 
  
  &lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-exclusion.jpg&#34; alt=&#34;blend mode Exclus√£o&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
    
    &lt;p class=&#34;wp-caption-text&#34;&gt;
      Exclusion blend mode
    &lt;/p&gt;
  &lt;/div&gt;&lt;/figure&gt; 
  
  &lt;h2&gt;
    Blend Modes n√£o-separ√°veis
  &lt;/h2&gt;
  
  &lt;p&gt;
    Os Blend Modes &#34;n√£o-separ√°veis&#34; s√£o modos de mesclagem utilizam algumas fun√ß√µes extras, incluindo as fun√ß√µes &lt;code&gt;ClipColor&lt;/code&gt;, &lt;code&gt;SetLum&lt;/code&gt;, e &lt;code&gt;Sat&lt;/code&gt;.
  &lt;/p&gt;
  

&lt;p&gt;&lt;p&gt;
    &lt;b&gt;Nota importante:&lt;/b&gt; Nenhuma vers√£o do Safari suporta blend modes &amp;ldquo;hue&amp;rdquo;, &amp;ldquo;saturation&amp;rdquo;, &amp;ldquo;color&amp;rdquo;, ou &amp;ldquo;luminosity&amp;rdquo;¬† com &lt;code&gt;mix-blend-mode&lt;/code&gt; ou &lt;code&gt;background-blend-mode&lt;/code&gt; .
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div id=&#34;highlighter_312047&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              01
            &lt;/div&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        &amp;lt;div class=&amp;quot;line number2 index1 alt1&amp;quot;&amp;gt;
          02
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number3 index2 alt2&amp;quot;&amp;gt;
          03
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number4 index3 alt1&amp;quot;&amp;gt;
          04
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number5 index4 alt2&amp;quot;&amp;gt;
          05
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number6 index5 alt1&amp;quot;&amp;gt;
          06
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number7 index6 alt2&amp;quot;&amp;gt;
          07
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number8 index7 alt1&amp;quot;&amp;gt;
          08
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number9 index8 alt2&amp;quot;&amp;gt;
          09
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number10 index9 alt1&amp;quot;&amp;gt;
          10
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number11 index10 alt2&amp;quot;&amp;gt;
          11
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number12 index11 alt1&amp;quot;&amp;gt;
          12
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number13 index12 alt2&amp;quot;&amp;gt;
          13
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number14 index13 alt1&amp;quot;&amp;gt;
          14
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number15 index14 alt2&amp;quot;&amp;gt;
          15
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number16 index15 alt1&amp;quot;&amp;gt;
          16
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number17 index16 alt2&amp;quot;&amp;gt;
          17
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number18 index17 alt1&amp;quot;&amp;gt;
          18
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number19 index18 alt2&amp;quot;&amp;gt;
          19
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number20 index19 alt1&amp;quot;&amp;gt;
          20
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number21 index20 alt2&amp;quot;&amp;gt;
          21
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number22 index21 alt1&amp;quot;&amp;gt;
          22
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number23 index22 alt2&amp;quot;&amp;gt;
          23
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number24 index23 alt1&amp;quot;&amp;gt;
          24
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number25 index24 alt2&amp;quot;&amp;gt;
          25
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number26 index25 alt1&amp;quot;&amp;gt;
          26
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number27 index26 alt2&amp;quot;&amp;gt;
          27
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;

      &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;ClipColor(C)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number2 index1 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;l = Lum(C)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number3 index2 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;n = min(Cred, Cgreen, Cblue)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number4 index3 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;x = max(Cred, Cgreen, Cblue)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number5 index4 alt2&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number6 index5 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;if&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;n &amp;amp;lt; 0.0&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number7 index6 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cred = l + (((Cred - l) * l) / (l - n))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number8 index7 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cgreen = l + (((Cgreen - l) * l) / (l - n))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number9 index8 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cblue = l + (((Cblue - l) * l) / (l - n))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number10 index9 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number11 index10 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;if&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;x &amp;amp;gt; 1.0&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number12 index11 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number13 index12 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cred = l + (((Cred - l) * (1 - l)) / (x - l))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number14 index13 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cgreen = l + (((Cgreen - l) * (1 - l)) / (x - l))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number15 index14 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cblue = l + (((Cblue - l) * (1 - l)) / (x - l))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number16 index15 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number17 index16 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;return&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;C&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number18 index17 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number19 index18 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;SetLum(C, l)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number20 index19 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;d = l - Lum(C)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number21 index20 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cred = Cred + d&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number22 index21 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cgreen = Cgreen + d&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number23 index22 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cblue = Cblue + d&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number24 index23 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number25 index24 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;¬†¬†&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;return&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;ClipColor(C)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number26 index25 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number27 index26 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;Sat(C) = max(Cred, Cgreen, Cblue) - min(Cred, Cgreen, Cblue)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Observe o &lt;code&gt;min&lt;/code&gt; , &lt;code&gt;mid&lt;/code&gt; e &lt;code&gt;max&lt;/code&gt; s√£o fun√ß√µes de utilit√°ria que consulta a valores m√°ximos, m√©dios e m√≠nimos. (&lt;em&gt;Mid &lt;strong&gt;n√£o &lt;/strong&gt;&lt;/em&gt;√© a m√©dia dos tr√™s valores.) Os valores &lt;code&gt;Cred&lt;/code&gt; , &lt;code&gt;Cgreen&lt;/code&gt; , e &lt;code&gt;Cblue&lt;/code&gt; referem-se a valores de vermelho, verde e azul das cores presentes na &lt;code&gt;C&lt;/code&gt; .
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Com estas defini√ß√µes alinhadas, podemos agora olhar para os blend modes n√£o-separ√°veis.
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;
    &lt;b&gt;Hue&lt;/b&gt; (&lt;b&gt;Matiz):&lt;/b&gt;
  &lt;/h4&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div id=&#34;highlighter_803107&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              1
            &lt;/div&gt;
          &lt;/td&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;B(Cb, Cs) = SetLum(SetSat(Cs, Sat(Cb)), Lum(Cb))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Este modo aplica-se a tonalidade da camada de fonte para a lumin√¢ncia e satura√ß√£o da cor de fundo.
  &lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-hue.jpg&#34; alt=&#34;blend mode Hue&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
  blend mode Hue
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;
    Saturation (Satura√ß√£o):
  &lt;/h4&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div id=&#34;highlighter_173459&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              1
            &lt;/div&gt;
          &lt;/td&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;B(Cb, Cs) = SetLum(SetSat(Cb, Sat(Cs)), Lum(Cb))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Este modo faz a mesma coisa como o modo &amp;ldquo;hue&amp;rdquo;, mas em vez disso se aplica a satura√ß√£o do primeiro plano para a tonalidade e a lumin√¢ncia de fundo.
  &lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-sat.jpg&#34; alt=&#34;modo de mistura de satura√ß√£o&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
  Saturation blend mode
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;
    Color (cor):
  &lt;/h4&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div id=&#34;highlighter_88781&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              1
            &lt;/div&gt;
          &lt;/td&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;B(Cb, Cs) = SetLum(Cs, Lum(Cb))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Aplica-se o hue (matiz) e a satura√ß√£o do primeiro plano para a lumin√¢ncia de fundo.
  &lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-color.jpg&#34; alt=&#34;modo de mistura de cores&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
  Color blend mode
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;
    Luminosity (Luminosidade):
  &lt;/h4&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div id=&#34;highlighter_88781&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              1
            &lt;/div&gt;
          &lt;/td&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;B(Cb, Cs) = SetLum(Cs, Lum(Cb))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Este modo aplica-se a luminosidade da camada de origem com o hue (matiz) e a satura√ß√£o da camada de fundo.
  &lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    &lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
      &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-last.jpg&#34; alt=&#34;blend mode Luminosidade&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
    Luminosity blend mode
  &amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;&amp;lt;figcaption&amp;gt;&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; 

&amp;lt;div class=&amp;quot;post-body view view--loaded&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;post-body__body&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;post-body__content&amp;quot;&amp;gt;
      &amp;lt;h2&amp;gt;
        Conclus√£o
      &amp;lt;/h2&amp;gt;

      &amp;lt;p&amp;gt;
        Modos de mistura¬† (&amp;quot;Blending Mode&amp;quot;) em CSS fornece um nova e excitante flexibilidade para a concep√ß√£o e experi√™ncias est√©ticas singulares. Entender a matem√°tica e a teoria da cor que se aplica a cada um dos modos de blending (&amp;quot;mesclagem&amp;quot;) dispon√≠veis fornece-lhe um conjunto de ferramentas mais hol√≠stica.
      &amp;lt;/p&amp;gt;

      &amp;lt;p&amp;gt;
        O que voc√™ vai fazer com os navegadores quando eles adicionarem suporte para modos de mistura?
      &amp;lt;/p&amp;gt;

      &amp;lt;h3&amp;gt;
        Links Relacionados
      &amp;lt;/h3&amp;gt;

      &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;
          Confira o que os autores est√£o fazendo com &amp;lt;a href=&amp;quot;https://translate.googleusercontent.com/translate_c?depth=1&amp;amp;hl=pt-BR&amp;amp;ie=UTF8&amp;amp;prev=_t&amp;amp;rurl=translate.google.com.br&amp;amp;sl=en&amp;amp;tl=pt-BR&amp;amp;u=https://graphicriver.net/tags/blend&amp;amp;usg=ALkJrhjVwZaYbKYEuiA9KqnWHPkBBv5XWg&amp;quot; target=&amp;quot;_self&amp;quot;&amp;gt;Photoshop ac√ß√µes e modos de mistura&amp;lt;/a&amp;gt; ao longo de Mercado Envato
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;
          Leia mais sobre &amp;lt;a href=&amp;quot;https://translate.googleusercontent.com/translate_c?depth=1&amp;amp;hl=pt-BR&amp;amp;ie=UTF8&amp;amp;prev=_t&amp;amp;rurl=translate.google.com.br&amp;amp;sl=en&amp;amp;tl=pt-BR&amp;amp;u=https://developer.mozilla.org/en/docs/Web/CSS/blend-mode&amp;amp;usg=ALkJrhhucd1JKzMcPZ9w-dM4ZfOQEige2g&amp;quot; target=&amp;quot;_self&amp;quot;&amp;gt;&amp;lt;misturar-mode&amp;gt;&amp;lt;/a&amp;gt; no Mozilla Developer Network
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;
          &amp;lt;a href=&amp;quot;https://translate.googleusercontent.com/translate_c?depth=1&amp;amp;hl=pt-BR&amp;amp;ie=UTF8&amp;amp;prev=_t&amp;amp;rurl=translate.google.com.br&amp;amp;sl=en&amp;amp;tl=pt-BR&amp;amp;u=http://sarasoueidan.com/blog/compositing-and-blending-in-css/&amp;amp;usg=ALkJrhhERbYPRMYL0iPGDgy0A-JLD1MCFQ&amp;quot; target=&amp;quot;_self&amp;quot;&amp;gt;Composi√ß√£o e mistura Em CSS&amp;lt;/a&amp;gt; por Sara Soueidan
        &amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div class=&amp;quot;ad ad--publift&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;h3 class=&amp;quot;ad ad--publift&amp;quot;&amp;gt;
  Texto traduzido
&amp;lt;/h3&amp;gt;

&amp;lt;div class=&amp;quot;content-author&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;content-author__header&amp;quot;&amp;gt;
    &amp;lt;p&amp;gt;
      &amp;lt;img class=&amp;quot;content-author__image alignleft&amp;quot; src=&amp;quot;https://cms-assets.tutsplus.com/uploads/users/50/profiles/917/profileImage/av-cutrell.jpg&amp;quot; alt=&amp;quot;Av cutrell&amp;quot; width=&amp;quot;215&amp;quot; height=&amp;quot;215&amp;quot; /&amp;gt;
    &amp;lt;/p&amp;gt;

    &amp;lt;pre class=&amp;quot;content-author__name&amp;quot;&amp;gt;&amp;lt;em&amp;gt;Jonathan Cutrell&amp;lt;/em&amp;gt;&amp;lt;/pre&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;lt;span id=&amp;quot;result_box&amp;quot; class=&amp;quot;&amp;quot; lang=&amp;quot;pt&amp;quot;&amp;gt;&amp;lt;em&amp;gt;&amp;lt;span style=&amp;quot;text-decoration: underline&amp;quot;&amp;gt;Diretor de Tecnologia da Whiteboard e apresentador do desenvolvedor Tea&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; 

      &amp;lt;div class=&amp;quot;content-author__header&amp;quot;&amp;gt;
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;content-author__header&amp;quot;&amp;gt;
        &amp;lt;span id=&amp;quot;result_box&amp;quot; class=&amp;quot;&amp;quot; lang=&amp;quot;pt&amp;quot;&amp;gt;Eu sou o Director &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;de Tecnologia da &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;Whiteboard, uma empresa de intera√ß√£o digital &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;com sede em &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;Chattanooga, Tennessee. &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;Tenho um mestrado em M√≠dia Digital da &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;Georgia Tech. I &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;escrever, ensinar e &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;falar sobre o c√≥digo e as coisas que ele pode fazer poss√≠vel.&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 

        &amp;lt;div class=&amp;quot;content-author__header&amp;quot;&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;content-author__header&amp;quot;&amp;gt;
          &amp;lt;a href=&amp;quot;https://webdesign.tutsplus.com/tutorials/blending-modes-in-css-color-theory-and-practical-application--cms-25201&amp;quot;&amp;gt;Link Original do Post retirado do blog Tutsplus&amp;lt;br /&amp;gt; &amp;lt;/a&amp;gt;
        &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Entrevista com Bert Bos (Criador da CSS) e W3C</title>
      <link>https://tableless.github.io/hugo-public/entrevista-com-bert-bos-e-hakon-wium-lie-criador-da-css-e-w3c/</link>
      <pubDate>Wed, 14 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/entrevista-com-bert-bos-e-hakon-wium-lie-criador-da-css-e-w3c/</guid>
      <description>&lt;p&gt;Na &lt;a href=&#34;http://conferenciaweb.w3c.br/&#34;&gt;8¬™ edi√ß√£o da Web.br&lt;/a&gt; teremos a presen√ßa ilustre de Bert Bos como keynote speaker. Ele, junto com &lt;a href=&#34;https://en.wikipedia.org/wiki/H√•kon_Wium_Lie&#34;&gt;H√•kon Wium Lie&lt;/a&gt;, foram os dois inventores dos Cascading Style Sheets, tecnologia tamb√©m conhecida pela sigla CSS. Bert trabalha no W3C desde 1995 com desenvolvimento e padroniza√ß√£o do CSS, assim como de outros padr√µes da web, como HTML, XML e MathML. Nessa entrevista ele descreve o contexto que o levou a trabalhar nos primeiros rascunhos do padr√£o CSS, o que ainda falta ser aprimorado e sua perspectiva para a evolu√ß√£o do CSS e do HTML a longo-prazo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Quais eram as necessidades espec√≠ficas e o contexto que o levaram a trabalhar nos primeiros rascunhos do padr√£o CSS ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quando Tim Berners-Lee criou seu primeiro navegador Web, este possu√≠a folhas de estilos, mas apenas para o usu√°rio. A ideia era que o autor especificasse o conte√∫do de um documento, mas que o navegador junto com o usu√°rio determinassem como melhor exibi-lo.&lt;/p&gt;

&lt;p&gt;Durante certo tempo, esse foi o modelo, afinal de contas, o usu√°rio √© quem melhor sabe qual tipo de tela ele tem, de quais cores ele gosta mais, o qu√£o grande s√£o as janelas em seu sistema. Foram criados diversos outros navegadores que permitiam ao usu√°rio configurar a exibi√ß√£o do conte√∫do, como o &lt;a href=&#34;https://en.wikipedia.org/wiki/ViolaWWW&#34;&gt;Viola&lt;/a&gt; e o &lt;a href=&#34;https://en.wikipedia.org/wiki/Mosaic_%28web_browser%29&#34;&gt;Mosaic&lt;/a&gt;. Eu mesmo criei tamb√©m um navegador dessa forma, chamado &lt;a href=&#34;https://en.wikipedia.org/wiki/Argo_%28web_browser%29&#34;&gt;Argo&lt;/a&gt;. As folhas de estilo no meu navegador eram mais poderosas, mas ainda assim apenas para o usu√°rio, e n√£o para o autor.&lt;/p&gt;

&lt;p&gt;Os primeiros autores na Web eram em sua maioria cientistas. Eles estavam acostumados a escrever documentos e deixar outra pessoa decidir sua apar√™ncia: jornais cient√≠ficos normalmente fornecem suas pr√≥prias folhas de estilo (em &lt;a href=&#34;https://en.wikipedia.org/wiki/LaTeX&#34;&gt;LaTeX&lt;/a&gt;, por exemplo), assim o HTML se encaixou bem nesse modelo.&lt;/p&gt;

&lt;p&gt;Mas conforme a Web se tornava mais popular, designers come√ßaram a se interessar e a opini√£o deles era de que, por serem designers, eles sabiam com mais propriedade que os usu√°rios como apresentar um documento da melhor forma. Assim como a apar√™ncia de um livro lhe informa sobre que tipo de livro se trata, a apar√™ncia de um documento deveria tamb√©m lhe dizer algo sobre seu conte√∫do.&lt;/p&gt;

&lt;p&gt;Mas, naquela √©poca, em 1994, isso era imposs√≠vel de se fazer usando HTML. Assim, duas coisas aconteceram: os designers perceberam que o HTML permitia o uso de imagens, e ent√£o eles come√ßaram a substituir textos por imagens, porque assim eles tinham total controle. E o Netscape, o primeiro navegador comercial, notando essa demanda dos designers, come√ßou a adicionar extens√µes propriet√°rias ao HTML, como atributos de cor e de plano de fundo, um elemento &lt;center&gt;, e elementos de espa√ßamento.&lt;/p&gt;

&lt;p&gt;Os usu√°rios n√£o estavam felizes com isso: voc√™ n√£o pode redimensionar imagens ou recortar e colar partes delas, e imagens tamb√©m n√£o proviam acessibilidade. E os elementos propriet√°rios faziam os documentos ficarem grandes e dif√≠ceis de serem mantidos, e mais dif√≠ceis para o usu√°rio aplicar estilos. E, assim, pessoas na lista de discuss√£o www-talk@w3.org come√ßaram a procurar solu√ß√µes.&lt;/p&gt;

&lt;p&gt;Se voc√™ quiser ler a hist√≥ria completa do que aconteceu naquela √©poca, voc√™ pode ler o &lt;a href=&#34;http://www.w3.org/Style/LieBos2e/history/&#34;&gt;cap√≠tulo relevante no livro que H√•kon e eu escrevemos&lt;/a&gt; ou a &lt;a href=&#34;http://people.opera.com/howcome/2006/phd/&#34;&gt;tese de PhD do H√•kon&lt;/a&gt;. Em suma: diversas pessoas propuseram linguagens de folhas de estilo, algumas eram novas, e outras eram vers√µes simplificadas do que j√° existia no mundo do SGML, por que o HTML foi derivado do SGML. Duas dessas linguagens eram a ‚ÄúCascading HTML Style Sheets‚Äù do H√•kon e a minha linguagem ‚ÄúStreaming Style Sheets‚Äù.&lt;/p&gt;

&lt;p&gt;Quando eu olhei para a linguagem do H√•kon, eu vi uma ideia interessante, que era a de que voc√™ poderia ter um tipo de negocia√ß√£o entre o que o autor propunha e o que o usu√°rio queria. N√≥s come√ßamos a trabalhar juntos, combinando as ideias dele e as minhas (por exemplo, seletores contextuais e a aplica√ß√£o de folhas de estilos para outros tipo de documento al√©m de HTML), n√≥s inventamos uma nova sintaxe e logo nossa proposta (chamada ‚ÄúCascading Style Sheets‚Äù omitindo o ‚ÄúHTML‚Äù do nome) se tornou a mais popular, e outras pessoas come√ßaram a contribuir.&lt;/p&gt;

&lt;p&gt;Em 1995, o novo grupo de trabalho de HTML assumiu a tarefa, de modo a torn√°-lo um padr√£o. E um pouco depois o grupo se separou, formando o grupo de trabalho de CSS existente ainda hoje.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Voc√™ j√° considerou aplicar regras de estilo CSS em outros tipos de conte√∫do (al√©m de HTML)? Se isso j√° foi feito, voc√™ poderia fornecer um exemplo? Caso contr√°rio, voc√™ poderia discutir em que outros conte√∫dos poderia ser √∫til o uso de CSS?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Uma das ideias da minha proposta original de folhas de estilo era justamente isto: usar a mesma linguagem de folhas de estilo para uma ampla gama de documentos, n√£o apenas para HTML (meu pr√≥prio navegador podia exibir muitos documentos SGML, e HTML era apenas uma subclasse destes).&lt;/p&gt;

&lt;p&gt;Naquela √©poca, ainda n√£o existia XML, mas n√≥s pensamos que dever√≠amos ter uma linguagem de folhas de estilo para SGML simples ou qualquer coisa que tivesse uma estrutura simples de √°rvore.&lt;/p&gt;

&lt;p&gt;Quando o XML foi criado um pouco depois (pesquisa iniciada em 1996, com a publica√ß√£o do padr√£o em 1998), acabou combinando muito bem com o que t√≠nhamos em mente e assim o CSS p√¥de ser utilizado com grande parte de documentos XML tamb√©m.&lt;/p&gt;

&lt;p&gt;E o CSS pode ser usado, e est√° de fato sendo usado, para outras coisas tamb√©m. Um exemplo √© a biblioteca de interfaces gr√°ficas &lt;a href=&#34;http://qt-project.org/doc/qt-4.8/stylesheet.html&#34;&gt;Qt&lt;/a&gt;. Ela usa CSS para aplicar estilo aos componentes da interface gr√°fica (&lt;a href=&#34;http://doc.qt.io/qt-5/stylesheet.html&#34;&gt;http://doc.qt.io/qt-5/&lt;/a&gt;). Outro exemplo √© o MapCSS, usado por diversos programadores para desenhar mapas cartogr√°ficos (&lt;a href=&#34;http://wiki.openstreetmap.org/wiki/MapCSS&#34;&gt;http://wiki.openstreetmap&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Quais partes da atual vers√£o da estecifica√ß√£o do CSS voc√™ acha que ainda precisa de mais aprimoramentos?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tem muitas coisas que ainda est√£o faltando, especialmente agora que editores est√£o usando CSS fortemente para editora√ß√£o de livros, tanto em papel quanto para e-books.&lt;/p&gt;

&lt;p&gt;Originalmente n√≥s desenhamos o CSS para ser a linguagem de estilos simples, e adicionamos XSL (por exemplo, XSLT + XSL-FO) em 2001 para as tarefas complexas, como edi√ß√£o de livros. Mas, no momento, o desenvolvimento do XSL parou, e n√≥s n√£o sabemos quando ele ir√° continuar, e ent√£o os editores est√£o migrando para o CSS.&lt;/p&gt;

&lt;p&gt;Apenas para dar alguns exemplos de coisas que est√£o faltando no CSS: para o tratamento adequado de hipertexto, n√≥s precisamos de elementos colapsantes (veja &lt;a href=&#34;http://en.wikipedia.org/wiki/StretchText&#34;&gt;aqui&lt;/a&gt;) ou, de modo geral, uma forma de alternar o estado de elementos (e n√£o apenas ‚Äòcheckboxes‚Äô) entre dois poss√≠veis estilos. N√≥s tamb√©m n√£o temos ainda containers que formem um conjunto de p√°ginas em abas.&lt;/p&gt;

&lt;p&gt;E temos *muito* trabalho a ser feito para tudo que envolva texto paginado: notas de rodap√©, elementos flutuantes no topo ou no p√© da p√°gina, texto que se estenda atravessando colunas, divis√£o de texto em m√∫ltiplos fluxos e alinhamento desses fluxos de texto em um template de p√°gina baseado em uma grade, refer√™ncias cruzadas (como ‚Äúveja p√°gina 7‚Ä≥), √≠ndices alfab√©ticos, ‚Äòcopyfitting‚Äô (fazer um texto caber exatamente em um espa√ßo alocado), cabe√ßalhos e rodap√©s contendo texto bidirecional ou f√≥rmulas matem√°ticas etc. Eu comecei a colecionar uma lista de requisitos que pode ser vista &lt;a href=&#34;http://www.w3.org/Style/2013/paged-media-tasks&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Existem propostas e implementa√ß√µes experimentais para algumas dessas funcionalidades, mas grande parte do trabalho ainda n√£o foi realizado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Qual √© a sua perspectiva para a evolu√ß√£o do CSS e do HTML em longo prazo? Como voc√™ acha que essas tecnologias evoluir√£o nas pr√≥ximas d√©cadas?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi muito bom o HTML4 ter permanecido sem modifica√ß√µes por tanto tempo. Isso nos permitiu compreend√™-lo e criar softwares interessantes. N√≥s esper√°vamos certos tipos de aplica√ß√µes, mas algumas vezes levou muitos anos para que as pessoas se tornassem capazes de efetivamente cri√°-los. Por exemplo, n√≥s esper√°vamos que algo como os microformatos fosse surgir, mas levou bastante tempo at√© algumas pessoas de fato descobrirem como faz√™-lo corretamente. E algumas coisas foram inesperadas e apenas descobertas depois.&lt;/p&gt;

&lt;p&gt;Ent√£o, de certa forma, √© uma pena que agora n√≥s tenhamos que migrar nossos softwares para o HTML5, mesmo que o HTML5 adicione novas funcionalidades interessantes. Eu estou lentamente migrando meus softwares, mas levar√° um bom tempo at√© que eu possa fazer com o HTML5 o que eu posso fazer com o HTML4. Assim, estou esperan√ßoso de que grande parte de tudo o que √© o HTML5, ou sua pr√≥xima revis√£o, volte a permanecer est√°vel por 10 ou 15 anos.&lt;/p&gt;

&lt;p&gt;Para o CSS, n√£o tenho muita certeza sobre o que quero. Como visto acima, h√° v√°rias coisas que precisamos adicionar para satisfazer os v√°rios novos usos. Mas o CSS n√£o foi desenhado para tarefas complexas. Ele foi feito para ser usado por usu√°rios comuns para aplica√ß√£o de estilos simples. Ao adicionar novas capacidades ao seu modelo original, o CSS est√° se tornando complexo demais para a maioria das pessoas. Ent√£o talvez seja o momento de se recome√ßar do zero criando duas novas linguagens: uma simples que todas as pessoas saibam usar, mas que talvez seja limitada na quantidade de controles detalhados que oferece, e uma avan√ßada, adequada at√© mesmo para editora√ß√£o complexa de livros e revistas. Mas eu ainda n√£o vi nenhuma proposta que tenha me agradado.&lt;/p&gt;

&lt;p&gt;√â bom ver diversos pr√©-processadores de CSS para ajudar os usu√°rios avan√ßados, como o &lt;a href=&#34;http://en.wikipedia.org/wiki/Sass_%28stylesheet_language%29&#34;&gt;SASS&lt;/a&gt; e o &lt;a href=&#34;http://en.wikipedia.org/wiki/LESS_%28stylesheet_language%29&#34;&gt;LESS&lt;/a&gt;. Eu tinha esperan√ßa de eles aparecessem mais cedo. Espero que eles se desenvolvam e se tornem ainda melhores. Por outro lado, estou surpreso com o tamanho de algumas folhas de estilo que as pessoas t√™m criado. As mais complexas que eu mesmo criei t√™m 10 kbytes, e a maioria √© bem menor que isso. Fico me questionando se eles est√£o fazendo a coisa certa‚Ä¶&lt;/p&gt;

&lt;p&gt;Dessa forma, em termos pr√°ticos, acho que ainda iremos adicionar novas funcionalidades ao CSS durante os pr√≥ximos poucos anos. Haver√°, sem d√∫vidas, novos m√≥dulos no CSS3, e alguns m√≥dulos que j√° est√£o finalizados ser√£o provavelmente estendidos ou substitu√≠dos por um m√≥dulo do CSS4.&lt;/p&gt;

&lt;p&gt;Continuaremos mantendo a retrocompatibilidade do CSS, mas isso tamb√©m significa se tornar√° gradativamente mais dif√≠cil de adicionar novas funcionalidades a ele, e suas sintaxes poder√£o n√£o ser as mais intuitivas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS3‚Ää‚Äî‚ÄäTrabalhando com M√∫ltiplas imagens background-images</title>
      <link>https://tableless.github.io/hugo-public/css3-trabalhando-com-multiplas-imagens-background-images/</link>
      <pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/css3-trabalhando-com-multiplas-imagens-background-images/</guid>
      <description>

&lt;p class=&#34;graf--p&#34;&gt;
  Quem nunca se deparou com um layout com m√∫ltiplas imagens ‚Äúsobrepostas‚Äù ou mesmo com t√≠tulos ou par√°grafos que precisavam ficar suspensos sobre m√∫ltiplas imagens de fundo? Essa semana me deparei com o mesmo problema.
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Com &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;CSS3&#34; href=&#34;https://developer.mozilla.org/en/CSS/CSS3&#34;&gt;CSS3&lt;/a&gt;, voc√™ pode aplicar aos elementos m√∫ltiplas imagens sobrepostas como plano de fundo. Sem a utiliza√ß√£o do Z-index! √â isso mesmo, ‚Äúnecas de pitibiriba‚Äù de Z-index.
&lt;/p&gt;

&lt;h2 id=&#34;velho-dilema-de-sobrepor-imagens-com-div-s-com-z-index-graf-h4&#34;&gt;Velho dilema de sobrepor imagens com div‚Äôs com Z-index‚Ä¶ {.graf&amp;ndash;h4}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  A primeira solu√ß√£o que vem √† cabe√ßa √© o velho e bom ‚ÄúZ-index‚Äù, Veja um exemplo de implementa√ß√£o:
&lt;/p&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    HTML
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;red&#34;&amp;gt;Red&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;green&#34;&amp;gt;Green&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;blue&#34;&amp;gt;Blue&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    CSS
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.red, .green, .blue {
    color: #fff;
    display: block;
    line-height: 100px;
    position: absolute;
    text-align: center;
    width: 100px;
}
.red {
    background: red;
    left: 20px;
    top: 20px;
    z-index: 0;
    opacity:0.5;
}
.green {
    background: green;
    left: 60px;
    top: 60px;
    z-index: 1;
    opacity:0.6;
}
.blue {
    background: blue;
    left: 100px;
    top: 100px;
    z-index: 2;
    opacity:0.7;
}
body {
    color: #777;
}&lt;/pre&gt;

&lt;p&gt;See the Pen &lt;a href=&#34;http://codepen.io/selique/pen/grvvLw/&#34;&gt;Z-index&lt;/a&gt; by Mois√©s lopes ferreira (&lt;a href=&#34;http://codepen.io/selique&#34;&gt;@selique&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;funciona-em-class-markup-em-markup-h4-em-sim-em-mas-espere-um-momento-essa-n√£o-√©-a-√∫nica-solu√ß√£o-graf-h4&#34;&gt;Funciona?!‚Ä¶ &lt;em class=&#34;markup--em markup--h4-em&#34;&gt;SIM!&lt;/em&gt; Mas espere um momento, essa n√£o √© a √∫nica solu√ß√£o‚Ä¶ {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  ‚Ä¶ Voc√™ j√° tava pensando num ‚Äúworkaround‚Äù safadinho, a m√£o da gambiarra chega a tremer nessas horas, mas nada de programa√ß√£o orientada a ‚ÄúGo-Horse‚Äù, hoje em dia temos ‚Äúsolucion√°tica‚Äù pra quase tudo hehe‚Ä¶
&lt;/p&gt;

&lt;div style=&#34;width: 510px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*pAiFtxYHdjg4-HP6e46wZA.gif&#34; alt=&#34;www.gohorseprocess.com.br/extreme-go-horse-(xgh)&#34; width=&#34;500&#34; height=&#34;374&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    www.gohorseprocess.com.br/extreme-go-horse-(xgh)
  &lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&#34;conhecendo-as-propriedades-css-do-background-graf-h4&#34;&gt;Conhecendo as propriedades CSS do Background: {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;pre&gt;background-color.........define a cor do fundo;
background-image.........define uma imagem de fundo;
background-repeat........define a maneira como a imagem de fundo √© posicionada;
background-attachment....define se a imagem de fundo &#34;rola&#34; ou n√£o com a tela;
background-position......define como e onde a imagem de fundo √© posicionada;
background-clip..........define a √°rea do box onde a imagem de fundo √© aplicada;
background-origin........define a posi√ß√£o de origem da imagem no box;
background-size..........define as dimens√µes da imagem no box;
background...............maneira abreviada para declarar todas as propriedades anteriores;&lt;/pre&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  O nosso grande mestre &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/addb7196c9b9&#34;&gt;Maur√≠cio Samy Silva&lt;/a&gt; #Maujor explica melhor as aplica√ß√µes das propriedades &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://maujor.com/tutorial/propriedade-css-para-estilizacao-de-background.php&#34; rel=&#34;nofollow&#34;&gt;http://maujor.com/tutorial/propriedade-css-para-estilizacao-de-background.php&lt;/a&gt;
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Agora que conhecemos suas propriedades e caracter√≠sticas‚Ä¶ agora vamos ver como o ‚Äúbackground-image‚Äù funciona para entendermos nosso horizonte de possibilidades:
&lt;/p&gt;

&lt;h2 id=&#34;background-image-vs-z-index-a-batalha-graf-h4&#34;&gt;Background-image VS Z-index‚Ää‚Äî‚ÄäA BATALHA: {.graf&amp;ndash;h4}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Quando trabalhamos 2 ou 3 elementos (sejam &lt;img&gt;, &lt;div&gt;, &lt;etc‚Ä¶&gt;) temos um controle at√© toler√°vel, mas‚Ä¶ quando utilizamos 6, 10 ou mais elementos numa mesma div ou aninhamento pr√≥ximo, o z-index come√ßa a se tornar ‚Äúlingui√ßento‚Äù demais e somos obrigados a utilizar mais classes e ids para organizarmos nosso CSS, pensando nisso que escrevi esse post!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  &lt;em&gt;√Äs vezes n√£o necessariamente queremos ou podemos utilizar o z-index.&lt;/em&gt;
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Sem contar que quebramos o conceito de &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://tableless.com.br/oocss-smacss-bem-dry-css-afinal-como-escrever-css/&#34;&gt;DRY&lt;/a&gt; em nosso documento CSS e n√£o queremos isso, n√£o √© amiguinhos?
&lt;/p&gt;

&lt;div style=&#34;width: 495px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*xt8qqJopHwF-Gcg9xM6t3w.gif&#34; alt=&#34;Vida de um Front-end&#34; width=&#34;485&#34; height=&#34;364&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Front-end Lifestyle
  &lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&#34;z-index-quando-usar-graf-h4&#34;&gt;Z-index‚Ää‚Äî‚ÄäQuando usar? {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Quando temos muitos elementos e precisamos especificar propriedades e caracter√≠sticas CSS que v√£o al√©m do prop√≥sito de uma ‚Äúimagem de fundo‚Äù ou ‚Äúsobreposi√ß√£o‚Äù ent√£o o Z-index √© a melhor op√ß√£o!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Mas se voc√™ quer simplesmente sobrepor uma imagem de um logo (ou uma composi√ß√£o de camadas que formam um logo) sobre um uma ou mais imagem de preenchimento de fundo o background-image √© a melhor solu√ß√£o!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Estes elementos ficam empilhados em camadas uma acima da outra, onde o primeiro fundo dado ser√° desenhado no topo e apenas o √∫ltimo elemento da lista poder√° definir uma cor s√≥lida de fundo, ou n√£o, a√≠ fica ao seu crit√©rio.
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.minhaClasse {
  background: fundo1, fundo2, ..., fundoN;
}&lt;/pre&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://tableless.com.br/tag/css3/&#34;&gt;CSS3&lt;/a&gt; permite especificar imagens de fundo para m√∫ltiplos elementos, usando nada mais do que uma √∫nica lista separada por v√≠rgulas.
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Voc√™ pode fazer isso com a propriedade reduzida &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background&#34;&gt;background&lt;/a&gt; e tamb√©m com as propriedade individuais, com a exce√ß√£o de &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-color&#34;&gt;background-color&lt;/a&gt;. Isto √©, as seguintes propriedades de plano de fundo podem ser especificadas com uma lista, uma por fundo: &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background&#34;&gt;background&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-attachment&#34;&gt;background-attachment&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;A propriedade CSS¬†background-clip¬†especifica se o fundo de um elemento, seja cor ou imagem, se extende debaixo de sua borda.&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-clip&#34;&gt;background-clip&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34;&gt;background-image&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-origin&#34;&gt;background-origin&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-position&#34;&gt;background-position&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-repeat&#34;&gt;background-repeat&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-size&#34;&gt;background-size&lt;/a&gt;. (rola at√© gradiente!)
&lt;/p&gt;

&lt;h2 id=&#34;exemplos-graf-h3&#34;&gt;Exemplos {.graf&amp;ndash;h3}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Neste exemplo, tr√™s planos de fundos est√£o empilhados: um texto estilizado, o logo da Tableless.com.br, e uma imagem de fundo ilustrando uma cidade:
&lt;/p&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    HTML
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;header&amp;gt;
  &amp;lt;div class=&#34;intro-text&#34;&amp;gt;
    &amp;lt;h1 class=&#34;name-index&#34;&amp;gt;BEM-VINDO √Ä&amp;lt;/br&amp;gt;&amp;lt;span&amp;gt;INTERNET&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/header&amp;gt;&lt;/pre&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    CSS
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-css&#34;&gt;header {
  background: url(&lt;a class=&#34;markup--anchor markup--pre-anchor&#34; href=&#34;http://tableless.com.br/wp-content/uploads/2013/04/logo-tableless-01.png&#34; rel=&#34;nofollow&#34;&gt;http://tableless.com.br/wp-content/uploads/2013/04/logo-tableless-01.png&lt;/a&gt;) no-repeat center center, url(&lt;a class=&#34;markup--anchor markup--pre-anchor&#34; href=&#34;http://lorempixel.com/output/city-q-g-1024-768-10.jpg&#34; rel=&#34;nofollow&#34;&gt;http://lorempixel.com/output/city-q-g-1024-768-10.jpg&lt;/a&gt;) no-repeat center top;
  height: 100vh;
  width: auto;
  box-sizing: border-box;
}
header .intro-text {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}
header .intro-text &amp;gt; h1 {
  text-shadow: 8px 5px 5px #00181c;
  color: #fff;
  text-transform: uppercase;
  text-align: center;
}
header .intro-text .name-index {
  font-size: 7vw;
}
header .intro-text .name-index span {
  font-size: 9.2vw;
}&lt;/pre&gt;

&lt;p&gt;See the Pen &lt;a href=&#34;http://codepen.io/selique/pen/vKddRK/&#34;&gt;Multiple backgrounds backgroud-image&lt;/a&gt; by Mois√©s lopes ferreira (&lt;a href=&#34;http://codepen.io/selique&#34;&gt;@selique&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Suporte do navegador para m√∫ltiplas imagens com a propriedade CSS background-image √© relativamente difundido na implementa√ß√£o do recurso citado acima:
&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Mozilla Firefox (3.6 ou superior)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Safari / Chrome (1.0 / 1.3 +)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Opera (10.5+)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    at√© mesmo no Internet Explorer (9.0+)
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Bibliografia (Fontes)
&lt;/p&gt;

&lt;div class=&#34;graf--mixtapeEmbed&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--mixtapeEmbed-anchor&#34; title=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34;&gt;&lt;strong class=&#34;markup--strong markup--mixtapeEmbed-strong&#34;&gt;background-image&lt;/strong&gt; &amp;#8211; &lt;em class=&#34;markup--em markup--mixtapeEmbed-em&#34;&gt;The CSS background-image property sets one or several background images for an element. The images are drawn on‚Ä¶&lt;/em&gt;developer.mozilla.org&lt;/a&gt;
&lt;/div&gt;

&lt;div class=&#34;graf--mixtapeEmbed&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--mixtapeEmbed-anchor&#34; title=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Background_and_Borders/Using_CSS_multiple_backgrounds&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Background_and_Borders/Using_CSS_multiple_backgrounds&#34;&gt;&lt;strong class=&#34;markup--strong markup--mixtapeEmbed-strong&#34;&gt;Multiple backgrounds&lt;/strong&gt; &amp;#8211; &lt;em class=&#34;markup--em markup--mixtapeEmbed-em&#34;&gt;Com CSS3¬†, voc√™ pode aplicar aos elementos multiplos planos de fundo. Estes ficam em camadas empilhadas uma acima da‚Ä¶&lt;/em&gt;developer.mozilla.org&lt;/a&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Carrossel descomplicado com HTML, CSS</title>
      <link>https://tableless.github.io/hugo-public/carrocel-descomplicado-com-html-css/</link>
      <pubDate>Sun, 04 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/carrocel-descomplicado-com-html-css/</guid>
      <description>

&lt;p&gt;N√£o √© dif√≠cil perceber que muitos desenvolvedores tanto iniciantes como os veteranos de guerra ainda sofrem quando o assunto √© carrossel,¬†mesmo utilizando frameworks como BootStrap. Mas seus problemas acabaram! (m√∫sica de chegada milagrosa), com o conhecimento de poucas t√©cnicas podemos resolver esse &amp;#8220;gigante&amp;#8221; problema facilmente.&lt;/p&gt;

&lt;h3 id=&#34;pseudo-classe-target-8211-css&#34;&gt;Pseudo classe :target &amp;#8211; CSS&lt;/h3&gt;

&lt;p&gt;Para resolver o grande problema de transi√ß√£o do carrossel, vamos utilizar a pseudo classe &lt;code&gt;:target&lt;/code&gt;, que atribui algumas caracter√≠sticas do CSS para o elemento HTML.&lt;/p&gt;

&lt;p&gt;Para quem ainda n√£o conhece a pseudo classe &amp;#8220;:target&amp;#8221; aqui vai um exemplo bem alto explicativo.&lt;/p&gt;

&lt;h6 id=&#34;html&#34;&gt;HTML&lt;/h6&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;a href=&#34;#texto-exemplo-1&#34;&amp;gt;Seleciona o texto exemplo 1&amp;lt;/a&amp;gt;
&amp;lt;a href=&#34;#texto-exemplo-2&#34;&amp;gt;Seleciona o texto exemplo 2&amp;lt;/a&amp;gt;

&amp;lt;p id=&#34;texto-exemplo-1&#34; class=&#34;text&#34; &amp;gt;Texto exemplo 1&amp;lt;/p&amp;gt;
&amp;lt;p id=&#34;texto-exemplo-2&#34; class=&#34;text&#34; &amp;gt;Texto exemplo 2&amp;lt;/p&amp;gt;
&lt;/pre&gt;

&lt;h6 id=&#34;css&#34;&gt;CSS&lt;/h6&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.text:target{
    border: 1px solid #000;
}
&lt;/pre&gt;

&lt;p&gt;Voc√™ pode conferir o resultado no CODEPEN &lt;a href=&#34;http://codepen.io/lleonardoll/pen/BzBdWB?editors=1100&#34; target=&#34;_blank&#34;&gt;aqui.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O Tableless tem &lt;a href=&#34;http://tableless.com.br/css3-abas-com-a-pseudo-classe-target/&#34;&gt;um artigo que ensina a fazer abas usando apenas CSS3 com o pseudo classe :target&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;estrutura-html&#34;&gt;Estrutura HTML&lt;/h3&gt;

&lt;p&gt;A estrutura que iremos utilizar tamb√©m √© bem simples. Primeiramente uma DIV como &amp;#8220;container&amp;#8221; que √© onde ir√° acontecer o carrossel, tamb√©m utilizaremos outras DIVs que chamaremos de &amp;#8220;wall-x&amp;#8221; onde x √© o valor da DIV no carrossel.&lt;/p&gt;

&lt;h2 id=&#34;m√£o-na-massa&#34;&gt;M√£o na massa&lt;/h2&gt;

&lt;p&gt;Vamos come√ßar pelo HTML definindo a estrutura do nosso carrossel.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;container&#34;&amp;gt;
    &amp;lt;div class=&#34;wall wall-1&#34; id=&#34;wall-1&#34;&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 1&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-2&#34; id=&#34;wall-2&#34;&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 2&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-3&#34; id=&#34;wall-3&#34;&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 3&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Terminado a estrutura, devemos deixar todas as DIVs wall com &amp;#8220;display: none;&amp;#8221; ( sim, todas! ) para n√£o serem listadas de uma vez.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.container{
    width: 150px;
    height: 150px;
}

.wall{
    display: none;
    width: 100%;
    height: 100%;
}

/* Corzinha de fundo para diferenciar */
.wall-1{ background-color: #f00; }
.wall-2{ background-color: #0f0; }
.wall-3{ background-color: #00f; }

.wall:target{
    display: block;
}
&lt;/pre&gt;

&lt;h6 id=&#34;explicando-8230&#34;&gt;Explicando&amp;#8230;&lt;/h6&gt;

&lt;p&gt;Basicamente, definimos o tamanho do &amp;#8220;container&amp;#8221;. Deixamos todas as DIVs &amp;#8220;wall&amp;#8221; com &amp;#8220;display: none;&amp;#8221; e definimos que todo &amp;#8220;target&amp;#8221; ter√° o &amp;#8220;display: block;&amp;#8221;. Se nada estiver aparecendo na sua tela, n√£o se assuste, tudo est√° funcionando, o que acontece √© que voc√™ n√£o tem nem um &amp;#8220;target&amp;#8221; definido, mas voc√™ pode fazer um teste adicionando &amp;#8220;#wall-1&amp;#8221; na sua url.&lt;/p&gt;

&lt;p&gt;Ok, j√° temos 90% do carrossel pronto. Para finalizarmos o carrossel precisamos adicionar as setas (ou bot√µes como preferir) para fazer a transi√ß√£o de uma tela para outra, e √© ai que vem a outra parte f√°cil. A unica coisa que precisamos fazer √© adicionar links que setam para o target anterior ou seguinte, neste caso, se voc√™ estiver no &amp;#8220;#wall-2&amp;#8221; o anterior seria &amp;#8220;#wall-1&amp;#8221; e o seguinte &amp;#8220;#wall-3&amp;#8221; (precisava explicar?).&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;container&#34;&amp;gt;
    &amp;lt;div class=&#34;wall wall-1&#34; id=&#34;wall-1&#34;&amp;gt;
        &amp;lt;a href=&#34;#wall-3&#34;&amp;gt;Voltar&amp;lt;/a&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 1&amp;lt;/h1&amp;gt;
        &amp;lt;a href=&#34;#wall-2&#34;&amp;gt;Avan√ßar&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-2&#34; id=&#34;wall-2&#34;&amp;gt;
        &amp;lt;a href=&#34;#wall-1&#34;&amp;gt;Voltar&amp;lt;/a&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 2&amp;lt;/h1&amp;gt;
        &amp;lt;a href=&#34;#wall-3&#34;&amp;gt;Avan√ßar&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&#34;wall wall-3&#34; id=&#34;wall-3&#34;&amp;gt;
        &amp;lt;a href=&#34;#wall-2&#34;&amp;gt;Voltar&amp;lt;/a&amp;gt;
        &amp;lt;h1&amp;gt;carrosel numero - 3&amp;lt;/h1&amp;gt;
        &amp;lt;a href=&#34;#wall-1&#34;&amp;gt;Avan√ßar&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Para facilitar a exibi√ß√£o do primeiro target (sem ter que criar um link personalizado) voc√™ pode simplesmente colocar uma linha de javascript para todo o carrossel ficar ativa üòâ&lt;/p&gt;

&lt;pre&gt;window.location = &#34;#wall-1&#34;;
&lt;/pre&gt;

&lt;p&gt;Voc√™ pode ver o c√≥digo em a√ß√£o no CODEPEN &lt;a href=&#34;http://codepen.io/lleonardoll/pen/pbvdRZ&#34; target=&#34;_blank&#34;&gt;aqui.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pronto! Uma maneira muito simples para resolver um grande problema.&lt;/p&gt;

&lt;h2 id=&#34;poss√≠vel-problema-que-voc√™-poder√°-encontrar&#34;&gt;Poss√≠vel problema que voc√™ poder√° encontrar&lt;/h2&gt;

&lt;p&gt;Caso voc√™ esteja utilizando algum link com target &amp;#8220;#&amp;#8221; para executar alguma a√ß√£o, o &amp;#8220;#wall-x&amp;#8221; que est√° sendo setado perder√° o foco, e logicamente ter√° a atribui√ß√£o &amp;#8220;display: none;&amp;#8221; retomada. Neste caso √© recomend√°vel que n√£o utilize targets na mesma pagina do carrossel e substitua os links &amp;#8220;#&amp;#8221; por fun√ß√µes onclick via JavaScript ou JQuery.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Aplicativos Desktop com NW.js ‚Äì Node Webkit ‚Äì Introdu√ß√£o</title>
      <link>https://tableless.github.io/hugo-public/aplicativos-desktop-com-nw-js-node-webkit-introducao/</link>
      <pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/aplicativos-desktop-com-nw-js-node-webkit-introducao/</guid>
      <description>

&lt;h1 id=&#34;este-√©-o-primeiro-artigo-de-uma-s√©rie-que-vou-escrever-sobre-aplica√ß√µes-desktop-usando-tecnologias-web-html-css-javascript-e-webgl&#34;&gt;&lt;em&gt;&lt;strong&gt;Este √© o primeiro artigo de uma s√©rie que vou escrever sobre aplica√ß√µes desktop usando tecnologias web. (HTML, CSS, Javascript e WebGL)&lt;/strong&gt;&lt;/em&gt;&lt;/h1&gt;

&lt;p&gt;O &lt;strong&gt;NW.js&lt;/strong&gt; √© uma aplica√ß√£o em tempo de execu√ß√£o baseado em Chromium e Node.js, com ele √© poss√≠vel desenvolver aplicativos nativos para Windows, Linux e Mac, usando tecnologias web e usufruindo dos pacotes do Node.js.&lt;/p&gt;

&lt;p&gt;Para ter uma ideia do que √© poss√≠vel fazer, visite este link e veja alguns aplicativos desenvolvidos com NW.js -&amp;gt; &lt;a href=&#34;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&#34;&gt;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;NW.js&lt;/strong&gt; √© um projeto criado pela Intel.¬†Outro projeto muito bom e conhecido para desenvolver aplicativos desktop usando tecnologias web √© o &lt;strong&gt;Electron&lt;/strong&gt;, criado pelo GitHub. Segue um link comparativo entre os dois -&amp;gt; &lt;a href=&#34;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&#34;&gt;http://tangiblejs.com/posts/nw-js-and-electron-compared-2016-edition&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nessa s√©rie de artigos, vou explicar como criar um aplicativo desktop, com √≠cone personalizado e empacotado em um √∫nico execut√°vel. No √∫ltimo artigo, vou explicar como fazer uma integra√ß√£o com base de dados local, em tempo real e sem a necessidade de abrir portas ou fazer configura√ß√µes de &lt;em&gt;firewall&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A vers√£o mais atual do NW.js no momento em que eu escrevo este artigo √© a¬†&lt;strong&gt;&lt;em&gt;nwjs-v0.15.3&lt;/em&gt;&lt;/strong&gt;, √© esta que estou usando. Al√©m disso, estou usando Windows como sistema operacional.&lt;/p&gt;

&lt;p&gt;Vamos come√ßar com um &amp;#8220;Ol√° Mundo&amp;#8221;, por√©m, vou explicar alguns recursos de &amp;#8220;Window&amp;#8221; e as configura√ß√µes para iniciar o projeto.&lt;/p&gt;

&lt;p&gt;Primeiro fa√ßa o download do NW.js no site &lt;a href=&#34;http://nwjs.io/&#34;&gt;http://nwjs.io/&lt;/a&gt; &amp;#8211; Para desenvolvimento, baixe a vers√£o SDK &amp;#8211; descompacte os arquivos em uma pasta que seja f√°cil para acessar pelo &lt;em&gt;prompt&lt;/em&gt; de comando¬†&amp;#8211;¬†eu costumo descompactar na pasta _c:\nwjs_&lt;/p&gt;

&lt;p&gt;Para uma aplica√ß√£o b√°sica funcionar, precisamos apenas de dois arquivos, o &lt;em&gt;package.json&lt;/em&gt;, que cont√©m as configura√ß√µes da nossa aplica√ß√£o e o &lt;em&gt;index.html&lt;/em&gt;, que cont√©m o c√≥digo da nossa aplica√ß√£o. Depois vamos adicionar arquivos .js e .css.¬†Neste primeiro artigo, vamos brincar um pouco com o package.json.&lt;/p&gt;

&lt;p&gt;Crie um novo arquivo index.html¬†&amp;#8211;¬†vamos adicionar uma estrutura b√°sica de HTML:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&#34;utf-8&#34;/&amp;gt;
&amp;lt;title&amp;gt;Meu Primeiro Projeto&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Ol√° Mundo.&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Crie um novo arquivo package.json, com o c√≥digo abaixo e salve na mesma pasta do¬†HTML:&lt;/p&gt;

&lt;pre&gt;{
 &#34;name&#34;: &#34;ola-mundo&#34;,
 &#34;main&#34;: &#34;index.html&#34;
}&lt;/pre&gt;

&lt;p&gt;Somente com essas informa√ß√µes no package.json voc√™ j√° pode testar seu &amp;#8220;Ol√° Mundo&amp;#8221;.¬†&amp;#8220;&lt;em&gt;name&lt;/em&gt;&amp;#8221; √© o nome do projeto, e &amp;#8220;&lt;em&gt;main&lt;/em&gt;&amp;#8221; √© o arquivo inicial da aplica√ß√£o, sua &amp;#8220;p√°gina inicial&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Para executar nosso aplicativo, abra o &lt;em&gt;prompt&lt;/em&gt; de comando e v√° at√© a pasta do seu projeto, no meu caso &amp;#8220;c:\projetos\olamundo&amp;#8221;, depois vamos executar o comando para o NW.js executar nosso projeto. Como estou usando o Windows, vou apontar para o nw.exe.¬†No Linux ou no Mac √© diferente, voc√™ pode olhar na documenta√ß√£o. Ent√£o nosso comando ficaria assim:&lt;/p&gt;

&lt;pre&gt;cd /path/to/your/app
/path/to/nw .&lt;/pre&gt;

&lt;p&gt;No meu caso:&lt;/p&gt;

&lt;pre&gt;cd c:\projetos\olamundo
c:\nwjs\nw.exe .&lt;/pre&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-54795 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/06/olamundo01.png&#34; alt=&#34;Tela Ol√° Mundo NW.js&#34; width=&#34;966&#34; height=&#34;535&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;mais-sobre-o-package-json&#34;&gt;Mais sobre o package.json&lt;/h2&gt;

&lt;p&gt;O nosso package.json est√° muito simples, tem apenas um nome e o caminho do arquivo index. Vou explicar um pouco sobre as configura√ß√µes &amp;#8220;window&amp;#8221;, que servem para controlar os bot√µes de fechar, minimizar, informar os tamanhos m√≠nimos e m√°ximos, se a janela pode ser dimensionada e outras configura√ß√µes.&lt;/p&gt;

&lt;p&gt;Abra o seu arquivo package.json e deixe ele como o exemplo abaixo:&lt;/p&gt;

&lt;pre&gt;{
 &#34;name&#34;: &#34;ola-mundo&#34;,
 &#34;main&#34;: &#34;index.html&#34;,
 &#34;version&#34;: &#34;1.0&#34;,
 &#34;description&#34;: &#34;Ol√° Mundo&#34;,
 &#34;window&#34;: {
 &#34;width&#34;: 400,
 &#34;height&#34;: 300,
 &#34;resizable&#34;: false,
 &#34;frame&#34;: true,
 &#34;title&#34;: &#34;Ol√° Mundo&#34;,
 &#34;show&#34;: true,
 &#34;fullscreen&#34;: false,
 &#34;kiosk&#34;: false,
 &#34;icon&#34;: &#34;icon.png&#34;
 }
}
&lt;/pre&gt;

&lt;p&gt;Execute novamente o aplicativo e veja como ficou. Abaixo, explico cada uma das configura√ß√µes usadas.&lt;/p&gt;

&lt;pre&gt;name -&amp;gt; Nome do projeto
main -&amp;gt; Arquivo inicial
version -&amp;gt; Vers√£o
description -&amp;gt; Descri√ß√£o do projeto
window:
 width -&amp;gt; Largura da janela
 height -&amp;gt; Altura da janela
 resizable -&amp;gt; Se o tamanho da janela pode ser alterado ou n√£o
 frame -&amp;gt; Quadro que envolve a aplica√ß√£o com o t√≠tulo, √≠cone, bot√µes de fechar, minimizar e maximizar
 title -&amp;gt; T√≠tulo da janela
 show -&amp;gt; Se estiver como false voc√™ executa o aplicativo e ele fica em modo silencioso, 
  est√° rodando, mas n√£o aparece. Fica apenas como um processo no Windows.
 fullscreen -&amp;gt; executa em tela cheia
 kiosk -&amp;gt; Executa em tela cheia e dificulta a sa√≠da da aplica√ß√£o, normalmente √© usado para exposi√ß√µes.
 icon -&amp;gt; Caminho para o √≠cone (deve estar na mesma pasta do projeto)&lt;/pre&gt;

&lt;p&gt;Voc√™ pode ver mais op√ß√µes e detalhes na documenta√ß√£o: &lt;a href=&#34;http://docs.nwjs.io/en/latest/References/Manifest%20Format/#window-subfields&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://docs.nwjs.io/en/latest/References/Manifest%20Format/#window-subfields&#34;&gt;http://docs.nwjs.io/en/latest/References/Manifest%20Format/#window-subfields&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reposit√≥rio com os fontes do primeiro artigo: &lt;a href=&#34;https://bitbucket.org/jzonta/artigos_nwjs&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://bitbucket.org/jzonta/artigos_nwjs&#34;&gt;https://bitbucket.org/jzonta/artigos_nwjs&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;pr√≥ximos-artigos-8211-aplicativos-desktop-com-nw-js-8211-node-webkit&#34;&gt;Pr√≥ximos artigos &amp;#8211; Aplicativos Desktop com NW.js &amp;#8211; Node Webkit&lt;/h2&gt;

&lt;p&gt;&lt;del&gt;&lt;strong&gt;1¬∫ &amp;#8211; Introdu√ß√£o&lt;/strong&gt;&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Uma breve introdu√ß√£o, fazer um &amp;#8220;Ol√° Mundo&amp;#8221; e aprender um pouco sobre as configura√ß√µes iniciais.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2¬∫ &amp;#8211; Menus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fazer um menu nativo da aplica√ß√£o e um menu HTML, capturar as a√ß√µes do bot√£o de minimizar e alterar para minimizar o aplicativo para o System Try (Aqueles √≠cones pequenos ao lado do rel√≥gio) e vamos adicionar menu de op√ß√µes no System Try.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3¬∫ &amp;#8211; Pacotes Node e Persist√™ncia de dados&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vamos aprender como usar os pacotes do Node.js, vamos instalar um pacote para persistir informa√ß√µes em um banco de dados MySql e tamb√©m em um arquivo local.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4¬∫ &amp;#8211; Preparando para produ√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Como empacotar sua aplica√ß√£o em um execut√°vel e adicionar um √≠cone para o Windows.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5¬∫ &amp;#8211; Integra√ß√£o web com base de dados local&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Como fazer uma integra√ß√£o de uma aplica√ß√£o web com um banco de dados local, atrav√©s de uma api REST, sem a necessidade de abertura de portas ou configura√ß√µes de &lt;em&gt;firewall&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Poste suas d√∫vidas e sugest√µes nos coment√°rios!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Voc√™ conhece AMP?</title>
      <link>https://tableless.github.io/hugo-public/voce-conhece-amp/</link>
      <pubDate>Wed, 13 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/voce-conhece-amp/</guid>
      <description>&lt;p&gt;O projeto &lt;a href=&#34;https://www.ampproject.org/&#34; target=&#34;_blank&#34;&gt;AMP &amp;#8211; Accelerated Mobile Pages&lt;/a&gt;, √© uma iniciativa Google em conjunto com alguns publishers como Chartbeat, Vox, WordPress.com, Twitter, The Washington Post, UOL, etc; de trabalhar uma estrutura de r√°pido carregamento de conte√∫dos em Smartphones. Afinal, apesar da navega√ß√£o mobile crescer dia-a-dia as solu√ß√µes para uma entrega com mais velocidade ainda andam a passos lentos. Nossa conex√£o de internet em celulares ainda n√£o tem a devida capacidade e nos obriga a, em alguns casos, buscar tamanha versatilidade em nosso desenvolvimento web a ponto de, em um site responsivo, ter que oferecer uma &amp;#8220;cidade completa e bem elaborada&amp;#8221; em sua vers√£o desktop e uma &amp;#8220;ilha&amp;#8221; em sua vers√£o mobile para n√£o correr o risco de prejudicar nosso usu√°rio.&lt;/p&gt;

&lt;p&gt;Em busca de reduzir os √≠ndices de frustra√ß√£o e oferecer uma solu√ß√£o mais r√°pida essa iniciativa tomou forma e o projeto vem sendo adotado e atualizado constantemente por outros publishers pelo mundo. Aqui voc√™ pode acompanhar quem esta aplicando vers√µes AMP em seus CMS‚Äôs: &lt;a href=&#34;https://www.ampproject.org/who/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://www.ampproject.org/who/&#34;&gt;https://www.ampproject.org/who/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OK! Tudo bacana, mas o que tem a ver com Front/Dev? Eu te respondo: tudo!&lt;/p&gt;

&lt;p&gt;O formato AMP √© totalmente focado em performance e para esse resultado a estrutura exige mudan√ßas na entrega HTML, JS e CSS das p√°ginas web que desenvolvemos tradicionalmente. Um conte√∫do deve ser estruturado de maneira que tags AMP sejam lidas e artif√≠cios JS sejam aplicados apenas em caso de necessidade real.&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;line-height: 1.5&#34;&gt;Tecnicamente n√£o √© dif√≠cil transformar seu conte√∫do em formato AMP, mas certamente, ser√° trabalhoso caso sua estrutura seja robusta ou antiga ou os dois.&lt;/p&gt;&lt;/p&gt;

&lt;h2&gt;
  Entendendo um pouco o AMP
&lt;/h2&gt;

&lt;p&gt;
  A estrutura √© simplificada: em geral, boa parte das tags devem conter o prefixo &lt;strong&gt;&amp;#8220;amp-&amp;#8220;&amp;#8221;&lt;/strong&gt; para serem lidas. Esse √© o come√ßo dos come√ßos:
&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;iframe src=&#34;&#34; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;
  em AMP
&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;amp-iframe src=&#34;&#34; /&amp;gt;&lt;/pre&gt;

&lt;p&gt;
  O detalhe mais trabalhoso dessa modifica√ß√£o fica por conta das especifica√ß√µes que esses novos prefixos exigem. No exemplo acima, se nosso conte√∫do for um trecho hospedado em um protocolo HTTP, provavelmente n√£o funcionaria.
&lt;/p&gt;

&lt;p&gt;
  &lt;strong&gt;P√°ginas AMP exigem que os conte√∫dos para iframes sejam HTTPs.&lt;/strong&gt;
&lt;/p&gt;

&lt;p&gt;
  Al√©m deste ponto, as imagens devem conter medidas de altura e largura, assim como qualquer outro bloco que cont√©m algo, como trechos do Twitter ou Facebook.
&lt;/p&gt;

&lt;p&gt;
  O JS, da forma que utilizamos tamb√©m √© exclu√≠do. Aquele &lt;i&gt;pluggin &lt;/i&gt;de galeria ou aquele &lt;i&gt;slider &lt;/i&gt;em Jquery, possivelmente n√£o v√£o funcionar e a√≠ voc√™ deve estar pensando:
&lt;/p&gt;

&lt;p&gt;
  &lt;img class=&#34;alignnone&#34; src=&#34;https://media.giphy.com/media/fd1TSJqq3b4GI/giphy.gif&#34; width=&#34;600&#34; height=&#34;338&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;
  Calma!&lt;br /&gt; Eu tamb√©m reagi assim no primeiro momento mas, Google &amp;#8220;√© pai e n√£o √© padastro&amp;#8221;&amp;#8221; e criou uma biblioteca de alternativas para substituirmos o tradicional pela vers√£o AMP.
&lt;/p&gt;

&lt;p&gt;
  Voc√™ pode dar uma conferida aqui: &lt;a href=&#34;https://www.ampproject.org/docs/reference/extended.html&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;line-height: 1.5&#34;&gt;https://www.ampproject.org/docs/reference/extended.html&lt;/a&gt;&lt;/p&gt; 
  

&lt;p&gt;&lt;h2&gt;
    E como eu sei que meu formato AMP esta funcionando?
  &lt;/h2&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Tem 2 maneiras de verificar se seu c√≥digo esta de acordo com a valida√ß√£o AMP.
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    A primeira delas √© atrav√©s das ferramentas de Web Developer (F12) dos navegadores no item &amp;#8220;Console&amp;#8221;&amp;#8221;. L√° voc√™ deve ser avisado dos erros encontrados.
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    &lt;img class=&#34;alignnone size-full wp-image-55207&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/07/console.jpg&#34; alt=&#34;console&#34; width=&#34;466&#34; height=&#34;337&#34; /&gt;
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Para Chrome tem uma extens√£o que fica no cantinho de sua tela avisando o n√∫mero de erros e &amp;#8220;warnings&amp;#8221;&amp;#8221; que ele encontrou para ajustar:
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    &lt;img class=&#34;alignnone size-full wp-image-55208&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/07/extensaoamp.jpg&#34; alt=&#34;extensaoamp&#34; width=&#34;50&#34; height=&#34;38&#34; /&gt;
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    &amp;nbsp;
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    AMP v√°lido e publicado, teste a busca de seus conte√∫do no Google e veja como ele se apresenta. Dever algo desta forma:
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    &lt;img class=&#34;alignnone wp-image-55209&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/07/Google-AMP-news.jpg&#34; alt=&#34;Google-AMP-news&#34; width=&#34;800&#34; height=&#34;516&#34; /&gt;
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    A documenta√ß√£o completa voc√™ pode ler aqui:
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    &lt;a href=&#34;https://www.ampproject.org/docs/get_started/about-amp.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://www.ampproject.org/docs/get_started/about-amp.html&#34;&gt;https://www.ampproject.org/docs/get_started/about-amp.html&lt;/a&gt;&lt;/a&gt;
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Eles explicam tudo diretinho e voc√™ tem a chance de colaborar para uma entrega mais veloz de conte√∫do na internet mobile.
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    At√© a pr√≥xima! üòâ
  &lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bulma: framework CSS baseado em flexbox</title>
      <link>https://tableless.github.io/hugo-public/bulma-framework-css-baseado-em-flexbox/</link>
      <pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/bulma-framework-css-baseado-em-flexbox/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;Inspirado pelo Bootstrap, o Bulma visa oferecer a todos a alegria de fazer o design do site, com a simplicidade do flexbox e a eleg√¢ncia de Sass.&amp;#8221; &amp;#8211;¬†&lt;a href=&#34;http://jgthms.com/&#34;&gt;Jeremy Thomas&lt;/a&gt;, criador do projeto Bulma.io.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Como o t√≠tulo diz, o &lt;a href=&#34;http://bulma.io/&#34;&gt;Bulma&lt;/a&gt; √© um framework CSS baseado na tecnologia flexbox, que j√° tem uma grande &lt;a href=&#34;http://caniuse.com/#search=flexbox&#34;&gt;compatibilidade&lt;/a&gt; entre os navegadores. O pacote cont√©m todos os¬†elementos mais comuns como bot√µes, formul√°rios, menus, tabelas, t√≠tulos, notifica√ß√µes, barras de progresso¬†e¬†um simples sistema de grid (basta adicionar uma coluna, o resize das colunas √© autom√°tico).&lt;/p&gt;

&lt;p&gt;Vou mostrar alguns exemplos para que voc√™ possa entender o poder do Bulma.&lt;/p&gt;

&lt;p&gt;Primeiramente,¬†faremos a instala√ß√£o que n√£o precisa de nada mais que um link para o arquivo de estilos do Bulma:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/bulma/0.0.26/css/bulma.css&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Claro que voc√™ pode baixar e deixar no seu diret√≥rio local, e tamb√©m¬†baixar com o NPM: &lt;code&gt;npm install bulma&lt;/code&gt;; mas o que quero mostrar √© que tudo que voc√™ precisa √© apenas de um arquivo de CSS.&lt;/p&gt;

&lt;p&gt;Baixando com o NPM voc√™ ter√° como personalizar facilmente¬†com SASS.&lt;/p&gt;

&lt;p&gt;O Bulma n√£o vem com nenhum pacote de icon-fonts acoplado, ent√£o, caso voc√™ pretenda usar algum, como o Font Awesome, voc√™ deve inser√≠-lo tamb√©m.&lt;/p&gt;

&lt;h2 id=&#34;o-grid&#34;&gt;O Grid&lt;/h2&gt;

&lt;p&gt;Lembrando: como o Bulma foi baseado no Bootstrap, uma das semelhan√ßas √© o sistema de grid com 12 colunas.&lt;/p&gt;

&lt;p&gt;Como falei, o grid funciona de forma muito simples. Tudo que voc√™ precisa √© ter uma &lt;code&gt;div&lt;/code&gt; com a classe &lt;code&gt;.columns&lt;/code&gt; e suas filhas &lt;code&gt;.column&lt;/code&gt;, como no exemplo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;columns&#34;&amp;gt;
  &amp;lt;div class=&#34;column&#34;&amp;gt;.column&amp;lt;/div&amp;gt;
  &amp;lt;div class=&#34;column&#34;&amp;gt;.column&amp;lt;/div&amp;gt;
  &amp;lt;div class=&#34;column&#34;&amp;gt;.column&amp;lt;/div&amp;gt;
  &amp;lt;div class=&#34;column&#34;&amp;gt;.column&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Voc√™ pode entender melhor como funciona com &lt;a href=&#34;http://codepen.io/gabsprates/full/PNVJrP/&#34;&gt;esse exemplo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mas e se voc√™ quiser que uma coluna ocupe o espa√ßo de duas? Ou tr√™s? Ou quatro? Simples!!!&lt;/p&gt;

&lt;p&gt;Podemos utilizar as classes &lt;code&gt;is-2&lt;/code&gt;, &lt;code&gt;is-3&lt;/code&gt;, &lt;code&gt;is-4&lt;/code&gt;, &lt;code&gt;is-5&lt;/code&gt;, &lt;code&gt;is-6&lt;/code&gt;, &lt;code&gt;is-7&lt;/code&gt;, &lt;code&gt;is-8&lt;/code&gt;, &lt;code&gt;is-9&lt;/code&gt;, &lt;code&gt;is-10&lt;/code&gt; e &lt;code&gt;is-11&lt;/code&gt; para especificar qual a √°rea ocupada pela &lt;code&gt;.column&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para entender melhor, aconselho a dar uma olhada¬†&lt;a href=&#34;http://bulma.io/documentation/grid/columns/&#34;&gt;neste&lt;/a&gt; e &lt;a href=&#34;http://bulma.io/documentation/grid/tiles/&#34;&gt;neste&lt;/a&gt; links.&lt;/p&gt;

&lt;h2 id=&#34;hero&#34;&gt;Hero&lt;/h2&gt;

&lt;p&gt;Voc√™ j√° teve problemas com alinhar elementos verticalmente ao centro? O Bulma √© um verdadeiro her√≥i para essas situa√ß√µes! Veja este exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;section class=&#34;hero is-large&#34;&amp;gt;
    &amp;lt;div class=&#34;hero-body&#34;&amp;gt;
      &amp;lt;div class=&#34;container&#34;&amp;gt;
        &amp;lt;h1 class=&#34;title&#34;&amp;gt;
          T√≠tulo
        &amp;lt;/h1&amp;gt;
        &amp;lt;h2 class=&#34;subtitle&#34;&amp;gt;
          Exemplo do uso do hero
        &amp;lt;/h2&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/section&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Aqui o Bulma centraliza os t√≠tulos na vertical, qualquer conte√∫do seria alinhado tamb√©m. &lt;a href=&#34;http://bulma.io/documentation/layout/hero/&#34;&gt;Clique aqui&lt;/a&gt; mais exemplos.&lt;/p&gt;

&lt;h2 id=&#34;level&#34;&gt;Level&lt;/h2&gt;

&lt;p&gt;Por √∫ltimo, quero falar um pouco sobre as navbars. Veja esse c√≥digo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;nav class=&#34;level&#34;&amp;gt;
    &amp;lt;p class=&#34;level-item has-text-centered&#34;&amp;gt;
      &amp;lt;a class=&#34;link is-info&#34;&amp;gt;Home&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;
    &amp;lt;p class=&#34;level-item has-text-centered&#34;&amp;gt;
      &amp;lt;a class=&#34;link is-info&#34;&amp;gt;Menu&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;
    &amp;lt;p class=&#34;level-item has-text-centered&#34;&amp;gt;
      &amp;lt;img src=&#34;http://bulma.io/images/bulma.png&#34; alt=&#34;&#34; style=&#34;height: 33px;&#34;&amp;gt;
    &amp;lt;/p&amp;gt;
    &amp;lt;p class=&#34;level-item has-text-centered&#34;&amp;gt;
      &amp;lt;a class=&#34;link is-info&#34;&amp;gt;Reservations&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;
    &amp;lt;p class=&#34;level-item has-text-centered&#34;&amp;gt;
      &amp;lt;a class=&#34;link is-info&#34;&amp;gt;Contact&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;
  &amp;lt;/nav&amp;gt;

&lt;/pre&gt;

&lt;p&gt;Ele gera uma navbar em que os elementos s√£o divididos com a largura igual e com alinhamento vertical no centro, mesmo com imagem ou at√© mesmo um &lt;code&gt;form&lt;/code&gt;, ele manteria esse alinhamento.&lt;/p&gt;

&lt;p&gt;Veja mais &lt;a href=&#34;http://bulma.io/documentation/components/level/&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;enfim-8230&#34;&gt;Enfim&amp;#8230;&lt;/h2&gt;

&lt;p&gt;Estes foram alguns exemplos do poder do Bulma mas h√° muito mais que voc√™ pode conferir na¬†pr√≥pria &lt;a href=&#34;http://bulma.io/documentation/overview/start/&#34;&gt;documenta√ß√£o do projeto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Existem v√°rios componentes legais, como cards, menus, pagina√ß√£o,¬†mensagens, e v√°rias outras coisas f√°ceis de usar e simples de compreender.&lt;/p&gt;

&lt;p&gt;Isso √© tudo pessoal (:&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>React Native: Construa aplica√ß√µes m√≥veis nativas com JavaScript</title>
      <link>https://tableless.github.io/hugo-public/react-native-construa-aplicacoes-moveis-nativas-com-javascript/</link>
      <pubDate>Tue, 05 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/react-native-construa-aplicacoes-moveis-nativas-com-javascript/</guid>
      <description>

&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;

&lt;p&gt;O &lt;strong&gt;React Native&lt;/strong&gt;¬†√© um projeto desenvolvido pelos engenheiros do &lt;strong&gt;Facebook&lt;/strong&gt; e que consiste em uma s√©rie de ferramentas que viabilizam a cria√ß√£o de aplica√ß√µes m√≥veis &lt;strong&gt;nativas&lt;/strong&gt; para a plataforma¬†&lt;strong&gt;iOS&lt;/strong&gt;¬†e &lt;strong&gt;Android&lt;/strong&gt;, utilizando o que h√° de mais moderno no desenvolvimento Front-end &amp;#8211; mirando no futuro. √â o estado da arte no que se refere ao desenvolvimento mobile baseado em JavaScript.&lt;/p&gt;

&lt;p&gt;O stack do React Native √© poderoso, pois nos permite utilizar &lt;strong&gt;ECMAScript 6&lt;/strong&gt;, &lt;strong&gt;CSS Flexbox&lt;/strong&gt;, &lt;strong&gt;JSX&lt;/strong&gt;, diversos pacotes do &lt;strong&gt;NPM&lt;/strong&gt; e muito mais. Sem contar que nos permite fazer debug na mesma IDE utilizada para o desenvolvimento nativo com essas plataformas (al√©m de tornar o processo extremamente divertido).&lt;/p&gt;

&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;Nesta introdu√ß√£o ao React Native iremos criar um aplicativo nativo voltado para a plataforma iOS, o que significa que voc√™ precisa de um computador rodando &lt;strong&gt;Mac OS X&lt;/strong&gt;. Embora o desenvolvimento para Android j√° seja poss√≠vel com o framework (foi anunciado em setembro de 2015), o foco aqui ser√° o iOS. Mas irei falar um pouco sobre o Android mais √† frente neste post.&lt;/p&gt;

&lt;h3 id=&#34;instalando-o-xcode&#34;&gt;Instalando o Xcode&lt;/h3&gt;

&lt;p&gt;A primeira coisa que voc√™ precisa instalar (caso ainda n√£o o tenha em sua m√°quina) √© o &lt;strong&gt;Xcode&lt;/strong&gt;. Xcode √© a IDE de desenvolvimento da Apple para cria√ß√£o de aplicativos para iPhone e iPad. Sua instala√ß√£o √© necess√°ria pois, sem ele, nosso c√≥digo n√£o poder√° ser &amp;#8220;compilado&amp;#8221; para Objective-C. Tamb√©m √© nele que iremos fazer o debug de nossa aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;Para instalar, basta abrir a App Store no seu Mac e buscar por &amp;#8220;Xcode&amp;#8221;. A instala√ß√£o pode ser um pouco demorada. Aproveite esse tempo pra contar para os seus familiares que voc√™ ir√° construir uma aplica√ß√£o iOS nativa utilizando apenas JavaScript e os recursos mais modernos da plataforma. üòâ&lt;/p&gt;

&lt;h3 id=&#34;instalando-o-node-js&#34;&gt;Instalando o Node.js&lt;/h3&gt;

&lt;p&gt;O React Native √© um projeto que utiliza recursos provenientes do Node.js, portanto precisaremos dele para prosseguir.&lt;/p&gt;

&lt;p&gt;H√° duas maneiras de instalar o Nodejs: Voce pode fazer download diretamente no &lt;a href=&#34;https://nodejs.org/en/download/&#34; target=&#34;_blank&#34;&gt;site do projeto&lt;/a&gt; ou atrav√©s do &lt;a href=&#34;http://brew.sh/&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;, o famoso package manager do Mac OS X. Caso j√° o tenha instalado na sua m√°quina, basta digitar o seguinte c√≥digo no seu Terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brew install node&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ter o Homebrew instalado na sua m√°quina √© prefer√≠vel pois iremos utiliz√°-lo para instalar a maioria dos outros pacotes necess√°rios para nossa aplica√ß√£o.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Conforme sugerido pela documenta√ß√£o oficial, voc√™ pode instalar o &lt;strong&gt;NVM&lt;/strong&gt; (Node Version Manager) ao inv√©s de instalar o Node diretamente, j√° que o React Native trabalha com vers√µes do Node iguais ou superiores √† vers√£o 4.0. Basta digitar no Terminal &amp;#8220;&lt;strong&gt;brew install nvm&lt;/strong&gt;&amp;#8221; e em seguida &amp;#8220;&lt;strong&gt;nvm install node &amp;amp;&amp;amp; nvm alias default node&lt;/strong&gt;&amp;#8221; para garantir a instala√ß√£o da vers√£o mais recente.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;instalando-o-watchman&#34;&gt;Instalando o Watchman&lt;/h3&gt;

&lt;p&gt;O &lt;strong&gt;Watchman&lt;/strong&gt; √© um pacote muito bacana respons√°vel por monitorar altera√ß√µes em nosso c√≥digo e atualizar a nossas views em tempo real (um recurso extremamente poderoso no qual iremos falar mais √† frente).&lt;/p&gt;

&lt;p&gt;Digite a seguinte instru√ß√£o no seu Terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brew install --HEAD watchman&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;O par√¢metro &lt;code&gt;--HEAD&lt;/code&gt; √© necess√°rio pois garante que a √∫ltima vers√£o do Watchman ser√° instalada, evitando problemas de compatibilidade com a vers√£o mais recente do Framework.&lt;/p&gt;

&lt;p&gt;√ìtimo. Estamos quase l√°&amp;#8230;&lt;/p&gt;

&lt;h3 id=&#34;instalando-o-cli-do-react-native&#34;&gt;Instalando o CLI do React Native&lt;/h3&gt;

&lt;p&gt;Por fim, precisamos instalar o &lt;strong&gt;CLI&lt;/strong&gt; (Command Line Interface) do projeto que consiste em uma s√©rie de helpers necess√°rios para a cria√ß√£o dos nossos aplicativos. Dessa vez, iremos instalar utilizando o NPM:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g react-native-cli&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Utilizamos o &lt;code&gt;-g&lt;/code&gt; para instalar o CLI de forma global em nossa m√°quina.&lt;/p&gt;

&lt;p&gt;Perfeito! Agora que todo o nosso arsenal foi preparado, podemos iniciar nossa aventura. Vamos conhecer um pouco do React Native e criar uma aplica√ß√£o simples de exemplo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Caso queira acompanhar atrav√©s do &lt;strong&gt;Git&lt;/strong&gt;, basta clonar o &lt;a href=&#34;https://github.com/carloscabral/myFirstProject---React-Native&#34; target=&#34;_blank&#34;&gt;reposit√≥rio do projeto no Github&lt;/a&gt;, acessar a pasta do mesmo atrav√©s da linha de comando e digitar as seguintes instru√ß√µes no Terminal: &lt;strong&gt;git checkout step2 &amp;amp;&amp;amp; npm install&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;executando-o-aplicativo-de-exemplo&#34;&gt;Executando o aplicativo de exemplo&lt;/h2&gt;

&lt;p&gt;Criar uma aplica√ß√£o com o React Native √© muito simples. Crie uma pasta qualquer e navegue pra dentro dela utilizando o Terminal. Digite o seguinte comando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;react-native init MyFirstProject&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Se voc√™ abrir a pasta do projeto no seu computador, ir√° verificar que tr√™s arquivos foram automaticamente criados:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;index.ios.js&lt;/li&gt;
&lt;li&gt;index.android.js&lt;/li&gt;
&lt;li&gt;package.json&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E tr√™s pastas tamb√©m:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ios&lt;/li&gt;
&lt;li&gt;android&lt;/li&gt;
&lt;li&gt;node_modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O arquivo &lt;em&gt;index.ios.js&lt;/em&gt; √© onde iremos escrever o c√≥digo da nossa aplica√ß√£o. A vantagem aqui √© que podemos utilizar o nosso editor de texto favorito ao inv√©s de uma IDE (pr√°tica comum entre os devs Frontend). O arquivo &lt;em&gt;package.json&lt;/em&gt; √© criado automaticamente pelo NPM e serve para gerenciar as depend√™ncias da nossa aplica√ß√£o, que, por sua vez, ficam dispon√≠veis na pasta _node&lt;em&gt;modules&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A pasta &lt;em&gt;ios&lt;/em&gt; √© onde a m√°gica ocorre. Esta √© a pasta que cont√©m o projeto iOS nativo gerado pelo React Native (o mesmo conceito para a pasta android). Fa√ßa um teste e abra o arquivo &lt;em&gt;MyFirstProject.xcodeproj&lt;/em&gt; no Xcode para visualizar sua extrutura no &lt;strong&gt;Project Navigator&lt;/strong&gt; (√† esquerda). Agora pressione o bot√£o &lt;strong&gt;Run&lt;/strong&gt; na barra de ferramentas, conforme a imagem:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/xcode-run-button.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52737&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/xcode-run-button.jpg&#34; alt=&#34;xcode-run-button&#34; width=&#34;442&#34; height=&#34;139&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Com isso acabamos de solicitar a execu√ß√£o do aplicativo. Neste momento estamos &amp;#8220;compilando o c√≥digo JavaScript&amp;#8221; presente no nosso projeto (criado por default) para Objective-C e gerando o bundle da aplica√ß√£o. Agora j√° podemos testar o resultado em um emulador.&lt;/p&gt;

&lt;p&gt;Geralmente o emulador demora um pouco para exibir alguma coisa na primeira vez que √© acionado, mas nada lhe impede de rodar o app em um iPhone real. Basta abrir o arquivo &lt;em&gt;AppDelegate.m&lt;/em&gt;, localizar a string atribu√≠da ao objeto &lt;code&gt;jsCodeLocation&lt;/code&gt; com o conte√∫do &lt;strong&gt;@&lt;a href=&#34;http://localhost:8081/&amp;amp;#8230&#34;&gt;http://localhost:8081/&amp;amp;#8230&lt;/a&gt;;&lt;/strong&gt; e alterar o valor de &lt;code&gt;localhost&lt;/code&gt; para o n√∫mero de IP do seu computador. Lembre-se que o device precisa estar conectado ao seu Mac atrav√©s da porta USB e ambos devem compartilhar da mesma rede Wifi. Por fim, basta selecionar o seu iPhone na lista de emuladores dispon√≠veis no Xcode.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Para que o procedimento acima seja poss√≠vel, √© necess√°rio que voc√™ tenha uma conta de desenvolvedor (iOS developer account) configurada na Apple. Basta gerar um certificado, registrar o seu device e &amp;#8211; depois de efetuar todo o exaustivo processo de configura√ß√£o &amp;#8211; ele ficar√° dispon√≠vel na lista de &lt;strong&gt;deploy target&lt;/strong&gt; do Xcode.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Quando o emulador terminar de carregar, o resultado exibido ser√° este:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-initial-screen_2.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52742&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-initial-screen_2.jpg&#34; alt=&#34;react native initial screen&#34; width=&#34;344&#34; height=&#34;524&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perceba que o aplicativo de exemplo cont√©m apenas poucos par√°grafos com instru√ß√µes b√°sicas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Para iniciar, basta editar o arquivo &lt;em&gt;index.ios.js&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Para recarregar a aplica√ß√£o, basta pressionar &lt;strong&gt;CMD + R&lt;/strong&gt; no teclado.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos ent√£o abrir o arquivo &lt;em&gt;index.ios.js&lt;/em&gt; em nosso editor favorito. No meu caso, irei trabalhar com o &lt;a href=&#34;http://www.sublimetext.com/2&#34; target=&#34;_blank&#34;&gt;Sublime Text 2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Se voc√™ j√° est√° acostumado com a escrita de c√≥digo do React, n√£o h√° motivos para sustos. Mas, se este n√£o for o seu caso, n√£o entre em p√¢nico: o React Native √© muito simples de trabalhar.&lt;/p&gt;

&lt;p&gt;Vamos fazer um pouco de m√°gica agora: Encontre o texto &lt;strong&gt;Welcome to React Native&lt;/strong&gt; e modifique-o para &lt;strong&gt;My First Voodoo App!&lt;/strong&gt; &amp;#8211; ou qualquer outra coisa que voc√™ queira. Abra o emulador e pressione &lt;strong&gt;CMD + R&lt;/strong&gt; no seu teclado (caso abra uma action sheet, basta clicar em &amp;#8220;Reload&amp;#8221;). Perceba que, em poucos segundos, sua View foi atualizada com o texto novo. Este, meu amigo, √© um dos recursos mais fant√°sticos presentes na plataforma: O live-reload!&lt;/p&gt;

&lt;p&gt;Se voc√™ j√° vem de um background web, deve estar se perguntando: &amp;#8221; &amp;#8211; S√©rio? Existe motivo para dramatizar com isso?&amp;#8221;. Mas se voc√™ j√° tem experi√™ncia no desenvolvimento com &lt;strong&gt;Swift&lt;/strong&gt; ou &lt;strong&gt;Objective-C&lt;/strong&gt; deve saber que altera√ß√µes feitas no seu c√≥digo precisam ser re-compiladas no Xcode para que voc√™ possa visualizar o que foi modificado. Altera√ß√µes em Views n√£o s√£o refletidas em tempo real quando voc√™ est√° trabalhando de forma nativa. Isso, por si s√≥, j√° faz o React Native merecer sua aten√ß√£o!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fazer preview de altera√ß√µes visuais de componentes em tempo de desenvolvimento √© um recurso que pode ser conseguido com &lt;strong&gt;IBDesignables&lt;/strong&gt; de modo nativo. Este recurso est√° dispon√≠vel a partir da vers√£o 6 do Xcode. Com ele o desenvolvedor pode visualizar aquilo que est√° modificando na View sem precisar compilar o app. Mas este √© um recurso relativamente avan√ßado utilizado por desenvolvedores mais experientes e que necessita de escrita de c√≥digo para funcionar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos agora tentar entender melhor como foi estruturado o c√≥digo de exemplo e o que cada bloco significa.&lt;/p&gt;

&lt;h2 id=&#34;estrutura-do-react-native&#34;&gt;Estrutura do React Native&lt;/h2&gt;

&lt;p&gt;Todo projeto em React tem como premissa a cria√ß√£o e reutiliza√ß√£o de componentes. Basicamente, o que o c√≥digo de exemplo faz √© criar o componente e exibi-lo na tela. Olhando pra ele, voc√™ j√° deve ter reparado que o bloco central √© o principal respons√°vel por essa opera√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var MyFirstProject = React.createClass({
 render: function() {
   return (
     &amp;lt;View style={styles.container}&amp;gt;
       &amp;lt;Text style={styles.welcome}&amp;gt;
         My First Voodoo App!
       &amp;lt;/Text&amp;gt;
       &amp;lt;Text style={styles.instructions}&amp;gt;
         To get started, edit index.ios.js
       &amp;lt;/Text&amp;gt;
       &amp;lt;Text style={styles.instructions}&amp;gt;
         Shake or press menu button for dev menu
       &amp;lt;/Text&amp;gt;
     &amp;lt;/View&amp;gt;
   );
 }
});
&lt;/pre&gt;

&lt;p&gt;Agora que voc√™ j√° brincou um pouco com o c√≥digo gerado por default, vamos esquec√™-lo por um minuto e criar algo do zero.&lt;/p&gt;

&lt;p&gt;Exclua todo o conte√∫do do arquivo &lt;em&gt;index.ios.js&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Em React, para criar um novo componente, basta criar uma vari√°vel qualquer que receba a nota√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;React.createClass({});
&lt;/pre&gt;

&lt;p&gt;Por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var Tableless = React.createClass({

});
&lt;/pre&gt;

&lt;p&gt;Agora √© necess√°rio suprir esse componente com par√¢metros e uma s√©rie de instru√ß√µes, respons√°veis por definir o seu comportamento e aspecto visual. Quem se responsabiliza por isso √© o m√©todo &lt;code&gt;render&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Por exemplo, se quisermos retornar alguma coisa na classe &lt;strong&gt;Tableless&lt;/strong&gt; que acabamos de criar, far√≠amos:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var Tableless = React.createClass({
   render: function() {
      return &amp;lt;p&amp;gt;Hello, Tableless!&amp;lt;/p&amp;gt;;
   }
});
&lt;/pre&gt;

&lt;p&gt;Mas, pera a√≠&amp;#8230; O que significa essa tag de par√°grafo HTML envolta do texto? Afinal, estamos lidando com HTML ou JavaScript?&lt;/p&gt;

&lt;h3 id=&#34;jsx&#34;&gt;JSX&lt;/h3&gt;

&lt;p&gt;Para facilitar a escrita de c√≥digo, o React utiliza &lt;strong&gt;JSX&lt;/strong&gt; (opcional), uma sintaxe que possibilita a escrita de componentes JavaScript por meio de tags.&lt;/p&gt;

&lt;p&gt;Para ilustrar isso melhor, o componente acima poderia ser escrito da seguinte maneira sem o uso do JSX:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var Tableless = React.createClass({
  render: function() {
     return React.createElement(&#34;p&#34;, null, &#34;Hello, Tableless!&#34;);
  }
});
&lt;/pre&gt;

&lt;p&gt;Conforme pode ser observado, esta √© uma forma de escrita muito mais verbosa do que a anterior. Eu sei, pode parecer que voc√™ est√° escrevendo HTML dentro de JavaScript mas, com a devida pr√°tica, voc√™ vai entender como o JSX quebra um grande galho para o desenvolvedor. Optar por n√£o utiliz√°-lo √© certeza de ter um c√≥digo muito repetitivo e de dif√≠cil manuten√ß√£o.&lt;/p&gt;

&lt;p&gt;Agora que voc√™ compreendeu como funciona o JSX, deve estar se perguntando (pelo menos eu espero) como uma aplica√ß√£o m√≥vel pode retornar tags HTML como &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt; ou &lt;code&gt;div&lt;/code&gt; dentro de um componente nativo, certo?&lt;/p&gt;

&lt;p&gt;Exatamente&amp;#8230; n√£o pode.&lt;/p&gt;

&lt;p&gt;Embora o c√≥digo acima execute sem falhas em aplica√ß√µes web, ele n√£o funcionaria dentro do escopo do React Native, simplesmente porque o que precisamos s√£o de componentes do iOS, como &lt;code&gt;UIView&lt;/code&gt;, &lt;code&gt;UILabel&lt;/code&gt; e &lt;code&gt;UIImage&lt;/code&gt;. Ou seja, se voc√™ precisa de um &amp;#8220;wrapper&amp;#8221; na sua tela, voc√™ ir√° retornar o componente &lt;code&gt;&amp;lt;View&amp;gt;&lt;/code&gt; ao inv√©s de uma &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. Caso queira exibir um texto, voc√™ ir√° utilizar a tag &lt;code&gt;&amp;lt;Text&amp;gt;&lt;/code&gt; ao inv√©s de um &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; e assim por diante.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://facebook.github.io/react-native/docs/&#34; target=&#34;_blank&#34;&gt;Aqui&lt;/a&gt; voc√™ encontra a listagem completa dos componentes dispon√≠veis, tanto para iOS quanto para Android.&lt;/p&gt;

&lt;h3 id=&#34;es6&#34;&gt;ES6&lt;/h3&gt;

&lt;p&gt;Ap√≥s a cria√ß√£o de um componente precisamos registr√°-lo para exibi√ß√£o. Fazemos isso retornando a fun√ß√£o com o nome do componente atrav√©s do &lt;code&gt;AppRegistry&lt;/code&gt;, dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Se o c√≥digo acima n√£o ficou √≥bvio pra voc√™, n√£o se assuste. Por default o React Native permite que trabalhemos com as novas epecifica√ß√µes do &lt;strong&gt;EcmaScript 6&lt;/strong&gt; (ou 2015, para os √≠ntimos). Uma delas √© a sintaxe chamada de &lt;strong&gt;arrow functions&lt;/strong&gt; (familiar para quem j√° trabalhou com &lt;strong&gt;CoffeeScript&lt;/strong&gt;), que permite uma escrita mais simples baseada em &lt;strong&gt;closures&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A vers√£o JavaScript &lt;strong&gt;ES5&lt;/strong&gt; do c√≥digo acima seria:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;AppRegistry.registerComponent(&#39;MyFirstProject&#39;, function() {
   return Tableless
});
&lt;/pre&gt;

&lt;p&gt;Mas uma vez, √© uma quest√£o de prefer√™ncia e n√£o uma imposi√ß√£o da ferramenta.&lt;/p&gt;

&lt;p&gt;Contudo, o que fizemos at√© aqui n√£o ser√° suficiente para fazer o c√≥digo rodar. N√≥s n√£o definimos nenhuma das depend√™ncias declaradas na aplica√ß√£o. Vamos resolver esse problema:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var React = require(&#39;react-native&#39;);&lt;/pre&gt;

&lt;p&gt;A string entre aspas √© a biblioteca que estamos solicitando acesso. Nesta caso, estamos atribuindo seu retorno √† vari√°vel React que acabamos de criar.&lt;/p&gt;

&lt;p&gt;Agora que temos acesso √† principal biblioteca do React, vamos declarar as restantes, necess√°rias para rodar nossa aplica√ß√£o sem erros. A vers√£o completa do nosso c√≥digo fica assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var AppRegistry = React.AppRegistry;
var View = React.View;
var Text = React.Text;

var Tableless = React.createClass({
    render: function() {
        return &amp;lt;View&amp;gt;
            &amp;lt;Text&amp;gt;
              Hello, Tableless!
            &amp;lt;/Text&amp;gt;
        &amp;lt;/View&amp;gt;
    }
});

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Se voc√™ pressionar &lt;strong&gt;CMD + R&lt;/strong&gt; no teclado j√° ter√° uma aplica√ß√£o rodando sem erros. Mas vamos corrigir mais duas coisinhas pra deixar nosso c√≥digo ainda mais atraente&amp;#8230;&lt;/p&gt;

&lt;p&gt;Substitua o c√≥digo do escopo de declara√ß√£o pelo seguinte:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var React = require(&#39;react-native&#39;);
var {
  AppRegistry,
  View,
  Text,
} = React;
&lt;/pre&gt;

&lt;p&gt;Como todas as bibliotecas declaradas depois da react-native fazem parte do seu core, podemos assinalar as tr√™s vari√°veis seguintes ao objeto React. Este √© mais um recurso dispon√≠vel do &lt;strong&gt;ES6/ES2015&lt;/strong&gt; chamado de &lt;strong&gt;destructuring assignment&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Outra coisa que n√£o est√° muito legal no c√≥digo √© a indenta√ß√£o dos componentes no m√©todo return. Vamos envolv√™-los em um par√™nteses para que seja permitido pular de linha e tabular tudo seguindo uma melhor hierarquia visual, dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;render: function() {
     return (
       &amp;lt;View&amp;gt;
          &amp;lt;Text&amp;gt;
             Hello, Tableless!
          &amp;lt;/Text&amp;gt;
       &amp;lt;/View&amp;gt;
     );
  }
&lt;/pre&gt;

&lt;p&gt;Vale salientar que sem o par√™nteses essa tabula√ß√£o n√£o seria poss√≠vel e iria disparar um erro no simulador.&lt;/p&gt;

&lt;p&gt;Vamos ver como ficou o c√≥digo final agora:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
  AppRegistry,
  View,
  Text,
} = React;

var Tableless = React.createClass({
   render: function() {
      return (
         &amp;lt;View&amp;gt;
             &amp;lt;Text&amp;gt;
                Hello, Tableless!
             &amp;lt;/Text&amp;gt;
         &amp;lt;/View&amp;gt;
      );
   }
});

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Se voc√™ rodar o aplicativo, ir√° perceber que o mesmo executa sem erros. Mas, numa primeira olhada, parece que n√£o h√° nada na tela! Se voc√™ observar atentamente, ir√° perceber que o texto est√° no canto superior esquerdo da tela, sem qualquer tipo de orienta√ß√£o ou margem. Precisamos corrigir isso!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_1.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52746&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_1.jpg&#34; alt=&#34;react native simple label&#34; width=&#34;344&#34; height=&#34;524&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;flexbox&#34;&gt;Flexbox&lt;/h3&gt;

&lt;p&gt;Como estamos lidando exclusivamente com JavaScript, n√£o temos acesso a CSS. Mas para aproximar a experi√™ncia de criar aplicativos m√≥veis ao desenvolvimento de uma p√°gina web, os respons√°veis pelo projeto desenvolveram uma maneira declarativa de estilizar componentes bem similar ao CSS.&lt;/p&gt;

&lt;p&gt;Insira a seguinte nota√ß√£o no bloco da View principal (linha 2 do c√≥digo):&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;return (
      // fazemos refer√™ncia ao estilo
      &amp;lt;View style={styles.container}&amp;gt;
          &amp;lt;Text&amp;gt;
              Hello, Tableless!
          &amp;lt;/Text&amp;gt;
      &amp;lt;/View&amp;gt;
   );
&lt;/pre&gt;

&lt;p&gt;Agora vamos criar uma vari√°vel &amp;#8220;styles&amp;#8221; que recebe o objeto &lt;strong&gt;StyleSheet&lt;/strong&gt; com os seguintes par√¢metros:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var styles = StyleSheet.create({

container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
}

})
&lt;/pre&gt;

&lt;p&gt;Antes de executar o c√≥digo, precisamos incluir o &lt;strong&gt;StyleSheet&lt;/strong&gt; em nosso escopo de inicializa√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var {
  AppRegistry,
  StyleSheet,
  Text,
  View,
} = React;
&lt;/pre&gt;

&lt;p&gt;Agora sim. Execute o c√≥digo pelo Xcode e voc√™ ver√° o seguinte resultado:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_3.2.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52767&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_3.2.jpg&#34; alt=&#34;react native simple label with border&#34; width=&#34;344&#34; height=&#34;524&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O texto agora se encontra alinhado no centro da tela e temos uma borda vermelha envolta do container. O que aconteceu aqui?&lt;/p&gt;

&lt;p&gt;Bem, n√≥s criamos um objeto container com seis par√¢metros: &lt;code&gt;flex&lt;/code&gt;, &lt;code&gt;flexDirection&lt;/code&gt;, &lt;code&gt;justifyContent&lt;/code&gt;, &lt;code&gt;alignItems&lt;/code&gt;, &lt;code&gt;borderWidth&lt;/code&gt; e &lt;code&gt;borderColor&lt;/code&gt;. Os dois √∫ltimos s√£o autoexplicativos e similares √† aplica√ß√£o de bordas do CSS. A diferen√ßa aqui √© que ao inv√©s de declarar &lt;code&gt;border-width&lt;/code&gt;, com h√≠fen, declaramos &lt;code&gt;borderWidth&lt;/code&gt;, em &lt;strong&gt;camelCase&lt;/strong&gt; (lembrando que estamos lidando com JavaScript e n√£o CSS de verdade). Outra observa√ß√£o importante √© que n√£o precisamos atribuir &lt;strong&gt;px&lt;/strong&gt; ao final do valor como fazemos na web, pois aplicativos nativos tem suas resolu√ß√µes de tela baseada em pontos &lt;strong&gt;(pt)&lt;/strong&gt; e n√£o em pixels.&lt;/p&gt;

&lt;p&gt;O React Native utiliza o &lt;strong&gt;Flexbox&lt;/strong&gt; para organiza√ß√£o visual dos componentes, o que simplifica, em muito, a constru√ß√£o de layouts. Basicamente, o par√¢metro &lt;code&gt;flex: 1&lt;/code&gt; significa que o container ocupa 100% de altura e largura na tela. O par√¢metro &lt;code&gt;flexDirection: column&lt;/code&gt; significa que os elementos seguir√£o o fluxo baseado em colunas, que √© de cima para baixo. A outra op√ß√£o seria &lt;code&gt;flexDirection: row&lt;/code&gt;, onde os elementos s√£o ordenados da esquerda para a direita. Por default, O fluxo padr√£o √© o de colunas, portanto voc√™ pode apagar essa instru√ß√£o sem nenhum impacto no seu c√≥digo.&lt;/p&gt;

&lt;p&gt;Por fim, temos a instru√ß√£o &lt;code&gt;justifyContent: center&lt;/code&gt; e &lt;code&gt;alignItems: center&lt;/code&gt;. O primeiro √© respons√°vel por alinhar o conte√∫do de forma vertical (eixo y), enquanto o √∫ltimo serve para alinhar de forma horizontal (eixo x). Al√©m de &lt;code&gt;center&lt;/code&gt;, tamb√©m existem outros valores como &lt;code&gt;flex-start&lt;/code&gt; e &lt;code&gt;flex-end&lt;/code&gt;. Tente utiliz√°-los para ver o que acontece no seu layout&amp;#8230;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se ainda restou alguma d√∫vida, &lt;a href=&#34;http://tableless.com.br/centralizando-conteudo-na-vertical-e-horizontal-com-css-flexbox/&#34; target=&#34;_blank&#34;&gt;este post&lt;/a&gt; escrito pelo Diego Eis pode te ajudar a entender.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;E se eu quiser uma borda arredondada envolta do texto e n√£o no container? Tamb√©m gostaria de mudar a cor do texto, centraliz√°-lo e inserir um padding envolta do mesmo. Simples&amp;#8230;&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
 AppRegistry,
 StyleSheet,
 Text,
 View,
} = React;

var Tableless = React.createClass({
   render: function() {
      return (
         &amp;lt;View style={styles.container}&amp;gt;
             // criamos um novo estilo para o componente de texto
             &amp;lt;Text style={styles.myText}&amp;gt;
                 Hello, Tableless!
             &amp;lt;/Text&amp;gt;
         &amp;lt;/View&amp;gt;
      );
   }
});

var styles = StyleSheet.create({

 container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
 },
 // declara√ß√£o do nosso novo estilo
 myText: {            
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
   borderRadius: 4,
   textAlign: &#39;center&#39;,
   padding: 10,
 // tamb√©m √© permitido passar uma string da cor ao inv√©s de um hexadecimal
   color: &#39;green&#39;,
 }

})

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Executando o c√≥digo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_2.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52746&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-simple-label_2.jpg&#34; alt=&#34;react native simple label&#34; width=&#34;344&#34; height=&#34;524&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora que voc√™ j√° est√° familiarizado com o &amp;#8220;modo React&amp;#8221; de criar aplica√ß√µes, vamos tentar entender rapidamente o que acontece por baixo dos panos&amp;#8230;&lt;/p&gt;

&lt;h2 id=&#34;javascriptcore&#34;&gt;JavaScriptCore&lt;/h2&gt;

&lt;p&gt;Se voc√™ j√° ouviu falar sobre React, j√° ouviu sobre &lt;strong&gt;Virtual DOM&lt;/strong&gt;. Essa √© uma forma genial de abstra√ß√£o que os engenheiros do facebook desenvolveram para trazer melhorias na performance de aplica√ß√µes web, uma vez que um &lt;a href=&#34;https://pt.wikipedia.org/wiki/Modelo_de_Objeto_de_Documentos&#34; target=&#34;_blank&#34;&gt;DOM&lt;/a&gt; Virtual fica em mem√≥ria e apenas modifica√ß√µes significativas em sua estrutura s√£o novamente renderizadas na tela, sem necessidade de percorrer toda a √°rvore novamente.&lt;/p&gt;

&lt;p&gt;Em algum momento eles pensaram: &lt;em&gt;&amp;#8220;E se, utilizando essa abordagem, pud√©ssemos tamb√©m abstrair uma camada qualquer diferente do DOM para conseguir resultados similares em rela√ß√£o √† performance?&amp;#8230;&amp;#8221;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At√© ent√£o, o √∫nico componente presente no iOS e no Android que viabiliza a execu√ß√£o de c√≥digo JavaScript de modo nativo s√£o seus browsers internos, conhecidos como WebViews. Com base nesse cen√°rio, v√°rios frameworks surgiram nos √∫ltimos anos com a proposta de utilizar a camada de c√≥digo nativa apenas para disparar uma aplica√ß√£o com c√≥digo escrito em HTML, CSS e JavaScript no pr√≥prio Browser (sem a barra de endere√ßos, obviamente). Como o container respons√°vel pelo ciclo de vida da aplica√ß√£o √© nativo, isso possibilita que essas aplica√ß√µes sejam desenvolvidas e distribu√≠das atrav√©s das lojas oficiais, como a &lt;strong&gt;App Store&lt;/strong&gt; e &lt;a href=&#34;https://play.google.com/store/apps&#34; target=&#34;_blank&#34;&gt;Google Play&lt;/a&gt;, sem maiores problemas. Esse movimento originou o termo atualmente conhecido como &lt;strong&gt;Aplicativos H√≠bridos&lt;/strong&gt;. Embora essa abordagem provou-se vitoriosa em alguns cen√°rios, ainda consiste em uma p√°gina web que simula uma aplica√ß√£o escrita de forma nativa, o que, algumas vezes, peca em quest√£o de performance e experi√™ncia.&lt;/p&gt;

&lt;p&gt;Em React Native continuamos escrevendo um aplicativo em JavaScript, mas que n√£o exibe uma p√°gina web como resultado. Ao inv√©s disso, o nosso c√≥digo executa uma inst√¢ncia do chamado &lt;a href=&#34;http://trac.webkit.org/wiki/JavaScriptCore&#34; target=&#34;_blank&#34;&gt;JavaScriptCore&lt;/a&gt; respons√°vel por renderizar componentes &lt;strong&gt;verdadeiramente nativos&lt;/strong&gt; dentro do nosso app. Por exemplo, se voc√™ abrir o arquivo &lt;em&gt;/ios/MyFirstProject/AppDelegate.m&lt;/em&gt; no Xcode, vai encontrar sempre o seguinte conte√∫do, independente da quantidade de c√≥digo que tiver escrito no seu editor de texto:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/AppDelegate.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-53026&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/AppDelegate.png&#34; alt=&#34;AppDelegate.m image &#34; width=&#34;844&#34; height=&#34;777&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O segredo est√° nessa classe &lt;code&gt;RCTRootView&lt;/code&gt;. Ela √© uma classe criada pelo pr√≥prio framework, respons√°vel por apresentar os elementos da classe &lt;code&gt;UIKit&lt;/code&gt; com base no c√≥digo que escrevemos em JS. Ou seja, o controle do comportamento do nosso app √© feito em JavaScript, mas em nenhum momento ocorre compila√ß√£o desse c√≥digo para Objective-C, bin√°rio ou coisa do tipo. Por isso conseguimos ver atualiza√ß√µes em tempo real em nossa aplica√ß√£o, uma vez que nenhum c√≥digo em Objective-C √© escrito, apenas c√≥digo JavaScript. N√£o tem nada pra re-compilar! Genial.&lt;/p&gt;

&lt;p&gt;Como essa &amp;#8220;passagem de bast√£o&amp;#8221; entre o c√≥digo JavaScript e Objective-C √© feita est√° fora do escopo desse post, mas caso tenha curiosidade de saber onde vai parar o c√≥digo que escrevemos, basta acessar a url &lt;a href=&#34;http://localhost:8081/index.ios.bundle?platform=ios&amp; dev=true&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://localhost:8081/index.ios.bundle?platform=ios&amp;amp;&#34;&gt;http://localhost:8081/index.ios.bundle?platform=ios&amp;amp;&lt;/a&gt; dev=true&lt;/a&gt; enquanto a aplica√ß√£o estiver no ar. Voc√™ ir√° perceber nosso c√≥digo em meio √† um monte de outros gerados pelo framework.&lt;/p&gt;

&lt;h2 id=&#34;explorando-as-apis-e-componentes-nativos&#34;&gt;Explorando as APIs e componentes nativos&lt;/h2&gt;

&lt;p&gt;Uma das coisas mais legais &amp;#8211; e vantajosas &amp;#8211; de se trabalhar com o React Native √© a possibilidade de utilizar os componentes e APIs nativos da plataforma. Indiscutivelmente, √© um recurso que oferece uma experi√™ncia mais atrativa para o usu√°rio e que torna dispens√°vel a utiliza√ß√£o de servi√ßos de terceiros como o &lt;a href=&#34;https://cordova.apache.org/&#34; target=&#34;_blank&#34;&gt;Apache Cordova&lt;/a&gt;, por exemplo. O React Native tamb√©m trabalha em uma thread separada da thread principal, o que faz com que sua aplica√ß√£o mantenha a alta performance sem sacrificar a capacidade do seu smartphone (o que √© incr√≠vel!).&lt;/p&gt;

&lt;p&gt;Para come√ßar a ilustrar esses pontos, vamos modificar o nosso c√≥digo para exibir um alerta nativo do iOS quando um bot√£o for clicado.&lt;/p&gt;

&lt;h3 id=&#34;capturando-eventos-e-fornecendo-feedback-visual&#34;&gt;Capturando eventos e fornecendo feedback visual&lt;/h3&gt;

&lt;p&gt;Assim como todos os demais componentes, o React Native criou um espec√≠fico para recuperar o evento de &lt;strong&gt;touch&lt;/strong&gt; (ou tap) na tela do device. Seu nome √© &lt;code&gt;&amp;lt;TouchableHighlight&amp;gt;&lt;/code&gt;, que nada mais √© do que um wrapper invis√≠vel respons√°vel por fazer algum outro componente responder ao toque do usu√°rio e, em seguida, conect√°-lo a algum evento/m√©todo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&amp;lt;TouchableHighlight onPress={this.someFunction}&amp;gt;
   // aplica√ß√£o de estilo no componente
   &amp;lt;View style={styles.button}&amp;gt;
      &amp;lt;Text&amp;gt;An Alert Message&amp;lt;/Text&amp;gt;
   &amp;lt;/View&amp;gt;
&amp;lt;/TouchableHighlight&amp;gt;
&lt;/pre&gt;

&lt;p&gt;No c√≥digo acima temos um exemplo de como podemos fazer uso desse componente. Perceba que dentro dele temos uma outra &lt;code&gt;&amp;lt;View&amp;gt;&lt;/code&gt; que abriga um componente &lt;code&gt;&amp;lt;Text&amp;gt;&lt;/code&gt; com um texto indicativo. O &lt;code&gt;&amp;lt;TouchableHighlight&amp;gt;&lt;/code&gt; recebe uma fun√ß√£o de nome &lt;code&gt;someFunction&lt;/code&gt; quando o evento &lt;strong&gt;onPress&lt;/strong&gt; for acionado. Outra coisa bacana do componente √© que o mesmo fornece feedback visual do momento em que o usu√°rio pressiona e solta o bot√£o. Por default, o React Native aplica um efeito de &lt;strong&gt;overlay&lt;/strong&gt; ao componente sem que precisemos fazer nada. Awesome!&lt;/p&gt;

&lt;p&gt;O &lt;code&gt;&amp;lt;TouchableHighlight&amp;gt;&lt;/code&gt; tamb√©m responde √† outros eventos, como &lt;code&gt;onPressIn&lt;/code&gt;, &lt;code&gt;onPressOut&lt;/code&gt; e &lt;code&gt;onLongPress&lt;/code&gt;, para atender √†s demais necessidades de intera√ß√£o com o usu√°rio.&lt;/p&gt;

&lt;p&gt;Vamos agora mexer no nosso c√≥digo e substituir a fun√ß√£o &lt;code&gt;someFunction&lt;/code&gt; do evento &lt;code&gt;onPress&lt;/code&gt; do nosso bot√£o por um &lt;strong&gt;alert dialog&lt;/strong&gt; nativo da plataforma. O c√≥digo do alerta √© muito simples, conforme abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;AlertIOS.alert(
  &#39;Simple Title&#39;,
  &#39;Hi, I am a native iOS alert component in action.&#39;
)
&lt;/pre&gt;

&lt;p&gt;Nosso alerta √© simples e recebe apenas dois par√¢metros: O t√≠tulo e a descri√ß√£o que ser√£o exibidos para o usu√°rio. Vamos juntar tudo e ver como fica o nosso c√≥digo final (&lt;code&gt;git checkout step3&lt;/code&gt;):&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
   AppRegistry,
   StyleSheet,
   Text,
   View,
   // declaramos o TouchableHighlight.
   TouchableHighlight,     
   // declaramos o AlertIOS.
   AlertIOS,           
} = React;

var Tableless = React.createClass({

 render: function() {
   return (
      &amp;lt;View style={styles.container} &amp;gt;
        &amp;lt;Text style={styles.myText}&amp;gt;
          Hello, Tableless!
        &amp;lt;/Text&amp;gt;
        // inserimos o c√≥digo do alerta no lugar da fun√ß√£o
        &amp;lt;TouchableHighlight onPress={() =&amp;gt; AlertIOS.alert(    
             &#39;Simple Title&#39;,
             &#39;Hi, I am a native iOS alert component in action.&#39;
           )}&amp;gt;
           &amp;lt;View style={styles.button}&amp;gt;
               // exemplo de estilo inline.
               &amp;lt;Text style={{color: &#39;#fff&#39;}}&amp;gt;An Alert Message&amp;lt;/Text&amp;gt; 
           &amp;lt;/View&amp;gt;
        &amp;lt;/TouchableHighlight&amp;gt;
      &amp;lt;/View&amp;gt;
    );
 }
});

var styles = StyleSheet.create({

container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
},
myText: {
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
   borderRadius: 4,
   textAlign: &#39;center&#39;,
   padding: 10,
   marginBottom: 10,
   color: &#39;green&#39;,
},
// estilo do bot√£o.
button: {                
   backgroundColor: &#39;lightblue&#39;,
   padding: 20,
   borderRadius: 5,
},

})

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Pressione &lt;strong&gt;CMD + R&lt;/strong&gt; no teclado e veja o resultado do que criamos no seu emulador com poucas linhas de c√≥digo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-alert-ios.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52771&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-alert-ios.gif&#34; alt=&#34;react native alert ios&#34; width=&#34;640&#34; height=&#34;480&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;props-state&#34;&gt;Props &amp;amp; State&lt;/h3&gt;

&lt;p&gt;Tudo o que fizemos at√© o momento foi √≥timo, mas n√£o √© o suficiente para manter uma aplica√ß√£o em funcionamento. E se eu quisesse alterar o valor do texto que aparece na tela de forma din√¢mica, com base em um input do usu√°rio? Podemos fazer isso facilmente utilizando o conceito de &lt;strong&gt;state&lt;/strong&gt;, que nada mais √© do que &lt;strong&gt;gerenciar um componente e aplicar altera√ß√µes em seu valor durante seu ciclo de vida&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Para que isso seja poss√≠vel, precisaremos de tr√™s coisas novas em nosso c√≥digo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Um m√©todo que defina o &lt;strong&gt;estado inicial&lt;/strong&gt; do meu componente;&lt;/li&gt;
&lt;li&gt;Um componente nativo que receba &lt;strong&gt;inputs do usu√°rio&lt;/strong&gt; na tela;&lt;/li&gt;
&lt;li&gt;Um m√©todo respons√°vel por &lt;strong&gt;modificar o valor&lt;/strong&gt; desse meu componente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Primeiramente, vamos criar o estado inicial do meu componente:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;getInitialState : function() {
   // Inicializamos nosso componente com uma String de texto.
   return { myText : &#34;Hello, Tableless!&#34; };
},    
&lt;/pre&gt;

&lt;p&gt;Em seguida, um componente para receber inputs do usu√°rio:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&amp;lt;TextInput
         placeholder=&#34;Type something...&#34;
         onChange={this.textInputDidChange} /&amp;gt;
// Input com um placeholder + m√©todo.
&lt;/pre&gt;

&lt;p&gt;E, por fim, a fun√ß√£o com o m√©todo respons√°vel por atualizar o estado da minha View sempre que o valor do meu componente for modificado:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;textInputDidChange : function (event) {      
   this.setState({ myText: event.nativeEvent.text });
},   
&lt;/pre&gt;

&lt;p&gt;Vamos ver como tudo isso fica no nosso c√≥digo (&lt;code&gt;git checkout step4&lt;/code&gt;).&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
   AppRegistry,
   StyleSheet,
   Text,
   View,
   TouchableHighlight,
   AlertIOS,
   // declaramos o TextInput.
   TextInput,        
} = React;

var Tableless = React.createClass({

getInitialState : function() {
   return { myText : &#34;Hello, Tableless!&#34; };
},    

textInputDidChange : function (event) {      
   this.setState({ myText: event.nativeEvent.text });
},

 render: function() {
  return (
    &amp;lt;View style={styles.container} &amp;gt;
      // Repare os estilos inline (opcional).
      &amp;lt;TextInput style = {{ height: 50, padding: 6, fontSize: 16, borderColor: &#34;lightblue&#34;, borderWidth: 1,     margin: 10, borderRadius: 4 }}
               placeholder=&#34;Type something...&#34;
               onChange={this.textInputDidChange} /&amp;gt;   
         &amp;lt;Text style={styles.myText}&amp;gt;
            // Ao inv√©s do texto est√°tico, fazemos refer√™ncia √† vari√°vel myText.
            {this.state.myText}   
         &amp;lt;/Text&amp;gt;
         &amp;lt;TouchableHighlight onPress={() =&amp;gt; AlertIOS.alert(
                 &#39;Simple Title&#39;,
                 &#39;Hi, I am a native iOS alert component in action.&#39;
              )}&amp;gt;
           &amp;lt;View style={styles.button}&amp;gt;
                &amp;lt;Text style={{color: &#39;#fff&#39;}}&amp;gt;An Alert Message&amp;lt;/Text&amp;gt;
           &amp;lt;/View&amp;gt;
         &amp;lt;/TouchableHighlight&amp;gt;
    &amp;lt;/View&amp;gt;
  );
 }
});

var styles = StyleSheet.create({

 container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
 },
 myText: {
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
   borderRadius: 4,
   textAlign: &#39;center&#39;,
   padding: 10,
   marginBottom: 10,
   color: &#39;green&#39;,
 },
 button: {
   backgroundColor: &#39;lightblue&#39;,
   padding: 20,
   borderRadius: 5,
 },

})

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; Tableless);
&lt;/pre&gt;

&lt;p&gt;Agora nosso label reflete o valor que digitamos em nosso input, veja:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-text-input-ios.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52776&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-text-input-ios.gif&#34; alt=&#34;react native text input ios&#34; width=&#34;640&#34; height=&#34;480&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Caso queira simular o teclado do device, basta ir na barra de ferramentas do emulador e procurar a op√ß√£o &lt;strong&gt;Hardware -&amp;gt; Keyboard -&amp;gt; Toggle Software Keyboard&lt;/strong&gt;. Ao habilitar essa op√ß√£o, o teclado nativo do device ser√° exibido sempre que um input for solicitado.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Se voc√™ tem o costume de utilizar aplicativos no iPhone j√° deve ter reparado que o comportamento de transi√ß√£o de telas √© ligeiramente diferente daquilo que observamos na web. Ao inv√©s de exibir uma outra p√°gina qualquer como resultado de alguma a√ß√£o (como clique em um link ou uma busca) no iOS n√≥s trabalhamos com um componente chamado &lt;strong&gt;UINavigationController&lt;/strong&gt; que gerencia essa transi√ß√£o de forma hier√°rquica. Obviamente j√° temos √† nossa disposi√ß√£o um componente para lidar com isso, chamado &lt;strong&gt;NavigatorIOS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Dito isso, a primeira coisa que precisamos fazer √© mudar o componente &lt;strong&gt;root&lt;/strong&gt; da nossa aplica√ß√£o que, ao inv√©s de apontar para &lt;strong&gt;Tableless&lt;/strong&gt;, agora ir√° apontar para a classe &lt;strong&gt;MainNav&lt;/strong&gt;, conforme abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; MainNav);&lt;/pre&gt;

&lt;p&gt;Agora vamos criar a classe &lt;strong&gt;MainNav&lt;/strong&gt; que ir√° funcionar como um container que far√° refer√™ncia √† tela &lt;strong&gt;Tableless&lt;/strong&gt; que est√°vamos trabalhando anteriormente, dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var MainNav = React.createClass({
  render: function() {
    return (
      // Inclu√≠mos o NavigatorIOS em MainNav e fazemos ele apontar para Tableless.
      &amp;lt;NavigatorIOS
        initialRoute={{ component: Tableless, title: &#39;MyFirstProject&#39; }} 
        style={{ flex: 1 }} /&amp;gt;
    );    
  }
});
&lt;/pre&gt;

&lt;p&gt;Perfeito. Agora vamos criar uma outra tela que ser√° respons√°vel por exibir o texto que iremos digitar em nossa View principal. Irei chamar essa tela de &lt;strong&gt;NextScreen&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var NextScreen = React.createClass({
  render: function() {
    return (
      &amp;lt;View&amp;gt;
        &amp;lt;Text&amp;gt;
          You entered: {this.props.inputText}
        &amp;lt;/Text&amp;gt;
      &amp;lt;/View&amp;gt;
    );
  }
});
&lt;/pre&gt;

&lt;p&gt;Perceba a instru√ß√£o &lt;code&gt;{this.props.inputText}&lt;/code&gt; dentro do componente &lt;code&gt;&amp;lt;Text&amp;gt;&lt;/code&gt;. Ele ser√° o respons√°vel por apresentar o valor digitado no nosso input. Mas para que isso ocorra, precisamos de um novo evento¬†em nosso &lt;code&gt;&amp;lt;TextInput&amp;gt;&lt;/code&gt; que guarde esse valor e o conduza at√© a pr√≥xima tela que acabamos de criar. J√° que n√£o temos um bot√£o pra disparar esse m√©todo, que tal cham√°-lo logo ap√≥s pressionar o &lt;strong&gt;Return&lt;/strong&gt; do teclado? Existe um evento chamado &lt;code&gt;onEndEditing&lt;/code&gt; que faz justamente isso:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&amp;lt;TextInput placeholder=&#34;Type something...&#34;
              onChange={this.textInputDidChange}
              // inclu√≠mos o novo evento aqui.
              onEndEditing={ event =&amp;gt; this.callNextScreen(event.nativeEvent.text) } /&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Referenciamos a fun√ß√£o de nome¬†&lt;strong&gt;callNextScreen&lt;/strong&gt; que recupera o texto¬†que digitamos atrav√©s do evento de nome¬†&lt;code&gt;event.nativeEvent.text&lt;/code&gt;. Vamos criar essa fun√ß√£o:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;// a fun√ß√£o recebe o texto digitado como par√¢metro
callNextScreen: function (inputText) {
  // chamamos a transi√ß√£o &lt;strong&gt;push&lt;/strong&gt; nativa do iOS.
  this.props.navigator.push({
     title: &#34;The Next Screen&#34;,
     component: NextScreen,
     // enviamos o par√¢metro para a tela &lt;strong&gt;NextScreen&lt;/strong&gt;
     passProps: { &#39;inputText&#39;: inputText }
  });
}
&lt;/pre&gt;

&lt;p&gt;Perceba que n√≥s chamamos a fun√ß√£o &lt;code&gt;push&lt;/code&gt; do &lt;code&gt;navigator&lt;/code&gt; que faz parte do atributo props da nossa tela &lt;strong&gt;NextScreen&lt;/strong&gt;. Uma outra novidade √© o par√¢metro &lt;code&gt;passProps&lt;/code&gt; que recebe um objeto com chave e valor de nome &lt;code&gt;inputText&lt;/code&gt;, respons√°vel por guardar o texto que digitamos e conduzi-lo √† pr√≥xima tela. Vamos ver como ficou o c√≥digo final (&lt;code&gt;git checkout step5&lt;/code&gt;):&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  TouchableHighlight,
  AlertIOS,
  TextInput,
  // novo componente NavigatorIOS
  NavigatorIOS, 
} = React;

var Tableless = React.createClass({

getInitialState : function() {
  return {
    myText : &#34;Hello, Tableless!&#34;
  };
},

callNextScreen: function (inputText) {
  this.props.navigator.push({
    title: &#34;The Next Screen&#34;,
    component: NextScreen,
    passProps: { &#39;inputText&#39;: inputText }
});
},

textInputDidChange : function (event) {
  this.setState({ myText: event.nativeEvent.text });
},

render: function() {
  return (
   &amp;lt;View style={styles.container} &amp;gt;
    &amp;lt;TextInput style = {{ height: 50, padding: 6, fontSize: 16, borderColor: &#34;lightblue&#34;, borderWidth: 1, margin:    10, borderRadius: 4 }}
      placeholder=&#34;Type something...&#34;
      onChange={this.textInputDidChange}
      onEndEditing={ event =&amp;gt; this.callNextScreen(event.nativeEvent.text) } /&amp;gt;
    &amp;lt;Text style={styles.myText}&amp;gt;
      {this.state.myText}
    &amp;lt;/Text&amp;gt;
    &amp;lt;TouchableHighlight onPress={() =&amp;gt; AlertIOS.alert(
        &#39;Simple Title&#39;,
        &#39;Hi, I am a native iOS alert component in action.&#39;
      )}&amp;gt;
      &amp;lt;View style={styles.button}&amp;gt;
        &amp;lt;Text style={{color: &#39;#fff&#39;}}&amp;gt;An Alert Message&amp;lt;/Text&amp;gt;
      &amp;lt;/View&amp;gt;
    &amp;lt;/TouchableHighlight&amp;gt;
   &amp;lt;/View&amp;gt;
  );
}

});

var MainNav = React.createClass({
 render: function() {
   return (
     &amp;lt;NavigatorIOS
       initialRoute={{
         component: Tableless,
         title: &#39;MyFirstProject&#39;
       }}
       style={{ flex: 1 }} /&amp;gt;
   );
 }
});

var NextScreen = React.createClass({
 render: function() {
   return (
     &amp;lt;View style = {{ backgroundColor: &#39;green&#39;, flex: 1, justifyContent: &#39;center&#39;, alignItems: &#39;center&#39; }} &amp;gt;
       &amp;lt;Text style = {{ color: &#39;#fff&#39;, fontSize: 22 }} &amp;gt;
         You entered: {this.props.inputText}
       &amp;lt;/Text&amp;gt;
     &amp;lt;/View&amp;gt;
   );
 }
});

var styles = StyleSheet.create({

 container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
 },
 myText: {
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
   borderRadius: 4,
   textAlign: &#39;center&#39;,
   padding: 10,
   marginBottom: 10,
   color: &#39;green&#39;,
 },
 button: {
   backgroundColor: &#39;lightblue&#39;,
   padding: 20,
   borderRadius: 5,
 },

})

AppRegistry.registerComponent(&#39;MyFirstProject&#39;, () =&amp;gt; MainNav);
&lt;/pre&gt;

&lt;p&gt;O¬†resultado:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-navigator-ios.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52778&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-navigator-ios.gif&#34; alt=&#34;react native navigator ios&#34; width=&#34;640&#34; height=&#34;480&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fa√ßa um teste no seu device e observe o qu√£o suave s√£o as anima√ß√µes. Uma vez na tela seguinte, voc√™ pode retornar para a anterior com um simples gesto de deslizar os dedos da esquerda para a direita (o famoso &lt;strong&gt;swipe gesture&lt;/strong&gt;). Voc√™ consegue at√© mesmo simular uma transi√ß√£o similar em html com &lt;code&gt;overflow&lt;/code&gt;, mas n√£o ser√° a mesma coisa. Esse √© o verdadeiro ganho de trabalhar com componentes 100% nativos: As transi√ß√µes em &lt;strong&gt;60fps&lt;/strong&gt; (60 frames por segundo).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-swipe-60fps.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-52793&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/react-native-swipe-60fps.gif&#34; alt=&#34;react native swipe 60fps&#34; width=&#34;640&#34; height=&#34;480&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Por fim, voc√™ foi apresentado aos dois principais conceitos do React: &lt;strong&gt;props&lt;/strong&gt;, utilizado quando queremos compartilhar valores entre componentes e &lt;strong&gt;state&lt;/strong&gt;, quando desejamos monitorar o estado de um componente e suas altera√ß√µes (geralmente ocasionado por algum evento de usu√°rio).&lt;/p&gt;

&lt;h2 id=&#34;modularidade&#34;&gt;Modularidade&lt;/h2&gt;

&lt;p&gt;Voc√™ tem consci√™ncia da bagun√ßa que nosso c√≥digo pode se tornar se prosseguirmos com a escrita de toda a l√≥gica em um mesmo arquivo, n√©? Mas uma das vantagens da plataforma √© justamente a modulariza√ß√£o, uma vez que cada componente pode estar isolado em arquivos diferentes, gerenciando seus pr√≥prios estados de forma individual. Fazemos isso atrav√©s do &lt;strong&gt;module.exports&lt;/strong&gt; do Node, presente na especifica√ß√£o do &lt;strong&gt;CommonJS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Para ilustrar como isso pode ser feito, vamos separar nossa se√ß√£o de estilos no arquivo &lt;em&gt;style.js&lt;/em&gt; e requisitar seu acesso no arquivo _index.ios.js_¬†(&lt;code&gt;git checkout step6&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Conte√∫do de &lt;em&gt;style.js&lt;/em&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var React = require(&#39;react-native&#39;);
var { StyleSheet } = React;

var styles = StyleSheet.create({

 container: {
   flex: 1,
   flexDirection: &#39;column&#39;,
   justifyContent: &#39;center&#39;,
   alignItems: &#39;center&#39;,
 },
 myText: {
   borderWidth: 2,
   borderColor: &#39;ff0000&#39;,
   borderRadius: 4,
   textAlign: &#39;center&#39;,
   padding: 10,
   marginBottom: 10,
   color: &#39;green&#39;,
 },
 button: {
   backgroundColor: &#39;lightblue&#39;,
   padding: 20,
   borderRadius: 5,
 },

});
// viabilizamos a exporta√ß√£o do m√≥dulo.
module.exports = styles;
&lt;/pre&gt;

&lt;p&gt;E no arquivo &lt;em&gt;index.ios.js&lt;/em&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;&#39;use strict&#39;;

var React = require(&#39;react-native&#39;);
var {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  TouchableHighlight,
  AlertIOS,
  TextInput,
  NavigatorIOS,
} = React;

// solicitamos acesso ao conte√∫do de¬†&lt;em&gt;style.js&lt;/em&gt;
var styles = require(&#39;./style&#39;);

var Tableless = React.createClass({ ... })
&lt;/pre&gt;

&lt;p&gt;Seguindo esse conceito, sua aplica√ß√£o fica muito mais leg√≠vel, principalmente se utilizarmos o &lt;strong&gt;Nesting&lt;/strong&gt; de componentes (n√£o abordado nesse tutorial).&lt;/p&gt;

&lt;p&gt;Como exerc√≠cio, tente fazer o mesmo com os demais componentes que criamos.&lt;/p&gt;

&lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt;

&lt;p&gt;Uma das vantagens oferecidas pelo framework √© poder criar aplica√ß√µes agn√≥sticas, que compartilham a mesma base de c√≥digo. Neste caso, voc√™ poderia ter os arquivos &lt;em&gt;index.ios.js&lt;/em&gt; e &lt;em&gt;index.android.js&lt;/em&gt; apontando para uma classe &amp;#8220;root&amp;#8221;, respons√°vel por executar o c√≥digo com base no sistema utilizado pelo usu√°rio: iOS ou Android. Isso √© poss√≠vel se voc√™ fizer uso de componentes que n√£o s√£o espec√≠ficos de cada plataforma, como &lt;code&gt;View&lt;/code&gt;, &lt;code&gt;Image&lt;/code&gt;, &lt;code&gt;ListView&lt;/code&gt;, &lt;code&gt;MapView&lt;/code&gt;, &lt;code&gt;Modal&lt;/code&gt;, &lt;code&gt;TouchableHighlight&lt;/code&gt;, &lt;code&gt;Text&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;Outra possibilidade, em aplica√ß√µes mais complexas, √© de compartilhar a mesma l√≥gica entre ambas as plataformas com a diferen√ßa de utilizar componentes espec√≠ficos para cada uma delas. A vantagem seria proporcionar a melhor experi√™ncia &lt;strong&gt;nativa&lt;/strong&gt; poss√≠vel para o usu√°rio. Como exemplo, temos os componentes &lt;code&gt;DrawerLayoutAndroid&lt;/code&gt;, &lt;code&gt;ProgressBarAndroid&lt;/code&gt;, &lt;code&gt;ToolbarAndroid&lt;/code&gt;, etc.&lt;/p&gt;

&lt;h2 id=&#34;um-futuro-m√≥vel-para-o-javascript&#34;&gt;Um futuro m√≥vel para o JavaScript&lt;/h2&gt;

&lt;p&gt;Hoje em dia o desenvolvedor JavaScript vive um momento fant√°stico, pois al√©m de contar com frameworks como &lt;a href=&#34;http://ionicframework.com/&#34; target=&#34;_blank&#34;&gt;Ionic&lt;/a&gt;, que tem o intuito de explorar o desenvolvimento h√≠brido atrav√©s de tecnologias web, agora temos o React Native √† nossa disposi√ß√£o, com o intuito de conduzir o JavaScript ao ambiente nativo. No entanto, diferente do conhecido termo imortalizado pelo Java &amp;#8220;&lt;em&gt;Write once, run anywhere&lt;/em&gt;&amp;#8220;, o framework defende o &amp;#8220;&lt;em&gt;Learn once, write anywhere&lt;/em&gt;&amp;#8220;, o que significa que cada plataforma tem seu pr√≥prio visual, estrutura e recursos √∫nicos. E que voc√™, como engenheiro de software, deve ser capaz de construir aplica√ß√µes para qualquer que seja a plataforma &amp;#8211; sem necessariamente aprender uma gama de novas tecnologias &amp;#8211; mas sempre respeitando o ecossistema nativo de cada uma delas. Isso √© fant√°stico!&lt;/p&gt;

&lt;p&gt;Outro ponto que vale ressaltar √© a otimiza√ß√£o que o framework oferece ao dia a dia de uma equipe, uma vez que ele tem o potencial de acelerar todo o processo &amp;#8211; n√£o s√≥ de desenvolvimento, mas tamb√©m de lan√ßamento de um aplicativo. Como exemplo, a Apple possibilita que altera√ß√µes sejam executadas no &amp;#8220;ar&amp;#8221; em aplicativos baseados no tal JavaScriptCore &lt;strong&gt;sem precisar aguardar pelo exaustivo processo de review deles&lt;/strong&gt;. Ou seja, mais produtividade e mais clientes felizes!&lt;/p&gt;

&lt;p&gt;Embora o React Native seja um framework fant√°stico no que se prop√µe a oferecer, ele n√£o √© o √∫nico. Existem outras ferramentas que permitem o desenvolvimento de aplicativos nativos utilizando JavaScript, como √© o caso do j√° conhecido &lt;a href=&#34;http://www.appcelerator.com/mobile-app-development-products/&#34; target=&#34;_blank&#34;&gt;Titanium&lt;/a&gt; e, do mais recente, &lt;a href=&#34;https://www.nativescript.org/&#34; target=&#34;_blank&#34;&gt;NativeScript&lt;/a&gt;. Mas a grande sacada do React Native √© o &lt;strong&gt;React&lt;/strong&gt; em si. Sua natureza declarativa, a metodologia de reutiliza√ß√£o de componentes e o foco prim√°rio na interface do usu√°rio proporcionam uma experi√™ncia, at√© o momento, in√©dita para o desenvolvedor web que deseja migrar para o mundo do desenvolvimento m√≥vel.&lt;/p&gt;

&lt;p&gt;Em resumo, o React Native merece sua aten√ß√£o porque&amp;#8230;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;N√£o remove voc√™ do ecossistema da web:¬†&lt;/strong&gt;As mesmas ferramentas que usamos para o desenvolvimento web s√£o basicamente as mesmas que utilizaremos para desenvolvimento mobile. Ao inv√©s de depender exclusivamente do Xcode ou Android Studio, um &lt;a href=&#34;http://www.sublimetext.com/&#34; target=&#34;_blank&#34;&gt;SublimeText&lt;/a&gt;, &lt;a href=&#34;https://atom.io/&#34; target=&#34;_blank&#34;&gt;Atom&lt;/a&gt; ou &lt;a href=&#34;http://brackets.io/&#34; target=&#34;_blank&#34;&gt;Brackets&lt;/a&gt; j√° dar√£o conta do recado pra voc√™. Com se isso n√£o bastasse, voc√™ ainda tem a op√ß√£o de fazer debug do c√≥digo via &lt;a href=&#34;https://developers.google.com/web/tools/chrome-devtools/&#34; target=&#34;_blank&#34;&gt;Chrome DevTools&lt;/a&gt;, atrav√©s de uma extens√£o desenvolvida exclusivamente para o React, como se fosse uma aplica√ß√£o web de verdade!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Utiliza Flexbox e CSS:¬†&lt;/strong&gt;O Flexbox permite que voc√™ estruture sua camada visual de maneira muito simples e intuitiva. Esse √© um ponto cr√≠tico em aplica√ß√µes nativas. Tome o AutoLayout do iOS, como exemplo. Lidar com Constraints, Size Classes e outros recursos n√£o s√£o assim t√£o simples. Sem contar que essa fica sendo uma tarefa exclusiva do Desenvolvedor e n√£o do Designer. Em contrapartida, se voc√™ j√° √© um Webdesigner, pode aproveitar seu c√≥digo CSS diretamente na plataforma &amp;#8211; ou solicitar que o Designer gere ele pra voc√™ incluir no seu app. N√£o √© o m√°ximo?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;√â extremamente extens√≠vel:¬†&lt;/strong&gt;Voc√™ pode compartilhar o seu c√≥digo JavaScript com o seu colega de trabalho que desenvolve em Objective-C, Swift ou Java sem maiores problemas. O framework possibilita a integra√ß√£o de m√≥dulos nativos, proporcionando um ambiente colaborativo ainda mais rico e transparente. Ou seja, sempre que houver a necessidade de implementar um m√≥dulo nativo &amp;#8211; ou reaproveitar algum que j√° tenha sido criado pela sua equipe &amp;#8211; basta import√°-lo no seu projeto e ele estar√° dispon√≠vel. Yes!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Utiliza Polyfills para tirar vantagem dos recursos web:¬†&lt;/strong&gt;APIs como &lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;geolocation&lt;/code&gt;, &lt;code&gt;setTimeout&lt;/code&gt; e o pr√≥prio &lt;code&gt;flexbox&lt;/code&gt; n√£o existem em ambiente nativo, mas existem no Browser! Mais uma vez, a transi√ß√£o entre os ambientes web e nativo fica ainda mais simples de ser feita.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simples gerenciamento das depend√™ncias do projeto:&lt;/strong&gt;Programadores JavaScript j√° est√£o acostumados a utilizar o NPM para gerir depend√™ncias e fazer build de suas aplica√ß√µes. Trazer essa ferramenta para dentro do escopo nativo significa menos uma barreira adicional. Em um simples arquivo &lt;em&gt;package.json&lt;/em&gt; voc√™ √© capaz de organizar todas as suas depend√™ncias como se estivesse trabalhando na web, sem a necessidade de aprender ferramentas como &lt;a href=&#34;https://cocoapods.org/&#34; target=&#34;_blank&#34;&gt;Cocoapods&lt;/a&gt; para iOS ou &lt;a href=&#34;http://gradle.org/&#34; target=&#34;_blank&#34;&gt;Gradle&lt;/a&gt; no caso do Android.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;O desenvolvimento mobile est√° mudando com a mesma velocidade da demanda de mercado. Mais e mais ferramentas v√™m sendo desenvolvidas com o intuito de prover uma experi√™ncia mais rica, tanto para o desenvolvedor quanto para o usu√°rio final. Frameworks como React Native surgem como uma prova de conceito de que existem falhas em ambos os ecossistemas e o que resta fazer √© unir o melhor dos dois mundos. O mais importante, no fim das contas, √© a tal da estrat√©gia. Se &lt;a href=&#34;https://en.wikipedia.org/wiki/Time_to_market&#34; target=&#34;_blank&#34;&gt;tempo de mercado&lt;/a&gt; e produtividade fazem parte do seu vocabul√°rio (ou de sua startup), fique de olho nas mudan√ßas. Elas est√£o apenas come√ßando&amp;#8230;&lt;/p&gt;

&lt;p&gt;Enfim&amp;#8230; √© uma √©poca excelente para ser um desenvolvedor JavaScript. üôÇ&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Conhe√ßa mais sobre o React para web &lt;a href=&#34;http://tableless.com.br/react-javascript-reativo/&#34; target=&#34;_blank&#34;&gt;neste post&lt;/a&gt; do Davi Ferreira.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Sass vs. LESS vs. Stylus: Batalha dos Pr√©-processadores</title>
      <link>https://tableless.github.io/hugo-public/sass-vs-less-vs-stylus-batalha-dos-pre-processadores/</link>
      <pubDate>Mon, 28 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/sass-vs-less-vs-stylus-batalha-dos-pre-processadores/</guid>
      <description>

&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;

&lt;p&gt;Pr√©-processadores CSS3 s√£o linguagens criadas com um √∫nico prop√≥sito de adicionar funcionalidades legais e criativas para o CSS sem quebrar a compatibilidade entre browsers. Os pr√©-processadores disponibilizam milhares de funcionalidades, e nesse artigo iremos falar sobre as mais utilizadas e conhecidas e algumas nem tanto conhecidas. Vamos come√ßar:&lt;/p&gt;

&lt;h2 id=&#34;sintaxe&#34;&gt;Sintaxe&lt;/h2&gt;

&lt;p&gt;A parte mais importante ao escrever c√≥digos utilizando um pr√©-processador √© entender a sua sintaxe. Felizmente para n√≥s, a sintaxe √© (ou pode ser) id√™ntica √† do CSS puro para os tr√™s pr√©-processadores.&lt;/p&gt;

&lt;h3 id=&#34;sass-e-less&#34;&gt;Sass e LESS&lt;/h3&gt;

&lt;p&gt;Ambos utilizam o a sintaxe padr√£o do CSS. Isso faz com que seja extremamente f√°cil converter um arquivo CSS j√° existente para qualquer um deles. Sass utiliza arquivos com extens√£o .scss e LESS com extens√£o .less. Uma configura√ß√£o b√°sica de um arquivo Sass ou LESS pode ser como abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* style.scss ou style.less */
h1 {
    color: #0982c1;
}
&lt;/pre&gt;

&lt;p&gt;Como voc√™ pode ter notado, isso √© apenas CSS puro, que compila perfeitamente em ambos pr√©-processadores (Sass e LESS).&lt;/p&gt;

&lt;p&gt;√â importante notar que Sass tamb√©m tem uma sintaxe mais antiga, que omite ponto e v√≠rgula e as chaves. Ainda pode ser usado, mas como √© uma sintaxe antiga, n√£o iremos utiliz√°-la depois deste exemplo. A sintaxe utiliza arquivos com a extens√£o .sass e s√£o da seguinte maneira:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* style.sass */
h1
    color: #0982c1
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Observa√ß√£o pessoal:&lt;/strong&gt; Essa sintaxe n√£o √© por causa de ser mais antiga e sim pois no in√≠cio o &lt;strong&gt;Sass&lt;/strong&gt; era parte de um outro pr√©-processador chamado &lt;strong&gt;Haml&lt;/strong&gt; criado por desenvolvedores &lt;strong&gt;Ruby&lt;/strong&gt;, e por causa disso as folhas de estilo escritas com &lt;strong&gt;Sass&lt;/strong&gt; utilizavam uma sintaxe como a do &lt;strong&gt;Ruby&lt;/strong&gt;, sem chaves, ponto e v√≠rgula e controlado por identa√ß√£o.&lt;/p&gt;

&lt;h3 id=&#34;stylus&#34;&gt;Stylus&lt;/h3&gt;

&lt;p&gt;A sintaxe para o Stylus √© muito mais adapt√°vel. Utiliza arquivos com extens√£o .styl, aceita a sintaxe padr√£o do CSS, por√©m tamb√©m aceita algumas varia√ß√µes onde chaves, dois-pontos e ponto e v√≠rgula s√£o todos opcionais. Por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* style.styl */
h1 {
    color: #0982c1;
}
/* omitindo chaves */
h1
    color: #0982c1;

/* omitindo dois-pontos e ponto e v√≠rgula
h1
    color: #0982c1
&lt;/pre&gt;

&lt;p&gt;Utilizar diferentes varia√ß√µes em um mesmo arquivo tamb√©m √© v√°lido, ent√£o o seguinte c√≥digo seria compilado sem erros.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;h1 {
    color #0982c1
}
h2
    font-size: 1.2em
&lt;/pre&gt;

&lt;h2 id=&#34;vari√°veis&#34;&gt;Vari√°veis&lt;/h2&gt;

&lt;p&gt;Vari√°veis podem ser declaradas e usadas atrav√©s das folhas de estilo. Elas podem ter qualquer valor que seja um valor em CSS (por exemplo: cores, n√∫meros [unidades tamb√©m], ou texto), e podem ser referenciadas em qualquer lugar das nossas folhas de estilo.&lt;/p&gt;

&lt;h3 id=&#34;sass&#34;&gt;Sass&lt;/h3&gt;

&lt;p&gt;Vari√°veis em Sass tem seu nome come√ßado o s√≠mbolo &amp;#8220;$&amp;#8221; e o nome e o seu valor s√£o separados com dois-pontos, assim como uma propriedade CSS.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;$mainColor: #0982c1;
$siteWidth: 1024px;
$borderStyle: dotted;

body {
    color: $mainColor;
    border: 1px $borderStyle $mainColor;
    max-width: $siteWidth;
}
&lt;/pre&gt;

&lt;h3 id=&#34;less&#34;&gt;LESS&lt;/h3&gt;

&lt;p&gt;Var√≠aves em LESS s√£o praticamente iguais as vari√°veis no Sass, exceto por come√ßarem seus nomes com o s√≠mbolo &amp;#8220;@&amp;#8221;.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@mainColor: #0982c1;
@siteWidth: 1024px;
@borderStyle: dotted;

body {
    color: @mainColor;
    border: 1px @borderStyle @mainColor;
    max-width: @siteWidth;
}
&lt;/pre&gt;

&lt;h3 id=&#34;stylus-1&#34;&gt;Stylus&lt;/h3&gt;

&lt;p&gt;Vari√°veis em Stylus n√£o precisam come√ßar com nenhum s√≠mbolo, por√©m ele permite a utiliza√ß√£o do s√≠mbolo &amp;#8220;$&amp;#8221;. Como sempre, o ponto e v√≠rgula para finalizar n√£o √© necess√°rio, mas um sinal de igual entre o nome da vari√°vel e seu valor √©. Uma coisa importante para se notar √© que na vers√£o 0.22.4 do Stylus vari√°veis com nome come√ßados com o s√≠mbolo &amp;#8220;@&amp;#8221; s√£o compiladas, por√©m n√£o aplicam seu valor quando referenciadas. Em oturas palavras, n√£o fa√ßa isso.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;mainColor = #0982c1;
siteWidth = 1024px;
$borderStyle = dotted;

body
    color mainColor
    border 1px $borderStyle mainColor
    max-width siteWidth
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado&#34;&gt;CSS Compilado&lt;/h3&gt;

&lt;p&gt;Cada um dos arquivos acima ir√£o compilar no mesmo CSS. Voc√™ pode usar sua imagina√ß√£o para ver qu√£o √∫teis vari√°veis podem ser. N√£o precisaremos mais ao mudar uma cor reescrever a mesma vinte vezes, ou querer mudar a largura de nosso site e ter de procurar por todo o site para fazer isso. Aqui est√° o CSS depois de compilado:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;body {
    color: #0982c1;
    border: 1px dotted #0982c1;
    max-width: 1024px.
}
&lt;/pre&gt;

&lt;h2 id=&#34;aninhamento&#34;&gt;Aninhamento&lt;/h2&gt;

&lt;p&gt;Se precisarmos referenciar m√∫ltiplos elementos com o mesmo pai em nosso CSS, pode ser entediante ficar digitanto o pai toda vez.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;section {
    margin: 10px;
}
section nav {
    height: 25px;
}
section nav a {
    color: #0982c1;
}
section nav a:hover {
    text-decoration: underline;
}
&lt;/pre&gt;

&lt;p&gt;Ao inv√©s disso, usando um pr√©-processador, podemos escrever os seletores filhos dentro das chaves do elemento pai. O s√≠mbolo &amp;#8220;&amp;amp;&amp;#8221; √© usado para referenciar o seletor pai.&lt;/p&gt;

&lt;h3 id=&#34;sass-less-e-stylus&#34;&gt;Sass, LESS e Stylus&lt;/h3&gt;

&lt;p&gt;Todos os tr√™s pr√©-processdores utilizam a mesma sintaxe para aninhar seletores.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;section {
    margin: 10px;

    nav {
        height: 25px;

        a {
            color: #0982c1;

            &amp;:hover {
                text-decoration: underline;
            }
        }
    }
}
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado-1&#34;&gt;CSS Compilado&lt;/h3&gt;

&lt;p&gt;Abaixo est√° o CSS compilado do c√≥digo escrito acima. Est√° exatamente igual ao mostrado no come√ßo &amp;#8211; que conveniente!&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;section {
    margin: 10px;
}
section nav {
    height: 25px;
}
section nav a {
    color: #0982c1;
}
section nav a:hover {
    text-decoration: underline;
}
&lt;/pre&gt;

&lt;h2 id=&#34;mixins&#34;&gt;Mixins&lt;/h2&gt;

&lt;p&gt;Mixins s√£o fun√ß√µes que permitem reusar propriedades atrav√©s de nossas folhas de estilo. Ao inv√©s de procurar por todas nossas folhas de estilo e mudar uma propriedade v√°rias vezes, podemos apenas mudar dentro de nosso mixin. Isso pode ser realmente √∫til para estiliza√ß√£o de elementos espec√≠ficos e para &amp;#8220;vendor prefixes&amp;#8221; (moz-*, o-*, etc). Quando os mixins s√£o chamados de dentro de um seletor CSS, os argumentos s√£o reconhecidos e os estilos dentro do mixin s√£o aplicados ao seletor.&lt;/p&gt;

&lt;h3 id=&#34;sass-1&#34;&gt;Sass&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* Mixin em Sass chamado error com argumento $borderWidth opcional, caso n√£o seja fornecido, utiliza o valor padr√£o de 2px; */
@mixin error($borderWidth: 2px) {
    border: $borderWidth solid #f00;
    color: #f00;
}

.generic-error {
    padding: 20px;
    margin: 4px;
    @include error(); /* Aplica estilos do mixin error */
}
.login-error {
    left: 12px;
    position: absolute;
    top: 20px;
    @include error(5px); /* Aplica estilos do mixin error com argumento $borderWidth = 5px */
}
&lt;/pre&gt;

&lt;h3 id=&#34;less-1&#34;&gt;LESS&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* Mixin em LESS chamado error com argumento $borderWidth opcional, caso n√£o seja fornecido, utiliza o valor padr√£o de 2px; */
.error(@borderWidth: 2px) {
    border: @borderWidth solid #f00;
    color: #f00;
}

.generic-error {
    padding: 20px;
    margin: 4px;
    .error(); /* Aplica estilos do mixin error */
}
.login-error {
    left: 12px;
    position: absolute;
    top: 20px;
    .error(5px); /* Aplica estilos do mixin error com argumento $borderWidth = 5px */
}
&lt;/pre&gt;

&lt;h3 id=&#34;stylus-2&#34;&gt;Stylus&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* Mixin em Stylus chamado error com argumento $borderWidth opcional, caso n√£o seja fornecido, utiliza o valor padr√£o de 2px; */
error(borderWidth = 2px) {
    border: borderWidth solid #f00;
    color: #f00;
}

.generic-error {
    padding: 20px;
    margin: 4px;
    error(); /* Aplica estilos do mixin error */
}
.login-error {
    left: 12px;
    position: absolute;
    top: 20px;
    error(5px); /* Aplica estilos do mixin error com argumento $borderWidth = 5px */
}
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado-2&#34;&gt;CSS Compilado&lt;/h3&gt;

&lt;p&gt;Todos pr√©-processadores ir√£o compilar o mesmo c√≥digo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.generic-error {
    padding: 20px;
    margin: 4px;
    border: 2px solid #f00;
    color: #f00;
}
.login-error {
    left: 12px;
    position: absolute;
    top: 20px;
    border: 5px solid #f00;
    color: #f00;
}
&lt;/pre&gt;

&lt;h2 id=&#34;heran√ßa&#34;&gt;Heran√ßa&lt;/h2&gt;

&lt;p&gt;Quando estamos escrevendo CSS da velha maneira, n√≥s usar√≠amos o seguinte c√≥digo para aplicar o mesmo estilo para m√∫ltiplos elementos de uma s√≥ vez:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p,
u,
ol {
    /* estilos aqui */
}
&lt;/pre&gt;

&lt;p&gt;Isso funciona perfeitamente, mas se depois precis√°ssemos de estilizar os elementos individualmente, outro seletor deveria ser criado para cada um e rapidamente poderia ficar cada vez mais bagun√ßado e dif√≠cil de manter. Podemos utilizar heran√ßa para resolver isso. Heran√ßa √© a habilidade de outros seletores CSS herdarem as propriedades de outro seletor.&lt;/p&gt;

&lt;h3 id=&#34;sass-e-stylus&#34;&gt;Sass e Stylus&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.block {
    margin: 10px 5px;
    padding: 2px;
}

p {
    @extend .block; /* Herda estilos do seletor &#39;.block&#39; */
    border: 1px solid #eee;
}
ul, ol {
    @extend .block; /* Herda estilos do seletor &#39;.block&#39; */
    color: #333;
    text-transform: uppercase;
}
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado-sass-e-stylus&#34;&gt;CSS Compilado (Sass e Stylus)&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.block, p, ul, ol {
    margin: 10px 5px;
    padding: 2px;
}
p {
    border: 1px solid #eee;
}
ul, ol {
    color: #333;
    text-transform: uppercase;
}
&lt;/pre&gt;

&lt;h3 id=&#34;less-2&#34;&gt;LESS&lt;/h3&gt;

&lt;p&gt;LESS n√£o tem suporte a heran√ßa de estilos como Sass e Stylus. Ao inv√©s de adicionar diversos seletores para um grupo de propriedades, ele trata heran√ßa como um mixin sem argumentos e importa os estilos para dentro de seus pr√≥prios seletores. O problema disso √© que propriedades s√£o repetidas em sua folha de estilo compilada. Abaixo segue como deve-se utilizar:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.block {
    margin: 10px 5px;
    padding: 2px;
}
 
p {
    .block; /* Herda estilos do seletor &#39;.block&#39; */
    border: 1px solid #eee;
}
ul, ol {
    .block; /* Herda estilos do seletor &#39;.block&#39; */
    color: #333;
    text-transform: uppercase;
}
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Observa√ß√£o pessoal:&lt;/strong&gt; Como mencionado nos coment√°rios, o LESS tem suporte a heran√ßa e pode ser feita com a seguinte sintaxe:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p {
        &amp;:extend(.block);
}
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado-less&#34;&gt;CSS Compilado (LESS)&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.block {
    margin: 10px 5px;
    padding: 2px;
}
p {
    margin: 10px 5px;
    padding: 2px;
    border: 1px solid #eee;
}
ul,
ol {
    margin: 10px 5px;
    padding: 2px;
    color: #333;
    text-transform: uppercase;
}
&lt;/pre&gt;

&lt;p&gt;Como voc√™ pode ver, os estilos do seletor .block foram inseridas nos seletores que quer√≠amos aplicar a heran√ßa. √â importante notar que a prioridade das propriedades pode se tornar um problema, ent√£o devemos ter bastante cautela.&lt;/p&gt;

&lt;h2 id=&#34;importa√ß√£o&#34;&gt;Importa√ß√£o&lt;/h2&gt;

&lt;p&gt;Na comunidade CSs, importar CSS √© visto com maus olhos por utilizar diversas chamadas HTTP. Importar com um pr√©-processador funciona de forma diferente no entanto. Se voc√™ importar um arquivo com qualquer um dos tr√™s pr√©-processadores, ele ir√° literalmente pegar todo o conte√∫do do arquivo durante a importa√ß√£o e gerar apenas um arquivo. Lembre-se que arquivos .css comuns importados compilam com o c√≥digo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@import &#34;file.css&#34;;
&lt;/pre&gt;

&lt;p&gt;Lembre-se tamb√©m que mixins e vari√°veis podem ser importadas e usadas em sua folha de estilo principal. Importa√ß√£o faz com que possamos criar arquivos separados para uma melhor organiza√ß√£o.&lt;/p&gt;

&lt;h3 id=&#34;sass-less-e-stylus-1&#34;&gt;Sass, LESS e Stylus&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* arquivo.{extensao} */
body {
    background: #eee;
}
&lt;/pre&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@import &#34;reset.css&#34;;
@import &#34;arquivo.{extensao}&#34;;
 
p {
    background: #0982c1;
}
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado-3&#34;&gt;CSS Compilado&lt;/h3&gt;

&lt;h2 id=&#34;introdu√ß√£o-1&#34;&gt;Introdu√ß√£o&lt;/h2&gt;

&lt;p&gt;-&amp;gt;Pr√©-processadores produzem CSS que funciona em todos os browsers&lt;/p&gt;

&lt;p&gt;Pr√©-processadores CSS3 s√£o linguagens criadas com um √∫nico prop√≥sito de adicionar funcionalidades legais e criativas para o CSS sem quebrar a compatibilidade entre browsers. Eles fazem isso compilando o c√≥digo que escrevemos em CSS puro que pode ser usado em qualquer browser de agora at√© a era das pedras. Os pr√©-processadores disponibilizam milhares de funcionalidades, e nesse artigo iremos falar sobre as mais utilizadas e conhecidas e algumas nem tanto conhecidas. Vamos come√ßar&lt;/p&gt;

&lt;h2 id=&#34;sintaxe-1&#34;&gt;Sintaxe&lt;/h2&gt;

&lt;p&gt;A parte mais importante ao escrever c√≥digos utilizando um pr√©-processador CSS √© entender a sua sintaxe. Felizmente para n√≥s, a sintaxe √© (ou pode ser) id√™ntica √† do CSS puro para os tr√™s pr√©-processadores.&lt;/p&gt;

&lt;h3 id=&#34;sass-e-less-1&#34;&gt;Sass e LESS&lt;/h3&gt;

&lt;p&gt;Ambos utilizam o a sintaxe padr√£o do CSS. Isso faz com que seja extremamente f√°cil converter um arquivo CSS j√° existente para qualquer um deles. Sass utiliza arquivos com extens√£o .scss e LESS com extens√£o .less. Uma configura√ß√£o b√°sica de um arquivo Sass ou LESS pode ser como abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* style.scss ou style.less */
h1 {
    color: #0982c1;
}
&lt;/pre&gt;

&lt;p&gt;Como voc√™ pode ter notado, isso √© apenas CSS puro, que compila perfeitamente em ambos pr√©-processadores (Sass e LESS).&lt;/p&gt;

&lt;p&gt;√â importante notar que Sass tamb√©m tem uma sintaxe mais antiga, que omite ponto e v√≠rgula e as chaves. Ainda pode ser usado, mas como √© uma sintaxe antiga, n√£o iremos utiliz√°-la depois deste exemplo. A sintaxe utiliza arquivos com a extens√£o .sass e s√£o da seguinte maneira:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* style.sass */
h1 {
    color: #0982c1;
}
&lt;/pre&gt;

&lt;h3 id=&#34;stylus-3&#34;&gt;Stylus&lt;/h3&gt;

&lt;p&gt;A sintaxe para o Stylus √© muito mais adapt√°vel. Utiliza arquivos com extens√£o .styl, aceita a sintaxe padr√£o do CSS, por√©m tamb√©m aceita algumas varia√ß√µes onde chaves, dois-pontos e ponto e v√≠rgula s√£o todos opcionais. Por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* style.styl */
h1 {
    color: #0982c1;
}
/* omitindo chaves */
h1
    color: #0982c1;

/* omitindo dois-pontos e ponto e v√≠rgula
h1
    color: #0982c1
&lt;/pre&gt;

&lt;p&gt;Utilizar diferentes varia√ß√µes em um mesmo arquivo tamb√©m √© v√°lido, ent√£o o seguinte c√≥digo seria compilado sem erros.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;h1 {
    color #0982c1
}
h2
    font-size: 1.2em
&lt;/pre&gt;

&lt;h2 id=&#34;vari√°veis-1&#34;&gt;Vari√°veis&lt;/h2&gt;

&lt;p&gt;Vari√°veis podem ser declaradas e usadas atrav√©s das folhas de estilo. Elas podem ter qualquer valor que seja um valor em CSS (por exemplo: cores, n√∫meros [unidades tamb√©m], ou texto), e podem ser referenciadas em qualquer lugar das nossas folhas de estilo.&lt;/p&gt;

&lt;h3 id=&#34;sass-2&#34;&gt;Sass&lt;/h3&gt;

&lt;p&gt;Vari√°veis em Sass tem seu nome come√ßado o s√≠mbolo &amp;#8220;$&amp;#8221; e o nome e o seu valor s√£o separados com dois-pontos, assim como uma propriedade CSS.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;$mainColor: #0982c1;
$siteWidth: 1024px;
$borderStyle: dotted;

body {
    color: $mainColor;
    border: 1px $borderStyle $mainColor;
    max-width: $siteWidth;
}
&lt;/pre&gt;

&lt;h3 id=&#34;less-3&#34;&gt;LESS&lt;/h3&gt;

&lt;p&gt;Var√≠aves em LESS s√£o praticamente iguais as vari√°veis no Sass, exceto por come√ßarem seus nomes com o s√≠mbolo &amp;#8220;@&amp;#8221;.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@mainColor: #0982c1;
@siteWidth: 1024px;
@borderStyle: dotted;

body {
    color: @mainColor;
    border: 1px @borderStyle @mainColor;
    max-width: @siteWidth;
}
&lt;/pre&gt;

&lt;h3 id=&#34;stylus-4&#34;&gt;Stylus&lt;/h3&gt;

&lt;p&gt;Vari√°veis em Stylus n√£o precisam come√ßar com nenhum s√≠mbolo, por√©m ele permite a utiliza√ß√£o do s√≠mbolo &amp;#8220;$&amp;#8221;. Como sempre, o ponto e v√≠rgula para finalizar n√£o √© necess√°rio, mas um sinal de igual entre o nome da vari√°vel e seu valor √©. Uma coisa importante para se notar √© que na vers√£o 0.22.4 do Stylus vari√°veis com nome come√ßados com o s√≠mbolo &amp;#8220;@&amp;#8221; s√£o compiladas, por√©m n√£o aplicam seu valor quando referenciadas. Em oturas palavras, n√£o fa√ßa isso.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;mainColor = #0982c1;
siteWidth = 1024px;
$borderStyle = dotted;

body
    color mainColor
    border 1px $borderStyle mainColor
    max-width siteWidth
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado-4&#34;&gt;CSS Compilado&lt;/h3&gt;

&lt;p&gt;Cada um dos arquivos acima ir√£o compilar no mesmo CSS. Voc√™ pode usar sua imagina√ß√£o para ver qu√£o √∫teis vari√°veis podem ser. N√£o precisaremos mais ao mudar uma cor reescrever a mesma vinte vezes, ou querer mudar a largura de nosso site e ter de procurar por todo o site para fazer isso. Aqui est√° o CSS depois de compilado:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;body {
    color: #0982c1;
    border: 1px dotted #0982c1;
    max-width: 1024px.
}
&lt;/pre&gt;

&lt;h2 id=&#34;aninhamento-1&#34;&gt;Aninhamento&lt;/h2&gt;

&lt;p&gt;Se precisarmos referenciar m√∫ltiplos elementos com o mesmo pai em nosso CSS, pode ser entediante ficar digitanto o pai toda vez.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;section {
    margin: 10px;
}
section nav {
    height: 25px;
}
section nav a {
    color: #0982c1;
}
section nav a:hover {
    text-decoration: underline;
}
&lt;/pre&gt;

&lt;p&gt;Ao inv√©s disso, usando um pr√©-processador, podemos escrever os seletores filhos dentro das chaves do elemento pai. O s√≠mbolo &amp;#8220;&amp;amp;&amp;#8221; √© usado para referenciar o seletor pai.&lt;/p&gt;

&lt;h3 id=&#34;sass-less-e-stylus-2&#34;&gt;Sass, LESS e Stylus&lt;/h3&gt;

&lt;p&gt;Todos os tr√™s pr√©-processdores utilizam a mesma sintaxe para aninhar seletores.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;section {
    margin: 10px;

    nav {
        height: 25px;

        a {
            color: #0982c1;

            &amp;:hover {
                text-decoration: underline;
            }
        }
    }
}
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado-5&#34;&gt;CSS Compilado&lt;/h3&gt;

&lt;p&gt;Abaixo est√° o CSS compilado do c√≥digo escrito acima. Est√° exatamente igual ao mostrado no come√ßo &amp;#8211; que conveniente!&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;section {
    margin: 10px;
}
section nav {
    height: 25px;
}
section nav a {
    color: #0982c1;
}
section nav a:hover {
    text-decoration: underline;
}
&lt;/pre&gt;

&lt;h2 id=&#34;mixins-1&#34;&gt;Mixins&lt;/h2&gt;

&lt;p&gt;Mixins s√£o fun√ß√µes que permitem reusar propriedades atrav√©s de nossas folhas de estilo. Ao inv√©s de procurar por todas nossas folhas de estilo e mudar uma propriedade v√°rias vezes, podemos apenas mudar dentro de nosso mixin. Isso pode ser realmente √∫til para estiliza√ß√£o de elementos espec√≠ficos e para &amp;#8220;vendor prefixes&amp;#8221; (moz-*, o-*, etc). Quando os mixins s√£o chamados de dentro de um seletor CSS, os argumentos s√£o reconhecidos e os estilos dentro do mixin s√£o aplicados ao seletor.&lt;/p&gt;

&lt;h3 id=&#34;sass-3&#34;&gt;Sass&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* Mixin em Sass chamado error com argumento $borderWidth opcional, caso n√£o seja fornecido, utiliza o valor padr√£o de 2px; */
@mixin error($borderWidth: 2px) {
    border: $borderWidth solid #f00;
    color: #f00;
}

.generic-error {
    padding: 20px;
    margin: 4px;
    @include error(); /* Aplica estilos do mixin error */
}
.login-error {
    left: 12px;
    position: absolute;
    top: 20px;
    @include error(5px); /* Aplica estilos do mixin error com argumento $borderWidth = 5px */
}
&lt;/pre&gt;

&lt;h3 id=&#34;less-4&#34;&gt;LESS&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* Mixin em LESS chamado error com argumento $borderWidth opcional, caso n√£o seja fornecido, utiliza o valor padr√£o de 2px; */
.error(@borderWidth: 2px) {
    border: @borderWidth solid #f00;
    color: #f00;
}

.generic-error {
    padding: 20px;
    margin: 4px;
    .error(); /* Aplica estilos do mixin error */
}
.login-error {
    left: 12px;
    position: absolute;
    top: 20px;
    .error(5px); /* Aplica estilos do mixin error com argumento $borderWidth = 5px */
}
&lt;/pre&gt;

&lt;h3 id=&#34;stylus-5&#34;&gt;Stylus&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;/* Mixin em Stylus chamado error com argumento $borderWidth opcional, caso n√£o seja fornecido, utiliza o valor padr√£o de 2px; */
error(borderWidth = 2px) {
    border: borderWidth solid #f00;
    color: #f00;
}

.generic-error {
    padding: 20px;
    margin: 4px;
    error(); /* Aplica estilos do mixin error */
}
.login-error {
    left: 12px;
    position: absolute;
    top: 20px;
    error(5px); /* Aplica estilos do mixin error com argumento $borderWidth = 5px */
}
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado-6&#34;&gt;CSS Compilado&lt;/h3&gt;

&lt;p&gt;Todos pr√©-processadores ir√£o compilar o mesmo c√≥digo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.generic-error {
    padding: 20px;
    margin: 4px;
    border: 2px solid #f00;
    color: #f00;
}
.login-error {
    left: 12px;
    position: absolute;
    top: 20px;
    border: 5px solid #f00;
    color: #f00;
}
&lt;/pre&gt;

&lt;h2 id=&#34;heran√ßa-1&#34;&gt;Heran√ßa&lt;/h2&gt;

&lt;p&gt;Quando estamos escrevendo CSS da velha maneira, n√≥s usar√≠amos o seguinte c√≥digo para aplicar o mesmo estilo para m√∫ltiplos elementos de uma s√≥ vez:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;p,
u,
ol {
    /* estilos aqui */
}
&lt;/pre&gt;

&lt;p&gt;Isso funciona perfeitamente, mas se depois precis√°ssemos de estilizar os elementos individualmente, outro seletor deveria ser criado para cada um e rapidamente poderia ficar cada vez mais bagun√ßado e dif√≠cil de manter. Podemos utilizar heran√ßa para resolver isso. Heran√ßa √© a habilidade de outros seletores CSS herdarem as propriedades de outro seletor.&lt;/p&gt;

&lt;h3 id=&#34;sass-e-stylus-1&#34;&gt;Sass e Stylus&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.block {
    margin: 10px 5px;
    padding: 2px;
}

p {
    @extend .block; /* Herda estilos do seletor &#39;.block&#39; */
    border: 1px solid #eee;
}
ul, ol {
    @extend .block; /* Herda estilos do seletor &#39;.block&#39; */
    color: #333;
    text-transform: uppercase;
}
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado-sass-e-stylus-1&#34;&gt;CSS Compilado (Sass e Stylus)&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.block, p, ul, ol {
    margin: 10px 5px;
    padding: 2px;
}
p {
    border: 1px solid #eee;
}
ul, ol {
    color: #333;
    text-transform: uppercase;
}
&lt;/pre&gt;

&lt;h3 id=&#34;less-5&#34;&gt;LESS&lt;/h3&gt;

&lt;p&gt;LESS n√£o tem suporte a heran√ßa de estilos como Sass e Stylus. Ao inv√©s de adicionar diversos seletores para um grupo de propriedades, ele trata heran√ßa como um mixin sem argumentos e importa os estilos para dentro de seus pr√≥prios seletores. O problema disso √© que propriedades s√£o repetidas em sua folha de estilo compilada. Abaixo segue como deve-se utilizar:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.block {
    margin: 10px 5px;
    padding: 2px;
}
 
p {
    .block; /* Herda estilos do seletor &#39;.block&#39; */
    border: 1px solid #eee;
}
ul, ol {
    .block; /* Herda estilos do seletor &#39;.block&#39; */
    color: #333;
    text-transform: uppercase;
}
&lt;/pre&gt;

&lt;h3 id=&#34;css-compilado-less-1&#34;&gt;CSS Compilado (LESS)&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.block {
    margin: 10px 5px;
    padding: 2px;
}
p {
    margin: 10px 5px;
    padding: 2px;
    border: 1px solid #eee;
}
ul,
ol {
    margin: 10px 5px;
    padding: 2px;
    color: #333;
    text-transform: uppercase;
}
&lt;/pre&gt;

&lt;p&gt;Como voc√™ pode ver, os estilos do seletor .block foram inseridas nos seletores que quer√≠amos aplicar a heran√ßa. √â importante notar que a prioridade das propriedades pode se tornar um problema, ent√£o devemos ter bastante cautela.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@import &#34;reset.css&#34;;
body {
    background: #eee;
}
p {
    background: #0982c1;
}
&lt;/pre&gt;

&lt;h2 id=&#34;fun√ß√µes-de-cores&#34;&gt;Fun√ß√µes de Cores&lt;/h2&gt;

&lt;p&gt;Fun√ß√µes de cores s√£o fun√ß√µes nativas que transformam uma cor por compila√ß√£o. Podem ser extremamente √∫teis para criar gradientes, escurecer cores no &amp;#8220;hover&amp;#8221; de elementos e muito mais.&lt;/p&gt;

&lt;h3 id=&#34;sass-4&#34;&gt;Sass&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;lighten($color, 10%); /* retorna uma cor 10% mais clara que $color */
darken($color, 10%);  /* retorna uma cor 10% mais escura $color */
 
saturate($color, 10%);   /* retorna uma cor 10% mais saturada que $color */
desaturate($color, 10%); /* retorna uma cor 10% menos saturada que $color */
 
grayscale($color);  /* retorna $color na escala de cinza */
complement($color); /* retorna cor complementar de $color */
invert($color);     /* retorna cor inversa de $color */
 
mix($color1, $color2, 50%); /* mistura $color1 com $color2 com um peso de 50% */
&lt;/pre&gt;

&lt;p&gt;Essas √© apenas uma pequena lista de fun√ß√µes de cores dispon√≠veis no Sass. A lista completa das fun√ß√µes de cores dispon√≠veis no Sass pode ser encontrada na &lt;a href=&#34;http://sass-lang.com/documentation/Sass/Script/Functions.html&#34; target=&#34;_blank&#34;&gt;documenta√ß√£o do Sass&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Fun√ß√µes de cores podem ser usadas em qualquer lugar que uma cor √© v√°lida no CSS. Veja um exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;$color: #0982C1;
 
h1 {
    background: $color;
    border: 3px solid darken($color, 50%);
}
&lt;/pre&gt;

&lt;h3 id=&#34;less-6&#34;&gt;LESS&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;lighten(@color, 10%); /* retorna uma cor 10% mais clara que @color */
darken(@color, 10%);  /* retorna uma cor 10% mais escura @color */
 
saturate(@color, 10%);   /* retorna uma cor 10% mais saturada que @color */
desaturate(@color, 10%); /* retorna uma cor 10% menos saturada que @color */
 
spin(@color, 10); /* retorna uma cor 10 graus acima na matiz/tonalidade que @color */
spin(@color, -10); /* retorna uma cor 10 graus abaixo na matiz/tonalidade que @color */
 
mix(@color1, @color2); /* mistura @color1 com @color2 */
&lt;/pre&gt;

&lt;p&gt;A lista de todas as fun√ß√µes dispon√≠veis no LESS pode encontrada na &lt;a href=&#34;http://lesscss.org/#-color-functions&#34; target=&#34;_blank&#34;&gt;documenta√ß√£o LESS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Veja um exemplo de como usar uma fun√ß√£o de cores no LESS:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@color: #0982C1;
 
h1 {
    background: @color;
    border: 3px solid darken(@color, 50%);
}
&lt;/pre&gt;

&lt;h3 id=&#34;stylus-6&#34;&gt;Stylus&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;lighten(color, 10%); /* retorna uma cor 10% mais clara que &#39;color&#39; */
darken(color, 10%);  /* retorna uma cor 10% mais escura &#39;color&#39; */
 
saturate(color, 10%);   /* retorna uma cor 10% mais saturada que &#39;color&#39; */
desaturate(color, 10%); /* retorna uma cor 10% menos saturada que &#39;color&#39; */
&lt;/pre&gt;

&lt;p&gt;A lista completa de todas fun√ß√µes de cores dispon√≠veis no Stylus pode ser encontrada na &lt;a href=&#34;http://stylus-lang.com/docs/bifs.html&#34; target=&#34;_blank&#34;&gt;documenta√ß√£o Stylus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Veja um exemplo de como usar uma fun√ß√£o de cores no Stylus:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;color = #0982C1
 
h1
    background color
    border 3px solid darken(color, 50%)
&lt;/pre&gt;

&lt;h2 id=&#34;opera√ß√µes&#34;&gt;Opera√ß√µes&lt;/h2&gt;

&lt;p&gt;Fazer c√°lculos no CSS √© bastante √∫til e agora totalmente poss√≠vel. √â bem simples e √© dessa maneira que fazemos:&lt;/p&gt;

&lt;h3 id=&#34;sass-less-e-stylus-3&#34;&gt;Sass, LESS e Stylus&lt;/h3&gt;

&lt;pre class=&#34;lang-css&#34;&gt;body {
    margin: (14px/2);
    top: 50px + 100px;
    right: 100px - 50px;
    left: 10 * 10;
}
&lt;/pre&gt;

&lt;h2 id=&#34;aplica√ß√µes-pr√°ticas&#34;&gt;Aplica√ß√µes Pr√°ticas&lt;/h2&gt;

&lt;p&gt;N√≥s falamos de diversas funcionalidades e novas coisas que pr√©-processadores podem fazer, mas n√£o mostramos nada na pr√°tica ainda. Veja uma pequena lista de aplica√ß√µes no mundo real em que um pr√©-processador √© um salva-vidas.&lt;/p&gt;

&lt;h3 id=&#34;vendor-prefixes&#34;&gt;Vendor Prefixes&lt;/h3&gt;

&lt;p&gt;Essa √© uma das principais raz√µes para se usar um pr√©-processador e por um motivo bom &amp;#8211; economia gigante de tempo e l√°grimas. Criar um mixin para cuidar dos vendor prefixes √© f√°cil e nos salva de uma codifica√ß√£o repetitiva e dolorosa. Veja como fazer:&lt;/p&gt;

&lt;h4 id=&#34;sass-5&#34;&gt;Sass&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@mixin border-radius($values) {
    -webkit-border-radius: $values;
        -moz-border-radius: $values;
            border-radius: $values;
}
 
div {
    @include border-radius(10px);
}
&lt;/pre&gt;

&lt;h4 id=&#34;less-7&#34;&gt;LESS&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.border-radius(@values) {
    -webkit-border-radius: @values;
        -moz-border-radius: @values;
            border-radius: @values;
}
 
div {
    .border-radius(10px);
}
&lt;/pre&gt;

&lt;h4 id=&#34;stylus-7&#34;&gt;Stylus&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;border-radius(values) {
    -webkit-border-radius: values;
        -moz-border-radius: values;
            border-radius: values;
}
 
div {
    border-radius(10px);
}
&lt;/pre&gt;

&lt;h4 id=&#34;css-compilado-7&#34;&gt;CSS Compilado&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
    -webkit-border-radius: 10px;
        -moz-border-radius: 10px;
            border-radius: 10px;
}
&lt;/pre&gt;

&lt;h3 id=&#34;texto-3d&#34;&gt;Texto 3D&lt;/h3&gt;

&lt;p&gt;Simular um texto 3D utilizando diversos text-shadows √© uma grande ideia. O √∫nico problema √© que mudar a cor depois de criar √© dif√≠cil e inc√¥modo. Usando mixins e fun√ß√µes de cores, podemos criar um texto 3D e mudar sua cor sem nenhuma dificuldade.&lt;/p&gt;

&lt;h4 id=&#34;sass-6&#34;&gt;Sass&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@mixin text3d($color) {
    color: $color;
    text-shadow: 1px 1px 0px darken($color, 5%),
            2px 2px 0px darken($color, 10%),
            3px 3px 0px darken($color, 15%),
            4px 4px 0px darken($color, 20%),
            4px 4px 2px #000;
}
 
h1 {
    font-size: 32pt;
    @include text3d(#0982c1);
}
&lt;/pre&gt;

&lt;h4 id=&#34;less-8&#34;&gt;LESS&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.text3d(@color) {
    color: @color;
    text-shadow: 1px 1px 0px darken(@color, 5%),
            2px 2px 0px darken(@color, 10%),
            3px 3px 0px darken(@color, 15%),
            4px 4px 0px darken(@color, 20%),
            4px 4px 2px #000;
}
 
span {
    font-size: 32pt;
    .text3d(#0982c1);
}
&lt;/pre&gt;

&lt;h4 id=&#34;stylus-8&#34;&gt;Stylus&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;text3d(color)
    color: color
    text-shadow: 1px 1px 0px darken(color, 5%), 2px 2px 0px darken(color, 10%), 3px 3px 0px darken(color, 15%), 4px 4px 0px darken(color, 20%), 4px 4px 2px #000
span
    font-size: 32pt
    text3d(#0982c1)
&lt;/pre&gt;

&lt;p&gt;Escolhi escrever os &amp;#8220;text-shadows&amp;#8221; do Stylus em apenas uma linha pois omiti as chaves.&lt;/p&gt;

&lt;h4 id=&#34;css-compilado-8&#34;&gt;CSS Compilado&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;span {
    font-size: 32pt;
    color: #0982c1;
    text-shadow: 1px 1px 0px #097bb7, 
            2px 2px 0px #0875ae, 
            3px 3px 0px #086fa4, 
            4px 4px 0px #07689a, 
            4px 4px 2px #000;
}
&lt;/pre&gt;

&lt;h4 id=&#34;resultado-final&#34;&gt;Resultado Final&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.tutsplus.com/net/uploads/legacy/1144_preprocshootout/text3d.png&#34; alt=&#34;Texto 3D&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;colunas&#34;&gt;Colunas&lt;/h3&gt;

&lt;p&gt;Usar opera√ß√µes num√©ricas e vari√°veis para colunas √© uma ideia que tive da primeira vez que estava brincando com pr√©-processadores CSS. Declarando a largura desejada em uma vari√°vel, podemos facilmente alter√°-la sem precisar de nenhum c√°lculo mental. Veja como fazer:&lt;/p&gt;

&lt;h4 id=&#34;sass-7&#34;&gt;Sass&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;$siteWidth: 1024px;
$gutterWidth: 20px;
$sidebarWidth: 300px;
 
body {
    margin: 0 auto;
    width: $siteWidth;
}
.content {
    float: left;
    width: $siteWidth - ($sidebarWidth+$gutterWidth);
}
.sidebar {
    float: left;
    margin-left: $gutterWidth;
    width: $sidebarWidth;
}
&lt;/pre&gt;

&lt;h4 id=&#34;less-9&#34;&gt;LESS&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@siteWidth: 1024px;
@gutterWidth: 20px;
@sidebarWidth: 300px;
 
body {
    margin: 0 auto;
    width: @siteWidth;
}
.content {
    float: left;
    width: @siteWidth - (@sidebarWidth+@gutterWidth);
}
.sidebar {
    float: left;
    margin-left: @gutterWidth;
    width: @sidebarWidth;
}
&lt;/pre&gt;

&lt;h4 id=&#34;stylus-9&#34;&gt;Stylus&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;siteWidth = 1024px;
gutterWidth = 20px;
sidebarWidth = 300px;
 
body {
    margin: 0 auto;
    width: siteWidth;
}
.content {
    float: left;
    width: siteWidth - (sidebarWidth+gutterWidth);
}
.sidebar {
    float: left;
    margin-left: gutterWidth;
    width: sidebarWidth;
}
&lt;/pre&gt;

&lt;h4 id=&#34;css-compilado-9&#34;&gt;CSS Compilado&lt;/h4&gt;

&lt;pre class=&#34;lang-css&#34;&gt;body {
    margin: 0 auto;
    width: 1024px;
}
.content {
    float: left;
    width: 704px;
}
.sidebar {
    float: left;
    margin-left: 20px;
    width: 300px;
}
&lt;/pre&gt;

&lt;h2 id=&#34;peculiaridades-not√°veis&#34;&gt;Peculiaridades Not√°veis&lt;/h2&gt;

&lt;p&gt;Existem algumas peculiaridades ao usar um pr√©-processador CSS. Irei falar de algumas engra√ßadas, mas se voc√™ est√° realmente interessado em encontrar todas elas eu recomendo voc√™ vasculhar toda a documenta√ß√£o, ou melhor, come√ßar a usar um pr√©-processador na sua codifica√ß√£o di√°ria.&lt;/p&gt;

&lt;h3 id=&#34;relat√≥rio-de-erros&#34;&gt;Relat√≥rio de Erros&lt;/h3&gt;

&lt;p&gt;Se voc√™ j√° escreveu CSS por uma boa quantia de tempo, tenho certeza que voc√™ j√° chegou a um ponto onde voc√™ tinha um erro em algum lugar e simplesmente n√£o conseguia o encontrar. Se voc√™ √© como eu, provavelmente passou a tarde toda arrancando os cabelos fora e comentando diversas coisas para ca√ßar o erro.&lt;/p&gt;

&lt;p&gt;Pr√©-processadores CSS relatam os erros. Simples assim. Se tem alguma coisa errada em seu c√≥digom ele te fala onde e, se voc√™ estiver com sorte at√© mesmo o porqu√™. Voc√™ pode dar uma olhada &lt;a href=&#34;http://tjholowaychuk.com/post/5002088731/stylus-vs-sass-vs-less-error-reporting&#34; target=&#34;_blank&#34;&gt;nesse post&lt;/a&gt; caso esteja interessado em ver como os erros s√£o relatados em diferentes pr√©-processadores.&lt;/p&gt;

&lt;h3 id=&#34;coment√°rios&#34;&gt;Coment√°rios&lt;/h3&gt;

&lt;p&gt;Quando um pr√©-processador CSS est√° compilando, qualquer coment√°rio escrito com barras duplas &amp;#8220;//&amp;#8221; √© exclu√≠do e qualquer coment√°rios escrito com barra e asterisco &amp;#8220;/* */&amp;#8221; n√£o √© alterado. Dito isso, use coment√°rios com barras duplas para coment√°rios que voc√™ queira na vers√£o n√£o compilada e coment√°rios com barra e asterisco para coment√°rios que ser√£o vis√≠veis ap√≥s a compila√ß√£o.&lt;/p&gt;

&lt;p&gt;Observa√ß√£o: Se voc√™ compilar os arquivos, minificando-os, todos coment√°rios s√£o exclu√≠dos.&lt;/p&gt;

&lt;h2 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;Cada um dos pr√©-processadores que falamos (Sass, LESS e Stylus) possui um modo √∫nico de realizar a mesma tarefa &amp;#8211; dando a n√≥s desenvolvedor a habilidade de usar funcionalidades √∫teis mantendo a compatibilidade entre browsers e um c√≥digo limpo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mesmo n√£o sendo uma exig√™ncia para o desenvolvimento, pr√©-processadores podem economizar muito tempo e tem funcionalidades bastante √∫teis.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Eu aconselho todos voc√™s a utilizar e testar a maior quantidade de pr√©-processadores poss√≠vel, pois assim voc√™ poder√° escolher efetivamente um favorito e saber o porqu√™ ele √© seu favorito dentre tantos outros. Se voc√™ ainda n√£o testou usar nenhum pr√©-processador para escrever seu CSS, eu recomendo grandemente a voc√™ testar.&lt;/p&gt;

&lt;p&gt;Voc√™ tem alguma funcionalidade de seu pr√©-processador favorito que n√£o foi mencionada? H√° algo que algum pr√©-processador possa fazer e outros n√£o? Conte-nos nos coment√°rios abaixo!&lt;/p&gt;

&lt;p&gt;Traduzido e adaptado de: &lt;a href=&#34;http://code.tutsplus.com/tutorials/sass-vs-less-vs-stylus-preprocessor-shootout--net-24320&#34;&gt;http://code.tutsplus.com/tutorials/sass-vs-less-vs-stylus-preprocessor-shootout&amp;#8211;net-24320&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando facebook reactions com css</title>
      <link>https://tableless.github.io/hugo-public/criando-facebook-reactions-com-css/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/criando-facebook-reactions-com-css/</guid>
      <description>

&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;

&lt;p&gt;No dia 24 de fevereiro de 2016, o Facebook liberou seus novos bot√µes de curtir, chamado de &amp;#8220;Facebook Reactions&amp;#8221;, a fun√ß√£o foi liberada para todos os usu√°rios, j√° que estava em fase de testes em alguns pa√≠ses.&lt;/p&gt;

&lt;p&gt;S√£o eles: Curtir, Amei, Haha, Uau, Triste, Grr.&lt;/p&gt;

&lt;p&gt;Essa novidade √© uma √≥tima maneira de saber como seus contatos reagem ao que voc√™ compartilha na rede social.&lt;/p&gt;

&lt;p&gt;Em 2014 o Facebook registrou a patente que previa esses bot√µes com sentimentos, &lt;a href=&#34;http://thenextweb.com/facebook/2015/09/18/facebook-patent-reveals-what-its-empathy-button-might-look-like/&#34; target=&#34;_blank&#34;&gt;leia mais detalhes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Como sou apaixonado por CSS, resolvi criar essas micro intera√ß√µes ao passar o mouse sobre o elemento, e tamb√©m caso use o teclado.&lt;/p&gt;

&lt;p&gt;Cheguei a olhar como o Facebook criou aquelas anima√ß√µes, e resolvi fazer algo mais simples usando a propriedade translate e n√£o animation conforme eles usaram no deles.&lt;/p&gt;

&lt;h2 id=&#34;veja-o-html&#34;&gt;Veja o HTML&lt;/h2&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;box&#34;&amp;gt;
  &amp;lt;input type=&#34;checkbox&#34; id=&#34;like&#34; class=&#34;field-reactions&#34;&amp;gt;
  &amp;lt;span class=&#34;text-desc&#34;&amp;gt;Press space and after tab key to navigation&amp;lt;/span&amp;gt;
  &amp;lt;label for=&#34;like&#34; class=&#34;label-reactions&#34;&amp;gt;Like&amp;lt;/label&amp;gt;
  &amp;lt;div class=&#34;toolbox&#34;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;label class=&#34;overlay&#34; for=&#34;like&#34;&amp;gt;&amp;lt;/label&amp;gt;
  &amp;lt;button class=&#34;reaction-like&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Like&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
  &amp;lt;button class=&#34;reaction-love&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Love&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
  &amp;lt;button class=&#34;reaction-haha&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Haha&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button class=&#34;reaction-wow&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Wow&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button class=&#34;reaction-sad&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Sad&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button class=&#34;reaction-angry&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Angry&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;h2 id=&#34;o-html&#34;&gt;o HTML&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Linha 1:&lt;/strong&gt; &lt;em&gt;√°rea geral do elemento que recebe o hover ¬†e com isso inicia as intera√ß√µes utilizando o¬†mouse.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 2:&lt;/strong&gt; &lt;em&gt;input checkbox utilizado pra iniciar as intera√ß√µes ao ser checado via mouse ou teclado.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 3&lt;/strong&gt;: &lt;em&gt;mensagem exibida pro usu√°rio assim que ele navegar com o teclado e o input da linha 2 receber o foco.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 4:&lt;/strong&gt; &lt;em&gt;elemento que recebe o background do like e tamb√©m ao ser clicado faz o change do input checkbox e iniciando as intera√ß√µes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 5:&lt;/strong&gt; &lt;em&gt;caixa branca com borda arredondada que tem uma anima√ß√£o diferente dos reactions, por isso ele¬†n√£o √© pai dos elementos.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 6:&lt;/strong&gt; &lt;em&gt;overlay sem cor alguma que serve pra fechar as¬†intera√ß√µes, caso o usu√°rio clique na √°rea fora do box.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 7 a 12:&lt;/strong&gt; &lt;em&gt;reactions do Facebook que possui uma anima√ß√£o ao receber o :hover ou :focus. ¬†Adicionei em cada um a propriedade transition-delay com diferen√ßa de 0.03s entre eles&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;o-css&#34;&gt;O CSS&lt;/h2&gt;

&lt;p&gt;Para exibir os Reactions atrav√©s do mouse, utilizei o :hover do CSS na classe .box , que √© o pai geral dos elementos.&lt;/p&gt;

&lt;p&gt;Para exibir via teclado, ou click do mouse, existe um input[type=&amp;#8221;checked&amp;#8221;], que manipula seus irm√£os (os Reactions e o background branco com borda arredondada).&lt;/p&gt;

&lt;p&gt;O elemento branco com borda arredondada, mesmo que visualmente ele esteja atr√°s como background dos Reactions, no html ele √© irm√£o, com isso foi feito uma outra anima√ß√£o espec√≠fica pra ele, algo bem simples, apenas dando um show.&lt;/p&gt;

&lt;h4 id=&#34;os-reactions&#34;&gt;Os Reactions&lt;/h4&gt;

&lt;p&gt;Conforme se v√™ abaixo, √© chamado o sprite dos Reactions e seus elementos de exibi√ß√£o (width, height, position, top, etc). Os reactions inicia com opacidade, 0 scale 10%, e o transform-origin. Lembrando que eles ser√£o exibidos quando o elemento pai (.box) receber o hover do mouse e/ou quando o input for checado.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;[class*=&#34;reaction-&#34;] {
border: none;
background-image: url(https://fbstatic-a.akamaihd.net/rsrc.php/v2/yh/r/sqhTN9lgaYm.png);
background-color: transparent;
display: block;
cursor: pointer;
height: 48px;
position: absolute;
width: 48px;
z-index: 11;
top: -28;
transform-origin: 50% 100%;
transform: scale(0.1);
transition: all 0.3s;
outline: none;
will-change: transform;
opacity: 0;
}
&lt;/pre&gt;

&lt;h4 id=&#34;animando&#34;&gt;Animando&lt;/h4&gt;

&lt;p&gt;Como temos aquele input[type=&amp;#8221;checked], citado anteriormente, atrav√©s do CSS, podemos usar o :hover, e o :checked desse input e gerar nossas intera√ß√µes mais f√°ceis em seus irm√£os, ou seja, manipulado a opacidade e o scale dos Reactions, ao passar o mouse, ou clicar no like, ou navegar com o teclado checando o input escondido.&lt;/p&gt;

&lt;p&gt;Se voc√™s repararem existe uma diferen√ßa de anima√ß√£o entre o primeiro Reactions e o √∫ltimo e isso foi resolvido bem simples, aplicando um delay pra cada um. (veja abaixo)&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.box:hover .reaction-love {
 transition-delay: 0.03s;
}
.box:hover .reaction-haha {
 transition-delay: 0.09s;
}
.box:hover .reaction-wow {
 transition-delay: 0.12s;
}
.box:hover .reaction-sad {
 transition-delay: 0.15s;
}
.box:hover .reaction-angry {
 transition-delay: 0.18s;
}&lt;/pre&gt;

&lt;p&gt;Pra finalizar,¬†existe¬†um outro comportamento aplicado em cada Reactions que exibe a¬†legenda (inicia com opacidade 0), e muda no :hover e o :focus de¬†cada Reaction para 1 na opacidade.&lt;/p&gt;

&lt;p&gt;Inicialmemte eles est√£o escondidos e pequenos e ao passar o mouse ou receber o foco, s√£o exibidos.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.box:hover [class*=&#34;reaction-&#34;]:hover .legend-reaction, 
.box:hover [class*=&#34;reaction-&#34;]:focus .legend-reaction {
 opacity: 1;
}&lt;/pre&gt;

&lt;h4 id=&#34;b√¥nus&#34;&gt;B√¥nus&lt;/h4&gt;

&lt;p&gt;A propriedade ¬†will-change ¬†otimiza anima√ß√µes, permitindo que o navegador sabe quais propriedades e elementos est√£o prestes a ser manipulados, aumentando potencialmente o desempenho dessa opera√ß√£o espec√≠fica.&lt;/p&gt;

&lt;p&gt;O will-change √© uma recomenta√ß√£o do W3C, desde dezembro de 2015, e seu suporte aos navegadores atuais s√£o bons, segundo o &lt;a href=&#34;http://caniuse.com/#search=will-change&#34; target=&#34;_blank&#34;&gt;caninuse&lt;/a&gt; somente os IEs e o Edge n√£o d√£o suporte atualmente.&lt;/p&gt;

&lt;p&gt;Para saber mais sobre will change &lt;a href=&#34;https://www.w3.org/TR/css-will-change-1/&#34; target=&#34;_blank&#34;&gt;veja a documenta√ß√£o do W3C&lt;/a&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;[class*=&#34;reaction-&#34;] {
¬† transform-origin: 50% 100%;
¬† transform: scale(0.1);
¬† transition: all 0.3s;
¬† will-change: transform, opacity;
}&lt;/pre&gt;

&lt;h2 id=&#34;em-resumo&#34;&gt;Em resumo&lt;/h2&gt;

&lt;p&gt;O grande segredo ent√£o seria conhecer algumas propriedades de anima√ß√£o como, translate, transform, opacity, visibility, e lembrar que podemos manipular elementos irm√£os com :checked ou :hover do pai e manipular seus elementos filhos.&lt;/p&gt;

&lt;h2 id=&#34;veja-o-demo-codepen&#34;&gt;Veja o demo {.codepen}&lt;/h2&gt;

&lt;p class=&#34;codepen&#34;&gt;
  See the Pen &lt;a href=&#34;http://codepen.io/deividmarques/pen/wGvbwY/&#34;&gt;wGvbwY&lt;/a&gt; by Deivid Marques (&lt;a href=&#34;http://codepen.io/deividmarques&#34;&gt;@deividmarques&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;

&lt;h2 id=&#34;conclus√£o&#34;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;Inicialmente criei as intera√ß√µes acontecendo apenas no click do elemento, por√©m no resultado final mudei para o hover do mouse, e tamb√©m deixei funcionando ao usar a tecla TAB, sendo foi poss√≠vel navegar pelos &amp;#8220;Reactions&amp;#8221; com o teclado tamb√©m.&lt;/p&gt;

&lt;p&gt;Utilizei HTML e SASS, claro que daria pra fazer de outras maneiras, escrever menos c√≥digos, at√© mesmo usando fun√ß√µes¬†do sass em alguns lugares, mas isso ficar√° pra pr√≥xima vers√£o.&lt;/p&gt;

&lt;p&gt;O intuito de criar esse pequeno exemplo foi me divertir e tamb√©m em mostrar os poderes que o CSS t√™m ao se criar essas micro intera√ß√µes.&lt;/p&gt;

&lt;div style=&#34;overflow: hidden&#34;&gt;
  &lt;p&gt;
    &lt;a style=&#34;float: left;margin: 0 15px 15px 0&#34; href=&#34;http://deividmarques.github.io/facebook-reactions-css/&#34;&gt;&lt;img class=&#34;alignleft size-full wp-image-53344&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/02/print-cel.png&#34; alt=&#34;facebook reactions com css by Deivid Marques&#34; width=&#34;300&#34; height=&#34;533&#34; /&gt;&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    O resultado por ser &lt;a href=&#34;http://deividmarques.github.io/facebook-reactions-css/&#34; target=&#34;_blank&#34;&gt;conferido aqui&lt;/a&gt;&lt;br /&gt; Gostou? D√™ um click nas estrelinhas do projeto¬†l√° no¬†&lt;a href=&#34;https://github.com/deividmarques/facebook-reactions-css&#34; target=&#34;_blank&#34;&gt;github&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Fazendo a anima√ß√£o do cora√ß√£o de like do Twitter</title>
      <link>https://tableless.github.io/hugo-public/fazendo-a-animacao-do-coracao-de-like-do-twitter/</link>
      <pubDate>Tue, 12 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/fazendo-a-animacao-do-coracao-de-like-do-twitter/</guid>
      <description>&lt;p&gt;Quando o Twitter colocou uma anima√ß√£o no cora√ß√£o de Like na vers√£o web, eu fiquei me perguntando como fazer aquela anima√ß√£o. De cara, parece ser bastante simples, e √©. Mas √© um detalhe que faz a diferen√ßa na interface para quem usa a rede social com frequ√™ncia. Fiz uma vers√£o mais simples. Segue abaixo:&lt;/p&gt;

&lt;p&gt;Antes de olhar o c√≥digo deles pra pesquisar como foi feito, fiquei pensando em uma s√©rie de formas para fazer isso a√≠. Primeiro, pensei em ter v√°rias imagens, e a√≠ usar &lt;code&gt;keyframes&lt;/code&gt; pra alterar esse background do elemento a cada X tempo de mil√©simos de segundos. Depois evolui o pensamento para fazer apenas uma imagem, com todos os &amp;#8220;frames&amp;#8221; da anima√ß√£o. Muito mais inteligente, claro&amp;#8230; lembra dos Sprites&amp;#8230; Pois √©. Com essa imagem eu poderia simplesmente mover o background com um transition simples do CSS. A imagem em quest√£o √© essa aqui:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2016/01/web_heart_animation.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2016/01/web_heart_animation.png&#34; alt=&#34;web_heart_animation&#34; style=&#34;width: 100%; height: auto;&#34; class=&#34;alignnone size-full wp-image-52833&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mas a coisa n√£o funcionou muito bem. Ficou mais ou menos assim:&lt;/p&gt;

&lt;p&gt;Perceba que n√£o houve o efeito de anima√ß√£o como eu estava esperando. Mas tem um truque: quando utilizamos a propriedade &lt;code&gt;transition&lt;/code&gt;, geralmente usamos os valores &lt;code&gt;linear&lt;/code&gt;, &lt;code&gt;ease-in&lt;/code&gt;, &lt;code&gt;ease-out&lt;/code&gt; e etc&amp;#8230; Essas fun√ß√µes definem como os valores intermedi√°rios de uma transi√ß√£o ser√£o calculados. Eles pegam um valor inicial e calculam como a transi√ß√£o vai ocorrer at√© o valor final.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://developer.mozilla.org/files/3426/cubic-bezier,ease-in.png&#34; alt=&#34;&#34; /&gt;&lt;img src=&#34;https://mdn.mozillademos.org/files/3429/cubic-bezier,ease.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;D√° uma olhada nessa &lt;a href=&#34;http://easings.net&#34;&gt;tabela de refer√™ncia&lt;/a&gt; de como as transi√ß√µes funcionam.&lt;/p&gt;

&lt;p&gt;H√° um valor que eu n√£o conhecia at√© ent√£o, chamado &lt;code&gt;steps()&lt;/code&gt;. A representa√ß√£o da transi√ß√£o do steps √© assim:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://mdn.mozillademos.org/files/3437/steps(4,end).png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O &lt;code&gt;steps()&lt;/code&gt;, ao contr√°rio dos outros valores, n√£o determina uma transi√ß√£o cont√≠nua, mas ele separa os valores intermedi√°rios em frames est√°ticos. Veja um exemplo b√°sico abaixo. Um usando linear e outro usando steps().&lt;/p&gt;

&lt;p&gt;Esse efeito seria o mesmo efeito que eu conseguiria se tivesse feito manualmente a primeira ideia de separar os frames da anima√ß√£o em v√°rias imagens&amp;#8230; Mas muito mais inteligente. Mas perceba que eu ainda fa√ßo a transi√ß√£o movendo a posi√ß√£o do background. O valor &lt;code&gt;left&lt;/code&gt; do &lt;code&gt;background-position&lt;/code&gt; come√ßa no **** e termina no &lt;strong&gt;-2800px&lt;/strong&gt;. Esse valor √© exatamente a largura da imagem original que voc√™ quer fazer a anima√ß√£o. O cora√ß√£o do twitter √© bem menor do que esse que eu estamos usando aqui no exemplo (embora a imagem seja a mesma). A√≠ √© s√≥ mudar o tamanho usando o &lt;code&gt;background-size&lt;/code&gt; e fazendo os devidos acertos.&lt;/p&gt;

&lt;p&gt;O final, ficou assim:&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como usar vari√°veis no CSS de forma nativa</title>
      <link>https://tableless.github.io/hugo-public/como-usar-variaveis-no-css-de-forma-nativa/</link>
      <pubDate>Tue, 17 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/como-usar-variaveis-no-css-de-forma-nativa/</guid>
      <description>

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Ol√° pessoal, neste artigo irei abordar o b√°sico sobre vari√°veis nativas com CSS, e como voc√™ pode usar essa tecnologia hoje e sem medo de ser feliz.&lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;span-class-s1-a-href-http-www-w3-org-tr-css-variables-target-blank-css-custom-properties-for-cascading-variables-module-level-1-a-span-p4&#34;&gt;&lt;strong&gt;&lt;span class=&#34;s1&#34;&gt;&lt;a href=&#34;http://www.w3.org/TR/css-variables/&#34; target=&#34;_blank&#34;&gt;CSS Custom Properties for Cascading Variables Module Level 1&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt; {.p4}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Esta especifica√ß√£o ainda em fase de &lt;em&gt;Last Call Working Draft&lt;/em&gt;, traz um novo m√≥dulo de CSS3 que permite a cria√ß√£o de var√°veis de forma nativa, de uma forma simples e r√°pida como veremos a seguir.&lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;span-class-s1-como-declarar-uma-vari√°vel-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Como declarar uma vari√°vel?&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Para declarar uma vari√°vel utilizamos as chamadas &lt;em&gt;Custom Properties&lt;/em&gt;, uma nova forma de declarar uma propriedade utilizando a seguinte sintaxe:&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.exemplo {
¬†¬†--destaque: #660066;
}
&lt;/pre&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Por defini√ß√£o uma &lt;em&gt;Custom Property&lt;/em&gt; √© qualquer propriedade que inicie com dois h√≠fens, como ‚Äò‚Äîfoo‚Äô. &lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;span-class-s1-como-utilizar-uma-vari√°vel-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Como utilizar uma vari√°vel?&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Para utilizar uma vari√°vel utilizamos a fun√ß√£o var(), passando a vari√°vel criada como par√¢metro,¬† assim ela ir√° retornar o valor da vari√°vel, veja o exemplo a seguir:&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.exemplo {
¬†¬†--destaque: #660066;
¬†¬†background-color: var(--destaque);
}
&lt;/pre&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;O que equivale diretamente a:&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.exemplo {
¬†¬†background-color: #660066;
}
&lt;/pre&gt;

&lt;h2 id=&#34;span-class-s1-a-not√≠cia-ruim-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;A not√≠cia ruim üôÅ&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;As vari√°veis tem um escopo a ser seguido, logo uma vari√°vel n√£o pode ser usada fora de seu escopo.&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Exemplos de utiliza√ß√£o correta do escopo:&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.menu {
¬†¬†--tamanho: 20px;
}
.menu ul li {
¬†¬†padding: var(--tamanho); // retorna 20px
}
&lt;/pre&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Exemplo de utiliza√ß√£o incorreta do escopo:&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.menu {
¬†¬†--tamanho: 20px;
}
.footer {
¬†¬†padding: var(--tamanho); // n√£o retorna nada
}
&lt;/pre&gt;

&lt;h2 id=&#34;span-class-s1-a-not√≠cia-boa-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;A not√≠cia boa üôÇ&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Podemos declarar vari√°veis em um tipo de &amp;#8220;escopo global‚Äù, que nada mais √© do que a raiz do documento,&lt;span class=&#34;Apple-converted-space&#34;&gt;¬† &lt;/span&gt;para isso utilizamos o seletor :root.&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Exemplo de vari√°veis declaradas na raiz do documento.&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;:root {
¬†¬†--tamanho: 50%;
¬†¬†--cor: #660066;
}

.exemplo-1 {
¬†¬†margin: var(--tamanho); // retorna 50%
}

.exemplo-2 {
¬†¬†color: var(--cor); // retorna #660066
}
&lt;/pre&gt;

&lt;h2 id=&#34;span-class-s1-at√©-aqui-legal-mas-e-o-suporte-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;At√© aqui legal, mas e o suporte?&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Nem tudo s√£o flores amigos, at√© o momento o suporte √© apenas para Firefox. Vejam a tabela completa no &lt;a href=&#34;http://caniuse.com/#feat=css-variables&#34; target=&#34;_blank&#34;&gt;Can i use&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;span-class-s1-como-usar-hoje-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Como usar hoje!&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;N√£o teria gra√ßa se eu trouxesse aqui uma coisa t√£o divertida e ningu√©m pudesse usar, e com um suporte t√£o ruim, s√≥ nos resta apelar para o&lt;span class=&#34;Apple-converted-space&#34;&gt;¬†&lt;/span&gt;maravilhoso &lt;a href=&#34;https://github.com/MadLittleMods/postcss-css-variables&#34; target=&#34;_blank&#34;&gt;postcss-css-variables&lt;/a&gt;, que √© um plugin para &lt;a href=&#34;https://github.com/postcss/postcss&#34; target=&#34;_blank&#34;&gt;Post CSS&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;h3 id=&#34;span-class-s1-mas-o-que-√©-mesmo-esse-post-css-span-p3&#34;&gt;&lt;strong&gt;&lt;span class=&#34;s1&#34;&gt;Mas o que √© mesmo esse Post CSS?&lt;/span&gt;&lt;/strong&gt; {.p3}&lt;/h3&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Esse cara √© um p√≥s-processador de CSS que possu√≠ v√°rios &lt;a href=&#34;https://github.com/postcss/postcss#plugins&#34; target=&#34;_blank&#34;&gt;plugins&lt;/a&gt;, sendo o mais famoso o &lt;a href=&#34;https://github.com/postcss/autoprefixer&#34; target=&#34;_blank&#34;&gt;Autoprefixer&lt;/a&gt;, quer por sua vez pega seu c√≥digo e aplica os &lt;em&gt;vendors prefixes&lt;/em&gt; conforme a necessidade, e √© exatamente isso que o postcss-css-variables faz, ele pega suas vari√°veis e as poem em seu devido lugar, compilando seu &amp;#8220;CSS do futuro&amp;#8221;, para um CSS nativo e suportado por todos.&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Voc√™ pode ver exatamente como o plugin funciona no &lt;a href=&#34;https://madlittlemods.github.io/postcss-css-variables/playground/&#34; target=&#34;_blank&#34;&gt;postcss-css-variables Playground&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;h3 id=&#34;span-class-s1-quais-as-vantagens-de-utilizar-o-postcss-css-variables-span-p3&#34;&gt;&lt;strong&gt;&lt;span class=&#34;s1&#34;&gt;Quais as vantagens de utilizar o postcss-css-variables?&lt;/span&gt;&lt;/strong&gt; {.p3}&lt;/h3&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;1 &amp;#8211; Voc√™ vai &lt;strong&gt;escrever o CSS de forma nativa&lt;/strong&gt;, e usar o p√≥s-processador como um tipo de &amp;#8220;polyfill&amp;#8221;, que no futuro,¬† caso outros navegares al√©m do firefox adotem a especifica√ß√£o, pode ser retirado e seu c√≥digo j√° estar√° pronto, mais ou menos como ocorre com o JavaScript e o &lt;a href=&#34;https://babeljs.io/&#34; target=&#34;_blank&#34;&gt;Babel&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;2 &amp;#8211; Usar uma coisa nova em seu &lt;em&gt;workflow&lt;/em&gt;. Isso faz bem, principalmente quando abre um leque de novas possibilidades como aprender outras v√°rias fun√ß√µes incr√≠veis que o Post CSS tr√°s.&lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;span-class-s1-conclus√£o-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Conclus√£o&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Caso¬†algu√©m me pergunte se &lt;strong&gt;v&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span class=&#34;s1&#34;&gt;ale a pena mudar o &lt;em&gt;workflow&lt;/em&gt; apenas para escrever vari√°veis de forma nativa?&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Talvez a resposta seja &lt;strong&gt;n√£o&lt;/strong&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Agora, se algu√©m perguntasse se &lt;strong&gt;v&lt;/strong&gt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&lt;strong&gt;ale a pena brincar com uma coisa nova&lt;/strong&gt;, que no fim das contas vai me &lt;strong&gt;ensinar sobre p√≥s-processadores&lt;/strong&gt;, me apresentar uma especifica√ß√£o que pode &lt;strong&gt;virar padr√£o no futuro&lt;/strong&gt; e me fazer &lt;strong&gt;refletir sobre formas diferentes de fazer a mesma coisa?&lt;/strong&gt;&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Nesse caso a resposta √© um imenso &lt;strong&gt;SIM&lt;/strong&gt;.&lt;/span&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>