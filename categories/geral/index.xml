<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Geral on Tableless</title>
    <link>http://tableless.com.br/categories/geral/index.xml</link>
    <description>Recent content in Geral on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/categories/geral/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Crie sites em questão de minutos com o Pingendo</title>
      <link>http://tableless.com.br/crie-sites-em-questao-de-minutos-com-o-pingendo/</link>
      <pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/crie-sites-em-questao-de-minutos-com-o-pingendo/</guid>
      <description>

&lt;p&gt;Sem dúvidas, o Bootstrap é uma das frameworks mais utilizadas ultimamente, porém, para algumas pessoas, ainda é meio complicado lidar com os códigos, sejam eles HTML, CSS ou JavaScript.&lt;/p&gt;

&lt;h2 id=&#34;o-que-é-o-pingendo&#34;&gt;O que é o Pingendo?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://pingendo.com/&#34;&gt;Pingendo&lt;/a&gt; é um programa de interface simples e de fácil uso. O Pingendo é um criador de sites em Bootstrap 3 que permite a criação de websites de maneira simples e rápida.&lt;/p&gt;

&lt;h2 id=&#34;drag-and-drop&#34;&gt;Drag and drop&lt;/h2&gt;

&lt;p&gt;O programa usa um modo muito popular em criadores de sites online como Wix, Weebly, etc. É só arrastar e soltar os elementos desejados dentro da área do site e pronto, a mágica está feita.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/mGmv44Y.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;imagens&#34;&gt;Imagens&lt;/h2&gt;

&lt;p&gt;Com o Pingendo você tem a seu dispor uma ampla quantidade de imagens livres de direitos autorais e com altíssima qualidade vindas direto do &lt;a href=&#34;https://unsplash.com/&#34;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/NMxtVad.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;fontes&#34;&gt;Fontes&lt;/h2&gt;

&lt;p&gt;A alteração das fontes pode ser feita facilmente através do menu lateral do programa. As fontes são carregadas diretamente do &lt;a href=&#34;https://fonts.google.com/&#34;&gt;Google Fonts&lt;/a&gt;, um dos mais completos banco de dados de fontes da internet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/9RGXujM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;cores&#34;&gt;Cores&lt;/h2&gt;

&lt;p&gt;A alteração das cores do tema também podem ser alteradas através do menu lateral, basta escolher as que mais lhe agradam.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/68jKTOb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;responsividade&#34;&gt;Responsividade&lt;/h2&gt;

&lt;p&gt;O Pingendo permite a visualização do seu projeto em telas de diversos tamanhos. Facilitando assim o teste de responsividade do seu website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/dCHV33W.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;código&#34;&gt;Código&lt;/h2&gt;

&lt;p&gt;Se você possuí alguma experiencia, mesmo que mínima, em HTML e/ou CSS, pode realizar alterações direto do programa e velas sendo aplicadas em tempo real.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/3Fv69GJ.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pingendo está disponível para as plataformas Mac, Windows e Linux no site &lt;a href=&#34;https://pingendo.com/&#34;&gt;www.pingendo.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Conselhos de um simples programador</title>
      <link>http://tableless.com.br/conselhos-de-um-simples-programador/</link>
      <pubDate>Sun, 19 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/conselhos-de-um-simples-programador/</guid>
      <description>&lt;p&gt;Aqui estão conselhos de um simples programador ou apenas algumas situações que vivenciei na minha vida.&lt;/p&gt;

&lt;p&gt;Você também vai passar por várias fases como programador, momentos de fazer gambiaras, pois tem etapas que vai querer fugir daquele projeto chato. Mas também vai viver momentos em que o código importará mais que qualquer resultado. Com certeza você também vai passar por várias situações difíceis, e possivelmente vai pensar em desistir da carreira. Mas lembre-se, esta fase vai passar.&lt;/p&gt;

&lt;p&gt;Esta iniciando na programação? Vai com calma, não queira aprender tudo em um só dia, mantenha seu foco principal em aprimorar a sua lógica. No começo tudo é muito difícil, mas não desista, estude e persista. Aos poucos você vai gravando os comandos automaticamente e vai se preocupar com outras coisas. E se tiver com tempo para reinventar a roda, vai la, e constrói da sua forma, o aprendizado é enorme.&lt;/p&gt;

&lt;p&gt;Em alguns momentos você vai se achar o melhor programador no planeta, após fazer uma função limpa e funcional. Em outros o pior, ao perceber que o seu colega, aquele logo ao seu lado, tem mais de 300 dias contribuídos ao ano no Github.&lt;/p&gt;

&lt;p&gt;Não lhe desejo um colega programador chato, um designer, tester ou um usuário. Pois você será considerado o “estraga sonhos” e possivelmente vai irritar-se facilmente com a infinidade de pedidos. Mas lembre-se, se tudo der errado, apenas não deixe o sujeito abusar. E se você tornar um excelente programador, não banque o dono da verdade, um dia você também foi um sobrinho.&lt;/p&gt;

&lt;p&gt;Se não conseguir fazer algo, por mais simples que pareça. Acredite, eu já fiz mais de 100 linhas em uma matriz, apenas por não conhecer um simples for. Seja compreensivo consigo mesmo e corra atrás. Valorize seu código e quando necessário discuta e critique pelo que é certo. Não tenha medo de perder seu emprego, geralmente a covardia levará fazer coisas erradas.&lt;/p&gt;

&lt;p&gt;Sempre vai ter alguém melhor que você em algo, não tenha medo ou vergonha de perguntar, por mais que alguém ria, você acabou de evoluir, agora a sensação de conhecimento só diminuiu, com a infinidade de linguagens, frameworks, conceitos, estruturas e métodos existentes.&lt;/p&gt;

&lt;p&gt;Com o aumento de opções, me sinto cada vez mais uma fraude. Sim, tenho a síndrome do impostor, você pode saber mais sobre &lt;a href=&#34;https://willianjusten.com.br/sou-bom-o-suficiente/&#34;&gt;aqui&lt;/a&gt;. Ainda não encontrei a fórmula para me livrar-me, mas espero que esse artigo indicado te ajude, assim como esta me ajudando.&lt;/p&gt;

&lt;p&gt;E antes que me esqueça, vou lhe deixar o melhor conselho, aprenda a dizer “não”. Em algumas ocasiões não será possível, mas com certeza salvará sua vida, por mais odiado que seja por outras pessoas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contraste de cores – Acessibilidade na web</title>
      <link>http://tableless.com.br/contraste-de-cores-acessibilidade-na-web/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/contraste-de-cores-acessibilidade-na-web/</guid>
      <description>

&lt;p&gt;Nesse post vou explicar uma das opções de como fazer um contraste de cores, existe diretrizes de acessibilidade da &lt;a href=&#34;https://www.w3.org/Translations/WCAG20-pt-PT/&#34; target=&#34;_blank&#34;&gt;WCAG 2.0&lt;/a&gt; que explica o nível aceitável de contraste de cores esperadas em um site, veja nesse &lt;a href=&#34;https://www.w3.org/TR/WCAG20/#visual-audio-contrast&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;proposta&#34;&gt;Proposta&lt;/h2&gt;

&lt;p&gt;Criar um contraste de cores em três níveis (Branco, Preto e Azul) usando HTML5, CSS3, Javascript (Puro), Node e o Cookie do navegado para guarda o contraste escolhido.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56600&#34; src=&#34;uploads/2016/12/html5-css-javascript-logos.png&#34; alt=&#34;html5-css-javascript-logos&#34; width=&#34;1267&#34; height=&#34;287&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;como-será-feito&#34;&gt;Como será feito&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Em uma página teremos quatro links em que o usuário vai escolher (Preto, branco, azul ou sem contraste).&lt;/li&gt;
&lt;li&gt;No evento de click vamos passar para o javascript um valor do atributo &amp;#8216;data-contraste&amp;#8217;.&lt;/li&gt;
&lt;li&gt;Vai ser adicionar na tag &amp;#8216;body&amp;#8217; um &amp;#8216;id&amp;#8217; para o CSS fazer toda a mágica de trocar as cores da página.&lt;/li&gt;
&lt;li&gt;Vai ser guardado no cookie a opção selecionada.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Veja como vai ficar;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-56620&#34; src=&#34;uploads/2016/12/contraste-de-cores.gif&#34; alt=&#34;contraste-de-cores&#34; width=&#34;484&#34; height=&#34;264&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Então&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-56615&#34; src=&#34;uploads/2016/12/ThomasCook_tagline.jpg&#34; alt=&#34;ThomasCook_tagline_hori_cmyk&#34; width=&#34;479&#34; height=&#34;137&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html&#34;&gt;HTML&lt;/h2&gt;

&lt;p&gt;O HTML para esse tipo de projeto é de extrema necessidade ser no mínimo validado pelo &lt;a href=&#34;https://validator.w3.org/&#34;&gt;W3C&lt;/a&gt; e ter nível &amp;#8220;AAA&amp;#8221; em alguma ferramenta de análise de acessibilidade, no caso eu usei o &lt;a href=&#34;http://www.acessibilidade.gov.pt/accessmonitor/&#34;&gt;Accessmonitor&lt;/a&gt;, já usando a WCAG 2.0.&lt;/p&gt;

&lt;p&gt;A atenção na contrução do HTML vai determinar se o usuário acessível vai ter uma boa experiência no seu site ou não.&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-BR&#34;&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
 &amp;lt;title&amp;gt;Artigo contraste de cores&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;css/style.css&#34;&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;div class=&#34;row row-header&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;nav&amp;gt;
 &amp;lt;ul&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#content&#34; title=&#34;Ir para o Conteúdo&#34;&amp;gt;Ir para o Conteúdo&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; title=&#34;Ir para o Topo&#34;&amp;gt;Ir para o Topo&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#footer&#34; title=&#34;Ir para o Rodapé&#34;&amp;gt;Ir para o Rodapé&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;0&#34; title=&#34;Sem Contraste&#34;&amp;gt;Sem Contraste&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;1&#34; title=&#34;Contraste Branco&#34;&amp;gt;Contraste Branco&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;2&#34; title=&#34;Contraste Preto&#34;&amp;gt;Contraste Preto&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;3&#34; title=&#34;Contraste Azul&#34;&amp;gt;Contraste Azul&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/nav&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;!-- End - .container--&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;!-- End - .row--&amp;gt;
 &amp;lt;div class=&#34;row row-top&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;strong&amp;gt;Front End Developer&amp;lt;/strong&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;row row-banner&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;h1&amp;gt;Hi my names is &amp;lt;span&amp;gt;Orivelton&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;
 &amp;lt;img src=&#34;img/avatar.png&#34; alt=&#34;Avatar Front End&#34; class=&#34;avatar&#34;&amp;gt;
 &amp;lt;img src=&#34;img/avatar-preto.png&#34; alt=&#34;Oculos do avatar&#34; class=&#34;oculos&#34;&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;row row-content&#34;&amp;gt;
 &amp;lt;article class=&#34;container&#34; id=&#34;content&#34;&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Html5&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Css3&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Javascript&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Typescript&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/article&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;footer id=&#34;footer&#34;&amp;gt;
 Copyright (c) 2016 Copyright Holder All Rights Reserved.
 &amp;lt;/footer&amp;gt;
 &amp;lt;script type=&#34;text/javascript&#34; src=&#34;js/contraste.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;p&gt;Umas das recomendações da WCAG 2.0 é que o primeiro link do site leve para o conteúdo principal, com isso você já ganha uns pontinhos na ferramenta de análise de acessibilidade.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;css&#34;&gt;CSS&lt;/h2&gt;

&lt;p&gt;O CSS é muito importante, se possível não usar CSS inline, a utilização de unidades relativas (EM, %,  REM) na escrita do CSS melhora a acessibilidade. Validar o CSS vai apontar erros que deixamos passar, para isso temos a ferramenta de análise da W3C o &lt;a href=&#34;https://jigsaw.w3.org/css-validator/&#34;&gt;CSS Validation Service&lt;/a&gt;. Não vou postar aqui o CSS, mas logo abaixo vou deixar o link do projeto completo ;).&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;javascript&#34;&gt;Javascript&lt;/h1&gt;

&lt;p&gt;Nesse post resolvi usar javascript puro, pois se trata de uma aplicação simples e não haveria a necessidade de usar JQuery ou alguma lib ou Framework e também eu amo javascript puro, acho bem desafiador \0/.&lt;/p&gt;

&lt;p&gt;Esse Javascript modularizei em três blocos.&lt;/p&gt;

&lt;h3 id=&#34;1-8211-a-escolha-do-contraste-no-click-do-link&#34;&gt;1 &amp;#8211; A escolha do contraste no click do link&lt;/h3&gt;

&lt;pre&gt;//Selecionando os links de contraste
var linksContraste = document.querySelectorAll(&#39;nav a[data-contraste]&#39;);

//Function click passando o valor do data-contraste para a function contraste setar o Id no body
linksContraste.forEach(linksContraste =&amp;gt; linksContraste.addEventListener(&#39;click&#39;, function() {
 var dataContraste = this.dataset.contraste; // pegando o data-contraste da tag &#39;a&#39;
 contraste(dataContraste); // Chamando a function contraste com um parâmetro passado pelo data-contraste da tag &#39;a&#39;
 }
));&lt;/pre&gt;

&lt;h3 id=&#34;2-8211-a-função-de-setar-o-contraste&#34;&gt;2 &amp;#8211; A Função de setar o contraste.&lt;/h3&gt;

&lt;pre&gt;function contraste(dataContraste) {
 var setId;
 //Verificação de qual contraste foi selecionado
 if (dataContraste == 1) {
 setId = &#39;contrasteBranco&#39;;
 } else if (dataContraste == 2) {
 setId = &#39;contrastePreto&#39;;
 } else if (dataContraste == 3) {
 setId = &#39;contrasteAzul&#39;;
 } else {
 setId = &#39;&#39;;
 }
 // setando o ID do contraste escolhido no body
 document.querySelector(&#34;body&#34;).setAttribute(&#34;id&#34;, setId);
 // Guardando o cookie do contraste
 document.cookie = &#34;contraste=&#34; + setId + &#34;&#34;;
}&lt;/pre&gt;

&lt;h3 id=&#34;3-8211-a-verificação-do-cookie-gravado&#34;&gt;3 &amp;#8211; A verificação do cookie gravado&lt;/h3&gt;

&lt;pre&gt;// Verificação do cookie
var cookieContrasteBranco = document.cookie.indexOf(&#39;contrasteBranco&#39;);
var cookieContrastePreto = document.cookie.indexOf(&#39;contrastePreto&#39;);
var cookieContrasteAzul = document.cookie.indexOf(&#39;contrasteAzul&#39;);

//Verificando o cookie setado anteriormente
var cookieTrue = &#39;&#39;;
if (cookieContrasteBranco != -1) {
 cookieTrue = 1;
} else if (cookieContrastePreto != -1) {
 cookieTrue = 2;
} else if (cookieContrasteAzul != -1) {
 cookieTrue = 3;
} else {
 cookieTrue = &#39;&#39;;
}
//Chamando a function contraste com o valor do cookie guardado
contraste(cookieTrue);&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;node-cookie&#34;&gt;Node + Cookie&lt;/h2&gt;

&lt;p&gt;Node? sim, usaremos o Node para subir um servidor, pois não da pra guardar cookie sem um servidor, vamos precisar usar o Node, mas é super simples.&lt;/p&gt;

&lt;p&gt;Não sabe usar? Não sabe o que é? tem um poste aqui muito bom que vai te dar o caminho das pedras, nesse &lt;a href=&#34;https://tableless.com.br/o-que-nodejs-primeiros-passos-com-node-js/&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No site &lt;a href=&#34;https://www.npmjs.com/package/http-server&#34;&gt;NPMJS &lt;/a&gt;temos um servidor em que iremos utilizar, abra seu Node e manda essa;&lt;/p&gt;

&lt;pre&gt;npm install http-server -g&lt;/pre&gt;

&lt;p&gt;Pronto, o resultado será esse;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56612&#34; src=&#34;uploads/2016/12/Capture.png&#34; alt=&#34;capture&#34; width=&#34;636&#34; height=&#34;48&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora navegando com o Node até a pasta do seu projeto;&lt;/p&gt;

&lt;pre&gt;http-server&lt;/pre&gt;

&lt;p&gt;Ok, você já tem um servidor no ar, utilize um dos endereços http listados e abra no seu navegador de preferência (&lt;del&gt;&lt;em&gt;Chrome&lt;/em&gt;&lt;/del&gt;);&lt;/p&gt;

&lt;pre&gt;&lt;img class=&#34;alignnone wp-image-56613&#34; src=&#34;uploads/2016/12/Capture-1.png&#34; alt=&#34;capture&#34; width=&#34;640&#34; height=&#34;134&#34; /&gt;&lt;/pre&gt;

&lt;p&gt;Já está tudo pronto, com o servidor no ar já podemos gravar no cookie a escolha do contraste selecionada pelo usuário, isso vai evitar que o usuário atualize a página e carregue a página sem o contraste escolhido.&lt;/p&gt;

&lt;p&gt;já podemos verificar o cookie guardado depois do click no link&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56617&#34; src=&#34;uploads/2016/12/Capture-2.png&#34; alt=&#34;capture&#34; width=&#34;931&#34; height=&#34;509&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Com esse valor guardado no cookie o passo 3 vai funcionar perfeitamente, setando o contraste escolhido anteriormente ao recarregar a página.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Veja o projeto completo no [Nesse post vou explicar uma das opções de como fazer um contraste de cores, existe diretrizes de acessibilidade da &lt;a href=&#34;https://www.w3.org/Translations/WCAG20-pt-PT/&#34; target=&#34;_blank&#34;&gt;WCAG 2.0&lt;/a&gt; que explica o nível aceitável de contraste de cores esperadas em um site, veja nesse &lt;a href=&#34;https://www.w3.org/TR/WCAG20/#visual-audio-contrast&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;proposta-1&#34;&gt;Proposta&lt;/h2&gt;

&lt;p&gt;Criar um contraste de cores em três níveis (Branco, Preto e Azul) usando HTML5, CSS3, Javascript (Puro), Node e o Cookie do navegado para guarda o contraste escolhido.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56600&#34; src=&#34;uploads/2016/12/html5-css-javascript-logos.png&#34; alt=&#34;html5-css-javascript-logos&#34; width=&#34;1267&#34; height=&#34;287&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;como-será-feito-1&#34;&gt;Como será feito&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Em uma página teremos quatro links em que o usuário vai escolher (Preto, branco, azul ou sem contraste).&lt;/li&gt;
&lt;li&gt;No evento de click vamos passar para o javascript um valor do atributo &amp;#8216;data-contraste&amp;#8217;.&lt;/li&gt;
&lt;li&gt;Vai ser adicionar na tag &amp;#8216;body&amp;#8217; um &amp;#8216;id&amp;#8217; para o CSS fazer toda a mágica de trocar as cores da página.&lt;/li&gt;
&lt;li&gt;Vai ser guardado no cookie a opção selecionada.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Veja como vai ficar;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-56620&#34; src=&#34;uploads/2016/12/contraste-de-cores.gif&#34; alt=&#34;contraste-de-cores&#34; width=&#34;484&#34; height=&#34;264&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Então&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-56615&#34; src=&#34;uploads/2016/12/ThomasCook_tagline.jpg&#34; alt=&#34;ThomasCook_tagline_hori_cmyk&#34; width=&#34;479&#34; height=&#34;137&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-1&#34;&gt;HTML&lt;/h2&gt;

&lt;p&gt;O HTML para esse tipo de projeto é de extrema necessidade ser no mínimo validado pelo &lt;a href=&#34;https://validator.w3.org/&#34;&gt;W3C&lt;/a&gt; e ter nível &amp;#8220;AAA&amp;#8221; em alguma ferramenta de análise de acessibilidade, no caso eu usei o &lt;a href=&#34;http://www.acessibilidade.gov.pt/accessmonitor/&#34;&gt;Accessmonitor&lt;/a&gt;, já usando a WCAG 2.0.&lt;/p&gt;

&lt;p&gt;A atenção na contrução do HTML vai determinar se o usuário acessível vai ter uma boa experiência no seu site ou não.&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-BR&#34;&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
 &amp;lt;title&amp;gt;Artigo contraste de cores&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;css/style.css&#34;&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;div class=&#34;row row-header&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;nav&amp;gt;
 &amp;lt;ul&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#content&#34; title=&#34;Ir para o Conteúdo&#34;&amp;gt;Ir para o Conteúdo&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; title=&#34;Ir para o Topo&#34;&amp;gt;Ir para o Topo&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#footer&#34; title=&#34;Ir para o Rodapé&#34;&amp;gt;Ir para o Rodapé&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;0&#34; title=&#34;Sem Contraste&#34;&amp;gt;Sem Contraste&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;1&#34; title=&#34;Contraste Branco&#34;&amp;gt;Contraste Branco&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;2&#34; title=&#34;Contraste Preto&#34;&amp;gt;Contraste Preto&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;3&#34; title=&#34;Contraste Azul&#34;&amp;gt;Contraste Azul&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/nav&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;!-- End - .container--&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;!-- End - .row--&amp;gt;
 &amp;lt;div class=&#34;row row-top&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;strong&amp;gt;Front End Developer&amp;lt;/strong&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;row row-banner&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;h1&amp;gt;Hi my names is &amp;lt;span&amp;gt;Orivelton&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;
 &amp;lt;img src=&#34;img/avatar.png&#34; alt=&#34;Avatar Front End&#34; class=&#34;avatar&#34;&amp;gt;
 &amp;lt;img src=&#34;img/avatar-preto.png&#34; alt=&#34;Oculos do avatar&#34; class=&#34;oculos&#34;&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;row row-content&#34;&amp;gt;
 &amp;lt;article class=&#34;container&#34; id=&#34;content&#34;&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Html5&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Css3&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Javascript&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Typescript&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/article&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;footer id=&#34;footer&#34;&amp;gt;
 Copyright (c) 2016 Copyright Holder All Rights Reserved.
 &amp;lt;/footer&amp;gt;
 &amp;lt;script type=&#34;text/javascript&#34; src=&#34;js/contraste.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;p&gt;Umas das recomendações da WCAG 2.0 é que o primeiro link do site leve para o conteúdo principal, com isso você já ganha uns pontinhos na ferramenta de análise de acessibilidade.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;css-1&#34;&gt;CSS&lt;/h2&gt;

&lt;p&gt;O CSS é muito importante, se possível não usar CSS inline, a utilização de unidades relativas (EM, %,  REM) na escrita do CSS melhora a acessibilidade. Validar o CSS vai apontar erros que deixamos passar, para isso temos a ferramenta de análise da W3C o &lt;a href=&#34;https://jigsaw.w3.org/css-validator/&#34;&gt;CSS Validation Service&lt;/a&gt;. Não vou postar aqui o CSS, mas logo abaixo vou deixar o link do projeto completo ;).&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;javascript-1&#34;&gt;Javascript&lt;/h1&gt;

&lt;p&gt;Nesse post resolvi usar javascript puro, pois se trata de uma aplicação simples e não haveria a necessidade de usar JQuery ou alguma lib ou Framework e também eu amo javascript puro, acho bem desafiador \0/.&lt;/p&gt;

&lt;p&gt;Esse Javascript modularizei em três blocos.&lt;/p&gt;

&lt;h3 id=&#34;1-8211-a-escolha-do-contraste-no-click-do-link-1&#34;&gt;1 &amp;#8211; A escolha do contraste no click do link&lt;/h3&gt;

&lt;pre&gt;//Selecionando os links de contraste
var linksContraste = document.querySelectorAll(&#39;nav a[data-contraste]&#39;);

//Function click passando o valor do data-contraste para a function contraste setar o Id no body
linksContraste.forEach(linksContraste =&amp;gt; linksContraste.addEventListener(&#39;click&#39;, function() {
 var dataContraste = this.dataset.contraste; // pegando o data-contraste da tag &#39;a&#39;
 contraste(dataContraste); // Chamando a function contraste com um parâmetro passado pelo data-contraste da tag &#39;a&#39;
 }
));&lt;/pre&gt;

&lt;h3 id=&#34;2-8211-a-função-de-setar-o-contraste-1&#34;&gt;2 &amp;#8211; A Função de setar o contraste.&lt;/h3&gt;

&lt;pre&gt;function contraste(dataContraste) {
 var setId;
 //Verificação de qual contraste foi selecionado
 if (dataContraste == 1) {
 setId = &#39;contrasteBranco&#39;;
 } else if (dataContraste == 2) {
 setId = &#39;contrastePreto&#39;;
 } else if (dataContraste == 3) {
 setId = &#39;contrasteAzul&#39;;
 } else {
 setId = &#39;&#39;;
 }
 // setando o ID do contraste escolhido no body
 document.querySelector(&#34;body&#34;).setAttribute(&#34;id&#34;, setId);
 // Guardando o cookie do contraste
 document.cookie = &#34;contraste=&#34; + setId + &#34;&#34;;
}&lt;/pre&gt;

&lt;h3 id=&#34;3-8211-a-verificação-do-cookie-gravado-1&#34;&gt;3 &amp;#8211; A verificação do cookie gravado&lt;/h3&gt;

&lt;pre&gt;// Verificação do cookie
var cookieContrasteBranco = document.cookie.indexOf(&#39;contrasteBranco&#39;);
var cookieContrastePreto = document.cookie.indexOf(&#39;contrastePreto&#39;);
var cookieContrasteAzul = document.cookie.indexOf(&#39;contrasteAzul&#39;);

//Verificando o cookie setado anteriormente
var cookieTrue = &#39;&#39;;
if (cookieContrasteBranco != -1) {
 cookieTrue = 1;
} else if (cookieContrastePreto != -1) {
 cookieTrue = 2;
} else if (cookieContrasteAzul != -1) {
 cookieTrue = 3;
} else {
 cookieTrue = &#39;&#39;;
}
//Chamando a function contraste com o valor do cookie guardado
contraste(cookieTrue);&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;node-cookie-1&#34;&gt;Node + Cookie&lt;/h2&gt;

&lt;p&gt;Node? sim, usaremos o Node para subir um servidor, pois não da pra guardar cookie sem um servidor, vamos precisar usar o Node, mas é super simples.&lt;/p&gt;

&lt;p&gt;Não sabe usar? Não sabe o que é? tem um poste aqui muito bom que vai te dar o caminho das pedras, nesse &lt;a href=&#34;https://tableless.com.br/o-que-nodejs-primeiros-passos-com-node-js/&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No site &lt;a href=&#34;https://www.npmjs.com/package/http-server&#34;&gt;NPMJS &lt;/a&gt;temos um servidor em que iremos utilizar, abra seu Node e manda essa;&lt;/p&gt;

&lt;pre&gt;npm install http-server -g&lt;/pre&gt;

&lt;p&gt;Pronto, o resultado será esse;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56612&#34; src=&#34;uploads/2016/12/Capture.png&#34; alt=&#34;capture&#34; width=&#34;636&#34; height=&#34;48&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora navegando com o Node até a pasta do seu projeto;&lt;/p&gt;

&lt;pre&gt;http-server&lt;/pre&gt;

&lt;p&gt;Ok, você já tem um servidor no ar, utilize um dos endereços http listados e abra no seu navegador de preferência (&lt;del&gt;&lt;em&gt;Chrome&lt;/em&gt;&lt;/del&gt;);&lt;/p&gt;

&lt;pre&gt;&lt;img class=&#34;alignnone wp-image-56613&#34; src=&#34;uploads/2016/12/Capture-1.png&#34; alt=&#34;capture&#34; width=&#34;640&#34; height=&#34;134&#34; /&gt;&lt;/pre&gt;

&lt;p&gt;Já está tudo pronto, com o servidor no ar já podemos gravar no cookie a escolha do contraste selecionada pelo usuário, isso vai evitar que o usuário atualize a página e carregue a página sem o contraste escolhido.&lt;/p&gt;

&lt;p&gt;já podemos verificar o cookie guardado depois do click no link&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56617&#34; src=&#34;uploads/2016/12/Capture-2.png&#34; alt=&#34;capture&#34; width=&#34;931&#34; height=&#34;509&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Com esse valor guardado no cookie o passo 3 vai funcionar perfeitamente, setando o contraste escolhido anteriormente ao recarregar a página.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Veja o projeto completo no ]&lt;a href=&#34;http://codepen.io/orivelton/pen/XNymQp&#34;&gt;6&lt;/a&gt; e no &lt;a href=&#34;https://github.com/orivelton10/contraste-de-cores&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Minha experiência com o CT (Centro de Treinamento)</title>
      <link>http://tableless.com.br/minha-experiencia-com-o-ct-centro-de-treinamento/</link>
      <pubDate>Sun, 22 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/minha-experiencia-com-o-ct-centro-de-treinamento/</guid>
      <description>&lt;p&gt;Meu nome é Danilo, tenho 25 anos, e moro em São Paulo. Antes de conhecer o projeto do CT , eu havia trabalhado pouco tempo como Front-end em uma empresa chamada Athos Informática. Minha experiência não foi uma das melhores, e acabou não dando muito certo. Porém, aconteceu algo muito bacana , quando eu fiquei disponível para o mercado de trabalho.&lt;/p&gt;

&lt;p&gt;Comecei a frequentar todos os Meetup&amp;#8217;s que eu podia, conversei com muitos Dev&amp;#8217;s da comunidade, e coloquei de fato a mão na massa. Certo dia fuçando o GitHub, descobri o projeto do &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;https://medium.com/trainingcenter/hello-world-conhe%C3%A7a-o-centro-de-treinamento-4a47a1230b0c&#34; target=&#34;_blank&#34;&gt;CT(Centro de Treinamento)&lt;/a&gt;   foi tudo muito lindo, era exatamente o que eu precisava, pensava comigo &amp;#8220;porra que oportunidade do caralho de criar algo da hora com alguém da comunidade.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A sementinha do capeta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vontade não me faltava, o que precisava mesmo era de coragem para encarar os fatos. Então, clonei o repositório, baixei pra minha máquina e fiquei lendo e relendo o README do projeto.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A decisão&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;De tanto que eu li, criei coragem e como recomendado, abri uma issue no Github e deixei minha BIO disponível para os mentores do CT.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56933&#34; src=&#34;uploads/2017/01/1-vpeNioZRCJN482Gy1rChhw.png&#34; alt=&#34;&#34; width=&#34;790&#34; height=&#34;517&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A resposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Depois de pouco tempo um cara muito gente boa o &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/9ccc2febef24&#34; target=&#34;_blank&#34;&gt;William Oliveira&lt;/a&gt; — me responde o seguinte:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56935&#34; src=&#34;uploads/2017/01/1-5uF9OA2mlkg_0hyuLd1prQ.png&#34; alt=&#34;&#34; width=&#34;775&#34; height=&#34;144&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Passaram-se 2 dias, e eu já imaginava que ninguém iria me adotar como pupilo. Hahaha!! Foi ai que apareceu um cara que eu já admirava nos bastidores há algum tempo.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Um pupilo foi adotado&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E eis que ele veio, demorou… Mas veio! haha o nome dele? Nada mais nada menos do que o querido &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/7af9a79d81d6&#34; target=&#34;_blank&#34;&gt;Wendell Adriel&lt;/a&gt;. Calorosamente ele disse:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56937&#34; src=&#34;uploads/2017/01/1-k7GFUhcUoRq7X77SaBPa7w.png&#34; alt=&#34;&#34; width=&#34;771&#34; height=&#34;319&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Vocês já devem imaginar como eu fiquei feliz de saber que fui adotado… Hahaha!!  No mesmo dia o Wendell  já foi se socializando via issue mesmo 🙂 veja:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56939&#34; src=&#34;uploads/2017/01/1-fWHtAnVYI2p6SOQQvSii4A.png&#34; alt=&#34;&#34; width=&#34;790&#34; height=&#34;151&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Dai ele me chamou no Slack e começamos a definir nossa rotina.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;A primeira abordagem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O primeiro contato foi bem tranquilo, ele pediu para me apresentar, falar sobre quais eram meus objetivos a curto, médio e longo prazo, e assim, definimos juntos uma rotina de criação de um projeto real.&lt;/p&gt;

&lt;p&gt;&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;Nosso projeto lindo (Pokémon — busque informações de seu pokémon favorito)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56940&#34; src=&#34;uploads/2017/01/1-zZ3F1dGnARKZpaGpZc-UIA.png&#34; alt=&#34;&#34; width=&#34;1126&#34; height=&#34;585&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O projeto foi arquitetado em cima dos meus objetivos , ele usa as tecnologias:&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li id=&#34;bf67&#34; class=&#34;graf graf--li graf-after--p&#34;&gt;
    Html5
  &lt;/li&gt;
  &lt;li id=&#34;525a&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    Css3
  &lt;/li&gt;
  &lt;li id=&#34;2fab&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    VanilhaJS
  &lt;/li&gt;
  &lt;li id=&#34;40ad&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    Ajax
  &lt;/li&gt;
  &lt;li id=&#34;54bc&#34; class=&#34;graf graf--li graf-after--li&#34;&gt;
    API Rest
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p id=&#34;0a9d&#34; class=&#34;graf graf--p graf-after--li&#34;&gt;
  O projeto ainda está em construção. No final vamos subir ele no Heroku pra vocês verem como ficou. Temos muito o que acrescentar ainda e nosso objetivo é aplicar mais tecnologia nele.
&lt;/p&gt;

&lt;p id=&#34;c918&#34; class=&#34;graf graf--p graf-after--p&#34;&gt;
  Você deve estar se perguntando mais foi só um projetinho que eles criaram? Nops! Estou empregado também! 🙂 Iniciei minha jornada em uma empresa incrível chamada @Amil , e ainda por cima, trabalho com uma pessoa fera a &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/f94ec1390498&#34; target=&#34;_blank&#34;&gt;Andréa Zambrana&lt;/a&gt;.
&lt;/p&gt;

&lt;p id=&#34;bd60&#34; class=&#34;graf graf--p graf-after--p&#34;&gt;
  Quero agradecer a todos os envolvidos no CT ,  e em especial ao meu Mentor e amigo &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/7af9a79d81d6&#34; target=&#34;_blank&#34;&gt;Wendell Adriel&lt;/a&gt;  pela paciência do dia-dia. 🙂
&lt;/p&gt;

&lt;p id=&#34;87ec&#34; class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  E o que te impede de procurar hoje mesmo um Mentor (a)?
&lt;/p&gt;

&lt;p class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  Você deseja ser um Mentor (a)?
&lt;/p&gt;

&lt;p class=&#34;graf graf--p graf-after--p graf--last&#34;&gt;
  Não perca tempo muitos pupilos estão esperando por você! xD
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Projeto Felix: O novo software de 3D da Adobe</title>
      <link>http://tableless.com.br/projeto-felix-o-novo-software-de-3d-da-adobe/</link>
      <pubDate>Sun, 18 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/projeto-felix-o-novo-software-de-3d-da-adobe/</guid>
      <description>&lt;p&gt;A Adobe liberou no dia 17/12/2016 o seu mais novo &lt;a href=&#34;http://www.adobe.com/br/products/project-felix.html#x&#34;&gt;software&lt;/a&gt;, nomeado de &lt;strong&gt;Felix&lt;/strong&gt;. Buscando aqueles que hoje utilizam 2D, mas pensam em partir para o 3D sem muita dificuldade, o software apresenta uma&lt;/p&gt;

&lt;p&gt;interface simples e amigável, seguindo os padrões da empresa.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;You already think in 3D. Now design in it.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56675&#34; src=&#34;uploads/2016/12/projectfelix-riverflow3-720x620.jpg&#34; alt=&#34;projectfelix-riverflow3-720x620&#34; width=&#34;720&#34; height=&#34;620&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O foco principal aparente é se utilizar dos atuais usuários da marca e chama-los para uma nova vibe, o 3D. Abranger usuários sem experiencia e com pouca disponibilidade de estudar a tecnologia a fundo. Em poucas palavras, o Felix é um mão na roda para iniciantes na área.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;No 3D experience? No problem.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Composite 3D and 2D assets into photo-realistic images without steep learning curves or complex workflows. Just drag and drop a 3D model, material, and a light into your scene. Then choose your background image. Felix automatically detects the horizon line and provides gridlines to help you align and place your model. Felix can even use the background image to generate the right lighting.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Prometendo tirar algumas barreiras do desenvolvimento 3D, ele utiliza um sistema de drag and drop(arrastar e soltar), além de possuir uma biblioteca para poder escolher dentre diversos modelos e materiais online. Ademais, o software possui um sistema para facilitar a iluminação e criação de environments(ambientes) realisticos.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56674&#34; src=&#34;uploads/2016/12/Capturar.png&#34; alt=&#34;capturar&#34; width=&#34;886&#34; height=&#34;517&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A ideia é abrir, arrastar e soltar, selecionar a iluminação, fundo e pronto. Sendo assim, o programa faz toda a configuração da iluminação e criação das grades.&lt;/p&gt;

&lt;div style=&#34;width: 640px;&#34; class=&#34;wp-video&#34;&gt;
  &lt;!--[if lt IE 9]&gt;&lt;![endif]--&gt;&lt;video class=&#34;wp-video-shortcode&#34; id=&#34;video-56670-1&#34; width=&#34;640&#34; height=&#34;360&#34; preload=&#34;metadata&#34; controls=&#34;controls&#34;&gt;&lt;source type=&#34;video/mp4&#34; src=&#34;http://images-tv.adobe.com/avp/vr/17da0fa7-490c-4daa-a14e-9507b290149a/24b26164-19d0-4a08-9ea1-f23901b86056/f8830b26-07bc-4d58-aa4f-79f1f697681b_20161021124416.960x540at1200_h264.mp4?_=1&#34; /&gt;
  
  &lt;a href=&#34;http://images-tv.adobe.com/avp/vr/17da0fa7-490c-4daa-a14e-9507b290149a/24b26164-19d0-4a08-9ea1-f23901b86056/f8830b26-07bc-4d58-aa4f-79f1f697681b_20161021124416.960x540at1200_h264.mp4&#34;&gt;http://images-tv.adobe.com/avp/vr/17da0fa7-490c-4daa-a14e-9507b290149a/24b26164-19d0-4a08-9ea1-f23901b86056/f8830b26-07bc-4d58-aa4f-79f1f697681b_20161021124416.960x540at1200_h264.mp4&lt;/a&gt;&lt;/video&gt;
&lt;/div&gt;

&lt;p&gt;Para concorrer e atrair os atuais usuários dos softwares mais utilizados como Maya, 3D Max, Blender, entre outros. O programa não se demonstra efetivo, haja vista que esses usuários tem um poderosíssimo poder comparado com o Felix. Entretanto, visando o foco principal da empresa(atrair usuários sem experiencia) a interface atrai e passa uma proposta de algo simples e fácil, trazendo um monte ideias para esses usuários.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56678&#34; src=&#34;uploads/2016/12/projectfelix-riverflow2-720x620.jpg&#34; alt=&#34;projectfelix-riverflow2-720x620&#34; width=&#34;720&#34; height=&#34;620&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Link para mais informações: &lt;a href=&#34;https://blogs.adobe.com/creativecloud/project-felix-now-available-for-download/&#34;&gt;Project Felix: Now Available for Download&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello World com React, do rascunho até o primeiro componente</title>
      <link>http://tableless.com.br/hello-world-com-react-do-rascunho-ate-o-primeiro-componente/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/hello-world-com-react-do-rascunho-ate-o-primeiro-componente/</guid>
      <description>

&lt;p&gt;Há muito tempo eu queria fazer um Hello World com React, mas nunca tinha tempo por que eu mudei de área há uns 3 anos, ficando mais na parte de gestão de produtos e times, deixando quase que totalmente o desenvolvimento e a escrita de código. Por isso, senti na pele o que os iniciantes sentem quando precisam fazer um simples Hello World de uma tecnologia nova. São tantos artigos falando coisas diferentes, usando setups diferentes, na sua maioria complexos e que não explicam as coisas com simplicidade.&lt;/p&gt;

&lt;p&gt;Na busca de conteúdo sobre ReactJS, encontrei uma série de fontes pela internet, que você pode conferir no final deste texto, além de um curso grátis, muito, mas muito bem feito pelo &lt;a href=&#34;http://jscasts.teachable.com/&#34;&gt;Matheus Lima no JSCasts&lt;/a&gt;. Esse capítulo baseado em todas essas fontes. Tentei abstrair toda as inutilidades que alguém não precisa aprender logo que está iniciando. Espero que tenha cumprido com o objetivo.&lt;/p&gt;

&lt;h2 id=&#34;conceitos-do-react-e-introdução&#34;&gt;Conceitos do React e Introdução&lt;/h2&gt;

&lt;p&gt;O React foi pensado em como podemos componentizar nossos elementos, de forma que eles sejam independentes, mas reutilizáveis. Pensa em um componente como se fosse um widget ou um módulo. Se ficar mais fácil, pense que um componente é um pedaço de HTML, CSS, JS e os poucos dados que irão popular esse pedaço do layout.&lt;/p&gt;

&lt;p&gt;Sem entrar na polêmica de modularização e componentização no JS, atualmente, nós organizamos na pior das hipóteses &amp;#8211; e mais comum também -, os componentes como partes separadas de códigos. Você pega um pedaço de código HTML, coloca numa determinada página, que é formatada com CSS e manipulada com JS. O código que estrutura, formata e manipula seu componente está separado nesses três arquivos de HTML, CSS e JS. No React, o conceito é mais simples, onde unificamos o HTML dentro do JS, o que no React chamamos de JSX.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/react-component.jpg&#34; alt=&#34;react-component&#34; width=&#34;1784&#34; height=&#34;1298&#34; class=&#34;aligncenter size-full wp-image-56272&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Perceba que na imagem acima &amp;#8211; &lt;a href=&#34;https://dribbble.com/shots/1262636-To-Do-Dashboard/attachments/172917&#34;&gt;peguei como exemplo daqui&lt;/a&gt; &amp;#8211; cada retângulo colorido tem um componente pai, com seus componentes internos, que chamamos de componentes filhos. Podemos, então, criar um componente chamado &lt;code&gt;navBar&lt;/code&gt; com um componente filho chamado &lt;code&gt;userInfo&lt;/code&gt;, que conterá as informações do usuário. O nosso componente &lt;strong&gt;pai&lt;/strong&gt;, guarda estado dos dados que usaremos nos componentes filhos. O &lt;strong&gt;pai&lt;/strong&gt; compartilha os dados com os filhos por meio de atributos. Nesse exemplo, a &lt;code&gt;navBar&lt;/code&gt; iria compartilhar as informações do usuário logado para o componente filho &lt;code&gt;userInfo&lt;/code&gt;. Esta hierarquia de pai e filho faz com que o gerenciamento de dados seja simples, por que nós sabemos exatamente onde os dados estarão, não causando confusão usando esses dados erroneamente em outros lugares.&lt;/p&gt;

&lt;p&gt;O JSX é como o ReactJS cria os componentes em JavaScript. Você vai escrever HTML (quase) normal dentro do próprio JS, o ReactJS, por sua vez, vai se encarregar de traduzir esse HTML para JavaScript, que vai renderizar um elemento no DOM. Se você tem o código &lt;code&gt;&amp;lt;h1&amp;gt;Titulo&amp;lt;/h1&amp;gt;&lt;/code&gt;, o JSX vai se transformar em &lt;code&gt;React.createElement(&#39;h1&#39;, null, &#39;Titulo&#39;);&lt;/code&gt; antes de ser executado pelo browser. Escrever com esse HTML do React (JSX), facilita a leitura e você diminui a curva de aprendizado.&lt;/p&gt;

&lt;p&gt;Você já deve ter ouvido sobre o &lt;strong&gt;Virtual DOM&lt;/strong&gt;. O Virtual DOM é a árvore de componentes que o ReactJS gera para que o browser renderize na tela. Pra melhorar a performance, o ReactJS gera todo o HTML (baseado em JSX e transformado em JavaScript) na memória antes de renderizar para o usuário. Além disso, ele fica vigiando esse Virtual DOM procurando por alterações. Quando algo é alterado, ele muda apenas o que foi alterado e não todo o HTML.&lt;/p&gt;

&lt;h2 id=&#34;setup-do-projeto&#34;&gt;Setup do projeto&lt;/h2&gt;

&lt;p&gt;Como todo o projeto, necessitamos fazer um setup inicial, preparando o ambiente e iniciando parte do código. Nesse setup vamos começar criando o projeto com NPM, depois vamos criar arquivos de configuração do Webpack e também o arquivo &lt;strong&gt;index.html&lt;/strong&gt;, que é onde vamos mostrar nossa App.&lt;/p&gt;

&lt;h3 id=&#34;npm&#34;&gt;NPM&lt;/h3&gt;

&lt;p&gt;Como gerenciador de pacotes, vamos usar o NPM. Por isso, abra seu terminal predileto e veja os comandos abaixo. Esses comandos vão criar uma pasta para o projeto (eu já estou na minha pasta publica, onde coloco meus projetos para serem acessados via localhost), depois eu inicio o NPM e aí instalo dois pacotes iniciais &lt;strong&gt;react&lt;/strong&gt; e &lt;strong&gt;react-dom&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ mkdir meu-projeto
$ npm install --save react react-dom
$ npm init # aperte enter em tudo que vier
&lt;/pre&gt;

&lt;p&gt;Agora, dentro da pasta &lt;strong&gt;meu-projeto&lt;/strong&gt; deve haver um &lt;strong&gt;package.json&lt;/strong&gt; que o NPM instalou. Vamos instalar agora o Webpack. O Webpack é o que vai juntar todos os nossos módulos, compilar nosso CSS e etc.&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ cd meu-projeto
$ npm install --save-dev webpack
&lt;/pre&gt;

&lt;p&gt;Nós vamos instalar o &lt;strong&gt;webpack&lt;/strong&gt; apenas em desenvolvimento, por que, obviamente vamos usar o código que ele gerar em produção. Mas vamos aproveitar para instalá-lo também globalmente, por que vamos precisar rodar o comando &lt;code&gt;webpack&lt;/code&gt; para gerar nosso bundle:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ npm install webpack -g
&lt;/pre&gt;

&lt;p&gt;Seu &lt;strong&gt;package.json&lt;/strong&gt; tem que ficar mais ou menos assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;{
  &#34;name&#34;: &#34;curso-react-matheus&#34;,
  &#34;version&#34;: &#34;1.0.0&#34;,
  &#34;description&#34;: &#34;&#34;,
  &#34;main&#34;: &#34;index.js&#34;,
  &#34;scripts&#34;: {
    &#34;test&#34;: &#34;echo \&#34;Error: no test specified\&#34; &amp;&amp; exit 1&#34;
  },
  &#34;author&#34;: &#34;&#34;,
  &#34;license&#34;: &#34;ISC&#34;,
  &#34;dependencies&#34;: {
    &#34;react&#34;: &#34;^15.3.2&#34;,
    &#34;react-dom&#34;: &#34;^15.3.2&#34;
  },
  &#34;devDependencies&#34;: {
    &#34;webpack&#34;: &#34;^1.13.2&#34;
  }
}
&lt;/pre&gt;

&lt;h3 id=&#34;config-do-webpack&#34;&gt;Config do Webpack&lt;/h3&gt;

&lt;p&gt;O webpack é um empacotador de código focado em módulos. Você pode ver com mais detalhes sobre o que é o webpack &lt;a href=&#34;http://tableless.com.br/introducao-ao-webpack/&#34;&gt;nesse artigo do Leo Cavalcante no Tableless&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Como já instalamos anteriormente o webpack com o NPM, vamos criar agora um &lt;strong&gt;webpack.config.js&lt;/strong&gt;. Aqui é onde vamos ter as configurações do Webpack. O Matheus, em seu vídeo, simplificou ao máximo as explicações que não ficasse confusa, tendo que explicar Redux, Flux, ES6 e etc, por isso, vamos fazer o mesmo aqui. Assim facilita seu aprendizado.&lt;/p&gt;

&lt;p&gt;O código do config do Webpack é esse aqui:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;module.exports = {
  entry: &#34;./app/App.js&#34;,
  output: {
    filename: &#34;public/bundle.js&#34;
  },
  module: {
    loaders: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        loader: &#39;babel&#39;,
        query: {
          presets: [&#39;react&#39;]
        }
      }
    ]
  }
}
&lt;/pre&gt;

&lt;p&gt;O Matheus explicou tim tim por tim tim cada uma dessas linhas no segundo vídeo do curso dele. Por enquanto, você só precisa saber o seguinte:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;entry: &amp;quot;./app/App.js&amp;quot;,&lt;/code&gt; vai ler o arquivo App.js, gerando um &lt;strong&gt;output&lt;/strong&gt; chamado &lt;strong&gt;bundle.js&lt;/strong&gt;. Aproveite para criar agora o &lt;strong&gt;App.js&lt;/strong&gt;, dentro de uma pasta &lt;strong&gt;app&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;O React usa o conceito de Loaders. Não vamos ver isso agora. Mas no bloco &lt;code&gt;loaders&lt;/code&gt; desse código, ele vai testar todos os arquivos &lt;strong&gt;.js&lt;/strong&gt;, menos a pasta &lt;strong&gt;node_modules&lt;/strong&gt;, usando o &lt;strong&gt;babel&lt;/strong&gt; para fazer o transpiler. Ali nos presets, estamos dizendo que vamos usar react. Se fossemos usar ES6 no código, nós colocaríamos também ali no chave &lt;code&gt;presets&lt;/code&gt;, para que o babel soubesse que ele também teria que pegar código ES6 para poder transpor para código conhecido.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Agora, para que o babel funcione, vamos instalá-lo também via NPM:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ npm install --save-dev babel-core babel-loader babel-preset-react
&lt;/pre&gt;

&lt;p&gt;E por enquanto, é isso que você precisa saber.&lt;/p&gt;

&lt;h3 id=&#34;index-html&#34;&gt;index.html&lt;/h3&gt;

&lt;p&gt;Todo os projetos React tem um &lt;strong&gt;index.html&lt;/strong&gt; que faz a conexão com o nosso código. Esse &lt;strong&gt;index.html&lt;/strong&gt; é onde o App vai aparecer e ele deve ficar dentro da pasta &lt;strong&gt;public&lt;/strong&gt;. Crie então uma pasta &lt;strong&gt;public&lt;/strong&gt; e dentro coloque o arquivo &lt;strong&gt;index.html&lt;/strong&gt;. O código é mais ou menos esse. Também tendo em mente a simplicidade da explicação. Não inserirmos nada de outro mundo aqui:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-br&#34;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
  &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div id=&#34;app&#34;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script src=&#34;bundle.js&#34;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;O div APP é onde vamos renderizar a aplicação. É quase que padrão usar o nome &lt;code&gt;app&lt;/code&gt; ali. Mas você pode colocar qualquer outra coisa se quiser.&lt;/p&gt;

&lt;p&gt;Depois chamamos o JavaScript da nossa app, que vai estar tudo contido num arquivo só, que as vezes se chama &lt;code&gt;all.js&lt;/code&gt;, outras &lt;code&gt;bundle.js&lt;/code&gt;, outros &lt;code&gt;app.js&lt;/code&gt;. Tanto faz. Vamos usar &lt;code&gt;bundle.js&lt;/code&gt;, só para não ficar diferente dos artigos que li e do vídeo que o Matheus fez. Assim quando você for procurar mais referências, não fica confuso. E pronto.&lt;/p&gt;

&lt;h2 id=&#34;app-js-e-hello-world&#34;&gt;App.js e Hello World&lt;/h2&gt;

&lt;p&gt;Vamos começar a nossa App fazendo dois &lt;code&gt;require&lt;/code&gt;. O require vai importar para nosso código o &lt;strong&gt;react&lt;/strong&gt; e o &lt;strong&gt;react-dom&lt;/strong&gt; que instalamos aquela hora com NPM. Abra seu &lt;strong&gt;App.js&lt;/strong&gt; e escreva:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var React = require(&#39;react&#39;); // importa a lib react
var reactDOM = require(&#39;react-dom&#39;); // importa a lib react-dom
&lt;/pre&gt;

&lt;p&gt;Com esses dois pacotes importados, vamos agora colocar um código inicial. Nesse código vamos usar o &lt;code&gt;reactDOM&lt;/code&gt;, que vai pegar nosso código HTML escrito em JSX e jogar naquele div com id &lt;code&gt;app&lt;/code&gt; que fizemos no &lt;strong&gt;index.html&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var React = require(&#39;react&#39;); // importa a lib react
var reactDOM = require(&#39;react-dom&#39;); // importa a lib react-dom

reactDOM.render(&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;, document.getElementById(&#39;app&#39;));
&lt;/pre&gt;

&lt;p&gt;Pra ver funcionando, lá no seu terminal, rode o comando abaixo na pasta do projeto:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;$ webpack -w
&lt;/pre&gt;

&lt;p&gt;Ele vai gerar um bundle todas as vezes que você salvar algo no projeto. Você poderá acessar o &lt;strong&gt;index.html&lt;/strong&gt; pelo seu browser. No meu Mac eu acessei nesse endereço &lt;strong&gt;&lt;a href=&#34;http://localhost/curso-react-matheus/public/index.html&#34;&gt;http://localhost/curso-react-matheus/public/index.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O Tutorial puro do ReactJS sugere rodar um server. Exatamente por que eles não mostram o processo usando Webpack. Contudo, se quiser, segue aí as instruções. &lt;a href=&#34;https://github.com/reactjs/react-tutorial/#to-use&#34;&gt;Entre nesse link e rode um dos servidores&lt;/a&gt;. É só baixar um dos arquivos da linguagem que mais te agrada e rodar o comando para que o servidor rode.&lt;/p&gt;

&lt;p&gt;Crie uma pasta, baixe o arquivo preferencial e rode o comando correspondente. Ex.: &lt;code&gt;php server.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sugiro que fique conosco aqui no Webpack, assim você não se perde no processo. Nesse momento, você já deve ter rodado seu primeiro &lt;strong&gt;Hello World&lt;/strong&gt; com React, usando Webpack.&lt;/p&gt;

&lt;h3 id=&#34;importando-seu-primeiro-módulo&#34;&gt;Importando seu primeiro módulo&lt;/h3&gt;

&lt;p&gt;Para importar seu primeiro módulo, lá no &lt;strong&gt;App.js&lt;/strong&gt;, vamos criar uma variável que faz a importação do nosso componente. O arquivo desse componente estará na pasta &lt;strong&gt;components&lt;/strong&gt;, dentro da pasta &lt;strong&gt;App&lt;/strong&gt;. A estrutura de pastas fica assim:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/folders-react.png&#34; alt=&#34;folders-react&#34; width=&#34;650&#34; height=&#34;618&#34; class=&#34;aligncenter size-full wp-image-56270&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O seu App.js fica assim:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var React = require(&#39;react&#39;); // importa a lib react
var reactDOM = require(&#39;react-dom&#39;);// importa a lib react-dom

var MeuComponente = require(&#39;./components/MeuComponente.js’);

reactDOM.render(, document.getElementById(&#39;app&#39;));
&lt;/pre&gt;

&lt;h4 id=&#34;criando-seu-primeiro-componente&#34;&gt;Criando seu primeiro componente&lt;/h4&gt;

&lt;p&gt;Dentro da pasta &lt;strong&gt;components&lt;/strong&gt;, crie um arquivo chamado &lt;strong&gt;MeuComponente.js&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DISCLAIMER:&lt;/strong&gt; Como boas práticas e uma convenção comum nos projetos, nós colocamos o nome do arquivo do componente como sendo o mesmo nome do componente dentro do código. O nome do arquivo poderia ser diferente do nome do componente, mas aí o risco de bagunça seria enorme. Por isso, mantenha o nome do arquivo do componente sendo igual ao nome do componente no código.&lt;/p&gt;

&lt;p&gt;Voltando… dentro desse componente você vai escrever o código básico de todo o componente, que é o código que segue abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var React = require(&#39;react&#39;); // importa a lib react

var MeuComponente = React.createClass({
  render: function(){
    return (
      

&lt;h1&gt;
  teste
&lt;/h1&gt;
    );
  }
});

module.exports = MeuComponente;
&lt;/pre&gt;

&lt;p&gt;Todos os componentes react vão ter esse código. Primeiro ele importa a lib do React. Depois nós criamos uma classe (&lt;code&gt;React.createClass&lt;/code&gt;) onde construíremos nosso Componente. E aí, exportamos (&lt;code&gt;module.exports = MeuComponente&lt;/code&gt;) nosso Componente para importá-lo em outras partes do projeto, como fizemos no App.js.&lt;/p&gt;

&lt;p&gt;Dentro a classe do seu componente, perceba que há uma função &lt;strong&gt;render&lt;/strong&gt;. Essa função irá transformar o código JSX que estiver ali dentro no seu componente e irá renderizá-la na tela.&lt;/p&gt;

&lt;p&gt;Perceba uma curiosidade: Por que precisamos de um parênteses em volta do return? O JavaScript insere o sinal de ponto-virgula (;) automaticamente. Sem os parênteses, o JavaScript ignoraria as linhas seguintes e não retornaria valor algum. Se o JSX começa na mesma linha que o return, então os parênteses não são necessários.&lt;/p&gt;

&lt;p&gt;Se você for no seu browser e mudar o texto do seu componente, você vai perceber que nosso componente está funcionando! ;-D&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/gif-react.gif&#34; alt=&#34;gif-react&#34; width=&#34;1394&#34; height=&#34;878&#34; class=&#34;aligncenter size-full wp-image-56271&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Bom, vou ficando por aqui. O objetivo era apenas fazer um setup rápido, para você conseguir inserir pelo menos um componente e ver as coisas mudando na tela. Talvez as coisas tenham ficado mais claras para você agora, assim como ficaram para mim depois desse estudo. Sugiro que você veja os links abaixo para aprofundar mais seus estudos. Tem conteúdo em ingles e também conteúdo em português. Vá fundo!&lt;/p&gt;

&lt;h2 id=&#34;leitura-recomendada&#34;&gt;Leitura recomendada:&lt;/h2&gt;

&lt;p&gt;Algumas leituras eu perdi, outras estão por aí. Todos esses links me ajudaram a entender um bocado sobre o setup do React, seus módulos, inserir CSS, modularização e etc. Praticamente todos eles explicam as mesmas coisas, com palavras diferentes detalhes diferentes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://facebook.github.io/react/tutorial/tutorial.html&#34;&gt;Documentação do React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tutorialspoint.com/reactjs/reactjs_environment_setup.htm&#34;&gt;React Environment Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.andrewray.me/reactjs-for-stupid-people/&#34;&gt;React for Stupid People&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jamesknelson.com/learn-raw-react-no-jsx-flux-es6-webpack/&#34;&gt;Learn React by itsel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@jviereck/modularise-css-the-react-way-1e817b317b04&#34;&gt;Modularise CSS the React way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hugogiraudel.com/2015/06/18/styling-react-components-in-sass/&#34;&gt;Style React Components in SASS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://survivejs.com/react/advanced-techniques/styling-react/&#34;&gt;Style React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://buildwithreact.com/tutorial/components&#34;&gt;http://buildwithreact.com/tutorial/components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jscasts.teachable.com/&#34;&gt;Curso do Matheus Lima em Português&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hugobessa.com.br/2015/01/17/comecando-com-react/&#34;&gt;Começando com React &amp;#8211; Hugo Bessa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jackcallister.com/2015/01/05/the-react-quick-start-guide.html&#34;&gt;The React Quick Starter Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/danawoodman/9cfddb1a0c934a35f31a&#34;&gt;React Hello World Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tylermcginnis.com/react-js-tutorial-pt-1-a-comprehensive-guide-to-building-apps-with-react-js-8ce321b125ba#.wn4e2ymf3&#34;&gt;React.js Tutorial Pt 1: A Comprehensive Guide to Building Apps with React.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/react&#34;&gt;GitHub do projeto React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/tableless/organizando-uma-aplicação-com-react-5b8ea9075596#.3q8sxog55&#34;&gt;Organizando uma aplicação com React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@ignit.io/react-native-construindo-apps-nativos-com-javascript-parte-1-37af2fbcde84#.muc6c8dyv&#34;&gt;React Native — Construindo Apps Nativos com Javascript (parte 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fnando/react-starter-pack&#34;&gt;Starter Pack para React do Nando&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Construindo um firewall no WordPress – Parte 2</title>
      <link>http://tableless.com.br/construindo-um-firewall-no-wordpress-parte-2/</link>
      <pubDate>Mon, 26 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/construindo-um-firewall-no-wordpress-parte-2/</guid>
      <description>&lt;p&gt;Neste artigo de hoje iremos dar continuar com a série onde construímos um plugin de controle e monitoramento de acessos no WordPress, para controlarmos e impedirmos tentativas de login, ataques DDOS e outros eventos que possam vir a prejudicar nosso ambiente WordPress.&lt;/p&gt;

&lt;p&gt;Para quem ainda não leu o primeiro artigo comece pela &lt;a href=&#34;http://tableless.com.br/construindo-um-firewall-no-wordpress-parte-1/&#34;&gt;parte 1&lt;/a&gt; onde criamos a base do plugin e uma notificação por e-mail quando tivermos uma tentativa de login fracassada, nessa segunda parte iremos implementar um contador dessas tentativas e junto dele um bloqueio quando atingirmos um limite previamente configurado, para isso utilizaremos as funções: get_transient, set_transient e delete_transient&amp;#8230;&lt;/p&gt;

&lt;p&gt;Transitents no WordPress é um recurso muito interessante para guardarmos pares de chaves/valor que possam ser consultados posteriormente, não é o objetivo desse recurso o controle que iremos implementar, o correto seria fazer estes registros diretamente nos logs do servidor, porem para fins didáticos (e por muita gente utilizar cPanel e não ter acesso a escrita dos logs) iremos utilizar assim por hora 🙂&lt;/p&gt;

&lt;p&gt;nosso plugin atualizado fica assim:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt; &amp;lt;?php
/*
Plugin Name: WP Firewall
Description: Controle de segurança do WordPress
Version: 1.0
Author: Tableless
Author URI: http://tableless.com.br
*/
if (!class_exists(&#39;WP_Firewall&#39;)) { //caso a classe já não exista
 class WP_Firewall{ // declara o plugin WP_Firewall
 function WP_Firewall (){ //inicialização da classe: Declara uma ação apara quando tiver uma falha de login
 add_action(&#39;init&#39;, array($this, &#39;init&#39;));
 add_action(&#39;admin_init&#39;, array( $this , &#39;register_fields&#39; ) );

 add_action(&#39;wp_login&#39;, array($this, &#39;log&#39;));
 add_action(&#39;wp_login_failed&#39;, array($this, &#39;log_failed&#39;));
 }
 
 public function init( ) {
 $_LIMIT = get_option( &#39;firewall_login_limit&#39;, 10); //recebe a configuração
 $_COUNT = get_transient( &#39;log_failed_&#39;.$_SERVER[&#39;REMOTE_ADDR&#39;] ); //recebe o contador

 //faz o bloqueio
 if($_COUNT &amp;gt;= $_LIMIT):
 echo &#34;Ops!!! voce excedeu o limite de tentativas :(&#34;;
 exit;
 endif;
 }

 public function log( ) {
 //exclui o transient
 delete_transient( &#39;log_failed_&#39;.$_SERVER[&#39;REMOTE_ADDR&#39;] );
 }

 public function log_failed( $username ) {
 //recebe o número atual de tentativas do ip
 $_COUNT = get_transient( &#39;log_failed_&#39;.$_SERVER[&#39;REMOTE_ADDR&#39;] );

 //Ops.. Login falhou 🙂 o que fazer agora? 
 set_transient(&#39;log_failed_&#39;.$_SERVER[&#39;REMOTE_ADDR&#39;], $_COUNT + 1, 12 * HOUR_IN_SECONDS );

 //avisa por e-mail da tentativa de login
 @mail(get_option(&#39;admin_email&#39;), &#39;Login falhou :&#39;.$username, json_encode($_SERVER)); 
 }

 public function register_fields() {
 //registra o campo nas configurações gerais
 register_setting( &#39;general&#39;, &#39;firewall_login_limit&#39;, &#39;esc_attr&#39; );
 add_settings_field(
 &#39;firewall_login_limit&#39;,
 &#39;&amp;lt;label for=&#34;extra_blog_desc_id&#34;&amp;gt;Limite de tentativas no login&amp;lt;/label&amp;gt;&#39;,
 array( $this, &#39;fields_html&#39; ),
 &#39;general&#39;
 );
 } 
 public function fields_html() {
 $value = get_option( &#39;firewall_login_limit&#39;, 10);
 //imprime o campo nas configurações gerais
 echo &#39;&amp;lt;input type=&#34;number&#34; id=&#34;firewall_login_limit&#34; name=&#34;firewall_login_limit&#34; value=&#34;&#39; . esc_attr( $value ) . &#39;&#34; /&amp;gt;&#39;;
 } 
 }
 
 $WP_Firewall = new WP_Firewall();
}&lt;/pre&gt;

&lt;p&gt;Contador, bloqueio e notificação implementados, na parte 3  iremos fazer uso do &lt;a href=&#34;https://www.google.com/recaptcha/intro/index.html&#34;&gt;Google reCAPTCHA&lt;/a&gt; para melhorar nosso firewall&amp;#8230;&lt;/p&gt;

&lt;p&gt;até a próxima!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>10 sites gratuitos sobre tecnologia e empreendedorismo</title>
      <link>http://tableless.com.br/15-sites-gratuitos-que-cada-empreendedor-deve-visitar/</link>
      <pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/15-sites-gratuitos-que-cada-empreendedor-deve-visitar/</guid>
      <description>&lt;p&gt;Para ser um empreendedor bem sucedido significa que você precisa ter um monte de responsabilidades. No início, vai precisar servir café, abrir a porta, lavar privada, e até desenvolver, especialmente quando a sua empresa está apenas começando e você não tem funcionários suficientes para cobrir todas as áreas que você precisa.&lt;/p&gt;

&lt;p&gt;Aprender as novas habilidades necessárias para iniciar um novo negócio pode ser caro, mas, felizmente, a iniciativa é de graça, de alta qualidade, recursos educacionais on-line só tem continuado a crescer nos últimos anos. Abaixo estão alguns dos recursos disponíveis para aprender mais sobre marketing, empreendedorismo, gestão de negócios e muito mais.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.codecademy.com/&#34;&gt;Codecademy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Este já deve ser conhecido da maioria. Se você é novato, lá você vai conseguir aprender HTML, CSS, JavaScript, PHP e mais. Você pode salvar seu progresso com uma conta gratuita.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://academy.hubspot.com/&#34;&gt;HubSpot Academy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O programa de certificação gratuita oferece cursos sobre marketing, incluindo otimização de sites, landing pages etc. Essas habilidades são uma obrigação para os empreendedores de plantão que tentam fazer crescer o seu negócio e presença on-line.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://moz.com/&#34;&gt;Moz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Se você quer aprender a otimização de motores de busca para garantir que seu site é tão visível quanto possível, confira este tesouro de recursos do líder SEO, Moz. Além de ter a Moz Academia, há também webinars (ao vivo e gravados) e guias para iniciantes para SEO, mídia social e construção da ligação.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.learnvest.com/&#34;&gt;LearnVest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Os empresários mais bem sucedidos sabem como gerir o seu dinheiro, tanto a negócios e lado pessoal. Além de ter aulas de finanças extremamente acessíveis, LearnVest também oferece algumas das suas aulas de graça, como &amp;#8220;a construção de melhores Dinheiro Hábitos&amp;#8221; e &amp;#8220;como fazer um orçamento.&amp;#8221;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.edx.org/&#34;&gt;edX&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Um dos meus prediletos. Este site tem atualmente mais de 300 cursos sobre uma variedade de tópicos, incluindo &amp;#8220;Análise Financeira e Tomada de Decisão&amp;#8221; e &amp;#8220;Empreendedorismo 101: Quem é seu cliente?&amp;#8221;. Estes cursos não só cobrem os negócios em geral, mas também podem lhe ajudar a aprender mais habilidades que são aplicáveis na vida real.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.khanacademy.org/&#34;&gt;Khan Academy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Este site também é bem famoso. Foi criado para dar a todos o acesso à educação em matemática, ciência, arte, tecnologia e muito mais. Existem mais de 100.000 exercícios interativos para colocar sua educação para o uso prático. Mesmo que muitos dos cursos são voltados para estudantes do ensino médio, existem vários cursos que seria bom para qualquer um ter uma atualização sobre, impostos e contabilidade.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://ocw.mit.edu/&#34;&gt;MIT Open Courseware&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Estes são cursos presenciais ministrados no MIT e oferecidos gratuitamente no site para visualização e leitura a seu critério. A página de empreendedorismo, lista os cursos disponíveis que são benéficos para os novos empresários. Os cursos incluem &amp;#8220;Early Capital Estado&amp;#8221; e &amp;#8220;The Business Software.&amp;#8221;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.coursera.org/&#34;&gt;Coursera&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bem como do MIT Open Courseware, este site tem 114 parceiros educacionais que oferecem cursos gratuitos para quase 10 milhões de usuários. Um benefício para Coursera é que há cursos muito específicos que se encaixam perfeitamente em nichos específicos, tais como &amp;#8220;Gestão de Dados de Pesquisa Clínica&amp;#8221; da Universidade de Vanderbilt e &amp;#8220;Inovação para Empreendedores: Da idéia ao mercado&amp;#8221;, da Universidade de Maryland. Sua ampla rede de parceiros permite uma maior seleção.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.openculture.com/&#34;&gt;OpenCulture&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Este site não é uma plataforma educacional por si só, mas sim coleta e compartilha recursos livres de todo a web. Sua lista de 150 cursos de negócios online grátis é um ótimo recurso, pois oferece aulas a partir do iTunes U e outras lições em vídeo e áudio. O site também tem listas de audiobooks livres, cursos certificados e outros cursos on-line.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://alison.com/&#34;&gt;Alison&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Esta plataforma oferece cursos on-line gratuitos de alguns dos nomes mais conhecidos na internet hoje, incluindo Google, Microsoft e Macmillan. Com mais de 4 milhões de usuários e mais de 600 cursos já, que abrange temas como alfabetização econômica, desenvolvimento pessoal e habilidades de negócios / corporativos.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Programação funcional em Javascript. Implementando Curry e Compose, com bind e reduce.</title>
      <link>http://tableless.com.br/programacao-funcional-em-javascript-implementando-curry-e-compose-com-bind-e-reduce/</link>
      <pubDate>Wed, 29 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/programacao-funcional-em-javascript-implementando-curry-e-compose-com-bind-e-reduce/</guid>
      <description>

&lt;p&gt;Nos últimos tempos só se fala em programação funcional, seus benefícios, funções puras, dados imutáveis, composição de funções, etc.&lt;/p&gt;

&lt;p&gt;Atualmente temos diversas libs que auxiliam o javascript na missão de ser funcional, Lodash, Underscore e Ramda são uma delas. Então porque estarei falando do &lt;a href=&#34;https://github.com/concretesolutions/pareto.js&#34;&gt;Pareto.js&lt;/a&gt;? Simples como o Princípio de Pareto, a lib criada tem o objetivo de ser leve e resolver 80% dos seus problemas com 20% de código.&lt;/p&gt;

&lt;p&gt;Geralmente procuro aprender algo desmitificando a “mágica” por tras da implementação. Foi assim quando comecei a aprender Angular, e agora o mesmo está sendo aplicado à programação funcional. Por isso nesse post vamos avaliar as implementações de Curry e Compose do Pareto.js.&lt;/p&gt;

&lt;h3 id=&#34;curry-graf-h3-graf-after-p&#34;&gt;Curry {.graf&amp;ndash;h3.graf-after&amp;ndash;p}&lt;/h3&gt;

&lt;p class=&#34;graf-after--h3&#34;&gt;
  Curry é a ação de pegar uma função que receba múltiplos argumentos e transforma-la em uma cadeia de funções, em que cada uma receba somente um parâmetro.
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;const curry = (fn, ...args) =&amp;gt; {
    if (args.length === fn.length) {
        return fn(...args)
    }
    return curry.bind(this, fn, ...args)
}&lt;/pre&gt;

&lt;p&gt;Vamos agora ver o teste dessa função:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;describe(&#39;curry&#39;, () =&amp;gt; {
  it(&#39;returns the curried function&#39;, () =&amp;gt; {
      const add = (a, b) =&amp;gt; a + b

      expect(FunctionUtils.curry(add, 1, 2)).toBe(3)
      expect(FunctionUtils.curry(add)(1)(2)).toBe(3)
      expect(FunctionUtils.curry(add)(1, 2)).toBe(3)
      expect(FunctionUtils.curry(add, 1)(2)).toBe(3)
  })
})

&lt;/pre&gt;

&lt;p&gt;Para começarmos a desmitificar a mágica, temos duas perguntas a serem feitas:&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li&gt;
    Como a nossa função curry irá armazenar os parâmetros já passados?
  &lt;/li&gt;
  &lt;li&gt;
    O que o Function.prototype.bind() tem a ver com isso?
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;function-prototype-bind&#34;&gt;Function.prototype.bind()&lt;/h4&gt;

&lt;p&gt;Comumente usamos .bind() para passarmos para uma função um contexto para sua execução, porém nos esquecemos de algo importante, como dito na documentação do &lt;a href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&#34; rel=&#34;nofollow&#34;&gt;developer.mozilla.org&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Partial Functions&lt;/p&gt;

&lt;p&gt;The next simplest use of bind() is to make a function with pre-specified initial arguments. These arguments (if any) follow the provided this value and are then inserted at the start of the arguments passed to the target function…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&#34;graf-after--blockquote&#34;&gt;
  Resumindo:
&lt;/p&gt;&lt;p Um dos usos de bind() é construir uma função 

&lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;com argumentos iniciais pré-especificados&lt;/strong&gt;. Esses argumentos, serão passados após o valor de &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;&lt;em class=&#34;markup--em markup--p-em&#34;&gt;This&lt;/em&gt;&lt;/strong&gt; e &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;serão inseridos no inicio dos argumentos passados para a função de destino&lt;/strong&gt;…&lt;/p&gt; &lt;p Difícil de entender? Então vamos a mais um exemplo (em ES5 para que você possa abrir o &lt;em class=&#34;markup--em markup--p-em&#34;&gt;devtools &lt;/em&gt;e já testar).&lt;/p&gt; 

&lt;pre class=&#34;lang-javascript&#34;&gt;&#34;use strict&#34;;

function myNumbers(x, y, z){
  console.log(x);
  console.log(y);
  console.log(z);
}

var foo = myNumbers.bind(this, 1);
foo(); 
// 1
// undefined
// undefined

var bar = foo.bind(this, 2);
bar();
// 1
// 2
// undefined

var baz = bar.bind(this, 3);
baz();
//1
//2
//3
&lt;/pre&gt;

&lt;p&gt;Reparem que a função &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;myNumbers &lt;/strong&gt;espera três parâmetros, a cada vez que chamamos &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;.bind(this, val)&lt;/strong&gt;, a função retornada pelo método .bind() &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;automagicamente &lt;/strong&gt;guarda o argumento passado.&amp;lt;p E com isso chegamos à implementação do curry no pareto.js, que irá chamar curry.bind(this, fn, &amp;hellip;args), empilhando os parâmetros no&lt;/p&gt;

&lt;p&gt;&lt;em class=&#34;markup--em markup--p-em&#34;&gt;spread operator &amp;#8230;args &lt;/em&gt;até que a quantidade de argumentos seja a mesma que a função espera &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;(args.length === fn.length)&lt;/strong&gt;. Caso não tenha entendido o que é &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;&lt;em class=&#34;markup--em markup--p-em&#34;&gt;…args&lt;/em&gt;&lt;/strong&gt;&lt;em class=&#34;markup--em markup--p-em&#34;&gt;,&lt;/em&gt; dê uma lida em &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&#34; rel=&#34;nofollow&#34;&gt;&lt;em class=&#34;markup--em markup--p-em&#34;&gt;spread operator&lt;/em&gt;&lt;/a&gt;&lt;em class=&#34;markup--em markup--p-em&#34;&gt;.&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;

&lt;h3 id=&#34;compose-graf-h3-graf-after-p&#34;&gt;Compose {.graf&amp;ndash;h3.graf-after&amp;ndash;p}&lt;/h3&gt;

&lt;p class=&#34;graf-after--h3&#34;&gt;
  Como o próprio nome sugere, &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;&lt;em class=&#34;markup--em markup--p-em&#34;&gt;Compose &lt;/em&gt;&lt;/strong&gt;é construir funções mais complexas através de funções mais simples, compondo-as. Vamos à implementação no Pareto.js:
&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;const compose = (...fns) =&amp;gt; fns.reduce((f, g) =&amp;gt; (...args) =&amp;gt; f(g(...args)))

&lt;/pre&gt;

&lt;p&gt;Vamos ao teste dessa função:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;describe(&#39;compose&#39;, () =&amp;gt; {
    it(&#39;composes functions&#39;, () =&amp;gt; {
        const toUpperCase = x =&amp;gt; x.toUpperCase()
        const exclaim = x =&amp;gt; `${x}!`
        const moreExclaim = x =&amp;gt; `${x}!!`

        expect(FunctionUtils.compose(toUpperCase, exclaim)(&#39;test&#39;)).toBe(&#39;TEST!&#39;)
        expect(FunctionUtils.compose(toUpperCase, exclaim, moreExclaim)(&#39;test&#39;)).toBe(&#39;TEST!!!&#39;)
    })
})

&lt;/pre&gt;

&lt;p&gt;E assim temos uma pergunta:&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li&gt;
    O que Array.prototype.reduce() está fazendo aí no meio ?
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;array-prototype-reduce&#34;&gt;Array.prototype.reduce()&lt;/h4&gt;

&lt;p&gt;Em geral pensamos no .reduce() como um acumulador, porém somente no sentido de soma de valores e não de &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;composição&lt;/strong&gt;. Sabemos que o .reduce() aplica uma função de callback sobre um &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;acumulador&lt;/strong&gt;, varrendo &lt;strong class=&#34;markup--strong markup--p-strong&#34;&gt;todos os elementos do array&lt;/strong&gt;. Vamos começar a desconstrução do nosso compose:&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li&gt;
    Sabemos que ele recebe um array de funções como argumentos, através do spread operator …args;
  &lt;/li&gt;
  &lt;li&gt;
    A função de &lt;em class=&#34;markup--em markup--li-em&#34;&gt;callback &lt;/em&gt;do .reduce(), que será executada sobre cada item do nosso array, pode receber até 4 parâmetros, sendo eles: &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;&lt;em class=&#34;markup--em markup--li-em&#34;&gt;previousValue, currentValue, index, array&lt;/em&gt;&lt;/strong&gt;. Porém aqui só iremos utilizar os dois primeiros (&lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;&lt;em class=&#34;markup--em markup--li-em&#34;&gt;previousValue&lt;/em&gt;&lt;/strong&gt; e &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;&lt;em class=&#34;markup--em markup--li-em&#34;&gt;currentValue&lt;/em&gt;&lt;/strong&gt;). Lembrando que na primeira chamada à nossa função de callback, &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;&lt;em class=&#34;markup--em markup--li-em&#34;&gt;previousValue&lt;/em&gt; será o valor do primeiro elemento do array e &lt;em class=&#34;markup--em markup--li-em&#34;&gt;currentValue&lt;/em&gt; será o valor do elemento seguinte;&lt;/strong&gt;
  &lt;/li&gt;
  &lt;li&gt;
    A nossa função de &lt;em class=&#34;markup--em markup--li-em&#34;&gt;callback&lt;/em&gt; irá compor a função passada em &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;&lt;em class=&#34;markup--em markup--li-em&#34;&gt;previousValue&lt;/em&gt;&lt;/strong&gt; com a que está em &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;&lt;em class=&#34;markup--em markup--li-em&#34;&gt;currentValue&lt;/em&gt;&lt;/strong&gt;, adicionando na declaração da função que ela poderá receber &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;N&lt;/strong&gt; argumentos (…args). Resultando em &lt;strong class=&#34;markup--strong markup--li-strong&#34;&gt;&lt;em class=&#34;markup--em markup--li-em&#34;&gt;previousValue(currentValue(…args))&lt;/em&gt;.&lt;/strong&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;De acordo com o nosso testes, vamos observar os passos de execução em uma tabela:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-53670&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/04/compose-print.png&#34; alt=&#34;compose-print&#34; width=&#34;737&#34; height=&#34;83&#34; /&gt;&lt;/p&gt;

&lt;p&gt;E com isso temos o resultado da função mais interna (&lt;em class=&#34;markup--em markup--p-em&#34;&gt;moreExclaim&lt;/em&gt;) alimentando as funções mais externas (&lt;em class=&#34;markup--em markup--p-em&#34;&gt;exclaim&lt;/em&gt; e depois &lt;em class=&#34;markup--em markup--p-em&#34;&gt;toUpperCase&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;p E é isso pessoal. Espero que tenha ajudado à vocês a entenderem a relação de curry e compose com .bind() e .reduce(). Feedbacks são mais do que bem-vindos e incentivados. Até a proxima.&lt;/p&gt;

&lt;p&gt;Fontes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&#34;&gt;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[&lt;a href=&#34;https://medium.com/@matheusml/entendendo-programa%C3%A7%C3%A3o-funcional-em-javascript-de-uma-vez-c676489be08b#&#34;&gt;https://medium.com/@matheusml/entendendo-programa%C3%A7%C3%A3o-funcional-em-javascript-de-uma-vez-c676489be08b#&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/concretesolutions/pareto.js][2&#34;&gt;https://github.com/concretesolutions/pareto.js][2&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>EdgeHTML issue tracker</title>
      <link>http://tableless.com.br/edgehtml-issue-tracker/</link>
      <pubDate>Mon, 04 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/edgehtml-issue-tracker/</guid>
      <description>

&lt;p&gt;No Microsoft Edge Web Summit 2016, evento da empresa para falar mais sobre o seu mais novo browser e os seus motores EdgeHTML e o JavaScript Chakra, eles divulgaram o EdgeHTML issue tracker, que é uma espécie de bug log onde os desenvolvedores poderão cadastrar issues e bugs relacionadas ao browser Edge. Dessa forma, eles esperam que os engenheiros da Microsoft consigam ouvir melhor o feedback dos devs e também dos usuários.&lt;/p&gt;

&lt;p&gt;O legal é essa nova ferramenta foi desenhada para ficar integrada diretamente com o workflow dos engenheiros responsáveis pelo Edge. Isso quer dizer que eles conseguirão receber, priorizar e executar os bugs que o devs cadastrarem lá. Esse issue tracker permite que o usuário reporte ou procure issues, como problemas de renderização ou compatibilidade com os padrões web. Muito interessante, já que facilita a transparência entre Microsoft e desenvolvedores sobre o progresso dos bugs.&lt;/p&gt;

&lt;p&gt;Você pode ver o &lt;a href=&#34;http://issues.microsoftedge.com/&#34;&gt;EdgeHTML issue tracker aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A conferência está sendo &lt;a href=&#34;https://channel9.msdn.com/Events/WebPlatformSummit/edgesummit2016&#34;&gt;transmitida ao vivo pelo site Channel 9 desde as 12:30&lt;/a&gt; (meio-dia e meia) no horário de Brasília.&lt;/p&gt;

&lt;h2 id=&#34;acompanhe-o-que-está-rolando-logo-abaixo&#34;&gt;Acompanhe o que está rolando logo abaixo&lt;/h2&gt;

&lt;p&gt;&lt;a class=&#34;twitter-timeline&#34; href=&#34;https://twitter.com/hashtag/EdgeWebSummit&#34; data-widget-id=&#34;717034618919264256&#34;&gt;#EdgeWebSummit Tweets&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Escreva código conosco</title>
      <link>http://tableless.com.br/escreva-codigo-conosco/</link>
      <pubDate>Sun, 03 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/escreva-codigo-conosco/</guid>
      <description>&lt;p&gt;Durante muito tempo eu queria liberar o código do tema do Tableless para que a comunidade pudesse contribuir junto. Mas por falta de tempo e correria do dia a dia, isso nunca se concretizou, até hoje.&lt;/p&gt;

&lt;p&gt;Você já deve ter percebido que o design do site mudou. O &lt;a href=&#34;http://sauro.me&#34;&gt;Sauro&lt;/a&gt; fez um ótimo trabalho. A implementação do código foi feita por mim e não, não está bem feita. Fiquei meses para começar a escrever a primeira linha de código exatamente pelos mesmos motivos que citei acima. O Tableless é muito importante para mim e talvez também para a comunidade, por isso o site não pode ficar parado e esse é um dos motivos pelo qual você também pode ajudar agora.&lt;/p&gt;

&lt;p&gt;O &lt;a href=&#34;http://github.com/tableless/tableless&#34;&gt;código do projeto está aqui no GitHub&lt;/a&gt;, aberto pra todo mundo. Já existem algumas issues cadastradas para avisando de coisas que ainda faltam fazer. Quem quiser contribuir, já pode pegar uma das issues para resolver ou pode até cadastrar mais issues. Existem uma série de problemas para resolver, por exemplo performance. Você vai perceber que tem muita coisa pra melhorar no código do tema. Fique à vontade e por favor, contribua.&lt;/p&gt;

&lt;p&gt;Agora sim a frase &amp;#8220;O Tableless é feito para e pela comunidade de desenvolvimento web&amp;#8221; ganha mais força. Espero que com mais essa iniciativa, a comunidade possa crescer mais ainda e que outros devs tenham a oportunidade de contribuir também.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Por que inscrever seu site no prêmio de acessibilidade?</title>
      <link>http://tableless.com.br/por-que-inscrever-seu-site-no-premio-de-acessibilidade/</link>
      <pubDate>Fri, 04 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/por-que-inscrever-seu-site-no-premio-de-acessibilidade/</guid>
      <description>

&lt;p&gt;Tenho conversado com algumas pessoas que trabalham com desenvolvimento e tem belos sites que poderiam participar do &lt;a href=&#34;http://premio.ceweb.br/&#34;&gt;Prêmio Nacional de Acessibilidade na Web&lt;/a&gt;. Quando recomendo que inscrevam seu trabalho, ouço os mais diversos argumentos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Não tenho chance de ganhar&lt;/li&gt;
&lt;li&gt;Não tenho material para inscrever&lt;/li&gt;
&lt;li&gt;Meu site não é 100% acessível&lt;/li&gt;
&lt;li&gt;Não conheço todos os requisitos de acessibilidade&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Baseado nessas respostas, gostaria de elencar alguns bons motivos para que as pessoas sim, inscrevam seu site no prêmio:&lt;/p&gt;

&lt;h2 id=&#34;você-tem-chances-sim-de-ganhar&#34;&gt;Você tem chances sim de ganhar&lt;/h2&gt;

&lt;p&gt;O site inscrito passa por uma avaliação inicial e os inscritos recebem orientações para corrigir o código em tempo de uma nova avaliação. Muitas vezes os comentários apontam para simples correções. Com o site corrigido, as chances de ficar entre os finalistas aumenta consideravelmente.&lt;/p&gt;

&lt;h2 id=&#34;basta-descrever-as-boas-práticas-usadas-para-inscrever-um-projeto&#34;&gt;Basta descrever as boas práticas usadas para inscrever um projeto&lt;/h2&gt;

&lt;p&gt;Para inscrever um projeto web basta preencher um formulário com a URL do projeto e uma descrição das boas práticas utilizadas no desenvolvimento do site. Estruturação de cabeçalhos, textos alternativos, uso de ARIA e por ai vai. Você vai perceber que boa parte dessas boas práticas já são feitas de forma automática durante o desenvolvimento do projeto. Você não está &amp;#8220;incluindo acessibilidade&amp;#8221;. Ela já faz parte do processo de desenvolvimento.&lt;/p&gt;

&lt;h2 id=&#34;o-prêmio-não-é-um-selo-de-site-100-acessível&#34;&gt;O prêmio não é um selo de site 100% acessível&lt;/h2&gt;

&lt;p&gt;O objetivo do prêmio é reconhecer iniciativas que vão tornar a Web mais acessível. A premiação não é um selo e sim um reconhecimento pelo trabalho em tornar a Web mais acessível. Seu site pode não ser 100% acessível, mas ele pode ser melhor que boa parte dos sites. E pode ficar melhor ainda.&lt;/p&gt;

&lt;h2 id=&#34;o-site-será-avaliado-por-especialistas&#34;&gt;O site será avaliado por especialistas&lt;/h2&gt;

&lt;p&gt;Talvez a parte mais valiosa do prêmio na minha opinião. O site vai passar por uma bateria de avaliações feitas por mais de 20 especialistas em acessibilidade, usabilidade e padrões Web. Independente de classificar o site entre os finalistas, o relatório com os comentários da comissão que avalia o site é um ótimo material para promover mudanças que melhorem a acessibilidade do site. Esse documento é entregue somente para o responsável do site. Ninguém mais vai ter acesso a esse relatório.&lt;/p&gt;

&lt;h2 id=&#34;existe-muito-material-sobre-acessibilidade-na-web&#34;&gt;Existe muito material sobre acessibilidade na Web&lt;/h2&gt;

&lt;p&gt;Além da documentação do W3C, como as &lt;a href=&#34;https://www.w3.org/Translations/WCAG20-pt-br/&#34;&gt;WCAG 2.0 (em português)&lt;/a&gt; e &lt;a href=&#34;https://www.w3.org/TR/wai-aria/&#34;&gt;WAI-ARIA 1.0&lt;/a&gt;, existe muito conteúdo espalhado pela rede. Aqui no &lt;a href=&#34;http://tableless.com.br/?s=acessibilidade&#34;&gt;Tableless tem muito material sobre acessibilidade&lt;/a&gt;, além de artigos, palestras, tutoriais e vídeos espalhados pela rede.&lt;/p&gt;

&lt;h2 id=&#34;a-premiação&#34;&gt;A premiação&lt;/h2&gt;

&lt;p&gt;O prêmio é encerrado com uma bela premiação. Além de participar da cerimônia de premiação, divulgação e publicação das melhores práticas de acessibilidade, ganhar um &lt;strong&gt;prêmio de R$ 5.000,00&lt;/strong&gt; e um troféu de melhor projeto Web do ano não é nada mal.&lt;/p&gt;

&lt;p&gt;O prêmio tem uma função muito nobre: Aumentar a preocupação com a acessibilidade na Web nas mais diversas áreas. Nós, como desenvolvedores, temos um papel fundamental na mudança desse cenário de uma web cheia de barreiras para uma que seja inclusiva.&lt;/p&gt;

&lt;p&gt;As &lt;a href=&#34;http://premio.ceweb.br/inscricoes/&#34;&gt;inscrições são gratuitas e estão abertas&lt;/a&gt; até o mês de maio. Maiores informações, como categorias, premiação e regulamento podem ser acessadas na página do prêmio em &lt;a href=&#34;http://premio.ceweb.br/&#34;&gt;http://premio.ceweb.br/&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Diga olá ao TypeScript e adeus ao JavaScript</title>
      <link>http://tableless.com.br/diga-ola-ao-typescript-e-adeus-ao-javascript/</link>
      <pubDate>Mon, 14 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/diga-ola-ao-typescript-e-adeus-ao-javascript/</guid>
      <description>

&lt;p&gt;Acredito que este artigo tenha chamado a sua atenção pelo título. Como assim??? adeus ao JavaScript??? A linguagem que está bombando em 2015 (e claro, 2016!). Posso estar sendo um pouco ousado aqui, mas eu tenho em mente que, neste momento, o JavaScript para mim é agora &amp;#8220;linguagem de máquina&amp;#8221; ou o famoso bytecode. Porquê? Bom, você conhece um código javascript minificado+comprimido+&amp;#8221;esculachado&amp;#8221;&amp;#8230; Não estou retirando aqui toda a beleza do JavaScript, e consequente importância, mas na evolução que vem acontecendo a cada dia no mundo web, felizmente chegamos ao ponto que podemos tratar o javascript como uma linguagem tipada e semelhante ao c/java/php e derivados.&lt;/p&gt;

&lt;p&gt;Neste ponto entra uma questão pessoal. Ou você vai adorar TypeScript ou vai achar completamente inútil, já que a sua principal característica é trazer uma &amp;#8220;tipagem&amp;#8221; a linguagem, e no pacote uma forma de programar em javascript mais parecida com Java e suas vertentes. Se você gosta de tipar suas váriaveis e métodos, criar classes, interfaces, usar Orientação a Objetos, o TypeScript foi feito para você e, claro, pode dizer adeus ao JavaScript.&lt;/p&gt;

&lt;p&gt;Lembre-se que TypeScript está sendo usada extensivamente no novo framework Angular2, então se vc ainda não sabe o que é TypeScript, chegou o momento de conhecer.&lt;/p&gt;

&lt;h2 id=&#34;o-que-é-typescript&#34;&gt;O que é TypeScript?&lt;/h2&gt;

&lt;p&gt;O TypeScript possibilita que você escreva código JavaScript na forma que foi acostumado quando aprendeu Orientação a Objetos. Você lembra dessas aulas, em criar métodos que retornassem um valor com tipo definido, em criar classes e mais classes para o seu programa, em criar interfaces para desacoplar tudo que quisesse, entre diversas outras técnicas. Com TypeScript tudo isso é possível, porque no final ele pega o seu lindo código cheio de classes e transforma em JavaScript puro, no qual o browser vai compreender. No próprio site é definido que o TypeScript compila para JavaScript, o que é um termo tecnicamente errado &amp;#8211; mas cada vez mais aceito, dado que aquele código &amp;#8220;malucão&amp;#8221; em JavaScript pode ser encarado como código de máquina.&lt;/p&gt;

&lt;p&gt;No exemplo a seguir, criamos uma interface e uma classe, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;interface IComponent{
    getId() : string;
}

class Button implements IComponent{
    id:string;
    getId():string{
        return this.id;
    }
}&lt;/pre&gt;

&lt;p&gt;Este é um código 100% TypeScript que você pode criar em um editor de textos ou ide, no qual criamos uma interface chamada &lt;code&gt;IComponent&lt;/code&gt;e uma classe que chamamos de &lt;code&gt;Button&lt;/code&gt;. Esta classe implementa a interface e por isso o método &lt;code&gt;getId()&lt;/code&gt; deve ser criado. Se você salvar este arquivo como um arquivo javascript e adicionar em um documento HTML, nenhum &lt;strong&gt;browser&lt;/strong&gt; vai entender isso, quem sabe num futuro distante. Mas isso nao é um problema, pois o TypeScript possui um &amp;#8220;compilador&amp;#8221; que irá pegar o seu código e transformar em algo do tipo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var Button = (function () {
    function Button() {
    }
    Button.prototype.getId = function () {
        return this.id;
    };
    return Button;
})();&lt;/pre&gt;

&lt;p&gt;Este código feioso aí em cima é 100% javascript compreensível em qualquer navegador web. Tem gente que prefere escrever assim, vai entender né. Mas como essa mágica funciona? Vamos explicar a seguir.&lt;/p&gt;

&lt;h2 id=&#34;testando-o-typescript&#34;&gt;Testando o TypeScript&lt;/h2&gt;

&lt;p&gt;Abra uma nova aba no seu browser e acesse: &lt;a href=&#34;http://www.typescriptlang.org/Playground&#34;&gt;http://www.typescriptlang.org/Playground&lt;/a&gt;. O Playground é um pequeno editor TypeScript que, além de checar possíveis erros de sintaxe, também compila automaticamente o código para Javascript, no qual você pode testá-lo. Não omita o Playground no seu aprendizado, ele pode te ajudar muito, como na figura a seguir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/12/ts01.png&#34; alt=&#34;ts01&#34; width=&#34;856&#34; height=&#34;277&#34; class=&#34;alignleft size-full wp-image-52433&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Caso não queira utilizar o Playground, pode-se instalar o TypeScript no seu ambiente de desenvolvimento através do node. O comando a seguir deve ser compreensível para você:&lt;/p&gt;

&lt;pre class=&#34;lang-shell&#34;&gt;$ npm install typescript -g&lt;/pre&gt;

&lt;p&gt;Após instalar o TypeScript no ambiente, você pode usar o comando &lt;code&gt;tsc&lt;/code&gt; para compilar um arquivo que geralmente está na extensão &lt;code&gt;ts&lt;/code&gt; para &lt;code&gt;js&lt;/code&gt;. Por exemplo, crie o arquivo &lt;code&gt;script.ts&lt;/code&gt; com o código TypeScript descrito anteriormente e execute o seguinte comando:&lt;/p&gt;

&lt;pre class=&#34;lang-shell&#34;&gt;tsc --out script.js script.ts&lt;/pre&gt;

&lt;p&gt;Editores de texto como o Sublime Text, Atom, VS Code, também tem a capacidade de compilar o arquivo em JavaScript, bastando apenas adicionar plugins relativos ao TypeScript. O &lt;code&gt;VS Code&lt;/code&gt;, em particular, apresentou um bom comportamento frente aos outros, como pode-se perceber na imagem a seguir.&lt;/p&gt;

&lt;div id=&#34;attachment_52436&#34; style=&#34;width: 549px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/12/ts02.png&#34; alt=&#34;Visual Studio Code&#34; width=&#34;539&#34; height=&#34;639&#34; class=&#34;size-full wp-image-52436&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Visual Studio Code
  &lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;attachment_52438&#34; style=&#34;width: 566px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/12/ts03.png&#34; alt=&#34;Sublime Text 2.0.2&#34; width=&#34;556&#34; height=&#34;765&#34; class=&#34;size-full wp-image-52438&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Sublime Text 2.0.2
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Mas neste artigo vamos nos contentar com o TypeScript Playground, e deixe os editores para a sua escolha pessoal (fique a vontade em perguntar como configurar o TypeScript no Sublime, é um pouco mais trabalhoso).&lt;/p&gt;

&lt;p&gt;Agora que apresentamos o TypeScript e suas maravilhas, vamos compreender um pouco mais desta linguagem.&lt;/p&gt;

&lt;h2 id=&#34;tipos-de-variáveis&#34;&gt;Tipos de variáveis&lt;/h2&gt;

&lt;p&gt;Uma das funcionalidades do TypeScript é criar variáveis com tipos definidos, assim como é feito no Java.&lt;/p&gt;

&lt;h3 id=&#34;tipos-primitivos&#34;&gt;Tipos primitivos&lt;/h3&gt;

&lt;p&gt;Existem 3 tipos primitivos que podemos associar a uma variável. As variáveis são criadas através da palavra reservada &lt;code&gt;var&lt;/code&gt;, e o tipo é informado da seguinte forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var NOMDE_DA_VARIAVEL : TIPO = VALOR
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;boolean: Pode assumir os valores &lt;code&gt;true&lt;/code&gt; ou &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;number: Assume qualquer número, como inteiro ou ponto flutuante.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;string: Tipo texto, pode ser atribuído com aspas simples ou duplas.&lt;/p&gt;

&lt;h3 id=&#34;arrays&#34;&gt;Arrays&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Arrays no TS podem ser criados através de duas formas. A primeira delas, usa-se &lt;code&gt;[]&lt;/code&gt; na definição do tipo da variável, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var list:number[] = [1, 2, 3];
&lt;/pre&gt;

&lt;p&gt;A segunda é mais conhecida como &amp;#8220;generics&amp;#8221; e usa &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; para definir o tipo, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var list:Array&amp;lt;number&amp;gt; = [1,2,3];
&lt;/pre&gt;

&lt;p&gt;Pode-se usar tipos complexos na criação de arrays, como no exemplo a seguir.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Pessoa{
    nome:string;
    constructor(nome:string){
        this.nome = nome;
    }
    sayHello():string{
        return &#34;Hello, &#34; + this.nome;
    }
}

var fulano = new Pessoa(&#34;fulano&#34;);
var beltrano = new Pessoa(&#34;beltrano&#34;);

var pessoas:Pessoa[]= new Array();
pessoas.push(fulano);
pessoas.push(beltrano);

pessoas.forEach( (p:Pessoa)=&amp;gt;
    console.log(p.sayHello())
    );
&lt;/pre&gt;

&lt;p&gt;Neste exemplo, criamos uma classe chamada &lt;code&gt;Pessoa&lt;/code&gt;, adicionando a propriedade &lt;code&gt;nome&lt;/code&gt;, o método construtor e o método &lt;code&gt;sayHello&lt;/code&gt;. Depois, criamos duas variáveis &lt;code&gt;fulano&lt;/code&gt; e &lt;code&gt;beltrano&lt;/code&gt;, e adicionamos à variável &lt;code&gt;pessoas&lt;/code&gt;, que é um array de vaiáveis do tipo &lt;code&gt;Pessoa&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Após usar o método &lt;code&gt;push&lt;/code&gt; para adicionar as variáveis no array, usamos o método &lt;code&gt;forEach&lt;/code&gt; para percorrer cada item deste array e exibir uma mensagem no console do navegador.&lt;/p&gt;

&lt;h3 id=&#34;enum&#34;&gt;Enum&lt;/h3&gt;

&lt;p&gt;Enums são velhos conhecidos do C#, e usados como &amp;#8220;datatype&amp;#8221;, que podem definir um status por exemplo.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;enum Color {Red, Green, Blue};
var c: Color = Color.Green;
&lt;/pre&gt;

&lt;p&gt;ou&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;enum Color {Red = 1, Green = 2, Blue = 3};
var c: Color = Color.Green;
&lt;/pre&gt;

&lt;p&gt;Quando criamos um enum, usamos o &amp;#8220;poder&amp;#8221; da ide para que possamos programar de forma mais fácil, conforme a figura a seguir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/12/ts04.png&#34; alt=&#34;ts04&#34; width=&#34;697&#34; height=&#34;145&#34; class=&#34;alignleft size-full wp-image-52451&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;any&#34;&gt;Any&lt;/h3&gt;

&lt;p&gt;Uma variável do tipo &lt;code&gt;Any&lt;/code&gt; pode assumir qualquer valor.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var notSure: any = 4;
notSure = &#34;maybe a string instead&#34;;
notSure = false; // okay, definitely a boolean

var list:any[] = [1, true, &#34;free&#34;];
list[1] = 100;
&lt;/pre&gt;

&lt;h3 id=&#34;void&#34;&gt;Void&lt;/h3&gt;

&lt;p&gt;O &lt;code&gt;void&lt;/code&gt; é usado para determinar que um método não retorna nenhum valor, conforme o exemplo a seguir.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function warnUser(): void {
    alert(&#34;This is my warning message&#34;);
}
&lt;/pre&gt;

&lt;h2 id=&#34;classes&#34;&gt;Classes&lt;/h2&gt;

&lt;p&gt;O conceito de classes no TypeScript é o mesmo de uma classe em qualquer linguagem orientada a objetos. As classes no TypeScript seguem o padrão ECMAScript 6 que em teoria será o &amp;#8220;futuro&amp;#8221; do JavaScript. A classe possui uma sintaxe muito familiar com c#, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Greeter {
    greeting: string;
    constructor(message: string) {
        this.greeting = message;
    }
    greet() {
        return &#34;Hello, &#34; + this.greeting;
    }
}
var greeter = new Greeter(&#34;world&#34;);
&lt;/pre&gt;

&lt;p&gt;O construtor é definido pela palavra &lt;code&gt;constructor&lt;/code&gt;. Métodos não necessitam da palavra &lt;code&gt;function&lt;/code&gt;, bastando apenas usar ``Acredito que este artigo tenha chamado a sua atenção pelo título. Como assim??? adeus ao JavaScript??? A linguagem que está bombando em 2015 (e claro, 2016!). Posso estar sendo um pouco ousado aqui, mas eu tenho em mente que, neste momento, o JavaScript para mim é agora &amp;#8220;linguagem de máquina&amp;#8221; ou o famoso bytecode. Porquê? Bom, você conhece um código javascript minificado+comprimido+&amp;#8221;esculachado&amp;#8221;&amp;#8230; Não estou retirando aqui toda a beleza do JavaScript, e consequente importância, mas na evolução que vem acontecendo a cada dia no mundo web, felizmente chegamos ao ponto que podemos tratar o javascript como uma linguagem tipada e semelhante ao c/java/php e derivados.&lt;/p&gt;

&lt;p&gt;Neste ponto entra uma questão pessoal. Ou você vai adorar TypeScript ou vai achar completamente inútil, já que a sua principal característica é trazer uma &amp;#8220;tipagem&amp;#8221; a linguagem, e no pacote uma forma de programar em javascript mais parecida com Java e suas vertentes. Se você gosta de tipar suas váriaveis e métodos, criar classes, interfaces, usar Orientação a Objetos, o TypeScript foi feito para você e, claro, pode dizer adeus ao JavaScript.&lt;/p&gt;

&lt;p&gt;Lembre-se que TypeScript está sendo usada extensivamente no novo framework Angular2, então se vc ainda não sabe o que é TypeScript, chegou o momento de conhecer.&lt;/p&gt;

&lt;h2 id=&#34;o-que-é-typescript-1&#34;&gt;O que é TypeScript?&lt;/h2&gt;

&lt;p&gt;O TypeScript possibilita que você escreva código JavaScript na forma que foi acostumado quando aprendeu Orientação a Objetos. Você lembra dessas aulas, em criar métodos que retornassem um valor com tipo definido, em criar classes e mais classes para o seu programa, em criar interfaces para desacoplar tudo que quisesse, entre diversas outras técnicas. Com TypeScript tudo isso é possível, porque no final ele pega o seu lindo código cheio de classes e transforma em JavaScript puro, no qual o browser vai compreender. No próprio site é definido que o TypeScript compila para JavaScript, o que é um termo tecnicamente errado &amp;#8211; mas cada vez mais aceito, dado que aquele código &amp;#8220;malucão&amp;#8221; em JavaScript pode ser encarado como código de máquina.&lt;/p&gt;

&lt;p&gt;No exemplo a seguir, criamos uma interface e uma classe, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;interface IComponent{
    getId() : string;
}

class Button implements IComponent{
    id:string;
    getId():string{
        return this.id;
    }
}&lt;/pre&gt;

&lt;p&gt;Este é um código 100% TypeScript que você pode criar em um editor de textos ou ide, no qual criamos uma interface chamada &lt;code&gt;IComponent&lt;/code&gt;e uma classe que chamamos de &lt;code&gt;Button&lt;/code&gt;. Esta classe implementa a interface e por isso o método &lt;code&gt;getId()&lt;/code&gt; deve ser criado. Se você salvar este arquivo como um arquivo javascript e adicionar em um documento HTML, nenhum &lt;strong&gt;browser&lt;/strong&gt; vai entender isso, quem sabe num futuro distante. Mas isso nao é um problema, pois o TypeScript possui um &amp;#8220;compilador&amp;#8221; que irá pegar o seu código e transformar em algo do tipo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var Button = (function () {
    function Button() {
    }
    Button.prototype.getId = function () {
        return this.id;
    };
    return Button;
})();&lt;/pre&gt;

&lt;p&gt;Este código feioso aí em cima é 100% javascript compreensível em qualquer navegador web. Tem gente que prefere escrever assim, vai entender né. Mas como essa mágica funciona? Vamos explicar a seguir.&lt;/p&gt;

&lt;h2 id=&#34;testando-o-typescript-1&#34;&gt;Testando o TypeScript&lt;/h2&gt;

&lt;p&gt;Abra uma nova aba no seu browser e acesse: &lt;a href=&#34;http://www.typescriptlang.org/Playground&#34;&gt;http://www.typescriptlang.org/Playground&lt;/a&gt;. O Playground é um pequeno editor TypeScript que, além de checar possíveis erros de sintaxe, também compila automaticamente o código para Javascript, no qual você pode testá-lo. Não omita o Playground no seu aprendizado, ele pode te ajudar muito, como na figura a seguir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/12/ts01.png&#34; alt=&#34;ts01&#34; width=&#34;856&#34; height=&#34;277&#34; class=&#34;alignleft size-full wp-image-52433&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Caso não queira utilizar o Playground, pode-se instalar o TypeScript no seu ambiente de desenvolvimento através do node. O comando a seguir deve ser compreensível para você:&lt;/p&gt;

&lt;pre class=&#34;lang-shell&#34;&gt;$ npm install typescript -g&lt;/pre&gt;

&lt;p&gt;Após instalar o TypeScript no ambiente, você pode usar o comando &lt;code&gt;tsc&lt;/code&gt; para compilar um arquivo que geralmente está na extensão &lt;code&gt;ts&lt;/code&gt; para &lt;code&gt;js&lt;/code&gt;. Por exemplo, crie o arquivo &lt;code&gt;script.ts&lt;/code&gt; com o código TypeScript descrito anteriormente e execute o seguinte comando:&lt;/p&gt;

&lt;pre class=&#34;lang-shell&#34;&gt;tsc --out script.js script.ts&lt;/pre&gt;

&lt;p&gt;Editores de texto como o Sublime Text, Atom, VS Code, também tem a capacidade de compilar o arquivo em JavaScript, bastando apenas adicionar plugins relativos ao TypeScript. O &lt;code&gt;VS Code&lt;/code&gt;, em particular, apresentou um bom comportamento frente aos outros, como pode-se perceber na imagem a seguir.&lt;/p&gt;

&lt;div id=&#34;attachment_52436&#34; style=&#34;width: 549px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/12/ts02.png&#34; alt=&#34;Visual Studio Code&#34; width=&#34;539&#34; height=&#34;639&#34; class=&#34;size-full wp-image-52436&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Visual Studio Code
  &lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;attachment_52438&#34; style=&#34;width: 566px&#34; class=&#34;wp-caption alignleft&#34;&gt;
  &lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/12/ts03.png&#34; alt=&#34;Sublime Text 2.0.2&#34; width=&#34;556&#34; height=&#34;765&#34; class=&#34;size-full wp-image-52438&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Sublime Text 2.0.2
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Mas neste artigo vamos nos contentar com o TypeScript Playground, e deixe os editores para a sua escolha pessoal (fique a vontade em perguntar como configurar o TypeScript no Sublime, é um pouco mais trabalhoso).&lt;/p&gt;

&lt;p&gt;Agora que apresentamos o TypeScript e suas maravilhas, vamos compreender um pouco mais desta linguagem.&lt;/p&gt;

&lt;h2 id=&#34;tipos-de-variáveis-1&#34;&gt;Tipos de variáveis&lt;/h2&gt;

&lt;p&gt;Uma das funcionalidades do TypeScript é criar variáveis com tipos definidos, assim como é feito no Java.&lt;/p&gt;

&lt;h3 id=&#34;tipos-primitivos-1&#34;&gt;Tipos primitivos&lt;/h3&gt;

&lt;p&gt;Existem 3 tipos primitivos que podemos associar a uma variável. As variáveis são criadas através da palavra reservada &lt;code&gt;var&lt;/code&gt;, e o tipo é informado da seguinte forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var NOMDE_DA_VARIAVEL : TIPO = VALOR
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;boolean: Pode assumir os valores &lt;code&gt;true&lt;/code&gt; ou &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;number: Assume qualquer número, como inteiro ou ponto flutuante.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;string: Tipo texto, pode ser atribuído com aspas simples ou duplas.&lt;/p&gt;

&lt;h3 id=&#34;arrays-1&#34;&gt;Arrays&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Arrays no TS podem ser criados através de duas formas. A primeira delas, usa-se &lt;code&gt;[]&lt;/code&gt; na definição do tipo da variável, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var list:number[] = [1, 2, 3];
&lt;/pre&gt;

&lt;p&gt;A segunda é mais conhecida como &amp;#8220;generics&amp;#8221; e usa &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; para definir o tipo, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var list:Array&amp;lt;number&amp;gt; = [1,2,3];
&lt;/pre&gt;

&lt;p&gt;Pode-se usar tipos complexos na criação de arrays, como no exemplo a seguir.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Pessoa{
    nome:string;
    constructor(nome:string){
        this.nome = nome;
    }
    sayHello():string{
        return &#34;Hello, &#34; + this.nome;
    }
}

var fulano = new Pessoa(&#34;fulano&#34;);
var beltrano = new Pessoa(&#34;beltrano&#34;);

var pessoas:Pessoa[]= new Array();
pessoas.push(fulano);
pessoas.push(beltrano);

pessoas.forEach( (p:Pessoa)=&amp;gt;
    console.log(p.sayHello())
    );
&lt;/pre&gt;

&lt;p&gt;Neste exemplo, criamos uma classe chamada &lt;code&gt;Pessoa&lt;/code&gt;, adicionando a propriedade &lt;code&gt;nome&lt;/code&gt;, o método construtor e o método &lt;code&gt;sayHello&lt;/code&gt;. Depois, criamos duas variáveis &lt;code&gt;fulano&lt;/code&gt; e &lt;code&gt;beltrano&lt;/code&gt;, e adicionamos à variável &lt;code&gt;pessoas&lt;/code&gt;, que é um array de vaiáveis do tipo &lt;code&gt;Pessoa&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Após usar o método &lt;code&gt;push&lt;/code&gt; para adicionar as variáveis no array, usamos o método &lt;code&gt;forEach&lt;/code&gt; para percorrer cada item deste array e exibir uma mensagem no console do navegador.&lt;/p&gt;

&lt;h3 id=&#34;enum-1&#34;&gt;Enum&lt;/h3&gt;

&lt;p&gt;Enums são velhos conhecidos do C#, e usados como &amp;#8220;datatype&amp;#8221;, que podem definir um status por exemplo.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;enum Color {Red, Green, Blue};
var c: Color = Color.Green;
&lt;/pre&gt;

&lt;p&gt;ou&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;enum Color {Red = 1, Green = 2, Blue = 3};
var c: Color = Color.Green;
&lt;/pre&gt;

&lt;p&gt;Quando criamos um enum, usamos o &amp;#8220;poder&amp;#8221; da ide para que possamos programar de forma mais fácil, conforme a figura a seguir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/12/ts04.png&#34; alt=&#34;ts04&#34; width=&#34;697&#34; height=&#34;145&#34; class=&#34;alignleft size-full wp-image-52451&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;any-1&#34;&gt;Any&lt;/h3&gt;

&lt;p&gt;Uma variável do tipo &lt;code&gt;Any&lt;/code&gt; pode assumir qualquer valor.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;var notSure: any = 4;
notSure = &#34;maybe a string instead&#34;;
notSure = false; // okay, definitely a boolean

var list:any[] = [1, true, &#34;free&#34;];
list[1] = 100;
&lt;/pre&gt;

&lt;h3 id=&#34;void-1&#34;&gt;Void&lt;/h3&gt;

&lt;p&gt;O &lt;code&gt;void&lt;/code&gt; é usado para determinar que um método não retorna nenhum valor, conforme o exemplo a seguir.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function warnUser(): void {
    alert(&#34;This is my warning message&#34;);
}
&lt;/pre&gt;

&lt;h2 id=&#34;classes-1&#34;&gt;Classes&lt;/h2&gt;

&lt;p&gt;O conceito de classes no TypeScript é o mesmo de uma classe em qualquer linguagem orientada a objetos. As classes no TypeScript seguem o padrão ECMAScript 6 que em teoria será o &amp;#8220;futuro&amp;#8221; do JavaScript. A classe possui uma sintaxe muito familiar com c#, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Greeter {
    greeting: string;
    constructor(message: string) {
        this.greeting = message;
    }
    greet() {
        return &#34;Hello, &#34; + this.greeting;
    }
}
var greeter = new Greeter(&#34;world&#34;);
&lt;/pre&gt;

&lt;p&gt;O construtor é definido pela palavra &lt;code&gt;constructor&lt;/code&gt;. Métodos não necessitam da palavra &lt;code&gt;function&lt;/code&gt;, bastando apenas usar`&lt;code&gt;. Perceba que, no exemplo apresentado, não definimos visibilidade das propriedades da classe, nem o tipo de retorno do método&lt;/code&gt;greet`. É claro que podemos definir estes parâmetros, conforme o próximo exemplo.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Greeter {
    private greeting: string;
    constructor(message: string) {
        this.greeting = message;
    }
    public greet() : string {
        return &#34;Hello, &#34; + this.greeting;
    }
}

var greeter = new Greeter(&#34;world&#34;);
&lt;/pre&gt;

&lt;h3 id=&#34;visibilidade-de-métodos-e-propriedades&#34;&gt;Visibilidade de métodos e propriedades&lt;/h3&gt;

&lt;p&gt;Métodos e propriedades de uma classe podem assumir a visibilidade: private, public e protected.&lt;/p&gt;

&lt;h3 id=&#34;herança&#34;&gt;Herança&lt;/h3&gt;

&lt;p&gt;A herança entre uma classe e outra é definida pela palavra &lt;code&gt;extends&lt;/code&gt;. Pode-se sobrecarregar métodos e usar a palavra &lt;code&gt;super&lt;/code&gt; para chamar o método da classe pai, conforme o exemplo a seguir.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Animal {
    name:string;
    constructor(theName: string) { this.name = theName; }
    move(meters: number = 0) {
        alert(this.name + &#34; moved &#34; + meters + &#34;m.&#34;);
    }
}

class Snake extends Animal {
    constructor(name: string) { super(name); }
    move(meters = 5) {
        alert(&#34;Slithering...&#34;);
        super.move(meters);
    }
}

class Horse extends Animal {
    constructor(name: string) { super(name); }
    move(meters = 45) {
        alert(&#34;Galloping...&#34;);
        super.move(meters);
    }
}

var sam = new Snake(&#34;Sammy the Python&#34;);
var tom: Animal = new Horse(&#34;Tommy the Palomino&#34;);

sam.move();
tom.move(34);
&lt;/pre&gt;

&lt;p&gt;Neste exemplo usamos o &lt;code&gt;super&lt;/code&gt; da classe &lt;code&gt;Snake&lt;/code&gt; para chamar o método construtor da classe pai &lt;code&gt;Animal&lt;/code&gt;. Se isso não for claro para você, dê uma estudada em OO para que possa compreender melhor, pois estas características são da Orientação em Objetos como um todo, e não do TypeScript.&lt;/p&gt;

&lt;h2 id=&#34;accessors-ou-métodos-get-set&#34;&gt;Accessors (ou métodos get/set)&lt;/h2&gt;

&lt;p&gt;Os Accessors visam proteger as propriedades de uma classe, pois você já deve saber que expor propriedades de uma classe não é algo legal 🙂&lt;/p&gt;

&lt;p&gt;Os accessors do TypeScript são feitos pelas palavras &lt;code&gt;get&lt;/code&gt; e &lt;code&gt;set&lt;/code&gt;, e claro, deixe a sua propriedade como &lt;code&gt;private&lt;/code&gt;. Veja o exemplo a seguir.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Pessoa {
    private _password: string;

    get password(): string {
        return this._password;
    }
    
    set password(p : string) {
        if (p != &#34;123456&#34;) {
            this._password = p;
        }
        else {
            alert(&#34;Ei, senha não pode ser 123456&#34;);
        }
    }
}

var p = new Pessoa();
p.password = &#34;123456&#34;; //vai exibir o erro
&lt;/pre&gt;

&lt;h3 id=&#34;métodos-estáticos&#34;&gt;Métodos estáticos&lt;/h3&gt;

&lt;p&gt;É possível criar métodos estáticos definindo a palavra &lt;code&gt;static&lt;/code&gt; antes do método. Existem dezenas de aplicações para métodos estáticos, sendo uma delas não precisar instanciar uma classe, como no exemplo a seguir.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class SystemAlert{
    
    static alert(message:string):void{
        alert(message);
    }
    
    static warm (message:string):void{
        alert(&#34;Atenção: &#34; + message);
    }
    
    static error(message:string):void{
        alert(&#34;Erro: &#34; + message);
    }
    
}

SystemAlert.alert(&#34;Oi&#34;);
SystemAlert.error(&#34;Não foi possível conectar na base de dados&#34;);
&lt;/pre&gt;

&lt;h2 id=&#34;interfaces&#34;&gt;Interfaces&lt;/h2&gt;

&lt;p&gt;Uma interface define um contrato para a classe. A interface é criada da seguinte forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;interface Ponto{
 x: number;
 y: number;
 x: number;
}
&lt;/pre&gt;

&lt;p&gt;Para implementar a interface, usamos &lt;code&gt;implements&lt;/code&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Ponto3d implements Ponto{
   (aqui implementamos x,y,z)
}
&lt;/pre&gt;

&lt;h2 id=&#34;funções&#34;&gt;Funções&lt;/h2&gt;

&lt;p&gt;Vamos exemplificar algumas particularidades de uma função em TypeScript. A função pode ser criada fora de uma classe ou dentro, sendo as observações que faremos a seguir podem ser aplicadas em ambas.&lt;/p&gt;

&lt;p&gt;Tome nota apenas que, em uma classe, não precisamos usar a palavra &lt;code&gt;function&lt;/code&gt; para definir uma função, mas fora da classe precisamos.&lt;/p&gt;

&lt;h3 id=&#34;parâmetros-com-valores-padrão&#34;&gt;Parâmetros com valores padrão&lt;/h3&gt;

&lt;p&gt;Pode-se definir um valor padrão para um parâmetro de uma função da seguinte forma:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;function buildName(firstName: string, lastName : string = &#34;Smith&#34;) {
}
//ou
class Foo{
  buildName(firstName: string, lastName : string = &#34;Smith&#34;) {
  }
}
&lt;/pre&gt;

&lt;h3 id=&#34;parâmetros-opcionais&#34;&gt;Parâmetros opcionais&lt;/h3&gt;

&lt;p&gt;Use o caractere &lt;code&gt;?&lt;/code&gt; para definir um parâmetro opcional.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Foo{
  buildName(firstName: string, lastName? : string) {
     if (lastName){
           // blablabla
     }
  }
}
&lt;/pre&gt;

&lt;h3 id=&#34;parâmetros-rest&#34;&gt;Parâmetros REST&lt;/h3&gt;

&lt;p&gt;Pode-se repassar um array de valores diretamente para um parâmetro. É válido lembrar que este modo só pode ser usado no último parâmetro da sua função. Exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Foo{
 static alertName(firstName: string, ...restOfName: string[]) {
    alert(firstName + &#34; &#34; + restOfName.join(&#34; &#34;));
 }
}
Foo.alertName(&#34;Fulano&#34;,&#34;de&#34;,&#34;Tal&#34;);
&lt;/pre&gt;

&lt;h3 id=&#34;parâmetros-no-formato-json&#34;&gt;Parâmetros no formato JSON&lt;/h3&gt;

&lt;p&gt;Umas das maiores facilidades do Javascript é repassar parâmetros no formato JSON. Com TypeScript é possível utilizar este mesmo comportamento, conforme o exemplo a seguir.&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;class Ponto{
    
    private _x : number = 0;
    private _y : number = 0;
    private _z : number = 0;
    
    constructor( p: {x:number;y:number;z?:number;}){
        this._x = p.x;
        this._y = p.y;
        if (p.z)
            this._z = p.z;
    }
    
    is3d():boolean{
        return this._z!=0;
    }
    
}

var p1 = new Ponto({x:10,y:20});

alert(p1.is3d());
&lt;/pre&gt;

&lt;p&gt;Observe que no construtor da classe &lt;code&gt;Ponto&lt;/code&gt; criamos o parâmetro &lt;code&gt;p&lt;/code&gt; e na definição do seu tipo repassamos um objeto anônimo com três parâmetros, sendo que o parâmetro &lt;code&gt;z&lt;/code&gt; é opcional.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Neste artigo vimos algumas funcionalidades do TypeScript, sendo ainda existem diversos tópicos a serem abordados. Gostaria de lhe encorajar a testar esta nova linguagem, e caso tenha dúvidas, não deixe de comentar abaixo. Sugira também novos artigos sobre TypeScript, estaremos avaliando cada pedido!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>O perfil T-Shaped e o dev full-stack</title>
      <link>http://tableless.com.br/o-perfil-t-shaped-e-o-dev-full-stack/</link>
      <pubDate>Thu, 26 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/o-perfil-t-shaped-e-o-dev-full-stack/</guid>
      <description>&lt;p&gt;A Valve é uma das maiores empresas de games do mercado. Na verdade, como eles mesmos dizem, eles não são apenas uma empresa de games:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We’re an entertainment company. A software company. A platform company.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A cultura da Valve é uma das mais interessantes que existem. Pra começar não existe hierarquia, apostando totalmente em um formato autogerenciável. As mesas são totalmente móveis (sim, elas tem rodinhas), o funcionário escolhe o projeto no qual vai trabalhar e ele mesmo define e prioriza as suas tarefas. Se você quiser ler mais sobre a cultura da Valve, recomendo que leia &lt;a href=&#34;http://www.valvesoftware.com/company/Valve_Handbook_LowRes.pdf&#34;&gt;o livro que eles fizeram para novos funcionários&lt;/a&gt;. Esse livro, explica que eles valorizam um determinado tipo de pessoa, que é o que eles chamam de pessoa “&lt;strong&gt;T-shaped&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;As pessoas &lt;strong&gt;T-shaped&lt;/strong&gt; são profissionais que conhecem diversos assuntos de forma bem geral, não chegando a ser um profundo especialista (a parte de cima do T), mas também são experts em um campo de conhecimento específico (a parte vertical do T).&lt;/p&gt;

&lt;p&gt;A Valve diz que esse tipo de pessoa é muito importante para o sucesso da empresa. O motivo é simples: um expert que conhece apenas sobre um assunto, pode ter dificuldades para colaborar com o projeto como um todo. Já se a pessoa é alguém generalista que só conhece um pouco de tudo, então ela não acrescenta valor como indivíduo para o projeto. Logo, todos precisam ter os dois perfis, ampliando as possibilidade de colaboração para o produto e principalmente para o grupo como um todo.&lt;/p&gt;

&lt;p&gt;Se fôssemos aplicar isso para desenvolvimento web, estaríamos falando de um profissional &lt;strong&gt;full-stack&lt;/strong&gt;. Geralmente o mercado usa esse termo um pouco errado. Alguns lugares definem que um desenvolvedor full-stack é aquele back-end que entende de também de operações. Outros lugares definem o full-stack como sendo um back-end que também sabe front-end. As duas estão certas e erradas ao mesmo tempo. Veja: um profissional full-stack é aquele que entende razoavelmente bem todo o &lt;strong&gt;stack&lt;/strong&gt; que se usa em um determinado projeto. O stack de desenvolvimento é o conjunto de tecnologias utilizadas para fazer o projeto funcionar. Exemplo: Um site desenvolvido com HTML, CSS, JS, PHP com WordPress como CMS e MySQL como banco, rodando em um servidor Ubuntu 14 com NGINX e Jenkins como CI. Se você consegue colocar um projeto desses funcionando em produção, sozinho, você pode se chamar de &lt;strong&gt;full-stack&lt;/strong&gt;. E é claro que os stacks mudam de projeto par projeto. Logo, na verdade, um desenvolvedor pode não ser totalmente um &lt;strong&gt;full-stack&lt;/strong&gt; motherfucker. É muito difícil achar um cara que saiba programar todas as principais linguagens back-end, que saiba configurar e manter muito bem servidores web e que domine todos os sistemas de CI etc. Esses caras são moscas brancas.&lt;/p&gt;

&lt;p&gt;Se você quiser saber um pouco mais sobre essa história de dev full-stack, rolou uma thread interessante no twitter esses dias. Conheci pelo Lucas Mazza (esse podcast sensacional)[&lt;a href=&#34;http://developertea.com/&#34;&gt;http://developertea.com/&lt;/a&gt;]. O podcast é em inglês e nesse episódio específico, ele fala sobre &lt;a href=&#34;http://developertea.com/episodes/9281&#34;&gt;o que é exatamente um desenvolvedor full-stack&lt;/a&gt;. Vale a “ouvida”.&lt;/p&gt;

&lt;p&gt;Mais para frente escrevo mais sobre a organização que a Valve mantém dentro da empresa.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como funciona a Internet e a World Wide Web</title>
      <link>http://tableless.com.br/como-funciona-internet-e-world-wide-web/</link>
      <pubDate>Mon, 23 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/como-funciona-internet-e-world-wide-web/</guid>
      <description>

&lt;p&gt;Muitas pessoas se encantaram com a &lt;strong&gt;Web&lt;/strong&gt; e gostariam que ela fizesse parte da sua vida pessoal e/ou profissional. Comigo foi assim, com alguns amigos também e, acredito, que com você também foi assim. Afinal, quem não queria fazer parte desta história?&lt;/p&gt;

&lt;p&gt;Acontece que muitas pessoas que entram neste mundo do &lt;strong&gt;desenvolvimento web&lt;/strong&gt; sequer sabem, de fato, como a Web funciona. Iniciam querendo aprender a criar sites com HTML, CSS, JavaScript, PHP ou &lt;em&gt;&lt;insira sua linguagem predileta aqui&gt;&lt;/em&gt; sem saber seu funcionamento. Por isso, é importante conhecermos alguns conceitos por trás do funcionamento da &lt;strong&gt;Internet&lt;/strong&gt; e da &lt;strong&gt;World Wide Web&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;Internet&lt;/strong&gt; é uma rede que interconecta computadores e outros dispositivos como o seu celular em escala global para a transferência de dados entre eles. Já a &lt;strong&gt;World Wide Web&lt;/strong&gt; é uma aplicação onde páginas são interligadas através de &lt;em&gt;links&lt;/em&gt; e que se utiliza da Internet para funcionar.&lt;/p&gt;

&lt;p&gt;Muito sucinto, não? Então vamos ver com um pouco mais de detalhes&amp;#8230;&lt;/p&gt;

&lt;h2 id=&#34;redes-de-computadores&#34;&gt;Redes de computadores&lt;/h2&gt;

&lt;p&gt;Antes de falarmos sobre a Web, precisamos conhecer um pouco sobre &lt;strong&gt;rede de computadores&lt;/strong&gt;. Uma &lt;strong&gt;rede de computadores&lt;/strong&gt; é a interconexão entre computadores que permite a &lt;strong&gt;comunicação de dados&lt;/strong&gt; entre si. Esta comunicação pode ser feita através de &lt;strong&gt;cabos&lt;/strong&gt; ou &lt;strong&gt;sem fios&lt;/strong&gt;. Para entender melhor como os computadores se comunicam entre si, utilizarei como exemplo o &lt;em&gt;acesso a uma página da web&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-51929 size-full&#34; title=&#34;Redes de computadores&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/10/computer-network.png&#34; alt=&#34;Redes de computadores&#34; width=&#34;760&#34; height=&#34;400&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Suponha que queira acessar o site do &lt;strong&gt;&lt;a href=&#34;http://www.pensandonaweb.com.br&#34; target=&#34;_blank&#34;&gt;Pensando na Web&lt;/a&gt;&lt;/strong&gt; para ler alguns posts interessantes sobre desenvolvimento web. Daí você abre o seu navegador predileto e digita &lt;code&gt;www.pensandonaweb.com.br&lt;/code&gt; na barra de endereços e, passados poucos segundos, a página inicial do blog é exibida. Como esse processo todo, aparentemente simples, ocorre?&lt;/p&gt;

&lt;h2 id=&#34;endereço-ip-e-portas&#34;&gt;Endereço IP e portas&lt;/h2&gt;

&lt;p&gt;Acontece que os computadores possuem um endereço numérico único chamado &lt;strong&gt;endereço IP&lt;/strong&gt; e, além deste endereço, possui também inúmeras &lt;strong&gt;portas&lt;/strong&gt; por onde as &lt;em&gt;aplicações&lt;/em&gt; e &lt;em&gt;processos&lt;/em&gt; se comunicam. Para que você acesse a página desejada, de fato, o seu computador precisa antes &lt;strong&gt;estabelecer uma conexão&lt;/strong&gt; com o computador onde a página solicitada está hospedada.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Chamaremos, a partir de agora, o seu computador de &lt;strong&gt;cliente&lt;/strong&gt; e o computador onde a página está hospedada de &lt;strong&gt;servidor&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Continuando com o exemplo anterior, vamos imaginar que o &lt;strong&gt;cliente&lt;/strong&gt; de endereço IP &lt;code&gt;177.178.79.80&lt;/code&gt; queira, através da porta &lt;code&gt;65000&lt;/code&gt;, iniciar uma conexão com o &lt;strong&gt;servidor&lt;/strong&gt; de endereço IP &lt;code&gt;185.186.87.88&lt;/code&gt; na porta &lt;code&gt;80&lt;/code&gt; para obter a página inicial do Pensando na Web.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-51930 size-full&#34; title=&#34;Modelo cliente-servidor&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/10/client-server-model.png&#34; alt=&#34;Modelo cliente-servidor&#34; width=&#34;760&#34; height=&#34;320&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Mas espere, como o cliente sabe o endereço IP e a porta no servidor que deve conectar para obter a página inicial do Pensando na Web se nada disso foi informado? Ou melhor, se só o que foi informado foi &lt;code&gt;www.pensandonaweb.com.br&lt;/code&gt; na barra de endereços de seu navegador?&lt;/p&gt;

&lt;h2 id=&#34;dns-e-portas-conhecidas&#34;&gt;DNS e portas conhecidas&lt;/h2&gt;

&lt;p&gt;Quando um computador está ligado em rede, ele está configurado para acessar um servidor especial chamado &lt;strong&gt;servidor de nomes&lt;/strong&gt; ou &lt;strong&gt;servidor DNS&lt;/strong&gt;, como é mais conhecido. Este servidor funciona como uma lista telefônica.&lt;/p&gt;

&lt;p&gt;Quando digitamos &lt;code&gt;www.pensandonaweb.com.br&lt;/code&gt; na barra de endereços, estamos informando o &lt;strong&gt;endereço&lt;/strong&gt; ou a &lt;strong&gt;URL&lt;/strong&gt; (&lt;em&gt;Uniform Resource Locator&lt;/em&gt;) do site que desejamos acessar. Se o navegador não conhecer o endereço IP para esta URL &amp;#8211; afinal, ele deve visitá-la várias vezes ao dia 🙂 &amp;#8211; ele se conecta ao &lt;strong&gt;servidor DNS&lt;/strong&gt; e pergunta: Olá, tudo bem? Tenho a URL &lt;code&gt;www.pensandonaweb.com.br&lt;/code&gt;, você pode me informar o endereço IP dela? Eis que o &lt;strong&gt;servidor DNS&lt;/strong&gt; responde: Pois não, o endereço IP desta URL é &lt;code&gt;185.186.87.88&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hmmm, interessante! Mas como se sabe em qual porta deve se conectar?&lt;/p&gt;

&lt;p&gt;Imagine o seguinte, algum desconhecido passa pelo bairro onde você mora e te pergunta onde fica a padaria ou o mercadinho. E você prontamente responde, a padaria é no final desta rua e o mercadinho fica ao lado da padaria. Isso é automático para você, estes estabelecimentos sempre estiveram no mesmo lugar desde quando você era criança e dificilmente mudam de lugar. E quando mudam, os interessados são sempre informados.&lt;/p&gt;

&lt;p&gt;O mesmo acontece com as &lt;strong&gt;portas&lt;/strong&gt; disponíveis num computador, elas são &lt;strong&gt;conhecidas&lt;/strong&gt; de acordo com o &lt;strong&gt;serviço&lt;/strong&gt; que oferecem. Se precisar de um serviço de transferência de arquivos ou &lt;strong&gt;FTP&lt;/strong&gt;, ele pode ser encontrado na &lt;em&gt;porta 21&lt;/em&gt;. Se precisar de um &lt;em&gt;shell&lt;/em&gt; remoto e seguro ou &lt;strong&gt;SSH&lt;/strong&gt;, ele estará na &lt;em&gt;porta 22&lt;/em&gt;. Se precisar de um serviço de entrega de e-mail ou &lt;strong&gt;SMTP&lt;/strong&gt;, ele estará na &lt;em&gt;porta 25&lt;/em&gt;. Ou, ainda, se precisar de um serviço de entrega de páginas web, ele estará na &lt;em&gt;porta 80&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Todos como se fossem os estabelecimentos do bairro onde você mora, muito bem conhecidos e raramente mudam de lugar.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;O &lt;strong&gt;servidor DNS&lt;/strong&gt; funciona como uma lista telefônica para encontrar o endereço IP da URL solicitada. Já as &lt;strong&gt;portas&lt;/strong&gt; são conhecidas de acordo com os serviços oferecidos. O serviço de entrega de páginas web encontra-se na &lt;em&gt;porta 80&lt;/em&gt; e o serviço de entrega de e-mail encontra-se na &lt;em&gt;porta 25&lt;/em&gt;, por exemplo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;tcp-ip-como-os-computadores-se-comunicam&#34;&gt;TCP/IP, como os computadores se comunicam&lt;/h2&gt;

&lt;p&gt;Uma vez conhecido o &lt;strong&gt;endereço IP&lt;/strong&gt; do destino e a &lt;strong&gt;porta&lt;/strong&gt; na qual deseja se conectar, o cliente precisa &lt;strong&gt;estabelecer uma conexão&lt;/strong&gt; com o servidor. A conexão é estabelecida da seguinte maneira:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cliente:&lt;/strong&gt; Boa tarde &lt;code&gt;185.186.87.88&lt;/code&gt;, desejo estabelecer uma conexão na porta &lt;code&gt;80&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Servidor:&lt;/strong&gt; Boa tarde &lt;code&gt;177.178.79.80&lt;/code&gt;. Pode realizar a conexão.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cliente:&lt;/strong&gt; Ok, iniciarei a conexão. &lt;em&gt;Os pacotes começam a ser enviados a partir deste momento&amp;#8230;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Este tipo de conexão utiliza o protocolo &lt;strong&gt;TCP&lt;/strong&gt; ou &lt;em&gt;Transmission Control Protocol&lt;/em&gt; e é através deste protocolo que o &lt;strong&gt;cliente&lt;/strong&gt; e o &lt;strong&gt;servidor&lt;/strong&gt; conversam entre si. Através desta conexão ocorre o envio de &lt;strong&gt;pacotes&lt;/strong&gt;, fragmentos menores dos dados que serão trafegados que contém informações como a &lt;em&gt;porta de origem&lt;/em&gt;, a &lt;em&gt;porta de destino&lt;/em&gt; e a &lt;em&gt;sequência&lt;/em&gt; que devem ser reconstruídos ao chegar no destino.&lt;/p&gt;

&lt;p&gt;Este é um tipo especial de conexão pois ela é &lt;strong&gt;ponto-a-ponto&lt;/strong&gt;, ou seja, a comunicação pode ser feita em duas vias (o cliente fala com o servidor e o servidor fala com o cliente). Outra característica importante é a &lt;strong&gt;garantia de entrega&lt;/strong&gt; onde todos os pacotes que saem da &lt;em&gt;origem&lt;/em&gt; possuem a garantia de que chegarão ao &lt;em&gt;destino&lt;/em&gt; e que serão entregues de forma &lt;strong&gt;ordenada&lt;/strong&gt; e &lt;strong&gt;sem modificações&lt;/strong&gt;. Outra característica importante ainda é o &lt;strong&gt;controle de fluxo&lt;/strong&gt; que controla a quantidade de pacotes enviados ou recebidos aumentando ou diminuindo de acordo com a necessidade.&lt;/p&gt;

&lt;p&gt;Ou, numa breve alusão ao serviço de correios de carta registrada, as suas correspondências chegarão ao destino, na ordem correta e não serão violadas ou abertas. E, se sua caixa de correio da sua casa estiver cheia, as correspondências serão entregues numa frequência menor até que sua caixa de correio tenha mais espaço!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;O &lt;strong&gt;TCP&lt;/strong&gt; é um protocolo de rede que permite a comunicação entre computadores e uma conexão deve ser estabelecida antes do início do envio de pacotes. Ele é um protocolo &lt;strong&gt;ponto-a-ponto&lt;/strong&gt;, possui &lt;strong&gt;garantia de entrega&lt;/strong&gt; de pacotes de forma &lt;strong&gt;ordenada&lt;/strong&gt; e &lt;strong&gt;sem modificações&lt;/strong&gt; e possui &lt;strong&gt;controle de fluxo&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Certo, mas o que acontece quando a conexão é estabelecida? Existe uma aplicação conhecida como &lt;strong&gt;servidor web&lt;/strong&gt; que &lt;strong&gt;recebe e manipula&lt;/strong&gt; todos os pacotes que vem pela &lt;strong&gt;porta 80&lt;/strong&gt;. Vamos ver o seu funcionamento mais adiante&amp;#8230;&lt;/p&gt;

&lt;h2 id=&#34;http-o-idioma-dos-navegadores-e-servidores-web&#34;&gt;HTTP, o idioma dos navegadores e servidores web!&lt;/h2&gt;

&lt;p&gt;Imagine o seguinte, você mora no prédio localizado no endereço IP &lt;code&gt;185.186.87.88&lt;/code&gt; e o seu apartamento é o de número &lt;code&gt;80&lt;/code&gt;. O seu trabalho é enviar páginas com as informações variadas para quem as solicita através do correio. Uma pessoa qualquer te envia uma carta solicitando uma página com informações sobre &lt;em&gt;futebol&lt;/em&gt;, por exemplo. Você recebe esta carta, abre ela, analisa a solicitação, monta a página com a informação solicitada, coloca a página num envelope e a envia de volta para o remetente. Só que esta comunicação se dá num idioma próprio, que somente vocês entendem.&lt;/p&gt;

&lt;p&gt;Se alguém, por engano, enviar uma carta solicitando uma página com informações sobre &lt;em&gt;viagens&lt;/em&gt; para o seu vizinho do &lt;code&gt;21&lt;/code&gt;, o Sr. Fábio Teixeira Pimentel (ou FTP para os íntimos), não receberá nada de volta. Isso acontece porque ele não entenderá o idioma escrito na carta e, de qualquer forma, ele só trabalha com transferência de arquivos e não com o envio de páginas.&lt;/p&gt;

&lt;p&gt;Esse idioma é o &lt;strong&gt;HTTP&lt;/strong&gt; ou &lt;em&gt;Hypertext Transfer Protocol&lt;/em&gt; e é o idioma que os &lt;strong&gt;navegadores&lt;/strong&gt; e os &lt;strong&gt;servidores web&lt;/strong&gt; conversam. É através deste idioma que o seu navegador informa ao servidor web qual a sua &lt;strong&gt;versão&lt;/strong&gt;, qual o seu &lt;strong&gt;idioma&lt;/strong&gt;, se aceita &lt;strong&gt;conteúdo compactado&lt;/strong&gt; ou não e qual &lt;strong&gt;página&lt;/strong&gt; foi solicitada. E, da mesma forma, é através deste idioma que o servidor web informa ao seu navegador se a &lt;strong&gt;página solicitada existe&lt;/strong&gt;, qual o seu &lt;strong&gt;formato&lt;/strong&gt;, se a página enviada foi &lt;strong&gt;compactada&lt;/strong&gt;, se existe algum &lt;em&gt;&lt;strong&gt;cookie&lt;/strong&gt;&lt;/em&gt; para ser gravado no seu computador e, principalmente, o &lt;strong&gt;conteúdo da página&lt;/strong&gt; solicitada.&lt;/p&gt;

&lt;p&gt;Quando o navegador solicita uma página web é chamado de &lt;strong&gt;requisição&lt;/strong&gt; e quando o servidor web envia a página web solicitada de volta para o navegador é chamado de &lt;strong&gt;resposta&lt;/strong&gt;. Cada requisição realizada pelo navegador é independente umas das outras e, por este motivo, o HTTP é considerado um protocolo &lt;strong&gt;sem estado&lt;/strong&gt; ou &lt;strong&gt;&lt;em&gt;stateless&lt;/em&gt;&lt;/strong&gt;. E o que isso quer dizer? Quando você realiza uma nova requisição (ao mudar de página no site, por exemplo) o servidor web não lembra que você realizou uma requisição anterior.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;requisição&lt;/strong&gt; realizada pelo seu &lt;strong&gt;navegador&lt;/strong&gt; se parece com isso:&lt;/p&gt;

&lt;pre&gt;GET / HTTP/1.1
Host: www.pensandonaweb.com.br
Connection: keep-alive
Cache-Control: no-cache
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Pragma: no-cache
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.116 Safari/537.36
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8,es;q=0.6,pt;q=0.4
&lt;/pre&gt;

&lt;p&gt;E a &lt;strong&gt;resposta&lt;/strong&gt; gerada pelo &lt;strong&gt;servidor web&lt;/strong&gt; se parece com isso:&lt;/p&gt;

&lt;pre&gt;HTTP/1.1 200 OK
Date: Mon, 31 Mar 2014 22:01:16 GMT
Server: Apache
Content-Type: text/html
Cache-Control: no-store
Pragma: no-cache
Vary: Accept-Encoding,User-Agent
Content-Encoding: gzip
Connection: close
Transfer-Encoding: chunked

&amp;lt;!doctype html&amp;gt;
&amp;lt;html lang=&#34;en&#34;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&#34;UTF-8&#34;&amp;gt;
&amp;lt;title&amp;gt;Pensando na Web&amp;lt;/title&amp;gt;
...
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
...
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Este processo de &lt;em&gt;requisição&lt;/em&gt; e &lt;em&gt;resposta&lt;/em&gt; por meio do protocolo HTTP acontece através da conexão estabelecida entre o &lt;em&gt;cliente&lt;/em&gt; e o &lt;em&gt;servidor&lt;/em&gt; por meio do protocolo TCP. As &lt;strong&gt;mensagens&lt;/strong&gt; de requisição e resposta geradas pelo navegador e servidor web são quebradas em &lt;em&gt;pacotes&lt;/em&gt; e enviadas através da rede com toda a &amp;#8220;infraestrutura&amp;#8221; que o TCP oferece. Esta abordagem que os sites e aplicações web utilizam é conhecida como arquitetura &lt;strong&gt;cliente-servidor&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/10/client-server-approach.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-51931 size-full&#34; title=&#34;Arquitetura cliente-servidor&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/10/client-server-approach.png&#34; alt=&#34;Arquitetura cliente-servidor&#34; width=&#34;760&#34; height=&#34;560&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O HTTP tem se tornado um &amp;#8220;idioma&amp;#8221; amplamente falado. Outras aplicações, além de seu navegador e de servidores web, estão aprendendo a falar este idioma. Programas de linha de comando como o &lt;strong&gt;curl&lt;/strong&gt; e o &lt;strong&gt;wget&lt;/strong&gt; e a maior parte das linguagens de programação sabem falar o HTTP. Aqueles aplicativos marotos de listas de tarefas e redes sociais que você tem no seu &lt;em&gt;smartphone&lt;/em&gt; também utilizam o HTTP para se comunicar. Guarde este nome, que você irá ouvi-lo bastante caso decida seguir a vida de desenvolvedor web.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;O &lt;strong&gt;HTTP&lt;/strong&gt; é o protocolo utilizado pelos &lt;strong&gt;navegadores&lt;/strong&gt; e &lt;strong&gt;servidores web&lt;/strong&gt; se comunicarem. Quando o navegador solicita uma página web é chamado de &lt;strong&gt;requisição&lt;/strong&gt; e quando o servidor web envia a página solicitada de volta é chamado de &lt;strong&gt;resposta&lt;/strong&gt;. Esta abordagem é conhecida como arquitetura &lt;strong&gt;cliente-servidor&lt;/strong&gt;. Na requisição é informado qual o &lt;strong&gt;idioma&lt;/strong&gt; utilizado e a &lt;strong&gt;página&lt;/strong&gt; solicitada e na resposta é informado o &lt;strong&gt;formato&lt;/strong&gt; e o &lt;strong&gt;conteúdo&lt;/strong&gt; da página.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Certo, falamos de rede de computadores, endereços IP e portas, servidores DNS, protocolos TCP e HTTP mas ainda não foi falado como as páginas web de fato são exibidas.&lt;/p&gt;

&lt;h2 id=&#34;html&#34;&gt;HTML&lt;/h2&gt;

&lt;p&gt;Voltando algumas linhas acima, vemos a resposta que o servidor web enviou ao navegador como resultado de uma requisição. Perceba que esta resposta é dividida por uma linha vazia. Acima da linha encontra-se o &lt;strong&gt;cabeçalho da resposta&lt;/strong&gt; e abaixo o &lt;strong&gt;conteúdo da resposta&lt;/strong&gt;. E, neste exemplo, o formato do conteúdo é um &lt;strong&gt;documento HTML&lt;/strong&gt;, visto que solicitamos uma página web.&lt;/p&gt;

&lt;p&gt;Uma vez que o documento HTML é obtido, o navegador &lt;strong&gt;analisa&lt;/strong&gt; seu conteúdo e realiza outras requisições para obter os outros &lt;strong&gt;recursos&lt;/strong&gt; que também compõe a página web como &lt;em&gt;folhas de estilo&lt;/em&gt;, &lt;em&gt;scripts&lt;/em&gt; e &lt;em&gt;imagens&lt;/em&gt;, por exemplo. Com o documento HTML e o restante dos outros recursos, o navegador começa a &lt;strong&gt;renderizar&lt;/strong&gt; a página web.&lt;/p&gt;

&lt;p&gt;Quando uma página web é acessada, o navegador, não faz apenas uma, mas diversas requisições para obter todo o conteúdo da página. Isso quer dizer que através da &lt;strong&gt;requisição&lt;/strong&gt; pode-se obter não só &lt;em&gt;documentos HTML&lt;/em&gt;, mas também recursos de diversos tipos como &lt;em&gt;imagens&lt;/em&gt;, &lt;em&gt;documentos PDF&lt;/em&gt;, &lt;em&gt;vídeos&lt;/em&gt; entre outros inúmeros formatos.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;HTML&lt;/strong&gt; ou &lt;em&gt;Hypertext Markup Language&lt;/em&gt; é uma &lt;strong&gt;linguagem de marcação&lt;/strong&gt; utilizada para criar páginas web. Ela foi criada por &lt;strong&gt;&lt;a href=&#34;https://pt.wikipedia.org/wiki/Tim_Berners-Lee&#34; target=&#34;_blank&#34;&gt;Tim Berners-Lee&lt;/a&gt;&lt;/strong&gt;, o também criador do protocolo HTTP e da World Wide Web, e no início suportava apenas elementos de textos e links. Hoje o HTML encontra-se numa fase mais madura, com suporte a dezenas de funcionalidades e fazendo parte de um conjunto de tecnologias como o &lt;strong&gt;CSS&lt;/strong&gt; e o &lt;strong&gt;JavaScript&lt;/strong&gt;, que são a base para a web atual.&lt;/p&gt;

&lt;p&gt;Mas o HTML é um assunto para um outro post, onde poderá ser explicado com mais detalhes a sua estrutura e o seu funcionamento.&lt;/p&gt;

&lt;h2 id=&#34;finalmente-o-que-é-a-internet-e-a-world-wide-web&#34;&gt;Finalmente, o que é a Internet e a World Wide Web?&lt;/h2&gt;

&lt;p&gt;Os conceitos abordados nas seções anteriores estão por trás do funcionamento da Internet e da World Wide Web. Como dito anteriormente, a &lt;strong&gt;Internet&lt;/strong&gt; é uma rede que interconecta &lt;strong&gt;computadores&lt;/strong&gt;, ou mais especificamente, uma rede que interconecta outras &lt;strong&gt;redes de computadores&lt;/strong&gt;. A sua infraestrutura é composta por bilhões de dispositivos como servidores, roteadores, computadores, &lt;em&gt;tablets&lt;/em&gt;, &lt;em&gt;smartphones&lt;/em&gt; interligados por complexas estruturas de comunicação, por meio de satélites, cabos ópticos espalhados pelo mundo ou sem fio.&lt;/p&gt;

&lt;p&gt;Vários &lt;strong&gt;serviços&lt;/strong&gt; funcionam sobre a infraestrutura da Internet, como os serviços de &lt;em&gt;telefonia&lt;/em&gt; (voz sobre IP), &lt;em&gt;correio eletrônico&lt;/em&gt; (e-mail), &lt;em&gt;aplicações peer-to-peer&lt;/em&gt;, &lt;em&gt;transferência de arquivos&lt;/em&gt; e a &lt;em&gt;World Wide Web&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Existe uma confusão quando as pessoas dizem que &amp;#8220;vão acessar a Internet&amp;#8221; quando se referem ao ato de abrir o navegador e navegar entre as páginas. Na verdade, elas estão acessando a World Wide Web. Porém, isso não torna a afirmação anterior inválida, pois se a World Wide Web funciona sobre a infraestrutura da Internet, as pessoas de fato estão acessando a Internet. Mas as pessoas poderiam seguramente dizer que &amp;#8220;vão acessar a Internet&amp;#8221; também quando forem fazer uma chamada no Skype, enviar uma mensagem pelo WhatsApp, enviar um e-mail ou mesmo baixar alguns arquivos através do FTP, pois todos estes serviços, assim como a World Wide Web, também rodam sobre a infraestrutura da Internet.&lt;/p&gt;

&lt;p&gt;Já a &lt;strong&gt;World Wide Web&lt;/strong&gt; é uma aplicação onde documentos e/ou páginas web são interligados através de &lt;em&gt;links&lt;/em&gt; e que se utiliza da Internet para funcionar. Utilizamos o &lt;strong&gt;navegador&lt;/strong&gt; e através das &lt;strong&gt;URLs&lt;/strong&gt; acessamos estas páginas web e, ao clicar em um link, este processo todo é repetido para a nova página que será aberta. É através dela que conseguimos acessar os &lt;strong&gt;sites&lt;/strong&gt; e as &lt;strong&gt;aplicações web&lt;/strong&gt;. Google, Google Maps, Twitter, Facebook, Gmail, YouTube, Netflix, Spotify, Wikipedia, WordPress, UOL, Globo.com, Dropbox e seu &lt;em&gt;bankline&lt;/em&gt; são todos exemplos de aplicações web.&lt;/p&gt;

&lt;p&gt;A diferença entre &lt;strong&gt;sites&lt;/strong&gt; e &lt;strong&gt;aplicações web&lt;/strong&gt; é bastante subjetiva. Um &lt;strong&gt;site web&lt;/strong&gt; pode ser caracterizado pelo seu &lt;em&gt;conteúdo&lt;/em&gt; enquanto uma &lt;strong&gt;aplicação web&lt;/strong&gt; pode ser caracterizada pela &lt;em&gt;interação&lt;/em&gt; do usuário. Um site institucional de uma empresa que conta sua história, exibe seus produtos e informações de contato é um exemplo de um &lt;strong&gt;site web&lt;/strong&gt;. Ele é composto por várias &lt;strong&gt;páginas web&lt;/strong&gt; com foco no &lt;em&gt;conteúdo&lt;/em&gt;. Já um tocador de música &lt;em&gt;online&lt;/em&gt; que permite buscar artistas e músicas, criar listas de reprodução e tocar as músicas exibindo a capa do álbum e o progresso da música é um exemplo de uma &lt;strong&gt;aplicação web&lt;/strong&gt;. As &lt;em&gt;interações&lt;/em&gt; constantes do usuário como buscar artistas, reproduzir ou avançar entre as músicas é o seu diferencial.&lt;/p&gt;

&lt;p&gt;As &lt;strong&gt;aplicações web&lt;/strong&gt; possuem diversas vantagens em relação às &lt;em&gt;aplicações nativas&lt;/em&gt; como acessar os seus dados de qualquer lugar, utilizar sempre sua versão mais nova e acessar de qualquer dispositivo que possua um &lt;em&gt;navegador web&lt;/em&gt; sem se preocupar com a plataforma ou dispositivo utilizado. Utilizando uma aplicação web de e-mail, por exemplo, você acessará seus e-mails de qualquer lugar, utilizando sempre a versão mais nova e de qualquer dispositivo como um computador ou um &lt;em&gt;smartphone&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A &lt;strong&gt;Internet&lt;/strong&gt; é uma rede que interconecta computadores e outras redes de computadores e é composta por bilhões de dispositivos como servidores, roteadores, computadores e dispositivos móveis. Vários &lt;strong&gt;serviços&lt;/strong&gt; funcionam sobre a infraestrutura da Internet como a &lt;em&gt;telefonia&lt;/em&gt; (voz sobre IP) e a &lt;em&gt;World Wide Web&lt;/em&gt;. A &lt;strong&gt;World Wide Web&lt;/strong&gt; é uma aplicação onde documentos e/ou páginas são interligadas através de &lt;em&gt;links&lt;/em&gt;. É através dela que, por meio de um &lt;em&gt;navegador&lt;/em&gt; e através de &lt;em&gt;URLs&lt;/em&gt;, acessamos os &lt;strong&gt;sites&lt;/strong&gt; e as &lt;strong&gt;aplicações web&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;O entendimento do funcionamento da Internet e da World Wide Web é importante para quem deseja seguir a carreira de desenvolvedor web. Apesar de parecer complexo, compreender o funcionamento de ambas é razoavelmente fácil e não há a necessidade de entrar em detalhes ou em tópicos mais avançados num primeiro momento.&lt;/p&gt;

&lt;p&gt;A sua compreensão sobre o assunto te ajudará no entendimento de outros conceitos relacionados ao desenvolvimento web e facilitará o seu caminho nesta jornada. Bons estudos! 😉&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>