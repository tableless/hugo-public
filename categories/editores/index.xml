<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Editores on Tableless</title>
    <link>https://tableless.github.io/hugo-public/categories/editores/index.xml</link>
    <description>Recent content in Editores on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="https://tableless.github.io/hugo-public/categories/editores/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Crie sites em questão de minutos com o Pingendo</title>
      <link>https://tableless.github.io/hugo-public/crie-sites-em-questao-de-minutos-com-o-pingendo/</link>
      <pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/crie-sites-em-questao-de-minutos-com-o-pingendo/</guid>
      <description>

&lt;p&gt;Sem dúvidas, o Bootstrap é uma das frameworks mais utilizadas ultimamente, porém, para algumas pessoas, ainda é meio complicado lidar com os códigos, sejam eles HTML, CSS ou JavaScript.&lt;/p&gt;

&lt;h2 id=&#34;o-que-é-o-pingendo&#34;&gt;O que é o Pingendo?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://pingendo.com/&#34;&gt;Pingendo&lt;/a&gt; é um programa de interface simples e de fácil uso. O Pingendo é um criador de sites em Bootstrap 3 que permite a criação de websites de maneira simples e rápida.&lt;/p&gt;

&lt;h2 id=&#34;drag-and-drop&#34;&gt;Drag and drop&lt;/h2&gt;

&lt;p&gt;O programa usa um modo muito popular em criadores de sites online como Wix, Weebly, etc. É só arrastar e soltar os elementos desejados dentro da área do site e pronto, a mágica está feita.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/mGmv44Y.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;imagens&#34;&gt;Imagens&lt;/h2&gt;

&lt;p&gt;Com o Pingendo você tem a seu dispor uma ampla quantidade de imagens livres de direitos autorais e com altíssima qualidade vindas direto do &lt;a href=&#34;https://unsplash.com/&#34;&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/NMxtVad.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;fontes&#34;&gt;Fontes&lt;/h2&gt;

&lt;p&gt;A alteração das fontes pode ser feita facilmente através do menu lateral do programa. As fontes são carregadas diretamente do &lt;a href=&#34;https://fonts.google.com/&#34;&gt;Google Fonts&lt;/a&gt;, um dos mais completos banco de dados de fontes da internet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/9RGXujM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;cores&#34;&gt;Cores&lt;/h2&gt;

&lt;p&gt;A alteração das cores do tema também podem ser alteradas através do menu lateral, basta escolher as que mais lhe agradam.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/68jKTOb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;responsividade&#34;&gt;Responsividade&lt;/h2&gt;

&lt;p&gt;O Pingendo permite a visualização do seu projeto em telas de diversos tamanhos. Facilitando assim o teste de responsividade do seu website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/dCHV33W.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;código&#34;&gt;Código&lt;/h2&gt;

&lt;p&gt;Se você possuí alguma experiencia, mesmo que mínima, em HTML e/ou CSS, pode realizar alterações direto do programa e velas sendo aplicadas em tempo real.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/3Fv69GJ.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pingendo está disponível para as plataformas Mac, Windows e Linux no site &lt;a href=&#34;https://pingendo.com/&#34;&gt;www.pingendo.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Começando um blog – O público alvo</title>
      <link>https://tableless.github.io/hugo-public/comecando-um-blog-o-publico-alvo/</link>
      <pubDate>Tue, 07 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/comecando-um-blog-o-publico-alvo/</guid>
      <description>&lt;p&gt;Ano novo, vida nova e blog novo. Mas por onde eu devo começar?&lt;/p&gt;

&lt;p&gt;Sem sombra de dúvidas a primeira decisão a ser feita é sobre o que você quer publicar e qual o seu intuito com o blog. Se você quer publicar apenas por publicar e não está focado em rentabilizar o blog, então deixe de ler essa postagem e corre instalar o wordpress. O que quero dizer com isso é: Alguns assuntos serão muito difíceis de você ganhar uma grana, um exemplo disso seria eu gostar de falar sobre as borboletas do Afeganistão (salve mamonas), quantas pessoas mais estariam interessadas nesse assunto? Percebem o quanto é difícil atingir um público simplesmente porque gosto desse assunto. Mas se o seu intuito é apenas publicar para ser feliz, vai em frente. Quem sabe no domingo o fantástico não faz uma matéria sobre as borboletas do Afeganistão e isso vira moda, difícil, mas o intuito não era ganhar dinheiro não é mesmo?&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-56762 aligncenter&#34; src=&#34;uploads/2016/12/mamonas-mente.gif&#34; alt=&#34;mamonas-mente&#34; width=&#34;250&#34; height=&#34;199&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora se você quer ser o próximo blogueiro de sucesso (odeio esse termo &amp;#8220;sucesso), você precisa encontrar um tema do qual ame falar e ao mesmo tempo que seja algo que outras pessoas queiram saber. Não vai adiantar nada você falar sobre um tema da moda, sendo que não entende nada do assunto. Eu vou falar sobre gastronomia porque vi um monte de vídeo sobre isso bombando no youtube, resolvi que posso fazer uma grana escrevendo sobre isso. Mas nunca fritei um ovo sequer. Seria quase impossível fazer um conteúdo de qualidade desse jeito, a não ser que você tenha um bom dinheiro para contratar jornalistas especializados no assunto e queira somente gerenciar o blog, mas acredito que você não veio aqui para isso. Uma opção seria fazer um blog sobre gastronomia para quem nem sabe fritar um ovo e contar suas experiências, pode ser que dê certo :).&lt;/p&gt;

&lt;p&gt;Bom então vamos ao que interessa. A primeira coisa para você começar um blog, é focar em um assunto, quanto mais focado for o seu blog, mais fácil fazer campanhas no face, google e etc. Agora imagine se você faz um blog sobre política e no meio começa a publicar coisas sobre celebridades por exemplo. Um portal pode fazer isso, abranger vários assuntos, mas um blog, principalmente que está começando, pode ser que seja um fracasso. Imagine os caras que amam política vendo que a Gretchen casou mais uma vez, péssimo né? Além de que para fazer campanha no facebook com assuntos tão variados, você vai gastar uma nota e será muito difícil atingir um público que retorne ao blog, assine newsletter, receba notificações e por ai vai.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;wp-image-56764 aligncenter&#34; src=&#34;uploads/2016/12/red-hands-woman-creative-1.jpg&#34; alt=&#34;red-hands-woman-creative&#34; width=&#34;526&#34; height=&#34;331&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Então vamos focar em um público de exemplo, vamos fazer um blog que fale sobre fotografia, ah mas eu vou postar sobre vídeos e vai dar certo também? Difícil, lembre-se foque, foque e foque. Você está começando, não tente abraçar o Mundo. Mas mesmo focando, nem tudo é um mar de rosas. Se você fizer uma campanha no face para quem gosta de fotografia, irá aparecer tanto gente que realmente fotografa quanto aquela pessoas que só querem ver umas fotos maneiras e nunca pegaram em uma câmera. Mas você pode fazer a campanha no face mega focada também, impulsionando somente para pessoas que curtiram a página da Leica por exemplo. Você sabe o que é Leica? É uma das melhores e mais caras câmeras do Mundo, pode ter certeza que somente fotógrafos curtem essa marca. Viu como fica muito mais fácil com um público focado e seleto? E sem fazer apenas para as borboletas do Afeganistão?&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;wp-image-56763 aligncenter&#34; src=&#34;uploads/2016/12/pexels-photo-164474.jpeg&#34; alt=&#34;pexels-photo-164474&#34; width=&#34;496&#34; height=&#34;414&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pode ter a maior certeza do Mundo que vai demorar para você ter bastante acessos e ver o analytics pulando de alegria, mas será muito mais fácil chegar em um resultado satisfatório assim do que falando sobre tudo e nada ao mesmo tempo. Além de que banners do adsense dão muito pouco dinheiro por visualizações, tendo um público focado você pode vender campanhas para lojas de fotografia, no nosso exemplo ai, e ganhar muito mais do que os míseros centavos do adsense.&lt;/p&gt;

&lt;p&gt;E aí, você tem experiências para contar? Manda ver ai nos comentários&lt;/p&gt;

&lt;p&gt;Valeu!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introdução bem rápida sobre vim</title>
      <link>https://tableless.github.io/hugo-public/introducao-bem-rapida-sobre-vim/</link>
      <pubDate>Tue, 03 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/introducao-bem-rapida-sobre-vim/</guid>
      <description>

&lt;p&gt;O &lt;strong&gt;vim&lt;/strong&gt; é um editor de texto muito conhecido no mundo Linux. Embora conheça faz tempo, eu nunca o utilizei exatamente por que a curva de aprendizado é terrivelmente longa. Aposto que você conhece alguém que já ficou preso no vim quando foi editar um arquivo no servidor e nem sabia como salvar e sair do arquivo. Normal quando se está começando e nem tem ideia de como o vim funciona.&lt;/p&gt;

&lt;p&gt;Só para avisar: eu uso Mac, mas é provável que tudo isso aqui funcione num Linux. Mas não tenho ideia se alguma coisa funcionaria no Windows.&lt;/p&gt;

&lt;h2 id=&#34;um-pouco-de-blá-blá-blá-histórico&#34;&gt;Um pouco de blá blá blá histórico&lt;/h2&gt;

&lt;p&gt;Se você for cavar informações na Web, vai encontrar várias informações interessantes sobre de onde o &lt;strong&gt;vim&lt;/strong&gt; surgiu. Primeiro, a palavra vim significa &lt;strong&gt;VI Improvement&lt;/strong&gt;. O vim é uma melhoria do editor &lt;strong&gt;vi&lt;/strong&gt;, que foi baseado num editor chamado &lt;strong&gt;ex&lt;/strong&gt;, que por sua vez foi baseado num editor chamado &lt;strong&gt;qed&lt;/strong&gt;, que por sua vez era uma melhoria de um editor chamado &lt;strong&gt;ed&lt;/strong&gt;, que talvez foi inspirado em outro editor. 😉&lt;/p&gt;

&lt;p&gt;Todas essas e outras informações você pode achar &lt;a href=&#34;https://en.wikipedia.org/wiki/Ed_(text_editor)&#34;&gt;aqui&lt;/a&gt; e &lt;a href=&#34;https://en.wikipedia.org/wiki/Vi&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O interessante do &lt;strong&gt;vim&lt;/strong&gt; é que você pode aprender praticamente TUDO sobre ele executando apenas o comando &lt;strong&gt;:help&lt;/strong&gt;. Abra o vim simplesmente digitando &lt;strong&gt;vim&lt;/strong&gt; no seu terminal e aperte &lt;strong&gt;ENTER&lt;/strong&gt;. Depois de aberto, digite &lt;strong&gt;:help&lt;/strong&gt; para abrir o manual. Lá tem TUDO o que você precisa saber. Eu poderia terminar esse artigo aqui e pronto. 😀&lt;/p&gt;

&lt;h2 id=&#34;modos-e-comandos-básicos&#34;&gt;Modos e comandos básicos&lt;/h2&gt;

&lt;p&gt;A curva de aprendizado do vim é gigante por que você primeiro precisa entender que: &lt;strong&gt;o mouse é seu inimigo&lt;/strong&gt;. A ideia é aumentar a produtividade. Parar de usar o teclado para usar o mouse enquanto estamos digitando código é perda de tempo. Logo, o objetivo é que você tente usar cada vez menos o mouse. Para isso, o vim tem alguns modos de controle:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;No modo &lt;strong&gt;Normal&lt;/strong&gt; você pode executar todos os comandos normais do editor. Serve para você navegar e manipular o texto. Este é o modo que o vim inicia e que você volta toda vez que sai de outro modo usando a tecla &lt;strong&gt;ESC&lt;/strong&gt;. Geralmente, para navegar no texto, o pessoal do vim usa as seguintes teclas: &lt;strong&gt;h&lt;/strong&gt; para esquerda, &lt;strong&gt;j&lt;/strong&gt; para baixo, &lt;strong&gt;k&lt;/strong&gt; para cima e &lt;strong&gt;l&lt;/strong&gt; para direita. Eu ainda não me acostumei com isso e insisto em usar as setas do teclado. :-&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;O modo &lt;strong&gt;Visual&lt;/strong&gt; é como o modo &lt;strong&gt;Normal&lt;/strong&gt;, mas quando você navega pelas palavras ou linhas, elas são selecionadas. Quando um comando é executado, ele vai ter efeito apenas na área selecionada. Quando você está nesse modo, aparece um &amp;#8220;&lt;em&gt;&amp;#8212; VISUAL &amp;#8212;&lt;/em&gt;&amp;#8221; no rodapé da janela. Ela é ativada apertando a tecla &lt;strong&gt;v&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;O modo &lt;strong&gt;Select&lt;/strong&gt; é igual ao &lt;strong&gt;Visual&lt;/strong&gt;, mas um pouco parecido com o estilo de seleção do MS-Windows. Não se preocupe com esse modo&amp;#8230; me atrevo a dizer que você nunca vai usá-lo.&lt;/li&gt;
&lt;li&gt;O modo &lt;strong&gt;Insert&lt;/strong&gt; é onde você escreve e modifica o texto do arquivo (buffer). Ela é ativada apertando a tecla &lt;strong&gt;i&lt;/strong&gt;. Apertando a tecla &lt;strong&gt;i&lt;/strong&gt;, você poderá inserir ou apagar o texto onde o cursor está naquele momento.&lt;/li&gt;
&lt;li&gt;No modo &lt;strong&gt;Command-line&lt;/strong&gt; ou &lt;strong&gt;Cmdline&lt;/strong&gt;, você escreve um comando no rodapé da janela. Esse modo é ativado usando alguns comando como busca (&lt;strong&gt;?&lt;/strong&gt; ou &lt;strong&gt;/&lt;/strong&gt;) e o comando de filtro (&lt;strong&gt;!&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;O modo &lt;strong&gt;Ex&lt;/strong&gt; é ativado com o comando &lt;strong&gt;:&lt;/strong&gt;. Nesse modo, você vai executar comandos como salvar o arquivo (&lt;strong&gt;:w&lt;/strong&gt;), fechar o arquivo (&lt;strong&gt;:q&lt;/strong&gt;) ou até juntar os dois comandos (&lt;strong&gt;:wq&lt;/strong&gt;), além de outros.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Isso tudo parece complicado&amp;#8230; Só parece&amp;#8230; Vamos aprender na prática.&lt;/p&gt;

&lt;h2 id=&#34;na-prática-editando-e-salvando-um-arquivo&#34;&gt;Na prática: editando e salvando um arquivo&lt;/h2&gt;

&lt;p&gt;Abra seu terminal e entre na pasta do seu Desktop (ou qualquer outra pasta que você desejar). Agora execute o seguinte comando:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim teste.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Isso vai abrir uma instância do vim, editando um arquivo vazio chamado &lt;strong&gt;teste.md&lt;/strong&gt;. Agora, aperte a tecla &lt;strong&gt;i&lt;/strong&gt;. Este é o comando para entrar no modo de &lt;strong&gt;Insert&lt;/strong&gt; (ou Inserção). Digite &lt;em&gt;Hello World&lt;/em&gt;. O arquivo ainda não existe, por que você ainda não o salvou. Para salvar o arquivo, você precisa sair do modo de &lt;strong&gt;Insert&lt;/strong&gt; e voltar para o modo &lt;strong&gt;Normal&lt;/strong&gt;. Para fazer isso basta apertar a tecla &lt;strong&gt;ESC&lt;/strong&gt;. Agora, pra salvar o arquivo, exatamente na pasta em que você está, basta executar o comando &lt;strong&gt;:w&lt;/strong&gt;. Para sair do arquivo e voltar para o terminal, basta executar o comando &lt;strong&gt;:q&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Verifique agora se o arquivo existe e se o seu conteúdo é o esperado. Pode fazer isso usando qualquer outro editor de texto.&lt;/p&gt;

&lt;p&gt;Por enquanto, a interface do seu vim deve estar muito, mas muito feia. Vamos dar um jeito nisso.&lt;/p&gt;

&lt;h2 id=&#34;customizando-seu-vim&#34;&gt;Customizando seu vim&lt;/h2&gt;

&lt;p&gt;Como qualquer editor que se preze, o vim pode ser totalmente customizado. Eu nunca gostei de usar o vim &amp;#8211; estou aprendendo por pura curiosidade &amp;#8211; mas sempre gostei do visual simples e clean do editor. Você customiza o vim por meio do seu arquivo de configuração chamado &lt;em&gt;.vimrc&lt;/em&gt;. O &lt;em&gt;.vimrc&lt;/em&gt; vai guardar todas as configurações do editor e também quais os plugins que serão instalados, bem como algumas configurações desses plugins. Eu conheço um cara chamado &lt;a href=&#34;https://www.sergioaugrod.com.br&#34;&gt;Sérgio&lt;/a&gt; que tem &lt;a href=&#34;https://github.com/sergioaugrod/dotfiles/blob/master/.vimrc&#34;&gt;o vim mais legal que eu já vi&lt;/a&gt;. Ele me deu o &lt;strong&gt;.vimrc&lt;/strong&gt; dele e a partir dali eu modifiquei para ficar de acordo com as minhas necessidades (que eram bem mais simples que as dele).&lt;/p&gt;

&lt;p&gt;Para facilitar, existe um gerenciador de plugins para vim chamado &lt;a href=&#34;https://github.com/VundleVim/Vundle.vim&#34;&gt;Vundle&lt;/a&gt; (não vá se confundir com o &lt;a href=&#34;https://www.google.com.br/search?q=vando&amp;amp;safe=off&amp;amp;client=safari&amp;amp;rls=en&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;sa=X&amp;amp;ved=0ahUKEwiqhqm086TRAhXCF5AKHQqRBVAQ_AUICSgC&amp;amp;biw=2398&amp;amp;bih=1351#safe=off&amp;amp;tbm=isch&amp;amp;q=vando+calcinha&amp;amp;imgrc=eFoxWJye6tM-TM%3A&#34;&gt;Vando&lt;/a&gt;, hein?!). Eu fiz o meu &lt;em&gt;.vimrc&lt;/em&gt; se baseando nas configurações do &lt;a href=&#34;https://github.com/sergioaugrod/dotfiles/blob/master/.vimrc&#34;&gt;arquivo do Sérgio&lt;/a&gt;. Logo, sugiro que você faça o mesmo. O &lt;a href=&#34;https://github.com/diegoeis/configfiles/blob/master/vimrc&#34;&gt;meu está aqui&lt;/a&gt; e &lt;a href=&#34;https://github.com/sergioaugrod/dotfiles/blob/master/.vimrc&#34;&gt;o dele está aqui&lt;/a&gt;. A diferença dos dois são os plugins que serão instalados. O visual do editor é praticamente o mesmo.&lt;/p&gt;

&lt;p&gt;Para customizar seu vim, baixe algum dos &lt;em&gt;.vimrc&lt;/em&gt; citados acima e coloque na sua pasta Home (&lt;strong&gt;~/&lt;/strong&gt;). Feito isso, instale o &lt;a href=&#34;https://github.com/VundleVim/Vundle.vim&#34;&gt;Vundle&lt;/a&gt;, vamos precisar dele.&lt;/p&gt;

&lt;p&gt;Depois abra o Terminal, digite &lt;strong&gt;vim&lt;/strong&gt; e aperte &lt;strong&gt;ENTER&lt;/strong&gt;. O vim feião do seu Mac/Linux vai abrir. Do jeito que ele abrir, digite &lt;strong&gt;:PluginInstall&lt;/strong&gt;. Deve aparecer uma tela mais ou menos assim:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;uploads/2017/01/vundle.png&#34; alt=&#34;&#34; width=&#34;1139&#34; height=&#34;767&#34; class=&#34;aligncenter size-full wp-image-56793&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora feche e abra o Terminal e abra o vim novamente. Ele deve estar mais ou menos igual a imagem abaixo:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;uploads/2017/01/vim.png&#34; alt=&#34;&#34; width=&#34;1139&#34; height=&#34;767&#34; class=&#34;aligncenter size-full wp-image-56792&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;instale-o-macvim&#34;&gt;Instale o MacVim&lt;/h2&gt;

&lt;p&gt;Bom, vamos facilitar para quem usa Mac, como eu. Para ter uma integração melhor com o Mac, eu uso o MacVim, que é simplesmente o &lt;strong&gt;vim&lt;/strong&gt;, só que mais integrado com o sistema operacional e standalone&amp;#8230; isso quer dizer que ele não está &amp;#8220;preso&amp;#8221; no Terminal. Por exemplo, você tem suporte a edição fullscreen, scroll e copy and paste como se fosse qualquer app do Mac&amp;#8230; basta instalar via brew ou &lt;a href=&#34;http://macvim-dev.github.io/macvim/&#34;&gt;baixar no site oficial&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install macvim
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Depois execute o comando abaixo ou coloque no seu &lt;strong&gt;.bash_profile&lt;/strong&gt; ou similar:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias gvim=&#39;/Applications/MacVim.app/Contents/MacOS/Vim -g&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Agora, pra abrir um arquivo, basta digitar &lt;strong&gt;gvim [nome_do_arquivo]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;É uma boa ideia você ler o &lt;a href=&#34;https://github.com/macvim-dev/macvim/wiki/FAQ&#34;&gt;FAQ do MacVim&lt;/a&gt;. Tem muita coisa bem explicadinho lá.&lt;/p&gt;

&lt;p&gt;Essa &lt;a href=&#34;https://faraohh.files.wordpress.com/2009/01/vim-super_editor.pdf&#34;&gt;apresentação vai te ajudar muito a entender melhor o vim&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Configurando o Sublime Text para escrever textos em MarkDown</title>
      <link>https://tableless.github.io/hugo-public/configurando-o-sublime-text-para-escrever-textos-em-markdown/</link>
      <pubDate>Mon, 26 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/configurando-o-sublime-text-para-escrever-textos-em-markdown/</guid>
      <description>

&lt;p&gt;Neste artigo aprenderemos como configurar alguns plugins para o Sublime Text 2, para que você possa ter uma melhor experiência ao escrever textos em português com a linguagem de marcação de texto MarkDown, muito comum na criação de livros, artigos, tutoriais, e claro, dos arquivos README.md do GitHub.&lt;/p&gt;

&lt;h2 id=&#34;instalando-o-sublime-text-2&#34;&gt;Instalando o Sublime Text 2&lt;/h2&gt;

&lt;p&gt;Você ainda não usou o Sublime Text? Eu duvido! Mas se não usou, aqui está a receita para a sua instalação:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;sudo add-apt-repository ppa:webupd8team/sublime-text-2
sudo apt-get update
sudo apt-get install sublime-text  
&lt;/pre&gt;

&lt;p&gt;Ou acesse &lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;o site oficial do Sublime Text&lt;/a&gt;, clicar em download e instalar.&lt;/p&gt;

&lt;h2 id=&#34;instalando-o-dicionário-em-português&#34;&gt;Instalando o dicionário em português&lt;/h2&gt;

&lt;p&gt;Após muito &amp;#8220;fuçar&amp;#8221; eu encontrei um dicionário em português que atende completamente as minhas necessidades como escritor. Tenho usado ele nos meus livros e recomendo para você também, lembrando que existem alguns dicionários antigos que estão perdidos por aí. Para você não perder tempo, criei um repositório no github com os arquivos corretos.&lt;/p&gt;

&lt;p&gt;Para instalar o dicionário, primeiro acesse &lt;a href=&#34;https://github.com/danielschmitz/sublime_text_2_for_markdown&#34;&gt;este repositório&lt;/a&gt; e clique no botão &lt;code&gt;Download Zip&lt;/code&gt; (ou faça &lt;code&gt;git clone&lt;/code&gt; se for natural para você). Após fazer o download, copie a pasta &lt;code&gt;Languages&lt;/code&gt; para o seu diretório de configuração do Sublime Text, que depende do sistema operacional:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows: %APPDATA%\Sublime Text 2&lt;/li&gt;
&lt;li&gt;Linux: ~/.config/sublime-text-2/Packages/&lt;/li&gt;
&lt;li&gt;Mac: ~/Library/Application Support/Sublime Text 2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Após copiar a pasta Languages, volte ao Sublime Text e acesse  &lt;code&gt;View &amp;gt; Dictionary &amp;gt; Languages &amp;gt; pt_br &amp;gt; Portuguese(Brazilian)&lt;/code&gt;. Com o dicionário selecionado, use a tecla de atalho &lt;code&gt;F6&lt;/code&gt; para habilitar/desabilitar o spell check. As palavras que não estiverem no dicionário serão sublinhadas em vermelho, e pode-se usar o menu de contexto para correção.&lt;/p&gt;

&lt;h2 id=&#34;instalando-o-package-control&#34;&gt;Instalando o Package Control&lt;/h2&gt;

&lt;p&gt;O Package Control é o gerenciador de pacotes do Sublime Text. Para instalar ele, você deve acessar &lt;a href=&#34;https://packagecontrol.io/installation#st2&#34;&gt;https://packagecontrol.io/installation#st2&lt;/a&gt; e copiar todo texto que está na aba &amp;#8220;Sublime Text 2&amp;#8221;. Após copiar, vá ao Sublime Text, navegue até &lt;code&gt;View &amp;gt; Show Console&lt;/code&gt; e cole o texto no console que abre na parte inferior do Sublime. Após executar o comando, o Package Control é instalado e você deve reiniciar o editor. Talvez seja necessário reiniciar algumas vezes até o Package Control estabilizar.&lt;/p&gt;

&lt;h2 id=&#34;instalando-pacotes-essenciais&#34;&gt;Instalando pacotes essenciais&lt;/h2&gt;

&lt;p&gt;Para instalar um pacote, tecle &lt;code&gt;CTRL+SHIFT+P&lt;/code&gt; que é a tecla padrão do Sublime para executar comandos, e digite &amp;#8220;install package&amp;#8221; no menu de contexto. Aguarde alguns segundos e um novo menu cheio de pacotes será exibido. O primeiro que deve ser instalado é o &lt;code&gt;MarkDown Editing&lt;/code&gt;. Cuidado para não instalar Markdown Extended ao invés do Markdown Editing. Selecione-o e aguarde a instalação finalizar.&lt;/p&gt;

&lt;p&gt;Outro pacote necessário para instalação é o &lt;code&gt;Monokai Extended&lt;/code&gt;. Instale-o da mesma forma que fez com o pacote anterior.&lt;/p&gt;

&lt;h2 id=&#34;configuração&#34;&gt;Configuração&lt;/h2&gt;

&lt;p&gt;Agora vamos configurar nossos pacotes. Para isso, é necessário acessar &lt;code&gt;Preferences &amp;gt; Package Settings &amp;gt; MarkDown Editing &amp;gt; Markdown GFM Settings - USER&lt;/code&gt; e adicionar a seguinte configuração:&lt;/p&gt;

&lt;pre class=&#34;lang-json&#34;&gt;{
    &#34;color_scheme&#34;: &#34;Packages/Monokai Extended/Monokai Extended.tmTheme&#34;,
    &#34;draw_centered&#34;: true,
    &#34;wrap_width&#34;: 40,
    &#34;word_wrap&#34;: true,
    &#34;line_numbers&#34;: true
}
&lt;/pre&gt;

&lt;p&gt;Você pode alterar os parâmetros conforme a sua vontade. Nos parâmetros acima, já temos um visual semelhante a seguir:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/10/Captura-de-tela-de-2015-10-17-072103.png&#34; alt=&#34;Captura de tela de 2015-10-17 07:21:03&#34; width=&#34;1366&#34; height=&#34;768&#34; class=&#34;alignleft size-full wp-image-51761&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;configurações-extras&#34;&gt;Configurações extras&lt;/h2&gt;

&lt;p&gt;As configurações acima serão aplicadas somente aos arquivos com a extensão &lt;code&gt;.md&lt;/code&gt;. Para realizar algumas configurações globais, você deve editar abrir &lt;code&gt;Preferences &amp;gt; Settings - User&lt;/code&gt;, e pode adicionar os parâmetros que desejar, conforme o exemplo a seguir:&lt;/p&gt;

&lt;pre class=&#34;lang-json&#34;&gt;{
    &#34;color_scheme&#34;: &#34;Packages/Color Scheme - Default/Monokai.tmTheme&#34;,
    &#34;font_face&#34;: &#34;Ubuntu&#34;,
    &#34;font_size&#34;: 20,
    &#34;line_numbers&#34;: true,
    &#34;tab_size&#34;: 4,
    &#34;translate_tabs_to_spaces&#34;: true
}
&lt;/pre&gt;

&lt;h2 id=&#34;temas&#34;&gt;Temas&lt;/h2&gt;

&lt;p&gt;Existem diversos temas para serem instalados pelo Package Control. Um deles é o &lt;code&gt;Soda&lt;/code&gt;. Instale o package &lt;code&gt;Soda - Theme&lt;/code&gt; e após a instalação, volte ao &lt;code&gt;Settings - User&lt;/code&gt; e adicione a seguinte linha:&lt;/p&gt;

&lt;pre class=&#34;lang-json&#34;&gt;{
    ....conf iniciais
    &#34;translate_tabs_to_spaces&#34;: true,
   &lt;strong&gt; &#34;theme&#34;: &#34;Soda Dark.sublime-theme&#34;&lt;/strong&gt;
}
&lt;/pre&gt;

&lt;p&gt;Reinicie o Sublime Text 2 e pronto, temos uma configuração bem legal para editar arquivos Mark Down, veja:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/10/Captura-de-tela-de-2015-10-17-073140.png&#34; alt=&#34;Captura de tela de 2015-10-17 07:31:40&#34; width=&#34;1366&#34; height=&#34;768&#34; class=&#34;alignleft size-full wp-image-51763&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;outros-pacotes&#34;&gt;Outros pacotes&lt;/h2&gt;

&lt;p&gt;O sublime tem diversos packages úteis, vou deixar alguns a seguir que mais uso:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git &amp;#8211; Execute os comandos do git pelo ctrl+shift+p&lt;/li&gt;
&lt;li&gt;GitGutter &amp;#8211; Exibe as alterações de um arquivo git no editor&lt;/li&gt;
&lt;li&gt;Clipboard &amp;#8211; History &amp;#8211; History da área de transferência&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deixe nos comentários os pacotes que você usa.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como criar um Chrome App com o seu Chromebook</title>
      <link>https://tableless.github.io/hugo-public/como-criar-um-chrome-app-com-o-seu-chromebook/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/como-criar-um-chrome-app-com-o-seu-chromebook/</guid>
      <description>

&lt;h2 id=&#34;o-que-é-um-chrome-app&#34;&gt;O que é um chrome app&lt;/h2&gt;

&lt;p&gt;A ideia de &lt;a href=&#34;https://www.google.com/chrome/webstore/apps-create.html&#34;&gt;chrome app&lt;/a&gt;&amp;nbsp;é trazer ferramentas que você usa no browser para o seu computador. Como se fosse uma extensão do browser. &amp;nbsp;A&amp;nbsp;instalação/desinstalação destes apps é fácil, rápida e sem dor de cabeça, além de contar com aplicativos que podem funcionar off-line.&lt;/p&gt;

&lt;h2 id=&#34;por-que-criar-um-chrome-app&#34;&gt;Por que criar um chrome APP?&lt;/h2&gt;

&lt;p&gt;A grande vantagem, é que aplicativos nativos para Chrome&amp;nbsp;OS são feitos com tecnologias que já conhecemos como HTML, CSS e JS. Podendo também utilizar a linguagem &lt;a href=&#34;http://pt.wikipedia.org/wiki/Dart_%28linguagem_de_programa%C3%A7%C3%A3o%29&#34;&gt;dart&lt;/a&gt;&amp;nbsp;que me parece bem interessante.&lt;/p&gt;

&lt;h2 id=&#34;equipamento-necessário&#34;&gt;Equipamento necessário&lt;/h2&gt;

&lt;p&gt;Encontrei vários editores de texto para o Chromebook, mas me familiarizei com o &lt;a href=&#34;http://thomaswilburn.net/caret/&#34;&gt;Caret&lt;/a&gt;. Gosto dele, pois além de informar erros, ele dá dicas de otimizações, e avisa se você esquecer de deixar callbacks para outros navegadores. Isso evita uma grande dor de cabeça. Fique à vontade para escolher o editor que mais te agrade.&lt;/p&gt;

&lt;h2 id=&#34;começar-pelo-inicio&#34;&gt;Começar pelo inicio&lt;/h2&gt;

&lt;p&gt;Para iniciar Você vai precisar de um arquivo &lt;strong&gt;manifest.json&lt;/strong&gt; para informar detalhes sobre a aplicação como titulo, descrição e icones. E de um arquivo JavaScript para criar a tela responsável pela interação com o APP conhecido como &lt;strong&gt;background.js&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Crie um diretório para o seu projeto. Na raiz dele vamos criar um arquivo chamado &lt;strong&gt;manifest.json&lt;/strong&gt;. A sintaxe para quem não conhece é composta por &lt;strong&gt;&amp;#8220;chave&amp;#8221;: &amp;#8220;valor&amp;#8221;&lt;/strong&gt;. É &amp;#8220;tipo&amp;#8221; um objeto JavaScript (na verdade ele é). Nele informamos nome, descrição, versão da aplicação, versão do arquivo manifest, o script de background e os ícones que serão usados no APP.&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;{
  &#34;name&#34;: &#34;Nome do meu APP&#34;,
  &#34;description&#34;: &#34;Descrição do meu APP&#34;,
  &#34;version&#34;: &#34;0.1&#34;,
  &#34;manifest_version&#34;: 2,
  &#34;app&#34;: {
    &#34;background&#34;: {
      &#34;scripts&#34;: [&#34;background.js&#34;]
    }
  },
  &#34;icons&#34;: { &#34;16&#34;: &#34;icone-16.png&#34;, &#34;128&#34;: &#34;icone-128.png&#34; }
}

&lt;/pre&gt;

&lt;p&gt;Os icones são opcionais. Contudo, se você não tiver ícones para testar agora, tire essa linha. Na linha onde setamos &amp;#8220;app&amp;#8221;, setamos também o arquivo de background que é muito importante para nós.&lt;/p&gt;

&lt;h2 id=&#34;criando-o-script-de-background&#34;&gt;Criando o script de background&lt;/h2&gt;

&lt;p&gt;Após setar o script background.js, precisamos cria-lo. Aqui, por enquanto não tem segredo. Criamos o o arquivo js como o abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-js&#34;&gt;chrome.app.runtime.onLaunched.addListener(function() {
  chrome.app.window.create(&#39;index.html&#39;, {
    &#39;bounds&#39;: {
      &#39;width&#39;: 400,
      &#39;height&#39;: 500
    }
  });
});&lt;/pre&gt;

&lt;p&gt;Na primeira linha, criamos um listener para ouvir nossos eventos de onLaunched, ou seja quando iniciarmos nossa aplicação. dentro dele criamos a nossa primeira tela, a função &lt;code&gt;chrome.app.window.create&lt;/code&gt; cria a nossa view index.html com o tamanho de 400&amp;#215;500.&lt;/p&gt;

&lt;h2 id=&#34;criando-a-view&#34;&gt;Criando a view&lt;/h2&gt;

&lt;p&gt;É mais simples do que vocês estão pensando. Criamos um arquivo index.html que será chamado pelo background.js quando executarmos nosso app.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Minha primeira aplicação&amp;lt;/h1&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/pre&gt;

&lt;h2 id=&#34;como-testar-meu-chrome-app&#34;&gt;Como testar meu Chrome App?&lt;/h2&gt;

&lt;p&gt;Acesse o endereço pelo seu chrome &lt;strong&gt;chrome://flags&lt;/strong&gt;. Procure por &amp;#8220;&lt;strong&gt;Experimental Extension APIs&lt;/strong&gt;&amp;#8220;, use &amp;#8220;ctrl+f&amp;#8221; ou &amp;#8220;command+f&amp;#8221; para acelerar o processo, e clique no link &amp;#8220;Enable&amp;#8221;. Caso esteja com o chrome em pt-br procure por &amp;#8220;&lt;strong&gt;APIs de extensões experimentais&amp;#8221;&lt;/strong&gt; e clique no link ativar.&lt;/p&gt;

&lt;p&gt;Após ativarmos as extensões experimentais, podemos agora finalmente carregar nossa aplicação para teste.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Vá no menu do chrome&amp;gt;&amp;gt; Mais ferramentas &amp;gt;&amp;gt; Extensões&amp;#8221;&lt;/em&gt; Ou acesse o endereço &lt;strong&gt;chrome://extensions/&lt;/strong&gt; acho mais fácil. Verifique se o modo desenvolvedor está ativado.&lt;/p&gt;

&lt;p&gt;Clique em &amp;#8220;&lt;strong&gt;carregar extensão expandida&lt;/strong&gt;&amp;#8221;&amp;nbsp;, escolha a pasta do seu projeto. Agora é só você procurar na sua lista de app do seu chrome, e sua aplicação está lá.&lt;/p&gt;

&lt;h2 id=&#34;tornando-as-coisas-mais-simples-com-o-nbsp-chrome-dev-editor&#34;&gt;Tornando as coisas mais simples com o&amp;nbsp;Chrome Dev Editor&lt;/h2&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li class=&#34;li&#34;&gt;
    Primeiro vamos instalar&amp;nbsp;o Chrome Dev Editor acessando &lt;a class=&#34;markup--anchor markup--li-anchor&#34; href=&#34;https://chrome.google.com/webstore/detail/chrome-dev-editor-develop/pnoffddplpippgcfjdhbmhkofpnaalpg&#34;&gt;esse link&lt;/a&gt;.
  &lt;/li&gt;
  &lt;li class=&#34;li&#34;&gt;
    Acessamos o menu principal, e clicamos em &lt;em class=&#34;markup--em markup--li-em&#34;&gt;New Project&lt;/em&gt;
  &lt;/li&gt;
  &lt;li class=&#34;li&#34;&gt;
    Digitamos o nome da aplicação, e escolhemos o &lt;em class=&#34;markup--em markup--li-em&#34;&gt;Project Type&lt;/em&gt;
  &lt;/li&gt;
  &lt;li class=&#34;li&#34;&gt;
    Usamos o atalho &lt;em class=&#34;markup--em markup--li-em&#34;&gt;ctrl+r &lt;/em&gt;para testar a aplicação
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nessa IDE, temos várias opções de &lt;em&gt;Project Type&lt;/em&gt;, mas o que importa para nós agora são os &lt;strong&gt;Chrome Apps&lt;/strong&gt;. Podemos iniciar um projeto usando &lt;a href=&#34;http://pt.wikipedia.org/wiki/Dart_%28linguagem_de_programa%C3%A7%C3%A3o%29&#34;&gt;Dart&lt;/a&gt;, ou &lt;a href=&#34;http://pt.wikipedia.org/wiki/JavaScript&#34;&gt;JavaScript&lt;/a&gt;, também iniciar um projeto usando &lt;a href=&#34;https://www.polymer-project.org/0.5/&#34;&gt;Polymer&lt;/a&gt; e todas as facilidades dele. A Facilidade, é que os arquivos que expliquei anteriormente são criados automaticamente, e a instalação e teste também são automáticos, fazemos tudo pela IDE. Tem jeito mais fácil&amp;nbsp;?&lt;/p&gt;

&lt;p&gt;É claro que isso é só o básico sobre criação de chrome Apps, mas já dá pra brincar um pouquinho. Abraço, e bons estudos. ☺&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vim: o poder dos macros</title>
      <link>https://tableless.github.io/hugo-public/vim-o-poder-dos-macros/</link>
      <pubDate>Tue, 28 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/vim-o-poder-dos-macros/</guid>
      <description>

&lt;p&gt;No nosso dia-a-dia em muitas situações diferentes temos que executar a mesma ação em um arquivo por diversas vezes, e com certeza o seu editor oferece à sua maneira uma forma muito eficiente de lidar com isso.&lt;/p&gt;

&lt;p&gt;No vim isso não é diferente, uma feature muito poderosa e ainda pouco explorada são os &lt;em&gt;macros&lt;/em&gt;. Legal, mas o que é isso?&lt;/p&gt;

&lt;p&gt;Esses &lt;em&gt;macros&lt;/em&gt; são uma sequencia de comandos que vão ser gravados numa espécie de buffer do vim e você pode executa-los quantas vezes desejar.&lt;/p&gt;

&lt;h2 id=&#34;em-prática&#34;&gt;Em prática&lt;/h2&gt;

&lt;p&gt;Vamos supor que temos uma lista de itens como strings escrito dessa maneira:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&#39;foo&#39;, &#39;bar&#39;, &#39;example&#39;, &#39;text&#39;&lt;/pre&gt;

&lt;p&gt;e o nosso objetivo é que cada item dessa lista fique uma abaixo da outra, também queremos que a primeira letra de cada item seja convertida para maiúscula:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&#39;Foo&#39;,
&#39;Bar&#39;,
&#39;Example&#39;,
&#39;Text&#39;
&lt;/pre&gt;

&lt;p&gt;Para iniciarmos a gravação de um macro deve ser pressionada tecla &lt;strong&gt;q&lt;/strong&gt;, note que a palavra &lt;strong&gt;recording&lt;/strong&gt; vai aparecer na parte inferior do editor:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-48305&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/macro-01.gif&#34; alt=&#34;macro-01&#34; width=&#34;475&#34; height=&#34;145&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A partir desse momento qualquer tecla pressionada vai ser gravada, e se mais uma vez pressionarmos &lt;strong&gt;q&lt;/strong&gt; em &lt;em&gt;NORMAL MODE&lt;/em&gt; a gravação vai ser concluída.&lt;/p&gt;

&lt;p&gt;O que devemos fazer agora é executar um conjunto de comandos para atingirmos o nosso objetivo, que nesse caso seria algo como:&lt;/p&gt;

&lt;ul class=&#34;task-list&#34;&gt;
  &lt;li&gt;
    &lt;code&gt;q&lt;/code&gt; : inicia a gravação do macro
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;w&lt;/code&gt; : move uma &amp;#8220;palavra&amp;#8221; no cursor
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;v&lt;/code&gt; : entra no &amp;#8220;&lt;em&gt;VISUAL MODE&lt;/em&gt;&amp;#8221; (automaticamente seleciona o caractere em que o cursor está em foco)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;U&lt;/code&gt;: transforma o que foi selecionado em maiúsculo
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;w&lt;/code&gt;: move uma &amp;#8220;palavra&amp;#8221; no cursor
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;w&lt;/code&gt;: move uma &amp;#8220;palavra&amp;#8221; no cursor
  &lt;/li&gt;
  &lt;li&gt;
    &lt;span style=&#34;font-family: monospace&#34;&gt;i&lt;/span&gt;: entra no &amp;#8220;&lt;em&gt;INSERT MODE&lt;/em&gt;&amp;#8220;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;&amp;lt;backspace&amp;gt;&lt;/code&gt;: deleta o espaço entre a virgula e a próxima palavra
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt;: insere a quebra da linha
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;&amp;lt;esc&amp;gt;&lt;/code&gt;: volta para o &amp;#8220;&lt;em&gt;NORMAL MODE&lt;/em&gt;&amp;#8220;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;q&lt;/code&gt;: finaliza a gravação do macro
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Executando isso temos:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-48308&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/macro-02.gif&#34; alt=&#34;macro-02&#34; width=&#34;475&#34; height=&#34;145&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Bacana! Ja temos os comandos gravados em memória, agora vamos usar o atalho &lt;strong&gt;@q&lt;/strong&gt; para a execução em cada item:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-48310&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/04/macro-03.gif&#34; alt=&#34;macro-03&#34; width=&#34;475&#34; height=&#34;145&#34; /&gt;&lt;/p&gt;

&lt;p&gt;e voilà, temos nossa lista como queriamos 🙂&lt;/p&gt;

&lt;h3 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h3&gt;

&lt;p&gt;Com o tempo o uso do macro dentro do vim se torna algo automático, você começa a perceber padrões e cada vez mais começa a usar essa feature de maneira inteligente que vai poupar muito do seu tempo.&lt;/p&gt;

&lt;p&gt;Nesse artigo foi utilizado um exemplo muito simples, mas imagine quantas possibilidades você pode alcançar com os &lt;em&gt;macros&lt;/em&gt; desde tarefas complexas como copy/paste em arquivos diferentes, alinhamentos e etc.&lt;/p&gt;

&lt;p&gt;Se você achou interessante entenda mais sobre as diversas açoes dos &lt;em&gt;macros&lt;/em&gt; na documentação oficial do vim &lt;a href=&#34;http://vim.wikia.com/wiki/Macros&#34; rel=&#34;noreferrer&#34;&gt;nesse link&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Manipulando janelas e arquivos no VIM</title>
      <link>https://tableless.github.io/hugo-public/manipulando-janelas-e-arquivos-no-vim/</link>
      <pubDate>Wed, 11 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/manipulando-janelas-e-arquivos-no-vim/</guid>
      <description>

&lt;p&gt;Como sabemos, o VIM é um editor muito poderoso e está disponível na maioria dos sistemas UNIX.&lt;/p&gt;

&lt;p&gt;Uma das coisas que sempre senti dificuldades foi a forma de manipular janelas e eventualmente gerenciar os arquivos que estou trabalhando.&lt;/p&gt;

&lt;p&gt;Vou mostrar algumas técninas que aprendi durante o tempo, e que hoje me ajudam a resolver esses problemas.&lt;/p&gt;

&lt;p&gt;**NOTA: OS COMANDOS ABAIXOS DEVEM SER EXECUTADOS USANDO O &lt;a href=&#34;http://en.wikibooks.org/wiki/Learning_the_vi_Editor/Vim/Modes&#34; target=&#34;_blank&#34;&gt;&amp;#8220;NORMAL MODE&amp;#8221;&lt;/a&gt; QUE VOCÊ PODE ACESSAR USANDO A TECLA `ESC`.&lt;/p&gt;

&lt;p&gt;**&lt;/p&gt;

&lt;h2 id=&#34;abrir-arquivos-de-qualquer-lugar&#34;&gt;Abrir arquivos de qualquer lugar&lt;/h2&gt;

&lt;p&gt;Um comandos mais interessantes é o &lt;strong&gt;:edit&lt;/strong&gt; que permite você acessar arquivos de qualquer lugar desde a raiz do seu computador!&lt;/p&gt;

&lt;p&gt;Na prática ele funciona assim:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;:edit &amp;lt;caminho-para-meu-arquivo&amp;gt;&lt;/pre&gt;

&lt;p&gt;ou de uma forma mais simples usando somente:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;:e &amp;lt;caminho-para-meu-arquivo&amp;gt;&lt;/pre&gt;

&lt;h2 id=&#34;divindo-as-janelas&#34;&gt;Divindo as janelas&lt;/h2&gt;

&lt;p&gt;Uma outra feature bem legal do é o &lt;strong&gt;split window&lt;/strong&gt;, que permite fazer a divisão das janelas do seu workspace e trabalhar abertamente entre elas.&lt;/p&gt;

&lt;p&gt;Há dois tipos diferentes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:vsp&lt;/strong&gt; vertical split&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:sp&lt;/strong&gt; split (horizontal)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A forma como esses comandos funcionam são bem similares ao &lt;strong&gt;:edit&lt;/strong&gt;: você pode simplesmente indica como vai ser essa divisão e passa como parâmetro o path do seu arquivo:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;:vsp &amp;lt;caminho-para-meu-arquivo&amp;gt;
&lt;/pre&gt;

&lt;p&gt;ou horizontal:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;:sp &amp;lt;caminho-para-meu-arquivo&amp;gt;&lt;/pre&gt;

&lt;p&gt;Legal! E como mudo meu foco para cada uma dessas &amp;#8220;janelas&amp;#8221;?&lt;/p&gt;

&lt;p&gt;Você pode mover o seu foco usando o comando &lt;strong&gt;ctrl + w&lt;/strong&gt; seguido da direção que a sua janela se encontra:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-47538&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/03/present-vim.gif&#34; alt=&#34;present-vim&#34; width=&#34;710&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;a tecla &lt;strong&gt;w&lt;/strong&gt; é usada lembrar a palavra &lt;strong&gt;window&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;O Vim pode ser um grande amigo com o tempo. É uma longa jornada para se adaptar com todas as particularidades desse editor, mas aos poucos tudo se torna mais fácil e bastante produtivo. 🙂&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Editor Vim – Encontrar e Substituir</title>
      <link>https://tableless.github.io/hugo-public/editor-vim-encontrar-e-substituir/</link>
      <pubDate>Tue, 03 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/editor-vim-encontrar-e-substituir/</guid>
      <description>&lt;p&gt;Quem nunca precisou acessar o servidor de um cliente via SSH para resolver um problema de última hora? Um parâmetro errado, uma vírgula faltando pode comprometer a execução de um código.&lt;/p&gt;

&lt;p&gt;Quando se tem apenas a tela preta do terminal, é preciso ter conhecimento de alguns comandos muito úteis que podem te ajudar a resolver um problema rapidamente, principalmente se você não tem um computador disponível, podendo também resolver o problema até pelo celular com qualquer App de conexão SSH.&lt;/p&gt;

&lt;p&gt;O que muitas pessoas não sabem, é que o editor &lt;a title=&#34;Editor Vim&#34; href=&#34;http://www.vim.org/&#34; target=&#34;_blank&#34;&gt;Vim&lt;/a&gt;, além de vários outros comandos para se navegar por um código e fazer modificações em massa com expressões regulares, possui um comando chamado &lt;strong&gt;substitute&lt;/strong&gt;, muito útil na hora de procurar e substituir uma variável ou um trecho de código. Muitas vezes, esse trecho se repete várias vezes dentro do arquivo e algumas expressões regulares podem te ajudar a substituí-los de uma vez só, economizando tempo e facilitando a sua vida. Existem muitas opções, mas provavelmente essas serão as que mais vão ser úteis:&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  &amp;#8211; Encontra cada ocorrência de &lt;strong&gt;&amp;#8216;foo&amp;#8217;&lt;/strong&gt; (em todas as linhas) e substitui por &lt;strong&gt;&amp;#8216;bar&amp;#8217;&lt;/strong&gt;:
&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;:%s/foo/bar/g&lt;/pre&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  &amp;#8211; Encontra cada ocorrência de &lt;strong&gt;&amp;#8216;foo&amp;#8217;&lt;/strong&gt; (apenas na linha atual) e substitui por &lt;strong&gt;&amp;#8216;bar&amp;#8217;&lt;/strong&gt;:
&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;:s/foo/bar/g&lt;/pre&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  &amp;#8211; Substitui cada &lt;strong&gt;&amp;#8216;foo&amp;#8217;&lt;/strong&gt; por &lt;strong&gt;&amp;#8216;bar&amp;#8217;&lt;/strong&gt;, mas pedindo confirmação primeiro:
&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;:%s/foo/bar/gc&lt;/pre&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  &amp;#8211; Substitui apenas palavras inteiras que correspondam com &lt;strong&gt;&amp;#8216;foo&amp;#8217;&lt;/strong&gt; por &lt;strong&gt;&amp;#8216;bar&amp;#8217;&lt;/strong&gt;, pedindo por confirmação:
&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;:%s/\&amp;lt;foo\&amp;gt;/bar/gc&lt;/pre&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  &amp;#8211; Substitui cada &lt;strong&gt;&amp;#8216;foo&amp;#8217;&lt;/strong&gt; (case insensitive) por &lt;strong&gt;&amp;#8216;bar&amp;#8217;&lt;/strong&gt;, pedindo por confirmação (usado após o uso de &lt;strong&gt;:set noignorecase&lt;/strong&gt; para fazer as consultas serem &lt;strong&gt;case sensitive&lt;/strong&gt;, que é o padrão):
&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;:%s/foo/bar/gci&lt;/pre&gt;

&lt;p style=&#34;padding-left: 30px&#34;&gt;
  &amp;#8211; Substitui cada &lt;strong&gt;&amp;#8216;foo&amp;#8217;&lt;/strong&gt; (case sensitive) por &lt;strong&gt;&amp;#8216;bar&amp;#8217;&lt;/strong&gt;, pedindo por confirmação (usado após o uso de &lt;strong&gt;:set ignorecase&lt;/strong&gt; para fazer as consultas serem &lt;strong&gt;case insensitive&lt;/strong&gt;):
&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;:%s/foo/bar/gcI&lt;/pre&gt;

&lt;p&gt;Alguns outros exemplos de comandos para encontrar e substituir podem ser encontrados &lt;a title=&#34;Vim - Search and Replace&#34; href=&#34;http://vim.wikia.com/wiki/Search_and_replace&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; (em inglês).&lt;/p&gt;

&lt;p&gt;Espero que estas dicas possam ser úteis e que possam ajudá-lo nos seus trabalhos e melhorar sua produtividade.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Plugins de GIT para Sublime e Brackets</title>
      <link>https://tableless.github.io/hugo-public/plugins-de-git-para-sublime-e-brackets/</link>
      <pubDate>Tue, 20 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/plugins-de-git-para-sublime-e-brackets/</guid>
      <description>

&lt;p&gt;Além do browser, outras duas ferramentas que os desenvolvedores usam todo o santo dia quase que todo o tempo é o seu editor de código e também o GIT. Aqui vão algumas indicações de plugins para Sublime e Brackets que ajudarão na integração do GIT com estes dois editores.&lt;/p&gt;

&lt;h2 id=&#34;git-no-sublime&#34;&gt;Git no Sublime&lt;/h2&gt;

&lt;p&gt;Se você tiver o Package Control instalado no Sublime, é uma boa ideia instalar estes plugins direto por lá.&lt;/p&gt;

&lt;h3 id=&#34;git-gutter&#34;&gt;Git Gutter&lt;/h3&gt;

&lt;p&gt;Um plugin simples que mostra o status das linhas modificadas no seu arquivo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/git-gutter.png&#34; alt=&#34;git-gutter&#34; width=&#34;291&#34; height=&#34;177&#34; class=&#34;alignnone size-full wp-image-46663&#34; srcset=&#34;uploads/2015/01/git-gutter.png 291w, uploads/2015/01/git-gutter-229x139.png 229w&#34; sizes=&#34;(max-width: 291px) 100vw, 291px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jisaacks/GitGutter&#34;&gt;https://github.com/jisaacks/GitGutter&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;sublime-git&#34;&gt;Sublime GIT&lt;/h3&gt;

&lt;p&gt;Traz alguma integração do GIT para o Sublime. Você consegue executar alguns comandos direto pelo Sublime, facilitando bastante tarefas como commit, status, diff, log etc…&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/sublime-git.png&#34; alt=&#34;sublime-git&#34; width=&#34;624&#34; height=&#34;306&#34; class=&#34;alignnone size-full wp-image-46666&#34; srcset=&#34;uploads/2015/01/sublime-git.png 624w, uploads/2015/01/sublime-git-265x130.png 265w, uploads/2015/01/sublime-git-400x196.png 400w&#34; sizes=&#34;(max-width: 624px) 100vw, 624px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kemayo/sublime-text-git&#34;&gt;https://github.com/kemayo/sublime-text-git&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;gitstatus&#34;&gt;GitStatus&lt;/h3&gt;

&lt;p&gt;Monitora os arquivos modificados e seus status no repositório.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/gitstatus.png&#34; alt=&#34;gitstatus&#34; width=&#34;389&#34; height=&#34;100&#34; class=&#34;alignnone size-full wp-image-46665&#34; srcset=&#34;uploads/2015/01/gitstatus.png 389w, uploads/2015/01/gitstatus-265x68.png 265w&#34; sizes=&#34;(max-width: 389px) 100vw, 389px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/vlakarados/gitstatus&#34;&gt;https://github.com/vlakarados/gitstatus&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;git-no-brackets&#34;&gt;Git no Brackets&lt;/h2&gt;

&lt;p&gt;Estou tentando usar o Brackets a maior parte do meu tempo. Está sendo bastante interessante. Os plugins funcionam bem e tem bastante gente ajudando o desenvolvimento do projeto.&lt;/p&gt;

&lt;h3 id=&#34;brackets-git&#34;&gt;Brackets Git&lt;/h3&gt;

&lt;p&gt;Este plugin é sensacional. Ele mostra os arquivos modificados e você consegue comitar todos estes arquivos direto pelo Brackets. Além de outras facilidades como ver um painel de histórico e o diff do arquivo. Acho que só esse plugin já seria o suficiente para trabalhar bem com Git no Brackets.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/brackets-git-1.jpg&#34; alt=&#34;brackets-git-1&#34; width=&#34;1114&#34; height=&#34;451&#34; class=&#34;alignnone size-full wp-image-46660&#34; srcset=&#34;uploads/2015/01/brackets-git-1.jpg 1114w, uploads/2015/01/brackets-git-1-265x107.jpg 265w, uploads/2015/01/brackets-git-1-400x162.jpg 400w&#34; sizes=&#34;(max-width: 1114px) 100vw, 1114px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/brackets-git-2.jpg&#34; alt=&#34;brackets-git-2&#34; width=&#34;1114&#34; height=&#34;451&#34; class=&#34;alignnone size-full wp-image-46661&#34; srcset=&#34;uploads/2015/01/brackets-git-2.jpg 1114w, uploads/2015/01/brackets-git-2-265x107.jpg 265w, uploads/2015/01/brackets-git-2-400x162.jpg 400w&#34; sizes=&#34;(max-width: 1114px) 100vw, 1114px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zaggino/brackets-git&#34;&gt;https://github.com/zaggino/brackets-git&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;brackets-git-info&#34;&gt;Brackets Git Info&lt;/h3&gt;

&lt;p&gt;Bem simples, só mostra o nome do branch atual ao lado do nome do projeto. Mas isso o Brackets Git já faz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/brackets-git-info.png&#34; alt=&#34;brackets-git-info&#34; width=&#34;209&#34; height=&#34;160&#34; class=&#34;alignnone size-full wp-image-46662&#34; srcset=&#34;uploads/2015/01/brackets-git-info.png 209w, uploads/2015/01/brackets-git-info-182x139.png 182w&#34; sizes=&#34;(max-width: 209px) 100vw, 209px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/couzteau/brackets-git-info&#34;&gt;https://github.com/couzteau/brackets-git-info&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;git-integration-command-line&#34;&gt;Git Integration Command Line&lt;/h3&gt;

&lt;p&gt;Um plugin que permite fazer os comandos do git via linha de comando, direto do Brackets.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/git-integration.png&#34; alt=&#34;git-integration&#34; width=&#34;1740&#34; height=&#34;1446&#34; class=&#34;alignnone size-full wp-image-46664&#34; srcset=&#34;uploads/2015/01/git-integration.png 1740w, uploads/2015/01/git-integration-167x139.png 167w, uploads/2015/01/git-integration-400x332.png 400w&#34; sizes=&#34;(max-width: 1740px) 100vw, 1740px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jayproulx/git-integration&#34;&gt;https://github.com/jayproulx/git-integration&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>O editor de textos Open Source da Adobe, o Brackets!</title>
      <link>https://tableless.github.io/hugo-public/o-editor-de-textos-open-source-da-adobe-o-brackets/</link>
      <pubDate>Sat, 17 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/o-editor-de-textos-open-source-da-adobe-o-brackets/</guid>
      <description>

&lt;p&gt;Um editor de textos Open Source que vem crescendo com uma grande velocidade, alcançando, e, diria eu, ultrapassando alguns editores de texto já consolidados no mercado, prefiro não citar nomes.&lt;/p&gt;

&lt;h2 id=&#34;principais-recursos&#34;&gt;Principais recursos&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Extract, abra um PSD dentro do editor de textos:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Basicamente essa feature consiste na abertura de um PSD dentro do editor de textos, através do plugin Extract (padrão do Brackets). Mas para que abrir um PSD dentro do editor de textos ? Bem, uma imagem vale mais do que mil palavras:&lt;/p&gt;

&lt;p&gt;Mas, palavras também valem muito:&lt;/p&gt;

&lt;p&gt;Sim, isso é mágico! Podemos perceber no vídeo que quando ele clica em uma layer do PSD e vai para o arquivo CSS digitar, ele recebe opções de autocomplete referente a layer que ele clicou, se ele clicou em uma imagem e começar a digitar “background”, ele vai receber uma sugestão de salvar como imagem a layer selecionada (ele cria a pasta images e salva dentro delas) e já inserir o restante do código automaticamente, que no caso seria “url(caminho/para-imagem.jpg);”.&lt;/p&gt;

&lt;p&gt;Uma das coisas que mais gosto nisso tudo é que quando eu seleciono uma layer de texto, ele me dá a opção de colocar automaticamente o font-family, o font-size, o line-height etc, ele me dá a opção de inserir automaticamente todas as configurações que foram setadas no Photoshop, sem que eu precise ficar alternando entre as janelas do editor e do Photoshop para verificar qual fonte, qual tamanho, qual cor, ele pega tudo automaticamente e disponibiliza em forma de autocomplete. Uma mão na roda!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Live Preview: digite e veja o resultado, sem reload&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ok, isso não é nada de inovador. O Live Preview já existe em outros editores e também existe um ou mais softwares dedicados a fazer isso, mas todos que eu conheço fazem isso da mesma forma, eles dão reload na página. O Brackets não, conforme eu vou editando o código ele vai me dando o resultado do meu código sem dar reload na página, em tempo real, como se eu tivesse editando o código no inspect do browser, isso funciona quando a alteração é feita em um arquivo HTML ou CSS, já em arquivos JS ele dá reload na página. Para quem trabalha com dois monitores isso é do c@$#&amp;amp;%$!&lt;/p&gt;

&lt;p&gt;Porém esse recurso só funciona com o navegador Google Chrome, mas isso é por enquanto, pois eles já estão trabalhando para que isso funcione em outros browsers, inclusive na ultima versão eles já liberaram para a gente poder testar isso, eu ainda não testei, mas em breve conseguirei um tempo para fazer isso e quem sabe em um próximo artigo conto para vocês, junto com outras novidades, já que a evolução é bem rápida.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Split mode: vertical ou horizontal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Divida o seu editor em duas telas, divida na horizontal ou na vertical, eu prefiro ficar com a divisão vertical, nunca consegui usar a divisão de horizontal. Gosto de usar com o html na esquerda e o css na direita.&lt;/p&gt;

&lt;h2 id=&#34;atalhos-do-teclado&#34;&gt;Atalhos do teclado:&lt;/h2&gt;

&lt;p&gt;O Brackets assim como outros editores e softwares tem seus atalhos para agilizar o dia-a-dia de quem trabalha com tais ferramentas. Destaco abaixo algumas que achei interessante.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+Shift+A:&lt;/strong&gt; Abre um input para você digitar uma tag e teclar enter, fazendo isso, ele irá inserir a tag completa com seu fechamento e seus atributos no html. Ex.: Digite link e tecle enter, ele vai retornar &lt;link rel=&amp;#8221;stylesheet&amp;#8221; href=&amp;#8221;&amp;#8221;&gt;. E quando você dá enter o “ponteiro” do mouse vai parar dentro das aspas do atributo href, dai basta você começar a digitar o endereço que ele vai mostrando as opções em forma de codehint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+D:&lt;/strong&gt; Esse atalho de grande utilidade também está presente no Brackets. Serve para duplicar uma linha.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+Shift+D:&lt;/strong&gt; E esse para deletar uma linha.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+E:&lt;/strong&gt; Uma grande novidade do Brackets. Basicamente você pode editar o CSS sem ter que abrir o arquivo .css. Basta ir em um arquivo .html ou .php clicar sobre o elemento que deseja alterar as propriedades e pressionar Ctrl+E para abrir a tela de edição!&lt;/p&gt;

&lt;p&gt;Se tiver uma div com um id ou uma class e você clicar em cima de “div” e usar o atalho, ele vai buscar nas folhas de estilo associadas ao documento (.html ou .php) por um seletor que altere “div”, mas se você clicar sobre o id ou sobre a class e apertar Ctrl+E ele irá buscar por um seletor que atinja aquele id ou aquela class clicada. Se você tiver duas ou mais classes você pode clicar em cima da class que você quer editar e usar o atalho que ele vai fazer a buscar por seletores referentes a class que você clicou. Muito legal, né ?&lt;/p&gt;

&lt;p&gt;Segue uma tela, mostrando o atalho em funcionamento:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png&#34;&gt;&lt;img class=&#34;aligncenter wp-image-46570 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png&#34; alt=&#34;1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g&#34; width=&#34;638&#34; height=&#34;300&#34; srcset=&#34;uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png 638w, uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g-265x125.png 265w, uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g-400x188.png 400w&#34; sizes=&#34;(max-width: 638px) 100vw, 638px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Caso não exista um seletor, você pode criar ele nesse dropdown “New Rule”, ao clicar nele, você vai poder escolher em que arquivo quer criar a regra (caso tenha mais de um);&lt;/li&gt;
&lt;li&gt;Local onde você vai editar a regra e simplesmente dar um Ctrl+S e pronto.&lt;/li&gt;
&lt;li&gt;Resultado da busca que ele fez em todos os arquivos .css associados ao documento atual.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Achou muito bom ? Pois é! Ainda tem mais, se você clicar em uma cor e usar o atalho, ele irá abrir um seletor de cor bem completo, se liga na tela:&lt;/p&gt;

&lt;p&gt;[Um editor de textos Open Source que vem crescendo com uma grande velocidade, alcançando, e, diria eu, ultrapassando alguns editores de texto já consolidados no mercado, prefiro não citar nomes.&lt;/p&gt;

&lt;h2 id=&#34;principais-recursos-1&#34;&gt;Principais recursos&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Extract, abra um PSD dentro do editor de textos:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Basicamente essa feature consiste na abertura de um PSD dentro do editor de textos, através do plugin Extract (padrão do Brackets). Mas para que abrir um PSD dentro do editor de textos ? Bem, uma imagem vale mais do que mil palavras:&lt;/p&gt;

&lt;p&gt;Mas, palavras também valem muito:&lt;/p&gt;

&lt;p&gt;Sim, isso é mágico! Podemos perceber no vídeo que quando ele clica em uma layer do PSD e vai para o arquivo CSS digitar, ele recebe opções de autocomplete referente a layer que ele clicou, se ele clicou em uma imagem e começar a digitar “background”, ele vai receber uma sugestão de salvar como imagem a layer selecionada (ele cria a pasta images e salva dentro delas) e já inserir o restante do código automaticamente, que no caso seria “url(caminho/para-imagem.jpg);”.&lt;/p&gt;

&lt;p&gt;Uma das coisas que mais gosto nisso tudo é que quando eu seleciono uma layer de texto, ele me dá a opção de colocar automaticamente o font-family, o font-size, o line-height etc, ele me dá a opção de inserir automaticamente todas as configurações que foram setadas no Photoshop, sem que eu precise ficar alternando entre as janelas do editor e do Photoshop para verificar qual fonte, qual tamanho, qual cor, ele pega tudo automaticamente e disponibiliza em forma de autocomplete. Uma mão na roda!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Live Preview: digite e veja o resultado, sem reload&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ok, isso não é nada de inovador. O Live Preview já existe em outros editores e também existe um ou mais softwares dedicados a fazer isso, mas todos que eu conheço fazem isso da mesma forma, eles dão reload na página. O Brackets não, conforme eu vou editando o código ele vai me dando o resultado do meu código sem dar reload na página, em tempo real, como se eu tivesse editando o código no inspect do browser, isso funciona quando a alteração é feita em um arquivo HTML ou CSS, já em arquivos JS ele dá reload na página. Para quem trabalha com dois monitores isso é do c@$#&amp;amp;%$!&lt;/p&gt;

&lt;p&gt;Porém esse recurso só funciona com o navegador Google Chrome, mas isso é por enquanto, pois eles já estão trabalhando para que isso funcione em outros browsers, inclusive na ultima versão eles já liberaram para a gente poder testar isso, eu ainda não testei, mas em breve conseguirei um tempo para fazer isso e quem sabe em um próximo artigo conto para vocês, junto com outras novidades, já que a evolução é bem rápida.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Split mode: vertical ou horizontal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Divida o seu editor em duas telas, divida na horizontal ou na vertical, eu prefiro ficar com a divisão vertical, nunca consegui usar a divisão de horizontal. Gosto de usar com o html na esquerda e o css na direita.&lt;/p&gt;

&lt;h2 id=&#34;atalhos-do-teclado-1&#34;&gt;Atalhos do teclado:&lt;/h2&gt;

&lt;p&gt;O Brackets assim como outros editores e softwares tem seus atalhos para agilizar o dia-a-dia de quem trabalha com tais ferramentas. Destaco abaixo algumas que achei interessante.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+Shift+A:&lt;/strong&gt; Abre um input para você digitar uma tag e teclar enter, fazendo isso, ele irá inserir a tag completa com seu fechamento e seus atributos no html. Ex.: Digite link e tecle enter, ele vai retornar &lt;link rel=&amp;#8221;stylesheet&amp;#8221; href=&amp;#8221;&amp;#8221;&gt;. E quando você dá enter o “ponteiro” do mouse vai parar dentro das aspas do atributo href, dai basta você começar a digitar o endereço que ele vai mostrando as opções em forma de codehint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+D:&lt;/strong&gt; Esse atalho de grande utilidade também está presente no Brackets. Serve para duplicar uma linha.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+Shift+D:&lt;/strong&gt; E esse para deletar uma linha.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ctrl+E:&lt;/strong&gt; Uma grande novidade do Brackets. Basicamente você pode editar o CSS sem ter que abrir o arquivo .css. Basta ir em um arquivo .html ou .php clicar sobre o elemento que deseja alterar as propriedades e pressionar Ctrl+E para abrir a tela de edição!&lt;/p&gt;

&lt;p&gt;Se tiver uma div com um id ou uma class e você clicar em cima de “div” e usar o atalho, ele vai buscar nas folhas de estilo associadas ao documento (.html ou .php) por um seletor que altere “div”, mas se você clicar sobre o id ou sobre a class e apertar Ctrl+E ele irá buscar por um seletor que atinja aquele id ou aquela class clicada. Se você tiver duas ou mais classes você pode clicar em cima da class que você quer editar e usar o atalho que ele vai fazer a buscar por seletores referentes a class que você clicou. Muito legal, né ?&lt;/p&gt;

&lt;p&gt;Segue uma tela, mostrando o atalho em funcionamento:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png&#34;&gt;&lt;img class=&#34;aligncenter wp-image-46570 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png&#34; alt=&#34;1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g&#34; width=&#34;638&#34; height=&#34;300&#34; srcset=&#34;uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g.png 638w, uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g-265x125.png 265w, uploads/2015/01/1bdjMIZVWtgGU99McRDyncLzxSq-osBjUEE1k9g-400x188.png 400w&#34; sizes=&#34;(max-width: 638px) 100vw, 638px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Caso não exista um seletor, você pode criar ele nesse dropdown “New Rule”, ao clicar nele, você vai poder escolher em que arquivo quer criar a regra (caso tenha mais de um);&lt;/li&gt;
&lt;li&gt;Local onde você vai editar a regra e simplesmente dar um Ctrl+S e pronto.&lt;/li&gt;
&lt;li&gt;Resultado da busca que ele fez em todos os arquivos .css associados ao documento atual.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Achou muito bom ? Pois é! Ainda tem mais, se você clicar em uma cor e usar o atalho, ele irá abrir um seletor de cor bem completo, se liga na tela:&lt;/p&gt;

&lt;p&gt;]&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/01/1lhZwadIKR8PR2gXXQrNu8nJCPW_PhW_NhqpHdA.png&#34;&gt;2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Veja a lista completa de atalhos &lt;a href=&#34;https://github.com/adobe/brackets/wiki/Brackets-Shortcuts&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;extensões&#34;&gt;Extensões:&lt;/h2&gt;

&lt;p&gt;Apesar de ser um editor com pouco tempo no mercado já conta com um grande quantidade de plugins para dar aquela incrementada no nosso workflow! Segue alguns deles que eu testei e já estou utilizando:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brackets Git:&lt;/strong&gt; bastante completo, disponibiliza uma interface para você usar o controle de versões mais queridinho de todos. Para aqueles que não gostam de usar o git através de interfaces, tranquilo cara, não precisa me xingar, ele te dá, de fácil acesso, um botão que leva diretamente para o terminal, aberto já na pasta do projeto, sem ter que navegar até o projeto pelo terminal (eu acho isso um saco).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Emmet:&lt;/strong&gt; provavelmente você deve conhecer esse plugin que basicamente disponibiliza abreviações para agilizar o desenvolvimento de HTML e CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Folding:&lt;/strong&gt; esse plugin agiliza a organização do seu código. Ele disponibiliza a função de comprimir um determinado bloco de código em uma linha (e, claro, posteriormente você pode expandir novamente), deixando assim o código mais curto para se navegar entre o arquivo com mais legibilidade. Quem vem do DreamWeaver deve sentir falta desse recurso.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Indent Guide:&lt;/strong&gt; muito bom para facilitar a leitura do código e evitar que você deixe tags HTML abertas sem querer. Ele cria uma linha guia ligando a tag de abertura e a tag de fechamento de determinado elemento, assim você pode verificar se tá tudo indentado certinho e ver se está fechando corretamente.&lt;/p&gt;

&lt;p&gt;Entre outras milhares de extensões e recursos, isso é só um resumo.&lt;/p&gt;

&lt;p&gt;Se você se interessou, você pode fazer o download no &lt;a href=&#34;http://brackets.io/&#34; target=&#34;_blank&#34;&gt;site oficial&lt;/a&gt;, tem versões para Windows, MAC OS X e Linux, funciona muito bem nos três sistemas. Teste, é de graça!&lt;/p&gt;

&lt;p&gt;Se você já usa o Brackets e quer fazer um adendo ou uma correção, por favor, colabore, tenho interesse em saber o que você descobriu sobre ele.&lt;/p&gt;

&lt;p&gt;E se você tem alguma dúvida ou quer mais artigos sobre ele, só deixar também seu comentário.&lt;/p&gt;

&lt;p&gt;Até a próxima!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Comandos iniciais do Git</title>
      <link>https://tableless.github.io/hugo-public/alguns-comandos-git/</link>
      <pubDate>Fri, 09 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/alguns-comandos-git/</guid>
      <description>

&lt;p&gt;O Git é um &lt;a href=&#34;http://tableless.com.br/introducao-das-premissas-dos-controles-de-versao/&#34; title=&#34;Introdução das premissas dos controles de versão&#34;&gt;sistema de controle de versão&lt;/a&gt;. Com o Git você não perderá seu trabalho, vai poder voltar para a versões anteriores, recuperando a versão do seu código de antes de ter cometido o erro e poderá criar e trabalhar diversas versões em paralelo.&lt;/p&gt;

&lt;p&gt;Uma ótima leitura que indico é o livro &lt;a title=&#34;Livro Pro Git&#34; href=&#34;http://git-scm.com/book/en/v2&#34; target=&#34;_blank&#34;&gt;Pro Git&lt;/a&gt;, escrito por Scott Chacon. Ele descreve corretamente sobre o controle de versão. Olhe só:&lt;/p&gt;

&lt;h4 id=&#34;o-que-é-controle-de-versão-e-por-que-você-deve-se-importar&#34;&gt;O que é controle de versão, e por que você deve se importar?&lt;/h4&gt;

&lt;p&gt;&amp;#8220;O controle de versão é um sistema que registra as mudanças feitas em um arquivo ou um conjunto de arquivos ao longo do tempo, de forma que você possa recuperar versões específicas.&lt;/p&gt;

&lt;p&gt;Se quer manter todas as versões de uma imagem ou layout, usar um Sistema de Controle de Versão (Version Control System ou VCS) é uma decisão sábia. Ele permite reverter arquivos e projetos inteiros para um estado anterior, compara mudanças feitas ao decorrer do tempo, vê quem foi o último a modificar algo que pode estar causando problemas, quem introduziu um bug e quando, e muito mais. Usar um VCS normalmente significa que caso tenha estragado ou perdido algum arquivo, poderá facilmente reavê-los. Além disso, você pode controlar tudo sem maiores esforços.&amp;#8221;&lt;/p&gt;

&lt;h2 id=&#34;vamos-lá&#34;&gt;Vamos lá!&lt;/h2&gt;

&lt;p&gt;Bom, depois dessa aula com Scott Chacon, vamos ver alguns códigos!&lt;/p&gt;

&lt;p&gt;Lembrando que todos os comandos aqui devem ser feitos pelo Terminal, Console, GitBash, entre outros e o não recomendado Prompt de Comando do Windows, incluindo entradas e saídas de pastas, tudo por comandos!&lt;/p&gt;

&lt;h3 id=&#34;iniciando-o-git&#34;&gt;Iniciando o Git&lt;/h3&gt;

&lt;p&gt;Entre no diretório que deseja controlar a versão e inicie o Git assim:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git init&lt;/pre&gt;

&lt;p&gt;Feito isso, seus arquivos ainda não estão sendo versionados, mas eles estão esperando para serem adicionados no estágio de controle. Para fazer isso digite o comando&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git add nome-do-arquivo-incluindo-extensão&lt;/pre&gt;

&lt;p&gt;Se você precisa adicionar todos os arquivos do diretório, basta digitar:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git add .&lt;/pre&gt;

&lt;p&gt;Saber o status do projeto é importante. Com o comando abaixo você consegue ver quais arquivos estão fora do controle, quais foram modificados e estão esperando por uma descrição de modificação etc:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git status&lt;/pre&gt;

&lt;p&gt;Voltando ao estágio anterior do adicionamento:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git reset HEAD nome-do-arquivo&lt;/pre&gt;

&lt;p&gt;Commit &amp;#8211; Comitando:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git commit -m &#34;Mensagem do commit&#34;&lt;/pre&gt;

&lt;p&gt;Adicionando e comitando ao mesmo tempo:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git commit -a -m &#34;Mensagem do commit&#34;&lt;/pre&gt;

&lt;h3 id=&#34;voltando-commits-a-versões-anteriores&#34;&gt;Voltando commits a versões anteriores&lt;/h3&gt;

&lt;p&gt;Voltar um commit:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git reset HEAD~1&lt;/pre&gt;

&lt;p&gt;Voltar dois commits:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git reset HEAD~2&lt;/pre&gt;

&lt;p&gt;Voltando um commit e deixando o arquivo no estagio anterior:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git reset HEAD~1 --soft&lt;/pre&gt;

&lt;p&gt;Voltando um commit e excluindo o arquivo, deixando no estágio anterior:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git reset HEAD~1 --hard&lt;/pre&gt;

&lt;p&gt;Verificando o histórico de commits:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git log&lt;/pre&gt;

&lt;p&gt;Verificando o que foi mudado, diferença entre um arquivo e outro:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git log -p&lt;/pre&gt;

&lt;p&gt;Verificando os 2 últimos commits:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git log -p -2&lt;/pre&gt;

&lt;p&gt;Mostrando as estatísticas de todos os commits:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git log --stat&lt;/pre&gt;

&lt;p&gt;Mostrando todos os commits, cada um em uma linha:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git log --pretty=oneline&lt;/pre&gt;

&lt;p&gt;Mostrando todos os commits dos últimos 2 dias até o momento atual&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git log --since=2.days&lt;/pre&gt;

&lt;p&gt;Criando um branch &amp;#8211; uma ramificação&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git checkout -b nome-do-branch&lt;/pre&gt;

&lt;p&gt;Verificando em que branch você está&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git branch&lt;/pre&gt;

&lt;p&gt;Voltando para o branch master&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git checkout master&lt;/pre&gt;

&lt;h3 id=&#34;jogando-o-branch-criado-no-branch-master&#34;&gt;Jogando o branch criado no branch master&lt;/h3&gt;

&lt;p&gt;Entre como branch master:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git merge nome-do-branch-que-foi-criado&lt;/pre&gt;

&lt;h3 id=&#34;grudando-o-branch-criado-no-branch-master-sem-o-commit&#34;&gt;Grudando o branch criado no branch master sem o commit&lt;/h3&gt;

&lt;p&gt;Somente localmente &amp;#8211; localhost, entre como branch master:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git rebase nome-do-branch-que-foi-criado&lt;/pre&gt;

&lt;p&gt;Removendo um branch:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git branch -D nome-do-branch&lt;/pre&gt;

&lt;p&gt;Vendo branchs remotos:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git branch -a&lt;/pre&gt;

&lt;p&gt;Mostrando o início do hash, quem comitou, quanto tempo atrás, mensagem: descrição do commit:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git log --pretty=format: &#34;%h - %an, %ar : %s&#34;&lt;/pre&gt;

&lt;p&gt;Deletando arquivos:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git rm nome-do-arquivo&lt;/pre&gt;

&lt;p&gt;Deletando todos os aquivos removidos ao mesmo tempo:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git ls-files --deleted | xargs git rm&lt;/pre&gt;

&lt;h3 id=&#34;ignorando-arquivos&#34;&gt;Ignorando arquivos&lt;/h3&gt;

&lt;p&gt;Existem alguns arquivos que muito provavelmente você não vai precisar versionar, como por exemplo os arquivos de cache do SASS, arquivos de configuração e etc. Nesse caso você precisa fazer com que o controle de versão ignore estes arquivos. Para tanto, crie um arquivo chamado &lt;strong&gt;.gitignore&lt;/strong&gt;. Feito isso, dentro deste arquivo, digite o nome ou o endereço das pastas que você quer ignorar. Um exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;# See http://help.github.com/ignore-files/ for more about ignoring files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
# git config --global core.excludesfile ~/.gitignore_global

# Ignore bundler config
/.bundle

# Ignore the build directory
/build

# Ignore Sass&#39; cache
/.sass-cache

# Ignore .DS_store file
.DS_Store
.cache
.rvmrc

vendor/*

.DS_Store

# Vim
*.swp
*.swo

Gemfile.lock
.vagrant
Vagrantfile

# rbenv
.ruby-version

# Ignore deploy related files
deploy

Gemfile.lock

&lt;/pre&gt;

&lt;p&gt;O arquivo &lt;strong&gt;.gitignore&lt;/strong&gt; fica na raiz do projeto.&lt;/p&gt;

&lt;h3 id=&#34;clonando-e-puxando-alterações-de-projetos&#34;&gt;Clonando e puxando alterações de projetos&lt;/h3&gt;

&lt;p&gt;Clonando um projeto remoto:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git clone url-do-projeto&lt;/pre&gt;

&lt;p&gt;Fazendo um clone de outros branchs:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git checkout -b nome-do-branch origin/ nome-do-branch&lt;/pre&gt;

&lt;p&gt;Trazendo, puxando as alterações feitas por outros usuários:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git pull origin master&lt;/pre&gt;

&lt;p&gt;Sincronizando tudo que está no repositório remoto:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git pull&lt;/pre&gt;

&lt;p&gt;Enviando o(s) projeto(s), arquivo(s) para o repositório:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git push origin master&lt;/pre&gt;

&lt;p&gt;Enviando um branch para o repositório:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git push origin nome-do-branch&lt;/pre&gt;

&lt;h3 id=&#34;tags&#34;&gt;Tags&lt;/h3&gt;

&lt;p&gt;As tags servem para marcar uma etapa. Imagine que você vai lançar uma versão, que resolve uma série de problemas. Você pode marcar aquela etapa criando uma tag. Assim fica simples de fazer qualquer rollback do projeto para uma tag específica em vez de voltar para um commit. Você sabe que tudo o que foi feito até aquela tag está funcionando.&lt;/p&gt;

&lt;p&gt;Criando tags:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git tag versão-da-tag&lt;/pre&gt;

&lt;p&gt;Listando tags:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git tag -l&lt;/pre&gt;

&lt;p&gt;Enviando a tag para o repositório&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git push origin master --tags&lt;/pre&gt;

&lt;p&gt;Removendo as tags criadas localmente:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git tag -d versão-da-tag&lt;/pre&gt;

&lt;p&gt;Removendo tag no repositório remoto:&lt;/p&gt;

&lt;pre class=&#34;lang-bash&#34;&gt;git push origin :refs/tags/versão-da-tag&lt;/pre&gt;

&lt;h2 id=&#34;concluindo&#34;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;Se você quer continuar ou iniciar seus estudos com Git, indico o link do livro citado acima, é um ótimo começo, se tiver problemas com o inglês, encontrará várias versões em português.&lt;/p&gt;

&lt;p&gt;O Akita fez um &lt;a href=&#34;http://www.akitaonrails.com/2010/08/17/screencast-comecando-com-git&#34;&gt;screencast para quem está começando com Git&lt;/a&gt;. Vale a pena ver.&lt;/p&gt;

&lt;p&gt;O pessoal da CodeSchool juntamente com o GitHub fizeram uma página exclusivamente para ensinar Git na prática. &lt;a href=&#34;https://try.github.io/levels/1/challenges/1&#34;&gt;Visite aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Há também a &lt;a href=&#34;http://www.git-scm.com/&#34;&gt;documentação do Git&lt;/a&gt; que é bastante completa.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Extract for Brackets by Adobe</title>
      <link>https://tableless.github.io/hugo-public/extract-brackets-adobe/</link>
      <pubDate>Wed, 24 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/extract-brackets-adobe/</guid>
      <description>&lt;p&gt;Eu sei que você deve ser um cara apaixonado pelo Sublime, eu também sou. Mas quando algo legal está sendo feito por outras pessoas, nós temos que considerar. O meu segundo editor preferido, o Brackets, tem e vai ter algumas features sensacionais. Uma dessas features você já deve conhecer que é o &lt;a href=&#34;http://creativeandcode.com/psd-lens-for-adobe-brackets/&#34;&gt;PSD Lens&lt;/a&gt;, que ainda está em desenvolvimento. Mas outra feature que pode ser usada JÁ é o Extract for Brackets do serviço Creative Cloud da Adobe.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/brackets-extract.jpg&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/brackets-extract.jpg&#34; alt=&#34;brackets-extract&#34; width=&#34;1679&#34; height=&#34;1025&#34; class=&#34;alignnone size-full wp-image-46397&#34; srcset=&#34;uploads/2014/12/brackets-extract.jpg 1679w, uploads/2014/12/brackets-extract-227x139.jpg 227w, uploads/2014/12/brackets-extract-400x244.jpg 400w&#34; sizes=&#34;(max-width: 1679px) 100vw, 1679px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Como a Adobe ainda ajuda a comunidade, ela consegue fazer coisas maravilhosas como o projeto &lt;a href=&#34;http://www.adobe.com/br/creativecloud/extract.html&#34;&gt;Creative Cloud Extract&lt;/a&gt;. A ideia é: você sobe um PSD para o Extract, ele abre o PSD em uma interface direto do seu browser. Você clica nos elementos e o serviço te passa o código CSS… O código é bastante enxuto. Sou bastante contra coisas que fazem códigos front-end de forma automática, mas esse está indo no caminho certo e como é apenas código CSS e ele não escreve no seu projeto, você tem alto nível de controle. Ele ainda consegue extrair os assets de uma determinada Layer. Sensacional. Quer saber o mais legal? Você pode usar o serviço sem precisar do Brackets. Mesmo assim, tem que ter uma conta no Creative Cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/adobe-extract.jpg&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/adobe-extract.jpg&#34; alt=&#34;adobe-extract&#34; width=&#34;1542&#34; height=&#34;1095&#34; class=&#34;alignnone size-full wp-image-46396&#34; srcset=&#34;uploads/2014/12/adobe-extract.jpg 1542w, uploads/2014/12/adobe-extract-195x139.jpg 195w, uploads/2014/12/adobe-extract-400x284.jpg 400w&#34; sizes=&#34;(max-width: 1542px) 100vw, 1542px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Com o Extract a gente consegue explorar um PSD e ter as seguintes informações:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Copiar textos e CSS&lt;/li&gt;
&lt;li&gt;Conseguir informações de a cor, gradientes e font&lt;/li&gt;
&lt;li&gt;Medir distâncias entre os elementos&lt;/li&gt;
&lt;li&gt;Salvar imagens otimizadas prontas para produção&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fiz alguns testes aqui e realmente é uma mão na roda, principalmente para tirar pequenas dúvidas sobre quanto é o valor do border-radius de um determinado elemento ou qual exatamente as dimensões de um botão.&lt;/p&gt;

&lt;p&gt;Vale a pena conferir.&lt;/p&gt;

&lt;p&gt;Leia mais:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://helpx.adobe.com/creative-cloud/help/extract-css-images-psd-files.html#extract_image_assets&#34;&gt;Página de Help da Adobe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.adobe.com/br/creativecloud/extract.html&#34;&gt;Página oficial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>7 Plugins do sublime text que você deveria conhecer</title>
      <link>https://tableless.github.io/hugo-public/7-plugins-sublime-text-que-voce-deveria-conhecer/</link>
      <pubDate>Tue, 26 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/7-plugins-sublime-text-que-voce-deveria-conhecer/</guid>
      <description>

&lt;h2 id=&#34;o-package-control&#34;&gt;O Package Control&lt;/h2&gt;

&lt;p&gt;Antes de tentar instalar qualquer pacote e começar a brincadeira, é importante que você já tenha instalado em seu Sublime o “package control&amp;#8221; de acordo com sua versão: &lt;a href=&#34;https://sublime.wbond.net/installation#st2&#34;&gt;Sublime Text 2&lt;/a&gt; ou &lt;a href=&#34;https://sublime.wbond.net/installation#st3&#34;&gt;Sublime Text 3&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O Package Control é um plugin para Sublime que vai gerenciar todos os outros plugins. Com ele você vai instalar, desinstalar e configurar todos os plugins do seu Sublime.&lt;/p&gt;

&lt;p&gt;Saiba mais &lt;a href=&#34;https://sublime.wbond.net/installation&#34; target=&#34;_blank&#34;&gt;aqui!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/08/02.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-43953&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/08/02.jpg&#34; alt=&#34;02&#34; width=&#34;531&#34; height=&#34;359&#34; srcset=&#34;uploads/2014/08/02.jpg 531w, uploads/2014/08/02-205x139.jpg 205w, uploads/2014/08/02-400x270.jpg 400w&#34; sizes=&#34;(max-width: 531px) 100vw, 531px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-8211-emmet&#34;&gt;1 &amp;#8211; Emmet&lt;/h2&gt;

&lt;p&gt;O Emmet (anteriormente conhecido como Zen Coding) é simplesmente um conjunto de ferramentas de desenvolvimento web que ajudam a codificação de HTML e CSS. Ele permite que você crie, com mais velocidade, seus elementos através de expressões específicas, seguidas da tecla TAB. Saiba mais em &lt;a href=&#34;http://emmet.io/&#34;&gt;http://emmet.io/&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;escrita-da-expressão&#34;&gt;Escrita da expressão:&lt;/h4&gt;

&lt;pre class=&#34;lang-html&#34;&gt;ul # nav&amp;gt; li.item $ * 4&amp;gt; a {item $} + TAB&lt;/pre&gt;

&lt;h4 id=&#34;resultado&#34;&gt;Resultado:&lt;/h4&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;Ul id = &#34;nav&#34;&amp;gt;
   &amp;lt;Li class = &#34;Item1&#34;&amp;gt; &amp;lt;a href=&#34;&#34;&amp;gt; &amp;lt;/a&amp;gt; News Item 1 &amp;lt;/ li&amp;gt;
   &amp;lt;Li class = &#34;Item2&#34;&amp;gt; &amp;lt;a href=&#34;&#34;&amp;gt; &amp;lt;/a&amp;gt; Item 2 &amp;lt;/ li&amp;gt;
   &amp;lt;Li class = &#34;Item3&#34;&amp;gt; &amp;lt;a href=&#34;&#34;&amp;gt; &amp;lt;/a&amp;gt; ponto 3 &amp;lt;/ li&amp;gt;
   &amp;lt;Li class = &#34;Item4&#34;&amp;gt; &amp;lt;a href=&#34;&#34;&amp;gt; Novamente, 4 &amp;lt;/a&amp;gt; &amp;lt;/ li&amp;gt;
&amp;lt;/ Ul&amp;gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-8211-jquery&#34;&gt;2 &amp;#8211; jQuery&lt;/h2&gt;

&lt;p&gt;Esse plugin pode facilitar bastante na momento da criação de bibliotecas em seus projetos. Ele é um pacote que fornece alguns trechos para a maioria dos métodos do jQuery, muito usados no dia a dia.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/08/03.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-43965&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/08/03.jpg&#34; alt=&#34;03&#34; width=&#34;531&#34; height=&#34;359&#34; srcset=&#34;uploads/2014/08/03.jpg 531w, uploads/2014/08/03-205x139.jpg 205w, uploads/2014/08/03-400x270.jpg 400w&#34; sizes=&#34;(max-width: 531px) 100vw, 531px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;3-8211-colorhighlighter&#34;&gt;3 &amp;#8211; ColorHighlighter&lt;/h2&gt;

&lt;p&gt;Esse é um plugin maneiríssimo e serve para o Sublime Text 2 e 3. Ele inspeciona discretamente os valores de cores hexadecimais selecionados em diferentes estilos e ícones. Além disso, o plugin adiciona o seletor de cores eum conversor de formato de cor. Seria um tipo de “inspecionar elemento” para cores em tempo real. =]&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/08/04.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-43966&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/08/04.gif&#34; alt=&#34;04&#34; width=&#34;700&#34; height=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-8211-aligntab&#34;&gt;4 &amp;#8211; AlignTab&lt;/h2&gt;

&lt;p&gt;Esse plugin é bem interessante para sua forma de organização de códigos. Ele vai te auxiliar a permanecer com uma indentação 100% padronizada. É um plugin de alinhamento usando expressão regular. Confira abaixo suas características:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Alinha usando expressão regular&lt;/li&gt;
&lt;li&gt;Espaçamento personalizado, preenchimento e justificado&lt;/li&gt;
&lt;li&gt;Detecção inteligente para alinhamentos se linhas são selecionadas&lt;/li&gt;
&lt;li&gt;Suporte a múltiplos cursores&lt;/li&gt;
&lt;li&gt;Modo de mesa e modo de visualização ao vivo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/08/05.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-43970&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/08/05.gif&#34; alt=&#34;05&#34; width=&#34;690&#34; height=&#34;388&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;5-8211-colorschemeselector&#34;&gt;5 &amp;#8211; ColorSchemeSelector&lt;/h2&gt;

&lt;p&gt;Esse plugin costuma chamar de “plugin para design”, porque ele vai permitir que você crie uma customização no seu Sublime Text. Resumidamente ele serve para selecionar esquema de cores através do Painel. Infelizmente isso só são adotados cores padrões escolhidas pela ferramenta.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/08/06.gif&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-43971&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/08/06.gif&#34; alt=&#34;06&#34; width=&#34;840&#34; height=&#34;534&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;6-8211-css3-syntax-ou-css3&#34;&gt;6 &amp;#8211; CSS3 Syntax ou CSS3&lt;/h2&gt;

&lt;p&gt;Esse plugin serve para manter uma boa organização no CSS. Existem casos onde queremos acabar ir logo embora para casa e acabamos esquecendo um simples &amp;#8220;&lt;strong&gt;;&lt;/strong&gt;&amp;#8220;. O CSS3 Syntax ou apenas CSS3 é bem abrangente, pois se baseia nos mais recentes projetos e especificações atuais. &lt;strong&gt;Uso: Navegue até View &amp;gt; Syntax &amp;gt; CSS3&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&#34;todas-as-propriedades-deverão-terminar-com-ponto-e-vírgula&#34;&gt;Todas as propriedades deverão terminar com ponto e vírgula.&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/08/07.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-43972&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/08/07.jpg&#34; alt=&#34;07&#34; width=&#34;499&#34; height=&#34;222&#34; srcset=&#34;uploads/2014/08/07.jpg 499w, uploads/2014/08/07-265x117.jpg 265w, uploads/2014/08/07-400x177.jpg 400w&#34; sizes=&#34;(max-width: 499px) 100vw, 499px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;todas-as-propriedades-deverão-ser-escritas-em-minúsculo&#34;&gt;Todas as propriedades deverão ser escritas em minúsculo.&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/08/08.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-43973&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/08/08.jpg&#34; alt=&#34;08&#34; width=&#34;499&#34; height=&#34;219&#34; srcset=&#34;uploads/2014/08/08.jpg 499w, uploads/2014/08/08-265x116.jpg 265w, uploads/2014/08/08-400x175.jpg 400w&#34; sizes=&#34;(max-width: 499px) 100vw, 499px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;OBS: O plugin &lt;strong&gt;CSS3 Syntax&lt;/strong&gt; estava para ser substituído pelo &lt;strong&gt;“CSS3”&lt;/strong&gt;. Na hora de instalar, pesquise pelo 2 nomes e instale o que for de sua preferência.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;7-8211-javascriptnext&#34;&gt;7 &amp;#8211; JavaScriptNext&lt;/h2&gt;

&lt;p&gt;Bom. Como a graça é sempre deixar o melhor pro final, te apresento o &lt;strong&gt;JavaScriptNext.&lt;/strong&gt; Este é um pacote de sintaxe melhorada para JavaScript. Baseia-se nos arquivos de linguagem comumente usados ​​e também inclui novos recursos de ECMAScript 6 como módulos, métodos, arrows functions, classes, geradores e acessores (ES5).&lt;/p&gt;

&lt;p&gt;Se você quiser usá-lo para cada arquivo js, você ​​cria ou abra um arquivo JavaScript, e dai clica no nome de sintaxe no canto inferior direito do Sublime, em seguida, clique em &amp;#8220;Abrir todos com extensão atual e depois selecione JavascriptNext &amp;#8211; ES6 &amp;gt; JavascriptNext.&lt;/p&gt;

&lt;p&gt;Você já vai poder ir testando as novas funcionalidades que o ES6 tem para apresentar, e é claro, ir se familiarizando com essa parada nota 10.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/08/10.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-43976&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/08/10.jpg&#34; alt=&#34;10&#34; width=&#34;650&#34; height=&#34;459&#34; srcset=&#34;uploads/2014/08/10.jpg 650w, uploads/2014/08/10-196x139.jpg 196w, uploads/2014/08/10-400x282.jpg 400w&#34; sizes=&#34;(max-width: 650px) 100vw, 650px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/08/09.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-43974&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/08/09.jpg&#34; alt=&#34;09&#34; width=&#34;630&#34; height=&#34;366&#34; srcset=&#34;uploads/2014/08/09.jpg 630w, uploads/2014/08/09-239x139.jpg 239w, uploads/2014/08/09-400x232.jpg 400w&#34; sizes=&#34;(max-width: 630px) 100vw, 630px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;concluindo&#34;&gt;Concluindo&lt;/h3&gt;

&lt;p&gt;Pesquise e estude suas ferramentas de trabalho. Seu editor pode se tornar muito mais poderoso do que você pode imaginar. De repente todo mundo estava usando Sublime Text e isso faz com que esse editor seja poderoso. Há outros editores surgindo e ganhando espaço no mercado, como o Atom e o Brakets, mas o Sublime foi um acontecimento inesperado e feliz.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Macaw: O que você vê é o que você tem.</title>
      <link>https://tableless.github.io/hugo-public/macaw-o-que-voce-ve-e-o-que-voce-tem/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/macaw-o-que-voce-ve-e-o-que-voce-tem/</guid>
      <description>

&lt;p&gt;Sempre digo que minha missão como desenvolvedor é descobrir coisa nova. Não importa se irei usar ou não, se gostei ou não, o importante é saber que aquilo existe, e que, provavelmente um dia, por alguma alteração nas constelações, terei que usar.&lt;/p&gt;

&lt;p&gt;E hoje, sem mais nem menos, venho lhes apresentar o novo &amp;#8220;WYSIWYG&amp;#8221; (ele &lt;del datetime=&#34;2014-04-05&#34;&gt;não&lt;/del&gt; entraria nessa categoria, mas é que semelhanças são meras coincidências) chamado &lt;a href=&#34;http://macaw.co/&#34;&gt;MACAW&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;uma-ideia&#34;&gt;Uma ideia&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/Macaw.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/Macaw.png&#34; alt=&#34;Macaw&#34; width=&#34;400&#34; height=&#34;400&#34; class=&#34;aligncenter size-full wp-image-42007&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Macaw, assim como outros projetos que vem surgindo por ai, teve seu início no Kickstarter, pedindo fundos para poder iniciar o projeto. Em primeira mão seria desenvolvido especialmente para OS X, mas abriram o leque de opções e também ofereceram uma versão para PC.&lt;/p&gt;

&lt;p&gt;O projeto teve a frente tomada por &lt;a href=&#34;http://attasi.com/&#34;&gt;Tom Giannattasio&lt;/a&gt; e outros desenvolvedores. O pessoal curtiu tanto a ideia desses malucos que conseguiram arrecadar em torno de 275,929 doletas.  Se você quiser, pode conferir o projeto na Kickstarter clicando &lt;a href=&#34;https://www.kickstarter.com/projects/macaw/macaw-the-code-savvy-web-design-tool&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;da-teoria-á-prática&#34;&gt;Da teoria á prática&lt;/h2&gt;

&lt;p&gt;A teoria desse novo software é a seguinte: &amp;#8220;Pare de escrever código, desenhe ele.&amp;#8221; Parece um pouco bizarro, mas em prática ficou decente. Não sou uma prova viva de que isso realmente funcione, mas, assim como o nosso amigo Dreamweaver, você pode simplesmente ir &amp;#8220;desenhando&amp;#8221; e posicionando os elementos no lugar que você quer e está feito.&lt;/p&gt;

&lt;p&gt;Achei legal que ele já vem acompanhado do sistema de Grids, com vários tamanhos e estilos, pra você usar da forma que preferir. É claro que você tem a opção de editar o CSS, não apenas usar o mouse pra controla-lo. Os criadores afirmam e mostram que os projetos podem ser responsivos, semânticos e accessíveis. Talvez seja essa a diferença do Macaw para qualquer outro Software nesse estilo, a opção de, optar como você quer que seu código saia no final do projeto.&lt;/p&gt;

&lt;p&gt;Mesmo que seja um &amp;#8220;WYSIWYG&amp;#8221;, você não vai perder a semântica do HTML5, que é uma das coisas mais importantes no padrão web de hoje em dia (as ferramentas de busca agradecem!). Não vai perder o acesso do celular por seu site estar todo quebrado, porque você pode fazer ele responsivo e também não vai uma pessoa com necessidade ou um simples robô &amp;#8220;na mão&amp;#8221; por não conseguir interpretar o seu código.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/04/macaw2.png&#34;&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/04/macaw2.png&#34; alt=&#34;Macaw.co&#34; width=&#34;620&#34; height=&#34;859&#34; class=&#34;aligncenter size-full wp-image-42008&#34; srcset=&#34;uploads/2014/04/macaw2.png 620w, uploads/2014/04/macaw2-400x554.png 400w&#34; sizes=&#34;(max-width: 620px) 100vw, 620px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;8220-getting-started-8221&#34;&gt;&amp;#8220;Getting Started&amp;#8221;&lt;/h2&gt;

&lt;p&gt;Infelizmente o software não é &amp;#8220;&lt;strong&gt;free&lt;/strong&gt;&amp;#8220;. Ele possui um &lt;a href=&#34;http://download.macaw.co/&#34;&gt;Trial de 15 dias&lt;/a&gt; para testes, e, caso você se apaixone, pode &lt;a href=&#34;https://secure.macaw.co/&#34;&gt;comprá-lo&lt;/a&gt; por &lt;em&gt;apenas&lt;/em&gt; 179 dólares. Está disponível para OS X e PC.&lt;/p&gt;

&lt;p&gt;O preço é um pouco salgado pra quem realmente curtiu o programa, mas tudo vai do custo x benefício. Se vai lhe ajudar ou salvar, é algo que você deve tirar a conclusão e ver se realmente vale o investimento.&lt;/p&gt;

&lt;h2 id=&#34;concluindo&#34;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;Eu nunca gostei de softwares nesse estilo, com essa proposta de &amp;#8220;retirar&amp;#8221; o coding de um projeto. Mas, por outro lado, não posso dizer que o Macaw promete muita coisa. É como eu disse no começo desse artigo: esse software não serve pra mim, mas, talvez, ele servirá pra alguém, e se esse alguém souber usar muito bem, ele saberá fazer sites tão bonitos/semânticos/accessíveis quanto qualquer outro. Eu não gosto de ignorar conhecimento. Mesmo que eu nunca use esse software, saberei que ele existe e que um dia pode ser tornar uma febre por ai.&lt;/p&gt;

&lt;p&gt;Falei pouco sobre o Macaw, mas eu queria vir trazer essa introdução do programa à vocês, acho interessante deixar todo mundo a par do que está rolando ai por fora.&lt;/p&gt;

&lt;p&gt;Deixarei aqui alguns links úteis caso queiram olhar um pouquinho mais do MACAW:&lt;/p&gt;

&lt;p&gt;Site oficial &amp;gt; &lt;a href=&#34;http://macaw.co/&#34;&gt;macaw.co&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download Trial &amp;gt; &lt;a href=&#34;http://download.macaw.co/&#34;&gt;download.macaw.co&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comprar &amp;gt; &lt;a href=&#34;https://secure.macaw.co/&#34;&gt;secure.macaw.co&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fórum de discussão &amp;gt; &lt;a href=&#34;http://forum.macaw.co/&#34;&gt;forum.macaw.co&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Projeto no Kickstarter &amp;gt; &lt;a href=&#34;https://www.kickstarter.com/projects/macaw/macaw-the-code-savvy-web-design-tool&#34;&gt;Macaw: The Code-Savvy Web Design Tool&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vamos discutir sobre o assunto, porque discutir é sempre saudável, hehe.&lt;/p&gt;

&lt;p&gt;Abraços, até a próxima 😉&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Atom: o novo editor by Github</title>
      <link>https://tableless.github.io/hugo-public/atom-o-novo-editor-github/</link>
      <pubDate>Thu, 27 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://tableless.github.io/hugo-public/atom-o-novo-editor-github/</guid>
      <description>

&lt;p&gt;É quase impossível não comparar o Atom com o Sublime. O Sublime cravou um padrão com seus shortcuts, sua interface e sua coleção de comandos que é muito difícil ignorar. O Atom tem a cara do Sublime. Diferente do Brackets, que é bem diferente tanto na interface quanto nos shortcuts. Estou usando o Brackets para algumas coisas e estou gostando bastante. Mas a curva de aprendizado, quando acostumado com o Sublime, é muito grande. Com o Atom você já vai conhecer meia dúzia de shortcuts, facilitando muito a migração.&lt;/p&gt;

&lt;p&gt;Sinceramente eu não me lembro quando o Sublime tomou conta de tudo. Um dia, todo mundo acordou com o Sublime instalado, sabendo todos os atalhos e as manhas do editor. Não teve tempo de aprendizado. Ninguém mais fica brigando qual editor é melhor&amp;#8230; Todo mundo sabe que VIM é coisa de louco e Sublime coisa de gente normal (brincadeira). É inegável que o Sublime entendeu como digitávamos código, retirando tudo que era ruído e deixando apenas o que interessava. Isso começa pela interface e termina na forma com que executamos e manipulamos comandos.&lt;/p&gt;

&lt;p&gt;O Atom seguiu o mesmo caminho. Ele pegou tudo que era bom do Sublime e ainda teve ideias originais e geniais para facilitar ainda mais a nossa vida. É como se o Atom fosse uma nova versão do Sublime. É difícil até de pensar o que o Sublime mudaria para melhorar e até concorrer com o Atom.&lt;/p&gt;

&lt;p&gt;Essa similaridade entre os editores não é ruim. Mas o que vai importar mesmo são as features extras que cada um pode trazer no futuro. Descrevi algumas features legais que me chamaram mais a atenção e que se diferenciam totalmente do Sublime.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/Screen-Shot-2014-02-27-at-13.56.31.png&#34; alt=&#34;Atom editor github&#34; class=&#34;alignnone size-full wp-image-41283&#34; srcset=&#34;uploads/2014/02/Screen-Shot-2014-02-27-at-13.56.31.png 1216w, uploads/2014/02/Screen-Shot-2014-02-27-at-13.56.31-177x168.png 177w, uploads/2014/02/Screen-Shot-2014-02-27-at-13.56.31-327x310.png 327w, uploads/2014/02/Screen-Shot-2014-02-27-at-13.56.31-400x378.png 400w&#34; sizes=&#34;(max-width: 1216px) 100vw, 1216px&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;aparência-e-themes&#34;&gt;Aparência e themes&lt;/h2&gt;

&lt;p&gt;Não há muito o que falar sobre aparência geral do editor. Ele é bem parecido com o Sublime Text, só que com uma vantagem: você consegue customizar praticamente QUALQUER COISA usando CSS.&lt;/p&gt;

&lt;p&gt;Seguindo o menu &lt;strong&gt;Atom &amp;gt; Open Your Stylesheet&lt;/strong&gt;, o Atom abre um arquivo CSS onde você customiza o que quiser na tela. Muda cor de texto, font, background, margin, padding, TUDO.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/Screen-Shot-2014-02-27-at-14.42.08.png&#34; alt=&#34;Screen Shot 2014-02-27 at 14.42.08&#34; class=&#34;alignnone size-full wp-image-41287&#34; srcset=&#34;uploads/2014/02/Screen-Shot-2014-02-27-at-14.42.08.png 1442w, uploads/2014/02/Screen-Shot-2014-02-27-at-14.42.08-210x168.png 210w, uploads/2014/02/Screen-Shot-2014-02-27-at-14.42.08-388x310.png 388w, uploads/2014/02/Screen-Shot-2014-02-27-at-14.42.08-400x319.png 400w&#34; sizes=&#34;(max-width: 1442px) 100vw, 1442px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Aí vem a pergunta: Mas como vou saber os elementos que devo formatar? Simples, abra um Inspector. Siga o menu &lt;strong&gt;View &amp;gt; Developer &amp;gt; Toggle Developer Tools&lt;/strong&gt;. O Inspector que se abre é o padrão do Webkit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/Screen-Shot-2014-02-27-at-13.56.31.png&#34; alt=&#34;Atom editor github&#34; class=&#34;alignnone size-full wp-image-41283&#34; srcset=&#34;uploads/2014/02/Screen-Shot-2014-02-27-at-13.56.31.png 1216w, uploads/2014/02/Screen-Shot-2014-02-27-at-13.56.31-177x168.png 177w, uploads/2014/02/Screen-Shot-2014-02-27-at-13.56.31-327x310.png 327w, uploads/2014/02/Screen-Shot-2014-02-27-at-13.56.31-400x378.png 400w&#34; sizes=&#34;(max-width: 1216px) 100vw, 1216px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Desse jeito fica muito, muito fácil personalizar o visual do editor e até criar um novo tema para compartilhar por aí.&lt;/p&gt;

&lt;p&gt;Um detalhe: você pode escrever CSS puro ser quiser, sem problema, mas para os mais ousados, fique à vontade para escrever em LESS. Muito útil se quiser fazer um tema para o editor.&lt;/p&gt;

&lt;h3 id=&#34;styleguide&#34;&gt;Styleguide&lt;/h3&gt;

&lt;p&gt;Indo para o menu &lt;strong&gt;Packages &amp;gt; Styleguide &amp;gt; Show&lt;/strong&gt;, o Atom te mostra um guia de estilo do tema atual. Ele mostra o markup do HTML e também o CSS que faz esse HTML ficou bonitão. Isso serve para ajudar os criadores de temas a revisarem seus estilos e como eles se comportam nos elementos do editor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/Screen-Shot-2014-02-27-at-17.35.28.png&#34; alt=&#34;Screen Shot 2014-02-27 at 17.35.28&#34; class=&#34;alignnone size-full wp-image-41289&#34; srcset=&#34;uploads/2014/02/Screen-Shot-2014-02-27-at-17.35.28.png 1394w, uploads/2014/02/Screen-Shot-2014-02-27-at-17.35.28-263x168.png 263w, uploads/2014/02/Screen-Shot-2014-02-27-at-17.35.28-486x310.png 486w, uploads/2014/02/Screen-Shot-2014-02-27-at-17.35.28-400x254.png 400w&#34; sizes=&#34;(max-width: 1394px) 100vw, 1394px&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;settings&#34;&gt;Settings&lt;/h2&gt;

&lt;p&gt;Essa parte é sensacional. O Sublime não tem uma área para controlar as configurações do editor. Você muda essas preferências direto no arquivos de configuração do editor. Isso é genial na primeira vez, mas depois você sente alguma falta de apertar botões, saber que tudo tá funcionando, ter certeza de que não alterou nada que vá destruir seus shortcuts, tema e outras configurações. Já o Atom tem a famosa tela de configurações, como qualquer outro programa. Nele você gerencia os packages (plugins), temas e shortcuts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/Screen-Shot-2014-02-27-at-14.41.28.png&#34; alt=&#34;Screen Shot 2014-02-27 at 14.41.28&#34; class=&#34;alignnone size-full wp-image-41286&#34; srcset=&#34;uploads/2014/02/Screen-Shot-2014-02-27-at-14.41.28.png 1442w, uploads/2014/02/Screen-Shot-2014-02-27-at-14.41.28-210x168.png 210w, uploads/2014/02/Screen-Shot-2014-02-27-at-14.41.28-388x310.png 388w, uploads/2014/02/Screen-Shot-2014-02-27-at-14.41.28-400x319.png 400w&#34; sizes=&#34;(max-width: 1442px) 100vw, 1442px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;As vezes, quando você precisa fazer algo muito personalizado é legal editar os arquivos de configuração do próprio editor, aí o Atom, como no Sublime Text, permite que você modifique as configurações personalizadas em arquivos específicos. Você pode gravar scripts, customizar seus próprios shortcuts, snippets etc.&lt;/p&gt;

&lt;h3 id=&#34;keybindings&#34;&gt;Keybindings&lt;/h3&gt;

&lt;p&gt;Logo de cara você já tem a listagem dos shortcuts do editor, com um search decente que te ajuda a encontrar os comandos. No Sublime Text você ficava vasculhando no arquivo de configuração ou procurando no Google. Não era difícil, mas era pouco confortável.&lt;/p&gt;

&lt;h2 id=&#34;tudo-são-módulos&#34;&gt;Tudo são módulos&lt;/h2&gt;

&lt;p&gt;O Atom chama seus plugins de Packages. Estes packages fazem parte das configurações do editor ou são apenas plugins que estendem as funcionalidades já existentes. Todos estes packages são módulos independentes e todos eles estão no Github, prontos para serem forkados, compartilhados e etc&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/Screen-Shot-2014-02-27-at-14.41.13.png&#34; alt=&#34;Atom editor github&#34; class=&#34;alignnone size-full wp-image-41285&#34; srcset=&#34;uploads/2014/02/Screen-Shot-2014-02-27-at-14.41.13.png 1442w, uploads/2014/02/Screen-Shot-2014-02-27-at-14.41.13-210x168.png 210w, uploads/2014/02/Screen-Shot-2014-02-27-at-14.41.13-388x310.png 388w, uploads/2014/02/Screen-Shot-2014-02-27-at-14.41.13-400x319.png 400w&#34; sizes=&#34;(max-width: 1442px) 100vw, 1442px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Outro detalhe importante é que ele mostra quantos milisegundos a mais o Atom demorará para iniciar com aquele módulo habilitado. Nunca mais você vai deixar seu editor pesado sem saber o motivo.&lt;/p&gt;

&lt;p&gt;Como não podia faltar, ele já vem com um search para encontrar novos packages. Basta procurar, clicar em Install e pronto. No Sublime, você precisa instalar o Package Control.&lt;/p&gt;

&lt;h3 id=&#34;timecop&#34;&gt;Timecop&lt;/h3&gt;

&lt;p&gt;A ideia do Atom é que você domine totalmente o editor. Para isso, é legal saber o que exatamente está rodando nele. O Atom ajuda você a manter o controle com uma feature chamada Timecop.&lt;/p&gt;

&lt;p&gt;O Timecop mostra quanto de tempo cada package demora para carregar. Isso permite descartar aqueles packages que não usamos tanto, mas que estão fazendo nosso editor ficar uma carroça.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2014/02/Screen-Shot-2014-02-27-at-17.27.38.png&#34; alt=&#34;Screen Shot 2014-02-27 at 17.27.38&#34; class=&#34;alignnone size-full wp-image-41288&#34; srcset=&#34;uploads/2014/02/Screen-Shot-2014-02-27-at-17.27.38.png 1138w, uploads/2014/02/Screen-Shot-2014-02-27-at-17.27.38-215x168.png 215w, uploads/2014/02/Screen-Shot-2014-02-27-at-17.27.38-397x310.png 397w, uploads/2014/02/Screen-Shot-2014-02-27-at-17.27.38-400x312.png 400w&#34; sizes=&#34;(max-width: 1138px) 100vw, 1138px&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;comandos-básicos-e-atalhos&#34;&gt;Comandos básicos e atalhos&lt;/h3&gt;

&lt;p&gt;Aqui não tem nenhum segredo porque é tudo muito parecido com o Sublime Text: aperte &lt;strong&gt;cmd+shift+p&lt;/strong&gt; e procure o comando desejado. Dá para encontrar ali seus shortcuts/keybindings customizados também.&lt;/p&gt;

&lt;p&gt;Com o atalho &lt;strong&gt;cmd+t&lt;/strong&gt; você consegue procurar um determinado arquivo no seu projeto. Igual ao Sublime, nem precisa decorar.&lt;/p&gt;

&lt;h3 id=&#34;adicionando-movendo-e-deletando-arquivos&#34;&gt;Adicionando, movendo e deletando arquivos&lt;/h3&gt;

&lt;p&gt;Para manipular os arquivos direto pela tree view, basta selecionar o arquivo e apertar a tecla &lt;strong&gt;a&lt;/strong&gt; para adicionar um novo arquivo, &lt;strong&gt;m&lt;/strong&gt; para mover e &lt;strong&gt;delete&lt;/strong&gt; para deletar o arquivo/pasta.&lt;/p&gt;

&lt;h2 id=&#34;review-em-vídeo&#34;&gt;Review em vídeo&lt;/h2&gt;

&lt;p&gt;O &lt;a href=&#34;http://zenorocha.com/&#34;&gt;Zeno&lt;/a&gt; fez um vídeo, está em inglês, sobre o Atom. Dá uma olhada aí:&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Eu já sai do Sublime e fui pro Atom. Ainda vou continuar acompanhando o Brackets. Existem coisas nele que prometem nos ajudar demais, como essa feature matadora do vídeo abaixo:&lt;/p&gt;

&lt;p&gt;Você pode tratar o Atom como um Sublime melhorado&amp;#8230; você não estaria errado. Mas acho que o futuro dele promete e talvez o Sublime não será mais onipresente como hoje.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>