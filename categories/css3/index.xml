<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css3 on Tableless</title>
    <link>http://tableless.com.br/categories/css3/index.xml</link>
    <description>Recent content in Css3 on Tableless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <atom:link href="http://tableless.com.br/categories/css3/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Contraste de cores – Acessibilidade na web</title>
      <link>http://tableless.com.br/contraste-de-cores-acessibilidade-na-web/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/contraste-de-cores-acessibilidade-na-web/</guid>
      <description>

&lt;p&gt;Nesse post vou explicar uma das opções de como fazer um contraste de cores, existe diretrizes de acessibilidade da &lt;a href=&#34;https://www.w3.org/Translations/WCAG20-pt-PT/&#34; target=&#34;_blank&#34;&gt;WCAG 2.0&lt;/a&gt; que explica o nível aceitável de contraste de cores esperadas em um site, veja nesse &lt;a href=&#34;https://www.w3.org/TR/WCAG20/#visual-audio-contrast&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;proposta&#34;&gt;Proposta&lt;/h2&gt;

&lt;p&gt;Criar um contraste de cores em três níveis (Branco, Preto e Azul) usando HTML5, CSS3, Javascript (Puro), Node e o Cookie do navegado para guarda o contraste escolhido.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56600&#34; src=&#34;uploads/2016/12/html5-css-javascript-logos.png&#34; alt=&#34;html5-css-javascript-logos&#34; width=&#34;1267&#34; height=&#34;287&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;como-será-feito&#34;&gt;Como será feito&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Em uma página teremos quatro links em que o usuário vai escolher (Preto, branco, azul ou sem contraste).&lt;/li&gt;
&lt;li&gt;No evento de click vamos passar para o javascript um valor do atributo &amp;#8216;data-contraste&amp;#8217;.&lt;/li&gt;
&lt;li&gt;Vai ser adicionar na tag &amp;#8216;body&amp;#8217; um &amp;#8216;id&amp;#8217; para o CSS fazer toda a mágica de trocar as cores da página.&lt;/li&gt;
&lt;li&gt;Vai ser guardado no cookie a opção selecionada.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Veja como vai ficar;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-56620&#34; src=&#34;uploads/2016/12/contraste-de-cores.gif&#34; alt=&#34;contraste-de-cores&#34; width=&#34;484&#34; height=&#34;264&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Então&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-56615&#34; src=&#34;uploads/2016/12/ThomasCook_tagline.jpg&#34; alt=&#34;ThomasCook_tagline_hori_cmyk&#34; width=&#34;479&#34; height=&#34;137&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html&#34;&gt;HTML&lt;/h2&gt;

&lt;p&gt;O HTML para esse tipo de projeto é de extrema necessidade ser no mínimo validado pelo &lt;a href=&#34;https://validator.w3.org/&#34;&gt;W3C&lt;/a&gt; e ter nível &amp;#8220;AAA&amp;#8221; em alguma ferramenta de análise de acessibilidade, no caso eu usei o &lt;a href=&#34;http://www.acessibilidade.gov.pt/accessmonitor/&#34;&gt;Accessmonitor&lt;/a&gt;, já usando a WCAG 2.0.&lt;/p&gt;

&lt;p&gt;A atenção na contrução do HTML vai determinar se o usuário acessível vai ter uma boa experiência no seu site ou não.&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-BR&#34;&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
 &amp;lt;title&amp;gt;Artigo contraste de cores&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;css/style.css&#34;&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;div class=&#34;row row-header&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;nav&amp;gt;
 &amp;lt;ul&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#content&#34; title=&#34;Ir para o Conteúdo&#34;&amp;gt;Ir para o Conteúdo&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; title=&#34;Ir para o Topo&#34;&amp;gt;Ir para o Topo&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#footer&#34; title=&#34;Ir para o Rodapé&#34;&amp;gt;Ir para o Rodapé&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;0&#34; title=&#34;Sem Contraste&#34;&amp;gt;Sem Contraste&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;1&#34; title=&#34;Contraste Branco&#34;&amp;gt;Contraste Branco&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;2&#34; title=&#34;Contraste Preto&#34;&amp;gt;Contraste Preto&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;3&#34; title=&#34;Contraste Azul&#34;&amp;gt;Contraste Azul&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/nav&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;!-- End - .container--&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;!-- End - .row--&amp;gt;
 &amp;lt;div class=&#34;row row-top&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;strong&amp;gt;Front End Developer&amp;lt;/strong&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;row row-banner&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;h1&amp;gt;Hi my names is &amp;lt;span&amp;gt;Orivelton&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;
 &amp;lt;img src=&#34;img/avatar.png&#34; alt=&#34;Avatar Front End&#34; class=&#34;avatar&#34;&amp;gt;
 &amp;lt;img src=&#34;img/avatar-preto.png&#34; alt=&#34;Oculos do avatar&#34; class=&#34;oculos&#34;&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;row row-content&#34;&amp;gt;
 &amp;lt;article class=&#34;container&#34; id=&#34;content&#34;&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Html5&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Css3&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Javascript&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Typescript&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/article&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;footer id=&#34;footer&#34;&amp;gt;
 Copyright (c) 2016 Copyright Holder All Rights Reserved.
 &amp;lt;/footer&amp;gt;
 &amp;lt;script type=&#34;text/javascript&#34; src=&#34;js/contraste.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;p&gt;Umas das recomendações da WCAG 2.0 é que o primeiro link do site leve para o conteúdo principal, com isso você já ganha uns pontinhos na ferramenta de análise de acessibilidade.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;css&#34;&gt;CSS&lt;/h2&gt;

&lt;p&gt;O CSS é muito importante, se possível não usar CSS inline, a utilização de unidades relativas (EM, %,  REM) na escrita do CSS melhora a acessibilidade. Validar o CSS vai apontar erros que deixamos passar, para isso temos a ferramenta de análise da W3C o &lt;a href=&#34;https://jigsaw.w3.org/css-validator/&#34;&gt;CSS Validation Service&lt;/a&gt;. Não vou postar aqui o CSS, mas logo abaixo vou deixar o link do projeto completo ;).&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;javascript&#34;&gt;Javascript&lt;/h1&gt;

&lt;p&gt;Nesse post resolvi usar javascript puro, pois se trata de uma aplicação simples e não haveria a necessidade de usar JQuery ou alguma lib ou Framework e também eu amo javascript puro, acho bem desafiador \0/.&lt;/p&gt;

&lt;p&gt;Esse Javascript modularizei em três blocos.&lt;/p&gt;

&lt;h3 id=&#34;1-8211-a-escolha-do-contraste-no-click-do-link&#34;&gt;1 &amp;#8211; A escolha do contraste no click do link&lt;/h3&gt;

&lt;pre&gt;//Selecionando os links de contraste
var linksContraste = document.querySelectorAll(&#39;nav a[data-contraste]&#39;);

//Function click passando o valor do data-contraste para a function contraste setar o Id no body
linksContraste.forEach(linksContraste =&amp;gt; linksContraste.addEventListener(&#39;click&#39;, function() {
 var dataContraste = this.dataset.contraste; // pegando o data-contraste da tag &#39;a&#39;
 contraste(dataContraste); // Chamando a function contraste com um parâmetro passado pelo data-contraste da tag &#39;a&#39;
 }
));&lt;/pre&gt;

&lt;h3 id=&#34;2-8211-a-função-de-setar-o-contraste&#34;&gt;2 &amp;#8211; A Função de setar o contraste.&lt;/h3&gt;

&lt;pre&gt;function contraste(dataContraste) {
 var setId;
 //Verificação de qual contraste foi selecionado
 if (dataContraste == 1) {
 setId = &#39;contrasteBranco&#39;;
 } else if (dataContraste == 2) {
 setId = &#39;contrastePreto&#39;;
 } else if (dataContraste == 3) {
 setId = &#39;contrasteAzul&#39;;
 } else {
 setId = &#39;&#39;;
 }
 // setando o ID do contraste escolhido no body
 document.querySelector(&#34;body&#34;).setAttribute(&#34;id&#34;, setId);
 // Guardando o cookie do contraste
 document.cookie = &#34;contraste=&#34; + setId + &#34;&#34;;
}&lt;/pre&gt;

&lt;h3 id=&#34;3-8211-a-verificação-do-cookie-gravado&#34;&gt;3 &amp;#8211; A verificação do cookie gravado&lt;/h3&gt;

&lt;pre&gt;// Verificação do cookie
var cookieContrasteBranco = document.cookie.indexOf(&#39;contrasteBranco&#39;);
var cookieContrastePreto = document.cookie.indexOf(&#39;contrastePreto&#39;);
var cookieContrasteAzul = document.cookie.indexOf(&#39;contrasteAzul&#39;);

//Verificando o cookie setado anteriormente
var cookieTrue = &#39;&#39;;
if (cookieContrasteBranco != -1) {
 cookieTrue = 1;
} else if (cookieContrastePreto != -1) {
 cookieTrue = 2;
} else if (cookieContrasteAzul != -1) {
 cookieTrue = 3;
} else {
 cookieTrue = &#39;&#39;;
}
//Chamando a function contraste com o valor do cookie guardado
contraste(cookieTrue);&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;node-cookie&#34;&gt;Node + Cookie&lt;/h2&gt;

&lt;p&gt;Node? sim, usaremos o Node para subir um servidor, pois não da pra guardar cookie sem um servidor, vamos precisar usar o Node, mas é super simples.&lt;/p&gt;

&lt;p&gt;Não sabe usar? Não sabe o que é? tem um poste aqui muito bom que vai te dar o caminho das pedras, nesse &lt;a href=&#34;https://tableless.com.br/o-que-nodejs-primeiros-passos-com-node-js/&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No site &lt;a href=&#34;https://www.npmjs.com/package/http-server&#34;&gt;NPMJS &lt;/a&gt;temos um servidor em que iremos utilizar, abra seu Node e manda essa;&lt;/p&gt;

&lt;pre&gt;npm install http-server -g&lt;/pre&gt;

&lt;p&gt;Pronto, o resultado será esse;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56612&#34; src=&#34;uploads/2016/12/Capture.png&#34; alt=&#34;capture&#34; width=&#34;636&#34; height=&#34;48&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora navegando com o Node até a pasta do seu projeto;&lt;/p&gt;

&lt;pre&gt;http-server&lt;/pre&gt;

&lt;p&gt;Ok, você já tem um servidor no ar, utilize um dos endereços http listados e abra no seu navegador de preferência (&lt;del&gt;&lt;em&gt;Chrome&lt;/em&gt;&lt;/del&gt;);&lt;/p&gt;

&lt;pre&gt;&lt;img class=&#34;alignnone wp-image-56613&#34; src=&#34;uploads/2016/12/Capture-1.png&#34; alt=&#34;capture&#34; width=&#34;640&#34; height=&#34;134&#34; /&gt;&lt;/pre&gt;

&lt;p&gt;Já está tudo pronto, com o servidor no ar já podemos gravar no cookie a escolha do contraste selecionada pelo usuário, isso vai evitar que o usuário atualize a página e carregue a página sem o contraste escolhido.&lt;/p&gt;

&lt;p&gt;já podemos verificar o cookie guardado depois do click no link&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56617&#34; src=&#34;uploads/2016/12/Capture-2.png&#34; alt=&#34;capture&#34; width=&#34;931&#34; height=&#34;509&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Com esse valor guardado no cookie o passo 3 vai funcionar perfeitamente, setando o contraste escolhido anteriormente ao recarregar a página.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Veja o projeto completo no [Nesse post vou explicar uma das opções de como fazer um contraste de cores, existe diretrizes de acessibilidade da &lt;a href=&#34;https://www.w3.org/Translations/WCAG20-pt-PT/&#34; target=&#34;_blank&#34;&gt;WCAG 2.0&lt;/a&gt; que explica o nível aceitável de contraste de cores esperadas em um site, veja nesse &lt;a href=&#34;https://www.w3.org/TR/WCAG20/#visual-audio-contrast&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;proposta-1&#34;&gt;Proposta&lt;/h2&gt;

&lt;p&gt;Criar um contraste de cores em três níveis (Branco, Preto e Azul) usando HTML5, CSS3, Javascript (Puro), Node e o Cookie do navegado para guarda o contraste escolhido.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56600&#34; src=&#34;uploads/2016/12/html5-css-javascript-logos.png&#34; alt=&#34;html5-css-javascript-logos&#34; width=&#34;1267&#34; height=&#34;287&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;como-será-feito-1&#34;&gt;Como será feito&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Em uma página teremos quatro links em que o usuário vai escolher (Preto, branco, azul ou sem contraste).&lt;/li&gt;
&lt;li&gt;No evento de click vamos passar para o javascript um valor do atributo &amp;#8216;data-contraste&amp;#8217;.&lt;/li&gt;
&lt;li&gt;Vai ser adicionar na tag &amp;#8216;body&amp;#8217; um &amp;#8216;id&amp;#8217; para o CSS fazer toda a mágica de trocar as cores da página.&lt;/li&gt;
&lt;li&gt;Vai ser guardado no cookie a opção selecionada.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Veja como vai ficar;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-56620&#34; src=&#34;uploads/2016/12/contraste-de-cores.gif&#34; alt=&#34;contraste-de-cores&#34; width=&#34;484&#34; height=&#34;264&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Então&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-56615&#34; src=&#34;uploads/2016/12/ThomasCook_tagline.jpg&#34; alt=&#34;ThomasCook_tagline_hori_cmyk&#34; width=&#34;479&#34; height=&#34;137&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;html-1&#34;&gt;HTML&lt;/h2&gt;

&lt;p&gt;O HTML para esse tipo de projeto é de extrema necessidade ser no mínimo validado pelo &lt;a href=&#34;https://validator.w3.org/&#34;&gt;W3C&lt;/a&gt; e ter nível &amp;#8220;AAA&amp;#8221; em alguma ferramenta de análise de acessibilidade, no caso eu usei o &lt;a href=&#34;http://www.acessibilidade.gov.pt/accessmonitor/&#34;&gt;Accessmonitor&lt;/a&gt;, já usando a WCAG 2.0.&lt;/p&gt;

&lt;p&gt;A atenção na contrução do HTML vai determinar se o usuário acessível vai ter uma boa experiência no seu site ou não.&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&#34;pt-BR&#34;&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;
 &amp;lt;title&amp;gt;Artigo contraste de cores&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&#34;stylesheet&#34; href=&#34;css/style.css&#34;&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;div class=&#34;row row-header&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;nav&amp;gt;
 &amp;lt;ul&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#content&#34; title=&#34;Ir para o Conteúdo&#34;&amp;gt;Ir para o Conteúdo&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; title=&#34;Ir para o Topo&#34;&amp;gt;Ir para o Topo&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#footer&#34; title=&#34;Ir para o Rodapé&#34;&amp;gt;Ir para o Rodapé&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;0&#34; title=&#34;Sem Contraste&#34;&amp;gt;Sem Contraste&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;1&#34; title=&#34;Contraste Branco&#34;&amp;gt;Contraste Branco&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;2&#34; title=&#34;Contraste Preto&#34;&amp;gt;Contraste Preto&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;
 &amp;lt;a href=&#34;#&#34; data-contraste=&#34;3&#34; title=&#34;Contraste Azul&#34;&amp;gt;Contraste Azul&amp;lt;/a&amp;gt;
 &amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/nav&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;!-- End - .container--&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;!-- End - .row--&amp;gt;
 &amp;lt;div class=&#34;row row-top&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;strong&amp;gt;Front End Developer&amp;lt;/strong&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;row row-banner&#34;&amp;gt;
 &amp;lt;div class=&#34;container&#34;&amp;gt;
 &amp;lt;h1&amp;gt;Hi my names is &amp;lt;span&amp;gt;Orivelton&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;
 &amp;lt;img src=&#34;img/avatar.png&#34; alt=&#34;Avatar Front End&#34; class=&#34;avatar&#34;&amp;gt;
 &amp;lt;img src=&#34;img/avatar-preto.png&#34; alt=&#34;Oculos do avatar&#34; class=&#34;oculos&#34;&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;row row-content&#34;&amp;gt;
 &amp;lt;article class=&#34;container&#34; id=&#34;content&#34;&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Html5&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Css3&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Javascript&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&#34;box&#34;&amp;gt;
 &amp;lt;h2&amp;gt;Typescript&amp;lt;/h2&amp;gt;
 &amp;lt;i&amp;gt;★★★★&amp;lt;/i&amp;gt;
 &amp;lt;p&amp;gt;
 Mussum Ipsum, cacilds vidis litro abertis. Manduma pindureta quium dia nois paga.
 Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis.
 Si num tem leite então bota uma pinga aí cumpadi! Atirei o pau no gatis, per gatis num morreus.
 &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/article&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;footer id=&#34;footer&#34;&amp;gt;
 Copyright (c) 2016 Copyright Holder All Rights Reserved.
 &amp;lt;/footer&amp;gt;
 &amp;lt;script type=&#34;text/javascript&#34; src=&#34;js/contraste.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;

&lt;p&gt;Umas das recomendações da WCAG 2.0 é que o primeiro link do site leve para o conteúdo principal, com isso você já ganha uns pontinhos na ferramenta de análise de acessibilidade.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;css-1&#34;&gt;CSS&lt;/h2&gt;

&lt;p&gt;O CSS é muito importante, se possível não usar CSS inline, a utilização de unidades relativas (EM, %,  REM) na escrita do CSS melhora a acessibilidade. Validar o CSS vai apontar erros que deixamos passar, para isso temos a ferramenta de análise da W3C o &lt;a href=&#34;https://jigsaw.w3.org/css-validator/&#34;&gt;CSS Validation Service&lt;/a&gt;. Não vou postar aqui o CSS, mas logo abaixo vou deixar o link do projeto completo ;).&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;javascript-1&#34;&gt;Javascript&lt;/h1&gt;

&lt;p&gt;Nesse post resolvi usar javascript puro, pois se trata de uma aplicação simples e não haveria a necessidade de usar JQuery ou alguma lib ou Framework e também eu amo javascript puro, acho bem desafiador \0/.&lt;/p&gt;

&lt;p&gt;Esse Javascript modularizei em três blocos.&lt;/p&gt;

&lt;h3 id=&#34;1-8211-a-escolha-do-contraste-no-click-do-link-1&#34;&gt;1 &amp;#8211; A escolha do contraste no click do link&lt;/h3&gt;

&lt;pre&gt;//Selecionando os links de contraste
var linksContraste = document.querySelectorAll(&#39;nav a[data-contraste]&#39;);

//Function click passando o valor do data-contraste para a function contraste setar o Id no body
linksContraste.forEach(linksContraste =&amp;gt; linksContraste.addEventListener(&#39;click&#39;, function() {
 var dataContraste = this.dataset.contraste; // pegando o data-contraste da tag &#39;a&#39;
 contraste(dataContraste); // Chamando a function contraste com um parâmetro passado pelo data-contraste da tag &#39;a&#39;
 }
));&lt;/pre&gt;

&lt;h3 id=&#34;2-8211-a-função-de-setar-o-contraste-1&#34;&gt;2 &amp;#8211; A Função de setar o contraste.&lt;/h3&gt;

&lt;pre&gt;function contraste(dataContraste) {
 var setId;
 //Verificação de qual contraste foi selecionado
 if (dataContraste == 1) {
 setId = &#39;contrasteBranco&#39;;
 } else if (dataContraste == 2) {
 setId = &#39;contrastePreto&#39;;
 } else if (dataContraste == 3) {
 setId = &#39;contrasteAzul&#39;;
 } else {
 setId = &#39;&#39;;
 }
 // setando o ID do contraste escolhido no body
 document.querySelector(&#34;body&#34;).setAttribute(&#34;id&#34;, setId);
 // Guardando o cookie do contraste
 document.cookie = &#34;contraste=&#34; + setId + &#34;&#34;;
}&lt;/pre&gt;

&lt;h3 id=&#34;3-8211-a-verificação-do-cookie-gravado-1&#34;&gt;3 &amp;#8211; A verificação do cookie gravado&lt;/h3&gt;

&lt;pre&gt;// Verificação do cookie
var cookieContrasteBranco = document.cookie.indexOf(&#39;contrasteBranco&#39;);
var cookieContrastePreto = document.cookie.indexOf(&#39;contrastePreto&#39;);
var cookieContrasteAzul = document.cookie.indexOf(&#39;contrasteAzul&#39;);

//Verificando o cookie setado anteriormente
var cookieTrue = &#39;&#39;;
if (cookieContrasteBranco != -1) {
 cookieTrue = 1;
} else if (cookieContrastePreto != -1) {
 cookieTrue = 2;
} else if (cookieContrasteAzul != -1) {
 cookieTrue = 3;
} else {
 cookieTrue = &#39;&#39;;
}
//Chamando a function contraste com o valor do cookie guardado
contraste(cookieTrue);&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;node-cookie-1&#34;&gt;Node + Cookie&lt;/h2&gt;

&lt;p&gt;Node? sim, usaremos o Node para subir um servidor, pois não da pra guardar cookie sem um servidor, vamos precisar usar o Node, mas é super simples.&lt;/p&gt;

&lt;p&gt;Não sabe usar? Não sabe o que é? tem um poste aqui muito bom que vai te dar o caminho das pedras, nesse &lt;a href=&#34;https://tableless.com.br/o-que-nodejs-primeiros-passos-com-node-js/&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No site &lt;a href=&#34;https://www.npmjs.com/package/http-server&#34;&gt;NPMJS &lt;/a&gt;temos um servidor em que iremos utilizar, abra seu Node e manda essa;&lt;/p&gt;

&lt;pre&gt;npm install http-server -g&lt;/pre&gt;

&lt;p&gt;Pronto, o resultado será esse;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56612&#34; src=&#34;uploads/2016/12/Capture.png&#34; alt=&#34;capture&#34; width=&#34;636&#34; height=&#34;48&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora navegando com o Node até a pasta do seu projeto;&lt;/p&gt;

&lt;pre&gt;http-server&lt;/pre&gt;

&lt;p&gt;Ok, você já tem um servidor no ar, utilize um dos endereços http listados e abra no seu navegador de preferência (&lt;del&gt;&lt;em&gt;Chrome&lt;/em&gt;&lt;/del&gt;);&lt;/p&gt;

&lt;pre&gt;&lt;img class=&#34;alignnone wp-image-56613&#34; src=&#34;uploads/2016/12/Capture-1.png&#34; alt=&#34;capture&#34; width=&#34;640&#34; height=&#34;134&#34; /&gt;&lt;/pre&gt;

&lt;p&gt;Já está tudo pronto, com o servidor no ar já podemos gravar no cookie a escolha do contraste selecionada pelo usuário, isso vai evitar que o usuário atualize a página e carregue a página sem o contraste escolhido.&lt;/p&gt;

&lt;p&gt;já podemos verificar o cookie guardado depois do click no link&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-56617&#34; src=&#34;uploads/2016/12/Capture-2.png&#34; alt=&#34;capture&#34; width=&#34;931&#34; height=&#34;509&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Com esse valor guardado no cookie o passo 3 vai funcionar perfeitamente, setando o contraste escolhido anteriormente ao recarregar a página.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Veja o projeto completo no ]&lt;a href=&#34;http://codepen.io/orivelton/pen/XNymQp&#34;&gt;6&lt;/a&gt; e no &lt;a href=&#34;https://github.com/orivelton10/contraste-de-cores&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>#BlendingCSS – Modos de mesclagem em CSS: Teoria da Cor e Aplicação Prática</title>
      <link>http://tableless.com.br/blendingcss-modos-de-mesclagem-em-css-teoria-da-cor-e-aplicacao-pratica/</link>
      <pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/blendingcss-modos-de-mesclagem-em-css-teoria-da-cor-e-aplicacao-pratica/</guid>
      <description>

&lt;p&gt;OBS:. o método abordado sobre Blending (mesclagem de cores e camadas) não é igual, mas não diferente do método abordado pela nossa colega &lt;a href=&#34;http://tableless.com.br/?author=14&#34;&gt;Dani Guerrato&lt;/a&gt; no post &lt;a href=&#34;http://tableless.com.br/modos-de-mesclagem-em-css/&#34;&gt;Modos de Mesclagem em CSS – Blend Mode CSS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Diga-se de passagem nós abordaremos visões abrangentes e características técnicas do método de aplicação de Blending no CSS, mas se você quer dar uma previa nos conceitos de background css antes de ler esse post seria legal: [OBS:. o método abordado sobre Blending (mesclagem de cores e camadas) não é igual, mas não diferente do método abordado pela nossa colega &lt;a href=&#34;http://tableless.com.br/?author=14&#34;&gt;Dani Guerrato&lt;/a&gt; no post &lt;a href=&#34;http://tableless.com.br/modos-de-mesclagem-em-css/&#34;&gt;Modos de Mesclagem em CSS – Blend Mode CSS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Diga-se de passagem nós abordaremos visões abrangentes e características técnicas do método de aplicação de Blending no CSS, mas se você quer dar uma previa nos conceitos de background css antes de ler esse post seria legal:]&lt;a href=&#34;tem imagens bem legais&#34;&gt;3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ok, dados os avisos bora para o código!&lt;/p&gt;

&lt;p&gt;Se você usa Photoshop pode estar familiarizado com o &amp;#8220;Blending&amp;#8221; (modos de mesclagem de camadas). &lt;/p&gt;

&lt;p&gt;Eles nós permitem que você combinar &amp;#8220;camadas&amp;#8221; ( ou layers ) de formas diferentes e eles são muito divertido para brincar. O Blending CSS (&lt;em&gt;modos de mistura em CSS&lt;/em&gt;), no entanto,  infelizmente ainda não são suportados universalmente, mas logo estarão certamente no seu caminho.&lt;/p&gt;

&lt;p&gt;Neste tutorial, vamos aprender como trabalhar com as diferentes maneiras que você pode implementar Blending CSS (modos de mistura) usados CSS.&lt;/p&gt;

&lt;h2 id=&#34;as-noções-básicas-de-blending-css&#34;&gt;As noções básicas de Blending CSS&lt;/h2&gt;

&lt;p&gt;Se você nunca usou este recurso no Photoshop ou nunca ouviu falar dele, vamos te mostrar como Blending (modos de mistura), e suas formas e Formulas funcionam&amp;#8230;  pode parecer um pouco confuso mas vamos dividi-lás em partes visuais para compreendermos melhor.&lt;/p&gt;

&lt;h3 id=&#34;o-que-realmente-significa-8220-blending-8221&#34;&gt;O que realmente significa &amp;#8220;Blending&amp;#8221;?&lt;/h3&gt;

&lt;p&gt;Modos de Mesclagem (&amp;#8220;Blending&amp;#8221;) estão disponíveis no software de desenho já faz alguns anos, mas o conceito de Blending (&amp;#8220;modos de mistura&amp;#8221;) tem sido realmente usados por muito mais tempo, mesmo antes dos computadores fossem inventados.&lt;/p&gt;

&lt;p&gt;O Blending é parte dos &lt;em&gt;modos de mesclagem,&lt;/em&gt; que refere-se a pegar duas cores e combiná-los de uma forma para fazer uma cor só. Mais precisamente, pegamos dois mapas pixel e misturámos eles juntos&lt;/p&gt;

&lt;p&gt;É como um &amp;#8220;Juicer&amp;#8221; &amp;#8211; centrifugas de suco, onde você coloca duas frutas de distintas cores numa ponta e tem um colorido suco misturado do outro lado da máquina.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-56095 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/Blender-Juicer-Vegetables-Fruits-Drink-777x437.jpg&#34; alt=&#34;Blender-Juicer-Vegetables-Fruits-Drink-777x437&#34; width=&#34;777&#34; height=&#34;437&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Como&lt;/em&gt; que a mistura ocorre é a parte &amp;#8220;modo&amp;#8221; de &lt;em&gt;modos&lt;/em&gt; de &lt;em&gt;mesclagem.&lt;/em&gt; Como é que essas cores interagem? Porque estamos a trabalhar com o espaço digital, podemos tomar qualquer fórmula matemática e aplicá-lo às duas entradas para derivar uma saída.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/none.jpg&#34; alt=&#34;Uma imagem não tratada de uma medusa&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Uma imagem não tratada de uma medusa
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; &lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/orange.jpg&#34; alt=&#34; A mesma água-viva com uma camada de laranja sólido (a &amp;quot;fonte&amp;quot;) colocado sobre ele&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    A mesma água-viva com uma camada de laranja sólido (a &amp;#8220;origem de mesclagem&amp;#8221;) colocado sobre ele
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/screen.jpg&#34; alt=&#34; Aqui está a nossa camada de origem com a &amp;quot;tela&amp;quot; modo de mesclagem aplicado&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;Aqui está a nossa camada de origem de mesclagem com a &amp;#8220;tela&amp;#8221; com o Blending aplicado&lt;/p&gt;

&lt;p&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h3 id=&#34;você-faz-a-matemática&#34;&gt;Você faz a matemática&lt;/h3&gt;

&lt;p&gt;Se você está se sentindo &lt;em&gt;realmente&lt;/em&gt; ambicioso, dê uma olhada através Task Force FX da W3C do &lt;a href=&#34;https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=pt-BR&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com.br&amp;sl=en&amp;tl=pt-BR&amp;u=https://drafts.fxtf.org/compositing/&amp;usg=ALkJrhgP7Nj2SjD6ndaobz9HMCmWHLI_xg#blending&#34; target=&#34;_self&#34;&gt;documento de composição oficial&lt;/a&gt; que explica as implementações matemáticas de cada um dos diferentes modos de blending. Demonstra uma fórmula usada para calcular mais modos de mesclagem .&lt;/p&gt;

&lt;pre class=&#34;lang-javascript&#34;&gt;Cm = B (Cb, Cs)&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Aqui, &lt;code&gt;Cm&lt;/code&gt; é a cor resultante após a mistura.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;B&lt;/code&gt; refere-se à função de mistura.&lt;/li&gt;
&lt;li&gt;O &lt;code&gt;Cb&lt;/code&gt; variável é a cor de fundo.&lt;/li&gt;
&lt;li&gt;E o &lt;code&gt;Cs&lt;/code&gt; variável é a cor de origem.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/rgb-e-hsl/&#34;&gt;Todas as cores são baseados numa escala de 0-1, que mapeia diretamente para um valor 0-255 RGB.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;size-full wp-image-56099 aligncenter&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/10/nee-nees-096-min-compressor.jpg&#34; alt=&#34;nee-nees-096-min-compressor&#34; width=&#34;3888&#34; height=&#34;2592&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Existem duas categorias de modos de Blending: não-separáveis e os separáveis.&lt;/p&gt;

&lt;p&gt;Se um blending é considerada separável, ou não é determinado pelo algoritmo subjacente. Se o algoritmo trata cada um dos canais de cor separados (vermelho, verde e azul // RGB) de igual modo, considera-se inseparáveis. Se ele usa cada um dos canais de cor, individualmente, considera-se separável.&lt;/p&gt;

&lt;p&gt;Todos os modos de mistura só pode voltar cores que estão dentro da gama de 0 a 255. Qualquer coisa para além desta gama em qualquer direção irá ser cortada para o intervalo. Quando você vê grandes áreas de branco ou preto em uma área mista, é provável porque essas áreas estão sendo cortadas.&lt;/p&gt;

&lt;h2 id=&#34;tipos-de-modos-de-mesclagem-disponível-em-css&#34;&gt;Tipos de modos de mesclagem Disponível em CSS&lt;/h2&gt;

&lt;p&gt;Blending CSS, onde são suportados, trabalha de duas maneiras diferentes. O primeiro tipo de modo de mistura é chamada &lt;code&gt;background-blend-mode&lt;/code&gt; . Esta propriedade permite que você misturar todos os fundos dentro de um elemento com o outro.&lt;/p&gt;

&lt;p&gt;Se você tiver definido, por exemplo, múltiplas imagens de fundo (&lt;a href=&#34;https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=pt-BR&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com.br&amp;sl=en&amp;tl=pt-BR&amp;u=http://caniuse.com/&amp;usg=ALkJrhgJSpRt8OnTYOP3TYJm2Gf1tC3M-A#feat=multibackgrounds&#34; target=&#34;_self&#34;&gt;suportados em todos os navegadores além do IE8&lt;/a&gt;), a primeira imagem de fundo será tratada como a camada de origem, e qualquer imagem adicionada posteriormente será tratada como a camada de fundo, encontrando-se por baixo.&lt;/p&gt;

&lt;p&gt;Adicionando uma cor de fundo (que deve ser o último da lista) coloca mais uma camada na parte inferior. A cor será tratada como a camada de fundo, e as imagens como as camadas de origem. Veja o seguinte na regra de estilo, por exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
  background:
  url(img/pattern.png),
  url(img/jellyfish.jpg), 
  #f07e32;
}&lt;/pre&gt;

&lt;p&gt;Isso nos dá:&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/multiple-backgrounds.jpg&#34; alt=&#34;&#34; /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;E nós pode então adicionar modos de Blending:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;div {
  background:
  url(img/pattern.png),
  url(img/jellyfish.jpg), 
  #f07e32 ;
  background-blend-mode: screen;
}
&lt;/pre&gt;

&lt;p&gt;Aqui estão dois divs usando esses estilos, um sem o modo de mesclagem, o segundo com:&lt;/p&gt;

&lt;p&gt;A mistura tipo de modo secundário, &lt;code&gt;mix-blend-mode&lt;/code&gt; , permite elementos independentes a serem misturados. A especificação é mais específica sobre a implementação, mas a mistura ocorre em &amp;#8220;contextos de empilhamento&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Isto é o que acontece quando usamos &lt;code&gt;mix-blend-mode&lt;/code&gt; , na tentativa de obter a imagem de fundo e cor dentro do mesmo elemento para misturar (uma sintaxe de código um pouco mais limpa):&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.my-overlay-element {
  background-color: #f07e32;
  background-image: url(img/jellyfish.jpg); // Note: This image will not be blended with the background color.
  mix-blend-mode: color-dodge;
}
&lt;/pre&gt;

&lt;p&gt;Abaixo, você pode encontrar uma &lt;a href=&#34;https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=pt-BR&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com.br&amp;sl=en&amp;tl=pt-BR&amp;u=http://codepen.io/tutsplus/live/wMvoyj&amp;usg=ALkJrhiUNiZymZ8tkzwi_FO6w2rqQj4-6g&#34; target=&#34;_self&#34;&gt;demonstração interativa&lt;/a&gt; para explorar os efeitos de um determinado modo de mistura.&lt;/p&gt;

&lt;h2 id=&#34;blend-modes-separáveis&#34;&gt;Blend Modes separáveis&lt;/h2&gt;

&lt;p&gt;Vamos dar uma olhada nos modos de mesclagem (&amp;#8220;Blending&amp;#8221;) disponíveis, examinando a fórmula utilizada, e aplicando cada um para o círculo vermelho colocado acima da nossa água-viva.&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j1.jpg&#34; alt=&#34;&#34; /&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h4 id=&#34;screen-tela&#34;&gt;Screen (tela):&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;B(Cb, Cs) = 1 - [(1 - Cb) x (1 - Cs)]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Screen (ou tela) é nomeado após o conceito de projetar múltiplas exposições de fotografias, ao mesmo tempo em uma tela. A cor resultante é sempre pelo menos tão leve quanto uma das camadas combinadas.&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j2.jpg&#34; alt=&#34;o modo de blend da tela&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    o modo de blend da tela
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

#### Darken: 

`B(Cb, Cs) = min(Cb, Cs)`

Seleciona a mais escura das duas cores.&lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-darken.jpg&#34; alt=&#34;Darken Mode Blending&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Darken Mode Blending
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

Lighten: `B(Cb, Cs) = max(Cb, Cs)`

Seleciona a mais clara das duas cores.&lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-lighten.jpg&#34; alt=&#34;Lighten blend mode&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Lighten blend mode
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

#### Color Dodge:

&lt;pre class=&#34;lang-js&#34;&gt;if(Cb == 0)
    B(Cb, Cs) = 0
else if(Cs == 1)
    B(Cb, Cs) = 1
else
    B(Cb, Cs) = min(1, Cb / (1 - Cs))

&lt;/pre&gt;

Color Dodge clareia a cor de fundo para refletir a cor de origem.&lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-color-dodge.jpg&#34; alt=&#34;blend mode Color Dodge&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    blend mode Color Dodge
  &lt;/p&gt;
&lt;/div&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;/figure&gt; 

#### Color Burn (cor queimada):

&lt;pre class=&#34;lang-js&#34;&gt;if(Cb == 1)
    B(Cb, Cs) = 1
else if(Cs == 0)
    B(Cb, Cs) = 0
else
    B(Cb, Cs) = 1 - min(1, (1 - Cb) / Cs)
&lt;/pre&gt;

O Color Burn escurece a cor de fundo, aumentando o contraste entre a fonte e o fundo.&lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-burn.jpg&#34; alt=&#34;Modo de queimadura mistura Cor&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Color burn blend mode
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

#### Hard light:

&lt;pre class=&#34;lang-js&#34;&gt;if(Cs &amp;lt;= 0.5)
    B(Cb, Cs) = Multiply(Cb, 2 x Cs)
else
    B(Cb, Cs) = Screen(Cb, 2 x Cs -1)
&lt;/pre&gt;

Aplica-se &#34;multiply&#34; em cores mais claras e &#34;screen&#34; em cores mais escuras. Essencialmente, &#34;Hard light&#34; é o oposto de &#34;overlay&#34;, é que veremos a seguir.&lt;figure class=&#34;post_image&#34;&gt; 

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-hardl.jpg&#34; alt=&#34;blend mode luz dura&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Hard light blend mode
  &lt;/p&gt;
&lt;/div&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;/figure&gt; 

#### Overlay:

&lt;div&gt;
  &lt;div id=&#34;highlighter_843579&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
    &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
      &lt;tr&gt;
        &lt;td class=&#34;gutter&#34;&gt;
          &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
            1
          &lt;/div&gt;
        &lt;/td&gt;
        
        &lt;td class=&#34;code&#34;&gt;
          &lt;div class=&#34;container&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              &lt;code&gt;B(Cb, Cs) = HardLight(Cs, Cb)&lt;/code&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Aplica-se &amp;ldquo;screen&amp;rdquo; em cores mais claras e &amp;ldquo;multiply&amp;rdquo; em cores mais escuras; escrito como o mesmo que &amp;ldquo;Hard light&amp;rdquo;, exceto com os argumentos para a função inversa.&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-overlay.jpg&#34; alt=&#34;modo de blend Overlay&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Overlay blend mode
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

#### Soft Light:

&lt;div&gt;
  &lt;div id=&#34;highlighter_522850&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
    &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
      &lt;tr&gt;
        &lt;td class=&#34;gutter&#34;&gt;
          &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
            1
          &lt;/div&gt;
          

&lt;pre&gt;&lt;code&gt;      &amp;lt;div class=&amp;quot;line number2 index1 alt1&amp;quot;&amp;gt;
        2
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number3 index2 alt2&amp;quot;&amp;gt;
        3
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number4 index3 alt1&amp;quot;&amp;gt;
        4
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number5 index4 alt2&amp;quot;&amp;gt;
        5
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number6 index5 alt1&amp;quot;&amp;gt;
        6
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number7 index6 alt2&amp;quot;&amp;gt;
        7
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number8 index7 alt1&amp;quot;&amp;gt;
        8
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;line number9 index8 alt2&amp;quot;&amp;gt;
        9
      &amp;lt;/div&amp;gt;
    &amp;lt;/td&amp;gt;

    &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;if&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;(Cs &amp;amp;lt;= 0.5)&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number2 index1 alt1&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;        &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;B(Cb, Cs) = Cb - (1 - 2 x Cs) x Cb x (1 - Cb)&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number3 index2 alt2&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;    &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;else&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number4 index3 alt1&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;        &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;B(Cb, Cs) = Cb + (2 x Cs - 1) x (D(Cb) - Cb)&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number5 index4 alt2&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;with&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number6 index5 alt1&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;    &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;if&amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;(Cb &amp;amp;lt;= 0.25)&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number7 index6 alt2&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;        &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;D(Cb) = ((16 * Cb - 12) x Cb + 4) x Cb&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number8 index7 alt1&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;    &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;else&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number9 index8 alt2&amp;quot;&amp;gt;
          &amp;lt;code&amp;gt;        &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;D(Cb) = sqrt(Cb)&amp;lt;/code&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/td&amp;gt;
  &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Este modo de Blending aplica-se uma variante de &amp;ldquo;multiply&amp;rdquo; em valores escuros e uma variante da &amp;ldquo;screen&amp;rdquo; em valores mais leves (similar à screen).&lt;/p&gt;

&lt;p&gt;Neste algoritmo, vemos uma função secundária &lt;code&gt;D&lt;/code&gt; , que está situado no &lt;code&gt;with&lt;/code&gt; cláusula com base no valor atual do azul (_**&lt;span style=&#34;color: #ff0000&#34;&gt;R-&lt;span style=&#34;color: #00ff00&#34;&gt;G-&lt;span style=&#34;color: #0000ff&#34;&gt;B&lt;/strong&gt;&lt;/em&gt;) na cor. O resultado final é tipicamente um efeito muito mais suave do que &amp;ldquo;overlay&amp;rdquo;.&lt;/p&gt; &lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-soft.jpg&#34; alt=&#34;blend mode luz Sof&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Sof light blend mode
  &lt;/p&gt;
&lt;/div&gt;&lt;/figure&gt; 

&lt;h4&gt;
  Difference:
&lt;/h4&gt;

&lt;div&gt;
  &lt;div id=&#34;highlighter_841255&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
    &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
      &lt;tr&gt;
        &lt;td class=&#34;gutter&#34;&gt;
          &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
            1
          &lt;/div&gt;
        &lt;/td&gt;
        
        &lt;td class=&#34;code&#34;&gt;
          &lt;div class=&#34;container&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              &lt;code&gt;B(Cb, Cs) = | Cb - Cs |&lt;/code&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;
  Diferença pega o valor absoluto da diferença entre as duas cores, que tem o mesmo efeito de um negativo fotográfico.
&lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt; 

&lt;p&gt;
  &lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-difference.jpg&#34; alt=&#34;blend mode diferença&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
    
    &lt;p class=&#34;wp-caption-text&#34;&gt;
      Difference blend mode
    &lt;/p&gt;
  &lt;/div&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;/figure&gt; 
  
  &lt;h4&gt;
    Exclusion:
  &lt;/h4&gt;
  
  &lt;div&gt;
    &lt;div id=&#34;highlighter_276376&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              1
            &lt;/div&gt;
          &lt;/td&gt;
          
          &lt;td class=&#34;code&#34;&gt;
            &lt;div class=&#34;container&#34;&gt;
              &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
                &lt;code&gt;B(Cb, Cs) = Cb + Cs - 2 x Cb x Cs&lt;/code&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  
  &lt;p&gt;
    O modo de exclusão tem o mesmo efeito de base como o modo &#34;diferença&#34;, excepto que as cores semelhantes resultar num valor mais baixo do meio de contraste (ao invés de um valor mais escuro).
  &lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt; 
  
  &lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-exclusion.jpg&#34; alt=&#34;blend mode Exclusão&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;
    
    &lt;p class=&#34;wp-caption-text&#34;&gt;
      Exclusion blend mode
    &lt;/p&gt;
  &lt;/div&gt;&lt;/figure&gt; 
  
  &lt;h2&gt;
    Blend Modes não-separáveis
  &lt;/h2&gt;
  
  &lt;p&gt;
    Os Blend Modes &#34;não-separáveis&#34; são modos de mesclagem utilizam algumas funções extras, incluindo as funções &lt;code&gt;ClipColor&lt;/code&gt;, &lt;code&gt;SetLum&lt;/code&gt;, e &lt;code&gt;Sat&lt;/code&gt;.
  &lt;/p&gt;
  

&lt;p&gt;&lt;p&gt;
    &lt;b&gt;Nota importante:&lt;/b&gt; Nenhuma versão do Safari suporta blend modes &amp;ldquo;hue&amp;rdquo;, &amp;ldquo;saturation&amp;rdquo;, &amp;ldquo;color&amp;rdquo;, ou &amp;ldquo;luminosity&amp;rdquo;  com &lt;code&gt;mix-blend-mode&lt;/code&gt; ou &lt;code&gt;background-blend-mode&lt;/code&gt; .
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div id=&#34;highlighter_312047&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              01
            &lt;/div&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        &amp;lt;div class=&amp;quot;line number2 index1 alt1&amp;quot;&amp;gt;
          02
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number3 index2 alt2&amp;quot;&amp;gt;
          03
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number4 index3 alt1&amp;quot;&amp;gt;
          04
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number5 index4 alt2&amp;quot;&amp;gt;
          05
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number6 index5 alt1&amp;quot;&amp;gt;
          06
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number7 index6 alt2&amp;quot;&amp;gt;
          07
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number8 index7 alt1&amp;quot;&amp;gt;
          08
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number9 index8 alt2&amp;quot;&amp;gt;
          09
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number10 index9 alt1&amp;quot;&amp;gt;
          10
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number11 index10 alt2&amp;quot;&amp;gt;
          11
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number12 index11 alt1&amp;quot;&amp;gt;
          12
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number13 index12 alt2&amp;quot;&amp;gt;
          13
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number14 index13 alt1&amp;quot;&amp;gt;
          14
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number15 index14 alt2&amp;quot;&amp;gt;
          15
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number16 index15 alt1&amp;quot;&amp;gt;
          16
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number17 index16 alt2&amp;quot;&amp;gt;
          17
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number18 index17 alt1&amp;quot;&amp;gt;
          18
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number19 index18 alt2&amp;quot;&amp;gt;
          19
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number20 index19 alt1&amp;quot;&amp;gt;
          20
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number21 index20 alt2&amp;quot;&amp;gt;
          21
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number22 index21 alt1&amp;quot;&amp;gt;
          22
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number23 index22 alt2&amp;quot;&amp;gt;
          23
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number24 index23 alt1&amp;quot;&amp;gt;
          24
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number25 index24 alt2&amp;quot;&amp;gt;
          25
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number26 index25 alt1&amp;quot;&amp;gt;
          26
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;line number27 index26 alt2&amp;quot;&amp;gt;
          27
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;

      &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;ClipColor(C)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number2 index1 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;l = Lum(C)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number3 index2 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;n = min(Cred, Cgreen, Cblue)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number4 index3 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;x = max(Cred, Cgreen, Cblue)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number5 index4 alt2&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number6 index5 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;if&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;n &amp;amp;lt; 0.0&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number7 index6 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;    &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cred = l + (((Cred - l) * l) / (l - n))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number8 index7 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;    &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cgreen = l + (((Cgreen - l) * l) / (l - n))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number9 index8 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;    &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cblue = l + (((Cblue - l) * l) / (l - n))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number10 index9 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number11 index10 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;if&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;x &amp;amp;gt; 1.0&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number12 index11 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number13 index12 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;    &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cred = l + (((Cred - l) * (1 - l)) / (x - l))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number14 index13 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;    &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cgreen = l + (((Cgreen - l) * (1 - l)) / (x - l))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number15 index14 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;    &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cblue = l + (((Cblue - l) * (1 - l)) / (x - l))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number16 index15 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number17 index16 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;return&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;C&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number18 index17 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number19 index18 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;SetLum(C, l)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number20 index19 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;d = l - Lum(C)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number21 index20 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cred = Cred + d&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number22 index21 alt1&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cgreen = Cgreen + d&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number23 index22 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Cblue = Cblue + d&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number24 index23 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number25 index24 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;return&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;ClipColor(C)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number26 index25 alt1&amp;quot;&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class=&amp;quot;line number27 index26 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;Sat(C) = max(Cred, Cgreen, Cblue) - min(Cred, Cgreen, Cblue)&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Observe o &lt;code&gt;min&lt;/code&gt; , &lt;code&gt;mid&lt;/code&gt; e &lt;code&gt;max&lt;/code&gt; são funções de utilitária que consulta a valores máximos, médios e mínimos. (&lt;em&gt;Mid &lt;strong&gt;não &lt;/strong&gt;&lt;/em&gt;é a média dos três valores.) Os valores &lt;code&gt;Cred&lt;/code&gt; , &lt;code&gt;Cgreen&lt;/code&gt; , e &lt;code&gt;Cblue&lt;/code&gt; referem-se a valores de vermelho, verde e azul das cores presentes na &lt;code&gt;C&lt;/code&gt; .
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Com estas definições alinhadas, podemos agora olhar para os blend modes não-separáveis.
  &lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;
    &lt;b&gt;Hue&lt;/b&gt; (&lt;b&gt;Matiz):&lt;/b&gt;
  &lt;/h4&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div id=&#34;highlighter_803107&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              1
            &lt;/div&gt;
          &lt;/td&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;B(Cb, Cs) = SetLum(SetSat(Cs, Sat(Cb)), Lum(Cb))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Este modo aplica-se a tonalidade da camada de fonte para a luminância e saturação da cor de fundo.
  &lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-hue.jpg&#34; alt=&#34;blend mode Hue&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
  blend mode Hue
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;
    Saturation (Saturação):
  &lt;/h4&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div id=&#34;highlighter_173459&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              1
            &lt;/div&gt;
          &lt;/td&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;B(Cb, Cs) = SetLum(SetSat(Cb, Sat(Cs)), Lum(Cb))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Este modo faz a mesma coisa como o modo &amp;ldquo;hue&amp;rdquo;, mas em vez disso se aplica a saturação do primeiro plano para a tonalidade e a luminância de fundo.
  &lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-sat.jpg&#34; alt=&#34;modo de mistura de saturação&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
  Saturation blend mode
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;
    Color (cor):
  &lt;/h4&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div id=&#34;highlighter_88781&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              1
            &lt;/div&gt;
          &lt;/td&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;B(Cb, Cs) = SetLum(Cs, Lum(Cb))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Aplica-se o hue (matiz) e a saturação do primeiro plano para a luminância de fundo.
  &lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
    &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-color.jpg&#34; alt=&#34;modo de mistura de cores&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
  Color blend mode
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;
    Luminosity (Luminosidade):
  &lt;/h4&gt;&lt;/p&gt;

&lt;p&gt;&lt;div&gt;
    &lt;div id=&#34;highlighter_88781&#34; class=&#34;syntaxhighlighter noskimlinks noskimwords bash&#34;&gt;
      &lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;
        &lt;tr&gt;
          &lt;td class=&#34;gutter&#34;&gt;
            &lt;div class=&#34;line number1 index0 alt2&#34;&gt;
              1
            &lt;/div&gt;
          &lt;/td&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;td class=&amp;quot;code&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;div class=&amp;quot;line number1 index0 alt2&amp;quot;&amp;gt;
            &amp;lt;code&amp;gt;B(Cb, Cs) = SetLum(Cs, Lum(Cb))&amp;lt;/code&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    Este modo aplica-se a luminosidade da camada de origem com o hue (matiz) e a saturação da camada de fundo.
  &lt;/p&gt;&lt;figure class=&#34;post_image&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;
    &lt;div style=&#34;width: 610px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
      &lt;img src=&#34;https://cms-assets.tutsplus.com/uploads/users/30/posts/25201/image/j-last.jpg&#34; alt=&#34;blend mode Luminosidade&#34; width=&#34;600&#34; height=&#34;300&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;lt;p class=&amp;quot;wp-caption-text&amp;quot;&amp;gt;
    Luminosity blend mode
  &amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;&amp;lt;figcaption&amp;gt;&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt; 

&amp;lt;div class=&amp;quot;post-body view view--loaded&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;post-body__body&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;post-body__content&amp;quot;&amp;gt;
      &amp;lt;h2&amp;gt;
        Conclusão
      &amp;lt;/h2&amp;gt;

      &amp;lt;p&amp;gt;
        Modos de mistura  (&amp;quot;Blending Mode&amp;quot;) em CSS fornece um nova e excitante flexibilidade para a concepção e experiências estéticas singulares. Entender a matemática e a teoria da cor que se aplica a cada um dos modos de blending (&amp;quot;mesclagem&amp;quot;) disponíveis fornece-lhe um conjunto de ferramentas mais holística.
      &amp;lt;/p&amp;gt;

      &amp;lt;p&amp;gt;
        O que você vai fazer com os navegadores quando eles adicionarem suporte para modos de mistura?
      &amp;lt;/p&amp;gt;

      &amp;lt;h3&amp;gt;
        Links Relacionados
      &amp;lt;/h3&amp;gt;

      &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;
          Confira o que os autores estão fazendo com &amp;lt;a href=&amp;quot;https://translate.googleusercontent.com/translate_c?depth=1&amp;amp;hl=pt-BR&amp;amp;ie=UTF8&amp;amp;prev=_t&amp;amp;rurl=translate.google.com.br&amp;amp;sl=en&amp;amp;tl=pt-BR&amp;amp;u=https://graphicriver.net/tags/blend&amp;amp;usg=ALkJrhjVwZaYbKYEuiA9KqnWHPkBBv5XWg&amp;quot; target=&amp;quot;_self&amp;quot;&amp;gt;Photoshop acções e modos de mistura&amp;lt;/a&amp;gt; ao longo de Mercado Envato
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;
          Leia mais sobre &amp;lt;a href=&amp;quot;https://translate.googleusercontent.com/translate_c?depth=1&amp;amp;hl=pt-BR&amp;amp;ie=UTF8&amp;amp;prev=_t&amp;amp;rurl=translate.google.com.br&amp;amp;sl=en&amp;amp;tl=pt-BR&amp;amp;u=https://developer.mozilla.org/en/docs/Web/CSS/blend-mode&amp;amp;usg=ALkJrhhucd1JKzMcPZ9w-dM4ZfOQEige2g&amp;quot; target=&amp;quot;_self&amp;quot;&amp;gt;&amp;lt;misturar-mode&amp;gt;&amp;lt;/a&amp;gt; no Mozilla Developer Network
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;
          &amp;lt;a href=&amp;quot;https://translate.googleusercontent.com/translate_c?depth=1&amp;amp;hl=pt-BR&amp;amp;ie=UTF8&amp;amp;prev=_t&amp;amp;rurl=translate.google.com.br&amp;amp;sl=en&amp;amp;tl=pt-BR&amp;amp;u=http://sarasoueidan.com/blog/compositing-and-blending-in-css/&amp;amp;usg=ALkJrhhERbYPRMYL0iPGDgy0A-JLD1MCFQ&amp;quot; target=&amp;quot;_self&amp;quot;&amp;gt;Composição e mistura Em CSS&amp;lt;/a&amp;gt; por Sara Soueidan
        &amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div class=&amp;quot;ad ad--publift&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;h3 class=&amp;quot;ad ad--publift&amp;quot;&amp;gt;
  Texto traduzido
&amp;lt;/h3&amp;gt;

&amp;lt;div class=&amp;quot;content-author&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;content-author__header&amp;quot;&amp;gt;
    &amp;lt;p&amp;gt;
      &amp;lt;img class=&amp;quot;content-author__image alignleft&amp;quot; src=&amp;quot;https://cms-assets.tutsplus.com/uploads/users/50/profiles/917/profileImage/av-cutrell.jpg&amp;quot; alt=&amp;quot;Av cutrell&amp;quot; width=&amp;quot;215&amp;quot; height=&amp;quot;215&amp;quot; /&amp;gt;
    &amp;lt;/p&amp;gt;

    &amp;lt;pre class=&amp;quot;content-author__name&amp;quot;&amp;gt;&amp;lt;em&amp;gt;Jonathan Cutrell&amp;lt;/em&amp;gt;&amp;lt;/pre&amp;gt;

    &amp;lt;p&amp;gt;
      &amp;lt;span id=&amp;quot;result_box&amp;quot; class=&amp;quot;&amp;quot; lang=&amp;quot;pt&amp;quot;&amp;gt;&amp;lt;em&amp;gt;&amp;lt;span style=&amp;quot;text-decoration: underline&amp;quot;&amp;gt;Diretor de Tecnologia da Whiteboard e apresentador do desenvolvedor Tea&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; 

      &amp;lt;div class=&amp;quot;content-author__header&amp;quot;&amp;gt;
      &amp;lt;/div&amp;gt;

      &amp;lt;div class=&amp;quot;content-author__header&amp;quot;&amp;gt;
        &amp;lt;span id=&amp;quot;result_box&amp;quot; class=&amp;quot;&amp;quot; lang=&amp;quot;pt&amp;quot;&amp;gt;Eu sou o Director &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;de Tecnologia da &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;Whiteboard, uma empresa de interação digital &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;com sede em &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;Chattanooga, Tennessee. &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;Tenho um mestrado em Mídia Digital da &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;Georgia Tech. I &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;escrever, ensinar e &amp;lt;span class=&amp;quot;&amp;quot;&amp;gt;falar sobre o código e as coisas que ele pode fazer possível.&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 

        &amp;lt;div class=&amp;quot;content-author__header&amp;quot;&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class=&amp;quot;content-author__header&amp;quot;&amp;gt;
          &amp;lt;a href=&amp;quot;https://webdesign.tutsplus.com/tutorials/blending-modes-in-css-color-theory-and-practical-application--cms-25201&amp;quot;&amp;gt;Link Original do Post retirado do blog Tutsplus&amp;lt;br /&amp;gt; &amp;lt;/a&amp;gt;
        &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CSS3 — Trabalhando com Múltiplas imagens background-images</title>
      <link>http://tableless.com.br/css3-trabalhando-com-multiplas-imagens-background-images/</link>
      <pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/css3-trabalhando-com-multiplas-imagens-background-images/</guid>
      <description>

&lt;p class=&#34;graf--p&#34;&gt;
  Quem nunca se deparou com um layout com múltiplas imagens “sobrepostas” ou mesmo com títulos ou parágrafos que precisavam ficar suspensos sobre múltiplas imagens de fundo? Essa semana me deparei com o mesmo problema.
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Com &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;CSS3&#34; href=&#34;https://developer.mozilla.org/en/CSS/CSS3&#34;&gt;CSS3&lt;/a&gt;, você pode aplicar aos elementos múltiplas imagens sobrepostas como plano de fundo. Sem a utilização do Z-index! É isso mesmo, “necas de pitibiriba” de Z-index.
&lt;/p&gt;

&lt;h2 id=&#34;velho-dilema-de-sobrepor-imagens-com-div-s-com-z-index-graf-h4&#34;&gt;Velho dilema de sobrepor imagens com div’s com Z-index… {.graf&amp;ndash;h4}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  A primeira solução que vem à cabeça é o velho e bom “Z-index”, Veja um exemplo de implementação:
&lt;/p&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    HTML
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;red&#34;&amp;gt;Red&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;green&#34;&amp;gt;Green&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    &amp;lt;span class=&#34;blue&#34;&amp;gt;Blue&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    CSS
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.red, .green, .blue {
    color: #fff;
    display: block;
    line-height: 100px;
    position: absolute;
    text-align: center;
    width: 100px;
}
.red {
    background: red;
    left: 20px;
    top: 20px;
    z-index: 0;
    opacity:0.5;
}
.green {
    background: green;
    left: 60px;
    top: 60px;
    z-index: 1;
    opacity:0.6;
}
.blue {
    background: blue;
    left: 100px;
    top: 100px;
    z-index: 2;
    opacity:0.7;
}
body {
    color: #777;
}&lt;/pre&gt;

&lt;p&gt;See the Pen &lt;a href=&#34;http://codepen.io/selique/pen/grvvLw/&#34;&gt;Z-index&lt;/a&gt; by Moisés lopes ferreira (&lt;a href=&#34;http://codepen.io/selique&#34;&gt;@selique&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;funciona-em-class-markup-em-markup-h4-em-sim-em-mas-espere-um-momento-essa-não-é-a-única-solução-graf-h4&#34;&gt;Funciona?!… &lt;em class=&#34;markup--em markup--h4-em&#34;&gt;SIM!&lt;/em&gt; Mas espere um momento, essa não é a única solução… {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  … Você já tava pensando num “workaround” safadinho, a mão da gambiarra chega a tremer nessas horas, mas nada de programação orientada a “Go-Horse”, hoje em dia temos “solucionática” pra quase tudo hehe…
&lt;/p&gt;

&lt;div style=&#34;width: 510px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*pAiFtxYHdjg4-HP6e46wZA.gif&#34; alt=&#34;www.gohorseprocess.com.br/extreme-go-horse-(xgh)&#34; width=&#34;500&#34; height=&#34;374&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    www.gohorseprocess.com.br/extreme-go-horse-(xgh)
  &lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&#34;conhecendo-as-propriedades-css-do-background-graf-h4&#34;&gt;Conhecendo as propriedades CSS do Background: {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;pre&gt;background-color.........define a cor do fundo;
background-image.........define uma imagem de fundo;
background-repeat........define a maneira como a imagem de fundo é posicionada;
background-attachment....define se a imagem de fundo &#34;rola&#34; ou não com a tela;
background-position......define como e onde a imagem de fundo é posicionada;
background-clip..........define a área do box onde a imagem de fundo é aplicada;
background-origin........define a posição de origem da imagem no box;
background-size..........define as dimensões da imagem no box;
background...............maneira abreviada para declarar todas as propriedades anteriores;&lt;/pre&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  O nosso grande mestre &lt;a class=&#34;markup--user markup--p-user&#34; href=&#34;https://medium.com/u/addb7196c9b9&#34;&gt;Maurício Samy Silva&lt;/a&gt; #Maujor explica melhor as aplicações das propriedades &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://maujor.com/tutorial/propriedade-css-para-estilizacao-de-background.php&#34; rel=&#34;nofollow&#34;&gt;http://maujor.com/tutorial/propriedade-css-para-estilizacao-de-background.php&lt;/a&gt;
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Agora que conhecemos suas propriedades e características… agora vamos ver como o “background-image” funciona para entendermos nosso horizonte de possibilidades:
&lt;/p&gt;

&lt;h2 id=&#34;background-image-vs-z-index-a-batalha-graf-h4&#34;&gt;Background-image VS Z-index — A BATALHA: {.graf&amp;ndash;h4}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Quando trabalhamos 2 ou 3 elementos (sejam &lt;img&gt;, &lt;div&gt;, &lt;etc…&gt;) temos um controle até tolerável, mas… quando utilizamos 6, 10 ou mais elementos numa mesma div ou aninhamento próximo, o z-index começa a se tornar “linguiçento” demais e somos obrigados a utilizar mais classes e ids para organizarmos nosso CSS, pensando nisso que escrevi esse post!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  &lt;em&gt;Às vezes não necessariamente queremos ou podemos utilizar o z-index.&lt;/em&gt;
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Sem contar que quebramos o conceito de &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://tableless.com.br/oocss-smacss-bem-dry-css-afinal-como-escrever-css/&#34;&gt;DRY&lt;/a&gt; em nosso documento CSS e não queremos isso, não é amiguinhos?
&lt;/p&gt;

&lt;div style=&#34;width: 495px&#34; class=&#34;wp-caption aligncenter&#34;&gt;
  &lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*xt8qqJopHwF-Gcg9xM6t3w.gif&#34; alt=&#34;Vida de um Front-end&#34; width=&#34;485&#34; height=&#34;364&#34; /&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    Front-end Lifestyle
  &lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&#34;z-index-quando-usar-graf-h4&#34;&gt;Z-index — Quando usar? {.graf&amp;ndash;h4}&lt;/h3&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Quando temos muitos elementos e precisamos especificar propriedades e características CSS que vão além do propósito de uma “imagem de fundo” ou “sobreposição” então o Z-index é a melhor opção!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Mas se você quer simplesmente sobrepor uma imagem de um logo (ou uma composição de camadas que formam um logo) sobre um uma ou mais imagem de preenchimento de fundo o background-image é a melhor solução!
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Estes elementos ficam empilhados em camadas uma acima da outra, onde o primeiro fundo dado será desenhado no topo e apenas o último elemento da lista poderá definir uma cor sólida de fundo, ou não, aí fica ao seu critério.
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.minhaClasse {
  background: fundo1, fundo2, ..., fundoN;
}&lt;/pre&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--p-anchor&#34; href=&#34;http://tableless.com.br/tag/css3/&#34;&gt;CSS3&lt;/a&gt; permite especificar imagens de fundo para múltiplos elementos, usando nada mais do que uma única lista separada por vírgulas.
&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Você pode fazer isso com a propriedade reduzida &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background&#34;&gt;background&lt;/a&gt; e também com as propriedade individuais, com a exceção de &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-color&#34;&gt;background-color&lt;/a&gt;. Isto é, as seguintes propriedades de plano de fundo podem ser especificadas com uma lista, uma por fundo: &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background&#34;&gt;background&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-attachment&#34;&gt;background-attachment&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;A propriedade CSS background-clip especifica se o fundo de um elemento, seja cor ou imagem, se extende debaixo de sua borda.&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-clip&#34;&gt;background-clip&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34;&gt;background-image&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-origin&#34;&gt;background-origin&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-position&#34;&gt;background-position&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-repeat&#34;&gt;background-repeat&lt;/a&gt;, &lt;a class=&#34;markup--anchor markup--p-anchor&#34; title=&#34;The documentation about this has not yet been written; please consider contributing!&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-size&#34;&gt;background-size&lt;/a&gt;. (rola até gradiente!)
&lt;/p&gt;

&lt;h2 id=&#34;exemplos-graf-h3&#34;&gt;Exemplos {.graf&amp;ndash;h3}&lt;/h2&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Neste exemplo, três planos de fundos estão empilhados: um texto estilizado, o logo da Tableless.com.br, e uma imagem de fundo ilustrando uma cidade:
&lt;/p&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    HTML
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;header&amp;gt;
  &amp;lt;div class=&#34;intro-text&#34;&amp;gt;
    &amp;lt;h1 class=&#34;name-index&#34;&amp;gt;BEM-VINDO À&amp;lt;/br&amp;gt;&amp;lt;span&amp;gt;INTERNET&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/header&amp;gt;&lt;/pre&gt;

&lt;blockquote class=&#34;graf--blockquote&#34;&gt;
  &lt;p&gt;
    CSS
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre class=&#34;lang-css&#34;&gt;header {
  background: url(&lt;a class=&#34;markup--anchor markup--pre-anchor&#34; href=&#34;http://tableless.com.br/wp-content/uploads/2013/04/logo-tableless-01.png&#34; rel=&#34;nofollow&#34;&gt;http://tableless.com.br/wp-content/uploads/2013/04/logo-tableless-01.png&lt;/a&gt;) no-repeat center center, url(&lt;a class=&#34;markup--anchor markup--pre-anchor&#34; href=&#34;http://lorempixel.com/output/city-q-g-1024-768-10.jpg&#34; rel=&#34;nofollow&#34;&gt;http://lorempixel.com/output/city-q-g-1024-768-10.jpg&lt;/a&gt;) no-repeat center top;
  height: 100vh;
  width: auto;
  box-sizing: border-box;
}
header .intro-text {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}
header .intro-text &amp;gt; h1 {
  text-shadow: 8px 5px 5px #00181c;
  color: #fff;
  text-transform: uppercase;
  text-align: center;
}
header .intro-text .name-index {
  font-size: 7vw;
}
header .intro-text .name-index span {
  font-size: 9.2vw;
}&lt;/pre&gt;

&lt;p&gt;See the Pen &lt;a href=&#34;http://codepen.io/selique/pen/vKddRK/&#34;&gt;Multiple backgrounds backgroud-image&lt;/a&gt; by Moisés lopes ferreira (&lt;a href=&#34;http://codepen.io/selique&#34;&gt;@selique&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Suporte do navegador para múltiplas imagens com a propriedade CSS background-image é relativamente difundido na implementação do recurso citado acima:
&lt;/p&gt;

&lt;ul class=&#34;postList&#34;&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Mozilla Firefox (3.6 ou superior)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Safari / Chrome (1.0 / 1.3 +)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    Opera (10.5+)
  &lt;/li&gt;
  &lt;li class=&#34;graf--li&#34;&gt;
    até mesmo no Internet Explorer (9.0+)
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&#34;graf--p&#34;&gt;
  Bibliografia (Fontes)
&lt;/p&gt;

&lt;div class=&#34;graf--mixtapeEmbed&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--mixtapeEmbed-anchor&#34; title=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/background-image&#34;&gt;&lt;strong class=&#34;markup--strong markup--mixtapeEmbed-strong&#34;&gt;background-image&lt;/strong&gt; &amp;#8211; &lt;em class=&#34;markup--em markup--mixtapeEmbed-em&#34;&gt;The CSS background-image property sets one or several background images for an element. The images are drawn on…&lt;/em&gt;developer.mozilla.org&lt;/a&gt;
&lt;/div&gt;

&lt;div class=&#34;graf--mixtapeEmbed&#34;&gt;
  &lt;a class=&#34;markup--anchor markup--mixtapeEmbed-anchor&#34; title=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Background_and_Borders/Using_CSS_multiple_backgrounds&#34; href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Background_and_Borders/Using_CSS_multiple_backgrounds&#34;&gt;&lt;strong class=&#34;markup--strong markup--mixtapeEmbed-strong&#34;&gt;Multiple backgrounds&lt;/strong&gt; &amp;#8211; &lt;em class=&#34;markup--em markup--mixtapeEmbed-em&#34;&gt;Com CSS3 , você pode aplicar aos elementos multiplos planos de fundo. Estes ficam em camadas empilhadas uma acima da…&lt;/em&gt;developer.mozilla.org&lt;/a&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Bulma: framework CSS baseado em flexbox</title>
      <link>http://tableless.com.br/bulma-framework-css-baseado-em-flexbox/</link>
      <pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/bulma-framework-css-baseado-em-flexbox/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;Inspirado pelo Bootstrap, o Bulma visa oferecer a todos a alegria de fazer o design do site, com a simplicidade do flexbox e a elegância de Sass.&amp;#8221; &amp;#8211; &lt;a href=&#34;http://jgthms.com/&#34;&gt;Jeremy Thomas&lt;/a&gt;, criador do projeto Bulma.io.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Como o título diz, o &lt;a href=&#34;http://bulma.io/&#34;&gt;Bulma&lt;/a&gt; é um framework CSS baseado na tecnologia flexbox, que já tem uma grande &lt;a href=&#34;http://caniuse.com/#search=flexbox&#34;&gt;compatibilidade&lt;/a&gt; entre os navegadores. O pacote contém todos os elementos mais comuns como botões, formulários, menus, tabelas, títulos, notificações, barras de progresso e um simples sistema de grid (basta adicionar uma coluna, o resize das colunas é automático).&lt;/p&gt;

&lt;p&gt;Vou mostrar alguns exemplos para que você possa entender o poder do Bulma.&lt;/p&gt;

&lt;p&gt;Primeiramente, faremos a instalação que não precisa de nada mais que um link para o arquivo de estilos do Bulma:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/bulma/0.0.26/css/bulma.css&#34;&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Claro que você pode baixar e deixar no seu diretório local, e também baixar com o NPM: &lt;code&gt;npm install bulma&lt;/code&gt;; mas o que quero mostrar é que tudo que você precisa é apenas de um arquivo de CSS.&lt;/p&gt;

&lt;p&gt;Baixando com o NPM você terá como personalizar facilmente com SASS.&lt;/p&gt;

&lt;p&gt;O Bulma não vem com nenhum pacote de icon-fonts acoplado, então, caso você pretenda usar algum, como o Font Awesome, você deve inserí-lo também.&lt;/p&gt;

&lt;h2 id=&#34;o-grid&#34;&gt;O Grid&lt;/h2&gt;

&lt;p&gt;Lembrando: como o Bulma foi baseado no Bootstrap, uma das semelhanças é o sistema de grid com 12 colunas.&lt;/p&gt;

&lt;p&gt;Como falei, o grid funciona de forma muito simples. Tudo que você precisa é ter uma &lt;code&gt;div&lt;/code&gt; com a classe &lt;code&gt;.columns&lt;/code&gt; e suas filhas &lt;code&gt;.column&lt;/code&gt;, como no exemplo abaixo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;columns&#34;&amp;gt;
  &amp;lt;div class=&#34;column&#34;&amp;gt;.column&amp;lt;/div&amp;gt;
  &amp;lt;div class=&#34;column&#34;&amp;gt;.column&amp;lt;/div&amp;gt;
  &amp;lt;div class=&#34;column&#34;&amp;gt;.column&amp;lt;/div&amp;gt;
  &amp;lt;div class=&#34;column&#34;&amp;gt;.column&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Você pode entender melhor como funciona com &lt;a href=&#34;http://codepen.io/gabsprates/full/PNVJrP/&#34;&gt;esse exemplo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mas e se você quiser que uma coluna ocupe o espaço de duas? Ou três? Ou quatro? Simples!!!&lt;/p&gt;

&lt;p&gt;Podemos utilizar as classes &lt;code&gt;is-2&lt;/code&gt;, &lt;code&gt;is-3&lt;/code&gt;, &lt;code&gt;is-4&lt;/code&gt;, &lt;code&gt;is-5&lt;/code&gt;, &lt;code&gt;is-6&lt;/code&gt;, &lt;code&gt;is-7&lt;/code&gt;, &lt;code&gt;is-8&lt;/code&gt;, &lt;code&gt;is-9&lt;/code&gt;, &lt;code&gt;is-10&lt;/code&gt; e &lt;code&gt;is-11&lt;/code&gt; para especificar qual a área ocupada pela &lt;code&gt;.column&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para entender melhor, aconselho a dar uma olhada &lt;a href=&#34;http://bulma.io/documentation/grid/columns/&#34;&gt;neste&lt;/a&gt; e &lt;a href=&#34;http://bulma.io/documentation/grid/tiles/&#34;&gt;neste&lt;/a&gt; links.&lt;/p&gt;

&lt;h2 id=&#34;hero&#34;&gt;Hero&lt;/h2&gt;

&lt;p&gt;Você já teve problemas com alinhar elementos verticalmente ao centro? O Bulma é um verdadeiro herói para essas situações! Veja este exemplo:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;section class=&#34;hero is-large&#34;&amp;gt;
    &amp;lt;div class=&#34;hero-body&#34;&amp;gt;
      &amp;lt;div class=&#34;container&#34;&amp;gt;
        &amp;lt;h1 class=&#34;title&#34;&amp;gt;
          Título
        &amp;lt;/h1&amp;gt;
        &amp;lt;h2 class=&#34;subtitle&#34;&amp;gt;
          Exemplo do uso do hero
        &amp;lt;/h2&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/section&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Aqui o Bulma centraliza os títulos na vertical, qualquer conteúdo seria alinhado também. &lt;a href=&#34;http://bulma.io/documentation/layout/hero/&#34;&gt;Clique aqui&lt;/a&gt; mais exemplos.&lt;/p&gt;

&lt;h2 id=&#34;level&#34;&gt;Level&lt;/h2&gt;

&lt;p&gt;Por último, quero falar um pouco sobre as navbars. Veja esse código:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;nav class=&#34;level&#34;&amp;gt;
    &amp;lt;p class=&#34;level-item has-text-centered&#34;&amp;gt;
      &amp;lt;a class=&#34;link is-info&#34;&amp;gt;Home&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;
    &amp;lt;p class=&#34;level-item has-text-centered&#34;&amp;gt;
      &amp;lt;a class=&#34;link is-info&#34;&amp;gt;Menu&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;
    &amp;lt;p class=&#34;level-item has-text-centered&#34;&amp;gt;
      &amp;lt;img src=&#34;http://bulma.io/images/bulma.png&#34; alt=&#34;&#34; style=&#34;height: 33px;&#34;&amp;gt;
    &amp;lt;/p&amp;gt;
    &amp;lt;p class=&#34;level-item has-text-centered&#34;&amp;gt;
      &amp;lt;a class=&#34;link is-info&#34;&amp;gt;Reservations&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;
    &amp;lt;p class=&#34;level-item has-text-centered&#34;&amp;gt;
      &amp;lt;a class=&#34;link is-info&#34;&amp;gt;Contact&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;
  &amp;lt;/nav&amp;gt;

&lt;/pre&gt;

&lt;p&gt;Ele gera uma navbar em que os elementos são divididos com a largura igual e com alinhamento vertical no centro, mesmo com imagem ou até mesmo um &lt;code&gt;form&lt;/code&gt;, ele manteria esse alinhamento.&lt;/p&gt;

&lt;p&gt;Veja mais &lt;a href=&#34;http://bulma.io/documentation/components/level/&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;enfim-8230&#34;&gt;Enfim&amp;#8230;&lt;/h2&gt;

&lt;p&gt;Estes foram alguns exemplos do poder do Bulma mas há muito mais que você pode conferir na própria &lt;a href=&#34;http://bulma.io/documentation/overview/start/&#34;&gt;documentação do projeto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Existem vários componentes legais, como cards, menus, paginação, mensagens, e várias outras coisas fáceis de usar e simples de compreender.&lt;/p&gt;

&lt;p&gt;Isso é tudo pessoal (:&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando facebook reactions com css</title>
      <link>http://tableless.com.br/criando-facebook-reactions-com-css/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/criando-facebook-reactions-com-css/</guid>
      <description>

&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;

&lt;p&gt;No dia 24 de fevereiro de 2016, o Facebook liberou seus novos botões de curtir, chamado de &amp;#8220;Facebook Reactions&amp;#8221;, a função foi liberada para todos os usuários, já que estava em fase de testes em alguns países.&lt;/p&gt;

&lt;p&gt;São eles: Curtir, Amei, Haha, Uau, Triste, Grr.&lt;/p&gt;

&lt;p&gt;Essa novidade é uma ótima maneira de saber como seus contatos reagem ao que você compartilha na rede social.&lt;/p&gt;

&lt;p&gt;Em 2014 o Facebook registrou a patente que previa esses botões com sentimentos, &lt;a href=&#34;http://thenextweb.com/facebook/2015/09/18/facebook-patent-reveals-what-its-empathy-button-might-look-like/&#34; target=&#34;_blank&#34;&gt;leia mais detalhes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Como sou apaixonado por CSS, resolvi criar essas micro interações ao passar o mouse sobre o elemento, e também caso use o teclado.&lt;/p&gt;

&lt;p&gt;Cheguei a olhar como o Facebook criou aquelas animações, e resolvi fazer algo mais simples usando a propriedade translate e não animation conforme eles usaram no deles.&lt;/p&gt;

&lt;h2 id=&#34;veja-o-html&#34;&gt;Veja o HTML&lt;/h2&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;box&#34;&amp;gt;
  &amp;lt;input type=&#34;checkbox&#34; id=&#34;like&#34; class=&#34;field-reactions&#34;&amp;gt;
  &amp;lt;span class=&#34;text-desc&#34;&amp;gt;Press space and after tab key to navigation&amp;lt;/span&amp;gt;
  &amp;lt;label for=&#34;like&#34; class=&#34;label-reactions&#34;&amp;gt;Like&amp;lt;/label&amp;gt;
  &amp;lt;div class=&#34;toolbox&#34;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;label class=&#34;overlay&#34; for=&#34;like&#34;&amp;gt;&amp;lt;/label&amp;gt;
  &amp;lt;button class=&#34;reaction-like&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Like&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
  &amp;lt;button class=&#34;reaction-love&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Love&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
  &amp;lt;button class=&#34;reaction-haha&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Haha&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button class=&#34;reaction-wow&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Wow&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button class=&#34;reaction-sad&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Sad&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button class=&#34;reaction-angry&#34;&amp;gt;&amp;lt;span class=&#34;legend-reaction&#34;&amp;gt;Angry&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;h2 id=&#34;o-html&#34;&gt;o HTML&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Linha 1:&lt;/strong&gt; &lt;em&gt;área geral do elemento que recebe o hover  e com isso inicia as interações utilizando o mouse.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 2:&lt;/strong&gt; &lt;em&gt;input checkbox utilizado pra iniciar as interações ao ser checado via mouse ou teclado.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 3&lt;/strong&gt;: &lt;em&gt;mensagem exibida pro usuário assim que ele navegar com o teclado e o input da linha 2 receber o foco.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 4:&lt;/strong&gt; &lt;em&gt;elemento que recebe o background do like e também ao ser clicado faz o change do input checkbox e iniciando as interações.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 5:&lt;/strong&gt; &lt;em&gt;caixa branca com borda arredondada que tem uma animação diferente dos reactions, por isso ele não é pai dos elementos.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 6:&lt;/strong&gt; &lt;em&gt;overlay sem cor alguma que serve pra fechar as interações, caso o usuário clique na área fora do box.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linha 7 a 12:&lt;/strong&gt; &lt;em&gt;reactions do Facebook que possui uma animação ao receber o :hover ou :focus.  Adicionei em cada um a propriedade transition-delay com diferença de 0.03s entre eles&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;o-css&#34;&gt;O CSS&lt;/h2&gt;

&lt;p&gt;Para exibir os Reactions através do mouse, utilizei o :hover do CSS na classe .box , que é o pai geral dos elementos.&lt;/p&gt;

&lt;p&gt;Para exibir via teclado, ou click do mouse, existe um input[type=&amp;#8221;checked&amp;#8221;], que manipula seus irmãos (os Reactions e o background branco com borda arredondada).&lt;/p&gt;

&lt;p&gt;O elemento branco com borda arredondada, mesmo que visualmente ele esteja atrás como background dos Reactions, no html ele é irmão, com isso foi feito uma outra animação específica pra ele, algo bem simples, apenas dando um show.&lt;/p&gt;

&lt;h4 id=&#34;os-reactions&#34;&gt;Os Reactions&lt;/h4&gt;

&lt;p&gt;Conforme se vê abaixo, é chamado o sprite dos Reactions e seus elementos de exibição (width, height, position, top, etc). Os reactions inicia com opacidade, 0 scale 10%, e o transform-origin. Lembrando que eles serão exibidos quando o elemento pai (.box) receber o hover do mouse e/ou quando o input for checado.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;[class*=&#34;reaction-&#34;] {
border: none;
background-image: url(https://fbstatic-a.akamaihd.net/rsrc.php/v2/yh/r/sqhTN9lgaYm.png);
background-color: transparent;
display: block;
cursor: pointer;
height: 48px;
position: absolute;
width: 48px;
z-index: 11;
top: -28;
transform-origin: 50% 100%;
transform: scale(0.1);
transition: all 0.3s;
outline: none;
will-change: transform;
opacity: 0;
}
&lt;/pre&gt;

&lt;h4 id=&#34;animando&#34;&gt;Animando&lt;/h4&gt;

&lt;p&gt;Como temos aquele input[type=&amp;#8221;checked], citado anteriormente, através do CSS, podemos usar o :hover, e o :checked desse input e gerar nossas interações mais fáceis em seus irmãos, ou seja, manipulado a opacidade e o scale dos Reactions, ao passar o mouse, ou clicar no like, ou navegar com o teclado checando o input escondido.&lt;/p&gt;

&lt;p&gt;Se vocês repararem existe uma diferença de animação entre o primeiro Reactions e o último e isso foi resolvido bem simples, aplicando um delay pra cada um. (veja abaixo)&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.box:hover .reaction-love {
 transition-delay: 0.03s;
}
.box:hover .reaction-haha {
 transition-delay: 0.09s;
}
.box:hover .reaction-wow {
 transition-delay: 0.12s;
}
.box:hover .reaction-sad {
 transition-delay: 0.15s;
}
.box:hover .reaction-angry {
 transition-delay: 0.18s;
}&lt;/pre&gt;

&lt;p&gt;Pra finalizar, existe um outro comportamento aplicado em cada Reactions que exibe a legenda (inicia com opacidade 0), e muda no :hover e o :focus de cada Reaction para 1 na opacidade.&lt;/p&gt;

&lt;p&gt;Inicialmemte eles estão escondidos e pequenos e ao passar o mouse ou receber o foco, são exibidos.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.box:hover [class*=&#34;reaction-&#34;]:hover .legend-reaction, 
.box:hover [class*=&#34;reaction-&#34;]:focus .legend-reaction {
 opacity: 1;
}&lt;/pre&gt;

&lt;h4 id=&#34;bônus&#34;&gt;Bônus&lt;/h4&gt;

&lt;p&gt;A propriedade  will-change  otimiza animações, permitindo que o navegador sabe quais propriedades e elementos estão prestes a ser manipulados, aumentando potencialmente o desempenho dessa operação específica.&lt;/p&gt;

&lt;p&gt;O will-change é uma recomentação do W3C, desde dezembro de 2015, e seu suporte aos navegadores atuais são bons, segundo o &lt;a href=&#34;http://caniuse.com/#search=will-change&#34; target=&#34;_blank&#34;&gt;caninuse&lt;/a&gt; somente os IEs e o Edge não dão suporte atualmente.&lt;/p&gt;

&lt;p&gt;Para saber mais sobre will change &lt;a href=&#34;https://www.w3.org/TR/css-will-change-1/&#34; target=&#34;_blank&#34;&gt;veja a documentação do W3C&lt;/a&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;[class*=&#34;reaction-&#34;] {
  transform-origin: 50% 100%;
  transform: scale(0.1);
  transition: all 0.3s;
  will-change: transform, opacity;
}&lt;/pre&gt;

&lt;h2 id=&#34;em-resumo&#34;&gt;Em resumo&lt;/h2&gt;

&lt;p&gt;O grande segredo então seria conhecer algumas propriedades de animação como, translate, transform, opacity, visibility, e lembrar que podemos manipular elementos irmãos com :checked ou :hover do pai e manipular seus elementos filhos.&lt;/p&gt;

&lt;h2 id=&#34;veja-o-demo-codepen&#34;&gt;Veja o demo {.codepen}&lt;/h2&gt;

&lt;p class=&#34;codepen&#34;&gt;
  See the Pen &lt;a href=&#34;http://codepen.io/deividmarques/pen/wGvbwY/&#34;&gt;wGvbwY&lt;/a&gt; by Deivid Marques (&lt;a href=&#34;http://codepen.io/deividmarques&#34;&gt;@deividmarques&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;

&lt;h2 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Inicialmente criei as interações acontecendo apenas no click do elemento, porém no resultado final mudei para o hover do mouse, e também deixei funcionando ao usar a tecla TAB, sendo foi possível navegar pelos &amp;#8220;Reactions&amp;#8221; com o teclado também.&lt;/p&gt;

&lt;p&gt;Utilizei HTML e SASS, claro que daria pra fazer de outras maneiras, escrever menos códigos, até mesmo usando funções do sass em alguns lugares, mas isso ficará pra próxima versão.&lt;/p&gt;

&lt;p&gt;O intuito de criar esse pequeno exemplo foi me divertir e também em mostrar os poderes que o CSS têm ao se criar essas micro interações.&lt;/p&gt;

&lt;div style=&#34;overflow: hidden&#34;&gt;
  &lt;p&gt;
    &lt;a style=&#34;float: left;margin: 0 15px 15px 0&#34; href=&#34;http://deividmarques.github.io/facebook-reactions-css/&#34;&gt;&lt;img class=&#34;alignleft size-full wp-image-53344&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2016/02/print-cel.png&#34; alt=&#34;facebook reactions com css by Deivid Marques&#34; width=&#34;300&#34; height=&#34;533&#34; /&gt;&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    O resultado por ser &lt;a href=&#34;http://deividmarques.github.io/facebook-reactions-css/&#34; target=&#34;_blank&#34;&gt;conferido aqui&lt;/a&gt;&lt;br /&gt; Gostou? Dê um click nas estrelinhas do projeto lá no &lt;a href=&#34;https://github.com/deividmarques/facebook-reactions-css&#34; target=&#34;_blank&#34;&gt;github&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Experimentando flexbox hoje: topo alinhado sem muito esforço</title>
      <link>http://tableless.com.br/experimentando-flexbox-hoje-topo-alinhado-sem-muito-esforco/</link>
      <pubDate>Wed, 25 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/experimentando-flexbox-hoje-topo-alinhado-sem-muito-esforco/</guid>
      <description>

&lt;p&gt;Como muitos desenvolvedores web, gosto de experimentar &lt;em&gt;features&lt;/em&gt; novas ocasionalmente. Uma das coisas que costumava fazer em todo projeto é deixar o menu alinhado horizontalmente à logo, como no exemplo abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/11/print.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-52030 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/11/print.png&#34; alt=&#34;Exemplo de topo com logo e links&#34; width=&#34;1175&#34; height=&#34;78&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Só que nunca foi tão fácil assim: para deixar eles alinhados verticalmente, precisamos adicionar &lt;code&gt;margin&lt;/code&gt; ou &lt;code&gt;padding&lt;/code&gt; à logo ou ao menu. E com a popularização do site responsivo, os tamanhos dessas propriedades não eram os únicos problemas: tanto a logo quanto o espaçamento entre os links poderiam diminuir ou aumentar conforme o tamanho da tela e daria um grande trabalho (criar vários &lt;em&gt;media queries&lt;/em&gt; com vários ajustes em cada resolução) para conseguirmos alinhar em todos os dispositivos.&lt;/p&gt;

&lt;p&gt;É aí que entra o &lt;strong&gt;&lt;em&gt;flexbox&lt;/em&gt;&lt;/strong&gt;. Se você usa &lt;a href=&#34;http://getbootstrap.com/&#34; target=&#34;_blank&#34;&gt;Bootstrap&lt;/a&gt;, sua sintaxe do topo deve ser similar à esta:&lt;/p&gt;

&lt;p&gt;See the Pen &lt;a href=&#34;http://codepen.io/alanmarcos/pen/xwmWOV/&#34; target=&#34;_blank&#34;&gt;xwmWOV&lt;/a&gt; by Alan Marcos (&lt;a href=&#34;http://codepen.io/alanmarcos&#34; target=&#34;_blank&#34;&gt;@alanmarcos&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34; target=&#34;_blank&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;solução&#34;&gt;Solução&lt;/h3&gt;

&lt;p&gt;Costumo criar uma classe para esse tipo de alinhamento:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.row-centered {
   display: flex;
   align-items: center;
}
&lt;/pre&gt;

&lt;p&gt;E com só duas linhas de código, temos um topo alinhado horizontalmente sem muito esforço!&lt;/p&gt;

&lt;p&gt;See the Pen &lt;a href=&#34;http://codepen.io/alanmarcos/pen/epbMgY/&#34; target=&#34;_blank&#34;&gt;epbMgY&lt;/a&gt; by Alan Marcos (&lt;a href=&#34;http://codepen.io/alanmarcos&#34; target=&#34;_blank&#34;&gt;@alanmarcos&lt;/a&gt;) on &lt;a href=&#34;http://codepen.io&#34; target=&#34;_blank&#34;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;compatibilidade&#34;&gt;Compatibilidade&lt;/h3&gt;

&lt;p&gt;A &lt;a href=&#34;http://caniuse.com/flexbox&#34; target=&#34;_blank&#34;&gt;compatibilidade do flexbox&lt;/a&gt; hoje já é bem alta, ou seja, você também pode usar nos seus projetos, lembrando que você pode utilizar o &lt;a href=&#34;https://modernizr.com/&#34; target=&#34;_blank&#34;&gt;Modernizr&lt;/a&gt; para detectar essa &lt;em&gt;feature&lt;/em&gt; e usar um &lt;em&gt;fallback&lt;/em&gt; quando necessário.&lt;/p&gt;

&lt;h3 id=&#34;conclusão&#34;&gt;Conclusão&lt;/h3&gt;

&lt;p&gt;Pode parecer um problema pequeno, mas estas duas linhas acabaram resolvendo muitos problemas nos meus projetos mais recentes. Como o &lt;em&gt;flexbox&lt;/em&gt; ainda não é uma _feature_ &amp;#8220;100% &lt;em&gt;bulletproof&amp;#8221;&lt;/em&gt;, recomendo usar em pequenos ajustes como o deste post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como usar variáveis no CSS de forma nativa</title>
      <link>http://tableless.com.br/como-usar-variaveis-no-css-de-forma-nativa/</link>
      <pubDate>Tue, 17 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/como-usar-variaveis-no-css-de-forma-nativa/</guid>
      <description>

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Olá pessoal, neste artigo irei abordar o básico sobre variáveis nativas com CSS, e como você pode usar essa tecnologia hoje e sem medo de ser feliz.&lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;span-class-s1-a-href-http-www-w3-org-tr-css-variables-target-blank-css-custom-properties-for-cascading-variables-module-level-1-a-span-p4&#34;&gt;&lt;strong&gt;&lt;span class=&#34;s1&#34;&gt;&lt;a href=&#34;http://www.w3.org/TR/css-variables/&#34; target=&#34;_blank&#34;&gt;CSS Custom Properties for Cascading Variables Module Level 1&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt; {.p4}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Esta especificação ainda em fase de &lt;em&gt;Last Call Working Draft&lt;/em&gt;, traz um novo módulo de CSS3 que permite a criação de varáveis de forma nativa, de uma forma simples e rápida como veremos a seguir.&lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;span-class-s1-como-declarar-uma-variável-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Como declarar uma variável?&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Para declarar uma variável utilizamos as chamadas &lt;em&gt;Custom Properties&lt;/em&gt;, uma nova forma de declarar uma propriedade utilizando a seguinte sintaxe:&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.exemplo {
  --destaque: #660066;
}
&lt;/pre&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Por definição uma &lt;em&gt;Custom Property&lt;/em&gt; é qualquer propriedade que inicie com dois hífens, como ‘—foo’. &lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;span-class-s1-como-utilizar-uma-variável-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Como utilizar uma variável?&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Para utilizar uma variável utilizamos a função var(), passando a variável criada como parâmetro,  assim ela irá retornar o valor da variável, veja o exemplo a seguir:&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.exemplo {
  --destaque: #660066;
  background-color: var(--destaque);
}
&lt;/pre&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;O que equivale diretamente a:&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.exemplo {
  background-color: #660066;
}
&lt;/pre&gt;

&lt;h2 id=&#34;span-class-s1-a-notícia-ruim-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;A notícia ruim 🙁&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;As variáveis tem um escopo a ser seguido, logo uma variável não pode ser usada fora de seu escopo.&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Exemplos de utilização correta do escopo:&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.menu {
  --tamanho: 20px;
}
.menu ul li {
  padding: var(--tamanho); // retorna 20px
}
&lt;/pre&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Exemplo de utilização incorreta do escopo:&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.menu {
  --tamanho: 20px;
}
.footer {
  padding: var(--tamanho); // não retorna nada
}
&lt;/pre&gt;

&lt;h2 id=&#34;span-class-s1-a-notícia-boa-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;A notícia boa 🙂&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Podemos declarar variáveis em um tipo de &amp;#8220;escopo global”, que nada mais é do que a raiz do documento,&lt;span class=&#34;Apple-converted-space&#34;&gt;  &lt;/span&gt;para isso utilizamos o seletor :root.&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Exemplo de variáveis declaradas na raiz do documento.&lt;/span&gt;
&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;:root {
  --tamanho: 50%;
  --cor: #660066;
}

.exemplo-1 {
  margin: var(--tamanho); // retorna 50%
}

.exemplo-2 {
  color: var(--cor); // retorna #660066
}
&lt;/pre&gt;

&lt;h2 id=&#34;span-class-s1-até-aqui-legal-mas-e-o-suporte-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Até aqui legal, mas e o suporte?&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Nem tudo são flores amigos, até o momento o suporte é apenas para Firefox. Vejam a tabela completa no &lt;a href=&#34;http://caniuse.com/#feat=css-variables&#34; target=&#34;_blank&#34;&gt;Can i use&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;span-class-s1-como-usar-hoje-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Como usar hoje!&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Não teria graça se eu trouxesse aqui uma coisa tão divertida e ninguém pudesse usar, e com um suporte tão ruim, só nos resta apelar para o&lt;span class=&#34;Apple-converted-space&#34;&gt; &lt;/span&gt;maravilhoso &lt;a href=&#34;https://github.com/MadLittleMods/postcss-css-variables&#34; target=&#34;_blank&#34;&gt;postcss-css-variables&lt;/a&gt;, que é um plugin para &lt;a href=&#34;https://github.com/postcss/postcss&#34; target=&#34;_blank&#34;&gt;Post CSS&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;h3 id=&#34;span-class-s1-mas-o-que-é-mesmo-esse-post-css-span-p3&#34;&gt;&lt;strong&gt;&lt;span class=&#34;s1&#34;&gt;Mas o que é mesmo esse Post CSS?&lt;/span&gt;&lt;/strong&gt; {.p3}&lt;/h3&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Esse cara é um pós-processador de CSS que possuí vários &lt;a href=&#34;https://github.com/postcss/postcss#plugins&#34; target=&#34;_blank&#34;&gt;plugins&lt;/a&gt;, sendo o mais famoso o &lt;a href=&#34;https://github.com/postcss/autoprefixer&#34; target=&#34;_blank&#34;&gt;Autoprefixer&lt;/a&gt;, quer por sua vez pega seu código e aplica os &lt;em&gt;vendors prefixes&lt;/em&gt; conforme a necessidade, e é exatamente isso que o postcss-css-variables faz, ele pega suas variáveis e as poem em seu devido lugar, compilando seu &amp;#8220;CSS do futuro&amp;#8221;, para um CSS nativo e suportado por todos.&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Você pode ver exatamente como o plugin funciona no &lt;a href=&#34;https://madlittlemods.github.io/postcss-css-variables/playground/&#34; target=&#34;_blank&#34;&gt;postcss-css-variables Playground&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;h3 id=&#34;span-class-s1-quais-as-vantagens-de-utilizar-o-postcss-css-variables-span-p3&#34;&gt;&lt;strong&gt;&lt;span class=&#34;s1&#34;&gt;Quais as vantagens de utilizar o postcss-css-variables?&lt;/span&gt;&lt;/strong&gt; {.p3}&lt;/h3&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;1 &amp;#8211; Você vai &lt;strong&gt;escrever o CSS de forma nativa&lt;/strong&gt;, e usar o pós-processador como um tipo de &amp;#8220;polyfill&amp;#8221;, que no futuro,  caso outros navegares além do firefox adotem a especificação, pode ser retirado e seu código já estará pronto, mais ou menos como ocorre com o JavaScript e o &lt;a href=&#34;https://babeljs.io/&#34; target=&#34;_blank&#34;&gt;Babel&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;2 &amp;#8211; Usar uma coisa nova em seu &lt;em&gt;workflow&lt;/em&gt;. Isso faz bem, principalmente quando abre um leque de novas possibilidades como aprender outras várias funções incríveis que o Post CSS trás.&lt;/span&gt;
&lt;/p&gt;

&lt;h2 id=&#34;span-class-s1-conclusão-span-p5&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Conclusão&lt;/span&gt; {.p5}&lt;/h2&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Caso alguém me pergunte se &lt;strong&gt;v&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span class=&#34;s1&#34;&gt;ale a pena mudar o &lt;em&gt;workflow&lt;/em&gt; apenas para escrever variáveis de forma nativa?&lt;/span&gt;&lt;/strong&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Talvez a resposta seja &lt;strong&gt;não&lt;/strong&gt;.&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Agora, se alguém perguntasse se &lt;strong&gt;v&lt;/strong&gt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&lt;strong&gt;ale a pena brincar com uma coisa nova&lt;/strong&gt;, que no fim das contas vai me &lt;strong&gt;ensinar sobre pós-processadores&lt;/strong&gt;, me apresentar uma especificação que pode &lt;strong&gt;virar padrão no futuro&lt;/strong&gt; e me fazer &lt;strong&gt;refletir sobre formas diferentes de fazer a mesma coisa?&lt;/strong&gt;&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&#34;p3&#34;&gt;
  &lt;span class=&#34;s1&#34;&gt;Nesse caso a resposta é um imenso &lt;strong&gt;SIM&lt;/strong&gt;.&lt;/span&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Material Design com Materialize</title>
      <link>http://tableless.com.br/material-design-com-materialize/</link>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/material-design-com-materialize/</guid>
      <description>

&lt;p&gt;Há muito tempo quero falar um pouco sobre desenvolvimento de sites utilizando layouts baseados no Material Design do Google, mas entre &lt;strong&gt;fazer&lt;/strong&gt; e &lt;strong&gt;falar&lt;/strong&gt; há um abismo enorme. Minha verdadeira intenção é compartilhar um pouco a maneira mais fácil de desenvolver um layout utilizando todos aqueles conceitos que a Google tem implementado atualmente.&lt;/p&gt;

&lt;h2 id=&#34;primeiros-passos&#34;&gt;Primeiros Passos&lt;/h2&gt;

&lt;p&gt;O &lt;a href=&#34;http://materializecss.com/&#34; target=&#34;_blank&#34;&gt;Materialize&lt;/a&gt; é um Framework desenvolvido para facilitar e agilizar nosso desenvolvimento quando o assunto é Material Design. Além de ágil, possui uma infinidade de vantagens que permitem que na maioria das vezes dispensam o uso de outros frameworks para complementá-lo.&lt;/p&gt;

&lt;p&gt;Para baixar os arquivos do Materialize clique em &lt;a href=&#34;http://materializecss.com/getting-started.html&#34; target=&#34;_blank&#34;&gt;Getting Started&lt;/a&gt;, lá você verá uma documentação explicando como fazer o download dos arquivos e todas as maneiras que você tem para fazer isso, ou também pode usar a CDN dele como geralmente muitos fazem com o JQUERY. Os arquivos são bem distribudos e não diferem dos demais Frameworks que existem.&lt;/p&gt;

&lt;h3 id=&#34;vamos-para-as-vantagens-dele&#34;&gt;Vamos para as vantagens dele&lt;/h3&gt;

&lt;p&gt;Uma das principais vantagens é o fato de ser muito similar ao Material Design desenvolvido pela google. Outra vantagem que podemos observar são os amplos recursos de JQuery que ele possui como: Slider, Lightbox, Captions, Modais, Transitions, Waves entre muitos outros. Melhor do que falar é mostrar. Esses recursos ficam na categoria &lt;a href=&#34;http://materializecss.com/media.html&#34; target=&#34;_blank&#34;&gt;JAVASCRIPT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O sistema de grid usado é bastante parecido com os frameworks já existentes, como o Bootstrap.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/materialize-css-framework-01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;body&amp;gt;
      &amp;lt;div class=&#34;container&#34;&amp;gt; &amp;lt;!-- Container similar ao utilizado em outros Frameworks --&amp;gt;
            &amp;lt;div class=&#34;row&#34;&amp;gt; &amp;lt;!-- Row também similar ao utilizado em outros Frameworks --&amp;gt;
                 &amp;lt;div class=&#34;col s12 m4 l4&#34;&amp;gt;Eu sou uma coluna&amp;lt;/div&amp;gt; &amp;lt;!-- Coluna com 3 tamanhos--&amp;gt;
            &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;

&lt;h4 id=&#34;entendendo-as-colunas&#34;&gt;Entendendo as colunas&lt;/h4&gt;

&lt;p&gt;É muito simples, assim como o bootstrap que trabalha com 4 tamanhos de coluna, muito pequeno, pequeno, médio e grande, o materialize decidiu trabalhar com 3 tamanhos que são pequeno médio e grande, nada que assuste ou prejudique o andamento do projeto. Para saber mais entre no &lt;a href=&#34;http://materializecss.com/grid.html&#34; target=&#34;_blank&#34;&gt;menu CSS e acesse o submenu Grid&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;alguns-pequenos-diferenciais-que-ele-possui&#34;&gt;Alguns pequenos diferenciais que ele possui&lt;/h3&gt;

&lt;p&gt;Alguns diferenciais que ele possui são os botões, o modal, os cards, as collections e o mais importante talves de todos o menu lateral, vou mostrar alguns desses abaixo.&lt;/p&gt;

&lt;h4 id=&#34;cards&#34;&gt;Cards&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/Sem-Título-1.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;sidenav&#34;&gt;Sidenav&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/menu.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;vendo-essa-belezinha-funcionar&#34;&gt;Vendo essa belezinha funcionar ^^&lt;/h3&gt;

&lt;p&gt;Eu poderia colocar um milhão de exemplos feitos aqui, mas não tenho os direitos autorais deles então caso queira ver o showcase do site acesse o link &lt;a href=&#34;http://materializecss.com/showcase.html&#34; target=&#34;_blank&#34;&gt;Showcase&lt;/a&gt; e veja. Mas para não deixar vocês sem nenhum exemplo deixo aqui um site feito por mim através do materialize, espero que gostem o link está na imagem e abaixo dela.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.loguei.com/&#34; target=&#34;_blank&#34;&gt;&lt;br /&gt; &lt;img src=&#34;http://tableless.com.br/wp-content/uploads/2015/09/263dfd28861105.55d5d38e09a6f.jpg&#34; alt=&#34;&#34; /&gt;&lt;br /&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.loguei.com/&#34; target=&#34;_blank&#34;&gt;blog.loguei.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bem, aqui terminamos esse maravilhoso assunto sobre um Framework bem simples e maneiro de usar. Espero ter ajudado um pouco a todos. Obrigado ^^.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Entendendo os valores ‘initial’ e ‘inherit’ do CSS</title>
      <link>http://tableless.com.br/entendendo-os-valores-initial-e-inherit-do-css/</link>
      <pubDate>Tue, 21 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/entendendo-os-valores-initial-e-inherit-do-css/</guid>
      <description>

&lt;p&gt;Algum tempo atrás, se alguém me perguntasse qual a diferença entre os valores &lt;code&gt;initial&lt;/code&gt; e &lt;code&gt;inherit&lt;/code&gt; do CSS eu responderia:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;#8211; Existe alguma diferença?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Trabalho com CSS por mais de 5 anos e de algum jeito faltou entender o significado do que exatamente &lt;code&gt;initial&lt;/code&gt; é e faz. Pode chamar isso de ignorância, preguiça, burrice ou sorte, mas nunca pensei em olhar ao redor e tentar entender fixamente o comportamento que &lt;code&gt;inherit&lt;/code&gt; poderia fazer. Foi quando descobri, inclusive, que &lt;code&gt;inherit&lt;/code&gt; poderia ser substituído pelo &lt;code&gt;initial&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Neste artigo, pretendo compartilhar o que aprendi repassando o aprendizado a quem interessar e tiver necessidade.&lt;/p&gt;

&lt;h3 id=&#34;o-que-initial-significa&#34;&gt;O que &lt;code&gt;initial&lt;/code&gt; significa?&lt;/h3&gt;

&lt;p&gt;A especificação oficial nos ajuda a entender a diferença entre as &lt;em&gt;keywords&lt;/em&gt; &lt;code&gt;initial&lt;/code&gt; e &lt;code&gt;inherit&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dev.w3.org/csswg/css-cascade/#initial&#34; target=&#34;_blank&#34;&gt;Initial &lt;em&gt;keyword&lt;/em&gt;&lt;/a&gt;: Se o valor no CSS da propriedade é &amp;#8216;&lt;code&gt;initial&lt;/code&gt;&amp;#8216;, o valor inicial da propriedade se torna o oficial.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dev.w3.org/csswg/css-cascade/#initial-value&#34; target=&#34;_blank&#34;&gt;Initial &lt;em&gt;value&lt;/em&gt;&lt;/a&gt;: Cada propriedade tem um valor inicial, estipulado na tabela de definição da propriedade do navegador. Se o valor da propriedade do objeto não tem um valor herdado e a cascata não resulta em um valor oficial, o valor especificado da propriedade é o &lt;code&gt;initial&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Isto significa que, se o valor &lt;code&gt;initial &lt;/code&gt;for definido aqui:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.modulo {
    color: initial;
}
&lt;/pre&gt;

&lt;p&gt;O valor provavelmente retornará &lt;strong&gt;preto&lt;/strong&gt;, caso a cor padrão do navegador seja preta para tal propriedade.&lt;/p&gt;

&lt;h3 id=&#34;quão-diferente-initial-é-de-inherit&#34;&gt;Quão diferente &lt;code&gt;initial&lt;/code&gt; é de &lt;code&gt;inherit&lt;/code&gt;?&lt;/h3&gt;

&lt;p&gt;Se você deduz que isto é &lt;a href=&#34;http://www.w3.org/TR/CSS2/cascade.html#value-def-inherit&#34; target=&#34;_blank&#34;&gt;questão de herança&lt;/a&gt;, você está certo.&lt;/p&gt;

&lt;p&gt;Mas &lt;code&gt;initial&lt;/code&gt; e &lt;code&gt;inherit&lt;/code&gt; são diferentes quando entendemos que o &lt;code&gt;inherit&lt;/code&gt; checa se existem outras propriedades no pai que poderão ser utilizadas ou afetadas, antes que seja atribuído o valor inicial. Antes que o navegador decida renderizar o valor herdado, ele deve varrer a cascata de valores acima da propriedade definida e avaliar o possível valor inicial do elemento. Vai depender do que é atribuído no pai mais próximo do elemento:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/07/example1-initial-inherit-joao-guilherme.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-50137 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/example1-initial-inherit-joao-guilherme.png&#34; alt=&#34;&#34; width=&#34;727&#34; height=&#34;285&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;H1&lt;/code&gt; está herdando o valor da cor do elemento mais próximo, encontrando a propriedade incluída no elemento &lt;code&gt;body&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/07/example2-initial-inherit-joao-guilherme.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-50138 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/example2-initial-inherit-joao-guilherme.png&#34; alt=&#34;&#34; width=&#34;727&#34; height=&#34;285&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Desta vez, utilizando o valor inicial, &lt;code&gt;H1&lt;/code&gt; ignora o valor que poderia ser herdado do elemento &lt;code&gt;body&lt;/code&gt;, e mantém o valor atribuído pelo navegador, isto é, a raiz responsável por renderizar o HTML.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://codepen.io/guicheffeR/pen/jPxKqQ&#34;&gt;Exemplo de inherit e initial no CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No exemplo acima, as propriedades na caixa da esquerda são todas definidas e herdadas da classe &lt;code&gt;.modulo&lt;/code&gt;, já que a caixa é filha do _modulo_ anteriormente estilizado. Na caixa da direita, as propriedades são atribuídas de acordo com o padrão do navegador, que, por sua vez, é _&amp;#8220;zerado&amp;#8221;_ através do atributo inserido.&lt;/p&gt;

&lt;h3 id=&#34;quando-usar-initial&#34;&gt;Quando usar  &lt;code&gt;initial&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Podemos pensar em &lt;code&gt;initial&lt;/code&gt; como um jeito de _&amp;#8220;zerar&amp;#8221;_ o conteúdo. Para não confundir abstrações e heranças, usar &lt;code&gt;initial&lt;/code&gt; é uma maneira de limpar os atributos e propriedades do elemento, deixando mais claro a volta do elemento ao seu estilo natural do estado de início.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Initial&lt;/code&gt; não é uma bala de prata para &lt;em&gt;resets&lt;/em&gt;. Valores iniciais ainda são sujeitos aos padrões dos navegadores, e que sabemos, podem &lt;a href=&#34;http://tableless.com.br/querido-usuario-atualize-seu-browser/&#34;&gt;variar de navegador para navegador.&lt;/a&gt; Se você usa &lt;em&gt;CSS resets&lt;/em&gt;, serão utilizados os valores iniciais.&lt;/p&gt;

&lt;p&gt;Por exemplo, para destruir completamente todos os estilos herdados de um elemento, você pode usar &lt;code&gt;initial;&lt;/code&gt; para ter certeza que o elemento copia uma determinada propriedade do seu elemento pai mais próximo, use &lt;code&gt;inherit&lt;/code&gt; .&lt;/p&gt;

&lt;h2 id=&#34;exemplo-prático&#34;&gt;Exemplo prático&lt;/h2&gt;

&lt;p&gt;Recentemente, tive um problema em um projeto ao usar o elemento &lt;code&gt;video&lt;/code&gt; 100% em relação ao tamanho do navegador. Ele deveria encaixar tanto na largura como na altura da _div_ de uma &lt;em&gt;single page&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Na primeira versão abaixo, a propriedade &lt;strong&gt;&lt;em&gt;object-fit&lt;/em&gt;&lt;/strong&gt; foi definida com o valor &lt;strong&gt;&lt;em&gt;contain&lt;/em&gt;&lt;/strong&gt;, que era o valor padrão e específico para este elemento no Chrome.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/BJLyIvi.jpg&#34; alt=&#34;Exemplo do uso do elemento video no Chrome com a propriedade initial&#34; width=&#34;1234&#34; height=&#34;585&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Já neste segundo exemplo, deixamos o valor definido como &lt;code&gt;initial&lt;/code&gt;: ele preencheu o espaço que faltava para o vídeo ocupar 100% em relação à página, utilizando o valor inicial do navegador:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/e8owgRc1.png&#34; alt=&#34;Exemplo do uso do elemento video no Chrome sem a propriedade initial&#34; width=&#34;1200&#34; height=&#34;583&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;o-suporte-dos-browsers&#34;&gt;O suporte dos browsers&lt;/h3&gt;

&lt;p&gt;Segundo os dados do &lt;a href=&#34;https://developer.mozilla.org/pt-BR/#&#34; target=&#34;_blank&#34;&gt;MDN&lt;/a&gt;, segue uma tabela simplificada de suporte às propriedades &lt;code&gt;initial&lt;/code&gt; e &lt;code&gt;inherit&lt;/code&gt;. Observe a ausência do IE para suporte ao &lt;code&gt;initial:&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/initial/&#34; target=&#34;_blank&#34;&gt;initial&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;table class=&#34;tb-table browser-support-table&#34; style=&#34;height: 62px;&#34; width=&#34;739&#34;&gt;
  &lt;tr&gt;
    &lt;th class=&#34;chrome&#34;&gt;
      Chrome
    &lt;/th&gt;
    
    &lt;th class=&#34;safari&#34;&gt;
      Safari
    &lt;/th&gt;
    
    &lt;th class=&#34;firefox&#34;&gt;
      Firefox
    &lt;/th&gt;
    
    &lt;th class=&#34;opera&#34;&gt;
      Opera
    &lt;/th&gt;
    
    &lt;th class=&#34;ie&#34;&gt;
      IE
    &lt;/th&gt;
    
    &lt;th class=&#34;android&#34;&gt;
      Android
    &lt;/th&gt;
    
    &lt;th class=&#34;iOS&#34;&gt;
      iOS
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;yep&#34;&gt;
      Sim
    &lt;/td&gt;
    
    &lt;td class=&#34;yep&#34;&gt;
      Sim
    &lt;/td&gt;
    
    &lt;td class=&#34;yep&#34;&gt;
      19 up
    &lt;/td&gt;
    
    &lt;td class=&#34;yep&#34;&gt;
      15 up
    &lt;/td&gt;
    
    &lt;td class=&#34;nope&#34;&gt;
      &lt;span style=&#34;color: #ff0000;&#34;&gt;Não&lt;/span&gt;
    &lt;/td&gt;
    
    &lt;td class=&#34;yep&#34;&gt;
      Sim
    &lt;/td&gt;
    
    &lt;td class=&#34;yep&#34;&gt;
      Sim
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/inherit&#34; target=&#34;_blank&#34;&gt;inherit&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;table class=&#34;tb-table browser-support-table&#34; style=&#34;height: 62px;&#34; width=&#34;739&#34;&gt;
  &lt;tr&gt;
    &lt;th class=&#34;chrome&#34;&gt;
      Chrome
    &lt;/th&gt;
    
    &lt;th class=&#34;safari&#34;&gt;
      Safari
    &lt;/th&gt;
    
    &lt;th class=&#34;firefox&#34;&gt;
      Firefox
    &lt;/th&gt;
    
    &lt;th class=&#34;opera&#34;&gt;
      Opera
    &lt;/th&gt;
    
    &lt;th class=&#34;ie&#34;&gt;
      IE
    &lt;/th&gt;
    
    &lt;th class=&#34;android&#34;&gt;
      Android
    &lt;/th&gt;
    
    &lt;th class=&#34;iOS&#34;&gt;
      iOS
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td class=&#34;yep&#34;&gt;
      Claro
    &lt;/td&gt;
    
    &lt;td class=&#34;yep&#34;&gt;
      Sim
    &lt;/td&gt;
    
    &lt;td class=&#34;yep&#34;&gt;
      Sim
    &lt;/td&gt;
    
    &lt;td class=&#34;yep&#34;&gt;
      4 up
    &lt;/td&gt;
    
    &lt;td class=&#34;nope&#34;&gt;
      8 up
    &lt;/td&gt;
    
    &lt;td class=&#34;yep&#34;&gt;
      Sim
    &lt;/td&gt;
    
    &lt;td class=&#34;yep&#34;&gt;
      Sim
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p style=&#34;font-size: 12px;&#34;&gt;
  Texto traduzido e adaptado da fonte: &lt;a href=&#34;https://css-tricks.com/getting-acquainted-with-initial/&#34;&gt;Getting acquainted with initial&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>nth-child() e calc() – Uma proposta para o abandono de frameworks de grids responsivos</title>
      <link>http://tableless.com.br/nth-child-calc-responsivos/</link>
      <pubDate>Mon, 06 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/nth-child-calc-responsivos/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;Apesar da adoção do _Tableless _para construção de layouts o conceito de tabela ainda persiste através de inúmeros &lt;em&gt;frameworks&lt;/em&gt; de &lt;em&gt;grids&lt;/em&gt; responsivos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Além da semântica, o conceito &lt;em&gt;Tableless&lt;/em&gt; prega, sempre que possível, levar a responsabilidade do layout para o CSS. O problema dos &lt;em&gt;frameworks&lt;/em&gt; CSS focados em &lt;em&gt;grids&lt;/em&gt; é que a especificação do layout continua dentro do HTML, descrita através de classes CSS, ancoradas diretamente aos elementos HTML, e de forma intrusiva, ou seja, os elementos &lt;em&gt;&lt;table&gt;&lt;/em&gt; antigamente utilizados foram substituídos por elementos &lt;em&gt;&lt;div class=&amp;#8221;col-&amp;#8220;&gt;&lt;/em&gt; para a criação do layout.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-49871 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/gridLayout.png&#34; alt=&#34;Exemplo de Grid Layout&#34; width=&#34;521&#34; height=&#34;354&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Enquanto a especificação &amp;#8220;&lt;a href=&#34;http://www.w3.org/TR/css3-grid-layout/&#34; target=&#34;_blank&#34;&gt;CSS Grid Layout Module&lt;/a&gt;&amp;#8221; ainda está no forno, proponho uma alternativa simples aos &lt;em&gt;frameworks&lt;/em&gt; de &lt;em&gt;grids&lt;/em&gt; responsivos, através da dupla dinâmica &lt;em&gt;&lt;strong&gt;nth-child()&lt;/strong&gt;&lt;/em&gt; e &lt;em&gt;&lt;strong&gt;calc()&lt;/strong&gt;&lt;/em&gt; presentes no CSS3, e que são suportadas pelos navegadores modernos, inclusive o IE9 (veja mais opções de compatibilidade &lt;a href=&#34;http://caniuse.com/#search=CALC&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt; e &lt;a href=&#34;http://caniuse.com/#search=nth-child&#34; target=&#34;_blank&#34;&gt;aqui&lt;/a&gt;). Para um rápido entendimento destes recursos também confira estes artigos: &lt;a href=&#34;http://tableless.com.br/nth-child/&#34;&gt;http://tableless.com.br/nth-child/&lt;/a&gt; e &lt;a href=&#34;http://www.maujor.com/tutorial/css3-funcao-css-calc.php&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.maujor.com/tutorial/css3-funcao-css-calc.php&#34;&gt;http://www.maujor.com/tutorial/css3-funcao-css-calc.php&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;exemplo-de-formulário&#34;&gt;Exemplo de formulário&lt;/h2&gt;

&lt;p&gt;Antes de partimos para o CSS, sempre que possível, precisamos usar elementos HTML5 semânticos, atributos WAI-ARIA, entre outros padrões de acessibilidade. Para este exemplo, o uso dos elementos de entradas de dados seguirão as técnicas preconizadas pelo eMAG 3.1 (ver &lt;a href=&#34;http://emag.governoeletronico.gov.br/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://emag.governoeletronico.gov.br/&#34;&gt;http://emag.governoeletronico.gov.br/&lt;/a&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Para cada elemento de entrada de dados presente na estrutura &lt;em&gt;form -&amp;gt; fieldset&lt;/em&gt; o seguinte padrão será seguido:&lt;/p&gt;

&lt;pre&gt;&lt;span style=&#34;line-height: 1.5;&#34;&gt;&amp;lt;label&amp;gt;
    &amp;lt;span&amp;gt;XXX:&amp;lt;/span&amp;gt;
    &amp;lt;input type=&#34;text&#34; value=&#34;&#34;&amp;gt;
&amp;lt;/label&amp;gt;
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;Agora podemos aplicar o seguinte CSS para todos os elementos &lt;em&gt;&lt;label&gt;&lt;/em&gt; presentes neste padrão.&lt;/p&gt;

&lt;pre&gt;form fieldset &amp;gt; label {
    display: block;
    float: left;
    width: calc(100% - 10px);
    height: 55px;
    margin-top: 10px;
    margin-right: 10px;
}
form fieldset label &amp;gt; input {
    float: left;
}
label &amp;gt; input {
    display: block;
    width: 100%;
}
&lt;/pre&gt;

&lt;p&gt;Por termos utilizado o &lt;em&gt;margin-right&lt;/em&gt; com 10px, este valor foi contabilizado na largura do &lt;em&gt;label&lt;/em&gt; (uso da função &lt;em&gt;calc&lt;/em&gt;) com a finalidade de que sua margem não ultrapasse os limites do contêiner. Isto foi feito para que possamos alterar o layout de uma coluna para múltiplas colunas diretamente pelo CSS. Com este estilo, cada campo de entrada de dados aparecerá disposto como uma lista, e se adaptará a largura do contêiner.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/07/RogerioDias-Artigo2-figura1.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-49865 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/RogerioDias-Artigo2-figura1.png&#34; alt=&#34;Exemplo de Código para Criação de Formulário&#34; width=&#34;658&#34; height=&#34;532&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O próximo passo é poder criar mais de uma &amp;#8220;coluna&amp;#8221;, para que o campo Código e Nome fiquem na mesma &amp;#8220;linha&amp;#8221; quando o tamanho da tela for grande. O campo Código terá uma largura fixa de 80px e o campo Nome preencherá o restante do espaço do contêiner descontando a largura do campo Código juntamente com a margem de 10px dos dois &lt;em&gt;labels&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2015/07/RogerioDias-Artigo2-Figura3.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-49869 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/07/RogerioDias-Artigo2-Figura3.png&#34; alt=&#34;Exemplo de Código para Criação de Formulário Responsivo&#34; width=&#34;789&#34; height=&#34;537&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Com estes recursos podemos alterar o layout da página HTML diretamente pelo CSS sem que a estrutura do layout fique no próprio HTML. Além de criar colunas que se adaptam a largura do contêiner, é possível criar colunas com tamanhos fixos, evitando também o uso de classes CSS, que só é encorajado quando for realmente necessário.&lt;/p&gt;

&lt;p&gt;O código fonte completo e a &lt;em&gt;Demo&lt;/em&gt; deste exemplo encontra-se em &lt;a href=&#34;http://codepen.io/rogeriodegoiania/pen/GJQmzb&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://codepen.io/rogeriodegoiania/pen/GJQmzb&#34;&gt;http://codepen.io/rogeriodegoiania/pen/GJQmzb&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Motion UI com estilos: Zeh Fernandes no Meetup CSS SP</title>
      <link>http://tableless.com.br/motion-ui-com-estilos-zeh-fernandes-no-meetup-css-sp/</link>
      <pubDate>Tue, 23 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/motion-ui-com-estilos-zeh-fernandes-no-meetup-css-sp/</guid>
      <description>

&lt;p&gt;Reunir a galera em eventos talvez seja a melhor maneira de manter-se atualizado e trocar conhecimento: você conhece pessoas que fazem a mesma coisa que a gente, soluciona dúvidas, pode discutir novas abordagens em torno de um tema e ainda reforça o &lt;em&gt;network&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Neste artigo no Tableless, quero compartilhar a experiência de participar de um &lt;strong&gt;Meetup&lt;/strong&gt; e comentar sobre a palestra do &lt;strong&gt;Zeh Fernandes&lt;/strong&gt; sobre &lt;strong&gt;Motion UI&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;meetup-css-sp&#34;&gt;Meetup CSS SP&lt;/h2&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-49710&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/06/logos-meetup-css-sp.jpg&#34; alt=&#34;Logos Meetup e Meetup CSS SP&#34; width=&#34;474&#34; height=&#34;200&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Excelente ferramenta para manter-se informado sobre os eventos que acontecem perto da sua cidade e com temas relacionados ao seu interesse, o &lt;strong&gt;&lt;a href=&#34;http://www.meetup.com/pt/&#34; target=&#34;_blank&#34;&gt;Meetup&lt;/a&gt;&lt;/strong&gt; mescla site e aplicativo, permitindo a qualquer pessoa organizar e divulgar eventos e encontros em torno de qualquer tema. Eu já conhecia o site, mas só recentemente passei a acessá-lo com frequência. Foi quando descobri o &lt;strong&gt;&lt;a href=&#34;http://www.meetup.com/pt/CSS-SP/&#34; target=&#34;_blank&#34;&gt;Meetup CSS SP&lt;/a&gt;&lt;/strong&gt;, comunidade organizada por &lt;strong&gt;&lt;a href=&#34;http://twitter.com/raphaelfabeni&#34; target=&#34;_blank&#34;&gt;Raphael Fabeni&lt;/a&gt;&lt;/strong&gt; e &lt;strong&gt;&lt;a href=&#34;http://twitter.com/lfeh&#34; target=&#34;_blank&#34;&gt;Felipe Fialho&lt;/a&gt;&lt;/strong&gt; que promove encontros para discutir assuntos do mundo front-end, com foco principalmente na linguagem de marcação CSS.&lt;/p&gt;

&lt;h2 id=&#34;zeh-fernandes&#34;&gt;Zeh Fernandes&lt;/h2&gt;

&lt;p&gt;Na 8ª edição do &lt;strong&gt;Meetup CSS SP&lt;/strong&gt;, realizada no começo de junho de 2015, o tema foi a palestra do &lt;strong&gt;&lt;a href=&#34;https://twitter.com/zehf&#34; target=&#34;_blank&#34;&gt;Zeh Fernandes&lt;/a&gt;&lt;/strong&gt; sobre &lt;strong&gt;&lt;em&gt;Motion UI&lt;/em&gt; com estilos&lt;/strong&gt;. O Zeh pode ser definido, segundo ele mesmo, como um designer zen. Seus trabalhos podem ser vistos na &lt;a href=&#34;https://www.behance.net/gallery/Project-Cliche/12708243&#34; target=&#34;_blank&#34;&gt;revista Cliche&lt;/a&gt;, na rede colaborativa de troca de tempo &lt;a href=&#34;http://www.bliive.com/&#34; target=&#34;_blank&#34;&gt;Blive&lt;/a&gt; e nas criações da produtora digital &lt;strong&gt;&lt;a href=&#34;http://d3.do/&#34; target=&#34;_blank&#34;&gt;D3.do&lt;/a&gt;, &lt;/strong&gt;que cedeu o local para que o encontro acontecesse. O Zeh já havia apresentado a mesma &lt;em&gt;talk&lt;/em&gt; na &lt;strong&gt;&lt;a href=&#34;http://www.conferenciacssbrasil.com.br/&#34; target=&#34;_blank&#34;&gt;Conferência CSS Brasil&lt;/a&gt;&lt;/strong&gt; realizada em São Paulo, mas a experiência em um &lt;em&gt;Meetup&lt;/em&gt; é mais interessante, pois só quem se interessa especificamente pelo assunto participa do encontro, e ainda rolam conversas e debates após a apresentação (o que é muito produtivo para trocar experiências).&lt;/p&gt;

&lt;h2 id=&#34;motion-ui-com-estilos&#34;&gt;&lt;em&gt;Motion UI&lt;/em&gt; com estilos&lt;/h2&gt;

&lt;p&gt;No fim deste artigo, você pode conferir os slides da apresentação feita pelo Zeh, além do vídeo com a gravação realizada pelo &lt;a href=&#34;http://twitter.com/matmarsiglio&#34; target=&#34;_blank&#34;&gt;Matheus Marsiglio&lt;/a&gt; e algumas fotos do encontro. O propósito deste texto não é transcrever a palestra, mas apenas reforçar os pontos principais apresentados.&lt;/p&gt;

&lt;h3 id=&#34;a-morte-do-flash-e-o-nascimento-do-flat-design&#34;&gt;A morte do Flash e o nascimento do &lt;em&gt;Flat Design&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Desde que os sites feitos em Flash desapareceram, a web carecia de animação. Seu fim parecia estático, salvo pelos efeitos &lt;em&gt;mouseovers&lt;/em&gt; que provocavam certo tipo de resposta para a interação, ou pelos &lt;em&gt;gifs&lt;/em&gt; animados e vídeos, estes últimos, com sua utilização limitada.&lt;/p&gt;

&lt;p&gt;O surgimento do &lt;em&gt;flat design,&lt;/em&gt; em contrapartida com a era do &lt;a href=&#34;https://pt.wikipedia.org/wiki/Esqueumorfismo&#34; target=&#34;_blank&#34;&gt;esqueumorfismo&lt;/a&gt;, reforçava ainda mais a simplicidade da web. Eis que surge o HTML5 e o CSS3, trazendo novos recursos, dentre eles, as animações feitas principalmente com os elementos &lt;em&gt;transform&lt;/em&gt;, &lt;em&gt;transition&lt;/em&gt; e _animation_ (confira este &lt;a href=&#34;http://tableless.com.br/transition-e-animation/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt; do Rapahel Fabeni sobre &lt;em&gt;transition&lt;/em&gt; e &lt;em&gt;animation&lt;/em&gt; para saber mais).&lt;/p&gt;

&lt;p&gt;Surgiram botões animados, sites com efeitos _&lt;a href=&#34;http://tableless.com.br/parallax-simples-com-jquery-e-css/&#34; target=&#34;_blank&#34;&gt;parallax&lt;/a&gt;_, caixas animadas, animações de SVG, e tudo tomou vida novamente. Porém, assim como aconteceu com o Flash, alguns sites perderam o bom senso, usando os novos recursos apenas por usar, ou seja, apenas para dar aquela &amp;#8220;animada&amp;#8221; na página, muitas vezes, apenas cumprindo a demanda do cliente.&lt;/p&gt;

&lt;h3 id=&#34;animações-com-significado&#34;&gt;Animações com significado&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A animação é uma camada que ajuda a interface a comunicar-se com o usuário.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ela ajuda o cérebro a compreender como a informação deve ser entendida. Deve ser utilizada com cautela, com propósito e com significado. Alguns itens interessantes levantados pelo Zeh para o uso consciente de animações podem ser listados a seguir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Antecipar a ocorrência de determinado comportamento&lt;/li&gt;
&lt;li&gt;Chamar a atenção para conteúdo específico&lt;/li&gt;
&lt;li&gt;Oferecer contexto sobre o que está acontecendo&lt;/li&gt;
&lt;li&gt;Oferecer &lt;em&gt;feedback&lt;/em&gt; sobre algo&lt;/li&gt;
&lt;li&gt;Reforçar a identidade da marca (&lt;em&gt;branding&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;código-e-propriedades&#34;&gt;Código e propriedades&lt;/h3&gt;

&lt;p&gt;Como dito anteriormente, os principais elementos utilizados pelo CSS3 para criar animações são as propriedades &lt;em&gt;transform&lt;/em&gt;, &lt;em&gt;transition&lt;/em&gt; e &lt;em&gt;animation&lt;/em&gt; do CSS, com uso adicional dos &lt;em&gt;keyframes&lt;/em&gt;. Javascript ou jQuery podem ser utilizados ocasionalmente, mas não são obrigatórios.&lt;/p&gt;

&lt;p&gt;Para saber mais sobre o que faz cada uma destas propriedades, o Raphael Fabeni criou uma &lt;a href=&#34;http://www.raphaelfabeni.com.br/lab-css3/&#34; target=&#34;_blank&#34;&gt;lista&lt;/a&gt; resumindo as possibilidade de animações do CSS3:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.raphaelfabeni.com.br/lab-css3/&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;alignnone wp-image-49698 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/06/lab-css3-raphael-fabeni.png&#34; alt=&#34;Lab CSS3 Raphael Fabeni&#34; width=&#34;1085&#34; height=&#34;710&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Já as principais propriedades de um elemento a serem modificadas por uma animação são &lt;em&gt;Position&lt;/em&gt;, &lt;em&gt;Transform&lt;/em&gt;, &lt;em&gt;Opacity&lt;/em&gt; e &lt;em&gt;Color&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter wp-image-49699 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/06/propriedades-alteradas-por-animacoes.png&#34; alt=&#34;Propriedades alteradas por animações&#34; width=&#34;610&#34; height=&#34;162&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Uma dica valiosa dada por &lt;a href=&#34;https://twitter.com/aprilzero&#34; target=&#34;_blank&#34;&gt;A&lt;/a&gt;&lt;a href=&#34;https://twitter.com/aprilzero&#34; target=&#34;_blank&#34;&gt;nand&lt;/a&gt; &lt;a href=&#34;https://twitter.com/aprilzero&#34; target=&#34;_blank&#34;&gt;Sharma&lt;/a&gt; é:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se você precisa utilizar mais elementos do que apenas opacidade e transformação, repense sua animação.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;performance&#34;&gt;Performance&lt;/h3&gt;

&lt;p&gt;Outro fator importante a ser considerado ao utilizar animações é performance, e por isto a última dica é tão importante. Alterar propriedades como posição, cores e determinados efeitos dos elementos de uma página requer alto processamento e uso de memória animando as camadas _Layout,_ _Paint_ ou &lt;em&gt;Paint Setup&lt;/em&gt;. Para isso, recomenda-se priorizar a utilização da camada &lt;em&gt;Composite Layers&lt;/em&gt;. Ela é uma abstração das demais camadas do DOM, utilizada principalmente pelas propriedades &lt;em&gt;transform&lt;/em&gt; e _opacity, _e não interfere nas demais, usando poucos processamento ao modificar os elementos da página.&lt;/p&gt;

&lt;p&gt;As camadas e suas respectivas propriedades:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone wp-image-49700 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/06/camadas-e-propriedades-animcao.png&#34; alt=&#34;Camadas e suas respectivas propriedades&#34; width=&#34;804&#34; height=&#34;505&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Este comparativo retirado da apresentação &lt;strong&gt;&lt;a href=&#34;http://pt.slideshare.net/hugobessaa/performance-em-animacoes&#34; target=&#34;_blank&#34;&gt;Performance em Animações&lt;/a&gt;&lt;/strong&gt; do &lt;strong&gt;Hugo Bessa&lt;/strong&gt; mostra o processamento exigido por cada cada camada alterada nas animações:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pt.slideshare.net/hugobessaa/performance-em-animacoes&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;alignnone wp-image-49701 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/06/composite-layers-hugo-bessa.png&#34; alt=&#34;Comparativo de performance nas camadas de animação por Hugo Bessa&#34; width=&#34;1007&#34; height=&#34;703&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;easing-e-timing&#34;&gt;&lt;em&gt;Easing&lt;/em&gt; e &lt;em&gt;Timing&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Duas variáveis importantes em qualquer animação são os efeitos da gravidade e suavidade (&lt;em&gt;easing&lt;/em&gt;) e o tempo de duração das animações (&lt;em&gt;timing&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;&lt;em&gt;easing&lt;/em&gt;&lt;/strong&gt; pode ser entendido como a aceleração ou desaceleração inicial ou final, comumente observada pela física nos movimentos tradicionais do nosso dia-a-dia. Por exemplo, os automóveis, ao saírem do lugar, começam a movimentar-se lentamente, e adquirem velocidade progressiva até que esta torne-se constante, para depois reduzirem o movimento de forma mais lenta ao frear. As bolas de futebol, por exemplo, não quicam no chão com a mesma velocidade que voltam para a mão de quem as lançou, sendo possível observar leve achatamento causado pela física ao chocarem-se com o chão. A aplicação deste conceito faz grande diferença na suavização dos movimentos das animações, tornando-as mais próximas do real, e comunicando melhor ao usuário o que a interface quer dizer.&lt;/p&gt;

&lt;p&gt;O site &lt;a href=&#34;http://easings.net/pt-br&#34; target=&#34;_blank&#34;&gt;easings.net&lt;/a&gt; oferece referências sobre os diversos tipos de efeitos de suavização:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://easings.net/pt-br&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;alignnone wp-image-49697 size-full&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/06/easing.png&#34; alt=&#34;Exemplos de easings&#34; width=&#34;878&#34; height=&#34;622&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Já o &lt;strong&gt;&lt;em&gt;timing&lt;/em&gt;&lt;/strong&gt; está relacionado ao tempo de duração das animações. Animações muito longas não provocam a sensação de realidade, por isso, prefira efeitos com pouco milissegundos, algo entre 0,2 e 0,6 segundos.&lt;/p&gt;

&lt;h3 id=&#34;ferramentas-para-trabalhar-com-animações&#34;&gt;Ferramentas para trabalhar com animações&lt;/h3&gt;

&lt;p&gt;O &lt;strong&gt;Chrome&lt;/strong&gt; e o &lt;strong&gt;Firefox&lt;/strong&gt; já possuem ferramentas que permitem controlar as animações, depurar e mensurar a performance através do processamento gasto ao movimentar os elementos da página. Em breve, o &lt;strong&gt;&lt;a href=&#34;https://developer.chrome.com/devtools&#34; target=&#34;_blank&#34;&gt;Chrome DevTools&lt;/a&gt;&lt;/strong&gt; promete disponibilizar uma ferramenta capaz de controlar a linha do tempo (&lt;em&gt;timeline&lt;/em&gt;) igual a existente no Flash.&lt;/p&gt;

&lt;p&gt;Aqui tem os slides da palestra do Zeh Fernandes:&lt;/p&gt;

&lt;p&gt;E aqui a gravação no Meetup:&lt;/p&gt;

&lt;h2 id=&#34;o-que-rolou-após-a-palestra&#34;&gt;O que rolou após a palestra&lt;/h2&gt;

&lt;p&gt;O encontro contou com aproximadamente 25 profissionais entre designers, desenvolvedores front-end, back-end e UXs. Após a palestra, a discussão entre os participantes girou em torno das seguintes questões: &lt;strong&gt;as animações, devem ser pensadas antes, durante ou depois do processo de desenvolvimento? Quem deve ser o responsável por pensar seus significados e propósitos?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Vários pontos de vista foram levantados, e o que tornou o debate mais interessante foi a diversidade de profissionais presentes. As conclusões, resumidamente, podem ser enumeradas a seguir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pensar as animações é atividade do UX, mas nem sempre este profissional está presente na equipe (principalmente em empresas pequenas). Desta forma, a responsabilidade é igualmente do designer web e do front-end, que devem trabalhar juntos com o objetivo de encontrar a melhor solução: a que comunica melhor o significado e propósito da animação, e a que oferece melhor performance (esta última, uma responsabilidade maior do front-end).&lt;/li&gt;
&lt;li&gt;Pensar as animações antes de desenvolver o código é mais produtivo, pois elas terão propósito semântico e comunicacional, informando o usuário sobre o que esperar da interface e como interagir com a mesma. Isto não exclui que, após a definição dos &lt;em&gt;sketchs&lt;/em&gt; ou layouts, quaisquer dos profissionais envolvidos sugiram melhorias. Como dito anteriormente, a responsabilidade é de todos.&lt;/li&gt;
&lt;li&gt;Use animações com moderação. A atitude de criar a interface e somente depois de pronta receber resolver &amp;#8220;dar uma animada&amp;#8221; pode ser o maior dos erros. Interface não é circo, e a intenção é comunicar com propósito e significância. Planeje, pesquise, busque referências no mundo &lt;em&gt;online&lt;/em&gt; e &lt;em&gt;offline&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-49709&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2015/06/fotos-meetup-css-sp-8.jpg&#34; alt=&#34;Fotos Meetup CSS SP 8&#34; width=&#34;695&#34; height=&#34;520&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Em suma, os &lt;em&gt;Meetups&lt;/em&gt; são excelentes oportunidades para conhecer profissionais que lidam com assuntos do seu interesse, aprender novas abordagens, solucionar problemas ou aumentar a rede de contatos.&lt;/p&gt;

&lt;p&gt;Para quem achou interessante a proposta, &lt;a href=&#34;http://www.meetup.com/CSS-SP/&#34; target=&#34;_blank&#34;&gt;cadastre-se aqui&lt;/a&gt; e fique ligado nos próximos encontros. Sugira temas, problemas do seu dia-a-dia e fomente discussões. Ofereça lugares na sua empresa para que as reuniões aconteçam. Crie &lt;em&gt;Meetups&lt;/em&gt; na sua cidade. Esta é ferramenta de colaboração pode contribuir com o desenvolvimento da comunidade trazendo benefícios a todos.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simples modal com CSS responsivo</title>
      <link>http://tableless.com.br/simples-modal-com-css-responsivo/</link>
      <pubDate>Wed, 21 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/simples-modal-com-css-responsivo/</guid>
      <description>

&lt;p&gt;Continuando com os artigos, vamos utilizar novamente os seletores de css para exibir nosso modal.&lt;/p&gt;

&lt;p&gt;Se você chegou aqui e não viu os posts anteriores, para conhecer a estrutura inicial acesse os links:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/header-responsivo-somente-com-css/&#34; target=&#34;_blank&#34;&gt;Header responsivo somente com css&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/destaques-responsivos/&#34; target=&#34;_blank&#34;&gt;Destaques responsivos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;De uma maneira bem simples veja como preparar seu html e css.&lt;/p&gt;

&lt;h2 id=&#34;o-label&#34;&gt;O LABEL&lt;/h2&gt;

&lt;p&gt;Com os destaques responsivos, vamos adicionar abaixo da descrição um label que terá a função de marcar o checkbox e por css iremos exibir o modal.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;highlights&#34;&amp;gt;
&amp;nbsp; &amp;lt;input type=&#34;radio&#34; id=&#34;radio-img1&#34; name=&#34;highlights&#34; checked=&#34;checked&#34; /&amp;gt;
&amp;nbsp; &amp;lt;div class=&#34;highlights-item&#34;&amp;gt;
&amp;nbsp; &amp;nbsp; &amp;lt;img src=&#34;assets/images/chaves.jpg&#34; /&amp;gt;
&amp;nbsp; &amp;nbsp; &amp;lt;p&amp;gt;Olha o Chaves sorrindo&amp;lt;/p&amp;gt;
&amp;nbsp; &amp;nbsp; &amp;lt;label class=&#34;highlights-button&#34; for=&#34;modal-chaves&#34;&amp;gt;Ver fotos do Chaves&amp;lt;/label&amp;gt;
&amp;nbsp; &amp;lt;/div&amp;gt;
&amp;nbsp;&amp;nbsp;
&amp;nbsp; ...
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;h2 id=&#34;o-css-do-botão&#34;&gt;O CSS DO BOTÃO&lt;/h2&gt;

&lt;p&gt;Vamos formatar o label para ser o nosso botão, lembrando que sempre precisamos usar a propriedade &amp;#8220;for&amp;#8221; para marcar o checkbox.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.highlights-button {
  display: inline-block;
  padding: 10px 15px 8px;
  cursor: pointer;
  border-radius: 3px;
  border: 1px solid #ccc;
  background-color: #ececec;
  -webkit-transition: background-color 300ms ease-in-out, border-color 300ms ease-in-out;
  transition: background-color 300ms ease-in-out, border-color 300ms ease-in-out;
}
&lt;/pre&gt;

&lt;p&gt;Adicionando o hover:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.highlights-button:hover {
  border: 1px solid #ececec;
  background-color: #ccc;
}
&lt;/pre&gt;

&lt;h2 id=&#34;o-html-do-modal&#34;&gt;O HTML DO MODAL&lt;/h2&gt;

&lt;p&gt;Para um melhor resultado vamos adicionar html antes do &amp;#8220;body&amp;#8221;, mas se quiser aplicar dentro da section sem problemas. Ao aplicar &amp;#8220;position: fixed&amp;#8221; o elemento ignora o &amp;#8220;position&amp;#8221; do pai e respeita o tamanho da janela.&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;input type=&#34;checkbox&#34; id=&#34;modal_chaves&#34; /&amp;gt;
&amp;lt;div class=&#34;modal&#34;&amp;gt;
  &amp;lt;div class=&#34;modal-content&#34;&amp;gt;
    &amp;lt;h4&amp;gt;Foto Grande do Chaves&amp;lt;/h4&amp;gt;
    &amp;lt;img src=&#34;assets/images/chaves-fotos-raras-4.jpg&#34; /&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;label class=&#34;modal-close&#34; for=&#34;modal_chaves&#34;&amp;gt;&amp;lt;/label&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p&gt;No resultado final poderá ver as modais aplicados dentro e fora da section.&lt;/p&gt;

&lt;h2 id=&#34;o-css-do-modal&#34;&gt;O CSS DO MODAL&lt;/h2&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.modal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 10;
  opacity: 0;
  visibility: hidden;
  -webkit-transition: all 0.5s 0.5s ease-in-out;
  transition: all 0.5s 0.5s ease-in-out;
}

.modal-content {
  padding: 10px;
  max-width: 600px;
  min-width: 360px;
  max-height: 85%;
  overflow: auto;
  position: absolute;
  top: 5%;
  left: 50%;
  z-index: 2;
  opacity: 0;
  border-radius: 3px;
  background: #fff;
  -webkit-transform: translate(-50%, 0);
  -ms-transform: translate(-50%, 0);
  transform: translate(-50%, 0);
  -webkit-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
}

.modal-content img {
  display: block;
  width: 100%;
  margin: 10px 0 0;
}

.modal-content p {
  padding-top: 10px;
  text-align: justify;
}&lt;/pre&gt;

&lt;p&gt;Agora formatando a cortina e o botão de fechar que é o label que colocamos depois do conteúdo do modal.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.modal-close {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0,0,0,0.5);
}

.modal-close:after {
  content: &#34;X&#34;;
  float: right;
  margin: 5px 5px 0 0;
  width: 30px;
  height: 30px;
  position: relative;
  z-index: 3;
  text-align: center;
  line-height: 30px;
  cursor: pointer;
  background-color: rgba(255,255,255,0.8);
  border-radius: 20px;
  box-shadow: 0 0 3px #000;
}&lt;/pre&gt;

&lt;p&gt;Agora vamos esconder o checkbox e fazer nosso modal aparecer com &amp;#8220;:checked&amp;#8221; do css3.&lt;/p&gt;

&lt;p&gt;Um pequeno truque ao usar fixed e 50% para top, faz que o checkbox sempre fique no meio da janela evitando rolar a página ao ser selecionado. Se realizar um teste usando o inspect removendo o top: 50% e clicar no terceiro botão irá simular a rolagem.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;input[id*=&#34;modal_&#34;] {
  position: fixed;
  left: -9999px;
  top: 50%;
  opacity: 0;
}

input[id*=&#34;modal_&#34;]:checked + div.modal {
  opacity: 1;
  visibility: visible;
  -webkit-transition-delay: 0s;
  -ms-transition-delay: 0s;
  transition-delay: 0s;
}

input[id*=&#34;modal_&#34;]:checked + div.modal .modal-content {
  opacity: 1;
  -webkit-transform: translate(-50%, 0);
  -ms-transform: translate(-50%, 0);
  transform: translate(-50%, 0);
  -webkit-transition-delay: 0.5s;
  -ms-transition-delay: 0.5s;
  transition-delay: 0.5s;
}&lt;/pre&gt;

&lt;p&gt;Praticamente nosso css já está responsivo, mas vamos adaptar para resoluções menores que 768px.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@media screen and (max-width: 767px) {
  .modal-content {
    padding: 10px 5%;
    min-width: 88%;
  }
}&lt;/pre&gt;

&lt;h2 id=&#34;pronto&#34;&gt;PRONTO&lt;/h2&gt;

&lt;p&gt;Temos um modal responsivo e seu conteúdo pode ser adaptado para qualquer tamanho, desde que faça isso acontecer.&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Veja como ficou o resultado final&#34; href=&#34;http://palloi.github.io/responsive-header-only-css/responsive-modal.html&#34; target=&#34;_blank&#34;&gt;Veja como ficou o resultado final&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;código completo no github&#34; href=&#34;https://github.com/palloi/responsive-header-only-css&#34; target=&#34;_blank&#34;&gt;Veja o código completo no github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;concluindo&#34;&gt;CONCLUINDO&lt;/h2&gt;

&lt;p&gt;Podemos aplicar de várias formas e uma delas é usando o &amp;#8220;:target&amp;#8221;, porém quando temos uma tela muito grande e ao fechar precisamos adicionar o &amp;#8220;#&amp;#8221;, isso faz que a página role para o topo.&lt;/p&gt;

&lt;p&gt;Agora com sua imaginação pode fazer diversas animações para exibir seu modal.&lt;/p&gt;

&lt;p&gt;Espero ter ajudado com a criação de modais só com css.&lt;/p&gt;

&lt;p&gt;Obrigado&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workflow Front-end</title>
      <link>http://tableless.com.br/workflow-front-end/</link>
      <pubDate>Wed, 21 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/workflow-front-end/</guid>
      <description>

&lt;p&gt;O desenvolvimento em html, javascript e CSS é uma forma mágica de se construir um mundo novo a cada linha de código. Os mágicos do front-end precisam de cartolas para que retirem seus coelhos. Essas cartolas e varinhas mágicas devem ser escolhidas a dedo, para que a mágica aconteça de forma suave e agradável à plateia.&lt;/p&gt;

&lt;p&gt;Cada mágico tem sua técnica, portanto o objetivo não é estabelecer um padrão imutável, mas estabelecer diretrizes que possam servir de auxílio a qualquer ilusionista. Vamos entender magia.&lt;/p&gt;

&lt;h2 id=&#34;baralho&#34;&gt;Baralho&lt;/h2&gt;

&lt;p&gt;Todo mágico possui um baralho. Com ele é possível fazer um número imenso de ilusões. Tão versátil quanto um baralho, deve ser o editor de texto a ser usado pelo desenvolvedor.&lt;/p&gt;

&lt;p&gt;Vamos falar de dois editores: Edge Code e Sublime Text.&lt;/p&gt;

&lt;p&gt;O Edge Code tem como objetivo permitir o foco no trabalho, para isso ele tem uma interface propositalmente simples. Uma mágica que adoro nele é poder editar conteúdo de um arquivo por meio de outro com base em uma relação específica – ou seja, tenho no arquivo html uma marcação que faz referência a uma classe CSS, clicando com o botão direito nessa classe e selecionando quick edit podemos editar o CSS do arquivo externo com base no arquivo html. Esse baralho tem muito mais mágicas.&lt;/p&gt;

&lt;p&gt;O Sublime Text tem tantos recursos que possibilitam uma produtividade imensa. Quando você acessa &lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;http://www.sublimetext.com/&lt;/a&gt;, nota-se o foco em mostrar o quão produtivo o Sublime Text é. Uma mágica de produtividade é a possibilidade de selecionar um texto que se repete em um arquivo html por meio da tecla de atalho Ctrl+d e alterar todos ao mesmo tempo. Adoro isso.&lt;/p&gt;

&lt;h2 id=&#34;cartola&#34;&gt;Cartola&lt;/h2&gt;

&lt;p&gt;O NodeJS permite que mágicas que eram feitas somente no palco – navegador –, possam ser feitas atrás das cortinas – servidor. No entanto essas mágicas são cada vez mais complexas, gerando uma dependência de recursos que necessitariam de outra ferramenta mágica para gerenciá-las.&lt;/p&gt;

&lt;p&gt;Essa outra ferramenta mágica é nossa cartola. Dela tiramos tudo que é necessário para fazermos o show. Duas cartolas não podem deixar de serem conhecidas: NPM e Bower.&lt;/p&gt;

&lt;p&gt;O NPM é o que todo gerenciador de dependências precisa ser: instalador de pacotes, gerenciador de versão e gerenciador de dependências.&lt;/p&gt;

&lt;p&gt;O Bower é o que o NPM é, mas para componentes front-end.&lt;/p&gt;

&lt;p&gt;Se este é o cenário, então é bom termos duas cartolas, cada uma fazendo seu tipo de mágica: NPM no desenvolvimento com Grunt, Gulp, JSHint, etc; e Bower para componentes front-end.&lt;/p&gt;

&lt;h2 id=&#34;assistentes&#34;&gt;Assistentes&lt;/h2&gt;

&lt;p&gt;Assistentes de palco são vitais no contexto de muitas mágicas. Além de distrair quem vê o espetáculo, elas embelezam o ambiente. Elas são o CSS da ilusão.&lt;/p&gt;

&lt;p&gt;Frameworks de estilo podem agilizar muito um trabalho, porque muitas das preocupações iniciais do projeto, podem ser deixadas de lado pela adoção de um padrão, que já respondeu a todas elas. Nossas assistentes de palco são: Bootstrap e Pure.&lt;/p&gt;

&lt;p&gt;Bootstrap é de longe a ferramenta mais popular para atribuição de estilo aos projetos. Pontos positivos: variedade de componentes, utilizado por grandes empresas que contribuem com o projeto e boa documentação. Ele é a assistente que sabe como as mágicas são feitas.&lt;/p&gt;

&lt;p&gt;Pure tem como objetivo fornecer estilo totalmente independente de qualquer javascript e de uma maneira muito leve. É uma assistente magrinha que faz seu trabalho bem feito.&lt;/p&gt;

&lt;p&gt;É inquestionável que a aparência faz muita diferença.&lt;/p&gt;

&lt;h2 id=&#34;caixas-e-lâminas&#34;&gt;Caixas e lâminas&lt;/h2&gt;

&lt;p&gt;Na mágica da mulher cortada ao meio, uma mulher entra numa caixa e o mágico enfia uma lâmina no meio da caixa, e ela é separada em duas partes. As mãos, a cabeça e os pés continuam se mexendo. Quando uso pré-processadores CSS me sinto separado um corpo ao meio, mas ao mesmo tempo confiando que ele irá unir as partes e no final teremos um corpo inteiro.&lt;/p&gt;

&lt;p&gt;É claro que escrever CSS puro gerará menos código que o uso errôneo de mixins em SASS. Mas devemos medir a relação de custo e benefício em relação a produtividade (após a curva de aprendizagem ser superada) e qualidade do nosso código, para podermos escolher aquilo que é melhor para o projeto &amp;#8211; espetáculo. Nossas caixas e lâminas para separarem corpos podem ser: LESS e SASS.&lt;/p&gt;

&lt;p&gt;As características da LESS que devem ser sempre destacadas são, em sua maioria, comuns aos pré-processadores. Mas devem ser ditas aqui:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Variáveis: valores que são usados em vários lugares podem ser reutilizados por todo o estilo do projeto, e quando uma alteração for necessária, poderá ser feita com muita facilidade.&lt;/li&gt;
&lt;li&gt;Mixins: servem ao mesmo propósito das variáveis – a reutilização –, mas sendo usadas para classes completas. Podendo incluir uma classe dentro de outra classe, como se fosse uma propriedade.&lt;/li&gt;
&lt;li&gt;Aninhamento: a possibilidade de aninhar seletores dentro de outros seletores é um truque que me encanta muito. Porque ele criará os seletores longos por conta própria e você ficará com o trabalho de apenas construir a hierarquia a seletores por meio de aninhamento.&lt;/li&gt;
&lt;li&gt;Operações: executar operações com propriedades e cores por meio do CSS é tão fora de cogitação que se torna muito surpreendente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SASS faz tudo isso descrito acima, e faz antes de o LESS ter feito. Mas a consideração que deve ser feita é: LESS tem uma sintaxe mais simples, que leva a uma curva de aprendizagem menor, e quando essa curva atinge uma boa inclinação, ela é mais produtiva.&lt;/p&gt;

&lt;h2 id=&#34;automatização&#34;&gt;Automatização&lt;/h2&gt;

&lt;p&gt;Muitas coisas precisam ser feitas, que não necessariamente são observadas, mas tem valor. Isso se aplica a tudo na vida. Montar o palco para o espetáculo, preparar e limpar as ferramentas, checar se tudo está apto para funcionamento, etc. Concatenar arquivos, minificar código, realizar o deploy, etc.&lt;/p&gt;

&lt;p&gt;Estas tarefas podem continuar a serem feitas, mas sem o trabalho que normalmente se tem para as suas execuções. A ferramenta a ser usada neste caso é o Grunt.&lt;/p&gt;

&lt;p&gt;Com o Grunt você pode automatizar tarefas para serem executadas via linha de comando. Basta ter o NodeJS e configurar as tarefas a serem automatizadas.&lt;/p&gt;

&lt;h2 id=&#34;qualidade&#34;&gt;Qualidade&lt;/h2&gt;

&lt;p&gt;Uma mágica bem feita pode ser repetida diversas vezes, e ainda causará boas impressões. Isso se deve a qualidade com que a mágica foi feita. Existe a melhor maneira de executá-la, e quando isso é feito, tudo flui muito bem. Escrever códigos javascript e css com qualidade &amp;#8211; o que inclui boas práticas de sintaxe e construção – é um desafio, porque escrever sem boas práticas também funciona.&lt;/p&gt;

&lt;p&gt;Para verificar a qualidade do nosso código temos: JSLint, JSHint e CSSLint.&lt;/p&gt;

&lt;p&gt;JSLint realiza uma busca com foco em erros de sintaxe e erros estruturais.&lt;/p&gt;

&lt;p&gt;JSHint é um fork do JSLint com uma melhoria que permite customizações, ele permite flexibilidade.&lt;/p&gt;

&lt;p&gt;CSSLint tem o objetivo de verificar além da sintaxe a performance do CSS.&lt;/p&gt;

&lt;h2 id=&#34;enfim&#34;&gt;Enfim&lt;/h2&gt;

&lt;p&gt;Cada mágico tem um conjunto de mágicas que são apresentadas. Mas todos tem o mesmo objetivo: encantar. Todo desenvolvedor precisa encantar a todos para ter seu trabalho reconhecido. Essas ferramentas, e muitas outras, podem fazer a diferença. Então faça a diferença.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Destaques responsivos</title>
      <link>http://tableless.com.br/destaques-responsivos/</link>
      <pubDate>Mon, 29 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/destaques-responsivos/</guid>
      <description>

&lt;p&gt;Hoje criaremos três destaques com um comportamento totalmente responsivo.&lt;/p&gt;

&lt;p&gt;Com um crescimento das SPAs e seguindo o mesmo conceito do artigo anterior, vou passar agora de uma forma simples de como usar, o input radio para transformar nossos destaques em galeria navegável.&lt;/p&gt;

&lt;h2 id=&#34;aproveitando&#34;&gt;Aproveitando&lt;/h2&gt;

&lt;p&gt;Como já temos um header responsivo, vamos continuar com a mesma estrutura até o final dos artigos só com css e html. Se você ainda não viu como criar um &lt;a href=&#34;http://tableless.com.br/header-responsivo-somente-com-css/&#34; title=&#34;Header responsivo somente com css&#34; target=&#34;_blank&#34;&gt;header responsivo, clique aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;o-html&#34;&gt;O HTML&lt;/h2&gt;

&lt;p&gt;Vamos iniciar realocando a foto do Chaves para um novo formato:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;highlights&#34;&amp;gt;
  &amp;lt;div class=&#34;highlights-item&#34;&amp;gt;
    &amp;lt;img src=&#34;assets/images/chaves.jpg&#34; /&amp;gt;
    &amp;lt;p&amp;gt;Olha o Chaves sorrindo&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;

  &amp;lt;div class=&#34;highlights-item&#34;&amp;gt;
    &amp;lt;img src=&#34;assets/images/chaves-2.jpg&#34; /&amp;gt;
    &amp;lt;p&amp;gt;Pensando na Paty&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;

  &amp;lt;div class=&#34;highlights-item&#34;&amp;gt;
    &amp;lt;img src=&#34;assets/images/chaves-3.jpg&#34; /&amp;gt;
    &amp;lt;p&amp;gt;Quero tanto esse sanduiche iche iche&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Temos um simples html para 3 itens, deixei os nome das classes mais compreensível e semântico, observado pelo amigo Shankar.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://palloi.github.io/responsive-header-only-css/demo-only-elements.html&#34; target=&#34;_blank&#34;&gt;Ver demo sem style&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;o-css&#34;&gt;O CSS&lt;/h2&gt;

&lt;p&gt;Sempre pensando no responsivo, vamos deixar nossos itens em % para 3 colunas seguindo dessa forma:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.highlights-item {
  float: left;
  margin: 0 0 0 2%;
  width: 32%;
}

.highlights-item:first-of-type {
  margin-left: 0;
}

.highlights-item img {
  display: block;
  width: 100%;
  margin: 0 0 5px;
}

.highlights-item p {
  font-size: 14px;
  text-align: center;
}
&lt;/pre&gt;

&lt;p&gt;Para cada item apliquei 32% em width + 2% em margin-left, se multiplicarmos por 3 a soma é 102% que passa os 100% representado pelo elemento pai. Por estourar o tamanho do pai o terceiro item sempre cai.&lt;/p&gt;

&lt;p&gt;Então selecionamos o primeiro item para zerar o margin usando o seletor &amp;#8220;:first-of-type&amp;#8221;, por que mais adiante vamos adicionar mais elementos e já evitamos quebrar o css se caso usássemos os &amp;#8220;first-child&amp;#8221;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://palloi.github.io/responsive-header-only-css/demo-basic-highlights.html&#34; target=&#34;_blank&#34;&gt;Ver demo com style&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;o-responsivo&#34;&gt;O RESPONSIVO&lt;/h2&gt;

&lt;p&gt;Já apresentada a forma de como usar os seletores, agora vamos adicionar antes de cada item um input radio, veja:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;highlights&#34;&amp;gt;
  &amp;lt;input type=&#34;radio&#34; id=&#34;radio-img1&#34; name=&#34;highlights&#34; checked=&#34;checked&#34; /&amp;gt;
  &amp;lt;div class=&#34;highlights-item&#34;&amp;gt;
    &amp;lt;img src=&#34;assets/images/chaves.jpg&#34; /&amp;gt;
    &amp;lt;p&amp;gt;Olha o Chaves sorrindo&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
  ...
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;h2 id=&#34;o-css-para-transformar&#34;&gt;O CSS PARA TRANSFORMAR&lt;/h2&gt;

&lt;p&gt;Com o html simples para 3 colunas, vamos transformar em uma galeria suave com o &amp;#8216;media screen&amp;#8217;, &amp;#8216;transition&amp;#8217; e &amp;#8216;transform&amp;#8217;.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@media screen and (max-width: 767px) {
  .highlights-item {
    width: 100%;
    margin-left: 0;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    visibility: hidden;
    -webkit-transition: all 500ms ease-in-out;
    transition: all 500ms ease-in-out;
    -webkit-transform: scale(0.9);
    -ms-transform: scale(0.9);
    transform: scale(0.9);
  }
}
&lt;/pre&gt;

&lt;p&gt;Nesse css deixei todos os itens com &amp;#8216;position absolute&amp;#8217;, mas isso faz que todo o conteúdo abaixo dele suba ocupando seu espaço. Mas como teremos um ativo vamos resolver logo abaixo.&lt;/p&gt;

&lt;p&gt;Importante lembrar que sempre precisamos de um radio marcado com &amp;#8216;checked&amp;#8217;, quando responder ao responsivo teremos sempre um ativo. Para mostrar o item ativo vamos adicionar as seguintes linhas:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;@media screen and (max-width: 767px) {
   /*checked*/
  .highlights input:checked + div {
    position: relative;
    opacity: 1;
    visibility: visible;
    z-index: 1;
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
  }
}
&lt;/pre&gt;

&lt;p&gt;O item que estiver ativo, recebe o &amp;#8216;position relative&amp;#8217; para bloquear sua área e outras propriedades para exibir suavemente.&lt;/p&gt;

&lt;p&gt;Como os type&amp;#8217;s dos input&amp;#8217;s são &amp;#8216;radio&amp;#8217;, teremos somente um &amp;#8216;:checked&amp;#8217; por grupo &amp;#8216;name&amp;#8217;.&lt;/p&gt;

&lt;h2 id=&#34;navegação-com-label&#34;&gt;NAVEGAÇÃO COM LABEL&lt;/h2&gt;

&lt;p&gt;Para selecionar cada radio, precisamos relacionar cada label usando o for e vamos adicionar o seguinte html:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;&amp;lt;div class=&#34;highlights&#34;&amp;gt;
  ...
  &amp;lt;input type=&#34;radio&#34; id=&#34;radio-img3&#34; name=&#34;highlights&#34; /&amp;gt;
  &amp;lt;div class=&#34;highlights-item&#34;&amp;gt;
    ....
  &amp;lt;/div&amp;gt;

  &amp;lt;div class=&#34;highlights-buttons&#34;&amp;gt;
    &amp;lt;label for=&#34;radio-img1&#34;&amp;gt;Image 1&amp;lt;/label&amp;gt;
    &amp;lt;label for=&#34;radio-img2&#34;&amp;gt;Image 2&amp;lt;/label&amp;gt;
    &amp;lt;label for=&#34;radio-img3&#34;&amp;gt;Image 3&amp;lt;/label&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;

&lt;p&gt;Por padrão defino &amp;#8216;display none&amp;#8217; para os botões e com resoluções menores 768px mudamos para &amp;#8216;block&amp;#8217; para exibir.&lt;/p&gt;

&lt;h2 id=&#34;label-e-seu-css&#34;&gt;LABEL E SEU CSS&lt;/h2&gt;

&lt;p&gt;Agora que adicionamos os label&amp;#8217;s que tem a missão dos botões, vamos inserir uma formatação bem simples.&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.highlights-buttons {
  display: none;
  clear: both;
  text-align: center;
}

.highlights-buttons label {
  display: inline-block;
  width: 15px;
  height: 15px;
  margin: 0 10px; 
  border-radius: 10px;
  background-color: #ccc;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  text-indent: -9999px;
  -webkit-transition: background-color 300ms ease-in-out;
  transition: background-color 300ms ease-in-out;
}
/*exibindo os botões*/
@media screen and (max-width: 767px) {
  .highlights-buttons {
    display: block;
  }
}
&lt;/pre&gt;

&lt;p&gt;Estamos falando de css puro e sempre precisamos definir o que vai ser feito, veja como aplicar o label ativo nessa estrutura que criamos:&lt;/p&gt;

&lt;pre class=&#34;lang-css&#34;&gt;.highlights input:nth-of-type(1):checked ~ .highlights-buttons label:nth-child(1),
.highlights input:nth-of-type(2):checked ~ .highlights-buttons label:nth-child(2),
.highlights input:nth-of-type(3):checked ~ .highlights-buttons label:nth-child(3) {
  background-color: #000;
}
&lt;/pre&gt;

&lt;p&gt;Para evitar a repetição manual a cada novo item, se você usa SASS ou LESS vai tirar de letra com alguma função.&lt;/p&gt;

&lt;h2 id=&#34;e-pronto&#34;&gt;E PRONTO&lt;/h2&gt;

&lt;p&gt;Mais uma vez com poucos elementos e css, conseguimos deixar nossos destaques em uma galeria navegável e responsivo.&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Veja como ficou o resultado final&#34; href=&#34;http://palloi.github.io/responsive-header-only-css/responsive-highlights.html&#34; target=&#34;_blank&#34;&gt;Veja como ficou o resultado final&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Código completo no github&#34; href=&#34;https://github.com/palloi/responsive-header-only-css&#34; target=&#34;_blank&#34;&gt;Veja o código completo no github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;concluindo&#34;&gt;CONCLUINDO&lt;/h2&gt;

&lt;p&gt;Existe diversas maneiras de aplicar no css e quantidades de itens, espero que todos possam aproveitar um pouco do que foi apresentado.&lt;/p&gt;

&lt;p&gt;É isso ae pessoal, obrigado&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Em um relacionamento sério com generators front-end – Parte 2</title>
      <link>http://tableless.com.br/em-um-relacionamento-serio-com-generators-front-end-parte-2/</link>
      <pubDate>Wed, 10 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tableless.com.br/em-um-relacionamento-serio-com-generators-front-end-parte-2/</guid>
      <description>

&lt;h1 id=&#34;o-início&#34;&gt;O início&lt;/h1&gt;

&lt;p&gt;O objetivo desse post não é para fazer com que os desenvolvedores só usem esta ferramenta, e sim para apresentar opções de desenvolvimentos ágeis que podem ser úteis no seu dia a dia. É uma ferramenta a qual lhe oferece um stack completo de estrutura de projeto, basta você saber como usar e para que vai usar.&lt;/p&gt;

&lt;h3 id=&#34;o-yeoman&#34;&gt;O Yeoman&lt;/h3&gt;

&lt;p&gt;O Yeoman é considerado uma ferramenta web de andaimes para criação de webapp modernos, nele você consegue montar um esquema de trabalho facilitando seu desenvolvimento. Seu fluxo de trabalho é composto por 3 ferramentas melhorando sua produtividade e satisfação.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;YO &amp;#8211; Conjunto de geradores que nos permite prototipar&lt;/li&gt;
&lt;li&gt;Gruntjs &amp;#8211; Gerencia suas tarefas de forma automatizadas&lt;/li&gt;
&lt;li&gt;Bower &amp;#8211; Gerencia suas dependências aplicadas no projeto&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PS: São ferramentas que por padrão já vem com o Yeoman, porém temos a opção de usar o Gulp para gerenciar nossas tarefas.&lt;/p&gt;

&lt;h3 id=&#34;ta-me-convence&#34;&gt;Ta, me convence!&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/convence.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-46124&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/convence.jpg&#34; alt=&#34;convence&#34; width=&#34;477&#34; height=&#34;275&#34; srcset=&#34;uploads/2014/12/convence.jpg 477w, uploads/2014/12/convence-241x139.jpg 241w, uploads/2014/12/convence-400x230.jpg 400w&#34; sizes=&#34;(max-width: 477px) 100vw, 477px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O Yeoman sendo uma ferramenta completa, pode proporcionar para você formas práticas e ágeis de desenvolvimento com menos tempo e com boa qualidade. Alguns criticam, outros elogiam, mas você só saberá o resultado se positivo ou negativo, quando usar esse brinquedinho.&lt;/p&gt;

&lt;p&gt;Penso o seguinte: Uma ferramenta nova no marcado ou até mesmo uma antiga com novas versões e novas features, precisam ser exploradas para saber o que a mesma pode nos proporcionar. Por isso nunca se intimide com novas tecnologias e sim aproveite para ganhar conhecimentos.&lt;/p&gt;

&lt;h3 id=&#34;dicas-importantes-antes-de-praticar&#34;&gt;Dicas importantes antes de praticar&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/dica.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-46127&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/dica.jpg&#34; alt=&#34;dica&#34; width=&#34;400&#34; height=&#34;245&#34; srcset=&#34;uploads/2014/12/dica.jpg 400w, uploads/2014/12/dica-226x139.jpg 226w&#34; sizes=&#34;(max-width: 400px) 100vw, 400px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Antes de mais nada já saiba que não ter medo do terminal é um diferencial. Sacanagem Hahaha. Mas é importante saber que a maioria das configurações e monitoramento serão via terminal, por isso é bom entender e interpretar cada linha de comando digitada.&lt;/p&gt;

&lt;p&gt;Lembrando que para usar o Yeoman é preciso ter Nodejs instalado em sua máquina, por isso se você não tem essa plataforma, baixe &lt;a href=&#34;http://nodejs.org/download/&#34;&gt;aqui&lt;/a&gt;, instale e parte para a próxima etapa. Após a instalação do nodejs o resto é mágica!&lt;/p&gt;

&lt;p&gt;Uma observação válida a ser feita é o seguinte: Você que desenvolve com Mac OS ou Linux *-* por padrão já vem instalado o Ruby e para quem desenvolve em windows é preciso instalar os dois: Nodejs e Ruby. Você pode baixar o ruby bem &lt;a href=&#34;https://www.ruby-lang.org/pt/downloads/&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;vendo-teorias-na-prática&#34;&gt;Vendo teorias na prática&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/vendo-tv.jpg&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-46128&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/vendo-tv.jpg&#34; alt=&#34;vendo-tv&#34; width=&#34;381&#34; height=&#34;315&#34; srcset=&#34;uploads/2014/12/vendo-tv.jpg 381w, uploads/2014/12/vendo-tv-168x139.jpg 168w&#34; sizes=&#34;(max-width: 381px) 100vw, 381px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Conforme comentado acima, precisa ter nodejs instalado, por isso instale e após a instalação seguia os passos seguintes.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Digite o código abaixo via linha de comando na raiz do seu projeto. O mesmo instala o Yo, Gruntjs e Bower de forma global, podendo usar também Gulp. &lt;pre class=&#34;lang-html&#34;&gt;npm install -g yo grunt-cli bower&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Instale o generator da aplicação, nesse caso o generator escolhido para uso é o &amp;#8220;webapp&amp;#8221;. &lt;pre class=&#34;lang-html&#34;&gt;npm install generator-webapp&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Inicie a aplicação com YO. &lt;pre class=&#34;lang-html&#34;&gt;yo webapp&lt;/pre&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;O comando &amp;#8220;generator-webapp&amp;#8221; é o gerador de aplicações web padrão que será um projeto contendo HTML5 Boilerplate , jQuery , Modernizr e Bootstrap . Você vai ter uma opção durante as instruções interativas para não incluir muitos destes.&lt;/p&gt;

&lt;h3 id=&#34;mas-o-que-vem-depois&#34;&gt;Mas o que vem depois?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/01.jpg&#34;&gt;&lt;img class=&#34;alignnone  wp-image-46228&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/01.jpg&#34; alt=&#34;01&#34; width=&#34;338&#34; height=&#34;190&#34; srcset=&#34;uploads/2014/12/01.jpg 400w, uploads/2014/12/01-247x139.jpg 247w&#34; sizes=&#34;(max-width: 338px) 100vw, 338px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Após o processo de instalação seguida passo a passo, a ferramenta já pode ser usada para criar suas aplicações. Você vai perceber que o YO já te retorna uma estrutura de pasta bem completa com tudo que você precisa e ainda alguns recursos a mais. Veja abaixo!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/estrutura-raiz.jpg&#34;&gt;&lt;img class=&#34;alignnone  wp-image-46230&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/estrutura-raiz.jpg&#34; alt=&#34;estrutura raiz&#34; width=&#34;193&#34; height=&#34;269&#34; srcset=&#34;uploads/2014/12/estrutura-raiz.jpg 233w, uploads/2014/12/estrutura-raiz-99x139.jpg 99w&#34; sizes=&#34;(max-width: 193px) 100vw, 193px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Analisando a estrutura, digo o seguinte:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A pasta &lt;strong&gt;app&lt;/strong&gt; é onde vai rodar toda sua aplicação em modo de desenvolvimento. É lá que você cria seus arquivos HTML / CSS / JavaScript e entre outros. Mas essa pasta vamos ver com detalhes já já.&lt;/li&gt;
&lt;li&gt;A pasta &lt;strong&gt;bower_componnets&lt;/strong&gt; é criada pelo bower, onde você vai baixar e usar componentes como bootstrap, AngularJS, Backbone e entre outros e por padrão ele já traz o jQuery para você. Caso você não goste do nome “bower_componentes” você tem a opção de criar uma pasta como “libs” ou “componentes” e apontar seus componentes baixados para está nova pasta, só precisa criar um arquivo “.bowerrc” e lá você aponta para tal pasta. Exemplo: { app/libs ou app/componentes }&lt;/li&gt;
&lt;li&gt;A pasta &lt;strong&gt;node_modules&lt;/strong&gt; são os módulos instalados pelo nodejs, lá você vai ver alguns plugins do Gruntjs instalados por padrão, podendo ainda instalar outros plugins.&lt;/li&gt;
&lt;li&gt;Os arquivos &lt;strong&gt;Gruntfile&lt;/strong&gt; e &lt;strong&gt;Bower.json&lt;/strong&gt; são de configurações de componentes, onde o Gruntfile armazena todas as tarefas automatizadas do gruntjs como: minificação, compilação e otimização. Já o bower.json é um arquivo simples que retorna dados importantes dos componentes gerenciados no bower e armazena os componentes usados e suas versões.&lt;/li&gt;
&lt;li&gt;Os outros arquivos são de configuração da ferramenta, incluindo os arquivos ocultos.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;a-tal-pasta-app-da-minha-aplicação&#34;&gt;A tal pasta APP da minha aplicação&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/02.jpg&#34;&gt;&lt;img class=&#34;alignnone  wp-image-46231&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/02.jpg&#34; alt=&#34;02&#34; width=&#34;355&#34; height=&#34;239&#34; srcset=&#34;uploads/2014/12/02.jpg 425w, uploads/2014/12/02-206x139.jpg 206w, uploads/2014/12/02-400x269.jpg 400w&#34; sizes=&#34;(max-width: 355px) 100vw, 355px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enfim chegamos a pasta de desenvolvimento, é aqui que começa toda a sua aplicação, você não precisa mexer em nenhuma outra pasta, tudo que você precisa mexer e criar vai ser dentro deste diretório, beleza? Veja como funciona a estrutura da pasta e logo após vamos ver funcionando e depois daremos o &lt;strong&gt;build&lt;/strong&gt; *-*&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/estrutura-app.jpg&#34;&gt;&lt;img class=&#34;alignnone  wp-image-46232&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/estrutura-app.jpg&#34; alt=&#34;estrutura-app&#34; width=&#34;134&#34; height=&#34;277&#34; srcset=&#34;uploads/2014/12/estrutura-app.jpg 154w, uploads/2014/12/estrutura-app-67x139.jpg 67w&#34; sizes=&#34;(max-width: 134px) 100vw, 134px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Acredito que detalhar essa estrutura não tem tanta necessidade, pois as pastas e arquivos já falam por si, não é mesmo? Mas qualquer dúvida pode deixar seu comentário que responderei com prazer.&lt;/p&gt;

&lt;p&gt;Bom, você já instalou as ferramentas (Yo/Gruntjs/bower), já instalou o generator que será usado (generator-webapp) e executou o “yo” que retornou essa estrutura de pasta. Agora para ver como funciona é simples. Execute o comando abaixo, ele vai criar um server local para você ir debugando sua aplicação e vendo como ela está se comportanto no browser e o mais legal é que você não precisa dar F5, pois por padrão já vem instalado o “livereload” plugin do grunt que atualiza automaticamente sua aplicação no browser  =)&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;grunt server&lt;/pre&gt;

&lt;p&gt;Após isso você criar sua aplicação normalmente, usando como ponto de partida o arquivo index.html e os diretórios presentes.&lt;/p&gt;

&lt;h3 id=&#34;e-se-eu-quiser-baixar-outros-componentes-e-plugins&#34;&gt;*&lt;strong&gt;&lt;em&gt;&lt;em&gt;E se eu quiser baixar outros componentes e plugins?&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt;*&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/03.jpg&#34;&gt;&lt;img class=&#34;alignnone  wp-image-46233&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/03.jpg&#34; alt=&#34;03&#34; width=&#34;335&#34; height=&#34;216&#34; srcset=&#34;uploads/2014/12/03.jpg 400w, uploads/2014/12/03-215x139.jpg 215w&#34; sizes=&#34;(max-width: 335px) 100vw, 335px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;É uma boa pergunta e simples de responder. Para baixar outro componente como por exemplo AngularJS vamos usar o Bower, nosso gerenciador de componentes. E para baixar um novo plugin como por exemplo JSHINT vamos usar o Gruntjs que gerencia nossas tarefas. Os comandos abaixo mostra como baixar componentes e plugins.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Baixando componentes&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&#34;lang-html&#34;&gt;bower install [nome do componente]&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Baixando plugins&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&#34;lang-html&#34;&gt;npm install [nome do plugin] --save-dev&lt;/pre&gt;

&lt;h3 id=&#34;e-meu-ambiente-de-produção&#34;&gt;E meu ambiente de produção?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://tableless.com.br/wp-content/uploads/2014/12/04.jpg&#34;&gt;&lt;img class=&#34;alignnone  wp-image-46234&#34; src=&#34;http://tableless.com.br/wp-content/uploads/2014/12/04.jpg&#34; alt=&#34;04&#34; width=&#34;363&#34; height=&#34;252&#34; srcset=&#34;uploads/2014/12/04.jpg 392w, uploads/2014/12/04-200x139.jpg 200w&#34; sizes=&#34;(max-width: 363px) 100vw, 363px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chegamos ao nosso momento de build da aplicação. O yeoman compila todos os arquivos da pasta app e nos retorna uma pasta chamada “dist” é lá que encontram seus arquivos de produção prontos para serem usados e testados. Lembrando que qualquer alteração não poderá ser feita na pasta “dist” e sim em “app”.&lt;/p&gt;

&lt;p&gt;Dando o build no projeto e gerando meu diretório de produção:&lt;/p&gt;

&lt;pre class=&#34;lang-html&#34;&gt;grunt build&lt;/pre&gt;

&lt;h3 id=&#34;visão-geral&#34;&gt;Visão geral&lt;/h3&gt;

&lt;p&gt;Hoje aprendemos realmente a usar o yeoman, desde seus conceitos até o modo de produção, é só seguir os passos e dicas. E por falar em dica, lá vai uma dica para melhorar mais ainda a sua transferência de arquivos para o ambiente de produção.&lt;/p&gt;

&lt;p&gt;Ao dar o build ele gera o diretório “dist” contendo nele os arquivos de produção. Já que estamos automatizando tudo, evite o uso do FTP e sim faça deploy =) Abaixo segue algumas referências de um módulo do grunt que você pode acrescentar em sua aplicação e deixá-la mais interessante. Assim você miniminiza retrabalhos. Estou falando de [rsync][12].&lt;/p&gt;

&lt;p&gt;Links de referência Yeoman que podem complementar o Post&lt;/p&gt;

&lt;p&gt;&amp;#8211; &lt;a href=&#34;http://yeoman.io/&#34;&gt;Site oficial do yeoman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8211; &lt;a href=&#34;https://github.com/yeoman/yeoman&#34;&gt;Projeto yeoman no github para contribuição&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8211; &lt;a href=&#34;http://blog.caelum.com.br/experimente-o-yeoman-em-seu-workflow-de-projetos-front-end/&#34;&gt;Outro Post de referência explicativo e conceitual&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8211; &lt;a href=&#34;http://pt.slideshare.net/pedropolisenso/em-um-relacionamento-srio-com-generators-front-end&#34;&gt;Palestra sobre generators (yeoman)&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;considerações-finais&#34;&gt;Considerações finais&lt;/h3&gt;

&lt;p&gt;Chegamos ao final desse capítulo tentando expor as qualidades que o Yeoman pode nos dar e sua forma de uso. No próximo capítulo teremos nosso amigo Beto Muniz (&lt;a href=&#34;https://twitter.com/obetomuniz&#34;&gt;@obetomuniz&lt;/a&gt;) falando sobre Slush dentro da série. Não perca os próximos capítulos da série, onde no 4º capítulo finalizaremos com algumas dicas, apresentaremos projetos que foram criados a parir de um desses generators e mostrar como criar seu próprio generator. Valeu =]&lt;/p&gt;

&lt;p&gt;[12]: Ao%20dar o build ele gera o diretório “dist” contendo nele os arquivos de produção. Já que estamos automatizando tudo, jamais em toda sua vida use FTP e sim faça deploy =) Abaixo segue algumas referências de um módulo do grunt que você pode acrescentar em sua aplicação e deixá-la mais interessante. Assim você miniminiza retrabalhos. Estou falando de rsync&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>